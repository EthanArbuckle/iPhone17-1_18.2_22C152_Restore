unint64_t sub_1DCAB14BC()
{
  unint64_t result;

  result = qword_1EAAA7A50;
  if (!qword_1EAAA7A50)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A50);
  }
  return result;
}

unint64_t sub_1DCAB1508()
{
  unint64_t result = qword_1EAAA7A58;
  if (!qword_1EAAA7A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A58);
  }
  return result;
}

unint64_t sub_1DCAB1554()
{
  unint64_t result = qword_1EAAA7A60;
  if (!qword_1EAAA7A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A60);
  }
  return result;
}

unint64_t sub_1DCAB15A0()
{
  unint64_t result = qword_1EAAA7A68;
  if (!qword_1EAAA7A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A68);
  }
  return result;
}

unint64_t sub_1DCAB15EC()
{
  unint64_t result = qword_1EAAA7A70;
  if (!qword_1EAAA7A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A70);
  }
  return result;
}

unint64_t sub_1DCAB1638()
{
  unint64_t result = qword_1EAAA7A78;
  if (!qword_1EAAA7A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A78);
  }
  return result;
}

unint64_t sub_1DCAB1684()
{
  unint64_t result = qword_1EAAA7A80;
  if (!qword_1EAAA7A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A80);
  }
  return result;
}

unint64_t sub_1DCAB16D0()
{
  unint64_t result = qword_1EAAA7A88;
  if (!qword_1EAAA7A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A88);
  }
  return result;
}

unint64_t sub_1DCAB171C()
{
  unint64_t result = qword_1EAAA7A90;
  if (!qword_1EAAA7A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A90);
  }
  return result;
}

unint64_t sub_1DCAB1768()
{
  unint64_t result = qword_1EAAA7A98;
  if (!qword_1EAAA7A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A98);
  }
  return result;
}

unint64_t sub_1DCAB17B4()
{
  unint64_t result = qword_1EAAA7AA0;
  if (!qword_1EAAA7AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AA0);
  }
  return result;
}

unint64_t sub_1DCAB1800()
{
  unint64_t result = qword_1EAAA7AA8;
  if (!qword_1EAAA7AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AA8);
  }
  return result;
}

unint64_t sub_1DCAB184C()
{
  unint64_t result = qword_1EAAA7AB0;
  if (!qword_1EAAA7AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AB0);
  }
  return result;
}

unint64_t sub_1DCAB1898()
{
  unint64_t result = qword_1EAAA7AB8;
  if (!qword_1EAAA7AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AB8);
  }
  return result;
}

unint64_t sub_1DCAB18E4()
{
  unint64_t result = qword_1EAAA7AC0;
  if (!qword_1EAAA7AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AC0);
  }
  return result;
}

unint64_t sub_1DCAB1930()
{
  unint64_t result = qword_1EAAA7AC8;
  if (!qword_1EAAA7AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AC8);
  }
  return result;
}

unint64_t sub_1DCAB197C()
{
  unint64_t result = qword_1EAAA7AD0;
  if (!qword_1EAAA7AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AD0);
  }
  return result;
}

unint64_t sub_1DCAB19C8()
{
  unint64_t result = qword_1EAAA7AD8;
  if (!qword_1EAAA7AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AD8);
  }
  return result;
}

unint64_t sub_1DCAB1A14()
{
  unint64_t result = qword_1EAAA7AE0;
  if (!qword_1EAAA7AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AE0);
  }
  return result;
}

unint64_t sub_1DCAB1A60()
{
  unint64_t result = qword_1EAAA7AE8;
  if (!qword_1EAAA7AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AE8);
  }
  return result;
}

unint64_t sub_1DCAB1AAC()
{
  unint64_t result = qword_1EAAA7AF0;
  if (!qword_1EAAA7AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AF0);
  }
  return result;
}

unint64_t sub_1DCAB1AF8()
{
  unint64_t result = qword_1EAAA7AF8;
  if (!qword_1EAAA7AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7AF8);
  }
  return result;
}

unint64_t sub_1DCAB1B44()
{
  unint64_t result = qword_1EAAA7B00;
  if (!qword_1EAAA7B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B00);
  }
  return result;
}

unint64_t sub_1DCAB1B90()
{
  unint64_t result = qword_1EAAA7B08;
  if (!qword_1EAAA7B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B08);
  }
  return result;
}

unint64_t sub_1DCAB1BDC()
{
  unint64_t result = qword_1EAAA7B10;
  if (!qword_1EAAA7B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B10);
  }
  return result;
}

unint64_t sub_1DCAB1C28()
{
  unint64_t result = qword_1EAAA7B18;
  if (!qword_1EAAA7B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B18);
  }
  return result;
}

unint64_t sub_1DCAB1C74()
{
  unint64_t result = qword_1EAAA7B20;
  if (!qword_1EAAA7B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B20);
  }
  return result;
}

unint64_t sub_1DCAB1CC0()
{
  unint64_t result = qword_1EAAA7B28;
  if (!qword_1EAAA7B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B28);
  }
  return result;
}

unint64_t sub_1DCAB1D0C()
{
  unint64_t result = qword_1EAAA7B30;
  if (!qword_1EAAA7B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B30);
  }
  return result;
}

unint64_t sub_1DCAB1D58()
{
  unint64_t result = qword_1EAAA7B38;
  if (!qword_1EAAA7B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B38);
  }
  return result;
}

unint64_t sub_1DCAB1DA4()
{
  unint64_t result = qword_1EAAA7B40;
  if (!qword_1EAAA7B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B40);
  }
  return result;
}

unint64_t sub_1DCAB1DF0()
{
  unint64_t result = qword_1EAAA7B48;
  if (!qword_1EAAA7B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B48);
  }
  return result;
}

unint64_t sub_1DCAB1E3C()
{
  unint64_t result = qword_1EAAA7B50;
  if (!qword_1EAAA7B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B50);
  }
  return result;
}

unint64_t sub_1DCAB1E88()
{
  unint64_t result = qword_1EAAA7B58;
  if (!qword_1EAAA7B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B58);
  }
  return result;
}

unint64_t sub_1DCAB1ED4()
{
  unint64_t result = qword_1EAAA7B60;
  if (!qword_1EAAA7B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7B60);
  }
  return result;
}

uint64_t _s13SoundAnalysis11StaticAssetO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xD5)
  {
    if (a2 + 43 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 43) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 44;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2C;
  int v5 = v6 - 44;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s13SoundAnalysis11StaticAssetO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 43 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 43) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD4)
  {
    unsigned int v6 = ((a2 - 213) >> 8) + 1;
    *unint64_t result = a2 + 43;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAB2074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 43;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAsset.CodingKeys()
{
  return &type metadata for StaticAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintKEmbeddingE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintKEmbeddingE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintAEmbeddingE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintAEmbeddingE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SmokeAlarmDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SmokeAlarmDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.ApplianceDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.ApplianceDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DistressedBabyDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DistressedBabyDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.BeepDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.BeepDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.BuzzerDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.BuzzerDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.CarHornDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.CarHornDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.CatMeowDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.CatMeowDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.CoughDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.CoughDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DingBellDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DingBellDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DogBarkDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DogBarkDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DoorBellDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DoorBellDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.DoorKnockDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.DoorKnockDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.FireAlarmDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.FireAlarmDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.GlassBreakingDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.GlassBreakingDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.KettleWhistlingDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.KettleWhistlingDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.ShoutDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.ShoutDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SirenAlarmDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SirenAlarmDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.WaterRunningDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.WaterRunningDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundActionsE5RTCodingKeys()
{
  return &type metadata for StaticAsset.SoundActionsE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishEmbeddingCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishEmbeddingCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishApplauseDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishApplauseDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishBabbleDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishBabbleDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishCheeringDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishCheeringDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishLaughterDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishLaughterDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishMusicDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishMusicDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.VggishSpeechDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.VggishSpeechDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintALaughterDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintALaughterDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintAShoutingDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintAShoutingDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintASpeechDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintASpeechDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintASmokeAlarmDetectorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintASmokeAlarmDetectorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.FirstPassSoundPrintSmokeAlarmDetectorE5RTCodingKeys()
{
  return &type metadata for StaticAsset.FirstPassSoundPrintSmokeAlarmDetectorE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintAEmbeddingCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintAEmbeddingCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundPrintKEmbeddingCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundPrintKEmbeddingCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.SoundClassifierVersion1CoreMLCodingKeys()
{
  return &type metadata for StaticAsset.SoundClassifierVersion1CoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.IndoorOutdoorCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.IndoorOutdoorCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.AudioQualityCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.AudioQualityCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.CustomSoundE5RTCodingKeys()
{
  return &type metadata for StaticAsset.CustomSoundE5RTCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.LanguageAlignedAudioEncoderCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.LanguageAlignedAudioEncoderCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.LanguageAlignedAVFuserCoreMLCodingKeys()
{
  return &type metadata for StaticAsset.LanguageAlignedAVFuserCoreMLCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.PpdEmbeddingCodingKeys()
{
  return &type metadata for StaticAsset.PpdEmbeddingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.PpdDetectorCodingKeys()
{
  return &type metadata for StaticAsset.PpdDetectorCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAsset.MicroSoundPrintClassifierCodingKeys()
{
  return &type metadata for StaticAsset.MicroSoundPrintClassifierCodingKeys;
}

unint64_t sub_1DCAB2370()
{
  unint64_t result = qword_1EAAA7CD0;
  if (!qword_1EAAA7CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7CD0);
  }
  return result;
}

unint64_t sub_1DCAB23C0()
{
  unint64_t result = qword_1EAAA7CD8;
  if (!qword_1EAAA7CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7CD8);
  }
  return result;
}

unint64_t sub_1DCAB2410()
{
  unint64_t result = qword_1EAAA7CE0;
  if (!qword_1EAAA7CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7CE0);
  }
  return result;
}

unint64_t sub_1DCAB2460()
{
  unint64_t result = qword_1EAAA7CE8;
  if (!qword_1EAAA7CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7CE8);
  }
  return result;
}

unint64_t sub_1DCAB24B0()
{
  unint64_t result = qword_1EAAA7CF0;
  if (!qword_1EAAA7CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7CF0);
  }
  return result;
}

unint64_t sub_1DCAB2500()
{
  unint64_t result = qword_1EAAA7CF8;
  if (!qword_1EAAA7CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7CF8);
  }
  return result;
}

unint64_t sub_1DCAB2550()
{
  unint64_t result = qword_1EAAA7D00;
  if (!qword_1EAAA7D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D00);
  }
  return result;
}

unint64_t sub_1DCAB25A0()
{
  unint64_t result = qword_1EAAA7D08;
  if (!qword_1EAAA7D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D08);
  }
  return result;
}

unint64_t sub_1DCAB25F0()
{
  unint64_t result = qword_1EAAA7D10;
  if (!qword_1EAAA7D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D10);
  }
  return result;
}

unint64_t sub_1DCAB2640()
{
  unint64_t result = qword_1EAAA7D18;
  if (!qword_1EAAA7D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D18);
  }
  return result;
}

unint64_t sub_1DCAB2690()
{
  unint64_t result = qword_1EAAA7D20;
  if (!qword_1EAAA7D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D20);
  }
  return result;
}

unint64_t sub_1DCAB26E0()
{
  unint64_t result = qword_1EAAA7D28;
  if (!qword_1EAAA7D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D28);
  }
  return result;
}

unint64_t sub_1DCAB2730()
{
  unint64_t result = qword_1EAAA7D30;
  if (!qword_1EAAA7D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D30);
  }
  return result;
}

unint64_t sub_1DCAB2780()
{
  unint64_t result = qword_1EAAA7D38;
  if (!qword_1EAAA7D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D38);
  }
  return result;
}

unint64_t sub_1DCAB27D0()
{
  unint64_t result = qword_1EAAA7D40;
  if (!qword_1EAAA7D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D40);
  }
  return result;
}

unint64_t sub_1DCAB2820()
{
  unint64_t result = qword_1EAAA7D48;
  if (!qword_1EAAA7D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D48);
  }
  return result;
}

unint64_t sub_1DCAB2870()
{
  unint64_t result = qword_1EAAA7D50;
  if (!qword_1EAAA7D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D50);
  }
  return result;
}

unint64_t sub_1DCAB28C0()
{
  unint64_t result = qword_1EAAA7D58;
  if (!qword_1EAAA7D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D58);
  }
  return result;
}

unint64_t sub_1DCAB2910()
{
  unint64_t result = qword_1EAAA7D60;
  if (!qword_1EAAA7D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D60);
  }
  return result;
}

unint64_t sub_1DCAB2960()
{
  unint64_t result = qword_1EAAA7D68;
  if (!qword_1EAAA7D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D68);
  }
  return result;
}

unint64_t sub_1DCAB29B0()
{
  unint64_t result = qword_1EAAA7D70;
  if (!qword_1EAAA7D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D70);
  }
  return result;
}

unint64_t sub_1DCAB2A00()
{
  unint64_t result = qword_1EAAA7D78;
  if (!qword_1EAAA7D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D78);
  }
  return result;
}

unint64_t sub_1DCAB2A50()
{
  unint64_t result = qword_1EAAA7D80;
  if (!qword_1EAAA7D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D80);
  }
  return result;
}

unint64_t sub_1DCAB2AA0()
{
  unint64_t result = qword_1EAAA7D88;
  if (!qword_1EAAA7D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D88);
  }
  return result;
}

unint64_t sub_1DCAB2AF0()
{
  unint64_t result = qword_1EAAA7D90;
  if (!qword_1EAAA7D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D90);
  }
  return result;
}

unint64_t sub_1DCAB2B40()
{
  unint64_t result = qword_1EAAA7D98;
  if (!qword_1EAAA7D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7D98);
  }
  return result;
}

unint64_t sub_1DCAB2B90()
{
  unint64_t result = qword_1EAAA7DA0;
  if (!qword_1EAAA7DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DA0);
  }
  return result;
}

unint64_t sub_1DCAB2BE0()
{
  unint64_t result = qword_1EAAA7DA8;
  if (!qword_1EAAA7DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DA8);
  }
  return result;
}

unint64_t sub_1DCAB2C30()
{
  unint64_t result = qword_1EAAA7DB0;
  if (!qword_1EAAA7DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DB0);
  }
  return result;
}

unint64_t sub_1DCAB2C80()
{
  unint64_t result = qword_1EAAA7DB8;
  if (!qword_1EAAA7DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DB8);
  }
  return result;
}

unint64_t sub_1DCAB2CD0()
{
  unint64_t result = qword_1EAAA7DC0;
  if (!qword_1EAAA7DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DC0);
  }
  return result;
}

unint64_t sub_1DCAB2D20()
{
  unint64_t result = qword_1EAAA7DC8;
  if (!qword_1EAAA7DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DC8);
  }
  return result;
}

unint64_t sub_1DCAB2D70()
{
  unint64_t result = qword_1EAAA7DD0;
  if (!qword_1EAAA7DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DD0);
  }
  return result;
}

unint64_t sub_1DCAB2DC0()
{
  unint64_t result = qword_1EAAA7DD8;
  if (!qword_1EAAA7DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DD8);
  }
  return result;
}

unint64_t sub_1DCAB2E10()
{
  unint64_t result = qword_1EAAA7DE0;
  if (!qword_1EAAA7DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DE0);
  }
  return result;
}

unint64_t sub_1DCAB2E60()
{
  unint64_t result = qword_1EAAA7DE8;
  if (!qword_1EAAA7DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DE8);
  }
  return result;
}

unint64_t sub_1DCAB2EB0()
{
  unint64_t result = qword_1EAAA7DF0;
  if (!qword_1EAAA7DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DF0);
  }
  return result;
}

unint64_t sub_1DCAB2F00()
{
  unint64_t result = qword_1EAAA7DF8;
  if (!qword_1EAAA7DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7DF8);
  }
  return result;
}

unint64_t sub_1DCAB2F50()
{
  unint64_t result = qword_1EAAA7E00;
  if (!qword_1EAAA7E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E00);
  }
  return result;
}

unint64_t sub_1DCAB2FA0()
{
  unint64_t result = qword_1EAAA7E08;
  if (!qword_1EAAA7E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E08);
  }
  return result;
}

unint64_t sub_1DCAB2FF0()
{
  unint64_t result = qword_1EAAA7E10;
  if (!qword_1EAAA7E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E10);
  }
  return result;
}

unint64_t sub_1DCAB3040()
{
  unint64_t result = qword_1EAAA7E18;
  if (!qword_1EAAA7E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E18);
  }
  return result;
}

unint64_t sub_1DCAB3090()
{
  unint64_t result = qword_1EAAA7E20;
  if (!qword_1EAAA7E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E20);
  }
  return result;
}

unint64_t sub_1DCAB30E0()
{
  unint64_t result = qword_1EAAA7E28;
  if (!qword_1EAAA7E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E28);
  }
  return result;
}

unint64_t sub_1DCAB3130()
{
  unint64_t result = qword_1EAAA7E30;
  if (!qword_1EAAA7E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E30);
  }
  return result;
}

unint64_t sub_1DCAB3180()
{
  unint64_t result = qword_1EAAA7E38;
  if (!qword_1EAAA7E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E38);
  }
  return result;
}

unint64_t sub_1DCAB31D0()
{
  unint64_t result = qword_1EAAA7E40;
  if (!qword_1EAAA7E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E40);
  }
  return result;
}

unint64_t sub_1DCAB3220()
{
  unint64_t result = qword_1EAAA7E48;
  if (!qword_1EAAA7E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E48);
  }
  return result;
}

unint64_t sub_1DCAB3270()
{
  unint64_t result = qword_1EAAA7E50;
  if (!qword_1EAAA7E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E50);
  }
  return result;
}

unint64_t sub_1DCAB32C0()
{
  unint64_t result = qword_1EAAA7E58;
  if (!qword_1EAAA7E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E58);
  }
  return result;
}

unint64_t sub_1DCAB3310()
{
  unint64_t result = qword_1EAAA7E60;
  if (!qword_1EAAA7E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E60);
  }
  return result;
}

unint64_t sub_1DCAB3360()
{
  unint64_t result = qword_1EAAA7E68;
  if (!qword_1EAAA7E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E68);
  }
  return result;
}

unint64_t sub_1DCAB33B0()
{
  unint64_t result = qword_1EAAA7E70;
  if (!qword_1EAAA7E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E70);
  }
  return result;
}

unint64_t sub_1DCAB3400()
{
  unint64_t result = qword_1EAAA7E78;
  if (!qword_1EAAA7E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E78);
  }
  return result;
}

unint64_t sub_1DCAB3450()
{
  unint64_t result = qword_1EAAA7E80;
  if (!qword_1EAAA7E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E80);
  }
  return result;
}

unint64_t sub_1DCAB34A0()
{
  unint64_t result = qword_1EAAA7E88;
  if (!qword_1EAAA7E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E88);
  }
  return result;
}

unint64_t sub_1DCAB34F0()
{
  unint64_t result = qword_1EAAA7E90;
  if (!qword_1EAAA7E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E90);
  }
  return result;
}

unint64_t sub_1DCAB3540()
{
  unint64_t result = qword_1EAAA7E98;
  if (!qword_1EAAA7E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7E98);
  }
  return result;
}

unint64_t sub_1DCAB3590()
{
  unint64_t result = qword_1EAAA7EA0;
  if (!qword_1EAAA7EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EA0);
  }
  return result;
}

unint64_t sub_1DCAB35E0()
{
  unint64_t result = qword_1EAAA7EA8;
  if (!qword_1EAAA7EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EA8);
  }
  return result;
}

unint64_t sub_1DCAB3630()
{
  unint64_t result = qword_1EAAA7EB0;
  if (!qword_1EAAA7EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EB0);
  }
  return result;
}

unint64_t sub_1DCAB3680()
{
  unint64_t result = qword_1EAAA7EB8;
  if (!qword_1EAAA7EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EB8);
  }
  return result;
}

unint64_t sub_1DCAB36D0()
{
  unint64_t result = qword_1EAAA7EC0;
  if (!qword_1EAAA7EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EC0);
  }
  return result;
}

unint64_t sub_1DCAB3720()
{
  unint64_t result = qword_1EAAA7EC8;
  if (!qword_1EAAA7EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EC8);
  }
  return result;
}

unint64_t sub_1DCAB3770()
{
  unint64_t result = qword_1EAAA7ED0;
  if (!qword_1EAAA7ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7ED0);
  }
  return result;
}

unint64_t sub_1DCAB37C0()
{
  unint64_t result = qword_1EAAA7ED8;
  if (!qword_1EAAA7ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7ED8);
  }
  return result;
}

unint64_t sub_1DCAB3810()
{
  unint64_t result = qword_1EAAA7EE0;
  if (!qword_1EAAA7EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EE0);
  }
  return result;
}

unint64_t sub_1DCAB3860()
{
  unint64_t result = qword_1EAAA7EE8;
  if (!qword_1EAAA7EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EE8);
  }
  return result;
}

unint64_t sub_1DCAB38B0()
{
  unint64_t result = qword_1EAAA7EF0;
  if (!qword_1EAAA7EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EF0);
  }
  return result;
}

unint64_t sub_1DCAB3900()
{
  unint64_t result = qword_1EAAA7EF8;
  if (!qword_1EAAA7EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7EF8);
  }
  return result;
}

unint64_t sub_1DCAB3950()
{
  unint64_t result = qword_1EAAA7F00;
  if (!qword_1EAAA7F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F00);
  }
  return result;
}

unint64_t sub_1DCAB39A0()
{
  unint64_t result = qword_1EAAA7F08;
  if (!qword_1EAAA7F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F08);
  }
  return result;
}

unint64_t sub_1DCAB39F0()
{
  unint64_t result = qword_1EAAA7F10;
  if (!qword_1EAAA7F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F10);
  }
  return result;
}

unint64_t sub_1DCAB3A40()
{
  unint64_t result = qword_1EAAA7F18;
  if (!qword_1EAAA7F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F18);
  }
  return result;
}

unint64_t sub_1DCAB3A90()
{
  unint64_t result = qword_1EAAA7F20;
  if (!qword_1EAAA7F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F20);
  }
  return result;
}

unint64_t sub_1DCAB3AE0()
{
  unint64_t result = qword_1EAAA7F28;
  if (!qword_1EAAA7F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F28);
  }
  return result;
}

unint64_t sub_1DCAB3B30()
{
  unint64_t result = qword_1EAAA7F30;
  if (!qword_1EAAA7F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F30);
  }
  return result;
}

unint64_t sub_1DCAB3B80()
{
  unint64_t result = qword_1EAAA7F38;
  if (!qword_1EAAA7F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F38);
  }
  return result;
}

unint64_t sub_1DCAB3BD0()
{
  unint64_t result = qword_1EAAA7F40;
  if (!qword_1EAAA7F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F40);
  }
  return result;
}

unint64_t sub_1DCAB3C20()
{
  unint64_t result = qword_1EAAA7F48;
  if (!qword_1EAAA7F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F48);
  }
  return result;
}

unint64_t sub_1DCAB3C70()
{
  unint64_t result = qword_1EAAA7F50;
  if (!qword_1EAAA7F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F50);
  }
  return result;
}

unint64_t sub_1DCAB3CC0()
{
  unint64_t result = qword_1EAAA7F58;
  if (!qword_1EAAA7F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F58);
  }
  return result;
}

unint64_t sub_1DCAB3D10()
{
  unint64_t result = qword_1EAAA7F60;
  if (!qword_1EAAA7F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F60);
  }
  return result;
}

unint64_t sub_1DCAB3D60()
{
  unint64_t result = qword_1EAAA7F68;
  if (!qword_1EAAA7F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F68);
  }
  return result;
}

unint64_t sub_1DCAB3DB0()
{
  unint64_t result = qword_1EAAA7F70;
  if (!qword_1EAAA7F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F70);
  }
  return result;
}

unint64_t sub_1DCAB3E00()
{
  unint64_t result = qword_1EAAA7F78;
  if (!qword_1EAAA7F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F78);
  }
  return result;
}

unint64_t sub_1DCAB3E50()
{
  unint64_t result = qword_1EAAA7F80;
  if (!qword_1EAAA7F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F80);
  }
  return result;
}

unint64_t sub_1DCAB3EA0()
{
  unint64_t result = qword_1EAAA7F88;
  if (!qword_1EAAA7F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F88);
  }
  return result;
}

unint64_t sub_1DCAB3EF0()
{
  unint64_t result = qword_1EAAA7F90;
  if (!qword_1EAAA7F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F90);
  }
  return result;
}

unint64_t sub_1DCAB3F40()
{
  unint64_t result = qword_1EAAA7F98;
  if (!qword_1EAAA7F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7F98);
  }
  return result;
}

unint64_t sub_1DCAB3F90()
{
  unint64_t result = qword_1EAAA7FA0;
  if (!qword_1EAAA7FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7FA0);
  }
  return result;
}

uint64_t sub_1DCAB3FDC()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCAB4004()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCAB4028()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DCAB404C()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DCAB406C()
{
  return v0;
}

uint64_t sub_1DCAB407C()
{
  return v0;
}

uint64_t sub_1DCAB4098()
{
  return v0;
}

uint64_t sub_1DCAB40B0()
{
  return v0;
}

uint64_t sub_1DCAB40C8()
{
  return swift_unexpectedError();
}

uint64_t sub_1DCAB40E8()
{
  return sub_1DCB891E8();
}

BOOL sub_1DCAB4198(double *a1, double *a2)
{
  double v2 = *a1;
  uint64_t v3 = *((void *)a1 + 5);
  double v5 = a1[6];
  double v4 = a1[7];
  double v6 = *a2;
  double v8 = a2[6];
  double v7 = a2[7];
  uint64_t v14 = *((void *)a2 + 5);
  *(double *)v15 = v2;
  *(double *)&v15[1] = a1[1];
  long long v16 = *((_OWORD *)a1 + 1);
  uint64_t v17 = *((void *)a1 + 4);
  uint64_t v18 = v3;
  *(double *)v11 = v6;
  *(double *)&v11[1] = a2[1];
  long long v12 = *((_OWORD *)a2 + 1);
  uint64_t v13 = *((void *)a2 + 4);
  BOOL v9 = static TimeRange.== infix(_:_:)((uint64_t)v15, (uint64_t)v11);
  BOOL result = 0;
  if (v9 && v5 == v8) {
    return v4 == v7;
  }
  return result;
}

uint64_t sub_1DCAB4240(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74657366666FLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DCAB43A0(char a1)
{
  if (!a1) {
    return 0x676E6152656D6974;
  }
  if (a1 == 1) {
    return 0x74657366666FLL;
  }
  return 0x6E656469666E6F63;
}

uint64_t sub_1DCAB43FC(void *a1)
{
  BOOL v2 = v1;
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA7FD8);
  sub_1DC89D4E0();
  uint64_t v18 = v5;
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  uint64_t v10 = v2[2];
  uint64_t v11 = v2[3];
  uint64_t v16 = v2[5];
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAB5884();
  sub_1DCB892B8();
  uint64_t v19 = v9;
  uint64_t v20 = v2[1];
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  uint64_t v23 = v2[4];
  uint64_t v24 = v16;
  char v25 = 0;
  sub_1DC89C64C();
  uint64_t v12 = v17;
  sub_1DCB88F18();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v4);
  }
  uint64_t v14 = v18;
  LOBYTE(v19) = 1;
  sub_1DCB88EE8();
  LOBYTE(v19) = 2;
  sub_1DCB88EE8();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v8, v4);
}

uint64_t sub_1DCAB45D4()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAB46C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA7FC0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAB5884();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC89C600();
    sub_1DCB88DF8();
    sub_1DC95CA64(1);
    uint64_t v8 = v7;
    sub_1DC95CA64(2);
    uint64_t v10 = v9;
    uint64_t v11 = sub_1DC8D5364();
    v12(v11);
    *a2 = v13;
    a2[1] = v14;
    a2[2] = v15;
    a2[3] = v16;
    a2[4] = v17;
    a2[5] = v18;
    a2[6] = v8;
    a2[7] = v10;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCAB488C()
{
  return sub_1DCAB43A0(*v0);
}

uint64_t sub_1DCAB4894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAB4240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAB48BC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB5884();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAB48F8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB5884();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAB493C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAB4A2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAB46C8(a1, a2);
}

uint64_t sub_1DCAB4A44(void *a1)
{
  return sub_1DCAB43FC(a1);
}

double SNAudioOffsetResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNAudioOffsetResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double SNAudioOffsetResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNAudioOffsetResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

double (*SNAudioOffsetResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNAudioOffsetResult.timeRange.getter((uint64_t)v3);
  return sub_1DCAB4BE4;
}

double sub_1DCAB4BE4(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNAudioOffsetResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double SNAudioOffsetResult.offset.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNAudioOffsetResult_impl + 48);
}

void SNAudioOffsetResult.offset.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 48) = a1;
}

double (*SNAudioOffsetResult.offset.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNAudioOffsetResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 48);
  return sub_1DC8FA1F4;
}

double SNAudioOffsetResult.confidence.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNAudioOffsetResult_impl + 56);
}

void SNAudioOffsetResult.confidence.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 56) = a1;
}

double (*SNAudioOffsetResult.confidence.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNAudioOffsetResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 56);
  return sub_1DC9B0900;
}

id sub_1DCAB4D70()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x1E4F1FA20];
  uint64_t v3 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v4 = &v0[OBJC_IVAR___SNAudioOffsetResult_impl];
  *(void *)uint64_t v4 = *MEMORY[0x1E4F1FA20];
  *((void *)v4 + 1) = *(void *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((void *)v4 + 4) = *(void *)(v2 + 32);
  *((void *)v4 + 5) = v3;
  *((void *)v4 + 6) = 0;
  *((void *)v4 + 7) = 0;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1DCAB4E0C(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = &v3[OBJC_IVAR___SNAudioOffsetResult_impl];
  *(void *)uint64_t v5 = *(void *)a1;
  *((void *)v5 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v5 + 4) = *(void *)(a1 + 32);
  *((void *)v5 + 5) = v4;
  *((_OWORD *)v5 + 3) = *(_OWORD *)(a1 + 48);
  v7.receiver = v3;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

id SNAudioOffsetResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DCAB5AC4(OBJC_IVAR___SNAudioOffsetResult_impl);
  id result = sub_1DCAB4E0C((uint64_t)&v4);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNAudioOffsetResult.hash.getter()
{
  return sub_1DCAB45D4();
}

BOOL SNAudioOffsetResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v24);
  if (!v25) {
    return 0;
  }
  sub_1DC87E9CC(&v24, v23);
  sub_1DC87E9DC((uint64_t)v23, (uint64_t)v19);
  if (swift_dynamicCast())
  {
    uint64_t v3 = (void *)v15[0];
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 40);
    double v6 = *(double *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 48);
    double v5 = *(double *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 56);
    uint64_t v7 = v15[0] + OBJC_IVAR___SNAudioOffsetResult_impl;
    uint64_t v8 = *(void *)(v15[0] + OBJC_IVAR___SNAudioOffsetResult_impl);
    uint64_t v9 = *(void *)(v15[0] + OBJC_IVAR___SNAudioOffsetResult_impl + 40);
    double v11 = *(double *)(v15[0] + OBJC_IVAR___SNAudioOffsetResult_impl + 48);
    double v10 = *(double *)(v15[0] + OBJC_IVAR___SNAudioOffsetResult_impl + 56);
    v19[0] = *(void *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl);
    v19[1] = *(void *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 8);
    long long v20 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 16);
    uint64_t v21 = *(void *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 32);
    uint64_t v22 = v4;
    v15[0] = v8;
    v15[1] = *(void *)(v7 + 8);
    long long v16 = *(_OWORD *)(v7 + 16);
    uint64_t v17 = *(void *)(v7 + 32);
    uint64_t v18 = v9;
    BOOL v12 = static TimeRange.== infix(_:_:)((uint64_t)v19, (uint64_t)v15);

    BOOL v13 = 0;
    if (v12 && v6 == v11) {
      BOOL v13 = v5 == v10;
    }
  }
  else
  {
    BOOL v13 = 0;
  }
  sub_1DC8818D0((uint64_t)v23);
  return v13;
}

id SNAudioOffsetResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNAudioOffsetResult.init(coder:)(a1);
}

id SNAudioOffsetResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87E1CC();
  swift_getObjectType();

  id v4 = sub_1DCAB4E0C((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNAudioOffsetResult.encode(with:)(NSCoder with)
{
  long long v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 16);
  v4[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl);
  v4[1] = v2;
  long long v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 48);
  v4[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioOffsetResult_impl + 32);
  v4[3] = v3;
  sub_1DC87C478((uint64_t)v4, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNAudioOffsetResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNAudioOffsetResult.description.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1DCB88A98();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87FB8();
  sub_1DCB87A18();
  sub_1DCB87FB8();
  sub_1DCB87A18();
  SNAudioOffsetResult.timeRange.getter((uint64_t)&v15);
  uint64_t v3 = v15;
  uint64_t v4 = v17;
  uint64_t v5 = v18;
  uint64_t v6 = v20;
  uint64_t v7 = self;
  v11[0] = v3;
  v11[1] = v16;
  void v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  id v9 = objc_msgSend(v8, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v13;
}

id SNAudioOffsetResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DCAB569C@<D0>(uint64_t a1@<X8>)
{
  return SNAudioOffsetResult.timeRange.getter(a1);
}

double sub_1DCAB56C0(uint64_t a1)
{
  return SNAudioOffsetResult.timeRange.setter(a1);
}

void sub_1DCAB56E4(double *a1@<X8>)
{
  *a1 = SNAudioOffsetResult.offset.getter();
}

void sub_1DCAB5710(double *a1)
{
}

void sub_1DCAB5738(double *a1@<X8>)
{
  *a1 = SNAudioOffsetResult.confidence.getter();
}

void sub_1DCAB5764(double *a1)
{
}

uint64_t type metadata accessor for SNAudioOffsetResult()
{
  return self;
}

uint64_t method lookup function for SNAudioOffsetResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNAudioOffsetResult);
}

uint64_t getEnumTagSinglePayload for AudioOffsetResult(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AudioOffsetResult(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AudioOffsetResult()
{
  return &type metadata for AudioOffsetResult;
}

unint64_t sub_1DCAB5838()
{
  unint64_t result = qword_1EAAA7FB8;
  if (!qword_1EAAA7FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7FB8);
  }
  return result;
}

unint64_t sub_1DCAB5884()
{
  unint64_t result = qword_1EAAA7FC8;
  if (!qword_1EAAA7FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7FC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioOffsetResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAB599CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioOffsetResult.CodingKeys()
{
  return &type metadata for AudioOffsetResult.CodingKeys;
}

unint64_t sub_1DCAB59D8()
{
  unint64_t result = qword_1EAAA7FE8;
  if (!qword_1EAAA7FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7FE8);
  }
  return result;
}

unint64_t sub_1DCAB5A28()
{
  unint64_t result = qword_1EAAA7FF0;
  if (!qword_1EAAA7FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7FF0);
  }
  return result;
}

unint64_t sub_1DCAB5A78()
{
  unint64_t result = qword_1EAAA7FF8;
  if (!qword_1EAAA7FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7FF8);
  }
  return result;
}

__n128 sub_1DCAB5AC4@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)(v1 + a1 + 48);
}

uint64_t sub_1DCAB5AFC(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 36) = 1;
  *(void *)(v1 + 40) = a1;
  return v1;
}

id sub_1DCAB5B18(uint64_t a1)
{
  v74[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = self;
  v74[0] = 0;
  id v5 = sub_1DCB6B73C(v4, (uint64_t)v74);
  if (!v5)
  {
    id v29 = v74[0];
    sub_1DCB86898();

    swift_willThrow();
    return v5;
  }
  id v6 = v74[0];
  uint64_t v7 = (void *)sub_1DCB87908();
  sub_1DCB60B18((uint64_t)v5, v7);

  id v8 = (void *)sub_1DCB87908();
  uint64_t v9 = sub_1DCAB6430();
  id v12 = sub_1DCB68494(v9, v10, v8, v11);

  if (!v12)
  {
    id v30 = v74[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_12;
  }
  id v13 = v74[0];
  sub_1DCB87908();
  uint64_t v14 = sub_1DCAB6414();
  id v18 = sub_1DCB6A308(v14, v15, v16, v17);

  id v19 = v74[0];
  if (!v18)
  {
    id v31 = v74[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_12;
  }
  id v20 = v74[0];
  uint64_t v21 = (void *)sub_1DCB87908();
  uint64_t v22 = sub_1DCAB6430();
  id v25 = sub_1DCB6A948(v22, v23, v21, v24);

  if (!v25)
  {
    id v32 = v74[0];
    sub_1DCAB6444();

    swift_willThrow();
    goto LABEL_12;
  }
  v72 = v18;
  uint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_model);
  v26 = *(void **)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_model + 8);
  id v28 = v74[0];
  sub_1DCB2FB74(v25, v27, (uint64_t)v26);
  if (!v1)
  {
    sub_1DCB87908();
    uint64_t v34 = sub_1DCAB6414();
    id v38 = sub_1DCB686FC(v34, v35, v36, v37);

    id v39 = v74[0];
    if (v38)
    {
      v71 = v38;
      unsigned int v40 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames);
      if (!v40
        || (unsigned int v41 = *(_DWORD *)(a1
                            + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames),
            v41 < v40))
      {
        sub_1DCAB61F0();
        swift_allocError();
        unsigned char *v42 = 0;
        id v43 = v39;
        swift_willThrow();

        return v5;
      }
      id v45 = v74[0];
      sub_1DCB6BA88(0x3E80u, 1, 1, (uint64_t)v74);
      uint64_t v46 = sub_1DCAB63E4();
      if (!sub_1DCB6B83C(v46, v47, v12, v72, 0, 0, v48, v49)
        || (id v50 = v73,
            sub_1DCAB645C(),
            sub_1DCB6BB74(v51, v52, v41, 1, v53),
            uint64_t v54 = sub_1DCAB63E4(),
            v55 = v25,
            !sub_1DCB6B83C(v54, v56, v72, v25, 0, 0, v57, v58)))
      {
        id v69 = v73;
        sub_1DCAB6444();

        swift_willThrow();
        goto LABEL_12;
      }
      id v59 = v73;
      sub_1DCAB645C();
      sub_1DCB6BB74(v60, v61, 512, 1, v62);
      uint64_t v63 = sub_1DCAB63E4();
      v64 = v25;
      id v25 = v71;
      if (sub_1DCB6B83C(v63, v65, v64, v71, 0, 0, v66, v67))
      {
        id v68 = v73;
        sub_1DCB5EC24((uint64_t)v5);
        sub_1DCB5F1F8((uint64_t)v5);

        goto LABEL_7;
      }
      id v70 = v73;
      sub_1DCB86898();

      swift_willThrow();
    }
    else
    {
      id v44 = v74[0];
      sub_1DCAB6444();

      swift_willThrow();
    }

LABEL_12:
    return v5;
  }

LABEL_7:
  return v5;
}

id sub_1DCAB5FF0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DCAB61F0();
  swift_allocError();
  *int v3 = 1;
  return (id)swift_willThrow();
}

void sub_1DCAB6054(int a1, double a2)
{
  double v6 = *v2;
  if ((*((unsigned char *)v2 + 36) & 1) != 0 || (v2[3] == a2 ? (BOOL v7 = *((_DWORD *)v2 + 8) == a1) : (BOOL v7 = 0), !v7))
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v2;
    *(double *)(v8 + 24) = v6;
    swift_retain();
    uint64_t v9 = sub_1DC8A12D0();
    swift_release();
    if (!v3)
    {
      double v10 = (void *)*((void *)v2 + 2);
      *((void *)v2 + 2) = v9;

      v2[3] = a2;
      *((_DWORD *)v2 + 8) = a1;
      *((unsigned char *)v2 + 36) = 0;
    }
  }
}

void sub_1DCAB6144(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = *(id *)(a1 + 40);
  id v5 = sub_1DCAB5B18((uint64_t)v4);

  if (!v2) {
    *a2 = v5;
  }
}

uint64_t type metadata accessor for SNSoundPrintFeatureExtractor()
{
  return self;
}

void sub_1DCAB61C0(int a1, double a2)
{
}

id sub_1DCAB61D8()
{
  return sub_1DCAB5FF0();
}

unint64_t sub_1DCAB61F0()
{
  unint64_t result = qword_1EAAA8000;
  if (!qword_1EAAA8000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8000);
  }
  return result;
}

uint64_t sub_1DCAB623C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DCAB6274(void *a1@<X8>)
{
  sub_1DCAB6144(*(void *)(v1 + 16), a1);
}

unsigned char *storeEnumTagSinglePayload for SNSoundPrintFeatureExtractor.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAB635CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNSoundPrintFeatureExtractor.DomainError()
{
  return &type metadata for SNSoundPrintFeatureExtractor.DomainError;
}

unint64_t sub_1DCAB6398()
{
  unint64_t result = qword_1EAAA8008;
  if (!qword_1EAAA8008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8008);
  }
  return result;
}

uint64_t sub_1DCAB63E4()
{
  return v0;
}

uint64_t sub_1DCAB6414()
{
  return v0;
}

uint64_t sub_1DCAB6430()
{
  return v0;
}

uint64_t sub_1DCAB6444()
{
  return sub_1DCB86898();
}

uint64_t sub_1DCAB645C()
{
  return v0;
}

uint64_t sub_1DCAB6498()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNBooleanCancellable_isCancelled);
}

uint64_t sub_1DCAB64D0(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___SNBooleanCancellable_isCancelled) = result;
  return result;
}

id sub_1DCAB64E0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v0[OBJC_IVAR___SNBooleanCancellable_isCancelled] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

void sub_1DCAB6548()
{
  *(unsigned char *)(v0 + OBJC_IVAR___SNBooleanCancellable_isCancelled) = 1;
}

uint64_t type metadata accessor for SNBooleanCancellable()
{
  return self;
}

ValueMetadata *type metadata accessor for NativeModelCompileUtils()
{
  return &type metadata for NativeModelCompileUtils;
}

uint64_t sub_1DCAB65B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for LogMelState();
  swift_allocObject();
  uint64_t result = sub_1DCAA7258(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DCAB6614(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA80A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAB76BC();
  sub_1DCB892B8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DCAB6724(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB76BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAB6760(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB76BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAB679C(void *a1)
{
  return sub_1DCAB6614(a1);
}

_UNKNOWN **sub_1DCAB67B4()
{
  type metadata accessor for SNAudioOffsetEstimator();
  uint64_t v1 = swift_allocObject();
  sub_1DCAB6CE0();
  if (v0) {
    return &off_1F37EE090;
  }
  else {
    return (_UNKNOWN **)v1;
  }
}

id SNEstimateAudioOffsetRequest.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v4.receiver = objc_allocWithZone(ObjectType);
  v4.super_class = ObjectType;
  id result = objc_msgSendSuper2(&v4, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNEstimateAudioOffsetRequest.hash.getter()
{
  return sub_1DCB891F8();
}

uint64_t SNEstimateAudioOffsetRequest.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v7);
  if (!v8) {
    return 0;
  }
  sub_1DC87E9CC(&v7, v6);
  sub_1DC87E9DC((uint64_t)v6, (uint64_t)v5);
  uint64_t v2 = swift_dynamicCast();
  if (v2) {

  }
  sub_1DC8818D0((uint64_t)v6);
  return v2;
}

id SNEstimateAudioOffsetRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNEstimateAudioOffsetRequest.init(coder:)(a1);
}

id SNEstimateAudioOffsetRequest.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  uint64_t v6 = sub_1DC8CF80C();
  sub_1DC87E2C0(v6, v7, (uint64_t)a1);

  v10.receiver = objc_allocWithZone(ObjectType);
  v10.super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, sel_init);

  swift_getObjectType();
  sub_1DC8CF7EC();
  return v8;
}

Swift::Void __swiftcall SNEstimateAudioOffsetRequest.encode(with:)(NSCoder with)
{
  uint64_t v2 = sub_1DC8CF80C();
  sub_1DC87C660(v2, v3, v1);
}

uint64_t static SNEstimateAudioOffsetRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNEstimateAudioOffsetRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1DCAB6C8C()
{
  return sub_1DCAB67B4();
}

uint64_t type metadata accessor for SNEstimateAudioOffsetRequest()
{
  return self;
}

uint64_t method lookup function for SNEstimateAudioOffsetRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNEstimateAudioOffsetRequest);
}

uint64_t sub_1DCAB6CE0()
{
  objc_super v2 = v0;
  uint64_t v3 = *(void *)v0;
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0.0;
  type metadata accessor for SNFileUtils();
  sub_1DCB3B520((uint64_t)v6);
  uint64_t v7 = sub_1DCB86A18();
  uint64_t result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = sub_1DCB869D8();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    id v12 = (void *)swift_allocObject();
    v12[2] = v9;
    v12[3] = v11;
    v12[4] = v3;
    id v13 = (void *)sub_1DC8A12D0();
    swift_release();
    if (v1)
    {

      swift_deallocPartialClassInstance();
    }
    else
    {
      uint64_t v14 = (void *)*((void *)v2 + 2);
      *((void *)v2 + 2) = v13;
      v2[3] = 0.0;
      id v15 = v13;

      sub_1DC987C74(1);
      float v17 = v16;
      sub_1DC987C74(5);
      sub_1DC987C74(6);
      sub_1DC987C74(7);

      double v18 = 0.0;
      uint64_t v19 = 0;
      if (v17 > 0.0)
      {
        double v20 = sub_1DCAB7964();
        double v18 = sub_1DCAB794C(v20, v21, v22, v23, 1000.0);
      }
      *((void *)v2 + 4) = v19;
      v2[5] = v18;
    }
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_1DCAB6F40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAB6F6C();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DCAB6F6C()
{
  sub_1DC87E988((uint64_t *)&unk_1EAA9C700);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBBCDA0;
  *(void *)(inited + 32) = sub_1DCB877D8();
  *(void *)(inited + 40) = sub_1DCB877D8();
  uint64_t v1 = sub_1DCAE854C(inited);
  swift_setDeallocating();
  sub_1DC937718();
  id v2 = objc_allocWithZone((Class)type metadata accessor for SNDSPConfiguration());
  swift_bridgeObjectRetain();
  id v3 = sub_1DC9B3224(v1);
  uint64_t v4 = type metadata accessor for SNDSPGraphLoader();
  uint64_t v5 = sub_1DC9B1474((uint64_t)v3);
  if (v5)
  {
    uint64_t v4 = v5;
    sub_1DCB5EC24(v5);
    sub_1DCB5F1F8(v4);
  }
  else
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v6 = 0;
    swift_willThrow();
  }

  return v4;
}

uint64_t sub_1DCAB70D0(void *a1, int64_t a2, void (*a3)(void))
{
  CMTimeValue v5 = value;
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  id v9 = sub_1DCAB74D8();
  if (v4) {
    return value;
  }
  uint64_t v10 = v9;
  sub_1DC987C74(1);
  float v12 = v11;

  id v14 = sub_1DCAB7934();
  sub_1DC987C74(5);

  id v15 = sub_1DCAB7934();
  sub_1DC987C74(6);

  id v16 = sub_1DCAB7934();
  sub_1DC987C74(7);

  double v17 = 0.0;
  uint64_t v18 = 0;
  if (v12 > 0.0)
  {
    double v19 = sub_1DCAB7964();
    double v17 = sub_1DCAB794C(v19, v20, v21, v22, 1000.0);
  }
  *(void *)(v5 + 32) = v18;
  *(double *)(v5 + 40) = v17;
  id v23 = sub_1DCAB7934();
  sub_1DC987C74(3);
  float v25 = v24;

  id v26 = sub_1DCAB7934();
  sub_1DC987C74(4);
  float v28 = v27;

  v42 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNAudioOffsetResult()), sel_init);
  uint64_t v29 = self;
  v43.start.CMTimeValue value = 0;
  id v30 = sub_1DCB6C41C(v29, a1, (uint64_t)&v43);
  CMTimeValue value = v43.start.value;
  if (!v30)
  {
    id v38 = (id)v43.start.value;
    sub_1DCB86898();

    swift_willThrow();
    return value;
  }
  id v31 = v30;
  id v32 = (id)v43.start.value;
  int64_t v33 = sub_1DCB89168();
  uint64_t result = sub_1DCB5C99C((uint64_t)a1);
  if ((result & 0x80000000) != 0)
  {
    __break(1u);
  }
  else
  {
    CMTimeMake(&v43.start, v33, result);
    CMTimeValue v34 = v43.start.value;
    uint64_t v35 = *(void *)&v43.start.timescale;
    CMTimeEpoch epoch = v43.start.epoch;
    uint64_t result = sub_1DCB5C99C((uint64_t)a1);
    if ((result & 0x80000000) == 0)
    {
      CMTimeMake(&v43.start, a2, result);
      CMTime duration = v43.start;
      start.CMTimeValue value = v34;
      *(void *)&start.timescale = v35;
      start.CMTimeEpoch epoch = epoch;
      CMTimeRangeMake(&v43, &start, &duration);
      CMTimeRange v51 = v43;
      a3();
      uint64_t v37 = sub_1DCB883C8();
      ((void (*)(uint64_t))a3)(v37);
      sub_1DCB883D8();
      uint64_t v39 = v50;
      unsigned int v40 = &v42[OBJC_IVAR___SNAudioOffsetResult_impl];
      *(void *)unsigned int v40 = v46;
      *((void *)v40 + 1) = v47;
      *((_OWORD *)v40 + 1) = v48;
      *((void *)v40 + 4) = v49;
      *((void *)v40 + 5) = v39;
      *((double *)v40 + 6) = *(double *)(v5 + 32) + v28;
      *((double *)v40 + 7) = v25;
      sub_1DC87E988(&qword_1EAA9C720);
      CMTimeValue v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1DCBB8670;
      *(void *)(v41 + 32) = v42;
      v43.start.CMTimeValue value = v41;
      sub_1DCB87C68();
      CMTimeValue value = v43.start.value;

      return value;
    }
  }
  __break(1u);
  return result;
}

id sub_1DCAB74D8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DCAB7670();
  swift_allocError();
  return (id)swift_willThrow();
}

id sub_1DCAB7534()
{
  id result = sub_1DCAB74D8();
  if (!v0)
  {
    id v2 = result;
    id v3 = (void *)sub_1DCB87908();
    id v4 = sub_1DCB60550(v2, v3);

    return v4;
  }
  return result;
}

uint64_t type metadata accessor for SNAudioOffsetEstimator()
{
  return self;
}

ValueMetadata *type metadata accessor for EstimateAudioOffsetRequest()
{
  return &type metadata for EstimateAudioOffsetRequest;
}

unint64_t sub_1DCAB75DC()
{
  unint64_t result = qword_1EAAA8088;
  if (!qword_1EAAA8088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8088);
  }
  return result;
}

uint64_t sub_1DCAB7628(void *a1, int64_t a2, void (*a3)(void))
{
  return sub_1DCAB70D0(a1, a2, a3);
}

id sub_1DCAB7640()
{
  return sub_1DCAB7534();
}

id sub_1DCAB7658()
{
  return sub_1DCAB74D8();
}

unint64_t sub_1DCAB7670()
{
  unint64_t result = qword_1EAAA8090;
  if (!qword_1EAAA8090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8090);
  }
  return result;
}

unint64_t sub_1DCAB76BC()
{
  unint64_t result = qword_1EAAA80A8;
  if (!qword_1EAAA80A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA80A8);
  }
  return result;
}

uint64_t sub_1DCAB7708()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCAB7740@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCAB6F40(a1);
}

ValueMetadata *type metadata accessor for EstimateAudioOffsetRequest.CodingKeys()
{
  return &type metadata for EstimateAudioOffsetRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SNAudioOffsetEstimator.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCAB780CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAudioOffsetEstimator.DomainError()
{
  return &type metadata for SNAudioOffsetEstimator.DomainError;
}

unint64_t sub_1DCAB7848()
{
  unint64_t result = qword_1EAAA80B8;
  if (!qword_1EAAA80B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA80B8);
  }
  return result;
}

unint64_t sub_1DCAB7898()
{
  unint64_t result = qword_1EAAA80C0;
  if (!qword_1EAAA80C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA80C0);
  }
  return result;
}

unint64_t sub_1DCAB78E8()
{
  unint64_t result = qword_1EAAA80C8[0];
  if (!qword_1EAAA80C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA80C8);
  }
  return result;
}

id sub_1DCAB7934()
{
  return sub_1DCAB74D8();
}

double sub_1DCAB794C(double a1, double a2, double a3, double a4, double a5)
{
  return a5 / a1 * (a2 - a4) + a5 / a1 * a3;
}

double sub_1DCAB7964()
{
  return v0;
}

uint64_t sub_1DCAB7978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return sub_1DCAB79E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(void, void *))type metadata accessor for StatefulTryMap);
}

uint64_t sub_1DCAB79AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return sub_1DCAB79E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(void, void *))type metadata accessor for StatefulMap);
}

uint64_t sub_1DCAB79E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t (*a10)(void, void *))
{
  sub_1DC88D538();
  MEMORY[0x1F4188790](v18);
  sub_1DC8A22D0();
  uint64_t v21 = v20 - v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20 - v19, v10, v23);
  sub_1DCAB82CC(v21, a3, a4, a1, a2, a5, a6, a7, a9, a8, a10);
  swift_retain();
  return swift_retain();
}

uint64_t type metadata accessor for StatefulMap()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAB7B1C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DCAB7BBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    float v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    id v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    id v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCAB7CDC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_release();

  return swift_release();
}

uint64_t sub_1DCAB7D5C()
{
  sub_1DCAB8E30();
  (*(void (**)(void))(v1 + 16))();
  sub_1DCAB8E64();
  uint64_t v3 = v2[1];
  *unsigned int v4 = *v2;
  v4[1] = v3;
  uint64_t v5 = (void *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)v2 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = v6[1];
  *uint64_t v5 = *v6;
  v5[1] = v7;
  swift_retain();
  swift_retain();
  return v0;
}

uint64_t sub_1DCAB7DD8()
{
  sub_1DCAB8E30();
  id v2 = (void *)(v1 + 24);
  (*(void (**)(void))(v1 + 24))();
  sub_1DCAB8E7C();
  unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFFF8) + 8);
  *id v2 = *(void *)(v3 & 0xFFFFFFFFFFFFFFF8);
  v2[1] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)(((unint64_t)v2 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)((v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v7[1];
  *uint64_t v6 = *v7;
  v6[1] = v8;
  swift_retain();
  swift_release();
  return v0;
}

uint64_t sub_1DCAB7E6C()
{
  sub_1DCAB8E30();
  (*(void (**)(void))(v1 + 32))();
  sub_1DCAB8E64();
  *uint64_t v3 = *v2;
  *(_OWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v2 + 23) & 0xFFFFFFFFFFFFFFF8);
  return v0;
}

uint64_t sub_1DCAB7ED4()
{
  sub_1DCAB8E30();
  id v2 = (_OWORD *)(v1 + 40);
  (*(void (**)(void))(v1 + 40))();
  sub_1DCAB8E7C();
  unint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 23;
  *id v2 = *(_OWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v2 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return v0;
}

uint64_t sub_1DCAB7F54(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCAB8098);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DCAB80AC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DCAB828CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for StatefulTryMap()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAB82CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t (*a11)(void, void *))
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a9, a1, a6);
  v22[0] = a6;
  v22[1] = a7;
  v22[2] = a8;
  v22[3] = a10;
  uint64_t result = a11(0, v22);
  uint64_t v20 = (void *)(a9 + *(int *)(result + 52));
  *uint64_t v20 = a2;
  v20[1] = a3;
  uint64_t v21 = (void *)(a9 + *(int *)(result + 56));
  *uint64_t v21 = a4;
  v21[1] = a5;
  return result;
}

uint64_t sub_1DCAB8398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a1;
  uint64_t v45 = a4;
  uint64_t v42 = a3;
  sub_1DC88D538();
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = *(void *)(v11 + 16);
  sub_1DC88D538();
  uint64_t v37 = v13;
  MEMORY[0x1F4188790](v14);
  sub_1DC8A22D0();
  v35[1] = v16 - v15;
  uint64_t v18 = *(void *)(v17 + 40);
  uint64_t v38 = *(void *)(v17 + 24);
  uint64_t v39 = v18;
  uint64_t v41 = sub_1DCB870E8();
  sub_1DC88D538();
  uint64_t v43 = v19;
  MEMORY[0x1F4188790](v20);
  unsigned int v40 = (char *)v35 - v21;
  uint64_t v22 = *(void *)(a2 + 32);
  uint64_t v36 = swift_allocBox();
  (*(void (**)(void))(v4 + *(int *)(a2 + 52)))();
  sub_1DC8E7D10();
  v23();
  float v24 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC8E7D10();
  v25();
  unint64_t v26 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v27 = (v9 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  float v28 = (char *)swift_allocObject();
  uint64_t v29 = v38;
  *((void *)v28 + 2) = v12;
  *((void *)v28 + 3) = v29;
  uint64_t v30 = v42;
  *((void *)v28 + 4) = v22;
  *((void *)v28 + 5) = v30;
  uint64_t v31 = v45;
  *((void *)v28 + 6) = v39;
  *((void *)v28 + 7) = v31;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v28[v26], v24, a2);
  *(void *)&v28[v27] = v36;
  swift_retain();
  sub_1DCB873D8();
  swift_release();
  sub_1DC88D5C8();
  v32();
  swift_getWitnessTable();
  sub_1DCB87518();
  sub_1DC88D5C8();
  v33();
  return swift_release();
}

uint64_t sub_1DCAB8670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_projectBox();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a2 + *(int *)(type metadata accessor for StatefulMap() + 56));
  swift_beginAccess();
  v5(a1, v4);
  return swift_endAccess();
}

uint64_t sub_1DCAB8724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAB8398(a1, a4, a2, a3);
}

uint64_t sub_1DCAB8738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v36 = a1;
  uint64_t v31 = a2;
  uint64_t v6 = a2 - 8;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  CMTimeValue v34 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v6 + 24);
  sub_1DC88D538();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1DC8A22D0();
  uint64_t v13 = *(void *)(v6 + 32);
  uint64_t v29 = *(void *)(v6 + 48);
  uint64_t v30 = v13;
  sub_1DCB87148();
  sub_1DC88D538();
  uint64_t v32 = v15;
  uint64_t v33 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = *(void *)(v6 + 40);
  uint64_t v35 = swift_allocBox();
  (*(void (**)(void))(v5 + *(int *)(v6 + 60)))();
  v28[1] = v11;
  sub_1DC8E7D10();
  v17();
  uint64_t v18 = v31;
  sub_1DC8E7D10();
  v19();
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v30;
  *((void *)v21 + 2) = v9;
  *((void *)v21 + 3) = v22;
  uint64_t v23 = v37;
  *((void *)v21 + 4) = v16;
  *((void *)v21 + 5) = v23;
  uint64_t v24 = v38;
  *((void *)v21 + 6) = v29;
  *((void *)v21 + 7) = v24;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v21[v20], v34, v18);
  *(void *)&v21[(v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8] = v35;
  swift_retain();
  sub_1DCB874A8();
  swift_release();
  sub_1DC88D5C8();
  v25();
  swift_getWitnessTable();
  sub_1DCB87518();
  sub_1DC88D5C8();
  v26();
  return swift_release();
}

uint64_t sub_1DCAB8A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_projectBox();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a2 + *(int *)(type metadata accessor for StatefulTryMap() + 56));
  swift_beginAccess();
  v5(a1, v4);
  return swift_endAccess();
}

uint64_t sub_1DCAB8B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAB8738(a1, a4, a2, a3);
}

uint64_t sub_1DCAB8B5C()
{
  return sub_1DCAB8C48((void (*)(void, long long *))type metadata accessor for StatefulTryMap);
}

uint64_t sub_1DCAB8B74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StatefulTryMap();
  sub_1DC89D568(v2);
  sub_1DCAB8E4C();
  return sub_1DCAB8A7C(a1, v3);
}

uint64_t sub_1DCAB8C30()
{
  return sub_1DCAB8C48((void (*)(void, long long *))type metadata accessor for StatefulMap);
}

uint64_t sub_1DCAB8C48(void (*a1)(void, long long *))
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 48);
  long long v6 = *(_OWORD *)(v1 + 16);
  uint64_t v7 = v2;
  uint64_t v8 = v3;
  a1(0, &v6);
  sub_1DC88D5C8();
  v4();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DCAB8D74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StatefulMap();
  sub_1DC89D568(v2);
  sub_1DCAB8E4C();
  return sub_1DCAB8670(a1, v3);
}

uint64_t AudioFileSequence.init(url:audioFormat:bufferFrameCapacity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)()@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v8 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v10 = v9;
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (*(void *)(v12 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v14 + v11, a1, v8);
  *(void *)(v14 + v13) = a2;
  *a4 = sub_1DC8E6CB4;
  a4[1] = (uint64_t (*)())v14;
  a4[2] = a3;
  return result;
}

uint64_t sub_1DCAB8F6C(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    while (a2 != -1 || result != 0x8000000000000000)
    {
      uint64_t v3 = a2;
      a2 = result % a2;
      uint64_t result = v3;
      if (!a2) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return result;
  }
  return result;
}

uint64_t sub_1DCAB8FA8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1DC8AEBB4(a1, a2, a3);
  swift_release();
  return v3;
}

id sub_1DCAB8FDC()
{
  sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v1 = v0;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v11 - v4;
  long long v6 = *(void (**)(void))(v1 + 16);
  sub_1DCABC238();
  v6();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F15390]);
  id v8 = sub_1DCABBB24((uint64_t)v5);
  id v9 = objc_msgSend(v8, sel_length);

  return v9;
}

void sub_1DCAB9318(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  id v5 = *a1;
  id v6 = objc_msgSend(*a1, sel_framePosition);
  if ((uint64_t)v6 >= (uint64_t)objc_msgSend(v5, sel_length)) {
    goto LABEL_8;
  }
  id v7 = objc_msgSend(v5, sel_processingFormat);
  unint64_t v8 = *(void *)(a2 + 8);
  if ((v8 & 0x8000000000000000) != 0)
  {
    sub_1DC8AF148();
    sub_1DC9872D8();
LABEL_14:
    sub_1DC987350();
    __break(1u);
    return;
  }
  if (HIDWORD(v8))
  {
    sub_1DC8AF148();
    sub_1DC9872C8();
    goto LABEL_14;
  }
  id v9 = v7;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, v7, v8);

  if (v10)
  {
    v15[0] = 0;
    id v11 = v10;
    if (objc_msgSend(v5, sel_readIntoBuffer_error_, v11, v15))
    {
      id v12 = v15[0];
      unsigned int v13 = objc_msgSend(v11, sel_frameLength);

      if (v13)
      {
LABEL_9:
        *a3 = v10;
        return;
      }

LABEL_8:
      id v10 = 0;
      goto LABEL_9;
    }
    id v14 = v15[0];
    sub_1DCB86898();

    swift_willThrow();
  }
  else
  {
    sub_1DCABC034();
    swift_allocError();
    swift_willThrow();
  }
}

AVAudioPCMBuffer_optional __swiftcall AudioFileSequence.Iterator.next()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)MEMORY[0x1E01A8D20](v2);
  if (!*(void *)(v1 + 16))
  {
    sub_1DC87E988(&qword_1EAA9E2E8);
    sub_1DC8AF01C();
    id v7 = (void *)swift_allocError();
    swift_willThrow();
    swift_release();

LABEL_5:
    sub_1DCABB9A4();
    uint64_t v4 = 0;
    goto LABEL_6;
  }
  id v9 = *(id *)(v1 + 16);
  sub_1DCAB9318(&v9, (uint64_t)v0, &v10);
  uint64_t v4 = v10;
  swift_release();
  if (!v4) {
    goto LABEL_5;
  }
LABEL_6:
  unint64_t v8 = v4;
  result.value.super._impl = v5;
  result.value.super.super.isa = v8;
  result.is_nil = v6;
  return result;
}

unint64_t sub_1DCAB95FC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = (unint64_t)AudioFileSequence.Iterator.next()();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAB9624()
{
  return sub_1DCABB904((void (*)(uint64_t *__return_ptr))sub_1DCABC080);
}

uint64_t sub_1DCAB968C()
{
  sub_1DCB86A18();
  sub_1DC88819C();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  return swift_deallocObject();
}

uint64_t AudioFileSequence.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = (*(uint64_t (**)(void))v1)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DCAB979C@<X0>(uint64_t *a1@<X8>)
{
  AudioFileSequence.makeIterator()(a1);

  return swift_release();
}

uint64_t sub_1DCAB97C8()
{
  return sub_1DC89D8B4();
}

uint64_t sub_1DCAB97D4()
{
  return sub_1DCAB8FA8(*(uint64_t (**)(uint64_t))v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1DCAB97E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCA0E6C8(a1, a2, a3, *(uint64_t (**)(void))v3, *(void *)(v3 + 8), *(void *)(v3 + 16));
}

id sub_1DCAB97EC(uint64_t a1, void *a2)
{
  sub_1DCB86A18();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  Swift::Bool v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  id v8 = objc_msgSend(a2, sel_settings);
  uint64_t v9 = sub_1DCB877B8();

  id v10 = objc_msgSend(a2, sel_commonFormat);
  LOBYTE(a2) = objc_msgSend(a2, sel_isInterleaved);
  id v11 = objc_allocWithZone(MEMORY[0x1E4F15390]);
  return sub_1DCABBD94((uint64_t)v6, v9, (uint64_t)v10, (char)a2);
}

id sub_1DCAB9928(uint64_t a1, id a2)
{
  sub_1DCB86A18();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = sub_1DCABC1E4(v6, v13);
  v8(v7);
  id v9 = objc_allocWithZone(MEMORY[0x1E4F15390]);
  id v10 = sub_1DCABBB24(v3);
  if (!v2)
  {
    id v11 = v10;
    a2 = sub_1DCAB99EC(v10, a2);
  }
  return a2;
}

id sub_1DCAB99EC(void *a1, void *a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend(a1, sel_processingFormat);
  unsigned int v5 = objc_msgSend(a2, sel_isEqual_, v4);

  if (v5) {
    return a1;
  }
  sub_1DCABBF2C();
  v9[0] = 0;
  id v7 = sub_1DCABA6E8(a1, a2, (uint64_t)v9);
  id v8 = v9[0];
  return v7;
}

void sub_1DCAB9AF4(void *a1)
{
  id v2 = objc_msgSend(a1, sel_fileFormat);
  objc_msgSend(v2, sel_sampleRate);
  double v4 = v3;

  sub_1DCABC1C4();
  if (v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v4 <= -2147483650.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1DCABC1D4();
  if (v6)
  {
    int32_t v7 = (int)v4;
    CMTimeMake((CMTime *)&v38, 0, (int)v4);
    char v8 = v38;
    uint64_t v9 = v40;
    uint64_t v10 = v39;
    id v11 = CMTimeMake((CMTime *)&v38, (int64_t)objc_msgSend(a1, sel_length), v7);
    uint64_t v43 = v10;
    uint64_t v44 = v9;
    uint64_t v19 = sub_1DCABC210((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, v38, v39, v40, *((uint64_t *)&v40 + 1), v41, v42, v38, v39, v40, v8);
    uint64_t v22 = CMTimeRangeMake(v21, (CMTime *)v19, v20);
    sub_1DC8AF070((uint64_t)v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, *(double *)&v39, v40,
      v41,
      v42);
    return;
  }
LABEL_8:
  __break(1u);
}

void sub_1DCAB9BF8(void *a1@<X0>, _OWORD *a2@<X8>, double a3@<D0>)
{
  sub_1DCAB9AF4(a1);
  type metadata accessor for SNTimeUtils();
  sub_1DCABC1C4();
  if (v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a3 <= -2147483650.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1DCABC1D4();
  if (v6)
  {
    sub_1DC8AB3D8(v8, (uint64_t)v9);
    long long v7 = v9[1];
    *a2 = v9[0];
    a2[1] = v7;
    a2[2] = v9[2];
    return;
  }
LABEL_8:
  __break(1u);
}

double sub_1DCAB9C90@<D0>(_OWORD *a1@<X8>)
{
  sub_1DCB86A18();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  char v6 = sub_1DCABC1E4(v5, v12);
  v7(v6);
  id v8 = objc_allocWithZone(MEMORY[0x1E4F15390]);
  id v9 = sub_1DCABBC54(v2, 1, 0);
  if (!v1)
  {
    id v11 = v9;
    sub_1DCAB9AF4(v9);

    *a1 = v12;
    a1[1] = v13;
    double result = *(double *)&v14;
    a1[2] = v14;
  }
  return result;
}

double sub_1DCAB9D5C@<D0>(_OWORD *a1@<X8>)
{
  type metadata accessor for SNTimeUtils();
  sub_1DC8ACEFC((void *(*)(uint64_t *__return_ptr))sub_1DCABC018, (uint64_t)v4);
  long long v2 = v4[1];
  *a1 = v4[0];
  a1[1] = v2;
  double result = *(double *)&v5;
  a1[2] = v5;
  return result;
}

double sub_1DCAB9DDC@<D0>(_OWORD *a1@<X8>)
{
  double result = sub_1DCAB9C90(v5);
  if (!v1)
  {
    long long v4 = v5[1];
    *a1 = v5[0];
    a1[1] = v4;
    double result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void sub_1DCAB9F5C(void *a1, uint64_t (*a2)(id *), uint64_t a3, uint64_t (*a4)(void *, id *), uint64_t a5, uint64_t a6, void *a7)
{
  long long v7 = a7;
  id v8 = a1;
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {

    return;
  }
  uint64_t v10 = &selRef_enumeratedDurations;
  id v11 = &selRef_enumeratedDurations;
  while (1)
  {
    id v34 = 0;
    uint64_t v12 = a2(&v34);
    if (!v12)
    {
      if (v34)
      {
        v34;
        swift_willThrow();
        goto LABEL_19;
      }

      __break(1u);
LABEL_34:

      __break(1u);
LABEL_35:

      __break(1u);
      return;
    }
    long long v13 = (void *)v12;
    id v14 = v34;
    id v15 = v8;
    if (objc_msgSend(v13, sel_frameCapacity) < v8) {
      id v15 = objc_msgSend(v13, sel_frameCapacity);
    }
    objc_msgSend(v13, v10[171], 0);
    id v16 = objc_msgSend(v7, sel_framePosition);
    if ((uint64_t)v16 >= (uint64_t)objc_msgSend(v7, sel_length))
    {
      objc_msgSend(v13, v10[171], 0);
      goto LABEL_13;
    }
    id v34 = 0;
    unsigned int v17 = objc_msgSend(v7, sel_readIntoBuffer_frameCount_error_, v13, v15, &v34);
    if (v17)
    {
      id v18 = v34;
      id v19 = v14;
    }
    else
    {
      id v20 = v34;
      uint64_t v21 = v11;
      uint64_t v22 = a5;
      uint64_t v23 = sub_1DCB86898();

      swift_willThrow();
      id v19 = (id)sub_1DCB86888();
      uint64_t v24 = (void *)v23;
      a5 = v22;
      id v11 = v21;
      long long v7 = a7;
    }
    id v25 = v19;

    if (!v17) {
      break;
    }
    id v14 = v25;
LABEL_13:
    if (![v13 v11[27]])
    {

      return;
    }
    if (v8 < [v13 v11[27]])
    {
      type metadata accessor for SNError();
      id v34 = 0;
      unint64_t v35 = 0xE000000000000000;
      sub_1DCB88A98();
      swift_bridgeObjectRelease();
      id v34 = (id)0xD000000000000029;
      unint64_t v35 = 0x80000001DCB9A2D0;
      if ([v13 v11[27]] >= v8)
      {
        sub_1DCB88F98();
        sub_1DCB87A18();
        swift_bridgeObjectRelease();
        sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 2, 0, (uint64_t)v34, v35);
        swift_bridgeObjectRelease();
        swift_willThrow();

        goto LABEL_31;
      }
LABEL_32:
      __break(1u);
    }
    unsigned int v26 = [v13 v11[27]];
    BOOL v27 = v8 >= v26;
    id v8 = (void *)(v8 - v26);
    if (!v27)
    {
      __break(1u);
      goto LABEL_32;
    }
    id v34 = v14;
    char v28 = a4(v13, &v34);
    id v29 = v34;

    if ((v28 & 1) == 0)
    {
      if (v29)
      {
        id v30 = v29;
        goto LABEL_30;
      }
      goto LABEL_34;
    }

    uint64_t v10 = &selRef_enumeratedDurations;
    if (!v8) {
      goto LABEL_19;
    }
  }
  if (!v25) {
    goto LABEL_35;
  }
  id v30 = v25;
LABEL_30:
  swift_willThrow();

LABEL_31:
  long long v7 = v13;
LABEL_19:
}

void sub_1DCABA32C(void *a1, uint64_t (*a2)(id *), uint64_t a3, uint64_t (*a4)(void *, id, id *), uint64_t a5, uint64_t (*a6)(void *, id *))
{
  long long v7 = a1;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v25 = v6;
    while (1)
    {
      id v27 = 0;
      uint64_t v10 = a2(&v27);
      if (!v10)
      {
        if (!v27)
        {
          __break(1u);
          goto LABEL_28;
        }
        v27;
        swift_willThrow();
        return;
      }
      id v11 = (void *)v10;
      id v12 = v27;
      id v13 = v7;
      if (objc_msgSend(v11, sel_frameCapacity) < v7) {
        id v13 = objc_msgSend(v11, sel_frameCapacity);
      }
      objc_msgSend(v11, sel_setFrameLength_, 0, v25);
      id v27 = v12;
      char v14 = a4(v11, v13, &v27);
      id v15 = v27;

      if ((v14 & 1) == 0)
      {
        if (v15)
        {
          id v20 = v15;
          goto LABEL_23;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        return;
      }
      if (!sub_1DCABC274())
      {

        return;
      }
      if (v7 < sub_1DCABC274())
      {
        type metadata accessor for SNError();
        id v27 = 0;
        unint64_t v28 = 0xE000000000000000;
        sub_1DCB88A98();
        swift_bridgeObjectRelease();
        id v27 = (id)0xD000000000000029;
        unint64_t v28 = 0x80000001DCB9A2D0;
        if (sub_1DCABC274() >= v7)
        {
          sub_1DCB88F98();
          sub_1DCB87A18();
          swift_bridgeObjectRelease();
          unint64_t v21 = v28;
          unint64_t v22 = sub_1DCABC260();
          sub_1DCA14B2C(v22, v23, 2, 0, v24, v21);
          swift_bridgeObjectRelease();
          swift_willThrow();

          goto LABEL_24;
        }
LABEL_26:
        __break(1u);
      }
      unsigned int v16 = sub_1DCABC274();
      BOOL v17 = v7 >= v16;
      long long v7 = (void *)(v7 - v16);
      if (!v17)
      {
        __break(1u);
        goto LABEL_26;
      }
      id v27 = v15;
      char v18 = a6(v11, &v27);
      id v19 = v27;

      if ((v18 & 1) == 0) {
        break;
      }

      if (!v7) {
        return;
      }
    }
    if (!v19) {
      goto LABEL_29;
    }
    id v20 = v19;
LABEL_23:
    swift_willThrow();

LABEL_24:
  }
}

uint64_t sub_1DCABA5FC(uint64_t result)
{
  if (result)
  {
    type metadata accessor for SNError();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v1 = sub_1DCABC260();
    sub_1DCA14B2C(v1, v2, 1, 0, v3, 0x80000001DCB9A300);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

id sub_1DCABA6E8(void *a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initSecondaryReader_format_error_, a1, a2, a3);

  return v5;
}

void sub_1DCABA74C(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_processingFormat);
  id v5 = objc_msgSend(v4, sel_channelLayout);

  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153A0]), sel_initWithStreamDescription_channelLayout_, a2, v5);
  if (v6)
  {
    sub_1DCAB99EC(a1, v6);
  }
  else
  {
    __break(1u);
  }
}

void sub_1DCABA810(void *a1, double a2)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend(a1, sel_processingFormat);
  id v5 = (char *)objc_msgSend(v4, sel_streamDescription);

  long long v7 = *(_OWORD *)(v5 + 8);
  long long v8 = *(_OWORD *)(v5 + 24);
  double v6 = a2;
  sub_1DCABA74C(a1, (uint64_t)&v6);
}

void *(*sub_1DCABA8CC(void *a1, uint64_t a2, char a3))()
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(_DWORD *)(v6 + 24) = a2;
  if (a3)
  {
    uint64_t v7 = swift_allocObject();
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, a1, a2);
    swift_release();
    *(void *)(v7 + 16) = 0;
    uint64_t v9 = sub_1DCABBFE8;
    if (v8)
    {
      *(void *)(swift_allocObject() + 16) = v8;
      swift_release();
      return sub_1DCABBFF0;
    }
  }
  else
  {
    id v10 = a1;
    return (void *(*)())sub_1DCABBFA4;
  }
  return (void *(*)())v9;
}

id sub_1DCABA9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_allocWithZone(MEMORY[0x1E4F153B0]);

  return objc_msgSend(v5, sel_initWithPCMFormat_frameCapacity_, a2, a3);
}

uint64_t sub_1DCABAA38(void *a1, uint64_t a2)
{
  if (a1)
  {
    swift_beginAccess();
    id v4 = *(void **)(a2 + 16);
    id v5 = v4;
    *a1 = v4;
    id v6 = v5;
  }
  return 0;
}

void sub_1DCABAA98(void *a1, unint64_t a2, uint64_t (*a3)(id *), uint64_t a4)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
  if (HIDWORD(a2))
  {
LABEL_9:
    sub_1DC8AF148();
    sub_1DC9872C8();
    goto LABEL_10;
  }
  sub_1DCABAEE8(a2, a1);
  if (v5) {
    return;
  }
  objc_msgSend(a1, sel_setFramePosition_, v10);
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_8:
    sub_1DC8AF148();
    sub_1DC9872D8();
LABEL_10:
    sub_1DC987350();
    __break(1u);
    return;
  }
  if (HIDWORD(v11)) {
    goto LABEL_9;
  }
  sub_1DCAB9F5C((void *)v11, a3, a4, (uint64_t (*)(void *, id *))_s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0, 0, v4, a1);
  sub_1DCABA5FC(v9);
}

void sub_1DCABABC4(void *a1, unsigned int a2)
{
  id v3 = objc_msgSend(a1, sel_processingFormat);
  objc_msgSend(v3, sel_sampleRate);
  double v5 = v4;

  sub_1DCABC1C4();
  if (v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v5 <= -2147483650.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1DCABC1D4();
  if (v7)
  {
    CMTimeMake(&v8, a2, (int)v5);
    return;
  }
LABEL_8:
  __break(1u);
}

CMTimeValue sub_1DCABAC64(uint64_t a1, uint64_t a2)
{
  CMTimeValue result = sub_1DCAB8F6C(a1, a2);
  if (result)
  {
    if (a1 == 0x8000000000000000 && result == -1) {
      goto LABEL_12;
    }
    if (a1 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (a1 <= 0x7FFFFFFF)
      {
        CMTimeMake(&v5, a1 / result, a1);
        return v5.value;
      }
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1DCABACE4(void *a1, unint64_t a2, CMTimeRoundingMethod a3)
{
  id v7 = objc_msgSend(a1, sel_fileFormat);
  objc_msgSend(v7, sel_sampleRate);
  double v9 = v8;

  sub_1DCABC1C4();
  if (v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v11 = objc_msgSend(a1, sel_processingFormat);
  objc_msgSend(v11, sel_sampleRate);
  double v13 = v12;

  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  CMTimeValue v14 = sub_1DCABAC64((uint64_t)v9, (uint64_t)v13);
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_18:
    sub_1DC8AF148();
    sub_1DC9872D8();
LABEL_20:
    uint64_t result = sub_1DC987350();
    __break(1u);
    return result;
  }
  if (HIDWORD(a2))
  {
    sub_1DC8AF148();
    sub_1DC9872C8();
    goto LABEL_20;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v15;
  CMTimeEpoch v19 = v16;
  sub_1DCABABC4(a1, a2);
  CMTimeValue v21 = v20;
  uint64_t v23 = v22;
  CMTimeEpoch v25 = v24;
  type metadata accessor for SNTimeUtils();
  uint64_t result = sub_1DC8ACFB8(v21, v23, v25, v17, v18, v19, *MEMORY[0x1E4F1FA48], *(void *)(MEMORY[0x1E4F1FA48] + 8), *(void *)(MEMORY[0x1E4F1FA48] + 16), a3);
  if (v3) {
    return v27;
  }
  return result;
}

void sub_1DCABAEE8(unsigned int a1, void *a2)
{
  sub_1DCABABC4(a2, a1);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_1DCABACE4(a2, a1, kCMTimeRoundingMethod_RoundTowardNegativeInfinity);
  if (v2) {
    return;
  }
  *(void *)&v70.timescale = v12;
  v70.CMTimeEpoch epoch = v13;
  CMTimeEpoch v19 = sub_1DCABC210(v11, v12, v13, v14, v15, v16, v17, v18, v64, v65, v66, *((uint64_t *)&v66 + 1), v67, v68, v6, v8, v10, v11);
  CMTimeRangeFromTimeToTime(v21, (CMTime *)v19, v20);
  uint64_t v22 = *((void *)&v66 + 1);
  uint64_t v23 = v67;
  uint64_t v24 = v68;
  id v25 = objc_msgSend(a2, sel_fileFormat);
  objc_msgSend(v25, sel_sampleRate);
  double v27 = v26;

  sub_1DCABC1C4();
  if (v28)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v27 <= -2147483650.0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1DCABC1D4();
  if (!v29) {
    goto LABEL_14;
  }
  CMTimeConvertScale(&v70, (CMTime *)&v64, (int)v27, kCMTimeRoundingMethod_RoundTowardNegativeInfinity);
  char value = v70.value;
  uint64_t v31 = *(void *)&v70.timescale;
  CMTimeEpoch epoch = v70.epoch;
  id v33 = objc_msgSend(a2, sel_processingFormat);
  objc_msgSend(v33, sel_sampleRate);
  double v35 = v34;

  sub_1DCABC1C4();
  if (v28)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v35 <= -2147483650.0)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  sub_1DCABC1D4();
  if (!v29) {
    goto LABEL_17;
  }
  uint64_t v64 = v22;
  uint64_t v65 = v23;
  *(void *)&long long v66 = v24;
  uint64_t v36 = CMTimeConvertScale(&v70, (CMTime *)&v64, (int)v35, kCMTimeRoundingMethod_RoundTowardNegativeInfinity);
  uint64_t v37 = *(void *)&v70.timescale;
  CMTimeEpoch v69 = v70.epoch;
  *(void *)&v70.timescale = v31;
  v70.CMTimeEpoch epoch = epoch;
  uint64_t v45 = sub_1DCABC210((uint64_t)v36, v38, v39, v40, v41, v42, v43, v44, v64, v65, v66, *((uint64_t *)&v66 + 1), v67, v68, v70.value, v37, v69, value);
  long long v48 = CMTimeRangeMake(v47, (CMTime *)v45, v46);
  sub_1DC8AF070((uint64_t)v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, *(double *)&v65, v66,
    v67,
    v68);
}

void sub_1DCABB0E0(void *a1, CMTimeRange *a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t a5, uint64_t (*a6)(void *, id, id *), uint64_t a7, uint64_t (*a8)(void *, id, id *), uint64_t a9, uint64_t (*a10)(void *, id *), uint64_t a11)
{
  type metadata accessor for SNTimeUtils();
  id v18 = objc_msgSend(a1, sel_processingFormat);
  objc_msgSend(v18, sel_sampleRate);
  double v20 = v19;

  sub_1DCABC1C4();
  if (v21)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v20 <= -2147483650.0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1DCABC1D4();
  if (!v22) {
    goto LABEL_18;
  }
  sub_1DC8AD51C((uint64_t)a2, (int)v20);
  if (!v11)
  {
    sub_1DCAB9BF8(a1, &v37, (double)a2->duration.timescale);
    sub_1DC8AC760(a2, &v37, (uint64_t)v32);
    if ((v33 & 0x8000000000000000) == 0)
    {
      if (HIDWORD(v33)) {
        goto LABEL_20;
      }
      unint64_t v23 = v34;
      unint64_t v27 = v36;
      unint64_t v28 = v35;
      sub_1DCABA32C((void *)v33, a4, a5, a6, a7, a10);
      sub_1DCABA5FC(v24);
      if ((v28 & 0x8000000000000000) == 0)
      {
        if (!HIDWORD(v28))
        {
          if (v23 != a3) {
            sub_1DCABAA98(a1, v23, a4, a5);
          }
          sub_1DCAB9F5C((void *)v28, a4, a5, a10, a11, v30, a1);
          sub_1DCABA5FC(v25);
          if ((v27 & 0x8000000000000000) != 0) {
            goto LABEL_19;
          }
          if (!HIDWORD(v27))
          {
            sub_1DCABA32C((void *)v27, a4, a5, a8, a9, a10);
            sub_1DCABA5FC(v26);
            return;
          }
        }
LABEL_20:
        sub_1DC8AF148();
        sub_1DC9872C8();
        goto LABEL_21;
      }
    }
LABEL_19:
    sub_1DC8AF148();
    sub_1DC9872D8();
LABEL_21:
    sub_1DC987350();
    __break(1u);
  }
}

uint64_t sub_1DCABB360(void *a1, CMTimeRange *a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(void *, id, id *), uint64_t a7, uint64_t (*a8)(void *, id, id *), uint64_t a9, uint64_t (*a10)(void *, id *), uint64_t a11)
{
  id v18 = objc_msgSend(a1, sel_processingFormat);
  double v19 = sub_1DCABA8CC(v18, a4, a5);
  uint64_t v21 = v20;

  sub_1DCABB0E0(a1, a2, a3, (uint64_t (*)(id *))v19, v21, a6, a7, a8, a9, a10, a11);
  return swift_release();
}

uint64_t sub_1DCABB444(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id *), uint64_t a5, uint64_t (*a6)(void *, id *), uint64_t a7)
{
  type metadata accessor for SNTimeUtils();
  id v13 = objc_msgSend(a1, sel_processingFormat);
  objc_msgSend(v13, sel_sampleRate);
  double v15 = v14;

  sub_1DCABC1C4();
  if (v16)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v15 <= -2147483650.0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1DCABC1D4();
  if (!v17) {
    goto LABEL_14;
  }
  uint64_t result = sub_1DC8AD51C(a2, (int)v15);
  if (!v7)
  {
    sub_1DCAB9BF8(a1, v30, (double)*(int *)(a2 + 32));
    uint64_t v19 = sub_1DC8AE000((CMTimeValue *)a2, (uint64_t *)v30);
    uint64_t v20 = v19;
    unint64_t v21 = *(void *)(v19 + 16);
    if (!v21)
    {
LABEL_16:
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    uint64_t v26 = v19 + 32;
    swift_bridgeObjectRetain();
    uint64_t v22 = 32;
    unint64_t v27 = v21;
    do
    {
      long long v23 = *(_OWORD *)(v20 + v22 + 16);
      *(_OWORD *)&v31.start.char value = *(_OWORD *)(v20 + v22);
      *(_OWORD *)&v31.start.CMTimeEpoch epoch = v23;
      *(_OWORD *)&v31.duration.timescale = *(_OWORD *)(v20 + v22 + 32);
      sub_1DCABB0E0(a1, &v31, a3, a4, a5, (uint64_t (*)(void *, id, id *))sub_1DCABB74C, 0, (uint64_t (*)(void *, id, id *))sub_1DCABB74C, 0, a6, a7);
      a3 = sub_1DCB883C8();
      v22 += 48;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    if (v27 <= *(void *)(v20 + 16))
    {
      uint64_t v24 = v26 + 48 * v27;
      long long v25 = *(_OWORD *)(v24 - 32);
      v30[3] = *(_OWORD *)(v24 - 48);
      v30[4] = v25;
      v30[5] = *(_OWORD *)(v24 - 16);
      swift_bridgeObjectRelease();
      return sub_1DCB883C8();
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1DCABB664(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(void *, id *), uint64_t a7)
{
  id v15 = objc_msgSend(a1, sel_processingFormat);
  char v16 = sub_1DCABA8CC(v15, a4, a5);
  uint64_t v18 = v17;

  uint64_t v19 = sub_1DCABB444(a1, a2, a3, (uint64_t (*)(id *))v16, v18, a6, a7);
  if (!v21) {
    uint64_t v7 = v19;
  }
  swift_release();
  return v7;
}

uint64_t sub_1DCABB74C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    type metadata accessor for SNError();
    id v4 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 2, 0, 0xD000000000000019, 0x80000001DCB9A330);
    id v5 = v4;
    *a3 = v4;
  }
  return 0;
}

id sub_1DCABB7D0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for SNAudioFileUtils();
  id result = sub_1DCAB9928(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id sub_1DCABB828@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  type metadata accessor for SNAudioFileUtils();
  id result = sub_1DCAB97EC(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id sub_1DCABB878()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNAudioFileUtils();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1DCABB8D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNAudioFileUtils();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DCABB904(void (*a1)(uint64_t *__return_ptr))
{
  *(void *)(v1 + 16) = 0;
  id v4 = (void *)MEMORY[0x1E01A8D20]();
  a1(&v7);
  if (v2)
  {
    swift_release();
  }
  else
  {
    id v5 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = v7;
  }
  return v1;
}

uint64_t sub_1DCABB998()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  return result;
}

BOOL sub_1DCABB9A4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  BOOL v2 = v1 != 0;
  *(void *)(v0 + 16) = 0;

  return v2;
}

unint64_t sub_1DCABB9DC()
{
  unint64_t result = qword_1EAAA81D0;
  if (!qword_1EAAA81D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA81D0);
  }
  return result;
}

void type metadata accessor for AudioFileSequence()
{
}

void *initializeBufferWithCopyOfBuffer for AudioFileSequence.Iterator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for AudioFileSequence.Iterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for AudioFileSequence.Iterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for AudioFileSequence.Iterator()
{
}

uint64_t type metadata accessor for SNAudioFileUtils()
{
  return self;
}

id sub_1DCABBB24(uint64_t a1)
{
  BOOL v2 = v1;
  v14[1] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = (void *)sub_1DCB86948();
  v14[0] = 0;
  id v5 = objc_msgSend(v2, sel_initForReading_error_, v4, v14);

  id v6 = v14[0];
  if (v5)
  {
    sub_1DCB86A18();
    sub_1DC88819C();
    uint64_t v8 = *(void (**)(uint64_t))(v7 + 8);
    id v9 = v6;
    uint64_t v10 = sub_1DCABC24C();
    v8(v10);
  }
  else
  {
    id v11 = v14[0];
    sub_1DCB86898();

    swift_willThrow();
    sub_1DCB86A18();
    sub_1DC88819C();
    (*(void (**)(uint64_t))(v12 + 8))(a1);
  }
  return v5;
}

id sub_1DCABBC54(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = v3;
  v18[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v8 = (void *)sub_1DCB86948();
  v18[0] = 0;
  id v9 = objc_msgSend(v4, sel_initForReading_commonFormat_interleaved_error_, v8, a2, a3 & 1, v18);

  id v10 = v18[0];
  if (v9)
  {
    sub_1DCB86A18();
    sub_1DC88819C();
    uint64_t v12 = *(void (**)(uint64_t))(v11 + 8);
    id v13 = v10;
    uint64_t v14 = sub_1DCABC24C();
    v12(v14);
  }
  else
  {
    id v15 = v18[0];
    sub_1DCB86898();

    swift_willThrow();
    sub_1DCB86A18();
    sub_1DC88819C();
    (*(void (**)(uint64_t))(v16 + 8))(a1);
  }
  return v9;
}

id sub_1DCABBD94(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5 = v4;
  v19[1] = *(id *)MEMORY[0x1E4F143B8];
  id v9 = (void *)sub_1DCB86948();
  id v10 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  v19[0] = 0;
  id v11 = objc_msgSend(v5, sel_initForWriting_settings_commonFormat_interleaved_error_, v9, v10, a3, a4 & 1, v19);

  id v12 = v19[0];
  if (v11)
  {
    uint64_t v13 = sub_1DCB86A18();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    id v15 = v12;
    v14(a1, v13);
  }
  else
  {
    id v16 = v19[0];
    sub_1DCB86898();

    swift_willThrow();
    uint64_t v17 = sub_1DCB86A18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
  }
  return v11;
}

unint64_t sub_1DCABBF2C()
{
  unint64_t result = qword_1EAAA81D8;
  if (!qword_1EAAA81D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAA81D8);
  }
  return result;
}

uint64_t sub_1DCABBF6C()
{
  return swift_deallocObject();
}

id sub_1DCABBFA4(uint64_t a1)
{
  return sub_1DCABA9E8(a1, *(void *)(v1 + 16), *(unsigned int *)(v1 + 24));
}

uint64_t sub_1DCABBFB0()
{
  return swift_deallocObject();
}

uint64_t sub_1DCABBFE8(void *a1)
{
  return sub_1DCABAA38(a1, v1);
}

void *sub_1DCABBFF0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

double sub_1DCABC018@<D0>(_OWORD *a1@<X8>)
{
  return sub_1DCAB9DDC(a1);
}

unint64_t sub_1DCABC034()
{
  unint64_t result = qword_1EAAA81E0;
  if (!qword_1EAAA81E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA81E0);
  }
  return result;
}

id sub_1DCABC080@<X0>(void *a1@<X8>)
{
  return sub_1DCABB7D0(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

unsigned char *sub_1DCABC09C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCABC138);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for AudioFileSequence.DomainError()
{
}

unint64_t sub_1DCABC170()
{
  unint64_t result = qword_1EAAA81E8;
  if (!qword_1EAAA81E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA81E8);
  }
  return result;
}

double sub_1DCABC1D4()
{
  return 2147483650.0;
}

char *sub_1DCABC1E4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

char *sub_1DCABC210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  return &a18;
}

uint64_t sub_1DCABC220()
{
  return v0;
}

uint64_t sub_1DCABC24C()
{
  return v0;
}

unint64_t sub_1DCABC260()
{
  return 0xD000000000000017;
}

id sub_1DCABC274()
{
  return [v0 (SEL)(v1 + 2009)];
}

uint64_t sub_1DCABC28C()
{
  long long v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  long long v2 = v0[3];
  _OWORD v4[2] = v0[2];
  v4[3] = v2;
  sub_1DC960918((uint64_t)v4);
  sub_1DCAC0A50();
  sub_1DC960970((uint64_t)v4);
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCABC310(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v24 = a1[7];
  uint64_t v25 = a1[6];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  BOOL v12 = *a1 == *a2 && a1[1] == a2[1];
  uint64_t v22 = a2[6];
  uint64_t v23 = a2[7];
  if (v12 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v14 & 1) != 0))
  {
    BOOL v15 = v4 == v8 && v5 == v9;
    if (v15 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v16 & 1) != 0))
    {
      BOOL v17 = v6 == v10 && v7 == v11;
      if (v17 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v18 & 1) != 0))
      {
        BOOL v19 = v25 == v22 && v24 == v23;
        if (v19 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v20 & 1) != 0))
        {
          if (a1[8] == a2[8] && a1[9] == a2[9])
          {
            return 1;
          }
          else
          {
            return sub_1DCB89018();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCABC47C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E49726576726573 && a2 == 0xEA00000000006F66;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461507972657571 && a2 == 0xE900000000000068)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCABC584(char a1)
{
  if (a1) {
    return 0x7461507972657571;
  }
  else {
    return 0x6E49726576726573;
  }
}

uint64_t sub_1DCABC5C4(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA8220);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCABDC44();
  sub_1DCB892B8();
  sub_1DC9608CC();
  sub_1DCB88F18();
  if (!v1) {
    sub_1DCB88EC8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1DCABC714()
{
  sub_1DCB891A8();
  long long v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  long long v2 = v0[3];
  _OWORD v4[2] = v0[2];
  v4[3] = v2;
  sub_1DC960918((uint64_t)v4);
  sub_1DCAC0A50();
  sub_1DC960970((uint64_t)v4);
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  return sub_1DCB891F8();
}

uint64_t sub_1DCABC7A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA8208);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCABDC44();
  sub_1DCB89298();
  if (v2) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  sub_1DC96081C();
  sub_1DCB88DF8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DCB88DA8();
  uint64_t v8 = v7;
  uint64_t v12 = v6;
  uint64_t v9 = sub_1DCABE14C();
  v10(v9);
  swift_bridgeObjectRetain();
  sub_1DC8818D0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v13;
  a2[1] = v14;
  a2[2] = v15;
  a2[3] = v16;
  a2[4] = v17;
  a2[5] = v18;
  a2[6] = v19;
  a2[7] = v20;
  a2[8] = v12;
  a2[9] = v8;
  return result;
}

uint64_t sub_1DCABCA1C()
{
  return sub_1DCABC584(*v0);
}

uint64_t sub_1DCABCA24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCABC47C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCABCA4C(uint64_t a1)
{
  unint64_t v2 = sub_1DCABDC44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCABCA88(uint64_t a1)
{
  unint64_t v2 = sub_1DCABDC44();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1DCABCAC4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1DCABC7A0(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x50uLL);
  }
  return result;
}

uint64_t sub_1DCABCB10(void *a1)
{
  return sub_1DCABC5C4(a1);
}

uint64_t sub_1DCABCB30()
{
  long long v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  long long v2 = v0[3];
  _OWORD v4[2] = v0[2];
  v4[3] = v2;
  sub_1DCB891A8();
  sub_1DC960918((uint64_t)v4);
  sub_1DCAC0A50();
  sub_1DC960970((uint64_t)v4);
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  return sub_1DCB891F8();
}

id sub_1DCABCBC0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl];
  uint64_t v4 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 8];
  uint64_t v6 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 16];
  uint64_t v7 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 24];
  uint64_t v8 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 32];
  uint64_t v9 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 40];
  uint64_t v10 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 48];
  uint64_t v11 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 56];
  uint64_t v12 = (objc_class *)type metadata accessor for SNListFilesRequest();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  uint64_t v14 = &v13[OBJC_IVAR___SNListFilesRequest_impl];
  *(void *)uint64_t v14 = v5;
  *((void *)v14 + 1) = v4;
  *((void *)v14 + 2) = v6;
  *((void *)v14 + 3) = v7;
  *((void *)v14 + 4) = v8;
  *((void *)v14 + 5) = v9;
  *((void *)v14 + 6) = v10;
  *((void *)v14 + 7) = v11;
  *((void *)v14 + 8) = a2;
  *((void *)v14 + 9) = a3;
  v19.receiver = v13;
  v19.super_class = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = objc_msgSendSuper2(&v19, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v15;
}

id (*sub_1DCABCD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1DC8A22D0();
  uint64_t v13 = v12 - v11;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F946E0]), sel_init);
  objc_msgSend(v14, sel_setDispatchQueue_, a1);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F5E108]), sel_init);
  sub_1DCA0C280(0xD000000000000017, 0x80000001DCB960F0, v15);
  uint64_t v16 = (void *)(v5 + OBJC_IVAR___SNListFilesRequest_impl);
  uint64_t v17 = *(void *)(v5 + OBJC_IVAR___SNListFilesRequest_impl + 16);
  uint64_t v18 = v16[3];
  swift_bridgeObjectRetain();
  sub_1DCABDC90(v17, v18, v15);
  uint64_t v20 = v16[8];
  uint64_t v19 = v16[9];
  uint64_t v21 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v13, 1, 1, v21);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  void v22[4] = v15;
  v22[5] = v20;
  v22[6] = v19;
  v22[7] = a4;
  v22[8] = a5;
  v22[9] = a2;
  v22[10] = a3;
  v22[11] = v14;
  swift_bridgeObjectRetain();
  id v23 = v15;
  swift_retain();
  swift_retain();
  id v24 = v14;
  uint64_t v25 = sub_1DCA97644();
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = v25;
  v26[3] = v24;
  v26[4] = v23;
  return sub_1DCABDE9C;
}

uint64_t sub_1DCABCF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 328) = v11;
  *(_OWORD *)(v8 + 312) = v10;
  *(void *)(v8 + 296) = a7;
  *(void *)(v8 + 304) = a8;
  *(void *)(v8 + 280) = a5;
  *(void *)(v8 + 288) = a6;
  *(void *)(v8 + 272) = a4;
  return MEMORY[0x1F4188298](sub_1DCABCF48, 0, 0);
}

uint64_t sub_1DCABCF48()
{
  sub_1DC886900();
  long long v1 = (void *)v0[34];
  v0[2] = v0;
  v0[3] = sub_1DCABD038;
  uint64_t v2 = swift_continuation_init();
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 0x40000000;
  v0[20] = sub_1DCB29604;
  v0[21] = &unk_1E6CA71D8;
  v0[22] = v2;
  objc_msgSend(v1, sel_activateWithCompletion_, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DCABD038()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DCABE13C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 336) = v4;
  if (v4) {
    uint64_t v5 = sub_1DCABD580;
  }
  else {
    uint64_t v5 = sub_1DCABD118;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DCABD118()
{
  sub_1DC8867A8();
  type metadata accessor for SNFileSharingUtils();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[43] = v1;
  void *v1 = v0;
  v1[1] = sub_1DCABD1B8;
  uint64_t v3 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v4 = v0[34];
  return sub_1DC914230(v3, v2, v4);
}

uint64_t sub_1DCABD1B8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DCABE13C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 352) = v4;
  *(void *)(v2 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_1DCABD60C;
  }
  else {
    uint64_t v5 = sub_1DCABD29C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DCABD29C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 5;
  Class super_class = v1[20].super_class;
  uint64_t v3 = (void (*)(void))v1[19].super_class;
  uint64_t v4 = (void (*)(objc_super *))v1[18].super_class;
  uint64_t v5 = sub_1DCABDEA8(v1[22].receiver);
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = (objc_class *)type metadata accessor for SNFileListingResult();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR___SNFileListingResult_fileItems] = v6;
  v1[16].receiver = v8;
  v1[16].Class super_class = v7;
  id v9 = objc_msgSendSuper2(v1 + 16, sel_init);
  v1[23].receiver = v9;
  v1[15].Class super_class = v7;
  v1[14].receiver = v9;
  id v10 = v9;
  v4(v1 + 14);
  sub_1DC8818D0((uint64_t)&v1[14]);
  v3(0);
  v1[5].receiver = v1;
  v1[5].Class super_class = (Class)sub_1DCABD440;
  uint64_t v11 = swift_continuation_init();
  v1[11].Class super_class = (Class)MEMORY[0x1E4F143A8];
  v1[12].receiver = (id)0x40000000;
  v1[12].Class super_class = (Class)sub_1DCB29604;
  v1[13].receiver = &unk_1E6CA7208;
  v1[13].Class super_class = (Class)v11;
  [(objc_class *)super_class activateWithCompletion:&v1[11].super_class];
  return MEMORY[0x1F41881E8](v2);
}

uint64_t sub_1DCABD440()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DCABE13C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 112);
  *(void *)(v1 + 376) = v4;
  if (v4) {
    uint64_t v5 = sub_1DCABD690;
  }
  else {
    uint64_t v5 = sub_1DCABD520;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DCABD520()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void **)(v0 + 352);

  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DCABD580()
{
  sub_1DC886900();
  swift_willThrow();
  uint64_t v1 = *(void **)(v0 + 336);
  uint64_t v2 = *(void (**)(void *))(v0 + 312);
  id v3 = v1;
  v2(v1);

  sub_1DC8BA978();
  return v4();
}

uint64_t sub_1DCABD60C()
{
  sub_1DC886900();
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v2 = *(void (**)(void *))(v0 + 312);
  id v3 = v1;
  v2(v1);

  sub_1DC8BA978();
  return v4();
}

uint64_t sub_1DCABD690()
{
  sub_1DC886900();
  uint64_t v1 = (void *)v0[46];
  uint64_t v2 = (void *)v0[44];
  swift_willThrow();

  id v3 = (void *)v0[47];
  uint64_t v4 = (void (*)(void *))v0[39];
  id v5 = v3;
  v4(v3);

  sub_1DC8BA978();
  return v6();
}

id sub_1DCABD728(uint64_t a1, void *a2, void *a3)
{
  sub_1DCB87EE8();
  objc_msgSend(a2, sel_invalidate);

  return objc_msgSend(a3, sel_invalidate);
}

id SNListFilesRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNListFilesRequest.init()()
{
}

id SNListFilesRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SNListFilesRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNListFilesRequest()
{
  return self;
}

id (*sub_1DCABD8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  return sub_1DCABDE9C;
}

uint64_t method lookup function for SNListFilesRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNListFilesRequest);
}

uint64_t destroy for ListFilesRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ListFilesRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ListFilesRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ListFilesRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

void *assignWithTake for ListFilesRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListFilesRequest(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListFilesRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListFilesRequest()
{
  return &type metadata for ListFilesRequest;
}

unint64_t sub_1DCABDBF8()
{
  unint64_t result = qword_1EAAA8200;
  if (!qword_1EAAA8200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8200);
  }
  return result;
}

unint64_t sub_1DCABDC44()
{
  unint64_t result = qword_1EAAA8210;
  if (!qword_1EAAA8210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8210);
  }
  return result;
}

void sub_1DCABDC90(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1DCB87908();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDestinationID_, v4);
}

uint64_t sub_1DCABDCF4()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCABDD54(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1DC97AE44;
  return sub_1DCABCF08(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1DCABDE54()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1DCABDE9C()
{
  return sub_1DCABD728(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1DCABDEA8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_fileItems);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_1DCABDF08();
  uint64_t v3 = sub_1DCB87C38();

  return v3;
}

unint64_t sub_1DCABDF08()
{
  unint64_t result = qword_1EAAAB7E0;
  if (!qword_1EAAAB7E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAAB7E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ListFilesRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCABE014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListFilesRequest.CodingKeys()
{
  return &type metadata for ListFilesRequest.CodingKeys;
}

unint64_t sub_1DCABE050()
{
  unint64_t result = qword_1EAAA8240;
  if (!qword_1EAAA8240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8240);
  }
  return result;
}

unint64_t sub_1DCABE0A0()
{
  unint64_t result = qword_1EAAA8248;
  if (!qword_1EAAA8248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8248);
  }
  return result;
}

unint64_t sub_1DCABE0F0()
{
  unint64_t result = qword_1EAAA8250[0];
  if (!qword_1EAAA8250[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA8250);
  }
  return result;
}

uint64_t sub_1DCABE14C()
{
  return v0;
}

uint64_t sub_1DCABE160()
{
  return sub_1DCABE1E0();
}

uint64_t sub_1DCABE1E0()
{
  return sub_1DCB86698();
}

uint64_t sub_1DCABE230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (!a1) {
    uint64_t v4 = 0;
  }
  if (a3)
  {
    if (v4 == a4 - a3) {
      return sub_1DCB88778();
    }
  }
  else if (!v4)
  {
    return sub_1DCB88778();
  }
  sub_1DC96EDAC();
  sub_1DC883884();
  *unsigned int v6 = 0;
  return swift_willThrow();
}

void sub_1DCABE2A0(uint64_t a1, void *a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)MEMORY[0x1E01A8D20]();
  uint64_t v5 = *(void **)(a1 + 16);
  if (v5)
  {
    v9[0] = 0;
    id v6 = v5;
    if (objc_msgSend(v6, sel_writeFromBuffer_error_, a2, v9))
    {
      id v7 = v9[0];
    }
    else
    {
      id v8 = v9[0];
      sub_1DCB86898();

      swift_willThrow();
    }
  }
  else
  {
    sub_1DC87E988(&qword_1EAA9E2E8);
    sub_1DC8AF01C();
    sub_1DC883884();
    swift_willThrow();
  }
}

uint64_t sub_1DCABE3B0()
{
  return sub_1DCB87CA8();
}

uint64_t sub_1DCABE3D4()
{
  return sub_1DCB88828();
}

uint64_t sub_1DCABE400()
{
  return sub_1DCB86AA8();
}

uint64_t sub_1DCABE420()
{
  return sub_1DCB87B68();
}

uint64_t sub_1DCABE440()
{
  return sub_1DCB88768();
}

uint64_t sub_1DCABE460()
{
  uint64_t result = sub_1DCB88718();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCABE4F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = MEMORY[0x1E01A6B70](a1, a2, AssociatedTypeWitness);
  return a3(v7);
}

uint64_t sub_1DCABE57C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCABE5B8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_1DCB88718();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1DCABE640()
{
  sub_1DCABE5B8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReleasingContainer()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCABE6B0()
{
  return sub_1DCABE7F0();
}

uint64_t sub_1DCABE6BC()
{
  sub_1DCB88738();
  return v0;
}

uint64_t sub_1DCABE6F0()
{
  sub_1DCABE6BC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FixedAddressMutableBuffer()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCABE73C(uint64_t a1)
{
  uint64_t v3 = swift_slowAlloc();
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v3 + a1;
  return v1;
}

uint64_t sub_1DCABE778()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1) {
    MEMORY[0x1E01A99C0](v1, -1, -1);
  }

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FixedAddressMutableRawBuffer()
{
  return self;
}

uint64_t sub_1DCABE7E0()
{
  return sub_1DCABE7F0();
}

uint64_t sub_1DCABE7F0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DCABE82C()
{
  sub_1DCB88708();
  return v0;
}

uint64_t sub_1DCABE860()
{
  sub_1DCABE82C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FixedAddressMutablePointer()
{
  return sub_1DC8866E4();
}

unsigned char *sub_1DCABE8AC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCABE948);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for ReleasingContainer.DomainError()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCABE988()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCABE9A4(uint64_t a1, uint64_t a2)
{
  return sub_1DCABE4F4(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 40));
}

uint64_t sub_1DCABE9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 - a3;
  if (!a3) {
    uint64_t v4 = 0;
  }
  if (a1)
  {
    if (v4 == a2 - a1) {
      return sub_1DCB88778();
    }
  }
  else if (!v4)
  {
    return sub_1DCB88778();
  }
  sub_1DC96EDAC();
  sub_1DC883884();
  *id v6 = 0;
  return swift_willThrow();
}

uint64_t sub_1DCABEA50(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3 < 0) {
    goto LABEL_6;
  }
  if (!result)
  {
    if (!a3)
    {
      char v3 = 2;
      goto LABEL_7;
    }
LABEL_6:
    char v3 = 1;
LABEL_7:
    sub_1DC96EDAC();
    sub_1DC883884();
    *uint64_t v4 = v3;
    return swift_willThrow();
  }
  if (a2 - result < a3) {
    goto LABEL_6;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MemUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCABEB98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MemUtils.DomainError()
{
  return &type metadata for MemUtils.DomainError;
}

unint64_t sub_1DCABEBD4()
{
  unint64_t result = qword_1EAAA8460;
  if (!qword_1EAAA8460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8460);
  }
  return result;
}

void sub_1DCABEC20(void *a1)
{
  sub_1DCABEDF0(a1);
  if (v1)
  {
    swift_getErrorValue();
    uint64_t v5 = sub_1DCB89118();
    uint64_t v7 = v6;
    sub_1DCA22914();
    swift_allocError();
    *id v8 = 0xD000000000000016;
    v8[1] = 0x80000001DCB9A3E0;
    v8[2] = v5;
    v8[3] = v7;
    swift_willThrow();
  }
  else
  {
    sub_1DCABEE70(a1);
    objc_msgSend(a1, sel_sampleRate);
    id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v3);
    sub_1DCA89A70();
  }
}

_DWORD *sub_1DCABEDF0(void *a1)
{
  unint64_t result = objc_msgSend(a1, sel_streamDescription);
  if (result[2] != 1819304813)
  {
    type metadata accessor for SNError();
    sub_1DC8E7B68();
    sub_1DCABEEFC(v2, v3, (uint64_t)"Audio format must be PCM");
    return (_DWORD *)swift_willThrow();
  }
  return result;
}

id sub_1DCABEE70(void *a1)
{
  if (!objc_msgSend(a1, sel_channelCount) || (id result = objc_msgSend(a1, sel_sampleRate), v3 <= 0.0))
  {
    type metadata accessor for SNError();
    sub_1DC8E7B68();
    sub_1DCABEEFC(v4, v5, (uint64_t)"Audio format channel count and sample rate must be nonzero");
    return (id)swift_willThrow();
  }
  return result;
}

id sub_1DCABEEFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_1DCA14B2C(0xD000000000000017, a1, 3, 0, a2, (a3 - 32) | 0x8000000000000000);
}

void sub_1DCABEF24(void *a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  type metadata accessor for SNUtils();
  uint64_t v2 = sub_1DCB22784();
  uint64_t v3 = sub_1DCB22EA4();
  id v4 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v5 = sub_1DCB877B8();

  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v6 != 1) {
    goto LABEL_13;
  }
  id v7 = objc_msgSend(a1, sel_inputDescriptionsByName);
  uint64_t v8 = sub_1DCB877B8();

  uint64_t v9 = (void *)sub_1DC9A4430(v8);
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_13;
  }
  if (objc_msgSend(v9, sel_type) != (id)5
    || (id v10 = objc_msgSend(v9, sel_multiArrayConstraint)) == 0)
  {

LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1DCA23E10(0x80000001DCB90E90, 0xD000000000000026, (uint64_t)"Must only have one input audio feature");
    swift_willThrow();
    return;
  }
  uint64_t v11 = v10;
  id v40 = 0;
  if ((sub_1DCAC0720(v2, (uint64_t)&v40, v10) & 1) == 0)
  {
    id v22 = v40;
    swift_bridgeObjectRelease();
    id v23 = (void *)sub_1DCB86898();

    swift_willThrow();
    type metadata accessor for SNError();
    sub_1DCAC09F0();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCAC0990();
    uint64_t v24 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    MEMORY[0x1E01A6C50](v2, v24);
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    unint64_t v25 = v41;
    unint64_t v26 = sub_1DCAC09D4();
    sub_1DCA14B2C(v26, v27, v28, v29, v30, v25);
    swift_bridgeObjectRelease();
    swift_willThrow();

LABEL_17:
    return;
  }
  id v12 = v40;
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(a1, sel_outputDescriptionsByName);
  uint64_t v14 = sub_1DCB877B8();

  uint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  if (v15 != 1
    || (id v16 = objc_msgSend(a1, sel_outputDescriptionsByName),
        uint64_t v17 = sub_1DCB877B8(),
        v16,
        uint64_t v18 = (void *)sub_1DC9A4430(v17),
        swift_bridgeObjectRelease(),
        !v18))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1DCA23E10(0x80000001DCB90E90, 0xD00000000000002CLL, (uint64_t)"Must only have one output multiarray feature");
    swift_willThrow();
    goto LABEL_17;
  }
  if (objc_msgSend(v18, sel_type) != (id)5
    || (id v19 = objc_msgSend(v18, sel_multiArrayConstraint)) == 0)
  {

    goto LABEL_16;
  }
  uint64_t v20 = v19;
  id v40 = 0;
  if (sub_1DCAC0720(v3, (uint64_t)&v40, v19))
  {
    id v21 = v40;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v31 = v40;
    double v32 = (void *)sub_1DCB86898();

    swift_willThrow();
    type metadata accessor for SNError();
    sub_1DCAC09F0();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCAC0990();
    uint64_t v33 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    MEMORY[0x1E01A6C50](v3, v33);
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    unint64_t v34 = v41;
    unint64_t v35 = sub_1DCAC09D4();
    sub_1DCA14B2C(v35, v36, v37, v38, v39, v34);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
}

uint64_t sub_1DCABF460(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  swift_bridgeObjectRelease();
  id v5 = v1;
  sub_1DCABEF24(a1);
  if (v2)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    v53.receiver = v5;
    v53.Class super_class = (Class)ObjectType;
    v58[0] = 0x40467A0000;
    v58[1] = 0x45EA600042FA0000;
    v58[2] = 0x3C23D70A00000002;
    char v59 = 0;
    long long v60 = xmmword_1DCBC0330;
    uint64_t v61 = 0;
    sub_1DC87E988(&qword_1EAA9C720);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1DCBD8F30;
    *(void *)(v6 + 32) = sub_1DCB88048();
    *(void *)(v6 + 40) = sub_1DCB88048();
    *(void *)(v6 + 48) = sub_1DCB88048();
    sub_1DCAC0A18();
    id v62 = v57;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1DCBD8F40;
    *(void *)(v7 + 32) = sub_1DCB88048();
    *(void *)(v7 + 40) = sub_1DCB88048();
    *(void *)(v7 + 48) = sub_1DCB88048();
    *(void *)(v7 + 56) = sub_1DCB88048();
    sub_1DCAC0A18();
    uint64_t v8 = (uint64_t)v57;
    sub_1DC89C89C(0, &qword_1EAAA8470);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1DCBD8F30;
    id v10 = self;
    *(void *)(v9 + 32) = objc_msgSend(v10, sel_valueWithRange_, 1, 1);
    *(void *)(v9 + 40) = sub_1DCAC09B4();
    *(void *)(v9 + 48) = objc_msgSend(v10, sel_valueWithRange_, 15600, 1);
    sub_1DCAC0A18();
    id v11 = sub_1DCABFB60();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DCBD8F40;
    *(void *)(v12 + 32) = sub_1DCAC09B4();
    *(void *)(v12 + 40) = sub_1DCAC09B4();
    *(void *)(v12 + 48) = objc_msgSend(v10, sel_valueWithRange_, 64, 1);
    *(void *)(v12 + 56) = objc_msgSend(v10, sel_valueWithRange_, 96, 1);
    sub_1DCAC0A18();
    id v13 = sub_1DCABFB60();
    sub_1DCA880F8();
    uint64_t v14 = v8;
    sub_1DC935B48(v15);
    swift_bridgeObjectRelease();
    sub_1DCA880D8();
    sub_1DC935B48(v17);
    swift_bridgeObjectRelease();
    sub_1DC89C89C(0, (unint64_t *)&unk_1EAAAB380);
    id v54 = v11;
    id v18 = sub_1DCABFBE8((uint64_t)v62, 65568, v54);
    id v62 = v13;
    id v19 = sub_1DCABFBE8(v14, 65568, v62);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1DCBB8670;
    *(void *)(v20 + 32) = v18;
    sub_1DCB87C68();
    id v52 = v18;
    sub_1DCAC0A04();
    id v26 = sub_1DCB22F74(v21, v22, v23, v24, v25);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1DCBB8670;
    *(void *)(v27 + 32) = v19;
    double v57 = (void *)v27;
    sub_1DCB87C68();
    id v55 = v19;
    sub_1DCAC0A04();
    id v33 = sub_1DCB22F74(v28, v29, v30, v31, v32);
    sub_1DC87E988(&qword_1EAAAB390);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
    id v35 = objc_msgSend(v26, sel_name);
    uint64_t v36 = sub_1DCB87938();
    uint64_t v38 = v37;

    *(void *)(inited + 32) = v36;
    *(void *)(inited + 40) = v38;
    *(void *)(inited + 48) = v26;
    id v51 = v26;
    uint64_t v50 = sub_1DCB877D8();
    uint64_t v39 = swift_initStackObject();
    *(_OWORD *)(v39 + 16) = xmmword_1DCBB93B0;
    id v40 = objc_msgSend(v33, sel_name);
    uint64_t v41 = sub_1DCB87938();
    uint64_t v43 = v42;

    *(void *)(v39 + 32) = v41;
    *(void *)(v39 + 40) = v43;
    *(void *)(v39 + 48) = v33;
    id v44 = v33;
    uint64_t v45 = sub_1DCB877D8();
    id v46 = objc_allocWithZone(MEMORY[0x1E4F1E998]);
    id v47 = sub_1DCA88D70(v50, v45, 0, 0xE000000000000000, 0, 0xE000000000000000, 0);
    id v48 = objc_allocWithZone((Class)type metadata accessor for _SNLogMelSpectrogramCustomModel());
    uint64_t v49 = sub_1DCADD3F8(v47, (uint64_t)v58);

    *(void *)((char *)v53.receiver + OBJC_IVAR____SNVGGishFrontEndProcessingCustomModel_underlyingModel) = v49;
    objc_super v56 = v53;
    uint64_t ObjectType = (uint64_t)objc_msgSendSuper2(&v56, sel_init);
  }
  return ObjectType;
}

id sub_1DCABFB60()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
  uint64_t v1 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSizeRangeForDimension_, v1);

  return v2;
}

id sub_1DCABFBE8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  id v5 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_constraintWithShape_dataType_shapeConstraint_, v5, a2, a3);

  return v6;
}

id sub_1DCABFD3C(void *a1)
{
  sub_1DC87E988(&qword_1EAA9C720);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DCBD8F30;
  *(void *)(v3 + 32) = sub_1DCB88048();
  *(void *)(v3 + 40) = sub_1DCB88048();
  *(void *)(v3 + 48) = sub_1DCB88048();
  sub_1DCB87C68();
  uint64_t v4 = v3;
  type metadata accessor for SNUtils();
  sub_1DCB22784();
  uint64_t v5 = sub_1DCB22EA4();
  id v6 = objc_msgSend(a1, sel_featureNames);
  id v7 = (id)sub_1DCB87FE8();

  uint64_t v8 = sub_1DC935B48((uint64_t)v7);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v53 = v5;
    uint64_t v11 = v8;
    swift_bridgeObjectRelease();
    id v7 = (id)sub_1DCB87908();
    id v12 = objc_msgSend(a1, sel_featureValueForName_, v7);

    if (v12 && (id v7 = objc_msgSend(v12, sel_multiArrayValue), v12, v7))
    {
      id v13 = objc_msgSend(v7, sel_shape);
      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
      sub_1DCB87C38();

      LOBYTE(v13) = sub_1DC8DD0D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13)
      {
        uint64_t v14 = (void *)swift_allocObject();
        id v14[2] = v7;
        id v51 = v7;
        id v52 = objc_msgSend(v51, sel_dataPointer);
        id v15 = objc_msgSend(v51, sel_dataType);
        id v16 = (void *)sub_1DCB87C08();
        unint64_t v17 = sub_1DCA78C1C(v16);

        objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
        swift_retain();
        id v21 = sub_1DCA7C058((uint64_t)v52, v4, (uint64_t)v15, v17, sub_1DCAC0820, v14);
        id v22 = sub_1DCA78F1C(v21);
        sub_1DC87E988(&qword_1EAAA0900);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
        *(void *)(inited + 32) = v11;
        *(void *)(inited + 40) = v10;
        char v24 = self;
        id v25 = objc_msgSend(v24, sel_featureValueWithMultiArray_, v22);
        uint64_t v26 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA18E8);
        *(void *)(inited + 72) = v26;
        *(void *)(inited + 48) = v25;
        sub_1DCB877D8();
        id v27 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
        uint64_t v49 = v26;
        id v50 = v24;
        id v28 = sub_1DCAC0A30();
        uint64_t v29 = (void *)sub_1DCADBDAC(v28);

        id v30 = objc_msgSend(v29, sel_featureNames);
        uint64_t v31 = sub_1DCB87FE8();

        uint64_t v32 = sub_1DC935B48(v31);
        uint64_t v34 = v33;
        swift_bridgeObjectRelease();
        uint64_t v35 = v32;
        id v7 = (id)sub_1DCB87908();
        id v36 = objc_msgSend(v29, sel_featureValueForName_, v7);

        if (v36
          && (id v7 = objc_msgSend(v36, sel_multiArrayValue), v36, v7))
        {
          uint64_t v48 = v34;
          uint64_t v37 = (void *)swift_allocObject();
          v37[2] = v7;
          id v38 = v7;
          id v47 = objc_msgSend(v38, sel_dataPointer);
          id v46 = objc_msgSend(v38, sel_dataType);
          uint64_t v39 = (void *)sub_1DCB87C08();
          unint64_t v40 = sub_1DCA78C1C(v39);

          objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
          swift_retain();
          id v42 = sub_1DCA7C058((uint64_t)v47, v53, (uint64_t)v46, v40, sub_1DCAC0820, v37);
          uint64_t v43 = swift_initStackObject();
          *(_OWORD *)(v43 + 16) = xmmword_1DCBB93B0;
          *(void *)(v43 + 32) = v35;
          *(void *)(v43 + 40) = v48;
          id v44 = objc_msgSend(v50, sel_featureValueWithMultiArray_, v42);
          *(void *)(v43 + 72) = v49;
          *(void *)(v43 + 48) = v44;
          sub_1DCB877D8();
          id v45 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
          id v7 = sub_1DCAC0A30();
          swift_release();
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DCAC079C();
          swift_allocError();
          *uint64_t v41 = 1;
          swift_willThrow();

          swift_release();
          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCAC079C();
        swift_allocError();
        *id v19 = 2;
        swift_willThrow();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCAC079C();
      swift_allocError();
      *id v18 = 0;
      swift_willThrow();
    }
  }
  return v7;
}

void sub_1DCAC06AC()
{
}

uint64_t type metadata accessor for _SNVGGishFrontEndProcessingCustomModel()
{
  return self;
}

id sub_1DCAC0720(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v5 = (void *)sub_1DCB87C08();
  id v6 = objc_msgSend(a3, sel_isAllowedShape_error_, v5, a2);

  return v6;
}

unint64_t sub_1DCAC079C()
{
  unint64_t result = qword_1EAAA8478;
  if (!qword_1EAAA8478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8478);
  }
  return result;
}

uint64_t sub_1DCAC07E8()
{
  return swift_deallocObject();
}

void sub_1DCAC0820(uint64_t a1)
{
  sub_1DCA7BAB8(a1, v1);
}

unsigned char *storeEnumTagSinglePayload for _SNVGGishFrontEndProcessingCustomModel.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAC0908);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _SNVGGishFrontEndProcessingCustomModel.DomainError()
{
  return &type metadata for _SNVGGishFrontEndProcessingCustomModel.DomainError;
}

unint64_t sub_1DCAC0944()
{
  unint64_t result = qword_1EAAA8480;
  if (!qword_1EAAA8480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8480);
  }
  return result;
}

id sub_1DCAC09B4()
{
  return objc_msgSend(v1, (SEL)(v0 + 1684), 1, 1);
}

unint64_t sub_1DCAC09D4()
{
  return 0xD000000000000017;
}

uint64_t sub_1DCAC0A18()
{
  *(void *)(v1 - 152) = v0;
  return sub_1DCB87C68();
}

id sub_1DCAC0A30()
{
  return sub_1DC99F66C();
}

uint64_t sub_1DCAC0A50()
{
  swift_bridgeObjectRetain();
  sub_1DCA788F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCA788F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCA788F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAC0AF0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1DCB89018(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_1DCB89018(), uint64_t result = 0, (v8 & 1) != 0))
    {
      BOOL v9 = a1[4] == a2[4] && a1[5] == a2[5];
      if (v9 || (v10 = sub_1DCB89018(), uint64_t result = 0, (v10 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7])
        {
          return 1;
        }
        else
        {
          return sub_1DCB89018();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCAC0BC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6369766544736469 && a2 == 0xEB00000000444965;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 1701667182 && a2 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1DCAC0D84(char a1)
{
  uint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6369766544736469;
      break;
    case 2:
      uint64_t result = 0x6C65646F6DLL;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCAC0E18(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA84A8);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  char v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAC1704();
  sub_1DCB892B8();
  v10[15] = 0;
  sub_1DCAC1944();
  if (!v1)
  {
    v10[14] = 1;
    sub_1DCAC1944();
    v10[13] = 2;
    sub_1DCAC1944();
    v10[12] = 3;
    sub_1DCAC1944();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1DCAC0F70()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAC0FB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA8498);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAC1704();
  sub_1DCB89298();
  if (v2) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  uint64_t v6 = sub_1DCA78914();
  uint64_t v8 = v7;
  uint64_t v22 = v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DCA78914();
  uint64_t v23 = v10;
  uint64_t v21 = v9;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1DCB88DA8();
  uint64_t v20 = v11;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DCA78914();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  uint64_t v15 = sub_1DCA78610();
  v16(v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC8818D0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v22;
  a2[1] = v8;
  a2[2] = v21;
  a2[3] = v23;
  a2[4] = v19;
  a2[5] = v20;
  a2[6] = v18;
  a2[7] = v14;
  return result;
}

uint64_t sub_1DCAC127C()
{
  return sub_1DCAC0D84(*v0);
}

uint64_t sub_1DCAC1284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAC0BC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAC12AC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC1704();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAC12E8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC1704();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1DCAC1324@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DCAC0FB0(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1DCAC1368(void *a1)
{
  return sub_1DCAC0E18(a1);
}

uint64_t sub_1DCAC1388()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAC13E0()
{
  return sub_1DC8CD7C8();
}

uint64_t sub_1DCAC1430()
{
  return sub_1DC8CD7C8();
}

uint64_t sub_1DCAC1480()
{
  return sub_1DC8CD7C8();
}

id sub_1DCAC14D0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v3 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1DCAC1520()
{
  return sub_1DC8CD7C8();
}

id SNFileServerInfo.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNFileServerInfo.init()()
{
}

id SNFileServerInfo.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SNFileServerInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileServerInfo()
{
  return self;
}

uint64_t method lookup function for SNFileServerInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNFileServerInfo);
}

ValueMetadata *type metadata accessor for FileServerInfo()
{
  return &type metadata for FileServerInfo;
}

unint64_t sub_1DCAC16B8()
{
  unint64_t result = qword_1EAAA8490;
  if (!qword_1EAAA8490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8490);
  }
  return result;
}

unint64_t sub_1DCAC1704()
{
  unint64_t result = qword_1EAAA84A0;
  if (!qword_1EAAA84A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA84A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FileServerInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAC181CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileServerInfo.CodingKeys()
{
  return &type metadata for FileServerInfo.CodingKeys;
}

unint64_t sub_1DCAC1858()
{
  unint64_t result = qword_1EAAA84B0;
  if (!qword_1EAAA84B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA84B0);
  }
  return result;
}

unint64_t sub_1DCAC18A8()
{
  unint64_t result = qword_1EAAA84B8;
  if (!qword_1EAAA84B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA84B8);
  }
  return result;
}

unint64_t sub_1DCAC18F8()
{
  unint64_t result = qword_1EAAA84C0;
  if (!qword_1EAAA84C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA84C0);
  }
  return result;
}

uint64_t sub_1DCAC1944()
{
  return sub_1DCB88EC8();
}

uint64_t sub_1DCAC1960()
{
  return sub_1DCAC1984();
}

uint64_t sub_1DCAC1984()
{
  swift_retain();
  swift_retain();
  sub_1DCAC35F8();
  uint64_t v1 = v0;
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DCAC1A20()
{
  return sub_1DCAC1A4C();
}

uint64_t sub_1DCAC1A4C()
{
  swift_retain();
  uint64_t v0 = sub_1DCAC1984();
  swift_release();
  return v0;
}

uint64_t sub_1DCAC1A98()
{
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v0 = sub_1DCAC1984();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DCAC1B10()
{
  return sub_1DCAC1A98();
}

id sub_1DCAC1B3C(const void *a1)
{
  int v3 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v4 = *(void **)(v1 + 16);
  uint64_t v5 = (objc_class *)sub_1DC87E988(&qword_1EAAA84E8);
  unsigned int v6 = objc_allocWithZone(v5);
  memcpy((char *)v6 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v6) + 0x60), a1, 0x78uLL);
  id v7 = v4;
  sub_1DC882264((uint64_t)a1);
  v11.receiver = v6;
  v11.Class super_class = v5;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  id v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  return v9;
}

id sub_1DCAC1C28(const void *a1)
{
  int v3 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v4 = *(void **)(v1 + 16);
  uint64_t v5 = (objc_class *)sub_1DC87E988(&qword_1EAAA8500);
  unsigned int v6 = objc_allocWithZone(v5);
  memcpy((char *)v6 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v6) + 0x60), a1, 0x50uLL);
  id v7 = v4;
  sub_1DC882264((uint64_t)a1);
  v11.receiver = v6;
  v11.Class super_class = v5;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  id v9 = objc_msgSend(v7, sel_objectForKey_, v8);

  return v9;
}

id sub_1DCAC1D14(const void *a1, uint64_t *a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(a2);
  id v8 = objc_allocWithZone(v7);
  sub_1DCAC4D24();
  memcpy((void *)(v10 + *(void *)(v9 + 96)), a1, 0x58uLL);
  id v11 = v6;
  sub_1DC882264((uint64_t)a1);
  v15.receiver = v8;
  v15.Class super_class = v7;
  id v12 = objc_msgSendSuper2(&v15, sel_init);
  id v13 = objc_msgSend(v11, sel_objectForKey_, v12);

  return v13;
}

id sub_1DCAC1DFC(uint64_t a1)
{
  int v3 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v4 = *(void **)(v1 + 16);
  uint64_t v5 = (objc_class *)sub_1DC87E988(&qword_1EAAA8568);
  unsigned int v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v6) + 0x60)] = a1;
  v11.receiver = v6;
  v11.Class super_class = v5;
  id v7 = v4;
  swift_bridgeObjectRetain();
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  id v9 = objc_msgSend(v7, sel_objectForKey_, v8, v11.receiver, v11.super_class);

  return v9;
}

id sub_1DCAC1ED4(uint64_t *a1)
{
  int v3 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v4 = *(void **)(v1 + 16);
  uint64_t v5 = (objc_class *)sub_1DC87E988(a1);
  v10.receiver = objc_allocWithZone(v5);
  v10.Class super_class = v5;
  id v6 = v4;
  id v7 = objc_msgSendSuper2(&v10, sel_init);
  id v8 = objc_msgSend(v6, sel_objectForKey_, v7, v10.receiver, v10.super_class);

  return v8;
}

id sub_1DCAC1F78(const void *a1, uint64_t *a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(a2);
  id v8 = objc_allocWithZone(v7);
  sub_1DCAC4D24();
  memcpy((void *)(v10 + *(void *)(v9 + 96)), a1, 0x41uLL);
  id v11 = v6;
  sub_1DC882264((uint64_t)a1);
  v15.receiver = v8;
  v15.Class super_class = v7;
  id v12 = objc_msgSendSuper2(&v15, sel_init);
  id v13 = objc_msgSend(v11, sel_objectForKey_, v12);

  return v13;
}

id sub_1DCAC2060(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  id v7 = (void *)MEMORY[0x1E01A8D20]();
  id v8 = *(void **)(v3 + 16);
  uint64_t v9 = (objc_class *)sub_1DC87E988(a3);
  id v10 = objc_allocWithZone(v9);
  sub_1DCAC4D24();
  id v13 = &v12[*(void *)(v11 + 96)];
  *(void *)id v13 = a1;
  *((void *)v13 + 1) = a2;
  v25.receiver = v12;
  v25.Class super_class = v9;
  id v14 = v8;
  id v22 = sub_1DCAC4D30((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v25);
  id v23 = objc_msgSend(a3, sel_objectForKey_, v22);

  return v23;
}

id sub_1DCAC2130(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v4 = *(void **)(v1 + 16);
  uint64_t v5 = (objc_class *)sub_1DC87E988(&qword_1EAAA8548);
  id v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v6) + 0x60)] = a1;
  v11.receiver = v6;
  v11.Class super_class = v5;
  id v7 = v4;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  id v9 = objc_msgSend(v7, sel_objectForKey_, v8, v11.receiver, v11.super_class);

  return v9;
}

id sub_1DCAC2200(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v4 = *(void **)(v1 + 16);
  uint64_t v5 = (objc_class *)sub_1DC87E988(&qword_1EAAA8540);
  id v6 = (char *)objc_allocWithZone(v5);
  id v7 = &v6[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v6) + 0x60)];
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)id v7 = *(_OWORD *)a1;
  *((_OWORD *)v7 + 1) = v8;
  *((_OWORD *)v7 + 2) = *(_OWORD *)(a1 + 32);
  *((_DWORD *)v7 + 12) = *(_DWORD *)(a1 + 48);
  v13.receiver = v6;
  v13.Class super_class = v5;
  id v9 = v4;
  id v10 = objc_msgSendSuper2(&v13, sel_init);
  id v11 = objc_msgSend(v9, sel_objectForKey_, v10, v13.receiver, v13.super_class);

  return v11;
}

id sub_1DCAC22E8(__int16 a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v4 = *(void **)(v1 + 16);
  uint64_t v5 = (objc_class *)sub_1DC87E988(&qword_1EAA9C968);
  id v6 = (char *)objc_allocWithZone(v5);
  *(_WORD *)&v6[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v6) + 0x60)] = a1;
  v11.receiver = v6;
  v11.Class super_class = v5;
  id v7 = v4;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  id v9 = objc_msgSend(v7, sel_objectForKey_, v8, v11.receiver, v11.super_class);

  return v9;
}

id sub_1DCAC23B8(char a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E01A8D20]();
  unsigned int v4 = *(void **)(v1 + 16);
  uint64_t v5 = (objc_class *)sub_1DC87E988(&qword_1EAAA8530);
  id v6 = objc_allocWithZone(v5);
  v6[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v6) + 0x60)] = a1;
  v11.receiver = v6;
  v11.Class super_class = v5;
  id v7 = v4;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  id v9 = objc_msgSend(v7, sel_objectForKey_, v8, v11.receiver, v11.super_class);

  return v9;
}

uint64_t sub_1DCAC2488(uint64_t a1, const void *a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(&qword_1EAAA84E8);
  id v8 = objc_allocWithZone(v7);
  memcpy((char *)v8 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v8) + 0x60), a2, 0x78uLL);
  if (a1)
  {
    swift_retain_n();
    id v9 = v6;
    sub_1DC882264((uint64_t)a2);
    v14.receiver = v8;
    v14.Class super_class = v7;
    id v10 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10);

    swift_release_n();
  }
  else
  {
    sub_1DC882264((uint64_t)a2);
    v15.receiver = v8;
    v15.Class super_class = v7;
    id v11 = v6;
    id v12 = objc_msgSendSuper2(&v15, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v12);
  }
  swift_release();
  return sub_1DC88CABC((uint64_t)a2);
}

uint64_t sub_1DCAC25EC(uint64_t a1, const void *a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(&qword_1EAAA8500);
  id v8 = objc_allocWithZone(v7);
  memcpy((char *)v8 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v8) + 0x60), a2, 0x50uLL);
  if (a1)
  {
    swift_retain_n();
    id v9 = v6;
    sub_1DC882264((uint64_t)a2);
    v14.receiver = v8;
    v14.Class super_class = v7;
    id v10 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10);

    swift_release_n();
  }
  else
  {
    sub_1DC882264((uint64_t)a2);
    v15.receiver = v8;
    v15.Class super_class = v7;
    id v11 = v6;
    id v12 = objc_msgSendSuper2(&v15, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v12);
  }
  swift_release();
  return sub_1DC88CABC((uint64_t)a2);
}

uint64_t sub_1DCAC2750(uint64_t a1, const void *a2, uint64_t *a3)
{
  id v7 = (void *)MEMORY[0x1E01A8D20]();
  id v8 = *(void **)(v3 + 16);
  id v9 = (objc_class *)sub_1DC87E988(a3);
  id v10 = objc_allocWithZone(v9);
  sub_1DCAC4D24();
  memcpy((void *)(v12 + *(void *)(v11 + 96)), a2, 0x58uLL);
  if (a1)
  {
    swift_retain_n();
    id v13 = v8;
    sub_1DC882264((uint64_t)a2);
    v25.receiver = v10;
    v25.Class super_class = v9;
    id v14 = objc_msgSendSuper2(&v25, sel_init);
    objc_msgSend(v13, sel_setObject_forKey_, a1, v14);

    swift_release_n();
  }
  else
  {
    sub_1DC882264((uint64_t)a2);
    v26.receiver = v10;
    v26.Class super_class = v9;
    id v15 = v8;
    id v23 = sub_1DCAC4DD8((int)v15, v16, v17, v18, v19, v20, v21, v22, (uint64_t)v25.receiver, (uint64_t)v25.super_class, v26);
    objc_msgSend(v15, sel_removeObjectForKey_, v23);
  }
  swift_release();
  return sub_1DC88CABC((uint64_t)a2);
}

uint64_t sub_1DCAC28A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(&qword_1EAAA8568);
  id v8 = objc_allocWithZone(v7);
  *(void *)((char *)v8 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v8) + 0x60)) = a2;
  if (a1)
  {
    v13.receiver = v8;
    v13.Class super_class = v7;
    swift_retain_n();
    id v9 = v6;
    swift_bridgeObjectRetain();
    id v10 = objc_msgSendSuper2(&v13, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10, v13.receiver, v13.super_class);

    swift_release_n();
  }
  else
  {
    v14.receiver = v8;
    v14.Class super_class = v7;
    swift_bridgeObjectRetain();
    id v11 = v6;
    id v10 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v10);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DCAC29F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(a2);
  id v8 = objc_allocWithZone(v7);
  if (a1)
  {
    v28.receiver = v8;
    v28.Class super_class = v7;
    swift_retain_n();
    id v9 = v6;
    id v17 = sub_1DCAC4D30((uint64_t)v9, v10, v11, v12, v13, v14, v15, v16, v28);
    [(objc_class *)v7 setObject:a1 forKey:v17];

    swift_release_n();
  }
  else
  {
    v30.receiver = v8;
    v30.Class super_class = v7;
    id v18 = v6;
    id v17 = sub_1DCAC4DD8((int)v18, v19, v20, v21, v22, v23, v24, v25, v27, v29, v30);
    objc_msgSend(v18, sel_removeObjectForKey_, v17);
  }
  return swift_release();
}

uint64_t sub_1DCAC2AE8(uint64_t a1, const void *a2, uint64_t *a3)
{
  id v7 = (void *)MEMORY[0x1E01A8D20]();
  id v8 = *(void **)(v3 + 16);
  id v9 = (objc_class *)sub_1DC87E988(a3);
  id v10 = objc_allocWithZone(v9);
  sub_1DCAC4D24();
  memcpy((void *)(v12 + *(void *)(v11 + 96)), a2, 0x41uLL);
  if (a1)
  {
    swift_retain_n();
    id v13 = v8;
    sub_1DC882264((uint64_t)a2);
    v25.receiver = v10;
    v25.Class super_class = v9;
    id v14 = objc_msgSendSuper2(&v25, sel_init);
    objc_msgSend(v13, sel_setObject_forKey_, a1, v14);

    swift_release_n();
  }
  else
  {
    sub_1DC882264((uint64_t)a2);
    v26.receiver = v10;
    v26.Class super_class = v9;
    id v15 = v8;
    id v23 = sub_1DCAC4DD8((int)v15, v16, v17, v18, v19, v20, v21, v22, (uint64_t)v25.receiver, (uint64_t)v25.super_class, v26);
    objc_msgSend(v15, sel_removeObjectForKey_, v23);
  }
  swift_release();
  return sub_1DC88CABC((uint64_t)a2);
}

uint64_t sub_1DCAC2C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v9 = (void *)MEMORY[0x1E01A8D20]();
  id v10 = *(void **)(v4 + 16);
  uint64_t v11 = (objc_class *)sub_1DC87E988(a4);
  uint64_t v12 = objc_allocWithZone(v11);
  id v13 = (void *)((char *)v12 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v12) + 0x60));
  *id v13 = a2;
  v13[1] = a3;
  if (a1)
  {
    v33.receiver = v12;
    v33.Class super_class = v11;
    swift_retain_n();
    id v14 = v10;
    id v22 = sub_1DCAC4D30((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v33);
    [(objc_class *)v11 setObject:a1 forKey:v22];

    swift_release_n();
  }
  else
  {
    v35.receiver = v12;
    v35.Class super_class = v11;
    id v23 = v10;
    id v22 = sub_1DCAC4DD8((int)v23, v24, v25, v26, v27, v28, v29, v30, v32, v34, v35);
    objc_msgSend(v23, sel_removeObjectForKey_, v22);
  }
  return swift_release();
}

uint64_t sub_1DCAC2D70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(&qword_1EAAA8548);
  id v8 = objc_allocWithZone(v7);
  *(void *)((char *)v8 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v8) + 0x60)) = a2;
  if (a1)
  {
    v13.receiver = v8;
    v13.Class super_class = v7;
    swift_retain_n();
    id v9 = v6;
    id v10 = objc_msgSendSuper2(&v13, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10, v13.receiver, v13.super_class);

    swift_release_n();
  }
  else
  {
    v14.receiver = v8;
    v14.Class super_class = v7;
    id v11 = v6;
    id v10 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v10);
  }
  return swift_release();
}

uint64_t sub_1DCAC2EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(&qword_1EAAA8540);
  id v8 = objc_allocWithZone(v7);
  id v9 = (char *)v8 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v8) + 0x60);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)id v9 = *(_OWORD *)a2;
  *((_OWORD *)v9 + 1) = v10;
  *((_OWORD *)v9 + 2) = *(_OWORD *)(a2 + 32);
  *((_DWORD *)v9 + 12) = *(_DWORD *)(a2 + 48);
  if (a1)
  {
    v15.receiver = v8;
    v15.Class super_class = v7;
    swift_retain_n();
    id v11 = v6;
    id v12 = objc_msgSendSuper2(&v15, sel_init);
    objc_msgSend(v11, sel_setObject_forKey_, a1, v12, v15.receiver, v15.super_class);

    swift_release_n();
  }
  else
  {
    v16.receiver = v8;
    v16.Class super_class = v7;
    id v13 = v6;
    id v12 = objc_msgSendSuper2(&v16, sel_init);
    objc_msgSend(v13, sel_removeObjectForKey_, v12);
  }
  return swift_release();
}

uint64_t sub_1DCAC2FF0(uint64_t a1, __int16 a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(&qword_1EAA9C968);
  id v8 = objc_allocWithZone(v7);
  *(_WORD *)((char *)v8 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v8) + 0x60)) = a2;
  if (a1)
  {
    v13.receiver = v8;
    v13.Class super_class = v7;
    swift_retain_n();
    id v9 = v6;
    id v10 = objc_msgSendSuper2(&v13, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10, v13.receiver, v13.super_class);

    swift_release_n();
  }
  else
  {
    v14.receiver = v8;
    v14.Class super_class = v7;
    id v11 = v6;
    id v10 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v10);
  }
  return swift_release();
}

uint64_t sub_1DCAC3124(uint64_t a1, char a2)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  id v6 = *(void **)(v2 + 16);
  id v7 = (objc_class *)sub_1DC87E988(&qword_1EAAA8530);
  id v8 = objc_allocWithZone(v7);
  *((unsigned char *)v8 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v8) + 0x60)) = a2;
  if (a1)
  {
    v13.receiver = v8;
    v13.Class super_class = v7;
    swift_retain_n();
    id v9 = v6;
    id v10 = objc_msgSendSuper2(&v13, sel_init);
    objc_msgSend(v9, sel_setObject_forKey_, a1, v10, v13.receiver, v13.super_class);

    swift_release_n();
  }
  else
  {
    v14.receiver = v8;
    v14.Class super_class = v7;
    id v11 = v6;
    id v10 = objc_msgSendSuper2(&v14, sel_init);
    objc_msgSend(v11, sel_removeObjectForKey_, v10);
  }
  return swift_release();
}

uint64_t sub_1DCAC3258()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA8510);
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + 16);
  id v8 = (void *)swift_allocObject();
  v8[2] = sub_1DC88CEC8;
  v8[3] = v0;
  v8[4] = v7;
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA5210);
  sub_1DC88CF34(&qword_1EAAA5220, (uint64_t *)&unk_1EAAA5210);
  sub_1DCB87378();
  sub_1DC88CF34(&qword_1EAAA8518, &qword_1EAAA8510);
  uint64_t v9 = sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  return v9;
}

uint64_t sub_1DCAC33E4()
{
  return sub_1DCAC3514();
}

uint64_t sub_1DCAC3404()
{
  return sub_1DCAC3680();
}

void sub_1DCAC3424()
{
  void (*v1)(uint64_t *__return_ptr, id *);
  uint64_t v2;
  uint64_t v3;
  const void *v4;

  sub_1DCAC4DB0();
  sub_1DCAC4BD4();
  os_unfair_lock_lock(v0);
  uint64_t v1 = (void (*)(uint64_t *__return_ptr, id *))sub_1DCAC4C70();
  sub_1DCAC3B58(v1, v2, v3, v4);
  sub_1DCAC4C34();
  swift_release();
  sub_1DCAC4C64();
  sub_1DCAC4DC4();
}

uint64_t sub_1DCAC347C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, id *), uint64_t a4)
{
  return sub_1DCAC36F8(a1, a2, a3, a4, &qword_1EAAA8538);
}

void sub_1DCAC349C()
{
  void (*v1)(uint64_t *__return_ptr, id *);
  uint64_t v2;
  uint64_t v3;
  const void *v4;

  sub_1DCAC4DB0();
  sub_1DCAC4BD4();
  os_unfair_lock_lock(v0);
  uint64_t v1 = (void (*)(uint64_t *__return_ptr, id *))sub_1DCAC4C70();
  sub_1DCAC3C4C(v1, v2, v3, v4);
  sub_1DCAC4C34();
  swift_release();
  sub_1DCAC4C64();
  sub_1DCAC4DC4();
}

uint64_t sub_1DCAC34F4()
{
  return sub_1DCAC3514();
}

uint64_t sub_1DCAC3514()
{
  sub_1DCAC4BA4();
  os_unfair_lock_lock(v0);
  sub_1DCAC4CEC();
  sub_1DCAC3D40();
  sub_1DCAC4D58();
  swift_release();
  return sub_1DCAC4C64();
}

uint64_t sub_1DCAC356C()
{
  return sub_1DCAC3514();
}

uint64_t sub_1DCAC358C()
{
  return sub_1DCAC37CC();
}

void sub_1DCAC35B8()
{
}

void sub_1DCAC35D8()
{
}

void sub_1DCAC35F8()
{
  void (*v2)(uint64_t *__return_ptr, id *);
  os_unfair_lock_s *v3;
  uint64_t *v4;
  uint64_t *v5;

  sub_1DCAC4DB0();
  uint64_t v5 = v4;
  sub_1DCAC4BD4();
  os_unfair_lock_lock(v3);
  sub_1DCAC3EE4(v2, v1, v0, v5);
  sub_1DCAC4C34();
  swift_release();
  sub_1DCAC4C64();
  sub_1DCAC4DC4();
}

uint64_t sub_1DCAC3660()
{
  return sub_1DCAC3680();
}

uint64_t sub_1DCAC3680()
{
  sub_1DCAC4BA4();
  os_unfair_lock_lock(v0);
  sub_1DCAC4CEC();
  sub_1DCAC3FD0();
  sub_1DCAC4D58();
  swift_release();
  return sub_1DCAC4C64();
}

uint64_t sub_1DCAC36D8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, id *), uint64_t a4)
{
  return sub_1DCAC36F8(a1, a2, a3, a4, &qword_1EAAA8550);
}

uint64_t sub_1DCAC36F8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, id *), uint64_t a4, uint64_t *a5)
{
  uint64_t v11 = *(os_unfair_lock_s **)(*(void *)(v5 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v11);
  sub_1DCAC4080(a3, a4, v5, a1, a2, a5);
  os_unfair_lock_unlock(v11);
  swift_release();
  return sub_1DCAC4C64();
}

uint64_t sub_1DCAC37A0()
{
  return sub_1DCAC37CC();
}

uint64_t sub_1DCAC37CC()
{
  sub_1DCAC4BA4();
  os_unfair_lock_lock(v5);
  v0(v3, v2, v1, v4);
  sub_1DCAC4D58();
  swift_release();
  return sub_1DCAC4C64();
}

void sub_1DCAC3838()
{
  void (*v1)(uint64_t *__return_ptr, id *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1DCAC4DB0();
  sub_1DCAC4BD4();
  os_unfair_lock_lock(v0);
  uint64_t v1 = (void (*)(uint64_t *__return_ptr, id *))sub_1DCAC4C70();
  sub_1DCAC4278(v1, v2, v3, v4);
  sub_1DCAC4C34();
  swift_release();
  sub_1DCAC4C64();
  sub_1DCAC4DC4();
}

void sub_1DCAC3890()
{
  void (*v1)(uint64_t *__return_ptr, id *);
  uint64_t v2;
  uint64_t v3;
  __int16 v4;

  sub_1DCAC4DB0();
  sub_1DCAC4CB4();
  os_unfair_lock_lock(v0);
  uint64_t v1 = (void (*)(uint64_t *__return_ptr, id *))sub_1DCAC4C70();
  sub_1DCAC4364(v1, v2, v3, v4);
  sub_1DCAC4C34();
  swift_release();
  sub_1DCAC4C64();
  sub_1DCAC4DC4();
}

void sub_1DCAC38E0()
{
  void (*v1)(uint64_t *__return_ptr, id *);
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_1DCAC4DB0();
  sub_1DCAC4CB4();
  os_unfair_lock_lock(v0);
  uint64_t v1 = (void (*)(uint64_t *__return_ptr, id *))sub_1DCAC4C70();
  sub_1DCAC4450(v1, v2, v3, v4);
  sub_1DCAC4C34();
  swift_release();
  sub_1DCAC4C64();
  sub_1DCAC4DC4();
}

void sub_1DCAC3930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1DCAC4DB0();
  a17 = v18;
  a18 = v19;
  uint64_t v21 = v20;
  uint64_t v22 = sub_1DC87E988(&qword_1EAAA8520);
  sub_1DC89D4E0();
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v25);
  int v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(v21, v21[3]);
  sub_1DCAC4AA8();
  sub_1DCB892B8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v22);
  sub_1DCAC4DC4();
}

uint64_t sub_1DCAC3A10(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC4AA8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAC3A4C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC4AA8();

  return MEMORY[0x1F41862B0](a1, v2);
}

#error "1DCAC3A94: call analysis failed (funcsize=6)"

uint64_t type metadata accessor for SharedSecureMicrophone.Instance()
{
  return self;
}

ValueMetadata *type metadata accessor for SharedSecureMicrophone()
{
  return &type metadata for SharedSecureMicrophone;
}

ValueMetadata *type metadata accessor for SharedSecureMicrophone.Configuration()
{
  return &type metadata for SharedSecureMicrophone.Configuration;
}

unint64_t sub_1DCAC3AE8()
{
  unint64_t result = qword_1EAAA84C8;
  if (!qword_1EAAA84C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA84C8);
  }
  return result;
}

uint64_t sub_1DCAC3B34()
{
  return sub_1DC8B8B08();
}

uint64_t sub_1DCAC3B58(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, const void *a4)
{
  swift_beginAccess();
  id v10 = sub_1DCAC1B3C(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    sub_1DC882264((uint64_t)a4);
    uint64_t v8 = swift_retain();
    sub_1DCAC2488(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC3C4C(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, const void *a4)
{
  swift_beginAccess();
  id v10 = sub_1DCAC1C28(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    sub_1DC882264((uint64_t)a4);
    uint64_t v8 = swift_retain();
    sub_1DCAC25EC(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC3D40()
{
  sub_1DCAC4BF8();
  char v17 = sub_1DCAC1D14(v2, v0);
  uint64_t v5 = swift_endAccess();
  objc_super v13 = sub_1DCAC4D98(v5, v6, v7, v8, v9, v10, v11, v12, v16, v17);
  v4(v13);
  swift_release();
  if (!v1)
  {
    sub_1DCAC4D74();
    sub_1DC882264((uint64_t)v2);
    uint64_t v14 = swift_retain();
    sub_1DCAC2750(v14, v2, v0);
    swift_endAccess();
  }
  return v3;
}

uint64_t sub_1DCAC3DF0(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  id v10 = sub_1DCAC1DFC(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_retain();
    sub_1DCAC28A8(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC3EE4(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_beginAccess();
  id v10 = sub_1DCAC1ED4(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    uint64_t v8 = swift_retain();
    sub_1DCAC29F4(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC3FD0()
{
  sub_1DCAC4BF8();
  char v17 = sub_1DCAC1F78(v2, v0);
  uint64_t v5 = swift_endAccess();
  objc_super v13 = sub_1DCAC4D98(v5, v6, v7, v8, v9, v10, v11, v12, v16, v17);
  v4(v13);
  swift_release();
  if (!v1)
  {
    sub_1DCAC4D74();
    sub_1DC882264((uint64_t)v2);
    uint64_t v14 = swift_retain();
    sub_1DCAC2AE8(v14, v2, v0);
    swift_endAccess();
  }
  return v3;
}

uint64_t sub_1DCAC4080(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  swift_beginAccess();
  id v14 = sub_1DCAC2060(a4, a5, a6);
  swift_endAccess();
  a1(&v15, &v14);
  swift_release();
  if (!v6)
  {
    a2 = v15;
    swift_beginAccess();
    uint64_t v12 = swift_retain();
    sub_1DCAC2C40(v12, a4, a5, a6);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC418C(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  id v10 = sub_1DCAC2130(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    uint64_t v8 = swift_retain();
    sub_1DCAC2D70(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC4278(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  id v10 = sub_1DCAC2200(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    uint64_t v8 = swift_retain();
    sub_1DCAC2EA4(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC4364(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, __int16 a4)
{
  swift_beginAccess();
  id v10 = sub_1DCAC22E8(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    uint64_t v8 = swift_retain();
    sub_1DCAC2FF0(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC4450(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  id v10 = sub_1DCAC23B8(a4);
  swift_endAccess();
  a1(&v11, &v10);
  swift_release();
  if (!v4)
  {
    a2 = v11;
    swift_beginAccess();
    uint64_t v8 = swift_retain();
    sub_1DCAC3124(v8, a4);
    swift_endAccess();
  }
  return a2;
}

uint64_t sub_1DCAC453C()
{
  return sub_1DCAC46BC();
}

uint64_t sub_1DCAC4554(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_1DCAC4C88(a1, a2, a3, a4);
  if (v5 || (uint64_t v15 = sub_1DCAC4C50((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v17), v6(v15), !v4)) {
    swift_retain();
  }
  return sub_1DCAC4D4C();
}

uint64_t sub_1DCAC45B4()
{
  sub_1DCAC4D08();
  uint64_t v5 = memcpy(v3, v4, 0x78uLL);
  if (v1 || (uint64_t v13 = sub_1DCAC4C50((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v15), v2(v13), !v0)) {
    swift_retain();
  }
  return sub_1DCAC4D4C();
}

uint64_t sub_1DCAC461C(uint64_t a1)
{
  return sub_1DCAC47F4(a1);
}

uint64_t sub_1DCAC4634(uint64_t a1, void (*a2)(uint64_t *__return_ptr, unsigned char *), int a3, void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  if (a1 || (a2(&v9, __dst), !v4)) {
    swift_retain();
  }
  return sub_1DCAC4D4C();
}

uint64_t sub_1DCAC46BC()
{
  sub_1DCAC4D08();
  uint64_t v5 = memcpy(v3, v4, 0x58uLL);
  if (v1 || (uint64_t v13 = sub_1DCAC4C50((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v15), v2(v13), !v0)) {
    swift_retain();
  }
  return sub_1DCAC4D4C();
}

uint64_t sub_1DCAC4724(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    sub_1DCAC4CE0();
    v4(v3);
    if (v2) {
      return v1;
    }
    uint64_t v1 = v6;
  }
  swift_retain();
  return v1;
}

uint64_t sub_1DCAC4784(uint64_t a1)
{
  return sub_1DCAC479C(a1);
}

uint64_t sub_1DCAC479C(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    sub_1DCAC4CE0();
    v3();
    if (v2) {
      return v1;
    }
    uint64_t v1 = v5;
  }
  swift_retain();
  return v1;
}

uint64_t sub_1DCAC47F4(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    sub_1DCAC4CE0();
    v3();
    if (v2) {
      return v1;
    }
    uint64_t v1 = v5;
  }
  swift_retain();
  return v1;
}

uint64_t sub_1DCAC4854(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    sub_1DCAC4CE0();
    v4(v3, v4, v5, v6, v7, v8, v9);
    if (v2) {
      return v1;
    }
    uint64_t v1 = v11;
  }
  swift_retain();
  return v1;
}

uint64_t sub_1DCAC48C8(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    sub_1DCAC4CE0();
    v3();
    if (v2) {
      return v1;
    }
    uint64_t v1 = v5;
  }
  swift_retain();
  return v1;
}

uint64_t sub_1DCAC4928(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    sub_1DCAC4CE0();
    v3();
    if (v2) {
      return v1;
    }
    uint64_t v1 = v5;
  }
  swift_retain();
  return v1;
}

uint64_t sub_1DCAC4988@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAC479C(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DCAC49B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAC3B34();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DCAC49E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCAC49B8(a1);
}

uint64_t sub_1DCAC4A10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCAC4988(a1, a2);
}

void sub_1DCAC4A30(void *a1@<X8>)
{
  sub_1DCB05EF4();
  *a1 = v2;
}

uint64_t sub_1DCAC4A5C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DCAC4A9C(void *a1@<X8>)
{
}

unint64_t sub_1DCAC4AA8()
{
  unint64_t result = qword_1EAAA8528;
  if (!qword_1EAAA8528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8528);
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedSecureMicrophone.Configuration.CodingKeys()
{
  return &type metadata for SharedSecureMicrophone.Configuration.CodingKeys;
}

unint64_t sub_1DCAC4B08()
{
  unint64_t result = qword_1EAAA8570;
  if (!qword_1EAAA8570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8570);
  }
  return result;
}

unint64_t sub_1DCAC4B58()
{
  unint64_t result = qword_1EAAA8578;
  if (!qword_1EAAA8578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8578);
  }
  return result;
}

uint64_t sub_1DCAC4BA4()
{
  return swift_retain();
}

uint64_t sub_1DCAC4BD4()
{
  return swift_retain();
}

uint64_t sub_1DCAC4BF8()
{
  return swift_beginAccess();
}

void sub_1DCAC4C34()
{
  os_unfair_lock_unlock(v0);
}

uint64_t *sub_1DCAC4C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t sub_1DCAC4C64()
{
  return v0;
}

uint64_t sub_1DCAC4C70()
{
  return v0;
}

void *sub_1DCAC4C88(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, ...)
{
  va_start(va, __src);
  return memcpy(va, __src, 0x41uLL);
}

uint64_t sub_1DCAC4CB4()
{
  return swift_retain();
}

uint64_t sub_1DCAC4CEC()
{
  return v0;
}

id sub_1DCAC4D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, v9);
}

uint64_t sub_1DCAC4D4C()
{
  return v0;
}

void sub_1DCAC4D58()
{
  os_unfair_lock_unlock(v0);
}

uint64_t sub_1DCAC4D74()
{
  return swift_beginAccess();
}

char *sub_1DCAC4D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

id sub_1DCAC4DD8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, objc_super a11)
{
  return objc_msgSendSuper2(&a11, v11);
}

uint64_t sub_1DCAC4DF0@<X0>(void (*a1)(uint64_t)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v17 = a5;
  uint64_t v18 = a3;
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
  a1(v14);
  if (!v5) {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17, v11, v18);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a2, a4);
}

void sub_1DCAC4F3C()
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 16));
}

void sub_1DCAC4F48()
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
}

void sub_1DCAC4F50()
{
}

void sub_1DCAC4F74()
{
}

uint64_t sub_1DCAC4F98()
{
  MEMORY[0x1E01A99C0](*(void *)(v0 + 16), -1, -1);

  return swift_deallocClassInstance();
}

uint64_t sub_1DCAC4FD8()
{
  return os_unfair_recursive_lock_lock_with_options();
}

uint64_t sub_1DCAC4FE4()
{
  return os_unfair_recursive_lock_unlock();
}

uint64_t sub_1DCAC4FEC()
{
  return sub_1DCAC4FD8();
}

uint64_t sub_1DCAC5010()
{
  return sub_1DCAC4FE4();
}

id sub_1DCAC5034()
{
  return sub_1DCAC5058();
}

id sub_1DCAC5058()
{
  return objc_msgSend(v0, sel_lock);
}

id sub_1DCAC5068()
{
  return sub_1DCAC508C();
}

id sub_1DCAC508C()
{
  return objc_msgSend(v0, sel_unlock);
}

uint64_t type metadata accessor for SafeLock()
{
  return self;
}

uint64_t type metadata accessor for SafeRecursiveLock()
{
  return self;
}

uint64_t sub_1DCAC50E4()
{
  sub_1DCB87468();
  uint64_t v0 = sub_1DCB87108();
  swift_getWitnessTable();
  uint64_t v1 = sub_1DCA07CE4(v0);
  swift_release();
  return v1;
}

uint64_t sub_1DCAC5174@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CombineUtils()
{
  return &type metadata for CombineUtils;
}

ValueMetadata *type metadata accessor for CombineUtils.Activation()
{
  return &type metadata for CombineUtils.Activation;
}

uint64_t sub_1DCAC51A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657669746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576697463616E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCAC528C(char a1)
{
  if (a1) {
    return 0x6576697463616E69;
  }
  else {
    return 0x657669746361;
  }
}

uint64_t sub_1DCAC52C0(void *a1, char a2)
{
  sub_1DC87E988(&qword_1EAAA85B0);
  sub_1DC89D4E0();
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  uint64_t v23 = sub_1DC87E988(&qword_1EAAA85B8);
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC8A22D0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA85C0);
  sub_1DC89D4E0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1DC8A22D0();
  uint64_t v20 = v19 - v18;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAC5A90();
  sub_1DCB892B8();
  uint64_t v21 = (uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
  if (a2)
  {
    sub_1DCAC5ADC();
    sub_1DCB88E88();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v7, v25);
  }
  else
  {
    sub_1DCAC5B28();
    sub_1DCB88E88();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v23);
  }
  return (*v21)(v20, v14);
}

uint64_t sub_1DCAC54E0(uint64_t a1)
{
  uint64_t v37 = sub_1DC87E988(&qword_1EAAA8580);
  sub_1DC89D4E0();
  uint64_t v35 = v2;
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA8588);
  sub_1DC89D4E0();
  uint64_t v34 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC8A22D0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA8590);
  sub_1DC89D4E0();
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1DC8A22D0();
  uint64_t v18 = v17 - v16;
  sub_1DC881A8C((void *)a1, *(void *)(a1 + 24));
  sub_1DCAC5A90();
  sub_1DCB89298();
  if (v38) {
    goto LABEL_8;
  }
  uint64_t v39 = a1;
  uint64_t v19 = sub_1DCB88E58();
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20
    || (a1 = *(unsigned __int8 *)(v19 + 32),
        sub_1DC9CFE4C(1, v20, v19, v19 + 32, 0, (2 * v20) | 1),
        uint64_t v22 = v21,
        unint64_t v24 = v23,
        swift_bridgeObjectRelease(),
        v22 != v24 >> 1))
  {
    uint64_t v27 = v18;
    uint64_t v28 = sub_1DCB88B18();
    swift_allocError();
    int v30 = v29;
    sub_1DC87E988(&qword_1EAA9E130);
    *int v30 = &type metadata for CombineUtils.Activation;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v13);
    a1 = v39;
LABEL_8:
    sub_1DC8818D0(a1);
    return a1;
  }
  if (a1)
  {
    sub_1DCAC5ADC();
    sub_1DC971F5C();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v6, v37);
    swift_unknownObjectRelease();
    uint64_t v25 = sub_1DC971F28();
    v26(v25);
    a1 = a1;
  }
  else
  {
    sub_1DCAC5B28();
    sub_1DC971F5C();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v7);
    swift_unknownObjectRelease();
    uint64_t v32 = sub_1DC971F28();
    v33(v32);
  }
  sub_1DC8818D0(v39);
  return a1;
}

uint64_t sub_1DCAC58A8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC5B28();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAC58E4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC5B28();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAC5920()
{
  return sub_1DCAC528C(*v0);
}

uint64_t sub_1DCAC5928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAC51A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAC5950(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC5A90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAC598C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC5A90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAC59C8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC5ADC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAC5A04(uint64_t a1)
{
  unint64_t v2 = sub_1DCAC5ADC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAC5A40@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DCAC54E0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1DCAC5A70(void *a1)
{
  return sub_1DCAC52C0(a1, *v1);
}

unint64_t sub_1DCAC5A90()
{
  unint64_t result = qword_1EAAA8598;
  if (!qword_1EAAA8598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8598);
  }
  return result;
}

unint64_t sub_1DCAC5ADC()
{
  unint64_t result = qword_1EAAA85A0;
  if (!qword_1EAAA85A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85A0);
  }
  return result;
}

unint64_t sub_1DCAC5B28()
{
  unint64_t result = qword_1EAAA85A8;
  if (!qword_1EAAA85A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85A8);
  }
  return result;
}

unsigned char *_s13SoundAnalysis12CombineUtilsV10ActivationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAC5C40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CombineUtils.Activation.CodingKeys()
{
  return &type metadata for CombineUtils.Activation.CodingKeys;
}

ValueMetadata *type metadata accessor for CombineUtils.Activation.ActiveCodingKeys()
{
  return &type metadata for CombineUtils.Activation.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for CombineUtils.Activation.InactiveCodingKeys()
{
  return &type metadata for CombineUtils.Activation.InactiveCodingKeys;
}

unint64_t sub_1DCAC5C9C()
{
  unint64_t result = qword_1EAAA85C8;
  if (!qword_1EAAA85C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85C8);
  }
  return result;
}

unint64_t sub_1DCAC5CEC()
{
  unint64_t result = qword_1EAAA85D0;
  if (!qword_1EAAA85D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85D0);
  }
  return result;
}

unint64_t sub_1DCAC5D3C()
{
  unint64_t result = qword_1EAAA85D8;
  if (!qword_1EAAA85D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85D8);
  }
  return result;
}

unint64_t sub_1DCAC5D8C()
{
  unint64_t result = qword_1EAAA85E0;
  if (!qword_1EAAA85E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85E0);
  }
  return result;
}

unint64_t sub_1DCAC5DDC()
{
  unint64_t result = qword_1EAAA85E8;
  if (!qword_1EAAA85E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85E8);
  }
  return result;
}

unint64_t sub_1DCAC5E2C()
{
  unint64_t result = qword_1EAAA85F0;
  if (!qword_1EAAA85F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85F0);
  }
  return result;
}

unint64_t sub_1DCAC5E7C()
{
  unint64_t result = qword_1EAAA85F8;
  if (!qword_1EAAA85F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA85F8);
  }
  return result;
}

uint64_t sub_1DCAC5EC8(uint64_t result)
{
  if ((unint64_t)(result - 4) < 0xFFFFFFFFFFFFFFFDLL)
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 4, 0, 0xD00000000000001BLL, 0x80000001DCB94CF0);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCAC5F50(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 3) {
    return *(void *)(a1 + 8 * v1 + 8);
  }
  else {
    return 0;
  }
}

void sub_1DCAC5F78(uint64_t a1, unint64_t a2)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DCB86FE8();
  sub_1DC89F57C(v4, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1DCB86FC8();
  os_log_type_t v6 = sub_1DCB88478();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(a1, a2, &v9);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v5, v6, "Would-be Fatal Error! %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v8, -1, -1);
    MEMORY[0x1E01A99C0](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1DCAC6120(void *a1)
{
  id v1 = a1;
  sub_1DC87E988(&qword_1EAA9DF60);
  if (swift_dynamicCast()) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCAC6178(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, void (*a5)(uint64_t *))
{
  a3(&v20);
  if (v5)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1DCB86FE8();
    sub_1DC89F57C(v9, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain();
    id v10 = v5;
    swift_bridgeObjectRetain();
    id v11 = v5;
    uint64_t v12 = sub_1DCB86FC8();
    os_log_type_t v13 = sub_1DCB88468();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v20 = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      swift_bridgeObjectRetain();
      sub_1DC9F8920(a1, a2, &v20);
      sub_1DCB88778();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2080;
      id v16 = v5;
      sub_1DC87E988(&qword_1EAA9DF60);
      uint64_t v17 = sub_1DCB87988();
      sub_1DC9F8920(v17, v18, &v20);
      sub_1DCB88778();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DC873000, v12, v13, "%serror logging: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01A99C0](v15, -1, -1);
      MEMORY[0x1E01A99C0](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    return swift_willThrow();
  }
  else
  {
    a5(&v20);
    return v20;
  }
}

uint64_t sub_1DCAC6400()
{
  sub_1DCAC6C64();
  uint64_t v5 = v4();
  if (!v0) {
    return v3(v5);
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1DCB86FE8();
  sub_1DC89F57C(v7, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain();
  id v8 = v0;
  swift_bridgeObjectRetain();
  id v9 = v0;
  id v10 = sub_1DCB86FC8();
  os_log_type_t v11 = sub_1DCB88468();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (_DWORD *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v2, v1, &v26);
    sub_1DCAC6BF4();
    int v13 = swift_bridgeObjectRelease_n();
    sub_1DCAC6C40(v13, v14, v15, v16, v17, v18, v19, v20, v25);
    sub_1DC87E988(&qword_1EAA9DF60);
    uint64_t v21 = sub_1DCB87988();
    sub_1DC9F8920(v21, v22, &v26);
    sub_1DCAC6C1C();
    swift_bridgeObjectRelease();

    sub_1DCA36D10(&dword_1DC873000, v23, v24, "%serror logging: %s");
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  return swift_willThrow();
}

uint64_t sub_1DCAC6604()
{
  void (*v4)(uint64_t *__return_ptr);
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _DWORD *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  sub_1DCAC6C64();
  v4(&v25);
  if (v0)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1DCB86FE8();
    sub_1DC89F57C(v5, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain();
    os_log_type_t v6 = v0;
    swift_bridgeObjectRetain();
    uint64_t v7 = v0;
    id v8 = sub_1DCB86FC8();
    id v9 = sub_1DCB88468();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (_DWORD *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *id v10 = 136315394;
      swift_bridgeObjectRetain();
      sub_1DC9F8920(v2, v1, &v25);
      sub_1DCAC6BF4();
      os_log_type_t v11 = swift_bridgeObjectRelease_n();
      sub_1DCAC6C40(v11, v12, v13, v14, v15, v16, v17, v18, v24);
      sub_1DC87E988(&qword_1EAA9DF60);
      int v19 = sub_1DCB87988();
      sub_1DC9F8920(v19, v20, &v25);
      sub_1DCAC6C1C();
      swift_bridgeObjectRelease();

      sub_1DCA36D10(&dword_1DC873000, v21, v22, "%serror logging: %s");
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    return swift_willThrow();
  }
  else
  {
    v3(&v25);
    return v25;
  }
}

id sub_1DCAC6818(void *a1)
{
  if (!a1)
  {
    id v4 = (id)*MEMORY[0x1E4F1C3B8];
    uint64_t v5 = 0xED0000726F727265;
    uint64_t v6 = 0x206E776F6E6B6E75;
LABEL_6:
    id v9 = objc_allocWithZone(MEMORY[0x1E4F1CA00]);
    return sub_1DCAC6B1C(v4, v6, v5, 0);
  }
  id v1 = a1;
  sub_1DC87E988(&qword_1EAA9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v7 = (void *)*MEMORY[0x1E4F1C3B8];
    swift_getErrorValue();
    id v4 = v7;
    uint64_t v6 = sub_1DCB89118();
    uint64_t v5 = v8;
    goto LABEL_6;
  }
  uint64_t v2 = (void *)sub_1DCB87908();
  objc_allocWithZone(MEMORY[0x1E4F1CA00]);
  swift_bridgeObjectRetain();
  id v3 = sub_1DCAC6B1C(v2, v11, v12, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DCAC69D8(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, void (*a5)(uint64_t *))
{
  uint64_t v6 = sub_1DCAC6178(a1, a2, a3, a4, a5);
  if (v5)
  {
    char v7 = sub_1DCAC6120(v5);

    sub_1DC938C14();
    swift_willThrowTypedImpl();
    swift_allocError();
    *uint64_t v8 = v7;
  }
  return v6;
}

uint64_t sub_1DCAC6A70()
{
  return sub_1DCAC6A88();
}

uint64_t sub_1DCAC6A88()
{
  uint64_t v1 = sub_1DCAC6604();
  if (!v0) {
    return v1;
  }
  uint64_t v2 = sub_1DCAC6120(v0);

  sub_1DC938C14();
  swift_willThrowTypedImpl();
  swift_allocError();
  *id v3 = v2;
  return v2;
}

id sub_1DCAC6B1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    char v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v8 = 0;
    goto LABEL_6;
  }
  char v7 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v8 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
LABEL_6:
  id v9 = objc_msgSend(v4, sel_initWithName_reason_userInfo_, a1, v7, v8);

  return v9;
}

ValueMetadata *_s9ExceptionVMa()
{
  return &_s9ExceptionVN;
}

uint64_t sub_1DCAC6BF4()
{
  return sub_1DCB88778();
}

uint64_t sub_1DCAC6C1C()
{
  return sub_1DCB88778();
}

id sub_1DCAC6C40(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  *(_WORD *)(v10 + 12) = 2080;
  return v9;
}

uint64_t sub_1DCAC6C78(uint64_t a1)
{
  uint64_t result = sub_1DCAF28B0(a1, (uint64_t)v7);
  if (!v1)
  {
    sub_1DC87E9DC((uint64_t)v7, (uint64_t)v6);
    if (swift_dynamicCast())
    {
      sub_1DC8818D0((uint64_t)v7);
      return v5;
    }
    else
    {
      sub_1DC88CCDC();
      uint64_t v3 = sub_1DC883884();
      sub_1DCAC9310(v3, v4);
      return sub_1DC8818D0((uint64_t)v7);
    }
  }
  return result;
}

uint64_t sub_1DCAC6D14(uint64_t a1)
{
  uint64_t result = sub_1DCAF28B0(a1, (uint64_t)v6);
  if (!v1)
  {
    sub_1DC87E9DC((uint64_t)v6, (uint64_t)&v5);
    sub_1DC917CC4();
    if (swift_dynamicCast())
    {
      sub_1DC8818D0((uint64_t)v6);
      return v7;
    }
    else
    {
      sub_1DC88CCDC();
      uint64_t v3 = sub_1DC883884();
      sub_1DCAC9310(v3, v4);
      return sub_1DC8818D0((uint64_t)v6);
    }
  }
  return result;
}

uint64_t sub_1DCAC6DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1DCAF292C(a1, a2, a3, (uint64_t)v8);
  if (!v3)
  {
    sub_1DC87E9DC((uint64_t)v8, (uint64_t)v7);
    if (swift_dynamicCast())
    {
      sub_1DC8818D0((uint64_t)v8);
      return v6;
    }
    else
    {
      sub_1DC88CCDC();
      swift_allocError();
      *uint64_t v5 = 7;
      swift_willThrow();
      return sub_1DC8818D0((uint64_t)v8);
    }
  }
  return result;
}

uint64_t sub_1DCAC6E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1DCAF292C(a1, a2, a3, (uint64_t)v7);
  if (!v3)
  {
    sub_1DC87E9DC((uint64_t)v7, (uint64_t)v6);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1DC88CCDC();
      swift_allocError();
      *uint64_t v5 = 7;
      swift_willThrow();
    }
    return sub_1DC8818D0((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1DCAC6F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1DCAF292C(a1, a2, a3, (uint64_t)v7);
  if (!v3)
  {
    sub_1DC87E9DC((uint64_t)v7, (uint64_t)&v6);
    sub_1DC87E988(&qword_1EAAA8628);
    if (swift_dynamicCast())
    {
      sub_1DC8818D0((uint64_t)v7);
      return v8;
    }
    else
    {
      sub_1DC88CCDC();
      swift_allocError();
      *uint64_t v5 = 7;
      swift_willThrow();
      return sub_1DC8818D0((uint64_t)v7);
    }
  }
  return result;
}

double sub_1DCAC7004()
{
  return *(double *)(v0 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 16);
}

void sub_1DCAC703C(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 16) = a1;
}

uint64_t sub_1DCAC7074()
{
  return *(void *)(v0 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 24);
}

uint64_t sub_1DCAC70B0(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 24) = result;
  return result;
}

uint64_t sub_1DCAC70E8()
{
  return *(void *)(v0 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 32);
}

uint64_t sub_1DCAC7124(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 32) = result;
  return result;
}

uint64_t sub_1DCAC719C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DCB88B68();
    id v4 = (objc_class *)type metadata accessor for SNSoundActionCommand();
    uint64_t v5 = (uint64_t *)(v1 + 56);
    do
    {
      uint64_t v7 = *(v5 - 3);
      uint64_t v6 = *(v5 - 2);
      uint64_t v8 = *(v5 - 1);
      uint64_t v9 = *v5;
      v5 += 4;
      uint64_t v10 = (char *)objc_allocWithZone(v4);
      uint64_t v11 = &v10[OBJC_IVAR___SNSoundActionCommand_impl];
      *(void *)uint64_t v11 = v7;
      *((void *)v11 + 1) = v6;
      *((void *)v11 + 2) = v8;
      *((void *)v11 + 3) = v9;
      v13.receiver = v10;
      v13.Class super_class = v4;
      swift_bridgeObjectRetain();
      objc_msgSendSuper2(&v13, sel_init);
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      --v2;
    }
    while (v2);
    uint64_t v3 = v14;
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_1DCAC7340(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
    uint64_t v4 = sub_1DCB88CC8();
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1DC89890C();
  if (v4 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v18;
  uint64_t v16 = v1;
  unint64_t v17 = v3 & 0xC000000000000001;
  unint64_t v7 = v3;
  do
  {
    if (v17) {
      uint64_t v8 = (char *)MEMORY[0x1E01A7AE0](v5, v3);
    }
    else {
      uint64_t v8 = (char *)*(id *)(v3 + 8 * v5 + 32);
    }
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)&v8[OBJC_IVAR___SNSoundActionCommand_impl];
    uint64_t v11 = *(void *)&v8[OBJC_IVAR___SNSoundActionCommand_impl + 8];
    uint64_t v12 = *(void *)&v8[OBJC_IVAR___SNSoundActionCommand_impl + 16];
    uint64_t v13 = *(void *)&v8[OBJC_IVAR___SNSoundActionCommand_impl + 24];
    swift_bridgeObjectRetain();

    unint64_t v14 = *(void *)(v18 + 16);
    if (v14 >= *(void *)(v18 + 24) >> 1) {
      sub_1DC89890C();
    }
    ++v5;
    *(void *)(v18 + 16) = v14 + 1;
    int v15 = (void *)(v18 + 32 * v14);
    v15[4] = v10;
    v15[5] = v11;
    v15[6] = v12;
    v15[7] = v13;
    unint64_t v3 = v7;
  }
  while (v4 != v5);
  swift_bridgeObjectRelease();
  uint64_t v2 = v16;
LABEL_14:
  *(void *)(v2 + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 40) = v6;

  swift_bridgeObjectRelease();
}

_UNKNOWN **sub_1DCAC74F0()
{
  type metadata accessor for SNSoundActionsDetector();
  uint64_t v2 = swift_allocObject();
  sub_1DCAC7E08((char *)v0);
  if (v1) {
    return &off_1F37EE168;
  }
  else {
    return (_UNKNOWN **)v2;
  }
}

void sub_1DCAC7550(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = v4;
  uint64_t v9 = sub_1DCAC6DB4(a2, 0xD000000000000013, 0x80000001DCB9A720);
  if (v3)
  {

    swift_bridgeObjectRelease();
LABEL_4:
    swift_deallocPartialClassInstance();
    return;
  }
  uint64_t v10 = v9;
  sub_1DCAC6E6C(a2, 0x6D61536F69647541, 0xEF65746152656C70);
  uint64_t v12 = v11;
  uint64_t v13 = sub_1DCAC6DB4(a2, 0xD000000000000015, 0x80000001DCB9A740);
  uint64_t v14 = sub_1DCAC6F24(a2, 0x73646E616D6D6F43, 0xE800000000000000);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v14 + 16);
  unint64_t v16 = MEMORY[0x1E4FBC860];
  id v54 = a1;
  id v55 = ObjectType;
  uint64_t v52 = v13;
  uint64_t v53 = v10;
  if (v15)
  {
    unint64_t v61 = MEMORY[0x1E4FBC860];
    uint64_t v17 = v15;
    id v57 = a1;
    uint64_t v49 = v17;
    sub_1DCB88B68();
    uint64_t v18 = v14 + 32;
    int v19 = (objc_class *)type metadata accessor for SNSoundActionCommand();
    uint64_t v20 = 0;
    id v47 = v19;
    uint64_t v48 = v14 + 32;
    while (1)
    {
      uint64_t v21 = *(void *)(v18 + 8 * v20);
      id v22 = objc_allocWithZone(v19);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = (char *)sub_1DCA86B84(v21);
      uint64_t v24 = sub_1DCAC9084(objc_msgSend(v57, sel_modelDescription));
      if (!v24) {
        break;
      }
      uint64_t v25 = sub_1DCAC7AC4(v24);
      swift_bridgeObjectRelease();
      if (!v25) {
        break;
      }
      uint64_t v26 = *(void *)(v25 + 16);
      if (!v26)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        break;
      }
      uint64_t v27 = v20 + 1;
      uint64_t v28 = &v23[OBJC_IVAR___SNSoundActionCommand_impl];
      int v29 = (void *)(v25 + 40);
      while (1)
      {
        BOOL v30 = *(v29 - 1) == *(void *)v28 && *v29 == *((void *)v28 + 1);
        if (v30 || (sub_1DCB89018() & 1) != 0) {
          break;
        }
        v29 += 2;
        if (!--v26) {
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      uint64_t v18 = v48;
      BOOL v30 = v27 == v49;
      a1 = v54;
      uint64_t ObjectType = v55;
      uint64_t v20 = v27;
      uint64_t v10 = v53;
      int v19 = v47;
      if (v30)
      {
        unint64_t v31 = v61;
        uint64_t v13 = v52;
        swift_bridgeObjectRelease();

        unint64_t v16 = MEMORY[0x1E4FBC860];
        goto LABEL_24;
      }
    }
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0, 0xE000000000000000);
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  unint64_t v31 = MEMORY[0x1E4FBC860];
LABEL_24:
  type metadata accessor for SNMLModelAdapter();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v32;
  *(void *)(v32 + 16) = a1;
  if (v31 >> 62)
  {
    uint64_t v51 = v32;
    id v46 = a1;
    swift_bridgeObjectRetain();
    uint64_t v33 = v51;
    uint64_t v59 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v59 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v34 = a1;
  }
  if (!v59)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
LABEL_37:
    id v45 = (uint64_t *)&v8[OBJC_IVAR___SNDetectSoundActionsRequest_impl];
    *id v45 = v33;
    v45[1] = (uint64_t)&off_1F37FEC00;
    v45[2] = v12;
    v45[3] = v10;
    v45[4] = v13;
    v45[5] = (uint64_t)v36;

    v60.receiver = v8;
    v60.Class super_class = ObjectType;
    objc_msgSendSuper2(&v60, sel_init);

    return;
  }
  uint64_t v50 = v33;
  unint64_t v61 = v16;
  sub_1DC89890C();
  if ((v59 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = 0;
    uint64_t v36 = (void *)v61;
    unint64_t v56 = v31 & 0xC000000000000001;
    id v58 = (id)v31;
    do
    {
      if (v56) {
        uint64_t v37 = (char *)MEMORY[0x1E01A7AE0](v35, v31);
      }
      else {
        uint64_t v37 = (char *)*(id *)(v31 + 8 * v35 + 32);
      }
      uint64_t v38 = v37;
      uint64_t v39 = *(void *)&v37[OBJC_IVAR___SNSoundActionCommand_impl];
      uint64_t v40 = *(void *)&v37[OBJC_IVAR___SNSoundActionCommand_impl + 8];
      uint64_t v41 = *(void *)&v37[OBJC_IVAR___SNSoundActionCommand_impl + 16];
      uint64_t v42 = *(void *)&v37[OBJC_IVAR___SNSoundActionCommand_impl + 24];
      swift_bridgeObjectRetain();

      unint64_t v61 = (unint64_t)v36;
      unint64_t v43 = v36[2];
      if (v43 >= v36[3] >> 1)
      {
        sub_1DC89890C();
        uint64_t v36 = (void *)v61;
      }
      ++v35;
      v36[2] = v43 + 1;
      id v44 = &v36[4 * v43];
      v44[4] = v39;
      v44[5] = v40;
      v44[6] = v41;
      v44[7] = v42;
      unint64_t v31 = (unint64_t)v58;
    }
    while (v59 != v35);
    swift_bridgeObjectRelease();
    a1 = v54;
    uint64_t ObjectType = v55;
    uint64_t v13 = v52;
    uint64_t v10 = v53;
    uint64_t v33 = v50;
    goto LABEL_37;
  }
  __break(1u);
}

uint64_t sub_1DCAC7AC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  sub_1DC897B8C();
  uint64_t v3 = v11;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1DC87E9DC(i, (uint64_t)v10);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC897B8C();
        uint64_t v3 = v11;
      }
      unint64_t v5 = *(void *)(v3 + 16);
      if (v5 >= *(void *)(v3 + 24) >> 1)
      {
        sub_1DC897B8C();
        uint64_t v3 = v11;
      }
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 16 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v9;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

id SNDetectSoundActionsRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNDetectSoundActionsRequest.init()()
{
}

id SNDetectSoundActionsRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1DCAC7DB4()
{
  return sub_1DCAC74F0();
}

uint64_t type metadata accessor for SNDetectSoundActionsRequest()
{
  return self;
}

uint64_t method lookup function for SNDetectSoundActionsRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNDetectSoundActionsRequest);
}

void sub_1DCAC7E08(char *a1)
{
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  sub_1DC89F6D8();
  *(void *)(v1 + 16) = 0;
  uint64_t v8 = sub_1DCAC719C();
  double v11 = *(double *)&a1[OBJC_IVAR___SNDetectSoundActionsRequest_impl + 16];
  if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v11 <= -2147483650.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v11 >= 2147483650.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v3 = v8;
  uint64_t v4 = *(void *)&a1[OBJC_IVAR___SNDetectSoundActionsRequest_impl + 32];
  uint64_t v8 = sub_1DCB88628();
  if (!(v3 >> 62))
  {
    uint64_t v12 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_6;
  }
LABEL_22:
  uint64_t v39 = v8;
  uint64_t v30 = v10;
  uint64_t v31 = v9;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DCB88CC8();
  swift_bridgeObjectRelease();
  uint64_t v9 = v31;
  uint64_t v8 = v39;
  uint64_t v10 = v30;
LABEL_6:
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v36 = v9;
    uint64_t v37 = v10;
    uint64_t v38 = v8;
    v41[0] = MEMORY[0x1E4FBC860];
    sub_1DC8980EC();
    if (v12 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v32 = v4;
    uint64_t v33 = v2;
    id v34 = a1;
    uint64_t v35 = v6;
    uint64_t v14 = 0;
    uint64_t v13 = v41[0];
    unint64_t v40 = v3 & 0xC000000000000001;
    unint64_t v15 = v3;
    uint64_t v16 = v12;
    do
    {
      if (v40) {
        uint64_t v17 = (char *)MEMORY[0x1E01A7AE0](v14, v3);
      }
      else {
        uint64_t v17 = (char *)*(id *)(v3 + 8 * v14 + 32);
      }
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)&v17[OBJC_IVAR___SNSoundActionCommand_impl];
      uint64_t v20 = *(void *)&v17[OBJC_IVAR___SNSoundActionCommand_impl + 8];
      uint64_t v21 = *(void *)&v17[OBJC_IVAR___SNSoundActionCommand_impl + 24];
      uint64_t v22 = *(void *)&v17[OBJC_IVAR___SNSoundActionCommand_impl + 16];
      swift_bridgeObjectRetain();

      v41[0] = v13;
      unint64_t v23 = *(void *)(v13 + 16);
      if (v23 >= *(void *)(v13 + 24) >> 1)
      {
        sub_1DC8980EC();
        uint64_t v13 = v41[0];
      }
      ++v14;
      *(void *)(v13 + 16) = v23 + 1;
      uint64_t v24 = (void *)(v13 + 32 * v23);
      v24[4] = v19;
      v24[5] = v20;
      v24[6] = v21;
      v24[7] = v22;
      unint64_t v3 = v15;
    }
    while (v16 != v14);
    a1 = v34;
    uint64_t v6 = v35;
    uint64_t v4 = v32;
    uint64_t v5 = v33;
    uint64_t v10 = v37;
    uint64_t v8 = v38;
    uint64_t v9 = v36;
  }
  v41[0] = v8;
  v41[1] = v9;
  v41[2] = v10;
  uint64_t v25 = sub_1DCA44B0C(v13, v4, v41);
  if (v5)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v27 = v25;
    uint64_t v28 = v26;
    swift_bridgeObjectRelease();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v27;
    *(void *)(v29 + 24) = v28;
    swift_bridgeObjectRelease();
    *(void *)(v6 + 32) = sub_1DCAC9124;
    *(void *)(v6 + 40) = v29;
    *(void *)(v6 + 24) = a1;
  }
}

uint64_t sub_1DCAC80F0(uint64_t a1, uint64_t a2, unint64_t a3, double a4)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  type metadata accessor for SNUtils();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  unint64_t v11 = sub_1DCB21C80(v10);

  int v12 = sub_1DCB2395C(v11, 1u);
  swift_bridgeObjectRelease();
  if ((~*(void *)&a4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (a4 <= -1.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a4 >= 4294967300.0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((a3 & 0x8000000000000000) == 0 && !HIDWORD(a3))
  {
    uint64_t v13 = self;
    sub_1DCB6BA88(a4, a3, 1, (uint64_t)&v68);
    sub_1DCB6BB74(a4, a3, v12, 1, (uint64_t)&v68);
    id v14 = v68;
    long long v65 = v70;
    long long v66 = v69;
    int v64 = v71;
    id v68 = 0;
    id v15 = sub_1DCB6B73C(v13, (uint64_t)&v68);
    id v16 = v68;
    if (!v15)
    {
      id v39 = v68;
      sub_1DCAC92F8();

      swift_willThrow();
      return (uint64_t)v15;
    }
    id v17 = v68;
    sub_1DCB87908();
    uint64_t v18 = sub_1DCAC92B4();
    id v22 = sub_1DCB68494(v18, v19, v20, v21);

    id v23 = v68;
    if (v22)
    {
      double v63 = v22;
      id v24 = v68;
      sub_1DCB87908();
      uint64_t v25 = sub_1DCAC92B4();
      id v29 = sub_1DCB6A308(v25, v26, v27, v28);

      id v30 = v68;
      if (v29)
      {
        uint64_t v31 = v29;
        id v32 = v68;
        sub_1DCAC92D0();
        uint64_t v33 = sub_1DCAC92B4();
        id v37 = sub_1DCB6A948(v33, v34, v35, v36);

        if (v37)
        {
          id v38 = v68;
          sub_1DCB2FB74(v37, a1, a2);
          if (v4)
          {

            return (uint64_t)v15;
          }
          unint64_t v43 = (void *)sub_1DCB87908();
          id v68 = 0;
          id v44 = sub_1DCB68964(v13, v15, v43, 1, (uint64_t)&v68);

          if (v44)
          {
            id v67 = 0;
            id v45 = v68;
            uint64_t v46 = sub_1DCAC9264();
            if (sub_1DCB6B83C(v46, v47, v63, v31, 0, 0, v48, v49))
            {
              id v67 = 0;
              id v50 = 0;
              id v68 = v14;
              long long v69 = v66;
              long long v70 = v65;
              int v71 = v64;
              int v51 = sub_1DCB6B83C(v13, v15, v31, v37, 0, 0, (long long *)&v68, (uint64_t)&v67);
              id v52 = v67;
              if (v51)
              {
                id v67 = 0;
                id v53 = v52;
                uint64_t v54 = sub_1DCAC9264();
                if (sub_1DCB6B83C(v54, v55, v37, v44, 0, 0, v56, v57))
                {
                  if (a4 > -9.22337204e18)
                  {
                    if (a4 < 9.22337204e18)
                    {
                      id v58 = v67;
                      sub_1DCB5EC24((uint64_t)v15);
                      sub_1DCB5F1F8((uint64_t)v15);

                      return (uint64_t)v15;
                    }
LABEL_33:
                    __break(1u);
                  }
LABEL_32:
                  __break(1u);
                  goto LABEL_33;
                }
              }
              id v61 = v67;
              sub_1DCB86898();

              swift_willThrow();
            }
            else
            {
              id v60 = v67;
              sub_1DCB86898();

              swift_willThrow();
            }
          }
          else
          {
            id v59 = v68;
            sub_1DCB86898();

            swift_willThrow();
          }
        }
        else
        {
          id v42 = v68;
          sub_1DCAC92F8();

          swift_willThrow();
        }
      }
      else
      {
        id v41 = v68;
        sub_1DCAC92F8();

        swift_willThrow();
      }
    }
    else
    {
      id v40 = v68;
      sub_1DCAC92F8();

      swift_willThrow();
    }

    return (uint64_t)v15;
  }
  sub_1DC8AF148();
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

void *sub_1DCAC86B4(void *a1, int64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  v59[6] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = self;
  v53.int64_t value = 0;
  id v9 = sub_1DCB6B5C0(v8, a1, (uint64_t)&v53);
  uint64_t v10 = (void *)v53.value;
  if (!v9)
  {
    id v22 = (id)v53.value;
    sub_1DCB86898();

    swift_willThrow();
    return v3;
  }
  unint64_t v11 = v9;
  int v51 = v3;
  uint64_t v49 = a3;
  int64_t value = a2;
  uint64_t v12 = *(void *)(v3[3] + OBJC_IVAR___SNDetectSoundActionsRequest_impl + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  swift_unknownObjectRetain();
  id v15 = v10;
  unint64_t v3 = (void *)v14(ObjectType, v12);
  swift_unknownObjectRelease();
  sub_1DCA223FC(v3);
  if (!v16)
  {
    sub_1DC884E74();
    sub_1DC883884();
    *id v24 = 0;
    swift_willThrow();
    goto LABEL_10;
  }
  id v17 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  unint64_t v3 = objc_msgSend(v11, sel_featureValueForName_, v17);

  if (!v3) {
    goto LABEL_8;
  }
  id v18 = objc_msgSend(v3, sel_dictionaryValue);

  sub_1DC917CC4();
  uint64_t v19 = sub_1DCB877B8();

  sub_1DCA2089C(v19);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_8:
    sub_1DC884E74();
    sub_1DC883884();
    *id v23 = 0;
    swift_willThrow();
    swift_bridgeObjectRelease();
LABEL_10:
    swift_unknownObjectRelease();
    return v3;
  }
  sub_1DCB2FC90(a1, 0, (uint64_t)v54);
  if (v4)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return v3;
  }
  if ((~*(void *)&v54[0] & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v54[0] <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  if (v54[0] >= 9.22337204e18) {
    goto LABEL_21;
  }
  int64_t v25 = (uint64_t)v54[0];
  id v26 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, sub_1DCB5C99C((uint64_t)a1));
  sub_1DC8AE910(v26);
  int32_t v28 = v27;

  CMTimeMake(&v53, v25, v28);
  CMTimeValue v29 = v53.value;
  CMTimeEpoch epoch = v53.epoch;
  uint64_t v30 = *(void *)&v53.timescale;
  id v31 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, sub_1DCB5C99C((uint64_t)a1));
  sub_1DC8AE910(v31);
  LODWORD(v26) = v32;

  CMTimeMake(&v53, value, (int32_t)v26);
  CMTimeValue v33 = v53.value;
  CMTimeEpoch v34 = v53.epoch;
  uint64_t v35 = *(void *)&v53.timescale;
  uint64_t v36 = (uint64_t (*)(uint64_t, void *))v51[4];
  sub_1DC962254();
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  v59[0] = v29;
  v59[1] = v30;
  v59[2] = epoch;
  v59[3] = v33;
  v59[4] = v35;
  v59[5] = v34;
  id v40 = (void *)v36(v38, v59);
  swift_bridgeObjectRelease();
  if (v40)
  {
    SNSoundActionsResult.timeRange.getter((uint64_t)v55);
    uint64_t v41 = v55[0];
    uint64_t v42 = v55[1];
    uint64_t v43 = v55[2];
    id v44 = v40;
    v49(v41, v42, v43);
    uint64_t v45 = sub_1DCB883C8();
    ((void (*)(uint64_t))v49)(v45);
    sub_1DCB883D8();
    uint64_t v46 = v58;
    id v47 = &v44[OBJC_IVAR___SNSoundActionsResult_impl];
    *(void *)id v47 = v55[6];
    *((void *)v47 + 1) = v55[7];
    *((_OWORD *)v47 + 1) = v56;
    *((void *)v47 + 4) = v57;
    *((void *)v47 + 5) = v46;

    sub_1DC87E988(&qword_1EAA9C720);
    CMTimeValue v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1DCBB8670;
    *(void *)(v48 + 32) = v44;
    v53.int64_t value = v48;
    sub_1DCB87C68();
    unint64_t v3 = (void *)v53.value;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

id sub_1DCAC8BC8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DCAC8FE4();
  sub_1DC883884();
  return (id)swift_willThrow();
}

void sub_1DCAC8C1C()
{
  sub_1DC89F6D8();
  uint64_t v3 = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  uint64_t v5 = sub_1DC8A12D0();
  swift_release();
  if (!v1)
  {
    uint64_t v6 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v5;
  }
}

uint64_t sub_1DCAC8CB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (double *)(*(void *)(a1 + 24) + OBJC_IVAR___SNDetectSoundActionsRequest_impl);
  uint64_t v5 = *((void *)v4 + 1);
  unint64_t v6 = *((void *)v4 + 3);
  double v7 = v4[2];
  uint64_t v8 = swift_unknownObjectRetain();
  uint64_t v9 = sub_1DCAC80F0(v8, v5, v6, v7);
  uint64_t result = swift_unknownObjectRelease();
  if (!v2) {
    *a2 = v9;
  }
  return result;
}

id sub_1DCAC8D34()
{
  id result = sub_1DCAC8BC8();
  if (!v0)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)sub_1DCAC92D0();
    id v4 = sub_1DCB60550(v2, v3);

    return v4;
  }
  return result;
}

uint64_t sub_1DCAC8D98()
{
  swift_release();
  return v0;
}

uint64_t sub_1DCAC8DC8()
{
  sub_1DCAC8D98();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNSoundActionsDetector()
{
  return self;
}

uint64_t destroy for DetectSoundActionsRequest()
{
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectSoundActionsRequest(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DetectSoundActionsRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectSoundActionsRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DetectSoundActionsRequest()
{
  return &type metadata for DetectSoundActionsRequest;
}

void *sub_1DCAC8F84(void *a1, int64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  return sub_1DCAC86B4(a1, a2, a3);
}

id sub_1DCAC8F9C()
{
  return sub_1DCAC8D34();
}

void sub_1DCAC8FB4()
{
}

id sub_1DCAC8FCC()
{
  return sub_1DCAC8BC8();
}

unint64_t sub_1DCAC8FE4()
{
  unint64_t result = qword_1EAAA8610;
  if (!qword_1EAAA8610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8610);
  }
  return result;
}

uint64_t sub_1DCAC9030()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCAC9068@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCAC8CB4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DCAC9084(void *a1)
{
  id v2 = objc_msgSend(a1, sel_classLabels);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1DCB87C38();

  return v3;
}

uint64_t sub_1DCAC90EC()
{
  swift_release();

  return swift_deallocObject();
}

char *sub_1DCAC9124(uint64_t a1, uint64_t a2)
{
  return sub_1DCA44D9C(a1, a2, *(void (**)(uint64_t *__return_ptr))(v2 + 16), *(char **)(v2 + 24));
}

unsigned char *storeEnumTagSinglePayload for SNSoundActionsDetector.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCAC91DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNSoundActionsDetector.DomainError()
{
  return &type metadata for SNSoundActionsDetector.DomainError;
}

unint64_t sub_1DCAC9218()
{
  unint64_t result = qword_1EAAA8630;
  if (!qword_1EAAA8630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8630);
  }
  return result;
}

uint64_t sub_1DCAC9264()
{
  return v0;
}

uint64_t sub_1DCAC92B4()
{
  return v0;
}

uint64_t sub_1DCAC92D0()
{
  return sub_1DCB87908();
}

uint64_t sub_1DCAC92F8()
{
  return sub_1DCB86898();
}

uint64_t sub_1DCAC9310(uint64_t a1, unsigned char *a2)
{
  *a2 = 7;
  return swift_willThrow();
}

uint64_t AnyAsyncIterator.next()()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  double v7 = (uint64_t (*)(uint64_t))(*v0 + *(int *)*v0);
  uint64_t v3 = swift_task_alloc();
  unsigned int v4 = (void *)sub_1DC886800(v3);
  *unsigned int v4 = v5;
  v4[1] = sub_1DC8D6930;
  return v7(v2);
}

uint64_t AsyncSequence.toAnyAsyncSequence()(uint64_t a1, uint64_t a2)
{
  return sub_1DCAC99BC(a1, a2, MEMORY[0x1E4FBD0F0], MEMORY[0x1E4FBCF10], (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))sub_1DCAC9AA4);
}

void *sub_1DCAC9424()
{
  sub_1DCACABC8();
  uint64_t v5 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 32))(v6, v3, v1);
  unint64_t result = (void *)swift_allocObject();
  result[2] = v2;
  result[3] = v1;
  result[4] = v0;
  result[5] = v5;
  *unsigned int v4 = &unk_1EAAA8798;
  v4[1] = result;
  return result;
}

uint64_t sub_1DCAC94C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1DCAC9538, 0, 0);
}

uint64_t sub_1DCAC9538()
{
  sub_1DC8867A8();
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_1DCAC95E4;
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return MEMORY[0x1F4187C78](v3, v4, v2);
}

uint64_t sub_1DCAC95E4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1DCAC96E8, 0, 0);
  }
  else
  {
    swift_endAccess();
    sub_1DC8BA978();
    return v7();
  }
}

uint64_t sub_1DCAC96E8()
{
  sub_1DC8867A8();
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DCAC9748()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8D78C0;
  return AnyAsyncIterator.next()();
}

uint64_t sub_1DCAC97E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1DCAC98C0;
  return MEMORY[0x1F4187C88](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_1DCAC98C0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v3 + 24) = *(void *)(v3 + 16);
  }
  sub_1DC8BA978();
  return v7();
}

uint64_t AsyncIteratorProtocol.toAnyAsyncIterator()(uint64_t a1, uint64_t a2)
{
  return sub_1DCAC99BC(a1, a2, MEMORY[0x1E4FBCFC8], MEMORY[0x1E4FBCF08], (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))sub_1DCAC9424);
}

uint64_t sub_1DCAC99BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t, uint64_t, uint64_t))
{
  sub_1DC88D538();
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, v5, a1);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return a5(v11, AssociatedTypeWitness, a1, a2);
}

uint64_t sub_1DCAC9AA4()
{
  sub_1DCACABC8();
  sub_1DC88D538();
  uint64_t v6 = v5;
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (char *)swift_allocObject();
  *((void *)v8 + 2) = v2;
  *((void *)v8 + 3) = v1;
  *((void *)v8 + 4) = v0;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 32))(&v8[v7], v3, v1);
  *uint64_t v4 = sub_1DCACAB78;
  v4[1] = v8;
  return result;
}

double sub_1DCAC9B58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v17 = a2;
  id v18 = a4;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
  sub_1DCB87F28();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  sub_1DCAC9424();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, AssociatedTypeWitness);
  double result = *(double *)&v19;
  *id v18 = v19;
  return result;
}

uint64_t AnyAsyncSequence.makeAsyncIterator()()
{
  return (*v0)();
}

uint64_t sub_1DCAC9D98()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAC9DB4()
{
  AnyAsyncSequence.makeAsyncIterator()();

  return swift_release();
}

uint64_t sub_1DCAC9DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v8 = sub_1DC884350();
  uint64_t v9 = (void *)swift_allocObject();
  id v9[2] = *(void *)(a2 + 16);
  _OWORD v9[3] = a3;
  v9[4] = v7;
  v9[5] = v6;
  uint64_t v10 = sub_1DCB88718();
  swift_retain();
  swift_retain();
  swift_getWitnessTable();
  sub_1DC8D6D28((void (*)(void *))sub_1DCACA938, v8, (uint64_t)&unk_1EAAA8788, (uint64_t)v9, v10);
  swift_release_n();
  return swift_release();
}

uint64_t sub_1DCAC9EF0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DC8D78C0;
  return v6(a1);
}

uint64_t sub_1DCAC9FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAC9DE0(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_1DCAC9FE8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCACA038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  _OWORD v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1DCACA05C, 0, 0);
}

uint64_t sub_1DCACA05C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)v0[4];
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  uint64_t v7 = v3[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  uint64_t v8 = (void *)swift_allocObject();
  v0[7] = v8;
  v8[2] = v4;
  v8[3] = v5;
  v8[4] = v6;
  v8[5] = v7;
  sub_1DC884F60(v4);
  sub_1DCACA3AC((uint64_t)v8, v1, v2);
  v0[8] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  sub_1DCB88718();
  v0[2] = v2;
  swift_getWitnessTable();
  *uint64_t v10 = v0;
  v10[1] = sub_1DCACA1AC;
  return sub_1DC8D721C();
}

uint64_t sub_1DCACA1AC()
{
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = sub_1DCACA338;
  }
  else
  {
    swift_release();
    v7[11] = v3;
    v7[12] = v5;
    uint64_t v11 = sub_1DCACA2B4;
  }
  return MEMORY[0x1F4188298](v11, 0, 0);
}

uint64_t sub_1DCACA2B4()
{
  sub_1DC886900();
  uint64_t v1 = *(int8x16_t **)(v0 + 24);
  int8x16_t v4 = *(int8x16_t *)(v0 + 88);
  swift_release();
  swift_release();
  int8x16_t *v1 = vextq_s8(v4, v4, 8uLL);
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DCACA338()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_1DCACA3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return &unk_1EAAA8778;
}

uint64_t sub_1DCACA420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)swift_task_alloc();
  v3[7] = v5;
  sub_1DCB88718();
  type metadata accessor for XPCFunction();
  v3[6] = a3;
  uint64_t WitnessTable = swift_getWitnessTable();
  v3[4] = &off_1F37F3BD0;
  v3[5] = WitnessTable;
  swift_getWitnessTable();
  *uint64_t v5 = v3;
  v5[1] = sub_1DCACA55C;
  return sub_1DC965FE4();
}

uint64_t sub_1DCACA55C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_1DCACA63C;
  }
  else {
    uint64_t v7 = sub_1DC9A72DC;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1DCACA63C()
{
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCACA658()
{
  sub_1DC88688C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  swift_retain();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_1DC886800(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1DC8D78C0;
  return sub_1DCACA038(v7, v5, v3, v1);
}

uint64_t sub_1DCACA718()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8D78C0;
  return sub_1DCACA658();
}

uint64_t sub_1DCACA7D0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for AnyAsyncIterator()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for AnyAsyncSequence()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCACA85C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCACA894()
{
  sub_1DC886900();
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1DC9A78B4;
  return sub_1DCACA420(v4, v2, v3);
}

uint64_t sub_1DCACA938()
{
  return sub_1DC8849DC();
}

uint64_t sub_1DCACA950()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCACA988()
{
  sub_1DC88688C();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_1DC886800(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1DC8D6930;
  return sub_1DCAC9EF0(v2, v3);
}

uint64_t sub_1DCACAA3C()
{
  sub_1DC88688C();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_1DC886800(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_1DC8D78C0;
  return sub_1DCAC94C4(v2, v5, v3, v4, v6);
}

uint64_t sub_1DCACAAF0()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));

  return swift_deallocObject();
}

double sub_1DCACAB78@<D0>(_OWORD *a1@<X8>)
{
  return sub_1DCAC9B58(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80)), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1DCACABE0()
{
  uint64_t result = type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCACAC90(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCACADF4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DCACAE08(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((((((((v9 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((((((((v9 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v15 = a2 - v8;
    else {
      int v15 = 1;
    }
    if (((((((((((((v9 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DCACB008);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
            v17[2] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AudioStreamAnalyzerEnvironment()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AudioStreamAnalyzerEnvironmentImpl()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCACB060()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DCACB110(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v10 = *v11;
    v10[1] = v11[1];
    v10[2] = v11[2];
    *(void *)(((unint64_t)v10 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 31) & 0xFFFFFFFFFFFFFFF8);
    sub_1DCACBE7C();
    *int v13 = *v12;
    sub_1DCACBE7C();
    *int v15 = *v14;
    sub_1DCACBE7C();
    *unint64_t v17 = *v16;
    sub_1DCACBE7C();
    *long long v19 = *v18;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCACB2B8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_release();
  sub_1DCACBE64();
  sub_1DCACBE64();
  sub_1DCACBE64();
  sub_1DCACBE64();

  return swift_release();
}

uint64_t sub_1DCACB344()
{
  sub_1DCACBDF4();
  uint64_t v3 = v2 + 16;
  (*(void (**)(void))(v2 + 16))();
  uint64_t v4 = *(void *)(v3 + 48) + 7;
  uint64_t v5 = (void *)((v4 + v0) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)((v4 + v1) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  _OWORD v5[2] = v6[2];
  *(void *)(((unint64_t)v5 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v6 + 31) & 0xFFFFFFFFFFFFFFF8);
  sub_1DCACBE58();
  *unsigned int v8 = *v7;
  sub_1DCACBE58();
  *unint64_t v10 = *v9;
  sub_1DCACBE58();
  *unsigned int v12 = *v11;
  sub_1DCACBE58();
  *int v14 = *v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v0;
}

uint64_t sub_1DCACB438()
{
  sub_1DCACBDF4();
  uint64_t v2 = (void *)(v1 + 24);
  (*(void (**)(void))(v1 + 24))();
  sub_1DCACBE88();
  unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  *uint64_t v2 = *(void *)(v3 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v2[1] = *(void *)(v4 + 8);
  v2[2] = *(void *)(v4 + 16);
  uint64_t v5 = (void *)(((unint64_t)v2 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)((v4 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  swift_retain();
  swift_release();
  sub_1DCACBE10();
  swift_release();
  sub_1DCACBE10();
  swift_release();
  sub_1DCACBE10();
  swift_release();
  *(void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return v0;
}

uint64_t sub_1DCACB520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(void *)(v7 + 16) = v9;
  unint64_t v10 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v11 = (void *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v10 = *v11;
  unsigned int v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v12 = *v13;
  int v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v14 = *v15;
  *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  sub_1DCACBE58();
  *unint64_t v17 = *v16;
  return a1;
}

uint64_t sub_1DCACB5F4()
{
  sub_1DCACBDF4();
  uint64_t v2 = (void *)(v1 + 40);
  (*(void (**)(void))(v1 + 40))();
  sub_1DCACBE88();
  unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  *uint64_t v2 = *(void *)(v3 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v2[1] = *(void *)(v4 + 8);
  v2[2] = *(void *)(v4 + 16);
  uint64_t v5 = (void *)(((unint64_t)v2 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)((v4 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  swift_release();
  sub_1DCACBE34();
  sub_1DCACBE34();
  sub_1DCACBE34();
  *(void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return v0;
}

uint64_t sub_1DCACB6AC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCACB810);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DCACB824(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((((((((v9 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((((((((v9 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v15 = a2 - v8;
    else {
      int v15 = 1;
    }
    if (((((((((((((v9 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DCACBA24);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
            v17[2] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_1DCACBA4C()
{
  return swift_retain();
}

uint64_t sub_1DCACBA84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCACBA4C();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

uint64_t sub_1DCACBAB8()
{
  return swift_retain();
}

uint64_t sub_1DCACBAC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_1DCACBB40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  sub_1DCB0C160(*(void **)a1);
  if (!v2)
  {
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = v6;
    *(void *)(a2 + 16) = v7;
    *(unsigned char *)(a2 + 24) = v8 & 1;
    *(void *)(a2 + 32) = v4;
  }
}

unint64_t sub_1DCACBB84@<X0>(unint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)result;
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v5 = *(void *)(result + 16);
  uint64_t v6 = *(void *)(result + 32);
  if (*(unsigned char *)(result + 24) != 1)
  {
    uint64_t result = swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if ((unsigned __int128)(v3 * (__int128)v5) >> 64 == (v3 * v5) >> 63)
  {
    j__swift_bridgeObjectRetain(*(void *)result, v3, v5, 1);
    uint64_t result = sub_1DCB0D1B0(v3 * v5, v4, v3, v5);
    uint64_t v4 = result;
LABEL_5:
    *a2 = v4;
    a2[1] = v3;
    a2[2] = v5;
    a2[3] = v6;
    return result;
  }
  __break(1u);
  return result;
}

id sub_1DCACBC38@<X0>(id *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a2;
  id v6 = *a1;
  id result = objc_msgSend(v6, sel_frameLength);
  if (__OFADD__(v5, result))
  {
    __break(1u);
  }
  else
  {
    *a2 = v5 + result;
    *a3 = v6;
    a3[1] = v5;
  }
  return result;
}

void *sub_1DCACBC94@<X0>(void *result@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = result[2];
  uint64_t v4 = *a2 + v3;
  if (__OFADD__(*a2, v3))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = result;
    uint64_t v5 = *result;
    uint64_t v6 = v7[1];
    *a2 = v4;
    *a3 = v5;
    a3[1] = v6;
    a3[2] = v3;
    a3[3] = v4;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

_UNKNOWN **sub_1DCACBCBC()
{
  return &off_1F37F0C78;
}

uint64_t sub_1DCACBCC8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCACBD04(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCACBD40(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCACBD7C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCACBDB8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCACBE10()
{
  *(void *)(v0 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v1 & 0xFFFFFFFFFFFFFFF8);
  return swift_retain();
}

uint64_t sub_1DCACBE34()
{
  *(void *)(v1 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v0 & 0xFFFFFFFFFFFFFFF8);
  return swift_release();
}

uint64_t sub_1DCACBE64()
{
  return swift_release();
}

uint64_t sub_1DCACBE9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_1DCACCC9C(a1, a2, a3, a4, a5, a6, a8, a5, a7);
}

uint64_t sub_1DCACBF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(os_unfair_lock_s **)(*(void *)(a2 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_1DCACC378(a2, a1, (uint64_t)v9);
  os_unfair_lock_unlock(v7);
  uint64_t result = swift_release();
  if (!v3) {
    return sub_1DC978E04((uint64_t)v9, a3, (uint64_t *)&unk_1EAAA8920);
  }
  return result;
}

uint64_t sub_1DCACBFC8()
{
  sub_1DCACD0D4();
  sub_1DCACD0B0(*(void *)(v0 + 112));
  swift_getAssociatedTypeWitness();
  sub_1DCB88718();
  uint64_t v1 = swift_retain();
  sub_1DCACD088(v1, (void (*)(uint64_t))sub_1DCACD068, v2, v3, v4, (uint64_t)&off_1F37F3FF8);
  return swift_release();
}

uint64_t sub_1DCACC09C()
{
  sub_1DCACD0D4();
  sub_1DCACD0B0(*(void *)(v0 + 112));
  swift_getAssociatedTypeWitness();
  uint64_t v1 = swift_retain();
  sub_1DCACD088(v1, (void (*)(uint64_t))sub_1DCACCC7C, v2, v3, v4, (uint64_t)&off_1F37F3FF8);
  return swift_release();
}

void sub_1DCACC164()
{
}

uint64_t sub_1DCACC17C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCACC21C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1DCACC294()
{
  sub_1DCACC21C();

  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for AsyncCache()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCACC2D8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

double sub_1DCACC378@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  swift_beginAccess();
  sub_1DC9613BC(a2, *(void *)(a1 + 16), (uint64_t)v15);
  uint64_t v6 = (void *)v15[0];
  uint64_t v7 = v15[1];
  uint64_t v8 = v15[2];
  uint64_t v9 = v15[3];
  unint64_t v10 = (void *)v15[4];
  swift_endAccess();
  sub_1DC978E04((uint64_t)v15, (uint64_t)v17, (uint64_t *)&unk_1EAAA8920);
  if (v17[0] != 1)
  {
    sub_1DC978E04((uint64_t)v17, (uint64_t)v18, &qword_1EAA9E7D8);
    sub_1DC978E04((uint64_t)v18, (uint64_t)&v19, &qword_1EAA9E7D8);
    if (v19)
    {
      unsigned int v11 = v21;
      int v14 = v22;
      io_connect_t connect = v23;
      notifier[0] = v20;
      sub_1DC964444(v6, v7, v8, v9, v10);
      IODeregisterForSystemPower(notifier);
      IONotificationPortDestroy(v11);
      IOServiceClose(connect);

      swift_release();
    }
    sub_1DC8F7210((uint64_t)v15);
  }
  swift_beginAccess();
  sub_1DC8BF47C(a2, (uint64_t)notifier);
  swift_endAccess();
  sub_1DC8F7210((uint64_t)notifier);
  *(void *)a3 = 1;
  double result = 0.0;
  *(_OWORD *)(a3 + 8) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_DWORD *)(a3 + 40) = 0;
  return result;
}

uint64_t sub_1DCACC544@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v26 = a1;
  uint64_t v25 = a2;
  uint64_t v28 = a5;
  uint64_t v6 = *(void *)(*(void *)a3 + 88);
  uint64_t v7 = *(void *)(*(void *)a3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v22 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  io_connect_t v23 = (char *)&v21 - v9;
  swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1DCB88718();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  int v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  int v16 = (char *)&v21 - v15;
  swift_beginAccess();
  unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  uint64_t v24 = a4;
  v17(a4, v7, v6);
  swift_endAccess();
  uint64_t v18 = v27;
  v26(v16);
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  io_object_t v20 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v24, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v28, v10);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 32))(v14, v20, v7, v6);
  return swift_endAccess();
}

uint64_t sub_1DCACC848@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  CMTimeValue v29 = a1;
  uint64_t v28 = a2;
  uint64_t v31 = a5;
  uint64_t v6 = *(void *)(*(void *)a3 + 88);
  uint64_t v7 = *(void *)(*(void *)a3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v24 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v26 = (char *)&v22 - v9;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1DCB88718();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  int v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  int v16 = (char *)&v22 - v15;
  swift_beginAccess();
  unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  uint64_t v25 = a4;
  uint64_t v27 = v7;
  v17(a4, v7, v6);
  swift_endAccess();
  uint64_t v18 = v30;
  v29(v16);
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  io_object_t v20 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v25, v24);
  uint64_t v21 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v14, v31, v22);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v14, 0, 1, v21);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 32))(v14, v20, v27, v6);
  return swift_endAccess();
}

uint64_t sub_1DCACCB80()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 104));
  swift_release();
  return v0;
}

uint64_t sub_1DCACCC0C()
{
  sub_1DCACCB80();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SyncCache()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCACCC7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCACC848(*(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1DCACCC9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v18 = a6;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = a7;
  uint64_t v11 = *a2;
  uint64_t v12 = *(void *)(a8 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16(v13);
  uint64_t v22 = a5;
  uint64_t v23 = v18;
  uint64_t v24 = a8;
  uint64_t v25 = *(void *)(v11 + 80);
  uint64_t v26 = a9;
  uint64_t v27 = *(void *)(v11 + 88);
  uint64_t v28 = v19;
  uint64_t v29 = v20;
  uint64_t v30 = a1;
  sub_1DCACC09C();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, a8);
}

uint64_t sub_1DCACCE14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  v19[0] = a4;
  v19[1] = a3;
  uint64_t v20 = a2;
  uint64_t v9 = sub_1DCB88718();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v19 - v12;
  uint64_t v14 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v11);
  int v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    return v20(v19[0]);
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v18(v16, v13, a5);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(a6, v16, a5);
  }
}

uint64_t sub_1DCACCFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCACCE14(a1, *(uint64_t (**)(void))(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 24), a2);
}

uint64_t sub_1DCACD034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_1DCACD068@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCACC544(*(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1DCACD088(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1DCAC4DF0(a2, v8, v6, a6, v7);
}

uint64_t sub_1DCACD0B0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 40) = *(void *)(v1 + a1);
  return type metadata accessor for SafeLock();
}

id sub_1DCACD0EC(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 72);
  uint64_t v9 = &v3[OBJC_IVAR___SNDetectionResult_impl];
  *(void *)uint64_t v9 = *(void *)a1;
  *((void *)v9 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v9 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v9 + 4) = *(void *)(a1 + 32);
  *((void *)v9 + 5) = v4;
  *((void *)v9 + 6) = v5;
  *((void *)v9 + 7) = v6;
  *((void *)v9 + 8) = v7;
  v9[72] = v8;
  *((_OWORD *)v9 + 5) = *(_OWORD *)(a1 + 80);
  v11.receiver = v3;
  v11.Class super_class = v1;
  return objc_msgSendSuper2(&v11, sel_init);
}

id sub_1DCACD184()
{
  id v1 = objc_allocWithZone(v0);
  sub_1DC9214CC();
  uint64_t v2 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithIdentifier_detectedValue_, v2, 0);

  return v3;
}

void SNDetectionResult.confidence.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 48) = a1;
}

uint64_t SNDetectionResult.detected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 72) = result;
  return result;
}

double SNDetectionResult.confidence.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNDetectionResult_impl + 48);
}

uint64_t SNDetectionResult.detectorIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___SNDetectionResult_impl;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = a2;
  return sub_1DCACF1B8();
}

double SNDetectionResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNDetectionResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double SNDetectionResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNDetectionResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

double (*SNDetectionResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNDetectionResult.timeRange.getter((uint64_t)v3);
  return sub_1DCACD3CC;
}

double sub_1DCACD3CC(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNDetectionResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double (*SNDetectionResult.confidence.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNDetectionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 48);
  return sub_1DC8FA1F4;
}

uint64_t SNDetectionResult.detected.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNDetectionResult_impl + 72);
}

uint64_t (*SNDetectionResult.detected.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR___SNDetectionResult_impl;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + v2 + 72);
  return sub_1DCACD524;
}

uint64_t sub_1DCACD524(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(void *)(result + 8) + 72) = *(unsigned char *)(result + 16);
  return result;
}

uint64_t SNDetectionResult.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNDetectionResult_impl + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SNDetectionResult.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___SNDetectionResult_impl;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a2;
  return sub_1DCACF1B8();
}

uint64_t (*SNDetectionResult.identifier.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 64);
  *a1 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 56);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1DCACD618;
}

uint64_t sub_1DCACD618(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return SNDetectionResult.identifier.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  SNDetectionResult.identifier.setter(v3, v2);

  return swift_bridgeObjectRelease();
}

id sub_1DCACD6A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v3 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t SNDetectionResult.detectorIdentifier.getter()
{
  if (*(void *)(v0 + OBJC_IVAR___SNDetectionResult_impl + 88)) {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNDetectionResult_impl + 80);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1DCACD75C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_1DCB87938();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);
}

uint64_t sub_1DCACD7D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t (*SNDetectionResult.detectorIdentifier.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = SNDetectionResult.detectorIdentifier.getter();
  a1[1] = v3;
  return sub_1DCACD864;
}

uint64_t sub_1DCACD864(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return SNDetectionResult.detectorIdentifier.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  SNDetectionResult.detectorIdentifier.setter(v3, v2);

  return swift_bridgeObjectRelease();
}

id sub_1DCACD8D8()
{
  uint64_t v1 = (void *)sub_1DCB87908();
  id v2 = objc_msgSend(v0, sel_initWithIdentifier_, v1);

  return v2;
}

id sub_1DCACD948()
{
  uint64_t v1 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithIdentifier_detectedValue_, v1, 0);

  return v2;
}

id sub_1DCACD9D0()
{
  id v0 = objc_allocWithZone((Class)sub_1DCACF214());
  return sub_1DCACDA10();
}

id sub_1DCACDA10()
{
  sub_1DCACF214();
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = MEMORY[0x1E4F1FA20];
  uint64_t v6 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v7 = &v1[OBJC_IVAR___SNDetectionResult_impl];
  *(void *)uint64_t v7 = *MEMORY[0x1E4F1FA20];
  *((void *)v7 + 1) = *(void *)(v5 + 8);
  *((_OWORD *)v7 + 1) = *(_OWORD *)(v5 + 16);
  *((void *)v7 + 4) = *(void *)(v5 + 32);
  *((void *)v7 + 5) = v6;
  *((void *)v7 + 6) = 0;
  *((void *)v7 + 7) = v3;
  *((void *)v7 + 8) = v2;
  v7[72] = v0;
  *((_OWORD *)v7 + 5) = xmmword_1DCBD9F90;
  v9.receiver = v1;
  v9.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id SNDetectionResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DCACF1C0(v1 + OBJC_IVAR___SNDetectionResult_impl);
  uint64_t v5 = *(void *)(v4 + 64);
  sub_1DCACF160();
  v11[7] = v6;
  v11[8] = v5;
  char v12 = v7;
  uint64_t v13 = v9;
  uint64_t v14 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id result = sub_1DCACD0EC((uint64_t)v11);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNDetectionResult.hash.getter()
{
  sub_1DCACF1C0(v0 + OBJC_IVAR___SNDetectionResult_impl);
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC8C3E44();
  uint64_t v1 = sub_1DCB891F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t SNDetectionResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v28);
  if (v29)
  {
    sub_1DC87E9CC(&v28, v27);
    sub_1DC87E9DC((uint64_t)v27, (uint64_t)v18);
    if (swift_dynamicCast())
    {
      double v3 = v15[0];
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 40);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 48);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 56);
      uint64_t v7 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 64);
      char v8 = *(unsigned char *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 72);
      v18[0] = *(double *)(v1 + OBJC_IVAR___SNDetectionResult_impl);
      v18[1] = *(double *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 8);
      long long v19 = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 16);
      uint64_t v20 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 32);
      uint64_t v21 = v4;
      uint64_t v22 = v5;
      uint64_t v23 = v6;
      uint64_t v24 = v7;
      char v25 = v8;
      long long v26 = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 80);
      sub_1DCACF1C0(*(void *)&v15[0] + OBJC_IVAR___SNDetectionResult_impl);
      sub_1DCACF160();
      v15[7] = v9;
      v15[8] = v10;
      char v16 = v11;
      long long v17 = *(_OWORD *)(v12 + 80);
      char v13 = sub_1DC8C3F8C(v18, v15);
    }
    else
    {
      char v13 = 0;
    }
    sub_1DC8818D0((uint64_t)v27);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t SNDetectionResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNDetectionResult.init(coder:)(a1);
}

uint64_t SNDetectionResult.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
  id v4 = v2;
  uint64_t v5 = sub_1DCB88658();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = (void *)sub_1DCACF188();
    objc_msgSend(a1, sel_decodeDoubleForKey_, v7);

    char v8 = (void *)sub_1DCACF1D0();
    objc_msgSend(a1, sel_decodeBoolForKey_, v8);

    sub_1DC89C89C(0, &qword_1EAAA01C8);
    uint64_t v9 = sub_1DCB88658();
    if (v9)
    {
      double v10 = (void *)v9;
      uint64_t v12 = 0;
      sub_1DCB87928();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  sub_1DC9214CC();
  swift_deallocPartialClassInstance();
  return 0;
}

Swift::Void __swiftcall SNDetectionResult.encode(with:)(NSCoder with)
{
  SNDetectionResult.timeRange.getter((uint64_t)v20);
  uint64_t v3 = v20[0];
  uint64_t v4 = v20[2];
  uint64_t v5 = v20[3];
  uint64_t v6 = v20[5];
  uint64_t v7 = self;
  v19[0] = v3;
  v19[1] = v20[1];
  void v19[2] = v4;
  v19[3] = v5;
  v19[4] = v20[4];
  v19[5] = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v19);
  uint64_t v9 = (void *)sub_1DCB87908();
  sub_1DCACF1F4();

  uint64_t v10 = v1 + OBJC_IVAR___SNDetectionResult_impl;
  double v11 = *(double *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 48);
  uint64_t v12 = (void *)sub_1DCACF188();
  [(objc_class *)with.super.isa encodeDouble:v12 forKey:v11];

  uint64_t v13 = *(unsigned __int8 *)(v10 + 72);
  uint64_t v14 = (void *)sub_1DCACF1D0();
  [(objc_class *)with.super.isa encodeBool:v13 forKey:v14];

  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  char v16 = (void *)sub_1DCB87908();
  sub_1DCACF1F4();

  SNDetectionResult.detectorIdentifier.getter();
  long long v17 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_1DCB87908();
  [(objc_class *)with.super.isa encodeObject:v17 forKey:v18];
}

uint64_t static SNDetectionResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNDetectionResult.description.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1DCB88A98();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.Class super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1DCB87938();

  sub_1DC8FB3A4();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  swift_bridgeObjectRetain();
  sub_1DC8FB3A4();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87FB8();
  sub_1DCB87A18();
  SNDetectionResult.timeRange.getter((uint64_t)&v15);
  uint64_t v3 = v15;
  uint64_t v4 = v17;
  uint64_t v5 = v18;
  uint64_t v6 = v20;
  uint64_t v7 = self;
  v11[0] = v3;
  v11[1] = v16;
  void v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  id v9 = objc_msgSend(v8, sel_description);
  sub_1DCB87938();

  sub_1DC8FB3A4();
  swift_bridgeObjectRelease();
  return v13;
}

id sub_1DCACE5E4()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = sub_1DC9214CC();
  return sub_1DCACE624(v2, v3);
}

id sub_1DCACE624(uint64_t a1, unint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAAA0230);
  uint64_t v6 = v2;
  uint64_t v7 = sub_1DCB884B8();
  unint64_t v14 = (void *)v7;
  if (v7)
  {
    uint64_t v15 = v7 + OBJC_IVAR___SNDetectionResult_impl;
    uint64_t v16 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl);
    uint64_t v17 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 16);
    uint64_t v18 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 48);
    uint64_t v19 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 64);
    uint64_t v30 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 56);
    uint64_t v31 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 40);
    char v29 = *(unsigned char *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 72);
    uint64_t v20 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 88);
    uint64_t v27 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 24);
    uint64_t v28 = *(void *)(v7 + OBJC_IVAR___SNDetectionResult_impl + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = *(void *)(v15 + 8);
    uint64_t v22 = *(void *)(v15 + 32);

    uint64_t v23 = &v6[OBJC_IVAR___SNDetectionResult_impl];
    *(void *)uint64_t v23 = v16;
    *((void *)v23 + 1) = v21;
    *((void *)v23 + 2) = v17;
    *((void *)v23 + 3) = v27;
    *((void *)v23 + 4) = v22;
    *((void *)v23 + 5) = v31;
    *((void *)v23 + 6) = v18;
    *((void *)v23 + 7) = v30;
    *((void *)v23 + 8) = v19;
    v23[72] = v29;
    *((void *)v23 + 10) = v28;
    *((void *)v23 + 11) = v20;
  }
  else
  {
    sub_1DCACEFF0();
    long long v26 = (void *)swift_allocError();
    swift_willThrow();
    sub_1DCAC5F78(0xD000000000000042, 0x80000001DCB9A7B0);
    uint64_t v8 = MEMORY[0x1E4F1FA20];
    uint64_t v9 = *MEMORY[0x1E4F1FA20];
    uint64_t v10 = *(void *)(MEMORY[0x1E4F1FA20] + 16);
    uint64_t v11 = *(void *)(MEMORY[0x1E4F1FA20] + 24);
    uint64_t v12 = *(void *)(MEMORY[0x1E4F1FA20] + 40);

    uint64_t v13 = &v6[OBJC_IVAR___SNDetectionResult_impl];
    *(void *)uint64_t v13 = v9;
    *((void *)v13 + 1) = *(void *)(v8 + 8);
    *((void *)v13 + 2) = v10;
    *((void *)v13 + 3) = v11;
    *((void *)v13 + 4) = *(void *)(v8 + 32);
    *((void *)v13 + 5) = v12;
    *((void *)v13 + 6) = 0;
    *((void *)v13 + 7) = 0;
    *((void *)v13 + 8) = 0xE000000000000000;
    v13[72] = 0;
    *((void *)v13 + 10) = 0;
    *((void *)v13 + 11) = 0;
  }

  v32.receiver = v6;
  v32.Class super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v32, sel_init);
  sub_1DC881920(a1, a2);
  return v24;
}

uint64_t sub_1DCACE890()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v1 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v7);
  id v2 = v7[0];
  if (v1)
  {
    uint64_t v3 = sub_1DCB86AD8();
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = (void *)sub_1DCB86898();

    swift_willThrow();
    sub_1DCAC5F78(0xD00000000000003ELL, 0x80000001DCB9A800);

    return 0;
  }
  return v3;
}

void sub_1DCACEA94(uint64_t *a1@<X8>)
{
  SNDetectionResult.timeRange.getter((uint64_t)&v21);
  CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CMTimeRange range = v21;
  CFDictionaryRef v4 = CMTimeRangeCopyAsDictionary(&range, v3);
  if (!v4) {
    CFDictionaryRef v4 = (CFDictionaryRef)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9E8]), sel_init);
  }
  sub_1DC87E988(&qword_1EAAA0900);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBC1910;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  uint64_t v6 = v1 + OBJC_IVAR___SNDetectionResult_impl;
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 64);
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = *(void *)(v1 + OBJC_IVAR___SNDetectionResult_impl + 56);
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = 0x6E656469666E6F63;
  *(void *)(inited + 88) = 0xEA00000000006563;
  double v9 = *(double *)(v6 + 48);
  id v10 = objc_allocWithZone(NSNumber);
  swift_bridgeObjectRetain();
  id v11 = objc_msgSend(v10, sel_initWithDouble_, v9);
  uint64_t v12 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  *(void *)(inited + 96) = v11;
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 128) = 0x676E6152656D6974;
  *(void *)(inited + 136) = 0xE900000000000065;
  uint64_t v13 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C6F0);
  *(void *)(inited + 144) = v4;
  *(void *)(inited + 168) = v13;
  *(void *)(inited + 176) = 0x6465746365746564;
  *(void *)(inited + 184) = 0xE800000000000000;
  uint64_t v14 = *(unsigned __int8 *)(v6 + 72);
  id v15 = objc_allocWithZone(NSNumber);
  CFDictionaryRef v16 = v4;
  *(void *)(inited + 192) = objc_msgSend(v15, sel_initWithBool_, v14);
  *(void *)(inited + 216) = v12;
  *(void *)(inited + 224) = 0xD000000000000012;
  *(void *)(inited + 232) = 0x80000001DCB917D0;
  uint64_t v17 = SNDetectionResult.detectorIdentifier.getter();
  *(void *)(inited + 264) = v8;
  *(void *)(inited + 240) = v17;
  *(void *)(inited + 248) = v18;
  uint64_t v19 = sub_1DCB877D8();
  a1[3] = sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);

  *a1 = v19;
}

id SNDetectionResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DCACEE0C@<D0>(uint64_t a1@<X8>)
{
  return SNDetectionResult.timeRange.getter(a1);
}

double sub_1DCACEE30(uint64_t a1)
{
  return SNDetectionResult.timeRange.setter(a1);
}

void sub_1DCACEE54()
{
  sub_1DC89D5C0();
  *uint64_t v0 = SNDetectionResult.confidence.getter();
}

void sub_1DCACEE7C(double *a1)
{
}

uint64_t sub_1DCACEEA4()
{
  sub_1DC89D5C0();
  uint64_t result = SNDetectionResult.detected.getter();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_1DCACEED0(unsigned __int8 *a1)
{
  return SNDetectionResult.detected.setter(*a1);
}

uint64_t sub_1DCACEEF8()
{
  sub_1DC89D5C0();
  uint64_t result = SNDetectionResult.identifier.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1DCACEF20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCACD7D4(a1, a2, a3, a4, SNDetectionResult.identifier.setter);
}

uint64_t sub_1DCACEF4C()
{
  sub_1DC89D5C0();
  uint64_t result = SNDetectionResult.detectorIdentifier.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1DCACEF74(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCACD7D4(a1, a2, a3, a4, SNDetectionResult.detectorIdentifier.setter);
}

uint64_t type metadata accessor for SNDetectionResult()
{
  return self;
}

uint64_t method lookup function for SNDetectionResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNDetectionResult);
}

uint64_t dispatch thunk of SNDetectionResult.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_1DCACEFF0()
{
  unint64_t result = qword_1EAAA8940;
  if (!qword_1EAAA8940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8940);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNDetectionResult.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCACF0D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNDetectionResult.DomainError()
{
  return &type metadata for SNDetectionResult.DomainError;
}

unint64_t sub_1DCACF114()
{
  unint64_t result = qword_1EAAA8948[0];
  if (!qword_1EAAA8948[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA8948);
  }
  return result;
}

uint64_t sub_1DCACF188()
{
  return sub_1DCB87908();
}

uint64_t sub_1DCACF1B8()
{
  return swift_bridgeObjectRelease();
}

double sub_1DCACF1C0@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 48);
}

uint64_t sub_1DCACF1D0()
{
  return sub_1DCB87908();
}

id sub_1DCACF1F4()
{
  return objc_msgSend(v0, (SEL)(v3 + 2501), v1, v2);
}

uint64_t sub_1DCACF214()
{
  return v0;
}

uint64_t type metadata accessor for UnsafeOutputNode()
{
  return self;
}

uint64_t sub_1DCACF24C()
{
  uint64_t result = type metadata accessor for Future.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCACF2F0()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for Future.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1DCACF380()
{
  sub_1DCACF2F0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Future()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for Future.State()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCACF408()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1DCACF4A4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v5) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return v3;
}

uint64_t sub_1DCACF620(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

void *sub_1DCACF720(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1DCACF85C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_bridgeObjectRelease();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[v7] = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

void *sub_1DCACFA78(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1DCACFBB0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_bridgeObjectRelease();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1DCACFDC8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1DCACFEFC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1DCAD00C0);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1DCAD00E8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1DCAD01A0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

unsigned char *sub_1DCAD0278(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCAD0314);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for Future.DomainError()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAD0354()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAD0370()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCAD0404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  int v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 32);
  long long v13 = *(_OWORD *)(v8 + 16);
  long long v14 = v13;
  uint64_t v15 = v10;
  uint64_t v16 = v9;
  uint64_t v17 = v11;
  type metadata accessor for SplitStreamResult.Inner();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a3);
  *(void *)&long long v14 = sub_1DCAD0550((uint64_t)v7);
  swift_getWitnessTable();
  sub_1DCB87388();
  return swift_release();
}

uint64_t sub_1DCAD0550(uint64_t a1)
{
  return sub_1DCAD058C(a1);
}

uint64_t sub_1DCAD058C(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 96) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 120), a1);
  return v1;
}

uint64_t sub_1DCAD0600()
{
  return sub_1DCB871A8();
}

uint64_t sub_1DCAD0668(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v16 - v5;
  uint64_t v7 = type metadata accessor for StreamResult();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)&v16 - v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - v8, a1, v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      id v17 = *v9;
      id v12 = v17;
      id v13 = v17;
      sub_1DCB87198();

      uint64_t v14 = sub_1DCB87208();
    }
    else
    {
      id v17 = 0;
      sub_1DCB87198();
      return sub_1DCB87208();
    }
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v4 + 32))(v6, v9, v3);
    uint64_t v14 = sub_1DCB871B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v14;
}

uint64_t sub_1DCAD08F0(uint64_t a1)
{
  uint64_t v29 = *v1;
  uint64_t v28 = *(void *)(v29 + 96);
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v27 = (char *)&v25 - v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v25 - v10;
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_1DCB871D8();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v25 - v13;
  (*(void (**)(char *, uint64_t))(v15 + 16))((char *)&v25 - v13, a1);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v30 = 0;
    return sub_1DCB87198();
  }
  else
  {
    long long v26 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v26(v11, v14, AssociatedTypeWitness);
    uint64_t v17 = (uint64_t)v1 + *(void *)(*v1 + 120);
    char v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v19 = v27;
    uint64_t v20 = v3;
    uint64_t v21 = v28;
    v18(v27, v17, v28);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, AssociatedTypeWitness);
    uint64_t v22 = sub_1DCB88FE8();
    if (v22)
    {
      uint64_t v23 = (void *)v22;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, AssociatedTypeWitness);
    }
    else
    {
      uint64_t v23 = (void *)swift_allocError();
      v26(v24, v9, AssociatedTypeWitness);
    }
    uint64_t v30 = v23;
    sub_1DCB87198();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, AssociatedTypeWitness);
  }
}

uint64_t sub_1DCAD0CFC()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 96) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 120));
  return v0;
}

uint64_t sub_1DCAD0D6C()
{
  sub_1DCAD0CFC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SplitStreamResult.Inner()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAD0DD8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1DCAD0E6C(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(char **)a2;
    *(void *)uint64_t v3 = *(void *)a2;
    uint64_t v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *(void *)a2;
      id v15 = *(id *)a2;
      *(void *)uint64_t v3 = v14;
      v3[v5] = 1;
    }
    else if (v9)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(__dst);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_1DCAD1008(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1)
  {
  }
  else if (!v3)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

unsigned char *sub_1DCAD1110(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *(void *)a2;
    id v11 = *(id *)a2;
    *(void *)__dst = v10;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1DCAD126C(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    char v9 = 8 * v7;
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << v9)) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << v9)) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      id v19 = *__src;
      id v20 = v19;
      *__dst = v19;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

unsigned char *sub_1DCAD14A4(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1DCAD15F0(id *__dst, id *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)__dst + v7);
    char v9 = 8 * v7;
    unsigned int v10 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v11 = v7;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *(unsigned __int8 *)__dst;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)__dst;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)__dst;
LABEL_14:
          int v13 = (v12 | (v10 << v9)) + 2;
          unsigned int v8 = v12 + 2;
          if (v7 < 4) {
            unsigned int v8 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
    }
    else if (!v8)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v14 = *((unsigned __int8 *)__src + v7);
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *(unsigned __int8 *)__src;
          goto LABEL_29;
        case 2:
          int v17 = *(unsigned __int16 *)__src;
          goto LABEL_29;
        case 3:
          int v17 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_29;
        case 4:
          int v17 = *(_DWORD *)__src;
LABEL_29:
          int v18 = (v17 | (v15 << v9)) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      *__dst = *__src;
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((unsigned char *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_1DCAD1820(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1DCAD1954(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1DCAD1B18);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1DCAD1B40(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t type metadata accessor for StreamResult()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAD1C10()
{
  return sub_1DCAD0600();
}

uint64_t sub_1DCAD1C34(uint64_t a1)
{
  return sub_1DCAD0668(a1);
}

uint64_t sub_1DCAD1C58(uint64_t a1)
{
  return sub_1DCAD08F0(a1);
}

uint64_t sub_1DCAD1C7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAD1C98()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DCAD1CB8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCAD1D48(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1DCAD1E94(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DCAD2098);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for SplitStreamResult()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAD20D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAD0404(a1, a4, a2);
}

uint64_t sub_1DCAD20EC(void *a1, uint64_t a2)
{
  uint64_t v33 = a2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v32 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v34 = a2;
  swift_bridgeObjectRetain();
  int64_t v35 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v8 = v7 | (v35 << 6);
  while (1)
  {
    unsigned int v13 = (uint64_t *)(*(void *)(v34 + 48) + 16 * v8);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    int v16 = (uint64_t *)(*(void *)(v34 + 56) + 16 * v8);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = sub_1DC9637DC(v15, v14);
    if (__OFADD__(a1[2], (v20 & 1) == 0))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    unint64_t v21 = v19;
    char v22 = v20;
    sub_1DC87E988(&qword_1EAA9C698);
    if (sub_1DCB88C28())
    {
      unint64_t v23 = sub_1DC9637DC(v15, v14);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_35;
      }
      unint64_t v21 = v23;
    }
    if (v22)
    {
      uint64_t v25 = (void *)(a1[7] + 16 * v21);
      swift_bridgeObjectRelease();
      *uint64_t v25 = v17;
      v25[1] = v18;
    }
    else
    {
      a1[(v21 >> 6) + 8] |= 1 << v21;
      long long v26 = (uint64_t *)(a1[6] + 16 * v21);
      uint64_t *v26 = v15;
      v26[1] = v14;
      uint64_t v27 = (void *)(a1[7] + 16 * v21);
      *uint64_t v27 = v17;
      v27[1] = v18;
      uint64_t v28 = a1[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_32;
      }
      a1[2] = v30;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v9 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      goto LABEL_33;
    }
    if (v9 >= v32) {
      goto LABEL_30;
    }
    unint64_t v10 = *(void *)(v33 + 8 * v9);
    int64_t v11 = v35 + 1;
    if (!v10)
    {
      int64_t v11 = v35 + 2;
      if (v35 + 2 >= v32) {
        goto LABEL_30;
      }
      unint64_t v10 = *(void *)(v33 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v35 + 3;
        if (v35 + 3 >= v32) {
          goto LABEL_30;
        }
        unint64_t v10 = *(void *)(v33 + 8 * v11);
        if (!v10) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v6 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v35 = v11;
  }
  int64_t v12 = v35 + 4;
  if (v35 + 4 >= v32)
  {
LABEL_30:
    sub_1DC964348();
    return (uint64_t)a1;
  }
  unint64_t v10 = *(void *)(v33 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v35 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_30;
    }
    unint64_t v10 = *(void *)(v33 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_19;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_1DCB890E8();
  __break(1u);
  return result;
}

uint64_t sub_1DCAD23D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v26[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1DCB87978();
  MEMORY[0x1F4188790](v6 - 8);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29038]), sel_init);
  unint64_t v8 = (void *)sub_1DCB86948();
  objc_msgSend(v7, sel_setExecutableURL_, v8);

  sub_1DCAD284C(a2, v7);
  if (a3)
  {
    uint64_t v9 = a3;
  }
  else
  {
    uint64_t v10 = sub_1DCB877D8();
    id v11 = objc_msgSend(self, sel_processInfo);
    id v12 = objc_msgSend(v11, sel_environment);

    uint64_t v3 = (void *)sub_1DCB877B8();
    uint64_t v9 = sub_1DCAD20EC(v3, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1DCAD28AC(v9, v7);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F48]), sel_init);
  objc_msgSend(v7, sel_setStandardOutput_, v13);
  v26[0] = 0;
  if (!objc_msgSend(v7, sel_launchAndReturnError_, v26))
  {
    id v25 = v26[0];
    sub_1DCB86898();

    swift_willThrow();
    id v7 = v13;
    goto LABEL_9;
  }
  id v14 = v26[0];
  objc_msgSend(v7, sel_waitUntilExit);
  id v15 = objc_msgSend(v13, sel_fileHandleForReading);
  id v16 = objc_msgSend(v15, sel_readDataToEndOfFile);

  uint64_t v17 = sub_1DCB86AD8();
  unint64_t v19 = v18;

  id v20 = objc_msgSend(v13, sel_fileHandleForReading);
  objc_msgSend(v20, sel_closeFile);

  sub_1DCB87968();
  uint64_t result = sub_1DCB87948();
  if (v22)
  {
    uint64_t v3 = (void *)result;
    if (!objc_msgSend(v7, sel_terminationStatus))
    {
      sub_1DC881920(v17, v19);

      return (uint64_t)v3;
    }
    swift_bridgeObjectRelease();
    uint64_t v23 = (int)objc_msgSend(v7, sel_terminationStatus);
    sub_1DCAD2924();
    swift_allocError();
    *char v24 = v23;
    swift_willThrow();

    sub_1DC881920(v17, v19);
LABEL_9:

    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCAD2764()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DCAD2798()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAD27EC()
{
  return sub_1DCAD2798();
}

uint64_t sub_1DCAD27F4()
{
  return sub_1DCAD2764();
}

uint64_t sub_1DCAD27FC()
{
  return sub_1DCB891F8();
}

void sub_1DCAD284C(uint64_t a1, void *a2)
{
  id v3 = (id)sub_1DCB87C08();
  objc_msgSend(a2, sel_setArguments_, v3);
}

void sub_1DCAD28AC(uint64_t a1, void *a2)
{
  id v3 = (id)sub_1DCB87788();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setEnvironment_, v3);
}

unint64_t sub_1DCAD2924()
{
  unint64_t result = qword_1EAAA8C50;
  if (!qword_1EAAA8C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA8C50);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcUtils.DomainError()
{
  return &type metadata for ProcUtils.DomainError;
}

unint64_t sub_1DCAD2984()
{
  unint64_t result = qword_1EAAA8C58[0];
  if (!qword_1EAAA8C58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA8C58);
  }
  return result;
}

uint64_t sub_1DCAD29D0(void *a1, uint64_t a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  v9[0] = 0;
  unsigned __int8 v4 = objc_msgSend(a1, sel_setActive_withOptions_error_, 1, a2, v9);
  id v5 = v9[0];
  if (v4)
  {
    *(void *)(v2 + 16) = a1;
    id v6 = v5;
  }
  else
  {
    id v7 = v9[0];
    sub_1DCB86898();

    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

uint64_t sub_1DCAD2AD0()
{
  uint64_t v1 = v0;
  v16[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void **)(v0 + 16);
  v16[0] = 0;
  if (objc_msgSend(v2, sel_setActive_error_, 0, v16))
  {
    id v3 = v16[0];
  }
  else
  {
    id v4 = v16[0];
    id v5 = (void *)sub_1DCB86898();

    swift_willThrow();
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1DCB86FE8();
    sub_1DC89F57C(v6, (uint64_t)qword_1EAAFF810);
    id v7 = v5;
    id v8 = v5;
    uint64_t v9 = sub_1DCB86FC8();
    os_log_type_t v10 = sub_1DCB88468();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      id v12 = (void *)swift_slowAlloc();
      *(_DWORD *)id v11 = 138412290;
      id v13 = v5;
      id v14 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v16[0] = v14;
      sub_1DCB88778();
      *id v12 = v14;

      _os_log_impl(&dword_1DC873000, v9, v10, "Failed to deactivate audio session: %@", v11, 0xCu);
      sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
      swift_arrayDestroy();
      MEMORY[0x1E01A99C0](v12, -1, -1);
      MEMORY[0x1E01A99C0](v11, -1, -1);
    }
    else
    {
    }
  }

  return v1;
}

uint64_t sub_1DCAD2D1C()
{
  sub_1DCAD2AD0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionActivation()
{
  return self;
}

id sub_1DCAD2D74()
{
  unsigned int v1 = objc_msgSend(v0, sel_decoupledIO);
  uint64_t v2 = &selRef_inputSampleRate;
  if (!v1) {
    uint64_t v2 = &selRef_sampleRate;
  }
  return [v0 *v2];
}

uint64_t sub_1DCAD2DD0()
{
  return sub_1DCAD32A0((uint64_t (*)(uint64_t))sub_1DC9AFE10, (uint64_t (*)(uint64_t))sub_1DC884350, (void (*)(uint64_t))type metadata accessor for XPCEncoder.SingleValueContainer);
}

uint64_t sub_1DCAD2E10(void *a1)
{
  type metadata accessor for XPCDataEncoder();
  uint64_t v3 = sub_1DC886810();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = *(void *)(v4 + 40);
  type metadata accessor for XPCProxyEncoder();
  id v7 = (void *)swift_allocObject();
  id v7[2] = 0;
  v7[3] = 0;
  v7[4] = v5;
  v7[5] = v6;
  type metadata accessor for XPCEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = sub_1DC886810();
  *(void *)(v10 + 16) = sub_1DCAD36D4;
  *(void *)(v10 + 24) = v3;
  sub_1DCAD36EC();
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    uint64_t v12 = *(void *)(v9 + 24);
    sub_1DC884E74();
    uint64_t v13 = swift_allocError();
    sub_1DCAD370C(v13, v14);
    swift_retain();
    swift_retain();
    swift_willThrow();
    *(void *)(v9 + 16) = v11;
    *(void *)(v9 + 24) = v12;
LABEL_5:
    swift_endAccess();
    swift_release();
    swift_setDeallocating();
    sub_1DC978D10();
    sub_1DC996984();
    return swift_release();
  }
  uint64_t v15 = sub_1DC886810();
  *(void *)(v15 + 16) = sub_1DCAD363C;
  *(void *)(v15 + 24) = v10;
  *(void *)(v9 + 16) = sub_1DC9B02BC;
  *(void *)(v9 + 24) = v15;
  swift_endAccess();
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = *(void *)(inited + 24);
  uint64_t v18 = sub_1DC886810();
  *(void *)(v18 + 16) = sub_1DCAD3658;
  *(void *)(v18 + 24) = v17;
  sub_1DCAD36EC();
  uint64_t v19 = *(void *)(v16 + 16);
  if (v19)
  {
    uint64_t v20 = *(void *)(v16 + 24);
    sub_1DC884E74();
    uint64_t v21 = swift_allocError();
    sub_1DCAD370C(v21, v22);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_willThrow();
    *(void *)(v16 + 16) = v19;
    *(void *)(v16 + 24) = v20;
    goto LABEL_5;
  }
  uint64_t v24 = sub_1DC886810();
  *(void *)(v24 + 16) = sub_1DCAD3674;
  *(void *)(v24 + 24) = v18;
  *(void *)(v16 + 16) = sub_1DC884E58;
  *(void *)(v16 + 24) = v24;
  swift_endAccess();
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  sub_1DC881A8C(a1, v25);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v27(inited, v25, v26);
  swift_setDeallocating();
  sub_1DC978D10();
  return sub_1DC996984();
}

uint64_t sub_1DCAD30C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  type metadata accessor for XPCDataEncoder();
  uint64_t v11 = sub_1DC886810();
  type metadata accessor for XPCProxyEncoder();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  type metadata accessor for XPCEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v11;
  *(void *)(inited + 24) = v12;
  id v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  v14(inited, a3, a4);
  if (v5) {
    return swift_release();
  }
  swift_retain();
  uint64_t v15 = sub_1DC883F24();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  swift_release();
  swift_retain();
  uint64_t v22 = sub_1DC9AFA20();
  uint64_t v25 = v23;
  swift_release();
  swift_setDeallocating();
  sub_1DC978D10();
  uint64_t result = sub_1DC996984();
  *a5 = v22;
  a5[1] = v25;
  a5[2] = v15;
  a5[3] = v17;
  a5[4] = v19;
  a5[5] = v21;
  return result;
}

uint64_t sub_1DCAD3260()
{
  return sub_1DCAD32A0((uint64_t (*)(uint64_t))sub_1DC9AFAAC, (uint64_t (*)(uint64_t))sub_1DC883FB8, (void (*)(uint64_t))type metadata accessor for XPCEncoder.UnkeyedContainer);
}

uint64_t sub_1DCAD32A0(uint64_t (*a1)(uint64_t), uint64_t (*a2)(uint64_t), void (*a3)(uint64_t))
{
  uint64_t v6 = swift_retain();
  uint64_t v7 = a1(v6);
  swift_release();
  uint64_t v8 = swift_retain();
  uint64_t v9 = a2(v8);
  uint64_t v10 = swift_release();
  a3(v10);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v7;
  *(void *)(result + 24) = v9;
  return result;
}

uint64_t sub_1DCAD3334(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for XPCDataEncoder();
  uint64_t v4 = sub_1DC886810();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v5 + 32);
  type metadata accessor for XPCProxyEncoder();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  v8[5] = v7;
  type metadata accessor for XPCEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v8;
  uint64_t v10 = *(void *)(v2 + 16);
  uint64_t v11 = sub_1DC886810();
  *(void *)(v11 + 16) = sub_1DC9B04EC;
  *(void *)(v11 + 24) = v4;
  sub_1DCAD372C();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DC9B45B8();
  uint64_t v12 = *(void *)(*(void *)(v10 + 16) + 16);
  sub_1DC9B46C0(v12);
  uint64_t v13 = *(void *)(v10 + 16);
  *(void *)(v13 + 16) = v12 + 1;
  uint64_t v14 = v13 + 16 * v12;
  *(void *)(v14 + 32) = sub_1DCAD36A4;
  *(void *)(v14 + 40) = v11;
  swift_endAccess();
  swift_release();
  uint64_t v15 = *(void *)(v2 + 24);
  uint64_t v16 = *(void *)(inited + 24);
  uint64_t v17 = sub_1DC886810();
  *(void *)(v17 + 16) = sub_1DCAD3658;
  *(void *)(v17 + 24) = v16;
  sub_1DCAD372C();
  swift_retain();
  swift_retain();
  sub_1DC9B4570();
  uint64_t v18 = *(void *)(*(void *)(v15 + 16) + 16);
  sub_1DC9B4674(v18);
  uint64_t v19 = *(void *)(v15 + 16);
  *(void *)(v19 + 16) = v18 + 1;
  uint64_t v20 = v19 + 16 * v18;
  *(void *)(v20 + 32) = sub_1DCAD36BC;
  *(void *)(v20 + 40) = v17;
  swift_endAccess();
  swift_release();
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  sub_1DC881A8C(a1, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 8))(inited, v21, v22);
  swift_setDeallocating();
  sub_1DC978D10();
  return sub_1DC996984();
}

uint64_t sub_1DCAD3548()
{
  uint64_t result = sub_1DC883F24();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t type metadata accessor for XPCEncoder()
{
  return self;
}

uint64_t type metadata accessor for XPCEncoder.KeyedContainer()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for XPCEncoder.UnkeyedContainer()
{
  return self;
}

uint64_t type metadata accessor for XPCEncoder.SingleValueContainer()
{
  return self;
}

uint64_t sub_1DCAD3604()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCAD363C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9AFA38(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1DCAD3658()
{
  return sub_1DCAD3548();
}

uint64_t sub_1DCAD3674@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC883F3C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1DCAD36A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCAD363C(a1);
}

uint64_t sub_1DCAD36BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCAD3674(a1);
}

uint64_t sub_1DCAD36D4()
{
  return sub_1DC9B04EC();
}

uint64_t sub_1DCAD36EC()
{
  return swift_beginAccess();
}

uint64_t sub_1DCAD370C(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return swift_retain();
}

uint64_t sub_1DCAD372C()
{
  return swift_beginAccess();
}

void sub_1DCAD374C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void **)(v3 + 24);
  if (v5)
  {
    id v9 = v5;
    unsigned int v10 = objc_msgSend(a1, sel_frameLength);
    objc_msgSend(*(id *)(v4 + 16), sel_sampleRate);
    if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
    {
      if (v11 > -2147483650.0)
      {
        if (v11 < 2147483650.0)
        {
          CMTimeMake(&v23.start, v10, (int)v11);
          CMTimeValue v12 = *(void *)(v4 + 32);
          CMTimeEpoch v13 = *(void *)(v4 + 48);
          duration.CMTimeEpoch epoch = v23.start.epoch;
          start.int64_t value = v12;
          *(void *)&start.timescale = *(void *)(v4 + 40);
          start.CMTimeEpoch epoch = v13;
          duration.int64_t value = v23.start.value;
          *(void *)&duration.timescale = *(void *)&v23.start.timescale;
          CMTimeRangeMake(&v23, &start, &duration);
          type metadata accessor for SNAudioFileUtils();
          uint64_t v14 = *(void *)(v4 + 32);
          uint64_t v15 = swift_allocObject();
          *(void *)(v15 + 16) = a2;
          *(void *)(v15 + 24) = a3;
          swift_retain();
          uint64_t v16 = sub_1DCABB664(v9, (uint64_t)&v23, v14, v10, 0, (uint64_t (*)(void *, id *))sub_1DCAD3B78, v15);
          uint64_t v18 = v17;
          uint64_t v20 = v19;
          swift_release();

          *(void *)(v4 + 32) = v16;
          *(void *)(v4 + 40) = v18;
          *(void *)(v4 + 48) = v20;
          return;
        }
LABEL_9:
        __break(1u);
        swift_unexpectedError();
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

void *sub_1DCAD3938(uint64_t a1, void *a2)
{
  v2[2] = a2;
  v2[3] = 0;
  id v5 = a2;
  uint64_t result = objc_msgSend(v5, sel_sampleRate);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v7 <= -2147483650.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v7 >= 2147483650.0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  CMTimeMake(&v15, 0, (int)v7);
  CMTimeEpoch epoch = v15.epoch;
  uint64_t v9 = *(void *)&v15.timescale;
  v2[4] = v15.value;
  v2[5] = v9;
  v2[6] = epoch;
  type metadata accessor for SNAudioFileUtils();
  id v10 = sub_1DCAB9928(a1, v5);
  if (v3)
  {
    swift_release();

    sub_1DCB86A18();
    sub_1DCA786BC();
    (*(void (**)(uint64_t))(v11 + 8))(a1);
  }
  else
  {
    id v12 = v10;

    sub_1DCB86A18();
    sub_1DCA786BC();
    (*(void (**)(uint64_t))(v13 + 8))(a1);
    uint64_t v14 = (void *)v2[3];
    v2[3] = v12;
  }
  return v2;
}

uint64_t sub_1DCAD3A9C()
{
  uint64_t v1 = (void *)MEMORY[0x1E01A8D20]();
  uint64_t v2 = *(void **)(v0 + 24);
  *(void *)(v0 + 24) = 0;

  return v0;
}

uint64_t sub_1DCAD3AE8()
{
  sub_1DCAD3A9C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNFileInjectOperator()
{
  return self;
}

uint64_t sub_1DCAD3B40()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCAD3B78()
{
  (*(void (**)(void))(v0 + 16))();
  return 1;
}

uint64_t sub_1DCAD3BA4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, uint64_t a8)
{
  if ((a4 & 0x8000000000000000) != 0 || HIDWORD(a4) || (unint64_t v8 = *a6, (v8 & 0x8000000000000000) != 0) || HIDWORD(v8))
  {
    sub_1DC8AF148();
    uint64_t result = sub_1DCB88C58();
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t)sub_1DCB61D00(a2, a3, a4, a5, a1, v8, a7, a8);
    if (!result)
    {
      sub_1DC987224();
      swift_allocError();
      *id v10 = 0;
      return swift_willThrow();
    }
  }
  return result;
}

void *sub_1DCAD3CA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DCB6175C(a1);
  if (result)
  {
    id v5 = result;
    unsigned int v6 = sub_1DCB5B768((uint64_t)result, 0);

    sub_1DCB5F5A0((uint64_t)a1);
    *a2 = a1;
    a2[1] = v6;
    return a1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCAD3D20(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1DCAD3D48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

unsigned char *storeEnumTagSinglePayload for DSPGraphError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAD3E3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DSPGraphError()
{
  return &type metadata for DSPGraphError;
}

unint64_t sub_1DCAD3E78()
{
  unint64_t result = qword_1EAAA8CE0[0];
  if (!qword_1EAAA8CE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA8CE0);
  }
  return result;
}

uint64_t sub_1DCAD3EC4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCAD3F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1DCAD3FC8(a1, a2, a3);
  return v6;
}

uint64_t *sub_1DCAD3FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  *((_OWORD *)v3 + 2) = 0u;
  v3[6] = 0;
  *((_OWORD *)v3 + 1) = 0u;
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  swift_beginAccess();
  sub_1DC9046E8((uint64_t)v10, (uint64_t)(v3 + 2));
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v7 + 96) - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 128), a1);
  unint64_t v8 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 136));
  *unint64_t v8 = a2;
  v8[1] = a3;
  return v3;
}

uint64_t sub_1DCAD40C8(uint64_t a1)
{
  uint64_t v2 = *v1;
  sub_1DC8B9960(a1, (uint64_t)v4);
  swift_beginAccess();
  sub_1DC9046E8((uint64_t)v4, (uint64_t)(v1 + 2));
  swift_endAccess();
  v4[3] = v2;
  _OWORD v4[4] = swift_getWitnessTable();
  v4[0] = v1;
  swift_retain();
  sub_1DCB871A8();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DCAD41E8()
{
  return sub_1DCB871B8();
}

uint64_t sub_1DCAD4250(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_1DCB871D8();
  sub_1DC88D538();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(uint64_t))((char *)v1 + *(void *)(v3 + 136)))(a1);
  sub_1DCB87198();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_1DCAD43B4()
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(v0 + 40))
  {
    sub_1DC8B9960(v0 + 16, (uint64_t)v2);
    sub_1DC881A8C(v2, v2[3]);
    sub_1DCB87248();
    return sub_1DC8818D0((uint64_t)v2);
  }
  return result;
}

uint64_t sub_1DCAD443C()
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(v0 + 40))
  {
    sub_1DC8B9960(v0 + 16, (uint64_t)v2);
    sub_1DC881A8C(v2, v2[3]);
    sub_1DCB871C8();
    return sub_1DC8818D0((uint64_t)v2);
  }
  return result;
}

uint64_t *sub_1DCAD44B4()
{
  uint64_t v1 = *v0;
  sub_1DC904960((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 128));
  swift_release();
  return v0;
}

uint64_t sub_1DCAD4554()
{
  sub_1DCAD44B4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MapCompletion.Instance()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAD45C4(uint64_t a1)
{
  return sub_1DCAD40C8(a1);
}

uint64_t sub_1DCAD45E8()
{
  return sub_1DCAD41E8();
}

uint64_t sub_1DCAD460C(uint64_t a1)
{
  return sub_1DCAD4250(a1);
}

uint64_t sub_1DCAD4630()
{
  return sub_1DCAD43B4();
}

uint64_t sub_1DCAD4654()
{
  return sub_1DCAD443C();
}

uint64_t sub_1DCAD4678()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAD4694()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAD46B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCAD474C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCAD4888);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DCAD489C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1DCAD4A6CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for MapCompletion()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAD4AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1DC88D538();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 32);
  long long v21 = *(_OWORD *)(v13 + 16);
  long long v22 = v21;
  uint64_t v23 = v15;
  uint64_t v24 = v14;
  uint64_t v25 = v16;
  type metadata accessor for MapCompletion.Instance();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  unint64_t v17 = (uint64_t *)(v4 + *(int *)(a2 + 52));
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  swift_retain();
  *(void *)&long long v22 = sub_1DCAD3F70((uint64_t)v12, v18, v19);
  swift_getWitnessTable();
  sub_1DCB87388();
  return swift_release();
}

uint64_t sub_1DCAD4BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAD4AAC(a1, a4, a2);
}

uint64_t sub_1DCAD4C08()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCAD4CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBC430];
  uint64_t v3 = sub_1DCB89228();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1DCAD4D54()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAD4D94(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 + 24);
  v16[0] = *(void *)(v11 + 16);
  v16[1] = v13;
  id v16[2] = v12;
  v16[3] = v14;
  type metadata accessor for CollectByCountWithStride.Inner();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  v16[0] = sub_1DCAD4EF4((uint64_t)v10, *(void *)(v4 + a2[9]), *(void *)(v4 + a2[10]), *(unsigned char *)(v4 + a2[11]));
  swift_getWitnessTable();
  sub_1DCB87518();
  return swift_release();
}

uint64_t *sub_1DCAD4EF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  swift_allocObject();
  return sub_1DCAD5380(a1, a2, a3, v7);
}

uint64_t sub_1DCAD4F58()
{
  return 0x427463656C6C6F43;
}

void sub_1DCAD4F7C()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = sub_1DCB89228();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DC87E988(qword_1EAAA8F68);
  MEMORY[0x1F4188790](v5 - 8);
  char v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(v0 + *(void *)(v1 + 184)) + 16));
  uint64_t v22 = v0;
  sub_1DC87E988(&qword_1EAAA0900);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DCBC1910;
  *(void *)(v8 + 32) = 0x657274736E776F64;
  *(void *)(v8 + 40) = 0xEA00000000006D61;
  uint64_t v9 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v10 = *(void *)(v1 + 88);
  *(void *)(v8 + 72) = v10;
  uint64_t v11 = sub_1DC8EF6AC((uint64_t *)(v8 + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v11, v9, v10);
  *(void *)(v8 + 80) = 0xD000000000000014;
  *(void *)(v8 + 88) = 0x80000001DCB9AA80;
  uint64_t v12 = v0 + *(void *)(*(void *)v0 + 160);
  swift_beginAccess();
  *(void *)(v8 + 120) = sub_1DC87E988(qword_1EAA9FC18);
  uint64_t v13 = swift_allocObject();
  *(void *)(v8 + 96) = v13;
  sub_1DC9048F8(v12, v13 + 16);
  *(void *)(v8 + 128) = 0x726566667562;
  *(void *)(v8 + 136) = 0xE600000000000000;
  uint64_t v14 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 152));
  swift_beginAccess();
  uint64_t v15 = *v14;
  swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1DCB87D78();
  *(void *)(v8 + 144) = v15;
  *(void *)(v8 + 168) = v16;
  *(void *)(v8 + 176) = 0x746E756F63;
  *(void *)(v8 + 184) = 0xE500000000000000;
  uint64_t v17 = *(void *)v0;
  uint64_t v18 = MEMORY[0x1E4FBB550];
  *(void *)(v8 + 192) = *(void *)(v0 + *(void *)(*(void *)v0 + 120));
  *(void *)(v8 + 216) = v18;
  *(void *)(v8 + 224) = 0x656469727473;
  *(void *)(v8 + 232) = 0xE600000000000000;
  uint64_t v19 = *(void *)(v0 + *(void *)(v17 + 128));
  *(void *)(v8 + 264) = v18;
  *(void *)(v8 + 240) = v19;
  uint64_t v20 = sub_1DCB89218();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v7, 1, 1, v20);
  sub_1DCAD4CE0((uint64_t)v4);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DCB89258();
  sub_1DCAD532C(v0);
}

void sub_1DCAD532C(uint64_t a1)
{
}

void sub_1DCAD534C(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
  strcpy((char *)a1, "CollectByCount");
  *(unsigned char *)(a1 + 15) = -18;
}

uint64_t *sub_1DCAD5380(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = *v4;
  *((unsigned char *)v4 + *(void *)(*v4 + 144)) = 0;
  uint64_t v9 = *(void *)(*v4 + 152);
  char v10 = a4 & 1;
  swift_getAssociatedTypeWitness();
  *(uint64_t *)((char *)v4 + v9) = sub_1DCB87CD8();
  uint64_t v11 = (uint64_t)v4 + *(void *)(*v4 + 160);
  *(void *)(v11 + 32) = 0;
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *((unsigned char *)v4 + *(void *)(*v4 + 168)) = 0;
  *((unsigned char *)v4 + *(void *)(*v4 + 176)) = 0;
  uint64_t v12 = *(void *)(*v4 + 184);
  type metadata accessor for SafeLock();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = (_DWORD *)swift_slowAlloc();
  *uint64_t v14 = 0;
  *(void *)(v13 + 16) = v14;
  *(uint64_t *)((char *)v4 + v12) = v13;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v8 + 88) - 8) + 32))((uint64_t)v4 + *(void *)(*v4 + 112), a1);
  *(uint64_t *)((char *)v4 + *(void *)(*v4 + 120)) = a2;
  *(uint64_t *)((char *)v4 + *(void *)(*v4 + 128)) = a3;
  *((unsigned char *)v4 + *(void *)(*v4 + 136)) = v10;
  return v4;
}

void sub_1DCAD5580(uint64_t a1)
{
  sub_1DCB87218();
  if ((sub_1DCB871F8() & 1) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (a1)
    {
      goto LABEL_4;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_4:
  uint64_t v3 = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 160);
  swift_beginAccess();
  sub_1DC9048F8(v4, (uint64_t)&v7);
  if (!v8)
  {
    sub_1DC904960((uint64_t)&v7);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    return;
  }
  sub_1DC8BA1CC(&v7, (uint64_t)v9);
  sub_1DCB87218();
  if ((sub_1DCB871F8() & 1) == 0)
  {
    uint64_t v5 = *v1;
    uint64_t v6 = *(void *)(*v1 + 144);
    if (*((unsigned char *)v1 + v6) == 1)
    {
      uint64_t v5 = *(void *)(v5 + 128);
      if ((*(uint64_t *)((char *)v1 + v5) & 0x8000000000000000) == 0)
      {
LABEL_12:
        *((unsigned char *)v1 + v6) = 1;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
        sub_1DC881A8C(v9, v10);
        goto LABEL_13;
      }
      __break(1u);
    }
    if ((*(uint64_t *)((char *)v1 + *(void *)(v5 + 120)) & 0x8000000000000000) == 0) {
      goto LABEL_12;
    }
LABEL_17:
    __break(1u);
    return;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  sub_1DC881A8C(v9, v10);
  sub_1DCB87218();
LABEL_13:
  sub_1DCB87248();
  sub_1DC8818D0((uint64_t)v9);
}

void sub_1DCAD573C()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 160);
  swift_beginAccess();
  sub_1DC9048F8(v2, (uint64_t)&v5);
  if (*((void *)&v6 + 1))
  {
    sub_1DC8BA1CC(&v5, (uint64_t)v8);
    swift_getAssociatedTypeWitness();
    uint64_t v3 = sub_1DCB87CD8();
    uint64_t v4 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 152));
    swift_beginAccess();
    *uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    long long v5 = 0u;
    long long v6 = 0u;
    swift_beginAccess();
    sub_1DC9046E8((uint64_t)&v5, v2);
    swift_endAccess();
    *(unsigned char *)(v0 + *(void *)(*(void *)v0 + 168)) = 1;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
    sub_1DC881A8C(v8, v8[3]);
    sub_1DCB871C8();
    sub_1DC8818D0((uint64_t)v8);
  }
  else
  {
    sub_1DC904960((uint64_t)&v5);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  }
}

uint64_t sub_1DCAD5904(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  if ((*((unsigned char *)v1 + *(void *)(*v1 + 168)) & 1) != 0
    || (uint64_t v5 = (uint64_t)v1 + *(void *)(*v1 + 160),
        swift_beginAccess(),
        sub_1DC9048F8(v5, (uint64_t)v8),
        uint64_t v6 = v9,
        sub_1DC904960((uint64_t)v8),
        v6))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    sub_1DC881A8C(a1, a1[3]);
    return sub_1DCB871C8();
  }
  else
  {
    sub_1DC8B9960((uint64_t)a1, (uint64_t)v8);
    swift_beginAccess();
    sub_1DC9046E8((uint64_t)v8, v5);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    uint64_t v9 = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    v8[0] = v1;
    swift_retain();
    sub_1DCB871A8();
    return sub_1DC8818D0((uint64_t)v8);
  }
}

uint64_t sub_1DCAD5ADC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)v18 - v7;
  uint64_t v9 = *(uint64_t *)((char *)v2 + *(void *)(v4 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v9 + 16));
  uint64_t v10 = (uint64_t)v2 + *(void *)(*v2 + 160);
  swift_beginAccess();
  sub_1DC9048F8(v10, (uint64_t)v18);
  uint64_t v11 = v18[3];
  sub_1DC904960((uint64_t)v18);
  if (!v11) {
    goto LABEL_4;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, AssociatedTypeWitness);
  uint64_t v12 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 152));
  swift_beginAccess();
  sub_1DCB87D78();
  sub_1DCB87D48();
  swift_endAccess();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = MEMORY[0x1E01A6D30](v13, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  if (v14 == *(uint64_t *)((char *)v2 + *(void *)(*v2 + 120)))
  {
    uint64_t v15 = *v12;
    uint64_t v16 = swift_bridgeObjectRetain();
    MEMORY[0x1E01A6D30](v16, AssociatedTypeWitness);
    swift_beginAccess();
    swift_getWitnessTable();
    sub_1DCB88288();
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
    v18[0] = v15;
    sub_1DCB871B8();
    swift_bridgeObjectRelease();
    return sub_1DCB871E8();
  }
  else
  {
LABEL_4:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
    return sub_1DCB87208();
  }
}

uint64_t sub_1DCAD5E00(uint64_t a1)
{
  uint64_t v30 = *v1;
  uint64_t v2 = v30;
  uint64_t v31 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v28 = (char *)&v27 - v4;
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1DCB871D8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(uint64_t *)((char *)v1 + *(void *)(v2 + 184));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 16));
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 160);
  swift_beginAccess();
  uint64_t v14 = v13;
  uint64_t v15 = v5;
  uint64_t v16 = v6;
  sub_1DC9046E8((uint64_t)v33, v14);
  swift_endAccess();
  *((unsigned char *)v1 + *(void *)(*v1 + 168)) = 1;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v18 = v31;
  uint64_t v31 = v15;
  v17(v11, v18, v15);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v23 = v28;
    uint64_t v22 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v11, AssociatedTypeWitness);
    swift_getAssociatedTypeWitness();
    uint64_t v24 = sub_1DCB87CD8();
    uint64_t v25 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 152));
    swift_beginAccess();
    *uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v9, v23, AssociatedTypeWitness);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 0, 1, AssociatedTypeWitness);
    sub_1DCB87198();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v23, AssociatedTypeWitness);
  }
  uint64_t v19 = v12;
  uint64_t v20 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 152));
  swift_beginAccess();
  uint64_t v32 = *v20;
  swift_getAssociatedTypeWitness();
  sub_1DCB87D78();
  swift_getWitnessTable();
  if (sub_1DCB881C8()) {
    goto LABEL_7;
  }
  if (*((unsigned char *)v1 + *(void *)(*v1 + 136)) != 1)
  {
    *uint64_t v20 = sub_1DCB87CD8();
    swift_bridgeObjectRelease();
LABEL_7:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
    goto LABEL_8;
  }
  uint64_t v21 = *v20;
  swift_bridgeObjectRetain();
  *uint64_t v20 = sub_1DCB87CD8();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
  uint64_t v32 = v21;
  sub_1DCB871B8();
  swift_bridgeObjectRelease();
LABEL_8:
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 1, 1, AssociatedTypeWitness);
  sub_1DCB87198();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v31);
}

uint64_t sub_1DCAD6380()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 88) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  swift_bridgeObjectRelease();
  sub_1DC904960(v0 + *(void *)(*(void *)v0 + 160));
  swift_release();
  return v0;
}

uint64_t sub_1DCAD6444()
{
  sub_1DCAD6380();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CollectByCountWithStride.Inner()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAD64B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DCAD6558(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    unint64_t v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v13;
    *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  }
  return v4;
}

uint64_t sub_1DCAD6670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_1DCAD6704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_1DCAD6798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_1DCAD682C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_1DCAD68C0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCAD6A20);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((((v6 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)(((((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 2) {
    return v17 - 1;
  }
  else {
    return 0;
  }
}

void sub_1DCAD6A34(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DCAD6C30);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0xFE)
        {
          *(unsigned char *)(((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) = a2 + 1;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CollectByCountWithStride()
{
  return sub_1DC8866E4();
}

unsigned char *sub_1DCAD6C70(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAD6D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for CollectByCountWithStride.CompletionStrategy()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAD6D7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAD6D98(void *a1)
{
  return sub_1DCAD5904(a1);
}

uint64_t sub_1DCAD6DBC(uint64_t a1)
{
  return sub_1DCAD5ADC(a1);
}

uint64_t sub_1DCAD6DE0(uint64_t a1)
{
  return sub_1DCAD5E00(a1);
}

void sub_1DCAD6E04(uint64_t a1)
{
}

uint64_t sub_1DCAD6E28()
{
  return sub_1DCAD4F58();
}

void sub_1DCAD6E4C()
{
}

void sub_1DCAD6E70(uint64_t a1@<X8>)
{
}

void sub_1DCAD6E94()
{
}

uint64_t sub_1DCAD6EB8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  return sub_1DCAD4D94(a1, a4, a2);
}

uint64_t sub_1DCAD6ECC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAD6EE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAD6F04()
{
  if (*(void *)(v0 + 40)) {
    sub_1DC8818D0(v0 + 16);
  }

  return swift_deallocObject();
}

uint64_t _s15StatefulFlatMapVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAD6F7C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1DCAD7028(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  sub_1DCAD8C80();
  sub_1DCAD8C80();
  unint64_t v8 = v7 + 8;
  int v9 = *(_DWORD *)(v6 + 80);
  if ((v9 & 0x1000F8) != 0 || v8 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = v11;
    a1 = (void *)(v11 + ((unsigned __int16)((v9 & 0xF8) + 23) & (unsigned __int16)~(v9 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(void *, uint64_t *))(v6 + 16))(a1, a2);
    unsigned int v12 = (void *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v13 = (void *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = v13[1];
    *unsigned int v12 = *v13;
    v12[1] = v14;
    sub_1DCAD8C8C();
    uint64_t v16 = v15[1];
    *unsigned int v17 = *v15;
    v17[1] = v16;
    sub_1DCAD8C8C();
    *unsigned int v19 = *v18;
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_1DCAD7148()
{
  sub_1DCAB8E30();
  (*(void (**)(void))(v1 + 16))();
  sub_1DCAB8E64();
  uint64_t v3 = v2[1];
  *unsigned int v4 = *v2;
  v4[1] = v3;
  sub_1DCAD8C80();
  uint64_t v6 = v5[1];
  *uint64_t v7 = *v5;
  v7[1] = v6;
  sub_1DCAD8C80();
  *int v9 = *v8;
  swift_retain();
  swift_retain();
  return v0;
}

uint64_t sub_1DCAD71D4()
{
  sub_1DCAB8E30();
  uint64_t v3 = v2 + 24;
  (*(void (**)(void))(v2 + 24))();
  sub_1DCAB8E7C();
  sub_1DCAD8C4C(v4);
  swift_release();
  sub_1DCAD8C4C(v1 + 23);
  swift_release();
  *(void *)((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v1 + 23) & 0xFFFFFFFFFFFFFFF8);
  return v0;
}

uint64_t sub_1DCAD7260()
{
  sub_1DCAB8E30();
  (*(void (**)(void))(v1 + 32))();
  sub_1DCAB8E64();
  sub_1DCAD8CAC(v2);
  sub_1DCAD8CAC(v3);
  *uint64_t v5 = *v4;
  return v0;
}

uint64_t sub_1DCAD72C0()
{
  sub_1DCAB8E30();
  uint64_t v2 = (_OWORD *)(v1 + 40);
  (*(void (**)(void))(v1 + 40))();
  sub_1DCAB8E7C();
  unint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v2 = *(_OWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v5 = (_OWORD *)(((unint64_t)v2 + 23) & 0xFFFFFFFFFFFFFFF8);
  v4 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v5 = *(_OWORD *)v4;
  swift_release();
  *(void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  return v0;
}

uint64_t sub_1DCAD7354(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCAD74A0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DCAD74B4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DCAD769CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t _s18StatefulTryFlatMapVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAD76DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  v22[1] = a8;
  uint64_t v23 = a4;
  uint64_t v24 = a7;
  sub_1DC88D538();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v18, v9, v20);
  sub_1DCAD77F0((uint64_t)v18, a1, a2, a3, v23, a5, a6, a9);
  swift_retain();
  return swift_retain();
}

int *sub_1DCAD77F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a8, a1, a7);
  uint64_t result = (int *)_s15StatefulFlatMapVMa();
  int v15 = (void *)(a8 + result[15]);
  *int v15 = a3;
  v15[1] = a4;
  uint64_t v16 = (void *)(a8 + result[16]);
  *uint64_t v16 = a5;
  v16[1] = a6;
  *(void *)(a8 + result[17]) = a2;
  return result;
}

uint64_t sub_1DCAD78D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v79 = a4;
  uint64_t v71 = a3;
  uint64_t v73 = a1;
  sub_1DC88D538();
  uint64_t v69 = v4;
  uint64_t v70 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v6);
  id v68 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  sub_1DC88D538();
  uint64_t v78 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  uint64_t v76 = v12;
  uint64_t v14 = *(void *)(v13 + 24);
  uint64_t v15 = v13;
  uint64_t v67 = *(void *)(v13 + 40);
  uint64_t v16 = sub_1DCB870E8();
  sub_1DC88D538();
  uint64_t v72 = v17;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v18);
  sub_1DCAD8C6C(v19, v58);
  uint64_t v77 = *(void *)(v15 + 48);
  uint64_t v65 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v61 = v9;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1DCB89268();
  uint64_t v23 = sub_1DCB870E8();
  uint64_t v24 = sub_1DCB87318();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v80 = v23;
  uint64_t v81 = v24;
  uint64_t v82 = WitnessTable;
  uint64_t v83 = v26;
  uint64_t v27 = sub_1DCB870F8();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v80 = v27;
  uint64_t v81 = v21;
  uint64_t v82 = v28;
  uint64_t v83 = AssociatedConformanceWitness;
  uint64_t v29 = sub_1DCB870A8();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v63 = v16;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v80 = v29;
  uint64_t v81 = v16;
  uint64_t v82 = v30;
  uint64_t v83 = v64;
  uint64_t v31 = sub_1DCB87158();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v80 = v31;
  uint64_t v81 = AssociatedTypeWitness;
  uint64_t v82 = v21;
  uint64_t v83 = v32;
  uint64_t v62 = type metadata accessor for ExpandResult();
  sub_1DC88D538();
  uint64_t v66 = v33;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v34);
  sub_1DCAD8C34(v35, v58);
  uint64_t v36 = v15;
  uint64_t v59 = *(void *)(v15 + 32);
  uint64_t v37 = v59;
  uint64_t v74 = swift_allocBox();
  (*(void (**)(void))(v75 + *(int *)(v15 + 64)))();
  uint64_t v38 = v61;
  sub_1DC8E7D10();
  v39();
  uint64_t v40 = v69;
  uint64_t v41 = v68;
  sub_1DC8E7D10();
  v42();
  uint64_t v43 = v40;
  unint64_t v44 = (*(unsigned __int8 *)(v40 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v45 = (v70 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = (char *)swift_allocObject();
  uint64_t v47 = v65;
  *((void *)v46 + 2) = v38;
  *((void *)v46 + 3) = v47;
  *((void *)v46 + 4) = v37;
  uint64_t v48 = v71;
  uint64_t v49 = v67;
  *((void *)v46 + 5) = v71;
  *((void *)v46 + 6) = v49;
  uint64_t v50 = v79;
  *((void *)v46 + 7) = v77;
  *((void *)v46 + 8) = v50;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v46[v44], v41, v36);
  *(void *)&v46[v45] = v74;
  swift_retain();
  uint64_t v51 = v76;
  sub_1DCB873D8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v51, v38);
  uint64_t v52 = *(void *)(v75 + *(int *)(v36 + 68));
  CMTime v53 = (void *)swift_allocObject();
  v53[2] = v38;
  v53[3] = v47;
  v53[4] = v59;
  v53[5] = v48;
  uint64_t v54 = v77;
  v53[6] = v49;
  v53[7] = v54;
  v53[8] = v79;
  sub_1DC9F7364(v52, (uint64_t)sub_1DCAD89C4, (uint64_t)v53, v63, v47, v64, v54, v60);
  swift_release();
  sub_1DCA82BC4();
  v55();
  swift_getWitnessTable();
  sub_1DCB87518();
  sub_1DCA82BC4();
  v56();
  return swift_release();
}

uint64_t sub_1DCAD7E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_projectBox();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a2 + *(int *)(_s15StatefulFlatMapVMa() + 60));
  swift_beginAccess();
  v5(a1, v4);
  return swift_endAccess();
}

uint64_t sub_1DCAD7F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAD78D0(a1, a4, a2, a3);
}

uint64_t sub_1DCAD7F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v86 = a3;
  uint64_t v87 = a4;
  uint64_t v84 = a2;
  uint64_t v85 = a1;
  uint64_t v6 = a2 - 8;
  uint64_t v76 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v73 = v7;
  uint64_t v75 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC88D538();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  uint64_t v83 = v11;
  uint64_t v12 = *(void *)(v6 + 32);
  uint64_t v13 = *(void *)(v6 + 48);
  uint64_t v77 = v14;
  uint64_t v78 = v13;
  uint64_t v15 = sub_1DCB87148();
  sub_1DC88D538();
  uint64_t v79 = v16;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v17);
  sub_1DCAD8C6C(v18, v66);
  uint64_t v19 = sub_1DC8863A8(&qword_1EAA9DF60);
  uint64_t v20 = *(void *)(v6 + 56);
  uint64_t v88 = v12;
  uint64_t v89 = v19;
  uint64_t v21 = MEMORY[0x1E4FBC0F0];
  uint64_t v90 = v20;
  uint64_t v91 = MEMORY[0x1E4FBC0F0];
  sub_1DCAD8CA0();
  uint64_t v22 = sub_1DCB87168();
  uint64_t v82 = v20;
  uint64_t v71 = v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DCB89268();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v74 = v22;
  uint64_t v72 = WitnessTable;
  uint64_t v25 = sub_1DCB870E8();
  uint64_t v26 = sub_1DCB87318();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v88 = v25;
  uint64_t v89 = v26;
  uint64_t v90 = v27;
  uint64_t v91 = v28;
  sub_1DCAD8CA0();
  uint64_t v29 = sub_1DCB870F8();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v88 = v29;
  uint64_t v89 = v19;
  uint64_t v90 = v30;
  uint64_t v91 = v21;
  sub_1DCAD8CA0();
  uint64_t v31 = sub_1DCB870A8();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v88 = v31;
  uint64_t v89 = v15;
  uint64_t v80 = v15;
  uint64_t v90 = v32;
  uint64_t v91 = v33;
  sub_1DCAD8CA0();
  uint64_t v34 = sub_1DCB87158();
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v88 = v34;
  uint64_t v89 = AssociatedTypeWitness;
  uint64_t v90 = v19;
  uint64_t v91 = v35;
  uint64_t v36 = type metadata accessor for ExpandResult();
  sub_1DC88D538();
  uint64_t v38 = v37;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v39);
  sub_1DCAD8C34(v40, v66);
  uint64_t v81 = *(void *)(v6 + 40);
  uint64_t v41 = swift_allocBox();
  (*(void (**)(void))(v5 + *(int *)(v6 + 72)))();
  uint64_t v67 = v5;
  uint64_t v69 = v38;
  uint64_t v42 = v77;
  sub_1DC8E7D10();
  v43();
  uint64_t v44 = v76;
  uint64_t v68 = v33;
  unint64_t v45 = v75;
  sub_1DC8E7D10();
  v46();
  unint64_t v47 = (*(unsigned __int8 *)(v44 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v48 = (v73 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = (char *)swift_allocObject();
  uint64_t v73 = v36;
  uint64_t v50 = v71;
  *((void *)v49 + 2) = v42;
  *((void *)v49 + 3) = v50;
  uint64_t v51 = v86;
  *((void *)v49 + 4) = v81;
  *((void *)v49 + 5) = v51;
  uint64_t v52 = v78;
  uint64_t v53 = v82;
  *((void *)v49 + 6) = v78;
  *((void *)v49 + 7) = v53;
  *((void *)v49 + 8) = v87;
  uint64_t v54 = v45;
  uint64_t v55 = v84;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v49[v47], v54, v84);
  *(void *)&v49[v48] = v41;
  swift_retain();
  uint64_t v56 = v83;
  sub_1DCB874A8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v56, v42);
  uint64_t v57 = *(void *)(v67 + *(int *)(v55 + 68));
  uint64_t v58 = (void *)swift_allocObject();
  v58[2] = v42;
  void v58[3] = v50;
  uint64_t v59 = v80;
  uint64_t v60 = v86;
  uint64_t v61 = v87;
  v58[4] = v81;
  v58[5] = v60;
  uint64_t v62 = v82;
  v58[6] = v52;
  v58[7] = v62;
  v58[8] = v61;
  sub_1DC9F7364(v57, (uint64_t)sub_1DCAD8C08, (uint64_t)v58, v59, v74, v68, v72, v70);
  swift_release();
  sub_1DCA82BC4();
  v63();
  swift_getWitnessTable();
  sub_1DCB87518();
  sub_1DCA82BC4();
  v64();
  return swift_release();
}

uint64_t sub_1DCAD859C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_projectBox();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a2 + *(int *)(_s18StatefulTryFlatMapVMa() + 60));
  swift_beginAccess();
  v5(a1, v4);
  return swift_endAccess();
}

uint64_t sub_1DCAD866C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (void *)swift_allocObject();
  id v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  void v15[5] = a5;
  v15[6] = a6;
  v15[7] = a7;
  v15[8] = a8;
  sub_1DC87E988(&qword_1EAA9DF60);
  sub_1DCB87508();

  return swift_release();
}

uint64_t sub_1DCAD874C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v12 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - v6, a1, AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = sub_1DCB88FE8();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = swift_allocError();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11, v7, AssociatedTypeWitness);
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1DCAD88D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAD7F58(a1, a4, a2, a3);
}

uint64_t sub_1DCAD88E4()
{
  return sub_1DCAD8A10((uint64_t (*)(void, long long *))_s15StatefulFlatMapVMa);
}

uint64_t sub_1DCAD88FC(uint64_t a1)
{
  uint64_t v2 = _s15StatefulFlatMapVMa();
  sub_1DC89D568(v2);
  sub_1DCAB8E4C();
  return sub_1DCAD7E80(a1, v3);
}

uint64_t sub_1DCAD89C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 24) - 8) + 16))(a2, a1);
}

uint64_t sub_1DCAD89F8()
{
  return sub_1DCAD8A10((uint64_t (*)(void, long long *))_s18StatefulTryFlatMapVMa);
}

uint64_t sub_1DCAD8A10(uint64_t (*a1)(void, long long *))
{
  uint64_t v2 = *(void *)(v1 + 32);
  long long v6 = *(_OWORD *)(v1 + 16);
  uint64_t v5 = v6;
  uint64_t v7 = v2;
  long long v8 = *(_OWORD *)(v1 + 48);
  uint64_t v3 = *(void *)(a1(0, &v6) - 8);
  (*(void (**)(unint64_t))(*(void *)(v5 - 8) + 8))(v1 + ((*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DCAD8B44(uint64_t a1)
{
  uint64_t v2 = _s18StatefulTryFlatMapVMa();
  sub_1DC89D568(v2);
  sub_1DCAB8E4C();
  return sub_1DCAD859C(a1, v3);
}

uint64_t sub_1DCAD8C08(uint64_t a1)
{
  return sub_1DCAD866C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1DCAD8C20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCAD874C(a1, a2);
}

void sub_1DCAD8C34(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 288) = (char *)&a2 - a1;
}

uint64_t sub_1DCAD8C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8);
  void *v1 = *(void *)(a1 & 0xFFFFFFFFFFFFFFF8);
  v1[1] = v3;
  return swift_retain();
}

void sub_1DCAD8C6C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - a1;
}

uint64_t sub_1DCAD8CA0()
{
  return 255;
}

__n128 sub_1DCAD8CAC@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *a1;
  __n128 *v1 = *a1;
  return result;
}

uint64_t sub_1DCAD8CC0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  void *v1 = v0;
  v1[1] = sub_1DCAD8D58;
  return sub_1DC978974(v0 + 16);
}

uint64_t sub_1DCAD8D58()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88679C();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4(0);
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v6, v7, v8);
  }
}

uint64_t sub_1DCAD8E5C()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC996E9C();
  sub_1DCADBBEC(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[29] = inited;
  sub_1DCADBB98(inited);
  sub_1DCADBBD4((uint64_t)(v1 + 4));
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[30] = v4;
  sub_1DCADBB7C(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  sub_1DCADBBB4(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[32] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1DCAD8F60;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DCAD8F60()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[33] = v5;
  v3[34] = v0;
  swift_task_dealloc();
  if (v0) {
    v3[35] = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCAD9054()
{
  sub_1DC88688C();
  uint64_t v1 = v0[34];
  swift_retain();
  sub_1DC9BCDEC();
  if (!v1)
  {
    swift_release();
    swift_release();
    uint64_t v6 = swift_setDeallocating();
    sub_1DC978D0C(v6);
    sub_1DC996984();
    sub_1DC886630(v0 + 2);
    sub_1DC8F03BC();
    __asm { BRAA            X2, X16 }
  }
  swift_release();
  swift_release();
  v0[35] = v1;
  sub_1DC886854();
  sub_1DC8F03BC();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DCAD9158()
{
  sub_1DC8867A8();
  uint64_t v2 = sub_1DCADBC44();
  sub_1DC978D0C(v2);
  sub_1DC996984();
  sub_1DC886630(v0);
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3(0);
}

uint64_t sub_1DCAD91C8()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  void *v1 = v0;
  v1[1] = sub_1DCAD9258;
  uint64_t v2 = sub_1DC996D0C();
  return sub_1DC978974(v2);
}

uint64_t sub_1DCAD9258()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88679C();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v4();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v6, v7, v8);
  }
}

uint64_t sub_1DCAD9354()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC996E9C();
  sub_1DCADBBEC(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[29] = inited;
  sub_1DCADBB98(inited);
  sub_1DCADBBD4((uint64_t)(v1 + 4));
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[30] = v4;
  sub_1DCADBB7C(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  sub_1DCADBBB4(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[32] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1DCAD9458;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DCAD9458()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[33] = v5;
  v3[34] = v0;
  swift_task_dealloc();
  if (v0) {
    v3[35] = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCAD954C()
{
  sub_1DC88688C();
  uint64_t v1 = v0[34];
  swift_retain();
  sub_1DC9BCE40();
  if (!v1)
  {
    swift_release();
    swift_release();
    uint64_t v6 = swift_setDeallocating();
    sub_1DC978D0C(v6);
    sub_1DC996984();
    sub_1DC886630(v0 + 2);
    sub_1DC8F03BC();
    __asm { BRAA            X2, X16 }
  }
  swift_release();
  swift_release();
  v0[35] = v1;
  sub_1DC886854();
  sub_1DC8F03BC();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DCAD9650()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DCADBC44();
  sub_1DC978D0C(v1);
  sub_1DC996984();
  sub_1DC886630(v0);
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DCAD96B8()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  void *v1 = v0;
  v1[1] = sub_1DCAD9748;
  uint64_t v2 = sub_1DC996D0C();
  return sub_1DC978974(v2);
}

uint64_t sub_1DCAD9748()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88679C();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v4();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v6, v7, v8);
  }
}

uint64_t sub_1DCAD9844()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC996E9C();
  sub_1DCADBBEC(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[29] = inited;
  sub_1DCADBB98(inited);
  sub_1DCADBBD4((uint64_t)(v1 + 4));
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[30] = v4;
  sub_1DCADBB7C(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  sub_1DCADBBB4(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[32] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1DCAD9948;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DCAD9948()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 264) = v5;
  swift_task_dealloc();
  if (v0) {
    *(void *)(v3 + 312) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCAD9A3C()
{
  sub_1DC886900();
  v0[34] = *(void *)(v0[33] + 24);
  uint64_t v3 = (uint64_t (*)(void))((char *)&dword_1EAAA28A0 + dword_1EAAA28A0);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[35] = v1;
  void *v1 = v0;
  v1[1] = sub_1DCAD9AF4;
  return v3();
}

uint64_t sub_1DCAD9AF4()
{
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88679C();
  *uint64_t v10 = v9;
  v7[36] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    v7[37] = v3;
    v7[38] = v5;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DCAD9BFC()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  *(void *)(v0 + 312) = *(void *)(v0 + 288);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_1DCAD9C6C()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DCADBC44();
  sub_1DC978D0C(v1);
  sub_1DC996984();
  sub_1DC886630(v0);
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DCAD9CD4()
{
  sub_1DC8867A8();
  v0[32] = sub_1DC87E988(&qword_1EAAA90B0);
  v0[33] = swift_task_alloc();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[34] = v1;
  void *v1 = v0;
  v1[1] = sub_1DCAD9D98;
  uint64_t v2 = sub_1DC996D0C();
  return sub_1DC978974(v2);
}

uint64_t sub_1DCAD9D98()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DCAD9EB0()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DCADBBEC(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[35] = inited;
  sub_1DCADBB98(inited);
  sub_1DCADBBD4((uint64_t)(v1 + 4));
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[36] = v4;
  sub_1DCADBB7C(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  sub_1DCADBC60(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v1[38] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1DCAD9FC0;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DCAD9FC0()
{
  sub_1DC88688C();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  v5[39] = v3;
  v5[40] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
  else
  {
    uint64_t v13 = (void *)sub_1DC8BAA00();
    v5[41] = v13;
    *uint64_t v13 = v7;
    v13[1] = sub_1DCADA114;
    return v15();
  }
}

uint64_t sub_1DCADA114()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DCADA1F0()
{
  if (*(void *)(*(void *)(*(void *)(v2 + 312) + 24) + 16))
  {
    sub_1DCADBC04();
    uint64_t v3 = sub_1DCADBC2C();
    sub_1DC991780(v3, v4, v5, v6);
    swift_release();
    swift_release();
    sub_1DCADBB2C(&qword_1EAAA90B8, &qword_1EAAA90B0);
    sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DC9AEC6C(v1, &qword_1EAAA90B0);
    uint64_t v7 = swift_setDeallocating();
    sub_1DC978D0C(v7);
    sub_1DC996984();
    sub_1DC886630(v0);
    swift_task_dealloc();
    uint64_t v8 = sub_1DC996AF0();
    v9(v8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DCADA300()
{
  sub_1DC886900();
  v0[28] = v1;
  uint64_t v2 = sub_1DCB86BF8();
  v0[29] = v2;
  sub_1DC89D568(v2);
  v0[30] = v3;
  v0[31] = swift_task_alloc();
  v0[32] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1DCADA3E4;
  uint64_t v5 = sub_1DC996D0C();
  return sub_1DC978974(v5);
}

uint64_t sub_1DCADA3E4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BA978();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DCADA4EC()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v3 = sub_1DC996E9C();
  sub_1DCADBBEC(v3);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v2[34] = inited;
  sub_1DCADBB98(inited);
  sub_1DCADBBD4((uint64_t)(v2 + 4));
  type metadata accessor for XPCProxyDecoder();
  uint64_t v5 = swift_initStackObject();
  v2[35] = v5;
  sub_1DCADBB7C(v5);
  type metadata accessor for XPCDecoder();
  uint64_t v6 = swift_initStackObject();
  v2[36] = v6;
  *(void *)(v6 + 16) = inited;
  *(void *)(v6 + 24) = v5;
  sub_1DC8B9C10(v0);
  sub_1DC8B9C54(v1);
  uint64_t v7 = (void *)swift_task_alloc();
  v2[37] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DCADA600;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DCADA600()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[38] = v5;
  v3[39] = v0;
  swift_task_dealloc();
  if (v0) {
    v3[40] = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCADA6F4()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[31];
  swift_retain();
  sub_1DC9BC77C(v2);
  if (v1)
  {
    swift_release();
    swift_release();
    v0[40] = v1;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v3, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[31];
    uint64_t v6 = v0[32];
    uint64_t v8 = v0[29];
    uint64_t v9 = v0[30];
    uint64_t v10 = v0[28];
    swift_release();
    swift_release();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v11(v6, v7, v8);
    swift_release();
    sub_1DC886630(v0 + 2);
    v11(v10, v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BAB84();
    return v12();
  }
}

uint64_t sub_1DCADA858()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DC886630((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DCADA8D0()
{
  sub_1DC8867A8();
  v0[32] = sub_1DC87E988(&qword_1EAAA9098);
  v0[33] = swift_task_alloc();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[34] = v1;
  void *v1 = v0;
  v1[1] = sub_1DCADA994;
  uint64_t v2 = sub_1DC996D0C();
  return sub_1DC978974(v2);
}

uint64_t sub_1DCADA994()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DCADAAAC()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DCADBBEC(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[35] = inited;
  sub_1DCADBB98(inited);
  sub_1DCADBBD4((uint64_t)(v1 + 4));
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[36] = v4;
  sub_1DCADBB7C(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  sub_1DCADBC60(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v1[38] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1DCADABBC;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DCADABBC()
{
  sub_1DC88688C();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  v5[39] = v3;
  v5[40] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
  else
  {
    uint64_t v13 = (void *)sub_1DC8BAA00();
    v5[41] = v13;
    *uint64_t v13 = v7;
    v13[1] = sub_1DCADAD10;
    return v15();
  }
}

uint64_t sub_1DCADAD10()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DCADADEC()
{
  if (*(void *)(*(void *)(*(void *)(v2 + 312) + 24) + 16))
  {
    sub_1DCADBC04();
    uint64_t v3 = sub_1DCADBC2C();
    sub_1DC9917A0(v3, v4, v5, v6);
    swift_release();
    swift_release();
    sub_1DCADBB2C(&qword_1EAAA90A0, &qword_1EAAA9098);
    sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DC9AEC6C(v1, &qword_1EAAA9098);
    uint64_t v7 = swift_setDeallocating();
    sub_1DC978D0C(v7);
    sub_1DC996984();
    sub_1DC886630(v0);
    swift_task_dealloc();
    uint64_t v8 = sub_1DC996AF0();
    v9(v8);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1DCADAEFC(uint64_t a1)
{
  unint64_t result = sub_1DC9B047C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCADAF24(uint64_t a1)
{
  unint64_t result = sub_1DC9BFD10();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DCADAF4C(uint64_t a1)
{
  uint64_t result = sub_1DC9E86E8(&qword_1EAAA3410);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DCADAF90(uint64_t a1)
{
  uint64_t result = sub_1DC9E86E8(&qword_1EAAA5D50);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DCADAFD4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCADB024(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCADB074(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCADB0C4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCADB114(uint64_t a1)
{
  return sub_1DCADB16C(a1);
}

uint64_t sub_1DCADB140(uint64_t a1)
{
  return sub_1DCADB16C(a1);
}

uint64_t sub_1DCADB16C(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DCADB1D4()
{
  sub_1DC8867A8();
  v0[3] = v1;
  v0[4] = v2;
  v0[2] = v3;
  uint64_t v4 = sub_1DCB88718();
  v0[5] = v4;
  sub_1DC89D568(v4);
  v0[6] = v5;
  v0[7] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1DCADB2A4;
  return sub_1DC9780D0();
}

uint64_t sub_1DCADB2A4()
{
  sub_1DC88688C();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 72) = v3;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC8F03BC();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v11 = (void *)sub_1DC8BAA00();
  *(void *)(v5 + 80) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_1DCADB3FC;
  return v13();
}

uint64_t sub_1DCADB3FC()
{
  sub_1DC886900();
  char v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(unsigned char *)(v5 + 112) = v3 & 1;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DCADB4F4()
{
  sub_1DC8867A8();
  if (*(unsigned char *)(v0 + 112) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v1;
    void *v1 = v0;
    v1[1] = sub_1DCADB5F0;
    return sub_1DC9783F0();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    swift_release();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v3, 1, 1, v4);
    swift_task_dealloc();
    sub_1DC8BAB84();
    return v5();
  }
}

uint64_t sub_1DCADB5F0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 104) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DCADB6D0()
{
  sub_1DC88688C();
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[2];
  uint64_t v4 = v0[3];
  swift_release();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v1, v3);
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v6();
}

uint64_t sub_1DCADB77C()
{
  sub_1DC8867A8();
  swift_release();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCADB7E0()
{
  sub_1DC8867A8();
  swift_release();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCADB844()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8B9ADC;
  return sub_1DCADB1D4();
}

uint64_t sub_1DCADB8FC(uint64_t a1, uint64_t a2, _UNKNOWN **a3)
{
  uint64_t v23 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  sub_1DC88D538();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC88D538();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v20[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCAD3260();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v3, a2);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v16, 1, v6) == 1)
  {
    uint64_t v21 = MEMORY[0x1E4FBB390];
    uint64_t v22 = &off_1F37F4948;
    LOBYTE(v20[0]) = 0;
    sub_1DCAD3334(v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v16, v6);
    uint64_t v21 = MEMORY[0x1E4FBB390];
    uint64_t v22 = &off_1F37F4948;
    LOBYTE(v20[0]) = 1;
    sub_1DCAD3334(v20);
    if (!v4)
    {
      sub_1DC8818D0((uint64_t)v20);
      uint64_t v21 = v6;
      uint64_t v22 = v23;
      uint64_t v17 = sub_1DC8EF6AC(v20);
      (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(v17, v11, v6);
      sub_1DCAD3334(v20);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  }
  swift_release();
  return sub_1DC8818D0((uint64_t)v20);
}

uint64_t sub_1DCADBB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCADB8FC(a1, a2, *(_UNKNOWN ***)(a3 - 8));
}

uint64_t sub_1DCADBB2C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCADBB7C(uint64_t a1)
{
  return sub_1DC978E04(v1, a1 + 16, v2);
}

uint64_t sub_1DCADBB98(uint64_t a1)
{
  return sub_1DC978E04(v1, a1 + 16, v2);
}

uint64_t sub_1DCADBBB4(uint64_t a1)
{
  *(void *)(v2 + 248) = a1;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  return sub_1DC8B9C10(v1);
}

uint64_t sub_1DCADBBD4(uint64_t a1)
{
  return sub_1DC978E04(a1, v1, v2);
}

uint64_t sub_1DCADBBEC(uint64_t a1)
{
  return sub_1DC978E04(a1, v1, v2);
}

uint64_t sub_1DCADBC04()
{
  return swift_retain();
}

uint64_t sub_1DCADBC2C()
{
  return v0;
}

uint64_t sub_1DCADBC44()
{
  return swift_setDeallocating();
}

uint64_t sub_1DCADBC60(uint64_t a1)
{
  *(void *)(v2 + 296) = a1;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  return sub_1DC8B9C10(v1);
}

uint64_t sub_1DCADBC80(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = v3;
  sub_1DC87E9DC(a2, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    uint64_t v5 = a3(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DC88CCDC();
    sub_1DC883884();
    *uint64_t v7 = 6;
    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1DCADBD50(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) <= a2)
  {
    sub_1DC88CCDC();
    uint64_t v2 = sub_1DC883884();
    return sub_1DCADD918(v2, v3);
  }
  else if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    return *(void *)(result + 16 * a2 + 32);
  }
  return result;
}

uint64_t sub_1DCADBDAC(void *a1)
{
  id v3 = sub_1DC97ED7C(a1);
  if (v2) {
    return (uint64_t)v1;
  }
  uint64_t v4 = v3;
  id v5 = objc_msgSend(v3, sel_shape);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v6 = sub_1DCB87C38();

  sub_1DC8A42E0(0, (v6 & 0xC000000000000001) == 0, v6);
  if ((v6 & 0xC000000000000001) != 0) {
    id v7 = (id)MEMORY[0x1E01A7AE0](0, v6);
  }
  else {
    id v7 = *(id *)(v6 + 32);
  }
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v56 = objc_msgSend(v8, sel_integerValue);

  id v9 = objc_msgSend(v4, sel_shape);
  uint64_t v10 = sub_1DCB87C38();

  id v11 = objc_msgSend(v4, sel_shape);
  unint64_t v12 = sub_1DCB87C38();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 - 1;
  if (__OFSUB__(v13, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  sub_1DC8A42E0(v13 - 1, (v10 & 0xC000000000000001) == 0, v10);
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_31:
    id v15 = (id)MEMORY[0x1E01A7AE0](v13 - 1, v10);
    goto LABEL_9;
  }
  id v15 = *(id *)(v10 + 8 * v14 + 32);
LABEL_9:
  unint64_t inited = (unint64_t)v15;
  swift_bridgeObjectRelease();
  unint64_t v17 = (unint64_t)objc_msgSend((id)inited, sel_integerValue);

  if ((v17 & 0x8000000000000000) == 0 && !HIDWORD(v17))
  {
    uint64_t v48 = (uint64_t)v1;
    uint64_t v18 = *(unsigned int *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 4];
    int v19 = *(_DWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 16];
    int v20 = *(_DWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 20];
    char v21 = v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 24];
    v49[0] = *(_DWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters];
    uint64_t v50 = *(void *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 8];
    v49[1] = v18;
    int v51 = v19;
    int v52 = v20;
    char v53 = v21;
    long long v54 = *(_OWORD *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 28];
    uint64_t v55 = *(void *)&v1[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 44];
    unsigned int v22 = sub_1DCB5DDF4(v17, v49);
    uint64_t v23 = v22;
    int64_t v24 = v18 * (unint64_t)v22;
    if ((v18 * (unsigned __int128)v22) >> 64 == v24 >> 63)
    {
      unint64_t v47 = v17;
      unint64_t v17 = sub_1DC87E988(&qword_1EAA9C6C0);
      unint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DCBC6B50;
      uint64_t v14 = 1;
      uint64_t v1 = v56;
      *(void *)(inited + 32) = v56;
      *(void *)(inited + 40) = 1;
      *(void *)(inited + 48) = v18;
      *(void *)(inited + 56) = v23;
      uint64_t v25 = swift_initStackObject();
      *(_OWORD *)(v25 + 16) = xmmword_1DCBC6B50;
      *(void *)(v25 + 32) = v24;
      *(void *)(v25 + 40) = v24;
      *(void *)(v25 + 48) = 1;
      *(void *)(v25 + 56) = v18;
      uint64_t v26 = sub_1DCA7B4C4(v25);
      if ((unint64_t)(v26 - 0x2000000000000000) >> 62 == 3)
      {
        unint64_t v17 = (unint64_t)sub_1DCA78FEC(4 * v26, 4, inited, 65568, (id)v25);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        uint64_t v14 = (uint64_t)&selRef_enumeratedDurations;
        id v27 = objc_msgSend(v4, sel_strides);
        unint64_t inited = sub_1DCB87C38();

        if (!(inited >> 62))
        {
          uint64_t v28 = *(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
          if (v28 < 1) {
            goto LABEL_19;
          }
          sub_1DC8A42E0(0, (inited & 0xC000000000000001) == 0, inited);
          id v29 = (inited & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1E01A7AE0](0, inited)
              : *(id *)(inited + 32);
          uint64_t v30 = v29;
          swift_bridgeObjectRelease();
          sub_1DCA895DC();
          uint64_t v34 = v14;
          int v35 = objc_msgSend(v30, sel_intValue);

          id v36 = [(id)v17 (SEL)(v34 + 2156)];
          unint64_t v37 = sub_1DCB87C38();

          if (v37 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v38 = sub_1DCB88CC8();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v38 < 1)
          {
LABEL_19:
            sub_1DC88CCDC();
            uint64_t v31 = sub_1DC883884();
            sub_1DCADD918(v31, v32);
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1DC8A42E0(0, (v37 & 0xC000000000000001) == 0, v37);
            if ((v37 & 0xC000000000000001) != 0) {
              id v39 = (id)MEMORY[0x1E01A7AE0](0, v37);
            }
            else {
              id v39 = *(id *)(v37 + 32);
            }
            uint64_t v40 = v39;
            swift_bridgeObjectRelease();
            sub_1DCA895DC();
            int v41 = objc_msgSend(v40, sel_intValue);

            id v42 = v4;
            id v43 = objc_msgSend(v42, sel_dataPointer);
            objc_msgSend(v42, sel_count);
            sub_1DCADD4F4((uint64_t)v43, (id)v17, (uint64_t)v1, v35, v41, v47, v48);
            sub_1DC87E988(&qword_1EAA9C6B8);
            uint64_t v44 = swift_initStackObject();
            *(_OWORD *)(v44 + 16) = xmmword_1DCBB93B0;
            uint64_t v45 = *(void *)(v48 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_outputFeatureName + 8);
            *(void *)(v44 + 32) = *(void *)(v48 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_outputFeatureName);
            *(void *)(v44 + 40) = v45;
            uint64_t v46 = self;
            swift_bridgeObjectRetain();
            *(void *)(v44 + 48) = objc_msgSend(v46, sel_featureValueWithMultiArray_, v17);
            sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA18E8);
            sub_1DCB877D8();
            sub_1DC9615EC();
            swift_bridgeObjectRelease();
            objc_allocWithZone(MEMORY[0x1E4F1E930]);
            uint64_t v1 = sub_1DC99F66C();
          }
          return (uint64_t)v1;
        }
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1DCB88CC8();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
  sub_1DC8AF148();
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

uint64_t sub_1DCADC4B8()
{
  type metadata accessor for SNLogMelType(0);
  uint64_t result = sub_1DCB877D8();
  qword_1EAAFFB50 = result;
  return result;
}

uint64_t sub_1DCADC4FC()
{
  type metadata accessor for SNLogMelSpectrumNormalizationStrategy(0);
  uint64_t result = sub_1DCB877D8();
  qword_1EAAFFB58 = result;
  return result;
}

uint64_t sub_1DCADC540()
{
  sub_1DC87E988(qword_1EAAA90E8);
  uint64_t result = sub_1DCB877D8();
  qword_1EAAFFB60 = result;
  return result;
}

void sub_1DCADC588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCADD900(a1, a2);
  if (!v3)
  {
    id v5 = (void *)v4;
    sub_1DCA89970();
    objc_msgSend(v5, sel_doubleValue);
    double v7 = v6;

    float v8 = v7;
    *uint64_t v2 = v8;
  }
}

void sub_1DCADC600(uint64_t a1, uint64_t a2)
{
  sub_1DCADD900(a1, a2);
  if (!v3)
  {
    sub_1DCADD938();
    unsigned int v5 = objc_msgSend(v4, sel_unsignedIntValue);

    *(_DWORD *)(v2 + 4) = v5;
  }
}

void sub_1DCADC664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCADD900(a1, a2);
  if (!v3)
  {
    unsigned int v5 = (void *)v4;
    sub_1DCA89970();
    objc_msgSend(v5, sel_doubleValue);
    double v7 = v6;

    float v8 = v7;
    *(float *)(v2 + 8) = v8;
  }
}

void sub_1DCADC6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCADD900(a1, a2);
  if (!v3)
  {
    unsigned int v5 = (void *)v4;
    sub_1DCA89970();
    objc_msgSend(v5, sel_doubleValue);
    double v7 = v6;

    float v8 = v7;
    *(float *)(v2 + 12) = v8;
  }
}

uint64_t sub_1DCADC754(uint64_t a1, uint64_t a2)
{
  if (qword_1EAA9D268 != -1) {
    swift_once();
  }
  uint64_t result = sub_1DCADBC80(qword_1EAAFFB50, a2, (uint64_t (*)(uint64_t))sub_1DCAF299C);
  if (!v2) {
    *(_DWORD *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_1DCADC7E4(uint64_t a1, uint64_t a2)
{
  if (qword_1EAA9D270 != -1) {
    swift_once();
  }
  uint64_t result = sub_1DCADBC80(qword_1EAAFFB58, a2, (uint64_t (*)(uint64_t))sub_1DCAF299C);
  if (!v2) {
    *(_DWORD *)(a1 + 48) = result;
  }
  return result;
}

void sub_1DCADC874(uint64_t a1, uint64_t a2)
{
  sub_1DCADD900(a1, a2);
  if (!v3)
  {
    sub_1DCADD938();
    unsigned int v5 = objc_msgSend(v4, sel_unsignedIntValue);

    *(_DWORD *)(v2 + 28) = v5;
  }
}

void sub_1DCADC8D8(uint64_t a1, uint64_t a2)
{
  sub_1DCADD900(a1, a2);
  if (!v3)
  {
    sub_1DCADD938();
    unsigned int v5 = objc_msgSend(v4, sel_unsignedIntValue);

    *(_DWORD *)(v2 + 32) = v5;
  }
}

void sub_1DCADC93C(uint64_t a1, uint64_t a2)
{
  sub_1DCADD900(a1, a2);
  if (!v3)
  {
    sub_1DCADD938();
    unsigned int v5 = objc_msgSend(v4, sel_unsignedIntValue);

    *(_DWORD *)(v2 + 36) = v5;
  }
}

void sub_1DCADC9A0(uint64_t a1, uint64_t a2)
{
  sub_1DCADD900(a1, a2);
  if (!v3)
  {
    sub_1DCADD938();
    unsigned int v5 = objc_msgSend(v4, sel_unsignedIntValue);

    *(_DWORD *)(v2 + 40) = v5;
  }
}

void sub_1DCADCA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCADD900(a1, a2);
  if (!v3)
  {
    unsigned int v5 = (void *)v4;
    sub_1DCA895DC();
    unsigned int v6 = objc_msgSend(v5, sel_intValue);

    *(_DWORD *)(v2 + 44) = v6;
  }
}

uint64_t sub_1DCADCA70@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = a1[1];
  long long v40 = *a1;
  *(_OWORD *)int v41 = v5;
  *(_OWORD *)&v41[16] = a1[2];
  *(_DWORD *)&v41[32] = *((_DWORD *)a1 + 12);
  uint64_t v34 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v42 = (unint64_t)(v6 + 63) >> 6;
  int64_t v32 = v42 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v10 << 6);
LABEL_6:
    uint64_t v13 = *(void *)(a2 + 56);
    uint64_t v14 = (void *)(*(void *)(a2 + 48) + 16 * v12);
    uint64_t v15 = v14[1];
    *(void *)&long long v35 = *v14;
    *((void *)&v35 + 1) = v15;
    sub_1DC87E9DC(v13 + 32 * v12, (uint64_t)v36);
    swift_bridgeObjectRetain();
LABEL_16:
    sub_1DCA42E20((uint64_t)&v35, (uint64_t)&v37);
    uint64_t v18 = v38;
    if (!v38)
    {
      uint64_t result = swift_release();
      int v25 = DWORD1(v40);
      int v26 = *(_DWORD *)v41;
      int v27 = *(_DWORD *)&v41[4];
      char v28 = v41[8];
      long long v29 = *(_OWORD *)&v41[12];
      uint64_t v30 = *(void *)&v41[28];
      uint64_t v31 = *((void *)&v40 + 1);
      *(_DWORD *)a3 = v40;
      *(_DWORD *)(a3 + 4) = v25;
      *(void *)(a3 + 8) = v31;
      *(_DWORD *)(a3 + 16) = v26;
      *(_DWORD *)(a3 + 20) = v27;
      *(unsigned char *)(a3 + 24) = v28;
      *(_OWORD *)(a3 + 28) = v29;
      *(void *)(a3 + 44) = v30;
      return result;
    }
    uint64_t v19 = v37;
    sub_1DC87E9CC(&v39, &v35);
    if (qword_1EAA9D278 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_1EAAFFB60;
    if (*(void *)(qword_1EAAFFB60 + 16) && (unint64_t v21 = sub_1DC9637DC(v19, v18), (v22 & 1) != 0))
    {
      uint64_t v23 = *(void (**)(long long *, long long *))(*(void *)(v20 + 56) + 16 * v21);
      swift_retain();
      swift_bridgeObjectRelease();
      v23(&v40, &v35);
      if (v3)
      {
        swift_release();
        sub_1DC8818D0((uint64_t)&v35);
        return swift_release();
      }
      sub_1DC8818D0((uint64_t)&v35);
      uint64_t result = swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DC8818D0((uint64_t)&v35);
    }
  }
  int64_t v16 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v16 >= v42) {
    goto LABEL_15;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v16);
  if (v17)
  {
LABEL_10:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
    goto LABEL_6;
  }
  v10 += 2;
  if (v16 + 1 >= v42)
  {
    int64_t v10 = v16;
LABEL_15:
    unint64_t v8 = 0;
    memset(v36, 0, sizeof(v36));
    long long v35 = 0u;
    goto LABEL_16;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v10);
  if (v17)
  {
    ++v16;
    goto LABEL_10;
  }
  if (v16 + 2 >= v42) {
    goto LABEL_15;
  }
  unint64_t v17 = *(void *)(v34 + 8 * (v16 + 2));
  if (v17)
  {
    v16 += 2;
    goto LABEL_10;
  }
  int64_t v24 = v16 + 3;
  if (v16 + 3 >= v42)
  {
    int64_t v10 = v16 + 2;
    goto LABEL_15;
  }
  unint64_t v17 = *(void *)(v34 + 8 * v24);
  if (v17)
  {
    v16 += 3;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v16 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v16 >= v42)
    {
      int64_t v10 = v32;
      goto LABEL_15;
    }
    unint64_t v17 = *(void *)(v34 + 8 * v16);
    ++v24;
    if (v17) {
      goto LABEL_10;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1DCADCDB0(uint64_t a1)
{
  sub_1DC97F9DC((long long *)(a1 + 24), (uint64_t)&v13);
  uint64_t v2 = sub_1DC97F9DC(&v13, (uint64_t)&v15);
  if (v16 > 0xFDu
    || (sub_1DCA42F70(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v14, v15), !v12)
    || (sub_1DC980508(v17, (uint64_t)v18), sub_1DC980508(v18, (uint64_t)&v19), v20)
    || *(void *)(v19 + 16) != 3)
  {
LABEL_13:
    type metadata accessor for SNError();
    sub_1DC931D18(0x80000001DCB90E90, 0xD00000000000004ALL, (uint64_t)"expected constraint: <BATCH>x<NCHAN>x<NSAMPLES> (NCHAN is in range [1, 1])");
    return swift_willThrow();
  }
  uint64_t result = sub_1DCADBD50(v19, 1);
  if (v1) {
    return result;
  }
  if (result == v11)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (__OFSUB__(v11, 1))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  BOOL v12 = result == 1 && v11 == 2;
  if (!v12) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1DCADCEB4(uint64_t a1, uint64_t a2)
{
  sub_1DC97F9DC((long long *)(a1 + 24), (uint64_t)&v18);
  uint64_t v4 = sub_1DC97F9DC(&v18, (uint64_t)&v20);
  if (v21 > 0xFDu
    || (sub_1DCA42F70(v4, v5, v6, v7, v8, v9, v10, v11, v18, *((uint64_t *)&v18 + 1), v19, v20), !v15)
    || (sub_1DC980508(v22, (uint64_t)v23), sub_1DC980508(v23, (uint64_t)&v24), v25)
    || (uint64_t v12 = v24, *(void *)(v24 + 16) != 4))
  {
LABEL_13:
    type metadata accessor for SNError();
    return swift_willThrow();
  }
  uint64_t result = sub_1DCADBD50(v24, 1);
  if (v2) {
    return result;
  }
  if (result == v14)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (__OFSUB__(v14, 1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  BOOL v15 = result == 1 && v14 == 2;
  if (!v15) {
    goto LABEL_13;
  }
  uint64_t result = sub_1DCADBD50(v12, 2);
  if (result == v16) {
    goto LABEL_25;
  }
  if (__OFSUB__(v16, 1))
  {
LABEL_26:
    __break(1u);
    return result;
  }
  if (result != a2 || v16 - 1 != a2) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1DCADD008(void *a1, uint64_t a2)
{
  sub_1DC97EDFC(a1);
  if (!v3)
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_1DC935AA8(v5, (uint64_t)&v8);
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1DC935AA8(v6, (uint64_t)&v10);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1DCADCDB0((uint64_t)&v8);
    sub_1DCADCEB4((uint64_t)&v10, *(unsigned int *)(a2 + 4));
    uint64_t v2 = v8;
    sub_1DC97F9DC(&v11, (uint64_t)v13);
    sub_1DC97F9F4((uint64_t)v13);
    sub_1DC97F9DC(&v9, (uint64_t)v12);
    sub_1DC97F9F4((uint64_t)v12);
  }
  return v2;
}

objc_class *sub_1DCADD218(objc_class *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&long long v11 = 0x40467A0000;
  *((void *)&v11 + 1) = 0x45F8700042480000;
  uint64_t v12 = 0x38D1B71700000001;
  char v13 = 1;
  long long v14 = xmmword_1DCBC0340;
  uint64_t v15 = 0x100000000;
  id v8 = v4;
  sub_1DCADCA70(&v11, a2, (uint64_t)v10);
  if (v3)
  {
    swift_bridgeObjectRelease();

    swift_getObjectType();
    sub_1DCADD950();
  }
  else
  {

    swift_bridgeObjectRelease();
    objc_allocWithZone(ObjectType);
    a1 = sub_1DCADD3F8(a1, (uint64_t)v10);
    swift_getObjectType();
    sub_1DCADD950();
  }
  return a1;
}

objc_class *sub_1DCADD3F8(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v8 = &v4[OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters];
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)id v8 = *(_OWORD *)a2;
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a2 + 32);
  *((_DWORD *)v8 + 12) = *(_DWORD *)(a2 + 48);
  long long v10 = v4;
  uint64_t v11 = sub_1DCADD008(a1, a2);
  if (v3)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v15 = (uint64_t *)&v10[OBJC_IVAR____SNLogMelSpectrogramCustomModel_inputFeatureName];
    *uint64_t v15 = v11;
    v15[1] = v12;
    uint64_t v16 = &v10[OBJC_IVAR____SNLogMelSpectrogramCustomModel_outputFeatureName];
    *(void *)uint64_t v16 = v13;
    *((void *)v16 + 1) = v14;

    v18.receiver = v10;
    v18.Class super_class = ObjectType;
    uint64_t ObjectType = (objc_class *)objc_msgSendSuper2(&v18, sel_init);
  }
  return ObjectType;
}

uint64_t sub_1DCADD4F4(uint64_t a1, id a2, uint64_t a3, int a4, int a5, unint64_t a6, uint64_t a7)
{
  id v13 = a2;
  id v14 = objc_msgSend(v13, sel_dataPointer);
  objc_msgSend(v13, sel_count);
  return sub_1DCADD5A4((uint64_t)v14, a3, a1, a4, a5, a6, a7);
}

uint64_t sub_1DCADD5A4(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, unint64_t a6, uint64_t a7)
{
  if (a2 < 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v31 = a6;
  if (!a2) {
    return result;
  }
  unsigned int v8 = v31;
  if ((v31 & 0x8000000000000000) != 0 || HIDWORD(v31))
  {
LABEL_14:
    uint64_t result = sub_1DCB88C58();
    __break(1u);
    return result;
  }
  uint64_t v9 = result;
  uint64_t v10 = a4;
  uint64_t v11 = a5;
  int v12 = *(_DWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters);
  int v22 = *(_DWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 4);
  uint64_t v13 = *(void *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 8);
  int v14 = *(_DWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 16);
  int v15 = *(_DWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 20);
  char v16 = *(unsigned char *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 24);
  long long v21 = *(_OWORD *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 28);
  uint64_t v17 = *(void *)(a7 + OBJC_IVAR____SNLogMelSpectrogramCustomModel_logMelExtractionParameters + 44);
  uint64_t v18 = 4 * a5;
  uint64_t v19 = 4 * a4;
  for (uint64_t i = 1; ; ++i)
  {
    v24[0] = v12;
    v24[1] = v22;
    uint64_t v25 = v13;
    int v26 = v14;
    int v27 = v15;
    char v28 = v16;
    long long v29 = v21;
    uint64_t v30 = v17;
    uint64_t result = sub_1DCB5E904(v9, a3, v8, (uint64_t)v24);
    if (a2 == i) {
      break;
    }
    if ((unsigned __int128)(v10 * (__int128)i) >> 64 != (v10 * i) >> 63)
    {
      __break(1u);
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    if ((unsigned __int128)(v11 * (__int128)i) >> 64 != (v11 * i) >> 63) {
      goto LABEL_12;
    }
    v9 += v18;
    a3 += v19;
    unsigned int v8 = v31;
  }
  return result;
}

void sub_1DCADD848()
{
}

uint64_t type metadata accessor for _SNLogMelSpectrogramCustomModel()
{
  return self;
}

uint64_t sub_1DCADD900(uint64_t a1, uint64_t a2)
{
  return sub_1DC8D92A0(a2);
}

uint64_t sub_1DCADD918(uint64_t a1, unsigned char *a2)
{
  *a2 = 5;
  return swift_willThrow();
}

void sub_1DCADD938()
{
  sub_1DCA896D4();
}

uint64_t sub_1DCADD950()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1DCADD970()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DCADD9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  sub_1DC88D538();
  uint64_t v29 = v7;
  uint64_t v30 = v6;
  MEMORY[0x1F4188790](v6);
  int v26 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 24);
  sub_1DC88D538();
  uint64_t v31 = v11;
  MEMORY[0x1F4188790](v12);
  int v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v15 + 32);
  uint64_t v17 = *(void *)(v15 + 16);
  sub_1DCADEC0C();
  sub_1DCADEC0C();
  swift_getAssociatedConformanceWitness();
  sub_1DCB872C8();
  uint64_t v18 = sub_1DCB872A8();
  uint64_t v25 = v4;
  uint64_t v19 = *v4;
  uint64_t v32 = v18;
  swift_getWitnessTable();
  sub_1DCB873A8();
  v19();
  swift_release();
  uint64_t v20 = *(void *)(a2 + 40);
  uint64_t v32 = v17;
  uint64_t v33 = v10;
  uint64_t v34 = v16;
  uint64_t v35 = v20;
  type metadata accessor for CompletingTee.TeeSink();
  sub_1DCADDC94();
  uint64_t v32 = v21;
  swift_getWitnessTable();
  sub_1DCB87388();
  uint64_t v32 = v17;
  uint64_t v33 = v10;
  uint64_t v22 = v27;
  uint64_t v34 = v27;
  uint64_t v35 = v16;
  uint64_t v36 = v20;
  uint64_t v37 = v28;
  type metadata accessor for CompletingTee.TeeFork();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v26, v30, v22);
  uint64_t v32 = sub_1DCADDCC4(v18);
  swift_retain();
  swift_getWitnessTable();
  sub_1DCB87518();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v10);
}

double sub_1DCADDC94()
{
  uint64_t v0 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  return result;
}

uint64_t sub_1DCADDCC4(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DCADDF34(a1);
  return v2;
}

uint64_t sub_1DCADDD14(void *a1)
{
  sub_1DC8B9960((uint64_t)a1, (uint64_t)v4);
  swift_beginAccess();
  sub_1DC9046E8((uint64_t)v4, v1 + 16);
  swift_endAccess();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB87218();
  return sub_1DCB87248();
}

uint64_t sub_1DCADDD9C()
{
  uint64_t v3 = 0;
  memset(v2, 0, sizeof(v2));
  swift_beginAccess();
  sub_1DC9046E8((uint64_t)v2, v0 + 16);
  return swift_endAccess();
}

uint64_t sub_1DCADDDF8()
{
  sub_1DC904960(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompletingTee.TeeSink()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCADDE48()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCADDEEC(void *a1)
{
  return sub_1DCADDD14(a1);
}

uint64_t sub_1DCADDF10()
{
  return sub_1DCADDD9C();
}

uint64_t sub_1DCADDF34(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1DC8FB9A8();
  sub_1DC8FB9A8();
  (*(void (**)(void))(*(void *)(*(void *)(v2 + 96) - 8) + 32))();
  return v1;
}

uint64_t *sub_1DCADDFA0()
{
  uint64_t v1 = *v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = sub_1DCB871D8();
  sub_1DC88D538();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - v7;
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)&v10 - v7, 1, 1, AssociatedTypeWitness);
  sub_1DCB87288();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  return v0;
}

uint64_t sub_1DCADE13C()
{
  sub_1DCADDFA0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompletingTee.TeeFork()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCADE1AC()
{
  return sub_1DCB871A8();
}

uint64_t sub_1DCADE20C()
{
  return sub_1DCB871B8();
}

uint64_t sub_1DCADE280()
{
  return sub_1DCB87198();
}

uint64_t sub_1DCADE2F4()
{
  return sub_1DCADE1AC();
}

uint64_t sub_1DCADE318()
{
  return sub_1DCADE20C();
}

uint64_t sub_1DCADE33C()
{
  return sub_1DCADE280();
}

uint64_t sub_1DCADE360()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCADE37C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCADE398()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t sub_1DCADE3A4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1DCADE444(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (void *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1DCADE550(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_1DCADE5C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_retain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_1DCADE654(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_OWORD *sub_1DCADE6E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_1DCADE754(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1DCADE7DC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 16) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(((unint64_t)a1 + v7 + 16) & ~v7, v6, v4);
      }
      uint64_t v16 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_1DCADE96C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 16) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1DCADEBB8);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v21 = (unint64_t)&a1[v10 + 16] & ~v10;
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v21, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v20 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            uint64_t v20 = (a2 - 1);
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CompletingTee()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCADEBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCADD9B4(a1, a4, a2, a3);
}

uint64_t sub_1DCADEC0C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1DCADEC40()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCADECE0()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1DCADED58()
{
  sub_1DCADECE0();

  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for AsyncSharedValue()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCADED9C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t sub_1DCADEE0C()
{
  sub_1DCADED9C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeAsyncSharedValue()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCADEE7C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1DCADEE9C, 0, 0);
}

uint64_t sub_1DCADEE9C()
{
  sub_1DCADFF1C();
  sub_1DCADFF1C();
  uint64_t v0 = sub_1DCADFF08();
  sub_1DC8866A0(v0);
  uint64_t v1 = sub_1DCADFF08();
  return v2(v1);
}

uint64_t sub_1DCADEF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return swift_release();
}

uint64_t sub_1DCADEF94()
{
  sub_1DC8867A8();
  uint64_t v2 = v1;
  *(void *)(v0 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1DCADFF04;
  return sub_1DCADEE7C(v2);
}

uint64_t sub_1DCADF028(uint64_t a1)
{
  return sub_1DCADEF20(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1DCADF048()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DCADF0D4;
  return sub_1DC977FC0();
}

uint64_t sub_1DCADF0D4(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 24) = a1;
  swift_task_dealloc();
  if (v1)
  {
    unsigned int v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    char v12 = (uint64_t (*)(void))((char *)&dword_1EAAA26B0 + dword_1EAAA26B0);
    size_t v11 = (void *)swift_task_alloc();
    *(void *)(v5 + 32) = v11;
    *size_t v11 = v7;
    v11[1] = sub_1DCADF23C;
    return v12();
  }
}

uint64_t sub_1DCADF23C(char a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unsigned int v9 = sub_1DCADF5DC;
  }
  else
  {
    *(unsigned char *)(v5 + 104) = a1 & 1;
    unsigned int v9 = sub_1DCADF33C;
  }
  return MEMORY[0x1F4188298](v9, 0, 0);
}

uint64_t sub_1DCADF33C()
{
  if (*(unsigned char *)(v0 + 104) == 1)
  {
    *(void *)(v0 + 48) = *(void *)(*(void *)(v0 + 24) + 24);
    uint64_t v4 = (uint64_t (*)(void))((char *)&dword_1EAAA26B8 + dword_1EAAA26B8);
    swift_retain();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v1;
    void *v1 = v0;
    v1[1] = sub_1DCADF450;
    return v4();
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(uint64_t, void, void, void))(v0 + 8);
    return v3(1, 0, 0, 0);
  }
}

uint64_t sub_1DCADF450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC886774();
  uint64_t v11 = v10;
  sub_1DC88679C();
  *char v12 = v11;
  uint64_t v13 = *v5;
  sub_1DC88679C();
  *unsigned int v14 = v13;
  v11[8] = v4;
  swift_task_dealloc();
  if (v4)
  {
    int v15 = sub_1DCADF63C;
  }
  else
  {
    swift_release();
    void v11[9] = a4;
    v11[10] = a3;
    v11[11] = a2;
    v11[12] = a1;
    int v15 = sub_1DCADF574;
  }
  return MEMORY[0x1F4188298](v15, 0, 0);
}

uint64_t sub_1DCADF574()
{
  sub_1DC8867A8();
  swift_release();
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  return v5(v1, v2, v3, v4);
}

uint64_t sub_1DCADF5DC()
{
  sub_1DC8867A8();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DCADF63C()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DCADF6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1DCAD2DD0();
  v12[3] = MEMORY[0x1E4FBB390];
  v12[4] = &off_1F37F4970;
  LOBYTE(v12[0]) = a2 != 1;
  swift_retain();
  sub_1DC9B0020(v12);
  if (v5)
  {
    swift_release();
    swift_release();
    return sub_1DC8818D0((uint64_t)v12);
  }
  else
  {
    swift_release();
    sub_1DC8818D0((uint64_t)v12);
    if (a2 == 1) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = a2;
    }
    if (a2 == 1)
    {
      a3 = 0;
      a4 = 0;
      a5 = 0;
    }
    swift_retain();
    sub_1DC884B30(v11, a3, a4, a5);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1DCADF7C0(uint64_t a1)
{
  return sub_1DCADF6A8(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1DCADF7E0()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DCADF874;
  return sub_1DCADF048();
}

uint64_t sub_1DCADF874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC886774();
  uint64_t v11 = v10;
  sub_1DC88679C();
  *char v12 = v11;
  uint64_t v13 = *v5;
  sub_1DC88679C();
  *unsigned int v14 = v13;
  swift_task_dealloc();
  if (!v4)
  {
    int v15 = *(void **)(v11 + 16);
    *int v15 = a1;
    v15[1] = a2;
    id v15[2] = a3;
    v15[3] = a4;
  }
  unsigned int v16 = *(uint64_t (**)(void))(v13 + 8);
  return v16();
}

void *destroy for OptionalOptionalProxy(void *result)
{
  if (*result >= 2uLL)
  {
    swift_release();
    return (void *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for OptionalOptionalProxy(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (*a2 && v3 != 1)
  {
    *(void *)a1 = v3;
    uint64_t v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v5;
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v4 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  return a1;
}

unint64_t *assignWithCopy for OptionalOptionalProxy(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 != 1)
  {
    if (v4 == 1)
    {
      sub_1DCADFB0C(a1);
    }
    else
    {
      if (!*a1)
      {
        if (!v4) {
          goto LABEL_3;
        }
LABEL_11:
        unint64_t v9 = a2[1];
        *a1 = v4;
        a1[1] = v9;
        unint64_t v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        swift_retain();
        swift_retain();
        return a1;
      }
      if (v4)
      {
        unint64_t v7 = a2[1];
        *a1 = v4;
        a1[1] = v7;
        swift_retain();
        swift_release();
        unint64_t v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        swift_retain();
        swift_release();
        return a1;
      }
      sub_1DC923F50((uint64_t)a1);
    }
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
    return a1;
  }
  if (v4 > 1) {
    goto LABEL_11;
  }
LABEL_3:
  long long v5 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v5;
  return a1;
}

void *sub_1DCADFB0C(void *a1)
{
  return a1;
}

uint64_t assignWithTake for OptionalOptionalProxy(uint64_t a1, uint64_t *a2)
{
  if (*(void *)a1 == 1) {
    goto LABEL_8;
  }
  uint64_t v4 = *a2;
  if (*a2 == 1)
  {
    sub_1DCADFB0C((void *)a1);
LABEL_8:
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (!*(void *)a1) {
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_1DC923F50(a1);
    goto LABEL_8;
  }
  uint64_t v5 = a2[1];
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionalOptionalProxy(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *((unsigned char *)a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v4 = v3 - 1;
      if (v4 < 0) {
        int v4 = -1;
      }
      BOOL v5 = __OFSUB__(v4, 1);
      int v2 = v4 - 1;
      if (v2 < 0 != v5) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionalOptionalProxy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 2147483646;
    *(void *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionalOptionalProxy()
{
  return &type metadata for OptionalOptionalProxy;
}

void *destroy for OptionalProxy(void *result)
{
  if (*result)
  {
    swift_release();
    return (void *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for OptionalProxy(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v3 = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = v3;
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  return a1;
}

void *assignWithCopy for OptionalProxy(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1DC923F50((uint64_t)a1);
      long long v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v9;
    }
  }
  else if (v4)
  {
    uint64_t v7 = a2[1];
    *a1 = v4;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v10;
  }
  return a1;
}

uint64_t assignWithTake for OptionalProxy(uint64_t a1, uint64_t a2)
{
  if (!*(void *)a1) {
    goto LABEL_5;
  }
  if (!*(void *)a2)
  {
    sub_1DC923F50(a1);
LABEL_5:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    return a1;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionalProxy(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionalProxy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionalProxy()
{
  return &type metadata for OptionalProxy;
}

uint64_t sub_1DCADFF08()
{
  return v0;
}

uint64_t sub_1DCADFF1C()
{
  return sub_1DC884F60(v0);
}

ValueMetadata *type metadata accessor for AudioConverterError()
{
  return &type metadata for AudioConverterError;
}

uint64_t sub_1DCADFF4C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DCADFF9C(a1);
  return v2;
}

uint64_t sub_1DCADFF9C(uint64_t a1)
{
  sub_1DCA05D84();
  sub_1DC8F0494();
  (*(void (**)(void))(v3 + 32))();
  *(void *)(v1 + *(void *)(*(void *)v1 + 120)) = a1;
  return v1;
}

uint64_t sub_1DCAE0024()
{
  return sub_1DCB871A8();
}

uint64_t sub_1DCAE0084()
{
  uint64_t v2 = (void *)sub_1DC93B7D8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DCAE03E4);
  uint64_t v0 = sub_1DCB871B8();
  sub_1DCAE0404(v2);
  return v0;
}

void sub_1DCAE0144(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + *(void *)(*(void *)a1 + 120));
  id v8 = a2;
  sub_1DCABE2A0(v7, v8);
  if (v4)
  {
    *a3 = v4;
  }
  else
  {
    *a4 = v8;
    id v9 = v8;
  }
}

uint64_t sub_1DCAE01CC()
{
  return sub_1DCB87198();
}

uint64_t sub_1DCAE0268()
{
  sub_1DCA05D84();
  sub_1DC8F0494();
  (*(void (**)(void))(v1 + 8))();
  swift_release();
  return v0;
}

uint64_t sub_1DCAE02E8()
{
  sub_1DCAE0268();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WriteToFile.Impl.Inner()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCAE0358()
{
  return sub_1DCAE0024();
}

uint64_t sub_1DCAE037C()
{
  return sub_1DCAE0084();
}

uint64_t sub_1DCAE03A4()
{
  return sub_1DCAE01CC();
}

uint64_t sub_1DCAE03C8()
{
  return swift_getWitnessTable();
}

void sub_1DCAE03E4(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DCAE0144(*(void *)(v2 + 16), *(void **)(v2 + 24), a1, a2);
}

void sub_1DCAE0404(id a1)
{
}

uint64_t type metadata accessor for WriteToFile()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE044C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC88D538();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *(void *)(v4 + *(int *)(v14 + 40));
  uint64_t v21 = v4 + *(int *)(v14 + 36);
  uint64_t v22 = v15;
  sub_1DC87E988(&qword_1EAA9E2E0);
  swift_allocObject();
  uint64_t v16 = sub_1DCABB904((void (*)(uint64_t *__return_ptr))sub_1DCAE1388);
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v23 = v17;
  uint64_t v24 = a3;
  uint64_t v25 = v18;
  uint64_t v26 = a4;
  type metadata accessor for WriteToFile.Impl.Inner();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, a3);
  uint64_t v23 = sub_1DCADFF4C(v16);
  swift_getWitnessTable();
  sub_1DCB87388();
  return swift_release();
}

uint64_t sub_1DCAE0614@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1DC8F0494();
  (*(void (**)(uint64_t))(v6 + 32))(a3);
  uint64_t v7 = type metadata accessor for WriteToFile.Impl();
  uint64_t v8 = a3 + *(int *)(v7 + 36);
  sub_1DCB86A18();
  sub_1DC8F0494();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, a1);
  *(void *)(a3 + *(int *)(v7 + 40)) = a2;
  return result;
}

uint64_t sub_1DCAE06E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAE044C(a1, a4, a2, a3);
}

uint64_t sub_1DCAE06F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v42 = a1;
  sub_1DCB86A18();
  sub_1DC88D538();
  uint64_t v40 = v8;
  uint64_t v41 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1DC88D550();
  uint64_t v39 = v9;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v37 = a2;
  sub_1DC88D538();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  uint64_t v15 = v14;
  uint64_t v38 = *(void *)(a2 + 24);
  uint64_t v16 = type metadata accessor for WriteToFile.Impl();
  sub_1DC8F0494();
  MEMORY[0x1F4188790](v17);
  int v19 = (char *)&v33 - v18;
  unint64_t v20 = sub_1DCAE09A4();
  unint64_t v36 = v20;
  uint64_t v21 = sub_1DC8863A8(&qword_1EAA9DF60);
  uint64_t v35 = v21;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v45 = v16;
  unint64_t v46 = v20;
  uint64_t v47 = v21;
  uint64_t v48 = WitnessTable;
  uint64_t v22 = type metadata accessor for ExpandResult();
  sub_1DC88D538();
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v33 - v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v5, v10);
  uint64_t v28 = v37;
  uint64_t v29 = v39;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v5 + *(int *)(v37 + 36), v41);
  uint64_t v30 = *(void **)(v5 + *(int *)(v28 + 40));
  sub_1DCAE0614(v29, (uint64_t)v30, (uint64_t)v19);
  sub_1DCA5D800((uint64_t)v19, v16, (uint64_t)v27);
  id v31 = v30;
  sub_1DCA5D838(v42, v22, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, v22);
}

uint64_t sub_1DCAE0978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAE06F4(a1, a4, a2, a3);
}

uint64_t type metadata accessor for WriteToFile.Impl()
{
  return sub_1DC8866E4();
}

unint64_t sub_1DCAE09A4()
{
  unint64_t result = qword_1EAAA0ED8;
  if (!qword_1EAAA0ED8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAA0ED8);
  }
  return result;
}

uint64_t sub_1DCAE09E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DCB86A18();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DCAE0ABC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  sub_1DC88D538();
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 + 64);
  sub_1DCB86A18();
  sub_1DC88D538();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  int v15 = *(_DWORD *)(v12 + 80);
  uint64_t v16 = v15;
  uint64_t v17 = v9 + v15;
  uint64_t v18 = *(void *)(v14 + 64) + 7;
  unsigned int v19 = v15 | *(_DWORD *)(v7 + 80) & 0xF8;
  int v20 = (*(_DWORD *)(v7 + 80) | v15) & 0x100000;
  if (v19 > 7 || v20 != 0 || ((v18 + (v17 & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + (((v19 | 7) + 16) & ~(unint64_t)(v19 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v24 = v10;
    uint64_t v25 = ~v16;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v5);
    unint64_t v26 = ((unint64_t)a2 + v17) & v25;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))(((unint64_t)a1 + v17) & v25, v26, v24);
    uint64_t v27 = *(void **)((v18 + v26) & 0xFFFFFFFFFFFFFFF8);
    *(void *)((v18 + (((unint64_t)a1 + v17) & v25)) & 0xFFFFFFFFFFFFFFF8) = v27;
    id v28 = v27;
  }
  return a1;
}

void sub_1DCAE0C20(uint64_t a1)
{
  sub_1DC8F0494();
  uint64_t v3 = v2 + 8;
  (*(void (**)(void))(v2 + 8))();
  uint64_t v4 = *(void *)(v3 + 56);
  sub_1DCB86A18();
  sub_1DC8F0494();
  uint64_t v6 = v5 + 8;
  unint64_t v7 = (v4 + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v7);
  uint64_t v8 = *(void **)((*(void *)(v6 + 56) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1DCAE0CDC()
{
  sub_1DCAB8E30();
  (*(void (**)(void))(v1 + 16))();
  sub_1DCB86A18();
  sub_1DC8F0494();
  uint64_t v3 = v2 + 16;
  uint64_t v4 = sub_1DCAE13A4();
  v5(v4);
  sub_1DCAE13E4(*(void *)(v3 + 48));
  id v7 = v6;
  return v0;
}

uint64_t sub_1DCAE0D68()
{
  sub_1DCAB8E30();
  (*(void (**)(void))(v1 + 24))();
  sub_1DCB86A18();
  sub_1DC8F0494();
  uint64_t v2 = sub_1DCAE13A4();
  v3(v2);
  sub_1DCAE1404();
  uint64_t v5 = *v4;
  *uint64_t v4 = v6;
  id v7 = v6;

  return v0;
}

uint64_t sub_1DCAE0E00()
{
  sub_1DCAB8E30();
  (*(void (**)(void))(v1 + 32))();
  sub_1DCB86A18();
  sub_1DC8F0494();
  uint64_t v3 = v2 + 32;
  uint64_t v4 = sub_1DCAE13A4();
  v5(v4);
  sub_1DCAE13E4(*(void *)(v3 + 32));
  return v0;
}

uint64_t sub_1DCAE0E88()
{
  sub_1DCAB8E30();
  (*(void (**)(void))(v1 + 40))();
  sub_1DCB86A18();
  sub_1DC8F0494();
  uint64_t v2 = sub_1DCAE13A4();
  v3(v2);
  sub_1DCAE1404();
  uint64_t v5 = *v4;
  *uint64_t v4 = v6;

  return v0;
}

uint64_t sub_1DCAE0F1C(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  sub_1DCB86A18();
  sub_1DCAE13C8();
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(v9 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v8;
  uint64_t v16 = *(void *)(v6 + 64) + v13;
  uint64_t v17 = v14 + 7;
  if (v12 < a2)
  {
    unint64_t v18 = ((v17 + (v16 & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v19 = v18 & 0xFFFFFFF8;
    if ((v18 & 0xFFFFFFF8) != 0) {
      unsigned int v20 = 2;
    }
    else {
      unsigned int v20 = a2 - v12 + 1;
    }
    if (v20 >= 0x10000) {
      unsigned int v21 = 4;
    }
    else {
      unsigned int v21 = 2;
    }
    if (v20 < 0x100) {
      unsigned int v21 = 1;
    }
    if (v20 >= 2) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    switch(v22)
    {
      case 1:
        int v23 = *((unsigned __int8 *)a1 + v18);
        if (!v23) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v23 = *(unsigned __int16 *)((char *)a1 + v18);
        if (v23) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCAE110CLL);
      case 4:
        int v23 = *(int *)((char *)a1 + v18);
        if (!v23) {
          break;
        }
LABEL_24:
        int v25 = v23 - 1;
        if (v19)
        {
          int v25 = 0;
          int v26 = *a1;
        }
        else
        {
          int v26 = 0;
        }
        return v12 + (v26 | v25) + 1;
      default:
        break;
    }
  }
  if (v7 == v12)
  {
    uint64_t v27 = (uint64_t)a1;
    uint64_t v11 = v7;
    uint64_t v15 = v5;
LABEL_30:
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v27, v11, v15);
  }
  uint64_t v27 = ((unint64_t)a1 + v16) & ~v13;
  if (v11 == v12) {
    goto LABEL_30;
  }
  unint64_t v28 = *(void *)((v17 + v27) & 0xFFFFFFFFFFFFFFF8);
  if (v28 >= 0xFFFFFFFF) {
    LODWORD(v28) = -1;
  }
  return (v28 + 1);
}

void sub_1DCAE1120(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  sub_1DCB86A18();
  sub_1DCAE13C8();
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  if (v13 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = *(void *)(v8 + 64) + v15;
  uint64_t v17 = *(void *)(v11 + 64) + 7;
  size_t v18 = ((v17 + (v16 & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v17 + (v16 & ~v15)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v19 = a3 - v14 + 1;
  }
  else {
    unsigned int v19 = 2;
  }
  if (v19 >= 0x10000) {
    int v20 = 4;
  }
  else {
    int v20 = 2;
  }
  if (v19 < 0x100) {
    int v20 = 1;
  }
  if (v19 >= 2) {
    unsigned int v21 = v20;
  }
  else {
    unsigned int v21 = 0;
  }
  if (v14 < a3) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  if (a2 > v14)
  {
    if (((v17 + (v16 & ~v15)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v23 = a2 - v14;
    }
    else {
      int v23 = 1;
    }
    if (((v17 + (v16 & ~v15)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v24 = ~v14 + a2;
      bzero(a1, v18);
      *a1 = v24;
    }
    switch(v22)
    {
      case 1:
        *((unsigned char *)a1 + v18) = v23;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v18) = v23;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)((char *)a1 + v18) = v23;
        return;
      default:
        return;
    }
  }
  uint64_t v25 = ~v15;
  uint64_t v26 = v10;
  switch(v22)
  {
    case 1:
      *((unsigned char *)a1 + v18) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)((char *)a1 + v18) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1DCAE1360);
    case 4:
      *(_DWORD *)((char *)a1 + v18) = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      if (v9 == v14)
      {
        uint64_t v27 = (uint64_t)a1;
        uint64_t v28 = a2;
        uint64_t v13 = v9;
        uint64_t v26 = v7;
      }
      else
      {
        uint64_t v27 = ((unint64_t)a1 + v16) & v25;
        if (v13 != v14)
        {
          uint64_t v29 = (void *)((v17 + v27) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v30 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v30 = (a2 - 1);
          }
          *uint64_t v29 = v30;
          return;
        }
        uint64_t v28 = a2;
      }
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v27, v28, v13, v26);
      return;
  }
}

id sub_1DCAE1388@<X0>(void *a1@<X8>)
{
  return sub_1DCABB828(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1DCAE13A4()
{
  return (v2 + v0 + v1) & ~v0;
}

void sub_1DCAE13E4(uint64_t a1@<X8>)
{
  *(void *)((a1 + 7 + v2) & 0xFFFFFFFFFFFFFFF8) = *(void *)((a1 + 7 + v1) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t type metadata accessor for HashableCodableNSObject()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE1438(uint64_t a1)
{
  v4[9] = a1;
  sub_1DCB891A8();
  uint64_t v1 = type metadata accessor for HashableCodableNSObject();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DCA96758((uint64_t)v4, v1, WitnessTable);
  return sub_1DCB891F8();
}

uint64_t sub_1DCAE14B8()
{
  return sub_1DCAE1438(*v0);
}

uint64_t sub_1DCAE14C8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1DCA96758(a1, a2, WitnessTable);
}

uint64_t sub_1DCAE1528(uint64_t a1, uint64_t a2)
{
  sub_1DCB891A8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DCA96758((uint64_t)v5, a2, WitnessTable);
  return sub_1DCB891F8();
}

id sub_1DCAE158C@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_1DCAE1598(void *a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DCAF0288(a1, a2, WitnessTable);
}

uint64_t sub_1DCAE15FC(void *a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DCAF03E4(a1, a2, WitnessTable);
}

id sub_1DCAE1658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1DCA966A4(a1, a2, a3, WitnessTable);
}

uint64_t sub_1DCAE16C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE16E0(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1DCAE1760(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.ContiguousSamples()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE180C()
{
  return swift_getWitnessTable();
}

void *sub_1DCAE1828(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAE1840(a1, a2, a3, a4);
}

void *sub_1DCAE1840(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[3] = a4;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_1DCB88898();
  sub_1DCB888B8();
  sub_1DCB88838();
  v10[0] = *(void *)(v4 + 8) + *(void *)(*(void *)(v6 - 8) + 72) * *(void *)(v4 + 16);
  uint64_t v8 = v10[0];
  v10[1] = v7;
  a1(v10);
  return sub_1DCAE71A4(v10, v8, v7);
}

uint64_t sub_1DCAE1928()
{
  return sub_1DCB88848();
}

uint64_t sub_1DCAE1940@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    uint64_t v7 = *(void *)(v2 + 40);
    uint64_t v6 = *(void *)(v2 + 48);
    uint64_t v8 = *(void *)(v2 + 16);
    long long v9 = *(_OWORD *)v2;
    uint64_t result = sub_1DC88CD74(v2);
    *(_OWORD *)a2 = v9;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v4;
    *(void *)(a2 + 32) = v3;
    *(void *)(a2 + 40) = v7;
    *(void *)(a2 + 48) = v6;
  }
  return result;
}

uint64_t sub_1DCAE19BC(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v3 * v2;
  if ((unsigned __int128)(v3 * (__int128)v2) >> 64 != (v3 * v2) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v1[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  if (v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v1[4];
  uint64_t v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = v9 * v2;
  if ((unsigned __int128)(v9 * (__int128)v2) >> 64 != (v9 * v2) >> 63)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = v1[6];
  if (__OFADD__(v10, v11))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v10 + v11 >= v7) {
    return MEMORY[0x1F4183FE0](v7);
  }
LABEL_13:
  __break(1u);
  return MEMORY[0x1F4183FE0](a1);
}

uint64_t sub_1DCAE1A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41842B8](a1, a2, a3, a4, MEMORY[0x1E4FBB590]);
}

uint64_t sub_1DCAE1A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41842C8](a1, a2, a3, a4, MEMORY[0x1E4FBB590]);
}

uint64_t sub_1DCAE1A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE1AD4()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE1B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t (*sub_1DCAE1BCC(void *a1, uint64_t *a2))()
{
  uint64_t v5 = malloc(0x80uLL);
  *a1 = v5;
  uint64_t v6 = *a2;
  long long v7 = *(_OWORD *)(v2 + 16);
  *uint64_t v5 = *(_OWORD *)v2;
  v5[1] = v7;
  _OWORD v5[2] = *(_OWORD *)(v2 + 32);
  *((void *)v5 + 6) = *(void *)(v2 + 48);
  *((void *)v5 + 15) = sub_1DCAE1C70((void *)v5 + 7, v6);
  long long v9 = *v8;
  *((void *)v5 + 11) = v10;
  *((void *)v5 + 12) = v11;
  *(_OWORD *)((char *)v5 + 104) = v9;
  return sub_1DCAE1C6C;
}

uint64_t (*sub_1DCAE1C70(void *a1, uint64_t a2))()
{
  uint64_t v3 = sub_1DCAE36F0(a2);
  a1[1] = v4;
  a1[2] = v3;
  *a1 = v5;
  return sub_1DCAE7B70;
}

double sub_1DCAE1CD0@<D0>(unint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  *(void *)&double result = sub_1DCAE4C94(*a1, a1[1], (void (*)(__n128 *))sub_1DCAE7B8C, a2).n128_u64[0];
  return result;
}

uint64_t sub_1DCAE1D30()
{
  swift_getWitnessTable();

  return sub_1DCB88098();
}

void sub_1DCAE1D9C()
{
}

uint64_t sub_1DCAE1DB4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE1E08(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE1E5C()
{
  sub_1DC87E988(qword_1EAA9C830);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v0 + 16) = xmmword_1DCBB93B0;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 32) = 7303014;
  *(void *)(v0 + 40) = 0xE300000000000000;
  sub_1DCB89188();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAE1EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DCAE7E34();
  sub_1DCAE7C38();
  MEMORY[0x1F4188790](v8);
  (*(void (**)(unsigned char *))(v10 + 16))(&v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  uint64_t v11 = *(void *)(v6 + 16);
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousFrames();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    long long v25 = *(_OWORD *)&v21[8];
    long long v26 = v22;
    long long v27 = v23;
    uint64_t v28 = v24;
    uint64_t v13 = v4[5];
    uint64_t v14 = v4[6];
    BOOL v15 = __OFSUB__(v14, v13);
    uint64_t v16 = v14 - v13;
    if (v15)
    {
      __break(1u);
    }
    else
    {
      uint64_t v17 = v28 - *((void *)&v27 + 1);
      if (!__OFSUB__(v28, *((void *)&v27 + 1)))
      {
        uint64_t v18 = v16 + v17;
        if (!__OFADD__(v16, v17))
        {
          uint64_t v19 = v27 - *((void *)&v26 + 1);
          if (!__OFSUB__((void)v27, *((void *)&v26 + 1)))
          {
            uint64_t result = v18 * v19;
            if ((unsigned __int128)(v18 * (__int128)v19) >> 64 == (v18 * v19) >> 63)
            {
              MEMORY[0x1F4188790](result);
              *(void *)&v21[-48] = v11;
              *(void *)&v21[-40] = v5;
              *(void *)&v21[-32] = a4;
              *(void *)&v21[-24] = v4;
              *(void *)&v21[-16] = v18;
              *(void *)&v21[-8] = &v25;
              uint64_t v20 = sub_1DCB87D08();
              uint64_t result = sub_1DC8CBD50((uint64_t)&v25);
              if (((v18 | v19) & 0x8000000000000000) == 0)
              {
                uint64_t result = swift_bridgeObjectRelease();
                *uint64_t v4 = v20;
                v4[1] = v19;
                _OWORD v4[2] = v18;
                v4[3] = 0;
                _OWORD v4[4] = v19;
                void v4[5] = 0;
                v4[6] = v18;
                return result;
              }
LABEL_15:
              __break(1u);
              return result;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1DCAE20A0()
{
  return sub_1DCB87CE8();
}

uint64_t sub_1DCAE21A0(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v7 = a3[4];
  uint64_t v24 = a3[3];
  uint64_t v23 = v7;
  uint64_t v21 = v7 - v24;
  if (v7 != v24)
  {
    if (v7 >= v24)
    {
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = v24 + v11;
        if (v24 + v11 >= v23) {
          break;
        }
        if (__OFADD__(v11, 1)) {
          goto LABEL_16;
        }
        uint64_t result = sub_1DCB878D8();
        if (!result) {
          goto LABEL_23;
        }
        uint64_t v13 = a3[2];
        uint64_t v14 = v13 * v12;
        if ((unsigned __int128)(v13 * (__int128)v12) >> 64 != (v13 * v12) >> 63) {
          goto LABEL_17;
        }
        uint64_t v15 = result;
        uint64_t v16 = *(void *)(*(void *)(a7 - 8) + 72);
        uint64_t v17 = a3[5];
        uint64_t result = sub_1DCB878D8();
        if (!result) {
          goto LABEL_24;
        }
        if ((unsigned __int128)(a5 * (__int128)v11) >> 64 != (a5 * v11) >> 63) {
          goto LABEL_18;
        }
        uint64_t v18 = a3[5];
        uint64_t v19 = a3[6];
        uint64_t v20 = v19 - v18;
        if (__OFSUB__(v19, v18)) {
          goto LABEL_19;
        }
        if ((unsigned __int128)(v16 * (__int128)v20) >> 64 != (v16 * v20) >> 63) {
          goto LABEL_20;
        }
        uint64_t result = (uint64_t)memmove((void *)(result + v16 * a5 * v11), (const void *)(v15 + v16 * v14 + v17 * v16), v16 * v20);
        if (__OFADD__(*a6, v20)) {
          goto LABEL_21;
        }
        *a6 += v20;
        if (v21 == ++v11) {
          return result;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCAE2320(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v8 = a3[4];
  uint64_t v30 = a3[3];
  uint64_t v29 = v8;
  uint64_t v26 = v8 - v30;
  if (v8 != v30)
  {
    if (v8 >= v30)
    {
      uint64_t v11 = 0;
      uint64_t v12 = a3[2];
      uint64_t v13 = a3[6];
      uint64_t v24 = a3[5];
      uint64_t v14 = v13 - v24;
      BOOL v15 = __OFSUB__(v13, v24);
      BOOL v25 = v15;
      while (1)
      {
        uint64_t v16 = v30 + v11;
        if (v30 + v11 >= v29) {
          break;
        }
        if (__OFADD__(v11, 1)) {
          goto LABEL_20;
        }
        uint64_t result = sub_1DCB878D8();
        if (!result) {
          goto LABEL_28;
        }
        uint64_t v17 = v12 * v16;
        if ((unsigned __int128)(v12 * (__int128)v16) >> 64 != (v12 * v16) >> 63) {
          goto LABEL_21;
        }
        uint64_t v18 = result;
        uint64_t v19 = *(void *)(*(void *)(a8 - 8) + 72);
        uint64_t result = sub_1DCB878D8();
        if (!result) {
          goto LABEL_29;
        }
        uint64_t v20 = *(void *)(a5 + 40);
        uint64_t v21 = *(void *)(a5 + 48);
        BOOL v22 = __OFSUB__(v21, v20);
        uint64_t v23 = v21 - v20;
        if (v22) {
          goto LABEL_22;
        }
        if ((unsigned __int128)(a6 * (__int128)v11) >> 64 != (a6 * v11) >> 63) {
          goto LABEL_23;
        }
        if (v25) {
          goto LABEL_24;
        }
        if ((unsigned __int128)(v19 * (__int128)v14) >> 64 != (v19 * v14) >> 63) {
          goto LABEL_25;
        }
        uint64_t result = (uint64_t)memmove((void *)(result + v23 * v19 + v19 * a6 * v11), (const void *)(v18 + v19 * v17 + v19 * v24), v19 * v14);
        if (__OFADD__(*a7, v14)) {
          goto LABEL_26;
        }
        *a7 += v14;
        if (v26 == ++v11) {
          return result;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  return result;
}

double sub_1DCAE24C8@<D0>(uint64_t a1@<X8>)
{
  sub_1DCAE414C((uint64_t)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_1DCAE2518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DCAE1E5C();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);

  return v5(a2, a3);
}

uint64_t sub_1DCAE2584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184548](a1, a4, a2, a5, a3);
}

uint64_t sub_1DCAE25A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DCAE1EE4(a1, a4, a2, a3);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8);

  return v6(a1, a2);
}

uint64_t sub_1DCAE2620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x1F4184510](a1, a2, a5, a3, a6, a4);
}

uint64_t sub_1DCAE2654()
{
  return sub_1DCB88348();
}

uint64_t sub_1DCAE266C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE26F0()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE2774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t (*sub_1DCAE27E8(void *a1, uint64_t *a2))()
{
  long long v5 = malloc(0x98uLL);
  *a1 = v5;
  uint64_t v6 = *a2;
  long long v7 = *(_OWORD *)(v2 + 16);
  *long long v5 = *(_OWORD *)v2;
  v5[1] = v7;
  _OWORD v5[2] = *(_OWORD *)(v2 + 32);
  *((void *)v5 + 6) = *(void *)(v2 + 48);
  *((void *)v5 + 18) = sub_1DCAE28A0((void *)v5 + 14, v6);
  long long v9 = *(_OWORD *)(v8 + 8);
  long long v10 = *(_OWORD *)(v8 + 24);
  long long v11 = *(_OWORD *)(v8 + 40);
  *((void *)v5 + 7) = *(void *)v8;
  long long v5 = (_OWORD *)((char *)v5 + 56);
  *(_OWORD *)((char *)v5 + 8) = v9;
  *(_OWORD *)((char *)v5 + 24) = v10;
  *(_OWORD *)((char *)v5 + 40) = v11;
  return sub_1DCAE289C;
}

uint64_t (*sub_1DCAE28A0(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x38uLL);
  *a1 = v4;
  sub_1DCAE41CC(a2, (uint64_t (*)(long long *))sub_1DCAE7B8C, (uint64_t)v4);
  return sub_1DCAE7C2C;
}

double sub_1DCAE2918@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_1DCAE4244(*a1, a1[1], (void (*)(long long *))sub_1DCAE7B8C, a2).n128_u64[0];
  return result;
}

void sub_1DCAE2978()
{
}

uint64_t sub_1DCAE2990(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE29E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE2A3C()
{
  sub_1DCB888B8();
  swift_getWitnessTable();
  sub_1DCB88098();
  return v1;
}

uint64_t sub_1DCAE2AB8()
{
  uint64_t result = sub_1DCB88848();
  if (!v0) {
    return sub_1DCAE7E68();
  }
  return result;
}

uint64_t sub_1DCAE2AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_1DCAE7C38();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *))(v11 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    long long v13 = v27;
    uint64_t v23 = a4;
    uint64_t v24 = v28;
    *(void *)&long long v25 = v29;
    uint64_t v14 = *(void *)(a2 + 16);
    swift_unknownObjectRetain();
    uint64_t v15 = sub_1DCAE7E14();
    swift_unknownObjectRelease();
    if (v15)
    {
      swift_unknownObjectRetain();
      uint64_t v16 = sub_1DCAE7E14();
      swift_unknownObjectRelease();
      uint64_t v17 = v25;
      uint64_t v18 = sub_1DCB88858();
      BOOL v19 = __OFADD__(v16, v18);
      uint64_t result = v16 + v18;
      if (v19)
      {
        __break(1u);
      }
      else
      {
        MEMORY[0x1F4188790](result);
        *(&v23 - 8) = v14;
        *(&v23 - 7) = a3;
        *(&v23 - 6) = v23;
        *(&v23 - 5) = v5;
        *((_OWORD *)&v23 - 2) = v13;
        *(&v23 - 2) = v13;
        *(&v23 - 1) = v17;
        uint64_t v26 = sub_1DCB87D08();
        sub_1DCB87D78();
        swift_getWitnessTable();
        sub_1DCB878B8();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v20 = v28;
        uint64_t v21 = v29;
        long long v25 = v27;
        uint64_t result = swift_unknownObjectRelease();
        *(_OWORD *)uint64_t v5 = v25;
        *(void *)(v5 + 16) = v20;
        *(void *)(v5 + 24) = v21;
      }
    }
    else
    {
      uint64_t result = swift_unknownObjectRelease();
      *(_OWORD *)uint64_t v4 = v13;
      uint64_t v22 = v25;
      *(void *)(v4 + 16) = v24;
      *(void *)(v4 + 24) = v22;
    }
  }
  return result;
}

uint64_t sub_1DCAE2D48()
{
  return sub_1DCB88848();
}

uint64_t sub_1DCAE2E58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t result = sub_1DCB878D8();
  if (!result
    || (unsigned __int128)(*(uint64_t *)(*(void *)(a5 - 8) + 72) * (__int128)a2) >> 64 == (*(void *)(*(void *)(a5 - 8) + 72)
                                                                                            * a2) >> 63)
  {
    uint64_t result = sub_1DCB878D8();
    if (result
      && (unsigned __int128)(*(uint64_t *)(*(void *)(a5 - 8) + 72) * (__int128)a2) >> 64 != (*(void *)(*(void *)(a5 - 8) + 72)
                                                                                              * a2) >> 63)
    {
      goto LABEL_9;
    }
    uint64_t result = sub_1DCB88778();
    if (!__OFADD__(*a4, a2))
    {
      *a4 += a2;
      return result;
    }
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DCAE2F5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE2A38(*(void *)(a1 + 16));
  *a2 = result;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  return result;
}

uint64_t sub_1DCAE2F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a2, a3);
}

uint64_t sub_1DCAE2FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DCAE2AF8(a1, a4, a2, a3);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8);

  return v6(a1, a2);
}

uint64_t sub_1DCAE3038(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184558](a1, WitnessTable, a2);
}

uint64_t sub_1DCAE30A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184560](a1, a2, WitnessTable, a3);
}

uint64_t sub_1DCAE3114@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DCAE5584(a1, a2, (uint64_t (*)(void, void, void, void, void, void))sub_1DCAE7BEC, a3);
}

uint64_t sub_1DCAE312C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAE55E0(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1DCAE7BEC);
}

uint64_t sub_1DCAE3144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE31C8()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE324C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE32C0()
{
  return sub_1DCAE54B0();
}

uint64_t sub_1DCAE32D8()
{
  return sub_1DCAE54B0();
}

void (*sub_1DCAE32F0(void *a1, uint64_t *a2, uint64_t a3))(void *)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_1DCAE3368(v7, *a2, *v3, v3[1], v3[2], v3[3], *(void *)(a3 + 16));
  return sub_1DC899A50;
}

uint64_t (*sub_1DCAE3368(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))()
{
  uint64_t v7 = *(void *)(a7 - 8);
  *a1 = a7;
  a1[1] = v7;
  a1[2] = malloc(*(void *)(v7 + 64));
  sub_1DCB88908();
  return sub_1DC927C34;
}

uint64_t sub_1DCAE3444@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DCAE54DC(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_1DCAE2AB4, a3);
}

uint64_t sub_1DCAE345C()
{
  return sub_1DCAE5540();
}

uint64_t sub_1DCAE3474@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DCAE5584(a1, a2, (uint64_t (*)(void, void, void, void, void, void))sub_1DCAE7BF0, a3);
}

uint64_t sub_1DCAE348C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAE55E0(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1DCAE7BF0);
}

uint64_t sub_1DCAE34A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAE563C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCAE7BE4, a2);
}

uint64_t sub_1DCAE34BC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE3510(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE3564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DCAE5764(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_1DCAE2AB8);
}

uint64_t sub_1DCAE3590()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE35AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE35C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE35E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE3600()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE361C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE3638()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE3654()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE3670()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE368C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE36F0(uint64_t result)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v2 * result;
  if ((unsigned __int128)(v2 * (__int128)result) >> 64 != (v2 * result) >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v1[5];
  uint64_t result = v3 + v4;
  if (__OFADD__(v3, v4))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = v1[6];
  BOOL v6 = __OFADD__(v3, v5);
  uint64_t v7 = v3 + v5;
  if (v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v7 >= result) {
    return sub_1DCAE7C70(result);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DCAE3738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE37BC()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE3840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

void sub_1DCAE38B4(void *a1)
{
  uint64_t v2 = sub_1DCAE7E40(a1);
  v3(v2);

  free(v1);
}

uint64_t sub_1DCAE38F0()
{
  swift_getWitnessTable();

  return sub_1DCB88098();
}

uint64_t sub_1DCAE395C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE39B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE3A04()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v4 = v0[5];
  uint64_t result = v3 + v4;
  if (__OFADD__(v3, v4)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1DCAE3A30()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  uint64_t v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v4 = v0[5];
  uint64_t result = v3 + v4;
  if (__OFADD__(v3, v4)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1DCAE3A60(uint64_t result)
{
  uint64_t v2 = v1[2];
  if (!v2)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (result == 0x8000000000000000 && v2 == -1) {
    goto LABEL_15;
  }
  uint64_t v4 = result / v2;
  if (result % v2 != v1[5]) {
    goto LABEL_12;
  }
  uint64_t v5 = v4 - 1;
  if (__OFSUB__(v4, 1)) {
    goto LABEL_16;
  }
  uint64_t v6 = v5 * v2;
  if ((unsigned __int128)(v5 * (__int128)v2) >> 64 != (v5 * v2) >> 63)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = v1[6];
  uint64_t result = v6 + v7;
  if (!__OFADD__(v6, v7)) {
    return result;
  }
  __break(1u);
LABEL_12:
  if (__OFSUB__(result--, 1)) {
LABEL_18:
  }
    __break(1u);
  return result;
}

uint64_t sub_1DCAE3AD4(uint64_t result)
{
  uint64_t v2 = v1[2];
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result == 0x8000000000000000 && v2 == -1) {
    goto LABEL_17;
  }
  uint64_t v4 = v1[6];
  BOOL v5 = __OFSUB__(v4, 1);
  uint64_t v6 = v4 - 1;
  if (v5)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = result / v2;
  if (result % v2 != v6) {
    goto LABEL_13;
  }
  BOOL v5 = __OFADD__(v7, 1);
  uint64_t v8 = v7 + 1;
  if (v5) {
    goto LABEL_18;
  }
  uint64_t v9 = v8 * v2;
  if ((unsigned __int128)(v8 * (__int128)v2) >> 64 != (v8 * v2) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = v1[5];
  uint64_t result = v9 + v10;
  if (!__OFADD__(v9, v10)) {
    return result;
  }
  __break(1u);
LABEL_13:
  BOOL v5 = __OFADD__(result++, 1);
  if (v5) {
LABEL_20:
  }
    __break(1u);
  return result;
}

void sub_1DCAE3B54()
{
}

uint64_t sub_1DCAE3B64()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE3B80()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE3BE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE3A60(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAE3C10(uint64_t *a1)
{
  uint64_t result = sub_1DCAE3A60(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE3C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE3CC0()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE3D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE3DB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE3DD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE3A04();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE3DFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE3A30();
  *a1 = result;
  return result;
}

uint64_t (*sub_1DCAE3E24(void *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t v7 = malloc(0x60uLL);
  *a1 = v7;
  uint64_t v8 = *a2;
  long long v9 = *(_OWORD *)(v3 + 16);
  *uint64_t v7 = *(_OWORD *)v3;
  v7[1] = v9;
  id v7[2] = *(_OWORD *)(v3 + 32);
  *((void *)v7 + 6) = *(void *)(v3 + 48);
  *((void *)v7 + 11) = sub_1DCAE3EB8((void *)v7 + 7, v8, a3);
  return sub_1DCAE3EB4;
}

uint64_t (*sub_1DCAE3EB8(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = *(void *)(a3 + 16);
  *a1 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  a1[1] = v6;
  a1[2] = malloc(*(void *)(v6 + 64));
  sub_1DCAE5A3C(a2, a3);
  return sub_1DC927C34;
}

uint64_t sub_1DCAE3F70()
{
  swift_getWitnessTable();

  return sub_1DCB88098();
}

uint64_t sub_1DCAE3FE0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE3AD4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAE400C(uint64_t *a1)
{
  uint64_t result = sub_1DCAE3AD4(*a1);
  *a1 = result;
  return result;
}

void sub_1DCAE4038()
{
}

uint64_t sub_1DCAE4050(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE40A4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE40F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE4114()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE4130()
{
  return swift_getWitnessTable();
}

double sub_1DCAE414C@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1DCB87CD8();
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_1DCAE418C()
{
  __n128 v2 = sub_1DCAE7C9C();
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v5 = v4(v2);
  sub_1DCAE7DA8(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  *(void *)(v0 + 48) = v3;
}

uint64_t sub_1DCAE41CC@<X0>(uint64_t result@<X0>, uint64_t (*a2)(long long *)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    uint64_t v7 = *((void *)v3 + 4);
    long long v8 = *v3;
    long long v9 = v3[1];
    double result = a2(v3);
    *(_OWORD *)a3 = v8;
    *(_OWORD *)(a3 + 16) = v9;
    *(void *)(a3 + 32) = v7;
    *(void *)(a3 + 40) = v5;
    *(void *)(a3 + 48) = v4;
  }
  return result;
}

__n128 sub_1DCAE4244@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(long long *)@<X3>, uint64_t a4@<X8>)
{
  __n128 v10 = (__n128)v4[1];
  long long v11 = *v4;
  uint64_t v8 = *((void *)v4 + 4);
  a3(v4);
  __n128 result = v10;
  *(_OWORD *)a4 = v11;
  *(__n128 *)(a4 + 16) = v10;
  *(void *)(a4 + 32) = v8;
  *(void *)(a4 + 40) = a1;
  *(void *)(a4 + 48) = a2;
  return result;
}

uint64_t sub_1DCAE42B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE42D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184500](a1, a4, a2, a5, a3);
}

uint64_t sub_1DCAE42E8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184558](a1, WitnessTable, a2);
}

uint64_t sub_1DCAE4354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184560](a1, a2, WitnessTable, a3);
}

uint64_t sub_1DCAE43BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE4440()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE44C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE4538()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE4554(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE45A8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE45FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE4618()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE4634()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE4650()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE466C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE4688()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE46D0()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_1DCAE46D8()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_1DCAE46E0()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_1DCAE46E8(uint64_t result)
{
  if (*(void *)(v1 + 40) >= result || *(void *)(v1 + 48) < result) {
    __break(1u);
  }
  else {
    --result;
  }
  return result;
}

uint64_t sub_1DCAE4704(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v2 = *(void *)(v1 + 48);
  if (v2 < v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 > result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 > result) {
    return ++result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DCAE4734(uint64_t result)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v2 * result;
  if ((unsigned __int128)(v2 * (__int128)result) >> 64 != (v2 * result) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = v1[3];
  __n128 result = v3 + v4;
  if (__OFADD__(v3, v4))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v1[4];
  BOOL v6 = __OFSUB__(v5, v4);
  uint64_t v7 = v5 - v4;
  if (v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  BOOL v6 = __OFADD__(result, v7);
  uint64_t v8 = result + v7;
  if (v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v8 >= result) {
    return sub_1DCAE7C70(result);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DCAE4788@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE46E8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAE47B4(uint64_t *a1)
{
  uint64_t result = sub_1DCAE46E8(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE47E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE4864()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE48E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE495C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE46D8();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE4984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE46E0();
  *a1 = result;
  return result;
}

void (*sub_1DCAE49AC(void *a1, uint64_t *a2))(void *a1)
{
  uint64_t v5 = malloc(0x80uLL);
  *a1 = v5;
  uint64_t v6 = *a2;
  long long v7 = *(_OWORD *)(v2 + 16);
  *uint64_t v5 = *(_OWORD *)v2;
  v5[1] = v7;
  _OWORD v5[2] = *(_OWORD *)(v2 + 32);
  *((void *)v5 + 6) = *(void *)(v2 + 48);
  *((void *)v5 + 15) = sub_1DCAE4A88((void *)v5 + 7, v6);
  long long v9 = *v8;
  *((void *)v5 + 11) = v10;
  *((void *)v5 + 12) = v11;
  *(_OWORD *)((char *)v5 + 104) = v9;
  return sub_1DCAE4A4C;
}

void sub_1DCAE4A4C(void *a1)
{
  uint64_t v2 = sub_1DCAE7E40(a1);
  v3(v2);

  free(v1);
}

uint64_t (*sub_1DCAE4A88(void *a1, uint64_t a2))()
{
  uint64_t v3 = sub_1DCAE4734(a2);
  a1[1] = v4;
  a1[2] = v3;
  *a1 = v5;
  return sub_1DCAE4AE8;
}

uint64_t sub_1DCAE4AE8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1DCAE4AF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE46D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DCAE4B18@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE4704(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAE4B44(uint64_t *a1)
{
  uint64_t result = sub_1DCAE4704(*a1);
  *a1 = result;
  return result;
}

void sub_1DCAE4B70()
{
}

uint64_t sub_1DCAE4B88(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE4BDC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE4C30()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1DCAE4C38()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1DCAE4C40()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1DCAE4C48(uint64_t result)
{
  if (*(void *)(v1 + 24) >= result || *(void *)(v1 + 32) < result) {
    __break(1u);
  }
  else {
    --result;
  }
  return result;
}

uint64_t sub_1DCAE4C64(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v2 = *(void *)(v1 + 32);
  if (v2 < v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 > result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 > result) {
    return ++result;
  }
LABEL_7:
  __break(1u);
  return result;
}

__n128 sub_1DCAE4C94@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(__n128 *)@<X3>, __n128 *a4@<X8>)
{
  __n128 v12 = *v4;
  unint64_t v8 = v4[1].n128_u64[0];
  unint64_t v9 = v4[2].n128_u64[1];
  unint64_t v10 = v4[3].n128_u64[0];
  a3(v4);
  __n128 result = v12;
  *a4 = v12;
  a4[1].n128_u64[0] = v8;
  a4[1].n128_u64[1] = a1;
  a4[2].n128_u64[0] = a2;
  a4[2].n128_u64[1] = v9;
  a4[3].n128_u64[0] = v10;
  return result;
}

uint64_t sub_1DCAE4D0C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE4C48(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAE4D38(uint64_t *a1)
{
  uint64_t result = sub_1DCAE4C48(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE4D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE4DE8()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE4E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE4EE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE4C38();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE4F08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE4C40();
  *a1 = result;
  return result;
}

uint64_t (*sub_1DCAE4F30(void *a1, uint64_t *a2))()
{
  uint64_t v5 = malloc(0x98uLL);
  *a1 = v5;
  uint64_t v6 = *a2;
  long long v7 = *(_OWORD *)(v2 + 16);
  *uint64_t v5 = *(_OWORD *)v2;
  v5[1] = v7;
  _OWORD v5[2] = *(_OWORD *)(v2 + 32);
  *((void *)v5 + 6) = *(void *)(v2 + 48);
  *((void *)v5 + 18) = sub_1DCAE502C((void *)v5 + 14, v6);
  long long v9 = *(_OWORD *)(v8 + 8);
  long long v10 = *(_OWORD *)(v8 + 24);
  long long v11 = *(_OWORD *)(v8 + 40);
  *((void *)v5 + 7) = *(void *)v8;
  uint64_t v5 = (_OWORD *)((char *)v5 + 56);
  *(_OWORD *)((char *)v5 + 8) = v9;
  *(_OWORD *)((char *)v5 + 24) = v10;
  *(_OWORD *)((char *)v5 + 40) = v11;
  return sub_1DCAE289C;
}

void sub_1DCAE4FE4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  (*(void (**)(void))(*(void *)a1 + 144))();

  free(v1);
}

void (*sub_1DCAE502C(void *a1, uint64_t a2))(uint64_t *a1)
{
  uint64_t v4 = malloc(0x38uLL);
  *a1 = v4;
  sub_1DCAE1940(a2, (uint64_t)v4);
  return sub_1DCAE5090;
}

void sub_1DCAE5090(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_1DC8CBD50(*a1);

  free(v1);
}

double sub_1DCAE50CC@<D0>(unint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  *(void *)&double result = sub_1DCAE4C94(*a1, a1[1], (void (*)(__n128 *))sub_1DC88CD74, a2).n128_u64[0];
  return result;
}

uint64_t sub_1DCAE512C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE4C30();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DCAE5154@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE4C64(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAE5180(uint64_t *a1)
{
  uint64_t result = sub_1DCAE4C64(*a1);
  *a1 = result;
  return result;
}

void sub_1DCAE51AC()
{
}

uint64_t sub_1DCAE51C4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE5218(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE526C()
{
  sub_1DCAE7C58();
  uint64_t v0 = sub_1DCB88818();
  sub_1DCAE7E00();
  uint64_t result = sub_1DCB88888();
  if (result >= v0) {
    return v0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCAE52D4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DCAE5584(a1, a2, (uint64_t (*)(void, void, void, void, void, void))sub_1DCAE52CC, a3);
}

uint64_t sub_1DCAE52EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAE55E0(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1DCAE52CC);
}

uint64_t sub_1DCAE5304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE5388()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE540C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE5480()
{
  return sub_1DCAE54B0();
}

uint64_t sub_1DCAE5498()
{
  return sub_1DCAE54B0();
}

uint64_t sub_1DCAE54B0()
{
  uint64_t v1 = sub_1DCAE7C80();
  uint64_t result = v2(v1);
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1DCAE54DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void, void, void, void, void, void, void)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result = a3(*a1, a1[1], *v4, v4[1], v4[2], v4[3], *(void *)(a2 + 16));
  *a4 = result;
  a4[1] = v7;
  a4[2] = v8;
  a4[3] = v9;
  return result;
}

uint64_t sub_1DCAE5528()
{
  return sub_1DCAE5540();
}

uint64_t sub_1DCAE5540()
{
  uint64_t v1 = sub_1DCAE7C80();
  uint64_t result = v2(v1);
  *uint64_t v0 = result;
  v0[1] = v4;
  return result;
}

uint64_t sub_1DCAE556C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DCAE5584(a1, a2, (uint64_t (*)(void, void, void, void, void, void))sub_1DCAE52D0, a3);
}

uint64_t sub_1DCAE5584@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void, void, void, void, void, void)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result = a3(*a1, *v4, v4[1], v4[2], v4[3], *(void *)(a2 + 16));
  *a4 = result;
  return result;
}

uint64_t sub_1DCAE55C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAE55E0(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1DCAE52D0);
}

uint64_t sub_1DCAE55E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void))
{
  uint64_t result = a4(*a1, *v4, v4[1], v4[2], v4[3], *(void *)(a2 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE5624@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAE563C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCAE52C4, a2);
}

uint64_t sub_1DCAE563C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, void *a3@<X8>)
{
  uint64_t v6 = *v3;
  uint64_t v7 = v3[1];
  uint64_t v9 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = swift_unknownObjectRetain();
  uint64_t v12 = a2(v11, v7, v9, v8, v10);
  uint64_t result = swift_unknownObjectRelease();
  *a3 = v6;
  a3[1] = v7;
  a3[2] = v9;
  a3[3] = v8;
  a3[4] = v12;
  return result;
}

uint64_t sub_1DCAE56BC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE5710(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE5764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))
{
  return a6(a1, a2, *v6, v6[1], v6[2], v6[3], *(void *)(a4 + 16), a3);
}

uint64_t sub_1DCAE5798(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = sub_1DCB87C48();
  if (!v3)
  {
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v3 == -1 && result == 0x8000000000000000) {
    goto LABEL_34;
  }
  uint64_t v9 = result % v3 - v4;
  if (__OFSUB__(result % v3, v4)) {
    goto LABEL_27;
  }
  uint64_t result = MEMORY[0x1E01A6D50](v2, v6);
  if (v3 == -1 && result == 0x8000000000000000) {
    goto LABEL_35;
  }
  uint64_t v11 = result % v3 - v4;
  if (__OFSUB__(result % v3, v4)) {
    goto LABEL_28;
  }
  uint64_t result = sub_1DCB87C48();
  if (v3 == -1 && result == 0x8000000000000000) {
    goto LABEL_36;
  }
  uint64_t v13 = result;
  uint64_t result = MEMORY[0x1E01A6D50](v2, v6);
  if (v3 == -1 && result == 0x8000000000000000) {
    goto LABEL_37;
  }
  uint64_t v15 = result / v3 - v13 / v3;
  if (__OFSUB__(result / v3, v13 / v3)) {
    goto LABEL_29;
  }
  uint64_t v16 = v5 - v4;
  if (__OFSUB__(v5, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v17 = v15 * v16;
  if ((unsigned __int128)(v15 * (__int128)v16) >> 64 != (v15 * v16) >> 63)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v18 = v17 - v9;
  if (__OFSUB__(v17, v9))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t result = v18 + v11;
  if (__OFADD__(v18, v11))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCAE58DC()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[5];
  uint64_t v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v4 = v0[3];
  uint64_t result = v3 + v4;
  if (__OFADD__(v3, v4)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1DCAE590C()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[6];
  uint64_t v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v4 = v0[3];
  uint64_t result = v3 + v4;
  if (__OFADD__(v3, v4)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1DCAE593C(uint64_t result)
{
  uint64_t v2 = v1[1];
  if (!v2)
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result == 0x8000000000000000 && v2 == -1) {
    goto LABEL_16;
  }
  uint64_t v4 = result / v2;
  if (result % v2 != v1[3]) {
    goto LABEL_13;
  }
  uint64_t v5 = v4 - 1;
  if (__OFSUB__(v4, 1)) {
    goto LABEL_17;
  }
  uint64_t v6 = v5 * v2;
  if ((unsigned __int128)(v5 * (__int128)v2) >> 64 != (v5 * v2) >> 63)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = v1[4];
  BOOL v8 = __OFSUB__(v7, 1);
  uint64_t v9 = v7 - 1;
  if (v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t result = v6 + v9;
  if (!__OFADD__(v6, v9)) {
    return result;
  }
  __break(1u);
LABEL_13:
  BOOL v8 = __OFSUB__(result--, 1);
  if (v8) {
LABEL_20:
  }
    __break(1u);
  return result;
}

uint64_t sub_1DCAE59BC(uint64_t result)
{
  uint64_t v2 = v1[1];
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result == 0x8000000000000000 && v2 == -1) {
    goto LABEL_17;
  }
  uint64_t v4 = result / v2;
  if (__OFADD__(result % v2, 1))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (result % v2 + 1 != v1[4]) {
    goto LABEL_13;
  }
  uint64_t v5 = v4 + 1;
  if (__OFADD__(v4, 1)) {
    goto LABEL_18;
  }
  uint64_t v6 = v5 * v2;
  if ((unsigned __int128)(v5 * (__int128)v2) >> 64 != (v5 * v2) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v7 = v1[3];
  uint64_t result = v6 + v7;
  if (!__OFADD__(v6, v7)) {
    return result;
  }
  __break(1u);
LABEL_13:
  if (__OFADD__(result++, 1)) {
LABEL_20:
  }
    __break(1u);
  return result;
}

uint64_t sub_1DCAE5A3C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4183FF0](a1, *v2, *(void *)(a2 + 16));
}

uint64_t sub_1DCAE5A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1DCAE7E34();
  unsigned int v10 = sub_1DCB87D98() & (v7 == a5);
  if (v6 == a6) {
    return v10;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCAE5AA0()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DCAE5B0C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAE5B6C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE593C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAE5B98(uint64_t *a1)
{
  uint64_t result = sub_1DCAE593C(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE5BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE5C48()
{
  swift_getWitnessTable();

  return sub_1DCB88078();
}

uint64_t sub_1DCAE5CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB590];

  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1DCAE5D40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE58DC();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAE5D68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCAE590C();
  *a1 = result;
  return result;
}

void sub_1DCAE5D90(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  (*(void (**)(void))(*(void *)a1 + 88))();

  free(v1);
}

uint64_t sub_1DCAE5DD8()
{
  swift_getWitnessTable();

  return sub_1DCB88098();
}

uint64_t sub_1DCAE5E48@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAE59BC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAE5E74(uint64_t *a1)
{
  uint64_t result = sub_1DCAE59BC(*a1);
  *a1 = result;
  return result;
}

void sub_1DCAE5EA0()
{
}

void sub_1DCAE5EB8()
{
  __n128 v2 = sub_1DCAE7C9C();
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v5 = v4(v2);
  sub_1DCAE7DA8(v5, v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v14;
}

uint64_t sub_1DCAE5EFC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1DCAE5F50(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1DCAE5FA4(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCAE5A4C(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_1DCAE5FCC()
{
  return sub_1DCAE5B0C();
}

uint64_t sub_1DCAE5FE4()
{
  return sub_1DCAE5AA0();
}

uint64_t sub_1DCAE5FFC()
{
  return sub_1DCB891F8();
}

BOOL sub_1DCAE6058()
{
  sub_1DCAE7E54();
  uint64_t v2 = type metadata accessor for DeinterleavedSignalBuffer.ContiguousFrames();
  sub_1DCAE19BC(v2);
  sub_1DCAE7DD8();
  sub_1DCAE19BC(v2);
  sub_1DCAE7DEC();
  char v3 = sub_1DCAE7D30();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1DC88CD74(v1);
  long long v4 = *(_OWORD *)(v1 + 16);
  v15[0] = *(_OWORD *)v1;
  v15[1] = v4;
  __n128 v6 = *(__n128 *)v1;
  __n128 v5 = *(__n128 *)(v1 + 16);
  long long v16 = *(_OWORD *)(v1 + 32);
  uint64_t v17 = *(void *)(v1 + 48);
  sub_1DCAE7D90(*(double *)&v16, v5, v6);
  swift_getWitnessTable();
  uint64_t v7 = sub_1DCB88188();
  sub_1DC8CBD50((uint64_t)v15);
  sub_1DC88CD74(v0);
  long long v8 = *(_OWORD *)(v0 + 16);
  v18[0] = *(_OWORD *)v0;
  v18[1] = v8;
  long long v10 = *(_OWORD *)v0;
  long long v9 = *(_OWORD *)(v0 + 16);
  uint64_t v18[2] = *(_OWORD *)(v0 + 32);
  uint64_t v19 = *(void *)(v0 + 48);
  long long v22 = v10;
  long long v23 = v9;
  long long v24 = *(_OWORD *)(v0 + 32);
  uint64_t v25 = *(void *)(v0 + 48);
  uint64_t v11 = sub_1DCB88188();
  sub_1DC8CBD50((uint64_t)v18);
  if (v7 != v11) {
    return 0;
  }
  sub_1DCAE418C();
  long long v22 = v20[0];
  long long v23 = v20[1];
  long long v24 = v20[2];
  uint64_t v25 = v21;
  type metadata accessor for DeinterleavedSignalBuffer.ContiguousChannels();
  swift_getWitnessTable();
  uint64_t v12 = sub_1DCAE7CFC();
  sub_1DC8CBD50((uint64_t)v20);
  sub_1DCAE418C();
  uint64_t v13 = sub_1DCAE7CFC();
  sub_1DC8CBD50((uint64_t)&v22);
  return v12 == v13;
}

uint64_t sub_1DCAE6278()
{
  return MEMORY[0x1F4184A50]();
}

uint64_t sub_1DCAE6284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAE6AEC(a1, a2, a3, a4, (uint64_t (*)(_OWORD *, _OWORD *, void, uint64_t))sub_1DCAE6058);
}

uint64_t sub_1DCAE629C()
{
  return sub_1DCAE65A8();
}

uint64_t sub_1DCAE62B8()
{
  return sub_1DCAE6504();
}

BOOL sub_1DCAE62D8()
{
  sub_1DCAE7E54();
  uint64_t v2 = type metadata accessor for DeinterleavedSignalBuffer.ContiguousChannels();
  sub_1DCAE19BC(v2);
  sub_1DCAE7DD8();
  sub_1DCAE19BC(v2);
  sub_1DCAE7DEC();
  char v3 = sub_1DCAE7D30();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1DCAE418C();
  long long v20 = v13[0];
  long long v21 = v13[1];
  long long v22 = v13[2];
  uint64_t v23 = v14;
  type metadata accessor for DeinterleavedSignalBuffer.ContiguousFrames();
  swift_getWitnessTable();
  uint64_t v4 = sub_1DCAE7DC0();
  sub_1DC8CBD50((uint64_t)v13);
  sub_1DCAE418C();
  long long v20 = v15[0];
  long long v21 = v15[1];
  long long v22 = v15[2];
  uint64_t v23 = v16;
  uint64_t v5 = sub_1DCAE7DC0();
  sub_1DC8CBD50((uint64_t)v15);
  if (v4 != v5) {
    return 0;
  }
  sub_1DC88CD74(v1);
  long long v6 = *(_OWORD *)(v1 + 16);
  v17[0] = *(_OWORD *)v1;
  v17[1] = v6;
  __n128 v8 = *(__n128 *)v1;
  __n128 v7 = *(__n128 *)(v1 + 16);
  long long v18 = *(_OWORD *)(v1 + 32);
  uint64_t v19 = *(void *)(v1 + 48);
  sub_1DCAE7D90(*(double *)&v18, v7, v8);
  swift_getWitnessTable();
  uint64_t v9 = sub_1DCAE7CFC();
  sub_1DC8CBD50((uint64_t)v17);
  sub_1DC88CD74(v0);
  long long v10 = *(_OWORD *)(v0 + 16);
  long long v20 = *(_OWORD *)v0;
  long long v21 = v10;
  long long v22 = *(_OWORD *)(v0 + 32);
  uint64_t v23 = *(void *)(v0 + 48);
  uint64_t v11 = sub_1DCAE7CFC();
  sub_1DC8CBD50((uint64_t)&v20);
  return v9 == v11;
}

uint64_t sub_1DCAE64EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAE6AEC(a1, a2, a3, a4, (uint64_t (*)(_OWORD *, _OWORD *, void, uint64_t))sub_1DCAE62D8);
}

uint64_t sub_1DCAE6504()
{
  sub_1DCAE7E34();
  sub_1DCAE19BC(v1);
  sub_1DCAE664C();
  swift_unknownObjectRelease();
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t result = v3 - v2;
  if (__OFSUB__(v3, v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v0[5];
    uint64_t v5 = v0[6];
    sub_1DCB891B8();
    uint64_t result = v5 - v6;
    if (!__OFSUB__(v5, v6)) {
      return sub_1DCB891B8();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCAE65A8()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAE65F8()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAE664C()
{
  swift_unknownObjectRetain();
  sub_1DCAE7CE0();
  sub_1DCB888C8();

  return swift_unknownObjectRelease();
}

uint64_t sub_1DCAE66C4()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAE6718()
{
  return sub_1DCAE6278() & 1;
}

uint64_t sub_1DCAE6764()
{
  return sub_1DCAE66C4();
}

uint64_t sub_1DCAE677C()
{
  return sub_1DCAE664C();
}

uint64_t sub_1DCAE6794()
{
  return sub_1DCB891F8();
}

BOOL sub_1DCAE67F0()
{
  sub_1DCAE418C();
  sub_1DCAE418C();
  char v0 = sub_1DCAE6A24();
  sub_1DC8CBD50((uint64_t)v7);
  sub_1DC8CBD50((uint64_t)v6);
  if ((v0 & 1) == 0) {
    return 0;
  }
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousFrames();
  sub_1DCAE418C();
  long long v14 = v8[0];
  long long v15 = v8[1];
  long long v16 = v8[2];
  uint64_t v17 = v9;
  swift_getWitnessTable();
  uint64_t v1 = sub_1DCAE7DC0();
  sub_1DC8CBD50((uint64_t)v8);
  sub_1DCAE418C();
  long long v14 = v10[0];
  long long v15 = v10[1];
  long long v16 = v10[2];
  uint64_t v17 = v11;
  uint64_t v2 = sub_1DCAE7DC0();
  sub_1DC8CBD50((uint64_t)v10);
  if (v1 != v2) {
    return 0;
  }
  sub_1DCAE418C();
  long long v14 = v12[0];
  long long v15 = v12[1];
  long long v16 = v12[2];
  uint64_t v17 = v13;
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousChannels();
  swift_getWitnessTable();
  uint64_t v3 = sub_1DCAE7CFC();
  sub_1DC8CBD50((uint64_t)v12);
  sub_1DCAE418C();
  sub_1DCAE7CC4();
  uint64_t v4 = sub_1DCAE7CFC();
  sub_1DC8CBD50((uint64_t)&v14);
  return v3 == v4;
}

uint64_t sub_1DCAE6A24()
{
  return sub_1DCB87B58() & 1;
}

uint64_t sub_1DCAE6AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAE6AEC(a1, a2, a3, a4, (uint64_t (*)(_OWORD *, _OWORD *, void, uint64_t))sub_1DCAE67F0);
}

uint64_t sub_1DCAE6AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_OWORD *, _OWORD *, void, uint64_t))
{
  uint64_t v5 = *(void *)(a4 - 8);
  long long v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  id v9[2] = *(_OWORD *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 48);
  long long v7 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v7;
  void v11[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 48);
  return a5(v9, v11, *(void *)(a3 + 16), v5) & 1;
}

uint64_t sub_1DCAE6B54()
{
  sub_1DCAE418C();
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousSamples();
  sub_1DCAE6D94();
  sub_1DC8CBD50((uint64_t)v1);
  sub_1DCAE418C();
  v4[0] = v2[0];
  v4[1] = v2[1];
  _OWORD v4[2] = v2[2];
  uint64_t v5 = v3;
  swift_getWitnessTable();
  sub_1DCB88188();
  sub_1DC8CBD50((uint64_t)v2);
  sub_1DCB891B8();
  sub_1DCAE418C();
  sub_1DCAE7CC4();
  type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousChannels();
  swift_getWitnessTable();
  sub_1DCB88188();
  sub_1DC8CBD50((uint64_t)v4);
  return sub_1DCB891B8();
}

uint64_t sub_1DCAE6CCC(uint64_t a1, uint64_t a2)
{
  return sub_1DCAE6E40(a1, *(void *)(a2 - 8), (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DCAE6B54);
}

uint64_t sub_1DCAE6D28()
{
  return sub_1DCAE6B54();
}

uint64_t sub_1DCAE6D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAE6F54(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DCAE6B54);
}

uint64_t sub_1DCAE6D88()
{
  return sub_1DCAE6A24();
}

uint64_t sub_1DCAE6D94()
{
  sub_1DC88CD74(v0);
  swift_getWitnessTable();
  sub_1DCB87DA8();
  sub_1DCB87D88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAE6E40(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t))
{
  sub_1DC89D754();
  a3(v7, a1, a2);
  return sub_1DCB891F8();
}

uint64_t sub_1DCAE6E98(uint64_t a1, uint64_t a2)
{
  return sub_1DCAE6E40(a1, *(void *)(a2 - 8), (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DCAE6D94);
}

uint64_t sub_1DCAE6EF4()
{
  return sub_1DCAE6D94();
}

uint64_t sub_1DCAE6F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAE6F54(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DCAE6D94);
}

uint64_t sub_1DCAE6F54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3 - 8);
  sub_1DCB891A8();
  long long v8 = v4[1];
  long long v11 = *v4;
  long long v12 = v8;
  long long v13 = v4[2];
  uint64_t v14 = *((void *)v4 + 6);
  a4(v10, a2, v7);
  return sub_1DCB891F8();
}

uint64_t sub_1DCAE6FCC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7014()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE705C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE70A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE70EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7134()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7150()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE716C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7188()
{
  return swift_getWitnessTable();
}

void *sub_1DCAE71A4(void *result, uint64_t a2, uint64_t a3)
{
  if (*result)
  {
    if (*result == a2)
    {
      if (result[1] == a3) {
        return (void *)sub_1DCB888B8();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.ContiguousFrames()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.ContiguousChannels()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousFrames()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousChannels()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.NoncontiguousSamples()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE7250()
{
  return sub_1DCAE2D48();
}

uint64_t sub_1DCAE7284(uint64_t a1, uint64_t a2)
{
  return sub_1DCAE729C(a1, a2);
}

uint64_t sub_1DCAE729C(uint64_t a1, uint64_t a2)
{
  return sub_1DCAE2E58(a1, a2, *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 16));
}

uint64_t sub_1DCAE72D4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1DCAE72DC(uint64_t a1, uint64_t a2)
{
  sub_1DCAE7D78(a1, a2);
  *(void *)(v2 + 24) = *(void *)(v3 + 24);
  swift_unknownObjectRetain();
  return v2;
}

void *sub_1DCAE730C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_1DCAE7D14();
  return a1;
}

_OWORD *sub_1DCAE7358(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t sub_1DCAE7390(uint64_t *a1, int a2)
{
  if (!a2) {
    return sub_1DC89DC14(-1);
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    uint64_t v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_1DC89DC14(v2);
}

void *sub_1DCAE73CC(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
    if (a3 < 0) {
      *((unsigned char *)result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_1DCAE7CB8(result, a2);
    }
    *((unsigned char *)result + 32) = 0;
    if (a2) {
      return sub_1DCAE7CB8(result, a2);
    }
  }
  return result;
}

uint64_t type metadata accessor for InterleavedSignalBuffer.ContiguousSamples()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE741C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7438()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7454()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7470()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE748C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE74A8()
{
  return sub_1DCAE20A0();
}

uint64_t sub_1DCAE74CC(uint64_t a1, uint64_t a2)
{
  return sub_1DCAE21A0(a1, a2, *(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64), *(void *)(v2 + 16));
}

uint64_t sub_1DCAE7500(uint64_t a1, uint64_t a2)
{
  return sub_1DCAE2320(a1, a2, *(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void **)(v2 + 72), *(void *)(v2 + 16));
}

uint64_t type metadata accessor for DeinterleavedSignalBuffer.BufferSlice()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE754C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCAE7584(void *a1, void *a2)
{
  sub_1DCAE7D54(a1, a2);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 8) = *(void *)(v2 + 8);
  *(void *)(v3 + 16) = *(void *)(v2 + 16);
  return v3;
}

uint64_t sub_1DCAE75C8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_1DCAE7608(uint64_t *a1, int a2)
{
  if (!a2) {
    return sub_1DC89DC14(-1);
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    uint64_t v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_1DC89DC14(v2);
}

void *sub_1DCAE7644(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *((unsigned char *)result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_1DCAE7CB8(result, a2);
    }
    *((unsigned char *)result + 24) = 0;
    if (a2) {
      return sub_1DCAE7CB8(result, a2);
    }
  }
  return result;
}

uint64_t type metadata accessor for InterleavedSignalBuffer()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE7694()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE76B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE76CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE76E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7704()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7768()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7784()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE77E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7804()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7820()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7884()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE78A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7904()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7920()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE793C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCAE7958()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for InterleavedSignalBuffer.NoncontiguousSamples()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for InterleavedSignalBuffer.ContiguousChannels()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for InterleavedSignalBuffer.ContiguousFrames()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE79BC(uint64_t a1, uint64_t a2)
{
  sub_1DCAE7D78(a1, a2);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v3 + 40);
  swift_bridgeObjectRetain();
  return v2;
}

void *sub_1DCAE79F4(void *a1, void *a2)
{
  sub_1DCAE7D54(a1, a2);
  swift_bridgeObjectRelease();
  sub_1DCAE7D14();
  v3[4] = v2[4];
  v3[5] = v2[5];
  v3[6] = v2[6];
  return v3;
}

uint64_t sub_1DCAE7A44(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_1DCAE7A94(uint64_t *a1, int a2)
{
  if (!a2) {
    return sub_1DC89DC14(-1);
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    uint64_t v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_1DC89DC14(v2);
}

void *sub_1DCAE7AD0(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 5) = 0u;
    *(_OWORD *)(result + 3) = 0u;
    *(_OWORD *)(result + 1) = 0u;
    *uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *((unsigned char *)result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_1DCAE7CB8(result, a2);
    }
    *((unsigned char *)result + 56) = 0;
    if (a2) {
      return sub_1DCAE7CB8(result, a2);
    }
  }
  return result;
}

uint64_t type metadata accessor for InterleavedSignalBuffer.BufferSlice()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAE7B74()
{
  return sub_1DCAE1928();
}

uint64_t sub_1DCAE7C70(uint64_t a1)
{
  return MEMORY[0x1F4183FE0](a1);
}

uint64_t sub_1DCAE7C80()
{
  return *(void *)v0;
}

__n128 sub_1DCAE7C9C()
{
  return v0[2];
}

void *sub_1DCAE7CB8(void *result, int a2)
{
  *uint64_t result = (a2 - 1);
  return result;
}

__n128 sub_1DCAE7CC4()
{
  return *(__n128 *)(v0 - 112);
}

uint64_t sub_1DCAE7CFC()
{
  return sub_1DCB88188();
}

void sub_1DCAE7D14()
{
  v1[1] = v0[1];
  v1[2] = v0[2];
  v1[3] = v0[3];
}

uint64_t sub_1DCAE7D30()
{
  return MEMORY[0x1F4184A50](v1, v2, v3, v4, v0);
}

uint64_t sub_1DCAE7D54(void *a1, void *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

__n128 sub_1DCAE7D78(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  return result;
}

__n128 sub_1DCAE7D90(double a1, __n128 a2, __n128 a3)
{
  *(__n128 *)(v4 - 160) = a3;
  *(__n128 *)(v4 - 144) = a2;
  __n128 result = v3[2];
  *(__n128 *)(v4 - 128) = result;
  *(void *)(v4 - 112) = v3[3].n128_u64[0];
  return result;
}

__n128 sub_1DCAE7DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, long long a10, long long a11)
{
  *long long v11 = a11;
  v11[1] = a10;
  __n128 result = a9;
  void v11[2] = a9;
  return result;
}

uint64_t sub_1DCAE7DC0()
{
  return sub_1DCB88188();
}

uint64_t sub_1DCAE7E14()
{
  return sub_1DCB88858();
}

uint64_t sub_1DCAE7E40(void *a1)
{
  return *a1 + 56;
}

uint64_t sub_1DCAE7E54()
{
  return 0;
}

uint64_t sub_1DCAE7E68()
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v0);
}

uint64_t sub_1DCAE7E88()
{
  return sub_1DCAE7F4C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1DCAE7EC0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DCA16974;
  return sub_1DCAE7E88();
}

uint64_t sub_1DCAE7F4C(uint64_t (*a1)(void))
{
  return a1();
}

ValueMetadata *type metadata accessor for XPCVoid()
{
  return &type metadata for XPCVoid;
}

uint64_t sub_1DCAE7F6C()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_1DCAE7FB0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DCAE8000(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

void type metadata accessor for SNUltronReportOperator()
{
}

uint64_t sub_1DCAE805C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v4 = (char *)sub_1DCAEFFD4();
    sub_1DC897C9C(v4, v5, v6);
    type metadata accessor for CMTime(0);
    uint64_t v7 = a1 + 48;
    do
    {
      sub_1DC87E988(&qword_1EAAA9D00);
      swift_dynamicCast();
      uint64_t v2 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        long long v8 = (char *)sub_1DCAF0064();
        sub_1DC897C9C(v8, v9, v10);
        uint64_t v2 = v21;
      }
      unint64_t v11 = *(void *)(v2 + 16);
      if (v11 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1DCAF0250();
        sub_1DC897C9C(v13, v14, v15);
        uint64_t v2 = v21;
      }
      v7 += 24;
      *(void *)(v2 + 16) = v11 + 1;
      uint64_t v12 = v2 + 28 * v11;
      *(void *)(v12 + 32) = v17;
      *(void *)(v12 + 40) = v18;
      *(void *)(v12 + 48) = v19;
      *(unsigned char *)(v12 + 56) = v20;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DCAE819C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t v4 = (char *)sub_1DCAEFFD4();
    sub_1DC897CBC(v4, v5, v6);
    uint64_t v7 = a1 + 32;
    uint64_t v2 = v21;
    do
    {
      sub_1DCAEEB24(v7, (uint64_t)v17);
      sub_1DC87E988(&qword_1EAAA6A88);
      sub_1DC87E988((uint64_t *)&unk_1EAAAA8F0);
      sub_1DCAF00AC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        long long v8 = (char *)sub_1DCAF0064();
        sub_1DC897CBC(v8, v9, v10);
        uint64_t v2 = v21;
      }
      unint64_t v12 = *(void *)(v2 + 16);
      unint64_t v11 = *(void *)(v2 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1DC897CBC((char *)(v11 > 1), v12 + 1, 1);
        uint64_t v2 = v21;
      }
      *(void *)(v2 + 16) = v12 + 1;
      long long v13 = (_OWORD *)(v2 + 48 * v12);
      long long v14 = v18;
      long long v15 = v20;
      _OWORD v13[3] = v19;
      v13[4] = v15;
      v13[2] = v14;
      v7 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DCAE82C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1DCAEFFD4();
    sub_1DC897D2C();
    uint64_t v2 = v14;
    uint64_t v4 = (unint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1DC8AF450(v5, v6);
      sub_1DC87E988((uint64_t *)&unk_1EAAA69C0);
      sub_1DC87E988(&qword_1EAAA69D0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCAF0064();
        sub_1DC897D2C();
        uint64_t v2 = v14;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      if (v7 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1DCAF0250();
        sub_1DC897D2C();
        uint64_t v2 = v14;
      }
      v4 += 4;
      *(void *)(v2 + 16) = v7 + 1;
      long long v8 = (void *)(v2 + 32 * v7);
      void v8[4] = v10;
      v8[5] = v11;
      uint64_t v8[6] = v12;
      v8[7] = v13;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DCAE840C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1DCAEFFD4();
    sub_1DC897EBC();
    uint64_t v2 = v11;
    uint64_t v4 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_1DC87E988(&qword_1EAA9C728);
      sub_1DC87E988(&qword_1EAA9C740);
      sub_1DCAF00AC();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCAF0064();
        sub_1DC897EBC();
        uint64_t v2 = v11;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1DCAF0250();
        sub_1DC897EBC();
        uint64_t v2 = v11;
      }
      *(void *)(v2 + 16) = v5 + 1;
      uint64_t v6 = v2 + 24 * v5;
      *(unsigned char *)(v6 + 32) = v8;
      v4 += 24;
      *(void *)(v6 + 40) = v9;
      *(void *)(v6 + 48) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DCAE854C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1DCAEFFD4();
    sub_1DC89818C();
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v8;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_1DC87E988((uint64_t *)&unk_1EAA9CB70);
      sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
      sub_1DCAF00AC();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCAF0064();
        sub_1DC89818C();
        uint64_t v2 = v8;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1DCAF0250();
        sub_1DC89818C();
        uint64_t v2 = v8;
      }
      *(void *)(v2 + 16) = v5 + 1;
      *(void *)(v2 + 8 * v5 + 32) = v7;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1DCAE8674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_1DCAF00EC();
  a24 = v26;
  a25 = v27;
  unint64_t v29 = v28;
  if (v28 >> 62)
  {
    sub_1DCAF0004();
    uint64_t v25 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DCAF0244();
  }
  if (!v25)
  {
LABEL_14:
    sub_1DCAF01E8();
    return;
  }
  sub_1DCAF0088();
  if ((v25 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0) {
        MEMORY[0x1E01A7AE0](i, v29);
      }
      else {
        swift_unknownObjectRetain();
      }
      swift_dynamicCast();
      uint64_t v31 = a13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCAF0154();
        uint64_t v31 = a13;
      }
      unint64_t v32 = *(void *)(v31 + 16);
      if (v32 >= *(void *)(v31 + 24) >> 1)
      {
        sub_1DC89809C();
        uint64_t v31 = a13;
      }
      *(void *)(v31 + 16) = v32 + 1;
      sub_1DC87E9CC(&a10, (_OWORD *)(v31 + 32 * v32 + 32));
    }
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1DCAE87B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_1DCAF00EC();
  a24 = v26;
  a25 = v27;
  unint64_t v29 = v28;
  if (v28 >> 62)
  {
    sub_1DCAF0004();
    uint64_t v25 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DCAF0244();
  }
  if (!v25)
  {
LABEL_14:
    sub_1DCAF01E8();
    return;
  }
  sub_1DCAF0088();
  if ((v25 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0) {
        MEMORY[0x1E01A7AE0](i, v29);
      }
      else {
        id v31 = *(id *)(v29 + 8 * i + 32);
      }
      sub_1DC87E988((uint64_t *)&unk_1EAA9E750);
      swift_dynamicCast();
      uint64_t v32 = a13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCAF0154();
        uint64_t v32 = a13;
      }
      unint64_t v33 = *(void *)(v32 + 16);
      if (v33 >= *(void *)(v32 + 24) >> 1)
      {
        sub_1DC89809C();
        uint64_t v32 = a13;
      }
      *(void *)(v32 + 16) = v33 + 1;
      sub_1DC87E9CC(&a10, (_OWORD *)(v32 + 32 * v33 + 32));
    }
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_1DCAE88F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_1DCB88048();
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_1DCAE8998(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1DC89895C();
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v10;
    do
    {
      sub_1DC87E9DC(v4, (uint64_t)v8);
      sub_1DC87E988(&qword_1EAAA9CF0);
      swift_dynamicCast();
      long long v7 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC89895C();
        uint64_t v2 = v10;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1DC89895C();
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v5 + 1;
      *(_OWORD *)(v2 + 16 * v5 + 32) = v7;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1DCAE8ACC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1DC89809C();
    uint64_t v4 = (id *)(a1 + 32);
    uint64_t v2 = v9;
    do
    {
      id v5 = *v4;
      sub_1DC87E988(&qword_1EAAA9CF0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC89809C();
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      if (v6 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1DC89809C();
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1DC87E9CC(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1DCAE8C00(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1DC89809C();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          MEMORY[0x1E01A7AE0](i, a1);
        }
        else {
          id v4 = *(id *)(a1 + 8 * i + 32);
        }
        type metadata accessor for SNDetectionResult();
        swift_dynamicCast();
        uint64_t v5 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC89809C();
          uint64_t v5 = v8;
        }
        unint64_t v6 = *(void *)(v5 + 16);
        if (v6 >= *(void *)(v5 + 24) >> 1)
        {
          sub_1DC89809C();
          uint64_t v5 = v8;
        }
        *(void *)(v5 + 16) = v6 + 1;
        sub_1DC87E9CC(&v7, (_OWORD *)(v5 + 32 * v6 + 32));
      }
    }
  }
}

uint64_t sub_1DCAE8D84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1DC87E9DC(v4, (uint64_t)&v5);
      type metadata accessor for SNDetectionResult();
      swift_dynamicCast();
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_1DCAE8E60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, CMTimeValue a8, uint64_t a9, CMTimeEpoch a10)
{
  uint64_t v11 = v10;
  sub_1DC8A8794();
  v52[3] = swift_getObjectType();
  v52[0] = a1;
  swift_unknownObjectRetain();
  id v16 = sub_1DC8BE068(v52);
  uint64_t v17 = sub_1DC961300((uint64_t)v16, a3);
  uint64_t v51 = v18;
  uint64_t v20 = v19;
  id v21 = v16;
  uint64_t v22 = sub_1DC961378((uint64_t)v21, a6);

  if (v22) {
    unint64_t v23 = v22;
  }
  else {
    unint64_t v23 = MEMORY[0x1E4FBC860];
  }
  if (a4)
  {
    uint64_t v46 = v20;
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1DC87E988(&qword_1EAAA9C20);
      unint64_t v25 = sub_1DCB88C78();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      sub_1DCB89078();
      sub_1DC87E988(&qword_1EAAA9C20);
      unint64_t v25 = v23;
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v26 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v25 = v23;
        if (v26)
        {
          uint64_t v27 = v24 + 32;
          while (swift_dynamicCastObjCProtocolConditional())
          {
            v27 += 8;
            if (!--v26)
            {
              unint64_t v25 = v23;
              goto LABEL_17;
            }
          }
          unint64_t v25 = v24 | 1;
LABEL_17:
          uint64_t v11 = v10;
        }
      }
    }
    uint64_t v38 = v46;
    uint64_t v45 = a3;
    uint64_t v39 = sub_1DCAEC850(a1, v17, v51, v46, a2, a5, v25, a7, a8, a9, a10);
    uint64_t v40 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11)
    {
      sub_1DCAEE72C(v17);

      return v38;
    }
    v52[0] = v45;
    if (v39)
    {
      id v41 = v21;
      swift_bridgeObjectRetain();
      sub_1DCAEE778(v39);
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v53 = v45;
      v52[0] = 0x8000000000000000;
      sub_1DC8BFCA0();
      uint64_t v38 = v53;

      swift_bridgeObjectRelease();
      sub_1DCAEE72C(v39);
      sub_1DCAEE72C(v40);
      return v38;
    }
  }
  else
  {
    if (v17)
    {
      v52[0] = 0;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1DCB87288();
      sub_1DCAEE72C(v17);
    }
    swift_bridgeObjectRelease();
    v52[0] = a3;
  }
  id v28 = v21;
  swift_bridgeObjectRetain();
  sub_1DC8BF240((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35, v43, v44);
  uint64_t v37 = v36;

  sub_1DCAEE72C(v37);
  sub_1DCAEE72C(v17);
  return v52[0];
}

uint64_t sub_1DCAE9200(uint64_t a1, uint64_t a2)
{
  sub_1DCAF0058();
  sub_1DC8A8794();
  v14[3] = swift_getObjectType();
  v14[0] = v2;
  swift_unknownObjectRetain();
  id v4 = sub_1DC8BE068(v14);
  if (sub_1DC961300((uint64_t)v4, a2))
  {
    v14[0] = 0;
    sub_1DCB87288();
    swift_release();
    swift_release();
    swift_release();
  }
  v14[0] = a2;
  swift_bridgeObjectRetain();
  sub_1DC8BF240((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v14[0], v14[1]);
  sub_1DCAEE72C(v12);

  return v14[0];
}

uint64_t sub_1DCAE92CC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v79 = a4;
  uint64_t v92 = a5;
  v97[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v64 = type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  uint64_t v88 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v90 = v8;
  uint64_t v91 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA9C40);
  uint64_t v84 = *(void *)(v9 - 8);
  uint64_t v85 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v83 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1DC87E988(&qword_1EAAA9C48);
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v86 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1DC87E988(&qword_1EAAA9C50);
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v69 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1DC87E988(&qword_1EAAA9C58);
  MEMORY[0x1F4188790](v73);
  uint64_t v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1DC87E988(&qword_1EAAA9C60);
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v71 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1DC87E988(&qword_1EAAA9C68);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v17 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = sub_1DCB870B8();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DC87E988(&qword_1EAAA9C70);
  uint64_t v63 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1DC87E988(&qword_1EAAA9C78);
  uint64_t v78 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  v96 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1DCB86A18();
  uint64_t v75 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  v95 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97[2] = a2;
  v97[3] = a1;
  id v25 = objc_msgSend(self, sel_defaultManager);
  uint64_t v26 = a3;
  sub_1DCB869D8();
  uint64_t v27 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  v97[0] = 0;
  LOBYTE(a3) = objc_msgSend(v25, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v27, 1, 0, v97);

  if (a3)
  {
    uint64_t v28 = v26 + *(int *)(v64 + 20);
    uint64_t v29 = (uint64_t *)(v26 + *(int *)(v64 + 24));
    uint64_t v62 = v26;
    uint64_t v30 = *v29;
    id v31 = v97[0];
    v97[0] = (id)sub_1DCAEB72C(v28, v30);
    v97[1] = v32;
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCB86968();
    swift_bridgeObjectRelease();
    sub_1DC87E988(&qword_1EAAA9C30);
    sub_1DC88CF34(&qword_1EAAA9C80, &qword_1EAAA9C30);
    sub_1DCB874C8();
    uint64_t v64 = MEMORY[0x1E4F1AA30];
    sub_1DC88CF34(&qword_1EAAA9C88, &qword_1EAAA9C70);
    uint64_t v33 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAA9C90);
    swift_allocObject();
    uint64_t v34 = (void *)sub_1DC9C5478(v33);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v20);
    v97[0] = v34;
    uint64_t v35 = v65;
    uint64_t v36 = v66;
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v19, *MEMORY[0x1E4F1A8F8], v66);
    *uint64_t v17 = sub_1DCAED104;
    v17[1] = 0;
    uint64_t v37 = v67;
    uint64_t v38 = v68;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v67 + 104))(v17, *MEMORY[0x1E4F1A920], v68);
    sub_1DC88CF34(&qword_1EAAA9C98, &qword_1EAAA9C90);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v37 + 8))(v17, v38);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v36);
    swift_release();
    sub_1DC87E988(&qword_1EAA9F258);
    sub_1DC88CF34(&qword_1EAAA9CA0, &qword_1EAA9F258);
    sub_1DC88CF34(&qword_1EAAA9CA8, &qword_1EAAA9C78);
    uint64_t v39 = v69;
    sub_1DCB87498();
    uint64_t v40 = v72;
    uint64_t v41 = (uint64_t)v70;
    uint64_t v42 = v74;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v70, v39, v74);
    uint64_t v43 = v73;
    uint64_t v44 = v75;
    (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v41 + *(int *)(v73 + 36), v95, v93);
    uint64_t v45 = v79;
    *(void *)(v41 + *(int *)(v43 + 40)) = v79;
    uint64_t v46 = *(void (**)(char *, uint64_t))(v40 + 8);
    id v47 = v45;
    v46(v39, v42);
    sub_1DC88CF34(&qword_1EAAA9CB0, &qword_1EAAA9C58);
    uint64_t v48 = v71;
    sub_1DCB87488();
    sub_1DC88CC04(v41, &qword_1EAAA9C58);
    sub_1DC88CF34(&qword_1EAAA9CB8, &qword_1EAAA9C60);
    uint64_t v49 = v80;
    uint64_t v50 = v77;
    sub_1DCB874C8();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v50);
    sub_1DC88CF34(&qword_1EAAA9CC0, &qword_1EAAA9C68);
    uint64_t v52 = v82;
    uint64_t v51 = v83;
    uint64_t v53 = v94;
    sub_1DCB873E8();
    sub_1DC87E988(&qword_1EAAA9CC8);
    sub_1DC88CF34(&qword_1EAAA9CD0, &qword_1EAAA9C40);
    uint64_t v54 = v85;
    uint64_t v55 = v86;
    sub_1DCB873D8();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v51, v54);
    uint64_t v56 = v91;
    sub_1DCAEE858(v62, v91);
    unint64_t v57 = (*(unsigned __int8 *)(v88 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    uint64_t v58 = swift_allocObject();
    sub_1DCAEE8B8(v56, v58 + v57);
    uint64_t v59 = v89;
    sub_1DCB870C8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v55, v59);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v52);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v96, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v95, v93);
  }
  else
  {
    id v61 = v97[0];
    sub_1DCB86898();

    return swift_willThrow();
  }
}

void sub_1DCAEA038()
{
  sub_1DC88D6B0();
  uint64_t v106 = v0;
  uint64_t v92 = v2;
  uint64_t v4 = v3;
  uint64_t v80 = v5;
  uint64_t v91 = v6;
  uint64_t v105 = v7;
  v111[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v75 = type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  sub_1DC89D4E0();
  uint64_t v101 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v103 = v10;
  uint64_t v104 = (uint64_t)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC87E988(&qword_1EAAA9D08);
  sub_1DC89D4E0();
  uint64_t v97 = v12;
  uint64_t v98 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  uint64_t v96 = v13;
  uint64_t v102 = sub_1DC87E988(&qword_1EAAA9D10);
  sub_1DC89D4E0();
  uint64_t v100 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1DC88D550();
  uint64_t v99 = v16;
  uint64_t v86 = sub_1DC87E988(&qword_1EAAA9D18);
  sub_1DC89D4E0();
  uint64_t v84 = v17;
  MEMORY[0x1F4188790](v18);
  sub_1DC88D550();
  uint64_t v81 = v19;
  uint64_t v85 = sub_1DC87E988(&qword_1EAAA9D20);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v20);
  sub_1DC88D550();
  uint64_t v82 = v21;
  uint64_t v89 = sub_1DC87E988(&qword_1EAAA9D28);
  sub_1DC89D4E0();
  uint64_t v88 = v22;
  MEMORY[0x1F4188790](v23);
  sub_1DC88D550();
  uint64_t v83 = v24;
  sub_1DC87E988(&qword_1EAAA9D30);
  sub_1DC89D4E0();
  uint64_t v94 = v26;
  uint64_t v95 = v25;
  MEMORY[0x1F4188790](v25);
  sub_1DC88D550();
  uint64_t v93 = v27;
  uint64_t v79 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v78 = v28;
  MEMORY[0x1F4188790](v29);
  id v31 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v76 = v32;
  MEMORY[0x1F4188790](v33);
  sub_1DC95AE60();
  sub_1DC87E988(&qword_1EAAA9D38);
  sub_1DC89D4E0();
  v74[1] = v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v108 = sub_1DC87E988(&qword_1EAAA9D40);
  sub_1DC89D4E0();
  uint64_t v90 = v36;
  MEMORY[0x1F4188790](v37);
  sub_1DC88D550();
  uint64_t v110 = v38;
  uint64_t v107 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v87 = v39;
  MEMORY[0x1F4188790](v40);
  sub_1DC88D550();
  uint64_t v109 = v41;
  id v42 = objc_msgSend(self, sel_defaultManager);
  sub_1DCB869D8();
  uint64_t v43 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  v111[0] = 0;
  unsigned __int8 v44 = objc_msgSend(v42, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v43, 1, 0, v111);

  if (v44)
  {
    uint64_t v45 = v4 + *(int *)(v75 + 20);
    uint64_t v46 = (uint64_t *)(v4 + *(int *)(v75 + 24));
    v74[0] = v4;
    uint64_t v47 = *v46;
    id v48 = v111[0];
    v111[0] = (id)sub_1DCAEB72C(v45, v47);
    v111[1] = v49;
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCB86968();
    swift_bridgeObjectRelease();
    sub_1DC87E988(&qword_1EAAA51D0);
    sub_1DC88CF34(&qword_1EAAA9D48, &qword_1EAAA51D0);
    sub_1DCB874C8();
    uint64_t v80 = MEMORY[0x1E4F1AA30];
    sub_1DC88CF34(&qword_1EAAA9D50, &qword_1EAAA9D38);
    uint64_t v50 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAA9D58);
    swift_allocObject();
    uint64_t v51 = (void *)sub_1DC9C5478(v50);
    sub_1DC88D5C8();
    v52();
    v111[0] = v51;
    (*(void (**)(uint64_t, void, uint64_t))(v76 + 104))(v1, *MEMORY[0x1E4F1A8F8], v77);
    *id v31 = sub_1DCAED104;
    v31[1] = 0;
    uint64_t v53 = v78;
    uint64_t v54 = v79;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v78 + 104))(v31, *MEMORY[0x1E4F1A920], v79);
    sub_1DC88CF34(&qword_1EAAA9D60, &qword_1EAAA9D58);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v53 + 8))(v31, v54);
    sub_1DC89D710();
    v55();
    swift_release();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0EC8);
    sub_1DC88CF34(&qword_1EAAA9D68, (uint64_t *)&unk_1EAAA0EC8);
    sub_1DC88CF34(&qword_1EAAA9D70, &qword_1EAAA9D40);
    uint64_t v56 = v81;
    sub_1DCB87498();
    uint64_t v57 = v84;
    uint64_t v58 = v82;
    uint64_t v59 = v86;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v82, v56, v86);
    uint64_t v60 = v85;
    uint64_t v61 = v87;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16))(v58 + *(int *)(v85 + 36), v109, v107);
    uint64_t v62 = v92;
    *(void *)(v58 + *(int *)(v60 + 40)) = v92;
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    id v64 = v62;
    v63(v56, v59);
    sub_1DC88CF34(&qword_1EAAA9D78, &qword_1EAAA9D20);
    sub_1DCB87488();
    sub_1DC88CC04(v58, &qword_1EAAA9D20);
    sub_1DC88CF34(&qword_1EAAA9D80, &qword_1EAAA9D28);
    sub_1DCB874C8();
    sub_1DC88D5C8();
    v65();
    sub_1DC88CF34(&qword_1EAAA9D88, &qword_1EAAA9D30);
    sub_1DCB873E8();
    sub_1DC87E988(&qword_1EAAA9CC8);
    sub_1DC88CF34(&qword_1EAAA9D90, &qword_1EAAA9D08);
    sub_1DCB873D8();
    sub_1DC88D5C8();
    v66();
    uint64_t v67 = v104;
    sub_1DCAEE858(v74[0], v104);
    unint64_t v68 = (*(unsigned __int8 *)(v101 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    uint64_t v69 = swift_allocObject();
    sub_1DCAEE8B8(v67, v69 + v68);
    sub_1DCB870C8();
    swift_release();
    sub_1DC88D5C8();
    v70();
    sub_1DC88D5C8();
    v71();
    sub_1DC88D5C8();
    v72();
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v109, v107);
  }
  else
  {
    id v73 = v111[0];
    sub_1DCB86898();

    swift_willThrow();
  }
  sub_1DC88D674();
}

uint64_t sub_1DCAEAB3C()
{
  sub_1DCB86A18();
  sub_1DCAEFB28((unint64_t *)&qword_1EAAABA60, MEMORY[0x1E4F276F0]);
  sub_1DCB87818();
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAEABF4(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x1E01A59A0]() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }

  return sub_1DCB89018();
}

uint64_t sub_1DCAEAC74(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB9AC30 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726556646C697562 && a2 == 0xEC0000006E6F6973)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCAEAD78(char a1)
{
  if (a1) {
    return 0x726556646C697562;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1DCAEADBC(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA9DD8);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAEFADC();
  sub_1DCB892B8();
  sub_1DCB86A18();
  sub_1DCAEFB28(&qword_1EAA9DD48, MEMORY[0x1E4F276F0]);
  sub_1DCB88F18();
  if (!v1)
  {
    type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
    sub_1DCB88EC8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1DCAEAF3C()
{
  return sub_1DCB891F8();
}

void sub_1DCAEAFF8()
{
  sub_1DC88D6B0();
  uint64_t v4 = v3;
  uint64_t v17 = v5;
  sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v18 = v7;
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAA9DC8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC95AE60();
  uint64_t v9 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v10);
  sub_1DC89D970();
  sub_1DC881A8C(v4, v4[3]);
  sub_1DCAEFADC();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v4);
  }
  else
  {
    sub_1DCAEFB28(&qword_1EAA9DD28, MEMORY[0x1E4F276F0]);
    sub_1DCB88DF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v2, v1, v19);
    uint64_t v11 = sub_1DCB88DA8();
    uint64_t v13 = v12;
    uint64_t v14 = sub_1DCAF019C();
    v15(v14);
    uint64_t v16 = (uint64_t *)(v2 + *(int *)(v9 + 20));
    *uint64_t v16 = v11;
    v16[1] = v13;
    sub_1DCAEE858(v2, v17);
    sub_1DC8818D0((uint64_t)v4);
    sub_1DCAEE804(v2, (void (*)(void))type metadata accessor for SNUltronUtils.UltronReportingPlan);
  }
  sub_1DC88D674();
}

uint64_t sub_1DCAEB284()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DCAEB2A8()
{
  return sub_1DCAEAD78(*v0);
}

uint64_t sub_1DCAEB2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAEAC74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAEB2D8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAEFADC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAEB314(uint64_t a1)
{
  unint64_t v2 = sub_1DCAEFADC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAEB350()
{
}

uint64_t sub_1DCAEB368(void *a1)
{
  return sub_1DCAEADBC(a1);
}

uint64_t sub_1DCAEB388()
{
  return sub_1DCB891F8();
}

void sub_1DCAEB44C(uint64_t a1, int32_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (v4)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1DC89895C();
    int64_t v23 = -a1;
    if (__OFSUB__(0, a1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = (id *)(a4 + 32);
      uint64_t v8 = v29;
      do
      {
        id v9 = *v7;
        objc_msgSend(v9, sel_copy);
        sub_1DCB88808();
        swift_unknownObjectRelease();
        sub_1DC87E988(&qword_1EAAA9CF0);
        swift_dynamicCast();
        long long v25 = *(_OWORD *)&rhs.value;
        int64_t value = (void *)rhs.value;
        uint64_t ObjectType = swift_getObjectType();
        objc_msgSend(value, sel_timeRange);
        CMTimeValue v12 = lhs.start.value;
        CMTimeEpoch epoch = lhs.start.epoch;
        CMTimeValue v14 = lhs.duration.value;
        CMTimeEpoch v15 = lhs.duration.epoch;
        uint64_t v16 = *(void *)&lhs.start.timescale;
        uint64_t v17 = *(void *)&lhs.duration.timescale;
        CMTimeMake(&lhs.start, v23, a2);
        CMTimeValue v18 = lhs.start.value;
        CMTimeEpoch v19 = lhs.start.epoch;
        uint64_t v20 = *(void *)&lhs.start.timescale;
        lhs.start.int64_t value = v12;
        *(void *)&lhs.start.timescale = v16;
        lhs.start.CMTimeEpoch epoch = epoch;
        rhs.int64_t value = v18;
        *(void *)&rhs.timescale = v20;
        rhs.CMTimeEpoch epoch = v19;
        CMTimeAdd(&duration, &lhs.start, &rhs);
        CMTimeEpoch v21 = duration.epoch;
        duration.CMTimeEpoch epoch = v15;
        rhs.int64_t value = duration.value;
        *(void *)&rhs.timescale = *(void *)&duration.timescale;
        rhs.CMTimeEpoch epoch = v21;
        duration.int64_t value = v14;
        *(void *)&duration.timescale = v17;
        CMTimeRangeMake(&lhs, &rhs, &duration);
        CMTimeRange v30 = lhs;
        (*(void (**)(CMTimeRange *, uint64_t))(*((void *)&v25 + 1) + 8))(&v30, ObjectType);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DCAF0064();
          sub_1DC89895C();
          uint64_t v8 = v29;
        }
        unint64_t v22 = *(void *)(v8 + 16);
        if (v22 >= *(void *)(v8 + 24) >> 1)
        {
          sub_1DC89895C();
          uint64_t v8 = v29;
        }
        *(void *)(v8 + 16) = v22 + 1;
        *(_OWORD *)(v8 + 16 * v22 + 32) = v25;
        v7 += 2;
        --v4;
      }
      while (v4);
    }
  }
}

uint64_t sub_1DCAEB6BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  id v2 = *(id *)(a1 + 32);
  objc_msgSend(v2, sel_timeRange);
  sub_1DCAEB44C(v7, v8, v3, a1);
  uint64_t v5 = v4;

  return v5;
}

uint64_t sub_1DCAEB72C(uint64_t a1, uint64_t a2)
{
  id v3 = sub_1DCA05EB8();
  uint64_t v4 = (void *)sub_1DCB86B28();
  id v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  sub_1DCB87938();
  swift_bridgeObjectRetain();
  sub_1DCB87A18();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return a2;
}

#error "1DCAEB8F8: call analysis failed (funcsize=155)"

void sub_1DCAEBA70(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_1DCAF0004();
    uint64_t v1 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DCAF0244();
  }
  if (v1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1DC8989AC();
    if (v1 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v4 = (id)MEMORY[0x1E01A7AE0](v3, a1);
        }
        else {
          id v4 = *(id *)(a1 + 8 * v3 + 32);
        }
        id v5 = v4;
        SNDetectionResult.timeRange.getter((uint64_t)v9);

        unint64_t v6 = *(void *)(v8 + 16);
        if (v6 >= *(void *)(v8 + 24) >> 1) {
          sub_1DC8989AC();
        }
        ++v3;
        uint64_t v7 = v9[0];
        *(void *)(v8 + 16) = v6 + 1;
        *(void *)(v8 + 8 * v6 + 32) = v7;
      }
      while (v1 != v3);
    }
  }
}

void sub_1DCAEBB98(unint64_t a1)
{
  sub_1DCAEBA70(a1);
  uint64_t v3 = v2;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_21:
    sub_1DC87E988(&qword_1EAAA0900);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DCBB9440;
    *(void *)(inited + 32) = 0x6D617473656D6974;
    *(void *)(inited + 40) = 0xE900000000000070;
    uint64_t v17 = sub_1DC87E988(&qword_1EAAA9CE0);
    *(void *)(inited + 48) = v3;
    *(void *)(inited + 72) = v17;
    *(void *)(inited + 80) = 0x6E656469666E6F63;
    *(void *)(inited + 88) = 0xEA00000000006563;
    uint64_t v18 = sub_1DC87E988(&qword_1EAAA10A0);
    *(void *)(inited + 96) = v7;
    *(void *)(inited + 120) = v18;
    *(void *)(inited + 128) = 0x6465746365746564;
    *(void *)(inited + 136) = 0xE800000000000000;
    *(void *)(inited + 168) = sub_1DC87E988((uint64_t *)&unk_1EAAA0DA0);
    *(void *)(inited + 144) = v5;
    sub_1DCB877D8();
    return;
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1DC89822C();
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v3;
    uint64_t v6 = 0;
    uint64_t v7 = v20;
    unint64_t v8 = a1 & 0xC000000000000001;
    do
    {
      if (v8) {
        id v9 = (char *)MEMORY[0x1E01A7AE0](v6, a1);
      }
      else {
        id v9 = (char *)*(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v10 = *(void *)&v9[OBJC_IVAR___SNDetectionResult_impl + 48];

      unint64_t v11 = *(void *)(v20 + 16);
      if (v11 >= *(void *)(v20 + 24) >> 1) {
        sub_1DC89822C();
      }
      ++v6;
      *(void *)(v20 + 16) = v11 + 1;
      *(void *)(v20 + 8 * v11 + 32) = v10;
    }
    while (v4 != v6);
    sub_1DC8989FC();
    for (uint64_t i = 0; i != v4; ++i)
    {
      if (v8) {
        uint64_t v13 = (unsigned char *)MEMORY[0x1E01A7AE0](i, a1);
      }
      else {
        uint64_t v13 = *(id *)(a1 + 8 * i + 32);
      }
      char v14 = v13[OBJC_IVAR___SNDetectionResult_impl + 72];

      unint64_t v15 = *(void *)(v5 + 16);
      if (v15 >= *(void *)(v5 + 24) >> 1) {
        sub_1DC8989FC();
      }
      *(void *)(v5 + 16) = v15 + 1;
      *(unsigned char *)(v5 + v15 + 32) = v14;
    }
    uint64_t v3 = v19;
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1DCAEBE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_1DCAEB7F8(a4);
  sub_1DCAED150(v12);
  swift_bridgeObjectRelease();
  sub_1DC96250C();
  uint64_t v28 = v13;
  swift_release();
  id v14 = sub_1DCA05ED0();
  unint64_t v15 = (void *)sub_1DCB86B28();
  id v16 = objc_msgSend(v14, sel_stringFromDate_, v15);

  uint64_t v17 = sub_1DCB87938();
  uint64_t v19 = v18;

  uint64_t v20 = sub_1DCAEB72C(a1, a2);
  uint64_t v22 = v21;
  sub_1DC87E988(&qword_1EAAA0900);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB9F90;
  strcpy((char *)(inited + 32), "buildVersion");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = a5;
  *(void *)(inited + 56) = a6;
  *(void *)(inited + 72) = v24;
  *(void *)(inited + 80) = 0x79546E657473696CLL;
  *(void *)(inited + 88) = 0xEA00000000006570;
  *(void *)(inited + 96) = a2;
  *(void *)(inited + 104) = a3;
  *(void *)(inited + 120) = v24;
  *(void *)(inited + 128) = 0x656D614E656C6966;
  *(void *)(inited + 136) = 0xE800000000000000;
  *(void *)(inited + 144) = v20;
  *(void *)(inited + 152) = v22;
  *(void *)(inited + 168) = v24;
  *(void *)(inited + 176) = 0x7274536F69647561;
  *(void *)(inited + 184) = 0xEF65746144676E69;
  *(void *)(inited + 192) = v17;
  *(void *)(inited + 200) = v19;
  *(void *)(inited + 216) = v24;
  *(void *)(inited + 224) = 0xD000000000000010;
  *(void *)(inited + 232) = 0x80000001DCB9AC10;
  uint64_t v25 = sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
  *(void *)(inited + 240) = v28;
  *(void *)(inited + 264) = v25;
  strcpy((char *)(inited + 272), "userFeedback");
  uint64_t v26 = MEMORY[0x1E4FBB550];
  *(unsigned char *)(inited + 285) = 0;
  *(_WORD *)(inited + 286) = -5120;
  *(void *)(inited + 288) = -1;
  *(void *)(inited + 312) = v26;
  *(void *)(inited + 320) = 0x664F7265626D756ELL;
  *(void *)(inited + 360) = MEMORY[0x1E4FBC1C8];
  *(void *)(inited + 328) = 0xEF73656C706D6153;
  *(void *)(inited + 336) = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1DCB877D8();
}

void sub_1DCAEC108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  sub_1DC88D6B0();
  uint64_t v43 = v26;
  uint64_t v44 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  char v45 = v33;
  char v46 = v34;
  uint64_t v42 = v35;
  uint64_t v36 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v38 = v37;
  MEMORY[0x1F4188790](v39);
  sub_1DC981E40();
  sub_1DCAEB72C(v32, v30);
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB86968();
  swift_bridgeObjectRelease();
  sub_1DCAEBE84(v32, v30, v28, v43, a21, a22, a23);
  sub_1DCAF0058();
  type metadata accessor for SNFileUtils();
  uint64_t v40 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  sub_1DCB3B6D0(v24, (uint64_t)v40, v44, v45, v46);

  if (!v23) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v42, v24, v36);
  }
  sub_1DC89D710();
  v41();
  sub_1DC88D674();
}

void sub_1DCAEC2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  v7[1] = *MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v5 = objc_msgSend(self, sel_copyRecentFramesOfAudioRingBufferToAVAudioBufferFrom_frameCount_ringBufferStartSampleTime_, a4, a5, v7);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1DCB87298();
  }
}

uint64_t sub_1DCAEC360(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!(a4 >> 62))
  {
    sub_1DCAF0244();
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DCB88CC8();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((a4 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1E01A7AE0](i, a4);
      }
      else {
        id v8 = *(id *)(a4 + 8 * i + 32);
      }
      id v9 = v8;
      sub_1DCB87298();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1DCAEC460(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, CMTimeValue a6, uint64_t a7, CMTimeEpoch a8)
{
  sub_1DC8F27C8(a4, (uint64_t)&v49);
  if (v8) {
    return;
  }
  uint64_t v43 = a2;
  uint64_t v41 = a4;
  uint64_t v42 = a1;
  CMTimeValue value = v49.start.value;
  CMTimeScale timescale = v49.start.timescale;
  CMTimeFlags flags = v49.start.flags;
  CMTimeEpoch epoch = v49.start.epoch;
  CMTimeValue v20 = v49.duration.value;
  LODWORD(v51) = v49.duration.timescale;
  CMTimeFlags v45 = v49.duration.flags;
  CMTimeEpoch v44 = v49.duration.epoch;
  CMTimeRange range = v49;
  CMTimeRangeGetEnd(&rhs, &range);
  CMTimeEpoch v21 = rhs.epoch;
  rhs.CMTimeEpoch epoch = a8;
  range.start.CMTimeValue value = rhs.value;
  *(void *)&range.start.CMTimeScale timescale = *(void *)&rhs.timescale;
  range.start.CMTimeEpoch epoch = v21;
  rhs.CMTimeValue value = a6;
  *(void *)&rhs.CMTimeScale timescale = a7;
  CMTimeSubtract(&v46, &range.start, &rhs);
  CMTime rhs = v46;
  range.start.CMTimeValue value = value;
  range.start.CMTimeScale timescale = timescale;
  range.start.CMTimeFlags flags = flags;
  range.start.CMTimeEpoch epoch = epoch;
  range.duration.CMTimeValue value = v20;
  range.duration.CMTimeScale timescale = v51;
  range.duration.CMTimeFlags flags = v45;
  range.duration.CMTimeEpoch epoch = v44;
  CMTimeClampToRange(&v46, &rhs, &range);
  CMTimeEpoch v22 = v46.epoch;
  if (a5 >> 62)
  {
    sub_1DCAF0268();
    uint64_t v23 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v24 = MEMORY[0x1E4FBC860];
  if (v23)
  {
    range.start.CMTimeValue value = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    if (v23 < 0)
    {
      __break(1u);
      goto LABEL_33;
    }
    CMTimeEpoch v51 = v22;
    uint64_t v25 = 0;
    do
    {
      if ((a5 & 0xC000000000000001) != 0) {
        MEMORY[0x1E01A7AE0](v25, a5);
      }
      else {
        id v26 = *(id *)(a5 + 8 * v25 + 32);
      }
      ++v25;
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
    }
    while (v23 != v25);
    CMTimeValue v27 = range.start.value;
    unint64_t v24 = MEMORY[0x1E4FBC860];
  }
  else
  {
    CMTimeValue v27 = MEMORY[0x1E4FBC860];
  }
  unint64_t v28 = sub_1DC8F246C(v27);
  swift_bridgeObjectRelease();
  if (v28 >> 62)
  {
    sub_1DCAF0268();
    uint64_t v29 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v29)
  {
    range.start.CMTimeValue value = v24;
    sub_1DCB88B68();
    if ((v29 & 0x8000000000000000) == 0)
    {
      uint64_t v30 = 0;
      do
      {
        if ((v28 & 0xC000000000000001) != 0) {
          MEMORY[0x1E01A7AE0](v30, v28);
        }
        else {
          id v31 = *(id *)(v28 + 8 * v30 + 32);
        }
        ++v30;
        uint64_t v32 = type metadata accessor for SNDetectionResult();
        sub_1DCAF00C8(v32);
        sub_1DCB88B48();
        sub_1DCB88B78();
        sub_1DCB88B88();
        sub_1DCB88B58();
      }
      while (v29 != v30);
      unint64_t v24 = range.start.value;
      goto LABEL_23;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_23:
  uint64_t v33 = swift_bridgeObjectRelease();
  sub_1DCAEC360(v33, v43, v34, v24);
  uint64_t v23 = v42;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
    if (v40)
    {
LABEL_25:
      sub_1DC8A42E0(0, (v24 & 0xC000000000000001) == 0, v24);
      if ((v24 & 0xC000000000000001) == 0)
      {
        id v35 = *(id *)(v24 + 32);
LABEL_27:
        uint64_t v36 = v35;
        swift_bridgeObjectRelease();
        SNDetectionResult.timeRange.getter((uint64_t)v50);

        sub_1DC8F2980(v50[0], v50[1], v50[2], v41);
        sub_1DCAEC2BC(v23, v38, v39, (uint64_t)v41, v37);
        return;
      }
LABEL_34:
      id v35 = (id)MEMORY[0x1E01A7AE0](0, v24);
      goto LABEL_27;
    }
  }
  else if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_1DCAEC850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, CMTimeValue a9, uint64_t a10, CMTimeEpoch a11)
{
  if (a2)
  {
    uint64_t v12 = a2;
    swift_retain();
    swift_retain();
    swift_retain();
LABEL_3:
    sub_1DCB87298();
    return v12;
  }
  sub_1DCAECAAC();
  if (v11) {
    return v12;
  }
  uint64_t v12 = v15;
  uint64_t v17 = v16;
  if (a7 >> 62)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  unint64_t v20 = MEMORY[0x1E4FBC860];
  if (!v18)
  {
LABEL_15:
    sub_1DCAEC460(v12, v17, v19, a8, v20, a9, a10, a11);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  unint64_t v24 = a8;
  unint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DCB88B68();
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = 0;
    do
    {
      if ((a7 & 0xC000000000000001) != 0) {
        MEMORY[0x1E01A7AE0](v22, a7);
      }
      else {
        swift_unknownObjectRetain();
      }
      ++v22;
      uint64_t v23 = type metadata accessor for SNDetectionResult();
      sub_1DCAF00C8(v23);
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
    }
    while (v18 != v22);
    unint64_t v20 = v25;
    a8 = v24;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void sub_1DCAECAAC()
{
  sub_1DC88D6B0();
  uint64_t v3 = sub_1DCAF0058();
  uint64_t v4 = type metadata accessor for SNUltronUtils.UltronReportingPlan(v3);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v5);
  sub_1DC981E40();
  uint64_t v6 = type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  id v8 = (id)MobileGestalt_get_current_device();
  if (v8)
  {
    id v9 = v8;
    id v10 = (id)MobileGestalt_copy_buildVersion_obj();

    if (v10)
    {
      uint64_t v11 = sub_1DCB87938();
      uint64_t v13 = v12;

      sub_1DCAA4ED4();
      sub_1DCB86928();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(v2 + *(int *)(v4 + 20));
      *id v14 = v11;
      v14[1] = v13;
      type metadata accessor for SNUtils();
      uint64_t v15 = sub_1DCB23030(v0);
      uint64_t v17 = v16;
      sub_1DCB86B88();
      sub_1DCAEE858(v2, v1);
      uint64_t v18 = (uint64_t *)(v1 + *(int *)(v6 + 24));
      *uint64_t v18 = v15;
      v18[1] = v17;
      sub_1DCAEE804(v2, (void (*)(void))type metadata accessor for SNUltronUtils.UltronReportingPlan);
      sub_1DCAECC94();
      sub_1DCAEE804(v1, (void (*)(void))type metadata accessor for SNUltronUtils.UltronReportTemplate);
      sub_1DC88D674();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1DCAECC94()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC87E988(&qword_1EAAA9C28);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAA9F258);
  swift_allocObject();
  uint64_t v7 = (void *)sub_1DCB872B8();
  sub_1DC87E988(&qword_1EAAA9C30);
  swift_allocObject();
  id v8 = (void *)sub_1DCB872B8();
  sub_1DCAE92CC(v7, v8, v5, v3, v1);
  if (v0)
  {
    swift_release();
    swift_release();
  }
  else
  {
    sub_1DC88CF34(&qword_1EAAA9C38, &qword_1EAAA9C28);
    sub_1DCB87428();
    sub_1DC89D710();
    v9();
  }
  sub_1DC88D674();
}

#error "1DCAED004: call analysis failed (funcsize=183)"

uint64_t sub_1DCAED104@<X0>(uint64_t *a1@<X8>)
{
  sub_1DCAEE934();
  uint64_t result = swift_allocError();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAED144@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCAED150(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA9CD8);
  uint64_t result = sub_1DCB88CD8();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v29 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v27 = v6;
  int64_t v28 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v29 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    unint64_t v20 = swift_bridgeObjectRetain();
    sub_1DCAEBB98(v20);
    uint64_t v22 = v21;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v23 = (void *)(v3[6] + 16 * i);
    *uint64_t v23 = v18;
    v23[1] = v19;
    *(void *)(v3[7] + 8 * i) = v22;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v26;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v28) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v28) {
        return (uint64_t)v3;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v28) {
          return (uint64_t)v3;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v28) {
    return (uint64_t)v3;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v28) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1DCAED358()
{
  sub_1DCAEFD94();
  sub_1DC87E988(&qword_1EAAA7870);
  sub_1DCAF0030();
  sub_1DCB88CE8();
  sub_1DCAEFF88();
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = *(void *)(v1 + 64);
    uint64_t v6 = 1 << *(unsigned char *)(v1 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v5;
    unsigned int v37 = v0;
    int64_t v38 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = v2 + 64;
    uint64_t v10 = 56;
    if ((v7 & v5) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
    {
      char v21 = *(unsigned char *)(*(void *)(v1 + 48) + i);
      unint64_t v22 = *(void *)(v1 + 56) + i * v10;
      uint64_t v23 = *(void *)v22;
      char v24 = *(unsigned char *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 16);
      long long v39 = *(_OWORD *)(v22 + 40);
      long long v40 = *(_OWORD *)(v22 + 24);
      if ((v2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
      }
      sub_1DCB891A8();
      sub_1DCB891B8();
      sub_1DCB891F8();
      sub_1DCAF0070();
      if (((v28 << v27) & ~*(void *)(v9 + 8 * v26)) == 0)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v33)
          {
            if (v30) {
              break;
            }
          }
          if (v31 == v32) {
            uint64_t v31 = 0;
          }
          if (*(void *)(v9 + 8 * v31) != -1)
          {
            sub_1DC964784();
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_33:
      *(void *)(v9 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      *(unsigned char *)(*(void *)(v2 + 48) + v29) = v21;
      uint64_t v34 = *(void *)(v2 + 56) + 56 * v29;
      *(void *)uint64_t v34 = v23;
      *(unsigned char *)(v34 + 8) = v24;
      *(void *)(v34 + 16) = v25;
      *(_OWORD *)(v34 + 24) = v40;
      *(_OWORD *)(v34 + 40) = v39;
      sub_1DCAEFE20();
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_44;
      }
      if (v13 >= v38) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v1 + 64 + 8 * v13);
      ++v4;
      if (!v14)
      {
        sub_1DCAF025C();
        if (v16 == v17) {
          goto LABEL_35;
        }
        unint64_t v14 = *(void *)(v15 + 8 * v4);
        if (!v14)
        {
          sub_1DCAF0024();
          if (v16 == v17)
          {
LABEL_35:
            if ((v2 & 1) == 0)
            {
              swift_release();
              uint64_t v0 = v37;
              goto LABEL_42;
            }
            sub_1DCAEFDE4();
            if (v16 != v17) {
              void *v35 = -1 << v36;
            }
            else {
              sub_1DCAEE710(0, (unint64_t)(v36 + 63) >> 6, v35);
            }
            uint64_t v0 = v37;
            *(void *)(v1 + 16) = 0;
            break;
          }
          unint64_t v14 = *(void *)(v18 + 8 * v19);
          if (!v14)
          {
            while (1)
            {
              uint64_t v4 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_45;
              }
              if (v4 >= v20) {
                goto LABEL_35;
              }
              unint64_t v14 = *(void *)(v18 + 8 * v4);
              ++v19;
              if (v14) {
                goto LABEL_20;
              }
            }
          }
          uint64_t v4 = v19;
        }
      }
LABEL_20:
      unint64_t v8 = (v14 - 1) & v14;
    }
  }
  swift_release();
LABEL_42:
  *uint64_t v0 = v2;
}

void sub_1DCAED614(uint64_t a1, char a2)
{
  uint64_t v5 = v2;
  sub_1DCAEFDD0();
  sub_1DC87E988(&qword_1EAAA18D8);
  sub_1DCAF0030();
  sub_1DCB88CE8();
  sub_1DCAEFF88();
  if (v7)
  {
    sub_1DCAF01D0();
    uint64_t v28 = v10;
    if (v8 < 64) {
      uint64_t v11 = ~(-1 << v8);
    }
    else {
      uint64_t v11 = -1;
    }
    uint64_t v12 = v11 & v9;
    int64_t v27 = (unint64_t)(v8 + 63) >> 6;
    swift_retain();
    int64_t v13 = 0;
    if (!v12) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1DCAF0184();
    while (1)
    {
      sub_1DCAEFF94();
      uint64_t v18 = (_OWORD *)(v17 + 32 * v16);
      if (a2)
      {
        sub_1DC87E9CC(v18, v29);
      }
      else
      {
        sub_1DC87E9DC((uint64_t)v18, (uint64_t)v29);
        swift_bridgeObjectRetain();
      }
      sub_1DCB891A8();
      sub_1DCAF0214();
      sub_1DCB891F8();
      sub_1DCAEFDB0();
      if (v19)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v19)
          {
            if (v21) {
              break;
            }
          }
          sub_1DCAEFF6C();
          if (!v19)
          {
            sub_1DC964784();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_30:
      sub_1DCAEFD64(v20);
      sub_1DC87E9CC(v29, (_OWORD *)(v23 + 32 * v22));
      sub_1DCAEFE20();
      if (v12) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_39;
      }
      if (v14 >= v27) {
        goto LABEL_32;
      }
      ++v13;
      if (!v28[v14])
      {
        int64_t v13 = v14 + 1;
        if (v14 + 1 >= v27) {
          goto LABEL_32;
        }
        if (!v28[v13])
        {
          int64_t v15 = v14 + 2;
          if (v15 >= v27)
          {
LABEL_32:
            swift_release();
            uint64_t v5 = v2;
            if (a2)
            {
              sub_1DCAEFDE4();
              if (v25 != v26) {
                *uint64_t v28 = -1 << v24;
              }
              else {
                sub_1DCAEE710(0, (unint64_t)(v24 + 63) >> 6, v28);
              }
              *(void *)(v3 + 16) = 0;
            }
            break;
          }
          if (!v28[v15])
          {
            while (1)
            {
              int64_t v13 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_40;
              }
              if (v13 >= v27) {
                goto LABEL_32;
              }
              ++v15;
              if (v28[v13]) {
                goto LABEL_18;
              }
            }
          }
          int64_t v13 = v15;
        }
      }
LABEL_18:
      sub_1DCAF0120();
    }
  }
  swift_release();
  *uint64_t v5 = v4;
}

void sub_1DCAED834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, int a13, char a14, __int16 a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  sub_1DCAEFEF4();
  a35 = v45;
  a36 = v46;
  sub_1DCAEFD94();
  sub_1DC87E988(&qword_1EAAA7838);
  sub_1DCAEFDF8();
  sub_1DCAEFF88();
  if (v47)
  {
    sub_1DCAEFE30();
    uint64_t v48 = 0;
    if (!v44) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1DCAEFFBC();
    while (1)
    {
      sub_1DCAF0108();
      if ((v56 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1DCAF0040();
      sub_1DCAF01B4();
      unsigned int v37 = &a16;
      sub_1DCB891F8();
      sub_1DCAEFFE4();
      if (v57)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v57)
          {
            if (v59) {
              break;
            }
          }
          sub_1DCAF0204();
          if (!v57)
          {
            sub_1DC964784();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_28:
      *(void *)(v40 + ((v58 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v58;
      uint64_t v60 = (void *)(*(void *)(v39 + 48) + 16 * v58);
      *uint64_t v60 = v43;
      v60[1] = v42;
      *(void *)(*(void *)(v39 + 56) + 8 * v58) = v41;
      sub_1DCAEFE20();
      if (v44) {
        goto LABEL_3;
      }
LABEL_4:
      if (__OFADD__(v48, 1)) {
        goto LABEL_38;
      }
      sub_1DCAF0178();
      if (v49 == v50) {
        break;
      }
      sub_1DCAF0144();
      if (!v53)
      {
        uint64_t v48 = v51 + 1;
        if (v51 + 1 >= v52) {
          goto LABEL_30;
        }
        if (!*(void *)&v37[8 * v48])
        {
          sub_1DCAF0024();
          if (v49 == v50)
          {
LABEL_30:
            swift_release();
            uint64_t v36 = a10;
            goto LABEL_31;
          }
          if (!*(void *)&v37[8 * v54])
          {
            while (1)
            {
              uint64_t v48 = v54 + 1;
              if (__OFADD__(v54, 1)) {
                goto LABEL_39;
              }
              if (v48 >= v55) {
                goto LABEL_30;
              }
              ++v54;
              if (*(void *)&v37[8 * v48]) {
                goto LABEL_17;
              }
            }
          }
          uint64_t v48 = v54;
        }
      }
LABEL_17:
      sub_1DCAEFFA4();
    }
    swift_release();
    sub_1DCAF0138();
LABEL_31:
    if (a14)
    {
      sub_1DCAEFDE4();
      if (v49 != v50) {
        sub_1DCAEFF5C(v61);
      }
      else {
        sub_1DCAEFE84(v61);
      }
      *(void *)(v38 + 16) = 0;
    }
  }
  swift_release();
  void *v36 = v39;
  sub_1DCAEFF10();
}

void sub_1DCAED9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1DCAEFDD0();
  sub_1DC87E988(&qword_1EAAA7828);
  sub_1DCAF0030();
  sub_1DCB88CE8();
  sub_1DCAEFF88();
  if (v6)
  {
    uint64_t v7 = 1 << *(unsigned char *)(v3 + 32);
    uint64_t v24 = (void *)(v3 + 64);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v9 = v8 & *(void *)(v3 + 64);
    int64_t v23 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1DCAEFF44();
    while (1)
    {
      sub_1DCAEFF94();
      long long v25 = *(_OWORD *)(v14 + 16 * v13);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1DC8AF450(v25, *((unint64_t *)&v25 + 1));
      }
      sub_1DCB891A8();
      sub_1DCAF0214();
      sub_1DCB891F8();
      sub_1DCAEFDB0();
      if (v15)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v15)
          {
            if (v17) {
              break;
            }
          }
          sub_1DCAEFF6C();
          if (!v15)
          {
            sub_1DC964784();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_29:
      sub_1DCAEFD64(v16);
      *(_OWORD *)(v19 + 16 * v18) = v25;
      sub_1DCAEFE20();
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v11 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v11 >= v23) {
        goto LABEL_31;
      }
      ++v10;
      if (!v24[v11])
      {
        int64_t v10 = v11 + 1;
        if (v11 + 1 >= v23) {
          goto LABEL_31;
        }
        if (!v24[v10])
        {
          int64_t v12 = v11 + 2;
          if (v12 >= v23)
          {
LABEL_31:
            swift_release();
            uint64_t v4 = v2;
            if (a2)
            {
              sub_1DCAEFDE4();
              if (v21 != v22) {
                *uint64_t v24 = -1 << v20;
              }
              else {
                sub_1DCAEE710(0, (unint64_t)(v20 + 63) >> 6, v24);
              }
              *(void *)(v3 + 16) = 0;
            }
            break;
          }
          if (!v24[v12])
          {
            while (1)
            {
              int64_t v10 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_39;
              }
              if (v10 >= v23) {
                goto LABEL_31;
              }
              ++v12;
              if (v24[v10]) {
                goto LABEL_18;
              }
            }
          }
          int64_t v10 = v12;
        }
      }
LABEL_18:
      sub_1DCAEFF2C();
    }
  }
  swift_release();
  *uint64_t v4 = a2;
}

void sub_1DCAEDC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, __int16 a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  sub_1DCAEFEF4();
  a35 = v40;
  a36 = v41;
  sub_1DCAEFD94();
  sub_1DC87E988(&qword_1EAAA7848);
  sub_1DCAEFDF8();
  sub_1DCAEFF88();
  if (v42)
  {
    uint64_t v43 = 1 << *(unsigned char *)(v38 + 32);
    if (v43 < 64) {
      uint64_t v44 = ~(-1 << v43);
    }
    else {
      uint64_t v44 = -1;
    }
    uint64_t v45 = v44 & *(void *)(v38 + 64);
    uint64_t v70 = v36;
    uint64_t v46 = v39 + 64;
    swift_retain();
    uint64_t v47 = 0;
    if (!v45) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1DCAEFFBC();
    while (1)
    {
      char v56 = (uint64_t *)(*(void *)(v38 + 48) + 16 * v48);
      uint64_t v58 = *v56;
      uint64_t v57 = v56[1];
      uint64_t v59 = *(void *)(v38 + 56) + 16 * v48;
      uint64_t v36 = *(void **)v59;
      uint64_t v60 = *(void *)(v59 + 8);
      if ((a14 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1DCAF0040();
      sub_1DCAF01B4();
      unsigned int v37 = &a16;
      sub_1DCB891F8();
      sub_1DCAF0070();
      if (((v63 << v62) & ~*(void *)(v46 + 8 * v61)) == 0)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v66)
          {
            if (v65) {
              break;
            }
          }
          sub_1DCAF0204();
          if (!v66)
          {
            sub_1DC964784();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_31:
      *(void *)(v46 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      uint64_t v67 = (void *)(*(void *)(v39 + 48) + 16 * v64);
      *uint64_t v67 = v58;
      v67[1] = v57;
      unint64_t v68 = (void *)(*(void *)(v39 + 56) + 16 * v64);
      *unint64_t v68 = v36;
      v68[1] = v60;
      sub_1DCAEFE20();
      if (v45) {
        goto LABEL_6;
      }
LABEL_7:
      if (__OFADD__(v47, 1)) {
        goto LABEL_41;
      }
      sub_1DCAF0178();
      if (v49 == v50) {
        break;
      }
      sub_1DCAF0144();
      if (!v53)
      {
        uint64_t v47 = v51 + 1;
        if (v51 + 1 >= v52) {
          goto LABEL_33;
        }
        if (!*(void *)&v37[8 * v47])
        {
          sub_1DCAF0024();
          if (v49 == v50)
          {
LABEL_33:
            swift_release();
            uint64_t v36 = v70;
            goto LABEL_34;
          }
          if (!*(void *)&v37[8 * v54])
          {
            while (1)
            {
              uint64_t v47 = v54 + 1;
              if (__OFADD__(v54, 1)) {
                goto LABEL_42;
              }
              if (v47 >= v55) {
                goto LABEL_33;
              }
              ++v54;
              if (*(void *)&v37[8 * v47]) {
                goto LABEL_20;
              }
            }
          }
          uint64_t v47 = v54;
        }
      }
LABEL_20:
      sub_1DCAEFFA4();
    }
    swift_release();
    sub_1DCAF0138();
LABEL_34:
    if (a14)
    {
      sub_1DCAEFDE4();
      if (v49 != v50) {
        sub_1DCAEFF5C(v69);
      }
      else {
        sub_1DCAEFE84(v69);
      }
      *(void *)(v38 + 16) = 0;
    }
  }
  swift_release();
  void *v36 = v39;
  sub_1DCAEFF10();
}

void sub_1DCAEDE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  sub_1DCAEFEF4();
  sub_1DCAEFD94();
  sub_1DC87E988((uint64_t *)&unk_1EAA9C7C0);
  sub_1DCAEFDF8();
  sub_1DCAEFF88();
  if (v17)
  {
    uint64_t v41 = v14;
    uint64_t v18 = 0;
    uint64_t v19 = *(void *)(v15 + 64);
    uint64_t v20 = 1 << *(unsigned char *)(v15 + 32);
    if (v20 < 64) {
      uint64_t v21 = ~(-1 << v20);
    }
    else {
      uint64_t v21 = -1;
    }
    uint64_t v22 = v21 & v19;
    int64_t v42 = (unint64_t)(v20 + 63) >> 6;
    if ((v21 & v19) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1DCAF0184();
    while (1)
    {
      char v31 = *(unsigned char *)(*(void *)(v15 + 48) + v23);
      uint64_t v32 = (uint64_t *)(*(void *)(v15 + 56) + 16 * v23);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      if ((a14 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DCAF0040();
      sub_1DCB891B8();
      sub_1DCB891F8();
      sub_1DCAEFDB0();
      if (v35)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v35)
          {
            if (v37) {
              break;
            }
          }
          sub_1DCAEFF6C();
          if (!v35)
          {
            sub_1DC964784();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_31:
      *(void *)(v16 + 64 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
      *(unsigned char *)(*(void *)(v16 + 48) + v36) = v31;
      uint64_t v38 = (void *)(*(void *)(v16 + 56) + 16 * v36);
      *uint64_t v38 = v33;
      v38[1] = v34;
      sub_1DCAEFE20();
      if (v22) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v24 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_42;
      }
      if (v24 >= v42) {
        goto LABEL_33;
      }
      ++v18;
      if (!*(void *)(v15 + 64 + 8 * v24))
      {
        sub_1DCAF025C();
        if (v26 == v27) {
          goto LABEL_33;
        }
        if (!*(void *)(v25 + 8 * v18))
        {
          sub_1DCAF0024();
          if (v26 == v27)
          {
LABEL_33:
            if ((a14 & 1) == 0)
            {
              swift_release();
              uint64_t v14 = v41;
              goto LABEL_40;
            }
            sub_1DCAEFDE4();
            if (v26 != v27) {
              *uint64_t v39 = -1 << v40;
            }
            else {
              sub_1DCAEE710(0, (unint64_t)(v40 + 63) >> 6, v39);
            }
            uint64_t v14 = v41;
            *(void *)(v15 + 16) = 0;
            break;
          }
          if (!*(void *)(v28 + 8 * v29))
          {
            while (1)
            {
              uint64_t v18 = v29 + 1;
              if (__OFADD__(v29, 1)) {
                goto LABEL_43;
              }
              if (v18 >= v30) {
                goto LABEL_33;
              }
              ++v29;
              if (*(void *)(v28 + 8 * v18)) {
                goto LABEL_20;
              }
            }
          }
          uint64_t v18 = v29;
        }
      }
LABEL_20:
      sub_1DCAF0120();
    }
  }
  swift_release();
LABEL_40:
  *uint64_t v14 = v16;
  sub_1DCAEFF10();
}

void sub_1DCAEE038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  sub_1DCAEFEF4();
  sub_1DCAEFD94();
  sub_1DC87E988(&qword_1EAA9C6A0);
  sub_1DCAEFDF8();
  sub_1DCAEFF88();
  if (v18)
  {
    sub_1DCAEFEA4();
    uint64_t v19 = 0;
    if (!v17) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1DCAEFF44();
    while (1)
    {
      sub_1DCAEFF94();
      uint64_t v14 = *(void **)(v26 + 8 * v25);
      if ((a14 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        char v27 = v14;
      }
      sub_1DCAF0040();
      sub_1DCAF0214();
      sub_1DCB891F8();
      sub_1DCAEFDB0();
      if (v28)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v28)
          {
            if (v30) {
              break;
            }
          }
          sub_1DCAEFF6C();
          if (!v28)
          {
            sub_1DC964784();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_29:
      sub_1DCAEFD64(v29);
      *(void *)(v32 + 8 * v31) = v14;
      sub_1DCAEFE20();
      if (v17) {
        goto LABEL_3;
      }
LABEL_4:
      if (__OFADD__(v19, 1)) {
        goto LABEL_39;
      }
      sub_1DCAF0178();
      if (v21 == v22) {
        break;
      }
      uint64_t v19 = v20;
      if (!*(void *)(a12 + 8 * v20))
      {
        sub_1DCAF025C();
        if (v21 == v22) {
          goto LABEL_31;
        }
        if (!*(void *)(a12 + 8 * v19))
        {
          sub_1DCAF0024();
          if (v21 == v22)
          {
LABEL_31:
            swift_release();
            uint64_t v14 = a10;
            goto LABEL_32;
          }
          if (!*(void *)(a12 + 8 * v23))
          {
            while (1)
            {
              uint64_t v19 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_40;
              }
              if (v19 >= v24) {
                goto LABEL_31;
              }
              ++v23;
              if (*(void *)(a12 + 8 * v19)) {
                goto LABEL_18;
              }
            }
          }
          uint64_t v19 = v23;
        }
      }
LABEL_18:
      sub_1DCAEFF2C();
    }
    swift_release();
    sub_1DCAF0138();
LABEL_32:
    if (a14)
    {
      sub_1DCAEFDE4();
      if (v21 != v22) {
        sub_1DCAEFF5C(v33);
      }
      else {
        sub_1DCAEFE84(v33);
      }
      *(void *)(v15 + 16) = 0;
    }
  }
  swift_release();
  *uint64_t v14 = v16;
  sub_1DCAEFF10();
}

void sub_1DCAEE1CC()
{
  sub_1DCAEFD94();
  sub_1DC87E988(&qword_1EAAA0248);
  sub_1DCAF0030();
  sub_1DCB88CE8();
  sub_1DCAEFF88();
  if (v3)
  {
    sub_1DCAF01D0();
    uint64_t v24 = v0;
    uint64_t v25 = v6;
    if (v4 < 64) {
      uint64_t v7 = ~(-1 << v4);
    }
    else {
      uint64_t v7 = -1;
    }
    uint64_t v8 = v7 & v5;
    int64_t v9 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1DCAEFF44();
    while (1)
    {
      sub_1DCAEFF94();
      uint64_t v15 = *(void *)(v14 + 8 * v13);
      if ((v2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DCB891A8();
      sub_1DCAF0214();
      sub_1DCB891F8();
      sub_1DCAEFDB0();
      if (v16)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v16)
          {
            if (v18) {
              break;
            }
          }
          sub_1DCAEFF6C();
          if (!v16)
          {
            sub_1DC964784();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_29:
      sub_1DCAEFD64(v17);
      *(void *)(v20 + 8 * v19) = v15;
      sub_1DCAEFE20();
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v11 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v11 >= v9) {
        goto LABEL_31;
      }
      ++v10;
      if (!*(void *)(v25 + 8 * v11))
      {
        int64_t v10 = v11 + 1;
        if (v11 + 1 >= v9) {
          goto LABEL_31;
        }
        if (!*(void *)(v25 + 8 * v10))
        {
          int64_t v12 = v11 + 2;
          if (v12 >= v9)
          {
LABEL_31:
            swift_release();
            uint64_t v0 = v24;
            if (v2)
            {
              sub_1DCAEFDE4();
              if (v22 != v23) {
                sub_1DCAEFF5C(v21);
              }
              else {
                sub_1DCAEFE84(v21);
              }
              *(void *)(v1 + 16) = 0;
            }
            break;
          }
          if (!*(void *)(v25 + 8 * v12))
          {
            while (1)
            {
              int64_t v10 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_39;
              }
              if (v10 >= v9) {
                goto LABEL_31;
              }
              ++v12;
              if (*(void *)(v25 + 8 * v10)) {
                goto LABEL_18;
              }
            }
          }
          int64_t v10 = v12;
        }
      }
LABEL_18:
      sub_1DCAEFF2C();
    }
  }
  swift_release();
  *uint64_t v0 = v2;
}

void sub_1DCAEE3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, int a13, char a14)
{
  sub_1DCAEFEF4();
  sub_1DCAEFD94();
  sub_1DC87E988(&qword_1EAAA7860);
  sub_1DCAEFDF8();
  sub_1DCAEFF88();
  if (v18)
  {
    sub_1DCAEFEA4();
    uint64_t v19 = 0;
    if (!v17) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1DCAEFF44();
    while (1)
    {
      sub_1DCAEFF94();
      uint64_t v14 = (void *)*(unsigned __int8 *)(v26 + v25);
      if ((a14 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DCAF0040();
      sub_1DCAF0214();
      sub_1DCB891F8();
      sub_1DCAEFDB0();
      if (v27)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v27)
          {
            if (v29) {
              break;
            }
          }
          sub_1DCAEFF6C();
          if (!v27)
          {
            sub_1DC964784();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_29:
      sub_1DCAEFD64(v28);
      *(unsigned char *)(v31 + v30) = (_BYTE)v14;
      sub_1DCAEFE20();
      if (v17) {
        goto LABEL_3;
      }
LABEL_4:
      if (__OFADD__(v19, 1)) {
        goto LABEL_39;
      }
      sub_1DCAF0178();
      if (v21 == v22) {
        break;
      }
      uint64_t v19 = v20;
      if (!*(void *)(a12 + 8 * v20))
      {
        sub_1DCAF025C();
        if (v21 == v22) {
          goto LABEL_31;
        }
        if (!*(void *)(a12 + 8 * v19))
        {
          sub_1DCAF0024();
          if (v21 == v22)
          {
LABEL_31:
            swift_release();
            uint64_t v14 = a10;
            goto LABEL_32;
          }
          if (!*(void *)(a12 + 8 * v23))
          {
            while (1)
            {
              uint64_t v19 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_40;
              }
              if (v19 >= v24) {
                goto LABEL_31;
              }
              ++v23;
              if (*(void *)(a12 + 8 * v19)) {
                goto LABEL_18;
              }
            }
          }
          uint64_t v19 = v23;
        }
      }
LABEL_18:
      sub_1DCAEFF2C();
    }
    swift_release();
    sub_1DCAF0138();
LABEL_32:
    if (a14)
    {
      sub_1DCAEFDE4();
      if (v21 != v22) {
        sub_1DCAEFF5C(v32);
      }
      else {
        sub_1DCAEFE84(v32);
      }
      *(void *)(v15 + 16) = 0;
    }
  }
  swift_release();
  *uint64_t v14 = v16;
  sub_1DCAEFF10();
}

void sub_1DCAEE558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, int a13, char a14, __int16 a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  sub_1DCAEE564(a1, a2, (uint64_t)&unk_1EAAA7858, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36);
}

void sub_1DCAEE564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, int a13, char a14, __int16 a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  sub_1DCAEFEF4();
  a35 = v45;
  a36 = v46;
  sub_1DCAEFD94();
  sub_1DC87E988(v47);
  sub_1DCAEFDF8();
  sub_1DCAEFF88();
  if (v48)
  {
    sub_1DCAEFE30();
    uint64_t v49 = 0;
    if (!v44) {
      goto LABEL_4;
    }
LABEL_3:
    sub_1DCAEFFBC();
    while (1)
    {
      sub_1DCAF0108();
      if ((v57 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1DCAF0040();
      sub_1DCAF01B4();
      char v37 = &a16;
      sub_1DCB891F8();
      sub_1DCAEFFE4();
      if (v58)
      {
        sub_1DC9646B4();
        while (1)
        {
          sub_1DCAEFF7C();
          if (v58)
          {
            if (v60) {
              break;
            }
          }
          sub_1DCAF0204();
          if (!v58)
          {
            sub_1DC964784();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1DC9646C8();
LABEL_28:
      *(void *)(v40 + ((v59 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v59;
      uint64_t v61 = (void *)(*(void *)(v39 + 48) + 16 * v59);
      *uint64_t v61 = v43;
      v61[1] = v42;
      *(void *)(*(void *)(v39 + 56) + 8 * v59) = v41;
      sub_1DCAEFE20();
      if (v44) {
        goto LABEL_3;
      }
LABEL_4:
      if (__OFADD__(v49, 1)) {
        goto LABEL_38;
      }
      sub_1DCAF0178();
      if (v50 == v51) {
        break;
      }
      sub_1DCAF0144();
      if (!v54)
      {
        uint64_t v49 = v52 + 1;
        if (v52 + 1 >= v53) {
          goto LABEL_30;
        }
        if (!*(void *)&v37[8 * v49])
        {
          sub_1DCAF0024();
          if (v50 == v51)
          {
LABEL_30:
            swift_release();
            unint64_t v36 = a10;
            goto LABEL_31;
          }
          if (!*(void *)&v37[8 * v55])
          {
            while (1)
            {
              uint64_t v49 = v55 + 1;
              if (__OFADD__(v55, 1)) {
                goto LABEL_39;
              }
              if (v49 >= v56) {
                goto LABEL_30;
              }
              ++v55;
              if (*(void *)&v37[8 * v49]) {
                goto LABEL_17;
              }
            }
          }
          uint64_t v49 = v55;
        }
      }
LABEL_17:
      sub_1DCAEFFA4();
    }
    swift_release();
    sub_1DCAF0138();
LABEL_31:
    if (a14)
    {
      sub_1DCAEFDE4();
      if (v50 != v51) {
        sub_1DCAEFF5C(v62);
      }
      else {
        sub_1DCAEFE84(v62);
      }
      *(void *)(v38 + 16) = 0;
    }
  }
  swift_release();
  void *v36 = v39;
  sub_1DCAEFF10();
}

uint64_t sub_1DCAEE710(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_1DCAEE72C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCAEE778(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t type metadata accessor for SNUltronUtils.UltronReportingPlan(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA9DA8);
}

uint64_t type metadata accessor for SNUltronUtils.UltronReportTemplate(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA9D98);
}

uint64_t sub_1DCAEE804(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v3();
  return a1;
}

uint64_t sub_1DCAEE858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCAF0058();
  v5(v4);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

uint64_t sub_1DCAEE8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCAEE91C(void *a1)
{
  return sub_1DCAEEAB8(a1);
}

unint64_t sub_1DCAEE934()
{
  unint64_t result = qword_1EAAA9CF8;
  if (!qword_1EAAA9CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9CF8);
  }
  return result;
}

uint64_t sub_1DCAEE984()
{
  type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  sub_1DCB86A18();
  sub_1DC88819C();
  sub_1DC88D5C8();
  v0();
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  swift_bridgeObjectRelease();
  sub_1DCB86B98();
  sub_1DC88819C();
  sub_1DC88D5C8();
  v1();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCAEEAB8(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SNUltronUtils.UltronReportTemplate(0) - 8);
  return sub_1DCAECE24(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), *a1);
}

uint64_t sub_1DCAEEB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA6A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for SNUltronUtils()
{
}

unsigned char *sub_1DCAEEB98(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCAEEC34);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SNUltronUtils.DomainError()
{
}

uint64_t *sub_1DCAEEC68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DCB86A18();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
    int64_t v9 = (uint64_t *)((char *)a1 + v8);
    int64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *int64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1DCB86B98();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DCAEEDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1DCB86B98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAEEEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  int64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DCB86B98();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCAEEFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  int64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1DCB86B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCAEF0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DCB86B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1DCAEF1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for SNUltronUtils.UltronReportingPlan(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1DCB86B98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCAEF2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCAEF2C4);
}

uint64_t sub_1DCAEF2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  sub_1DC913CA0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_1DCB86B98();
    sub_1DC913CA0();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return sub_1DCAF022C(a1 + *(int *)(a3 + 24));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v9, a2, v8);
}

uint64_t sub_1DCAEF36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCAEF380);
}

void sub_1DCAEF380(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  sub_1DC913CA0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_1DCB86B98();
    sub_1DC913CA0();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v11, a2, a2, v10);
}

uint64_t sub_1DCAEF434()
{
  uint64_t result = type metadata accessor for SNUltronUtils.UltronReportingPlan(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DCB86B98();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DCAEF504(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DCB86A18();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DCAEF5DC(uint64_t a1)
{
  uint64_t v2 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAEF654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCAEF6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCAEF778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DCAEF7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCAEF880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCAEF894);
}

uint64_t sub_1DCAEF894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DCB86A18();
  sub_1DC913CA0();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_1DCAF022C(a1 + *(int *)(a3 + 20));
  }

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v6);
}

uint64_t sub_1DCAEF914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCAEF928);
}

void sub_1DCAEF928(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DCAF0058();
  sub_1DCB86A18();
  sub_1DC913CA0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_1DCAEF9B0()
{
  uint64_t result = sub_1DCB86A18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCAEFA44()
{
  return sub_1DCAEFB28(&qword_1EAAA9DB8, (void (*)(uint64_t))type metadata accessor for SNUltronUtils.UltronReportingPlan);
}

unint64_t sub_1DCAEFA90()
{
  unint64_t result = qword_1EAAA9DC0;
  if (!qword_1EAAA9DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9DC0);
  }
  return result;
}

unint64_t sub_1DCAEFADC()
{
  unint64_t result = qword_1EAAA9DD0;
  if (!qword_1EAAA9DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9DD0);
  }
  return result;
}

uint64_t sub_1DCAEFB28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNUltronUtils.UltronReportingPlan.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAEFC3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNUltronUtils.UltronReportingPlan.CodingKeys()
{
  return &type metadata for SNUltronUtils.UltronReportingPlan.CodingKeys;
}

unint64_t sub_1DCAEFC78()
{
  unint64_t result = qword_1EAAA9DE0;
  if (!qword_1EAAA9DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9DE0);
  }
  return result;
}

unint64_t sub_1DCAEFCC8()
{
  unint64_t result = qword_1EAAA9DE8;
  if (!qword_1EAAA9DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9DE8);
  }
  return result;
}

unint64_t sub_1DCAEFD18()
{
  unint64_t result = qword_1EAAA9DF0[0];
  if (!qword_1EAAA9DF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA9DF0);
  }
  return result;
}

void sub_1DCAEFD64(unint64_t a1@<X8>)
{
  *(void *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  uint64_t v5 = (void *)(*(void *)(v1 + 48) + 16 * a1);
  *uint64_t v5 = v3;
  v5[1] = v2;
}

uint64_t sub_1DCAEFDF8()
{
  return sub_1DCB88CE8();
}

void sub_1DCAEFE20()
{
  ++*(void *)(v0 + 16);
}

uint64_t sub_1DCAEFE30()
{
  return swift_retain();
}

uint64_t sub_1DCAEFE84@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCAEE710(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_1DCAEFEA4()
{
  return swift_retain();
}

void sub_1DCAEFF5C(char a1@<W8>)
{
  void *v1 = -1 << a1;
}

uint64_t sub_1DCAEFFD4()
{
  return 0;
}

uint64_t sub_1DCAF0004()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCAF0030()
{
  return v0;
}

uint64_t sub_1DCAF0040()
{
  return sub_1DCB891A8();
}

uint64_t sub_1DCAF0058()
{
  return 0;
}

uint64_t sub_1DCAF0064()
{
  return 0;
}

void sub_1DCAF0088()
{
  sub_1DC89809C();
}

uint64_t sub_1DCAF00AC()
{
  return swift_dynamicCast();
}

uint64_t sub_1DCAF00C8(uint64_t a1)
{
  return MEMORY[0x1F41864C8](v1, a1, 0, 0, 0);
}

void sub_1DCAF0154()
{
  sub_1DC89809C();
}

uint64_t sub_1DCAF019C()
{
  return v0;
}

uint64_t sub_1DCAF01B4()
{
  return sub_1DCB879B8();
}

uint64_t sub_1DCAF0214()
{
  return sub_1DCB879B8();
}

uint64_t sub_1DCAF022C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1DCAF0268()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCAF0288(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB89288();
  if (!v3)
  {
    sub_1DC881A8C(v9, v9[3]);
    uint64_t v7 = *(void *)(a3 + 8);
    swift_getAssociatedTypeWitness();
    type metadata accessor for TypedCodableByNSCoding();
    swift_getWitnessTable();
    sub_1DCB89038();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 24))(&v10, a2, v7);
    sub_1DC8818D0((uint64_t)v9);
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCAF03E4(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB892A8();
  (*(void (**)(void **__return_ptr, uint64_t, void))(*(void *)(a3 + 8) + 16))(&v10, a2, *(void *)(a3 + 8));
  uint64_t v5 = v10;
  swift_getAssociatedTypeWitness();
  unsigned int v6 = (void *)nullsub_1(v5);
  uint64_t v10 = v6;
  sub_1DC89D39C((uint64_t)v8, v9);
  type metadata accessor for TypedCodableByNSCoding();
  swift_getWitnessTable();
  sub_1DCB89058();

  return sub_1DC8818D0((uint64_t)v8);
}

uint64_t sub_1DCAF0524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1DCAF0B1C(a2, a3, a4, a5);
  if (!v5)
  {
    unint64_t v7 = sub_1DCAF0A04(a1);
    a1 = sub_1DC93561C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return a1;
}

char *sub_1DCAF05C0(uint64_t a1, uint64_t a2)
{
  io_object_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  uint64_t v3 = (char *)IOObjectRelease(v2);
  return sub_1DCB2F82C(v3);
}

uint64_t sub_1DCAF0600()
{
  IONotificationPortDestroy(*(IONotificationPortRef *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IONotificationPort()
{
  return self;
}

uint64_t sub_1DCAF065C(uint64_t a1)
{
  if (!a1)
  {
    type metadata accessor for SNError();
    sub_1DCAF174C();
    sub_1DC8E7B68();
    sub_1DC931D18(v2, v3, (uint64_t)"expected non-null object");
    swift_willThrow();
  }
  return a1;
}

uint64_t sub_1DCAF06BC()
{
  return *v0;
}

uint64_t sub_1DCAF06C4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = a1;
  uint64_t result = sub_1DCAF065C(a1);
  if (!v2) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_1DCAF06F4()
{
  sub_1DCAF08C8();
  sub_1DCAF173C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOObject()
{
  return self;
}

uint64_t sub_1DCAF075C(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  io_iterator_t existing = 0;
  CFDictionaryRef v3 = (const __CFDictionary *)sub_1DCB87788();
  MatchingServices = (char *)IOServiceGetMatchingServices(a1, v3, &existing);
  sub_1DCB2F82C(MatchingServices);
  if (!v1)
  {
    a1 = sub_1DCAF0828(existing);
    MEMORY[0x1E01A84F0]();
  }
  return a1;
}

uint64_t sub_1DCAF0828(uint64_t a1)
{
  if (!a1)
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000018, 0x80000001DCB9AD00);
    swift_willThrow();
  }
  return a1;
}

uint64_t sub_1DCAF08B0(uint64_t a1)
{
  return sub_1DCAF065C(a1);
}

uint64_t sub_1DCAF08C8()
{
  uint64_t v1 = (char *)IOObjectRelease(*(_DWORD *)(v0 + 16));
  sub_1DCB2F82C(v1);
  return v0;
}

uint64_t sub_1DCAF0928()
{
  sub_1DCAF08C8();
  sub_1DCAF173C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOService()
{
  return self;
}

uint64_t sub_1DCAF0990()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DCAF09D8(int a1)
{
  sub_1DCAF173C();
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_1DCAF0A04(uint64_t a1)
{
  int v3 = sub_1DCAF075C(a1);
  if (!v1)
  {
    int v4 = v3;
    sub_1DC87E988(&qword_1EAAA9EF8);
    *(_DWORD *)(swift_initStackObject() + 16) = v4;
    uint64_t v2 = MEMORY[0x1E4FBC860];
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (sub_1DCAF1078())
    {
      do
      {
        uint64_t v5 = swift_retain();
        MEMORY[0x1E01A6BF0](v5);
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DCB87CB8();
        }
        sub_1DCB87D28();
        sub_1DCB87C68();
        swift_release();
      }
      while (sub_1DCAF1078());
      uint64_t v2 = v7;
    }
    swift_setDeallocating();
    sub_1DCAF0ED8();
    swift_deallocClassInstance();
  }
  return v2;
}

uint64_t sub_1DCAF0B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC87E988(&qword_1EAA9C710);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBBCDA0;
  uint64_t v10 = sub_1DCAF0CB8(a1, a2, MEMORY[0x1E4F2EEB8]);
  if (v4)
  {
    *(void *)(inited + 16) = 0;
    swift_release();
  }
  else
  {
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = sub_1DCAF0CB8(a3, a4, MEMORY[0x1E4F2EEC0]);
    swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x1E4FBC860];
    for (uint64_t i = 32; i != 48; i += 8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DCB17F74();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1DCAE819C(v12);
    swift_bridgeObjectRelease();
    a3 = sub_1DCAF237C(v14);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1DC93770C();
  }
  return a3;
}

uint64_t sub_1DCAF0CB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1DCB87998();
  uint64_t v5 = (void *)a3(v4 + 32);
  swift_release();
  if (v5)
  {
    id v6 = v5;
    sub_1DCB877A8();

    uint64_t v4 = 0;
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v8 = 0;
    swift_willThrow();
  }
  else
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1DCAF0DB4(io_iterator_t a1)
{
  uint64_t result = IOIteratorIsValid(a1);
  if (!result)
  {
    type metadata accessor for SNError();
    sub_1DC8E7B68();
    sub_1DCA14B2C(v2, v3, 1, 0, 0xD000000000000013, 0x80000001DCB9ACE0);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCAF0E34@<X0>(io_iterator_t a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_1DCAF0DB4(a1);
  if (!v4)
  {
    uint64_t v10 = IOIteratorNext(a1);
    if (v10)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(v10, a2, a3);
      uint64_t v11 = a4;
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v11 = a4;
      uint64_t v12 = 1;
    }
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v11, v12, 1, a2);
  }
  return result;
}

uint64_t sub_1DCAF0ED8()
{
  uint64_t v1 = (char *)IOObjectRelease(*(_DWORD *)(v0 + 16));
  sub_1DCB2F82C(v1);
  return v0;
}

uint64_t sub_1DCAF0F38()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = type metadata accessor for UnsafeIOIterator();
  sub_1DCAF05C0(v1, (uint64_t)&off_1EC8A4390);
  return v0;
}

uint64_t sub_1DCAF1034()
{
  sub_1DCAF0F38();
  sub_1DCAF173C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOIterator()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAF1078()
{
  io_iterator_t v1 = *(_DWORD *)(v0 + 16);
  if (IOIteratorIsValid(v1))
  {
    uint64_t v2 = IOIteratorNext(v1);
    if (v2)
    {
      int v3 = v2;
      sub_1DCAF065C(v2);
      type metadata accessor for IOService();
      uint64_t result = swift_allocObject();
      *(_DWORD *)(result + 16) = v3;
      return result;
    }
  }
  else
  {
    type metadata accessor for SNError();
    id v4 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000013, 0x80000001DCB9ACE0);
    swift_willThrow();
  }
  return 0;
}

uint64_t sub_1DCAF1154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v27 = v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - v8;
  sub_1DC88D538();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v26 - v16;
  io_iterator_t v18 = v1[4];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1DCAF0E34(v18, AssociatedTypeWitness, AssociatedConformanceWitness, (uint64_t)v9);
  uint64_t v20 = v27;
  int v21 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v9, 1, AssociatedTypeWitness);
  uint64_t v22 = v28;
  if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v5);
    uint64_t v23 = 1;
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v24(v17, v9, AssociatedTypeWitness);
    v24(v15, v17, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v15, v3, v2);
    uint64_t v23 = 0;
  }
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v22, v23, 1, v3);
}

uint64_t sub_1DCAF13AC@<X0>(int *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAF09D8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAF13D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCAF1154(a1);
}

size_t sub_1DCAF13FC(uint32_t selector, uint64_t *input, unint64_t inputCnt, void *inputStruct, uint64_t a5, uint64_t *output, unint64_t a7, void *outputStruct, uint64_t a9, mach_port_t connection)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if ((a7 & 0x8000000000000000) != 0 || HIDWORD(a7)) {
    goto LABEL_16;
  }
  uint32_t outputCnt = a7;
  if (outputStruct)
  {
    size_t v15 = a9 - (void)outputStruct;
    if ((inputCnt & 0x8000000000000000) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    size_t v15 = 0;
    if ((inputCnt & 0x8000000000000000) != 0)
    {
LABEL_16:
      sub_1DC8AF148();
      size_t result = sub_1DCB88C58();
      __break(1u);
      return result;
    }
  }
  if (HIDWORD(inputCnt)) {
    goto LABEL_16;
  }
  if (inputStruct) {
    size_t v12 = a5 - (void)inputStruct;
  }
  else {
    size_t v12 = 0;
  }
  uint64_t v13 = (char *)IOConnectCallMethod(connection, selector, input, inputCnt, inputStruct, v12, output, &outputCnt, outputStruct, &v15);
  size_t result = (size_t)sub_1DCB2F82C(v13);
  if (!v10)
  {
    if ((v15 & 0x8000000000000000) != 0 || HIDWORD(v15)) {
      goto LABEL_16;
    }
    return outputCnt | (v15 << 32);
  }
  return result;
}

size_t sub_1DCAF1558(uint32_t a1, uint64_t *a2, unint64_t a3, void *a4, uint64_t a5, uint64_t *a6, unint64_t a7, void *a8, uint64_t a9)
{
  return sub_1DCAF13FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, *v9);
}

uint64_t sub_1DCAF1588()
{
  io_iterator_t v1 = (char *)IOServiceClose(*(_DWORD *)(v0 + 16));
  sub_1DCB2F82C(v1);
  return v0;
}

uint64_t sub_1DCAF15E4()
{
  sub_1DCAF1588();
  sub_1DCAF173C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOConnect()
{
  return self;
}

void type metadata accessor for UnsafeIOConnect()
{
}

uint64_t type metadata accessor for UnsafeIOIterator()
{
  return sub_1DC8866E4();
}

void type metadata accessor for UnsafeIOService()
{
}

void type metadata accessor for UnsafeIOObject()
{
}

void type metadata accessor for UnsafeIONotificationPort()
{
}

_UNKNOWN **sub_1DCAF167C()
{
  return &off_1EC8A3F00;
}

size_t sub_1DCAF1688(uint32_t a1, uint64_t *a2, unint64_t a3, void *a4, uint64_t a5, uint64_t *a6, unint64_t a7, void *a8, uint64_t a9)
{
  return sub_1DCAF13FC(a1, a2, a3, a4, a5, a6, a7, a8, a9, *(_DWORD *)(v9 + 16));
}

_UNKNOWN **sub_1DCAF16B8()
{
  return &off_1EC8A4390;
}

_UNKNOWN **sub_1DCAF16C4()
{
  return &off_1EC8A3F30;
}

_UNKNOWN **sub_1DCAF16D0()
{
  return &off_1F37E8688;
}

_UNKNOWN **sub_1DCAF16DC()
{
  return &off_1EC8A3A10;
}

size_t sub_1DCAF16E8(uint32_t a1, uint64_t *a2, unint64_t a3, void *a4, uint64_t a5, uint64_t *a6, unint64_t a7, void *a8, uint64_t a9)
{
  return sub_1DCAF1688(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1DCAF1724@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1DCAF06C4(a1, a2);
}

uint64_t sub_1DCAF173C()
{
  return v0;
}

uint64_t sub_1DCAF1760(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  sub_1DC897B8C();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      swift_bridgeObjectRetain();
      unint64_t v6 = *(void *)(v9 + 16);
      if (v6 >= *(void *)(v9 + 24) >> 1) {
        sub_1DC897B8C();
      }
      v3 += 3;
      *(void *)(v9 + 16) = v6 + 1;
      uint64_t v7 = v9 + 16 * v6;
      *(void *)(v7 + 32) = v5;
      *(void *)(v7 + 40) = v4;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1DCAF184C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1DC897B8C();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v7 = *(void *)(v10 + 16);
      unint64_t v6 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_1DC897B8C();
      }
      v3 += 3;
      *(void *)(v10 + 16) = v7 + 1;
      uint64_t v8 = v10 + 16 * v7;
      *(void *)(v8 + 32) = v5;
      *(void *)(v8 + 40) = v4;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1DCAF1938(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >= v3) {
    unint64_t v5 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v5 = *(void *)(a2 + 16);
  }
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1DC897B8C();
  unint64_t v22 = v3;
  uint64_t v23 = a1;
  unint64_t v21 = v5;
  if (v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = (uint64_t *)(a1 + 40);
    unint64_t v7 = v4;
    unint64_t v8 = v4;
    while (v3)
    {
      if (!v7) {
        goto LABEL_23;
      }
      uint64_t v9 = *(v6 - 1);
      uint64_t v10 = *v6;
      swift_bridgeObjectRetain();
      unint64_t v11 = *(void *)(v24 + 16);
      if (v11 >= *(void *)(v24 + 24) >> 1) {
        sub_1DC897B8C();
      }
      *(void *)(v24 + 16) = v11 + 1;
      uint64_t v12 = v24 + 16 * v11;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v10;
      --v7;
      --v3;
      v6 += 2;
      if (!--v5) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v8 = v4;
LABEL_13:
    if (v22 <= v8)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    unint64_t v13 = v21;
    uint64_t v14 = (uint64_t *)(v23 + 16 * v21 + 40);
    while (v13 < v22)
    {
      if (v8 == v13) {
        goto LABEL_21;
      }
      if (v13 >= v8) {
        goto LABEL_25;
      }
      unint64_t v15 = v8;
      uint64_t v16 = *(v14 - 1);
      uint64_t v17 = *v14;
      unint64_t v19 = *(void *)(v24 + 16);
      unint64_t v18 = *(void *)(v24 + 24);
      swift_bridgeObjectRetain();
      if (v19 >= v18 >> 1) {
        sub_1DC897B8C();
      }
      ++v13;
      *(void *)(v24 + 16) = v19 + 1;
      uint64_t v20 = v24 + 16 * v19;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = v17;
      v14 += 2;
      unint64_t v8 = v15;
      if (v22 == v13) {
        goto LABEL_21;
      }
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1DCAF1B34(uint64_t a1, void (*a2)(long long *, long long *, long long *))
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v48 = MEMORY[0x1E4FBC860];
  sub_1DC897CBC(0, v4, 0);
  uint64_t v5 = v48;
  sub_1DCA21AF4(v47, a1);
  uint64_t v6 = v47[0];
  int64_t v7 = v47[3];
  unint64_t v8 = v47[4];
  uint64_t v38 = v47[1];
  int64_t v39 = (unint64_t)(v47[2] + 64) >> 6;
  int64_t v37 = v4;
  if (!v4)
  {
    uint64_t result = swift_bridgeObjectRetain();
LABEL_28:
    if (!v8) {
      goto LABEL_30;
    }
LABEL_29:
    unint64_t v24 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v25 = v24 | (v7 << 6);
    while (1)
    {
      char v29 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v25);
      uint64_t v5 = *v29;
      uint64_t v30 = v29[1];
      sub_1DC87E9DC(*(void *)(v6 + 56) + 32 * v25, (uint64_t)&v42);
      *(void *)&long long v41 = v5;
      *((void *)&v41 + 1) = v30;
      long long v45 = v42;
      long long v46 = v43;
      long long v44 = v41;
      swift_bridgeObjectRetain();
      a2(&v41, &v42, &v44);
      sub_1DC88CC04((uint64_t)&v44, &qword_1EAAA6A88);
      if (v2)
      {
        swift_release();
        swift_release();
        return v5;
      }
      uint64_t v5 = v48;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DC897CBC(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v48;
      }
      unint64_t v32 = *(void *)(v5 + 16);
      unint64_t v31 = *(void *)(v5 + 24);
      if (v32 >= v31 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DC897CBC((char *)(v31 > 1), v32 + 1, 1);
        uint64_t v5 = v48;
      }
      *(void *)(v5 + 16) = v32 + 1;
      uint64_t v33 = (_OWORD *)(v5 + 48 * v32);
      long long v34 = v41;
      long long v35 = v43;
      v33[3] = v42;
      v33[4] = v35;
      _OWORD v33[2] = v34;
      if (v8) {
        goto LABEL_29;
      }
LABEL_30:
      int64_t v26 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        break;
      }
      if (v26 >= v39) {
        goto LABEL_56;
      }
      unint64_t v27 = *(void *)(v38 + 8 * v26);
      if (!v27)
      {
        int64_t v28 = v7 + 2;
        if (v7 + 2 >= v39) {
          goto LABEL_56;
        }
        unint64_t v27 = *(void *)(v38 + 8 * v28);
        if (v27) {
          goto LABEL_39;
        }
        int64_t v28 = v7 + 3;
        if (v7 + 3 >= v39) {
          goto LABEL_56;
        }
        unint64_t v27 = *(void *)(v38 + 8 * v28);
        if (v27) {
          goto LABEL_39;
        }
        int64_t v28 = v7 + 4;
        if (v7 + 4 >= v39) {
          goto LABEL_56;
        }
        unint64_t v27 = *(void *)(v38 + 8 * v28);
        if (v27)
        {
LABEL_39:
          int64_t v26 = v28;
        }
        else
        {
          int64_t v26 = v7 + 5;
          if (v7 + 5 >= v39) {
            goto LABEL_56;
          }
          unint64_t v27 = *(void *)(v38 + 8 * v26);
          if (!v27)
          {
            int64_t v36 = v7 + 6;
            while (v36 < v39)
            {
              unint64_t v27 = *(void *)(v38 + 8 * v36++);
              if (v27)
              {
                int64_t v26 = v36 - 1;
                goto LABEL_40;
              }
            }
LABEL_56:
            swift_release();
            return v5;
          }
        }
      }
LABEL_40:
      unint64_t v8 = (v27 - 1) & v27;
      unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
      int64_t v7 = v26;
    }
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_16;
    }
    if (__OFADD__(v7++, 1)) {
      goto LABEL_59;
    }
    if (v7 >= v39) {
      goto LABEL_60;
    }
    unint64_t v14 = *(void *)(v38 + 8 * v7);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_16:
    uint64_t v16 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_1DC87E9DC(*(void *)(v6 + 56) + 32 * v12, (uint64_t)&v42);
    *(void *)&long long v41 = v18;
    *((void *)&v41 + 1) = v17;
    swift_bridgeObjectRetain();
    a2(&v44, &v45, &v41);
    if (v2)
    {
      swift_release();
      swift_release();
      sub_1DC88CC04((uint64_t)&v41, &qword_1EAAA6A88);
      return v5;
    }
    sub_1DC88CC04((uint64_t)&v41, &qword_1EAAA6A88);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DC897CBC(0, *(void *)(v5 + 16) + 1, 1);
      uint64_t v5 = v48;
    }
    unint64_t v20 = *(void *)(v5 + 16);
    unint64_t v19 = *(void *)(v5 + 24);
    if (v20 >= v19 >> 1)
    {
      uint64_t result = (uint64_t)sub_1DC897CBC((char *)(v19 > 1), v20 + 1, 1);
      uint64_t v5 = v48;
    }
    ++v10;
    *(void *)(v5 + 16) = v20 + 1;
    unint64_t v21 = (_OWORD *)(v5 + 48 * v20);
    long long v22 = v44;
    long long v23 = v46;
    v21[3] = v45;
    v21[4] = v23;
    v21[2] = v22;
    if (v10 == v37) {
      goto LABEL_28;
    }
  }
  int64_t v15 = v7 + 1;
  if (v7 + 1 >= v39) {
    goto LABEL_63;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v7 + 2;
  if (v7 + 2 >= v39) {
    goto LABEL_64;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v7 + 3;
  if (v7 + 3 >= v39) {
    goto LABEL_65;
  }
  unint64_t v14 = *(void *)(v38 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v7 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v39) {
      goto LABEL_62;
    }
    unint64_t v14 = *(void *)(v38 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

void sub_1DCAF1FF8(uint64_t isUniquelyReferenced_nonNull_native, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v2 = isUniquelyReferenced_nonNull_native;
  uint64_t v3 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = isUniquelyReferenced_nonNull_native + 40;
    uint64_t v19 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
    uint64_t v16 = v3 - 1;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    uint64_t v20 = isUniquelyReferenced_nonNull_native;
    uint64_t v17 = isUniquelyReferenced_nonNull_native + 40;
    do
    {
      uint64_t v18 = v6;
      int64_t v7 = (uint64_t *)(v5 + 16 * v4);
      unint64_t v8 = v4;
      while (1)
      {
        if (v8 >= *(void *)(v2 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v9 = *(v7 - 1);
        uint64_t v10 = *v7;
        unint64_t v4 = v8 + 1;
        v22[0] = v9;
        v22[1] = v10;
        MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
        _OWORD v15[2] = v22;
        swift_bridgeObjectRetain();
        uint64_t v11 = v21;
        swift_bridgeObjectRetain();
        char v12 = sub_1DCAF2A10(sub_1DCA42EB4, (uint64_t)v15, v11);
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          break;
        }
        isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
        v7 += 2;
        ++v8;
        uint64_t v2 = v20;
        if (v19 == v4) {
          goto LABEL_13;
        }
      }
      uint64_t v6 = v18;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DC897B8C();
        uint64_t v6 = v23;
      }
      unint64_t v13 = *(void *)(v6 + 16);
      if (v13 >= *(void *)(v6 + 24) >> 1)
      {
        sub_1DC897B8C();
        uint64_t v6 = v23;
      }
      *(void *)(v6 + 16) = v13 + 1;
      uint64_t v14 = v6 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v10;
      uint64_t v5 = v17;
      uint64_t v2 = v20;
    }
    while (v16 != v8);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1DCAF21E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = a1 + 40;
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v18 = a1 + 40;
    do
    {
      uint64_t v19 = v7;
      unint64_t v8 = (uint64_t *)(v6 + 16 * v5);
      unint64_t v9 = v5;
      while (1)
      {
        if (v9 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v11 = *(v8 - 1);
        uint64_t v10 = *v8;
        unint64_t v5 = v9 + 1;
        uint64_t v12 = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        if (!v12) {
          break;
        }
        swift_bridgeObjectRetain();
        sub_1DC9637DC(v11, v10);
        char v14 = v13;
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          break;
        }
        swift_bridgeObjectRelease();
        v8 += 2;
        ++v9;
        if (v4 == v5) {
          goto LABEL_14;
        }
      }
      uint64_t v7 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC897B8C();
        uint64_t v7 = v19;
      }
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v16 = v15 + 1;
      if (v15 >= *(void *)(v7 + 24) >> 1)
      {
        sub_1DC897B8C();
        unint64_t v16 = v15 + 1;
        uint64_t v7 = v19;
      }
      *(void *)(v7 + 16) = v16;
      uint64_t v17 = v7 + 16 * v15;
      *(void *)(v17 + 32) = v11;
      *(void *)(v17 + 40) = v10;
      uint64_t v6 = v18;
    }
    while (v4 - 1 != v9);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1DCAF237C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1DCB03B9C();
  sub_1DC897B8C();
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DC8B9F3C(v3, (uint64_t)v17, (uint64_t *)&unk_1EAAAA8F0);
      uint64_t v4 = v17[0];
      uint64_t v5 = v17[1];
      sub_1DC87E9DC((uint64_t)&v18, (uint64_t)v16);
      swift_bridgeObjectRetain();
      sub_1DC8818D0((uint64_t)v16);
      sub_1DC88CC04((uint64_t)v17, (uint64_t *)&unk_1EAAAA8F0);
      uint64_t v6 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCB03AB8();
        sub_1DC897B8C();
        uint64_t v6 = v19;
      }
      unint64_t v7 = *(void *)(v6 + 16);
      if (v7 >= *(void *)(v6 + 24) >> 1)
      {
        sub_1DC897B8C();
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v7 + 1;
      uint64_t v8 = v6 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v5;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v6 = v19;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_1DCB3077C(v9);
  uint64_t v11 = *(void *)(v6 + 16);
  swift_release();
  uint64_t v12 = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  if (v11 == v12)
  {
    uint64_t v13 = swift_bridgeObjectRetain();
    return sub_1DCAA7E74(v13);
  }
  else
  {
    sub_1DC88CCDC();
    sub_1DC883884();
    return sub_1DC8E7710(v15, 3);
  }
}

uint64_t sub_1DCAF2538(uint64_t a1)
{
  return sub_1DCAF272C(a1, (uint64_t (*)(void))sub_1DCAF1760, sub_1DCAA7E94);
}

void sub_1DCAF2578()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1DC897B8C();
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v7 = *(void *)(v15 + 16);
      unint64_t v6 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_1DC897B8C();
      }
      v3 += 4;
      *(void *)(v15 + 16) = v7 + 1;
      uint64_t v8 = v15 + 16 * v7;
      *(void *)(v8 + 32) = v5;
      *(void *)(v8 + 40) = v4;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_1DCB3077C(v9);
  uint64_t v11 = *(void *)(v15 + 16);
  swift_release();
  uint64_t v12 = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  if (v11 == v12)
  {
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_1DCAA7EB4(v13);
  }
  else
  {
    sub_1DC88CCDC();
    sub_1DC883884();
    sub_1DC8E7710(v14, 3);
  }
  sub_1DC88D674();
}

uint64_t sub_1DCAF26AC(uint64_t a1)
{
  return sub_1DCAF272C(a1, (uint64_t (*)(void))sub_1DCAF184C, sub_1DCAA7F34);
}

uint64_t sub_1DCAF26EC(uint64_t a1)
{
  return sub_1DCAF272C(a1, (uint64_t (*)(void))sub_1DCAF1760, sub_1DCAA7F74);
}

uint64_t sub_1DCAF272C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = a2();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DCB3077C(v5);
  uint64_t v7 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease();
  if (v7 == v8)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    return a3(v9);
  }
  else
  {
    sub_1DC88CCDC();
    sub_1DC883884();
    return sub_1DC8E7710(v11, 3);
  }
}

uint64_t sub_1DCAF27E4(uint64_t a1, uint64_t a2)
{
  sub_1DCAF1938(a1, a2);
  uint64_t v5 = v4;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DCB3077C(v6);
  uint64_t v8 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v8 == v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1DCAA8034(a1, a2);
  }
  else
  {
    sub_1DC88CCDC();
    swift_allocError();
    *uint64_t v11 = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1DCAF28B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1DC963A9C();
    if (v5) {
      return sub_1DC87E9DC(*(void *)(a1 + 56) + 32 * v4, a2);
    }
  }
  sub_1DC88CCDC();
  sub_1DC883884();
  return sub_1DC8E7710(v7, 8);
}

uint64_t sub_1DCAF292C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v6 = sub_1DCB03BB0(a1, a2, a3);
    if (v7) {
      return sub_1DC87E9DC(*(void *)(v4 + 56) + 32 * v6, a4);
    }
  }
  sub_1DC88CCDC();
  sub_1DC883884();
  return sub_1DC8E7710(v9, 8);
}

uint64_t sub_1DCAF299C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAF29B4(a1, a2, a3);
}

uint64_t sub_1DCAF29B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v4 = sub_1DCB03BB0(a1, a2, a3);
    if (v5) {
      return *(unsigned int *)(*(void *)(v3 + 56) + 4 * v4);
    }
  }
  sub_1DC88CCDC();
  sub_1DC883884();
  return sub_1DC8E7710(v7, 8);
}

uint64_t sub_1DCAF2A10(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  sub_1DCA21AF4(v22, a3);
  uint64_t v5 = v22[0];
  uint64_t v23 = v22[1];
  int64_t v6 = v22[3];
  unint64_t v7 = v22[4];
  int64_t v8 = (unint64_t)(v22[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_15;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v12 >= v8) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v23 + 8 * v12);
    if (!v13)
    {
      int64_t v14 = v6 + 2;
      if (v6 + 2 >= v8) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13) {
        goto LABEL_13;
      }
      int64_t v14 = v6 + 3;
      if (v6 + 3 >= v8) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13) {
        goto LABEL_13;
      }
      int64_t v14 = v6 + 4;
      if (v6 + 4 >= v8) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v14);
      if (v13)
      {
LABEL_13:
        int64_t v12 = v14;
      }
      else
      {
        int64_t v12 = v6 + 5;
        if (v6 + 5 >= v8) {
          goto LABEL_25;
        }
        unint64_t v13 = *(void *)(v23 + 8 * v12);
        if (!v13)
        {
          int64_t v19 = v6 + 6;
          while (v19 < v8)
          {
            unint64_t v13 = *(void *)(v23 + 8 * v19++);
            if (v13)
            {
              int64_t v12 = v19 - 1;
              goto LABEL_14;
            }
          }
LABEL_25:
          swift_release();
          char v20 = 0;
          return v20 & 1;
        }
      }
    }
LABEL_14:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v6 = v12;
LABEL_15:
    uint64_t v15 = (void *)(*(void *)(v5 + 56) + 16 * v11);
    uint64_t v16 = v15[1];
    v21[0] = *v15;
    v21[1] = v16;
    swift_bridgeObjectRetain();
    char v17 = a1(v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v20 & 1;
    }
    char v18 = v17;
    uint64_t result = swift_bridgeObjectRelease();
    if (v18)
    {
      swift_release();
      char v20 = 1;
      return v20 & 1;
    }
  }
  __break(1u);
  return result;
}

void sub_1DCAF2BE8()
{
  sub_1DC88D6B0();
  uint64_t v27 = v1;
  uint64_t v28 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v12);
  int64_t v14 = (char *)&v25 - v13;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(0x6A2E657069636572, 0xEB000000006E6F73, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v6, v4);
  if (v0)
  {
    uint64_t v18 = sub_1DCB036D4();
    v19(v18);
  }
  else
  {
    uint64_t v20 = v16;
    uint64_t v29 = v8;
    unint64_t v21 = v17;
    uint64_t v22 = sub_1DC9BDB24();
    unint64_t v26 = v21;
    sub_1DCAFA710(v22, v27, v10, v29, v6, v4, v28);
    uint64_t v23 = sub_1DCB036D4();
    v24(v23);
    sub_1DC881920(v20, v26);
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

uint64_t sub_1DCAF2DDC@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = *(void *)(result + 16);
  if (v3 >> 61)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1DC9E0FCC(result + 32, result + 32 + 4 * v3);
    a2[3] = MEMORY[0x1E4F277C0];
    *a2 = result;
    a2[1] = v4;
  }
  return result;
}

uint64_t sub_1DCAF2E30(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1DCAF2E60(a1, a2, a3, a4, a5);
}

uint64_t sub_1DCAF2E48(void *a1, uint64_t a2)
{
  return sub_1DCAF31B0(a1, a2);
}

uint64_t sub_1DCAF2E60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v8 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 <= 0x7FFFFFFF)
  {
    uint64_t v5 = a5;
    uint64_t v6 = a3;
    uint64_t v7 = a2;
    int v9 = sub_1DCB4F0C0(a5, (a4 >> 1) - a3);
    uint64_t v10 = sub_1DCB12950(*(int *)(v5 + 28) * (uint64_t)v9 / 8, (__n128)0, (__n128)0);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  sub_1DC987144();
  uint64_t v10 = v14;
LABEL_5:
  int v15 = 0;
  if (sub_1DCB4F0E8(v5, (float32x4_t *)(v7 + 4 * v6), v10 + 32, v8, &v15))
  {
    unint64_t v11 = *(void *)(v10 + 16);
    if (v11 >> 58) {
      __break(1u);
    }
    uint64_t v12 = sub_1DC88BF44((int *)(v10 + 32), 8 * v11, *(int *)(v5 + 28));
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB91E10);
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1DCAF3014(float32x4_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = a2;
    if (a2 <= 0x7FFFFFFF)
    {
      uint64_t v3 = a3;
      uint64_t v5 = a1;
      int v6 = sub_1DCB4F0C0(a3, a2);
      uint64_t v7 = sub_1DCB12950(*(int *)(v3 + 28) * (uint64_t)v6 / 8, (__n128)0, (__n128)0);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  sub_1DC987144();
  uint64_t v7 = v10;
LABEL_4:
  int v11 = 0;
  if (sub_1DCB4F0E8(v3, v5, v7 + 32, v4, &v11))
  {
    unint64_t v8 = *(void *)(v7 + 16);
    if (v8 >> 58) {
      __break(1u);
    }
    uint64_t v3 = sub_1DC88BF44((int *)(v7 + 32), 8 * v8, *(int *)(v3 + 28));
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB91E10);
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1DCAF31B0(void *a1, uint64_t a2)
{
  sub_1DC881A8C(a1, a1[3]);
  uint64_t v5 = sub_1DCB866A8();
  if (v5 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v5 <= 0x7FFFFFFF)
  {
    int v6 = sub_1DCB4F0C0(a2, v5);
    uint64_t v7 = sub_1DCB12950(*(int *)(a2 + 28) * (uint64_t)v6 / 8, (__n128)0, (__n128)0);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = v2;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_15;
  }
  __break(1u);
LABEL_15:
  sub_1DC987144();
  uint64_t v7 = isUniquelyReferenced_nonNull_native;
LABEL_4:
  uint64_t v9 = v7 + 32;
  uint64_t v12 = v7 + 32;
  MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
  sub_1DC881A8C(a1, a1[3]);
  uint64_t result = sub_1DC913DD0();
  if (v13)
  {
    if (v7 == -32)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    if (v9 == v12)
    {
      swift_bridgeObjectRelease();
      return a2;
    }
    __break(1u);
    __break(1u);
    goto LABEL_17;
  }
  if (v7 != -32)
  {
    if (v9 == v12)
    {
      unint64_t v11 = *(void *)(v7 + 16);
      if (!(v11 >> 58))
      {
        a2 = sub_1DC88BF44((int *)(v7 + 32), 8 * v11, *(int *)(a2 + 28));
        swift_bridgeObjectRelease();
        return a2;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1DCAF33B8(float32x4_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  int v10 = 0;
  uint64_t v7 = *a4;
  sub_1DC881A8C(a5, a5[3]);
  uint64_t v8 = sub_1DCB866A8();
  if (v8 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if (v8 > 0x7FFFFFFF) {
    goto LABEL_7;
  }
  uint64_t result = sub_1DCB4F0E8(a3, a1, v7, v8, &v10);
  if ((result & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB91E10);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCAF34EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v34[5] = *MEMORY[0x1E4F143B8];
  sub_1DC881A8C(a1, a1[3]);
  uint64_t result = sub_1DCB89288();
  if (!v2)
  {
    sub_1DC881A8C(v34, v34[3]);
    sub_1DC9BFD10();
    sub_1DCB89038();
    long long v5 = v33;
    switch(*((void *)&v33 + 1) >> 62)
    {
      case 1:
        goto LABEL_5;
      case 2:
        uint64_t v14 = *(void *)(v33 + 16);
        uint64_t v15 = *(void *)(v33 + 24);
        swift_retain();
        swift_retain();
        uint64_t v16 = sub_1DCB867D8();
        if (!v16) {
          goto LABEL_18;
        }
        uint64_t v17 = sub_1DCB86808();
        if (__OFSUB__(v14, v17)) {
          goto LABEL_36;
        }
        v16 += v14 - v17;
LABEL_18:
        BOOL v18 = __OFSUB__(v15, v14);
        uint64_t v19 = v15 - v14;
        if (v18) {
          goto LABEL_35;
        }
        uint64_t v20 = sub_1DCB867F8();
        if (v20 >= v19) {
          uint64_t v21 = v19;
        }
        else {
          uint64_t v21 = v20;
        }
        uint64_t v22 = v16 + v21;
        if (v16) {
          uint64_t v23 = v22;
        }
        else {
          uint64_t v23 = 0;
        }
        uint64_t v24 = sub_1DCABEA50(v16, v23, 52);
        if (v24)
        {
          int v25 = *(_DWORD *)v24;
          int v26 = *(_DWORD *)(v24 + 4);
          uint64_t v27 = *(void *)(v24 + 8);
          int v28 = *(_DWORD *)(v24 + 16);
          int v29 = *(_DWORD *)(v24 + 20);
          char v30 = *(unsigned char *)(v24 + 24);
          long long v32 = *(_OWORD *)(v24 + 28);
          uint64_t v31 = *(void *)(v24 + 44);
          swift_release();
          swift_release();
          goto LABEL_32;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      case 3:
        *(void *)((char *)&v33 + 6) = 0;
        *(void *)&long long v33 = 0;
        uint64_t v6 = sub_1DCABEA50((uint64_t)&v33, (uint64_t)&v33, 52);
        if (v6) {
          goto LABEL_27;
        }
        __break(1u);
        goto LABEL_39;
      default:
        uint64_t v6 = sub_1DCABEA50((uint64_t)&v33, (uint64_t)&v34[-2] + BYTE14(v33), 52);
        if (v6)
        {
LABEL_27:
          int v25 = *(_DWORD *)v6;
          int v26 = *(_DWORD *)(v6 + 4);
          uint64_t v27 = *(void *)(v6 + 8);
          int v28 = *(_DWORD *)(v6 + 16);
          int v29 = *(_DWORD *)(v6 + 20);
          char v30 = *(unsigned char *)(v6 + 24);
          long long v32 = *(_OWORD *)(v6 + 28);
          uint64_t v31 = *(void *)(v6 + 44);
LABEL_32:
          sub_1DC881920(v5, *((unint64_t *)&v5 + 1));
          *(_DWORD *)a2 = v25;
          *(_DWORD *)(a2 + 4) = v26;
          *(void *)(a2 + 8) = v27;
          *(_DWORD *)(a2 + 16) = v28;
          *(_DWORD *)(a2 + 20) = v29;
          *(unsigned char *)(a2 + 24) = v30;
          *(_OWORD *)(a2 + 28) = v32;
          *(void *)(a2 + 44) = v31;
          return sub_1DC8818D0((uint64_t)v34);
        }
        __break(1u);
LABEL_5:
        if ((uint64_t)v5 >> 32 < (int)v5)
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
        }
        else
        {
          sub_1DC8AF450(v5, *((unint64_t *)&v5 + 1));
          uint64_t v7 = sub_1DCB867D8();
          if (!v7) {
            goto LABEL_9;
          }
          uint64_t v8 = sub_1DCB86808();
          if (!__OFSUB__((int)v5, v8))
          {
            v7 += (int)v5 - v8;
LABEL_9:
            uint64_t v9 = sub_1DCB867F8();
            uint64_t v10 = ((uint64_t)v5 >> 32) - (int)v5;
            if (v9 < v10) {
              uint64_t v10 = v9;
            }
            uint64_t v11 = v7 + v10;
            if (v7) {
              uint64_t v12 = v11;
            }
            else {
              uint64_t v12 = 0;
            }
            uint64_t v13 = sub_1DCABEA50(v7, v12, 52);
            if (v13)
            {
              int v25 = *(_DWORD *)v13;
              int v26 = *(_DWORD *)(v13 + 4);
              uint64_t v27 = *(void *)(v13 + 8);
              int v28 = *(_DWORD *)(v13 + 16);
              int v29 = *(_DWORD *)(v13 + 20);
              char v30 = *(unsigned char *)(v13 + 24);
              long long v32 = *(_OWORD *)(v13 + 28);
              uint64_t v31 = *(void *)(v13 + 44);
              sub_1DC881920(v5, *((unint64_t *)&v5 + 1));
              goto LABEL_32;
            }
LABEL_40:
            __break(1u);
            JUMPOUT(0x1DCAF38C0);
          }
        }
        __break(1u);
        return result;
    }
  }
  return result;
}

uint64_t sub_1DCAF38D0(uint64_t a1, void *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  sub_1DC881A8C(a2, a2[3]);
  sub_1DCB892A8();
  long long v3 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v3;
  v8[2] = *(_OWORD *)(a1 + 32);
  int v9 = *(_DWORD *)(a1 + 48);
  uint64_t v4 = sub_1DC9E0FCC((uint64_t)v8, (uint64_t)&v10);
  unint64_t v6 = v5;
  *(void *)&v8[0] = v4;
  *((void *)&v8[0] + 1) = v5;
  sub_1DC89D39C((uint64_t)v11, v12);
  sub_1DC9B047C();
  sub_1DCB89058();
  sub_1DC881920(v4, v6);
  return sub_1DC8818D0((uint64_t)v11);
}

void cdeclSavePipeline(outputPath:ebankInputCount:ebankInputStride:modelPath:feedbackConnectionStarts:feedbackConnectionDestinations:feedbackConnectionsCount:)()
{
  sub_1DC89D9F8();
  unsigned int v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DCB86A18();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D9A0();
  sub_1DCB87A28();
  sub_1DCB86928();
  swift_bridgeObjectRelease();
  sub_1DCB87A28();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v8 = v1;
    sub_1DCB03A78();
    uint64_t v9 = v1;
    do
    {
      uint64_t v10 = sub_1DCB87A28();
      uint64_t v12 = v11;
      unint64_t v13 = *(void *)(v23 + 16);
      if (v13 >= *(void *)(v23 + 24) >> 1) {
        sub_1DCA894F4();
      }
      *(void *)(v23 + 16) = v13 + 1;
      uint64_t v14 = v23 + 16 * v13;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = v12;
      v5 += 8;
      --v9;
    }
    while (v9);
    sub_1DCB03A78();
    uint64_t v7 = v23;
    do
    {
      uint64_t v15 = sub_1DCB87A28();
      uint64_t v17 = v16;
      unint64_t v18 = *(void *)(v23 + 16);
      if (v18 >= *(void *)(v23 + 24) >> 1) {
        sub_1DCA894F4();
      }
      *(void *)(v23 + 16) = v18 + 1;
      uint64_t v19 = v23 + 16 * v18;
      *(void *)(v19 + 32) = v15;
      *(void *)(v19 + 40) = v17;
      v3 += 8;
      --v8;
    }
    while (v8);
    uint64_t v20 = v23;
  }
  else
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
  }
  sub_1DCAF27E4(v20, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCAF3C44();
  uint64_t v21 = sub_1DCB037C4();
  v22(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC89DA54();
}

void sub_1DCAF3C44()
{
  sub_1DC88D6B0();
  uint64_t v63 = v2;
  uint64_t v64 = v3;
  char v65 = v4;
  char v66 = v5;
  uint64_t v61 = v6;
  uint64_t v62 = v7;
  uint64_t v9 = v8;
  uint64_t v10 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1DC981E40();
  uint64_t v11 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v55 - v22;
  sub_1DCB86998();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v11);
  sub_1DCB86908();
  sub_1DC88CC04(v1, qword_1EAA9CBC0);
  uint64_t v24 = sub_1DC969B7C();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v11);
  }
  else
  {
    uint64_t v25 = v24;
    char v65 = v20;
    unint64_t v59 = v17;
    uint64_t v60 = v9;
    type metadata accessor for E5RTExecutionStream();
    *(void *)(swift_initStackObject() + 16) = v25;
    char v66 = v23;
    sub_1DCB868C8();
    sub_1DCB869C8();
    sub_1DC8CD890();
    v26();
    uint64_t v27 = sub_1DC969C30();
    type metadata accessor for E5RTExecutionStreamOperation();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v27;
    sub_1DC96BE9C(inited);
    sub_1DC969E30(inited);
    uint64_t v29 = sub_1DC96A1E0();
    sub_1DC96A240(v29);
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1DCB03B90();
    sub_1DCAF1FF8(v30, v31);
    uint64_t v33 = sub_1DC935D44(v32);
    uint64_t v35 = v34;
    uint64_t v58 = v33;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_1DC96A154();
    sub_1DC96A1B4(v36);
    uint64_t v38 = v37;
    uint64_t v39 = v64;
    swift_bridgeObjectRetain();
    sub_1DCAF21E0(v38, v39);
    uint64_t v57 = sub_1DC935D44(v40);
    uint64_t v56 = v41;
    swift_bridgeObjectRelease();
    sub_1DC87E988(&qword_1EAAA9F30);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1DCBB9F90;
    *(void *)(v42 + 32) = 0;
    *(void *)(v42 + 40) = 0;
    *(void *)(v42 + 48) = 0;
    *(void *)(v42 + 56) = 0x80000000;
    *(void *)(v42 + 64) = 0;
    *(void *)(v42 + 72) = 0;
    *(_DWORD *)(v42 + 80) = 0;
    *(void *)(v42 + 88) = 1;
    *(void *)(v42 + 96) = 0;
    *(void *)(v42 + 104) = 0;
    *(void *)(v42 + 112) = 0x80000000;
    *(void *)(v42 + 120) = 0;
    *(void *)(v42 + 128) = 0;
    *(_DWORD *)(v42 + 136) = 0;
    uint64_t v43 = v62;
    *(void *)(v42 + 144) = v61;
    *(void *)(v42 + 152) = v43;
    *(_OWORD *)(v42 + 160) = xmmword_1DCBDDA70;
    *(void *)(v42 + 176) = 0;
    *(void *)(v42 + 184) = 0;
    *(_DWORD *)(v42 + 192) = 0;
    *(void *)(v42 + 200) = 6;
    *(void *)(v42 + 208) = 0;
    *(void *)(v42 + 216) = 0;
    *(void *)(v42 + 224) = 0x80000000;
    *(void *)(v42 + 232) = 0;
    *(void *)(v42 + 240) = 0;
    *(_DWORD *)(v42 + 248) = 0;
    *(void *)(v42 + 256) = v58;
    *(void *)(v42 + 264) = v35;
    *(_OWORD *)(v42 + 272) = xmmword_1DCBDDA80;
    *(_DWORD *)(v42 + 304) = 0;
    *(void *)(v42 + 288) = 0;
    *(void *)(v42 + 296) = 0;
    *(void *)(v42 + 312) = sub_1DCB869D8();
    *(void *)(v42 + 320) = v44;
    uint64_t v45 = v63 & 1 | 0x20000000;
    *(void *)(v42 + 328) = v39;
    *(void *)(v42 + 336) = v45;
    *(void *)(v42 + 344) = 0;
    *(void *)(v42 + 352) = 0;
    *(_DWORD *)(v42 + 360) = 0;
    uint64_t v46 = v56;
    *(void *)(v42 + 368) = v57;
    *(void *)(v42 + 376) = v46;
    *(_OWORD *)(v42 + 384) = xmmword_1DCBDDA90;
    *(void *)(v42 + 400) = 0;
    *(void *)(v42 + 408) = 0;
    *(_DWORD *)(v42 + 416) = 0;
    swift_bridgeObjectRetain();
    sub_1DCB86998();
    unsigned __int8 v47 = sub_1DCA92E1C();
    sub_1DC8CD890();
    v48();
    if (v47)
    {
      v67[3] = &unk_1F37ED660;
      v67[4] = sub_1DCAFF398();
      v67[0] = v42;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1DCB2912C(v67);
      unint64_t v52 = v51;
      sub_1DC8818D0((uint64_t)v67);
      sub_1DCA92F48(1, (uint64_t)v59);
      sub_1DC8CD890();
      v53();
      sub_1DCB86B08();
      sub_1DC881920(v50, v52);
    }
    else
    {
      sub_1DCAFF34C();
      sub_1DC883884();
      *uint64_t v49 = 2;
      swift_willThrow();
    }
    swift_release();
    swift_release();
    sub_1DC8CD890();
    v54();
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

uint64_t sub_1DCAF42A8(uint64_t a1)
{
  unint64_t v2 = sub_1DCB025E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF42E4(uint64_t a1)
{
  unint64_t v2 = sub_1DCB025E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF4320(uint64_t a1)
{
  return sub_1DCAF4818(a1);
}

void sub_1DCAF4338()
{
}

uint64_t sub_1DCAF4374()
{
  return sub_1DCAF5A1C();
}

uint64_t sub_1DCAF438C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02408();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF43C8(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02408();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF4404()
{
}

uint64_t sub_1DCAF4440(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02594();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF447C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02594();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF44B8()
{
}

uint64_t sub_1DCAF44F4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v2;
  _OWORD v10[2] = *(_OWORD *)(a1 + 32);
  int v11 = *(_DWORD *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v3;
  v8[2] = *(_OWORD *)(a2 + 32);
  int v9 = *(_DWORD *)(a2 + 48);
  uint64_t v4 = sub_1DC8A6878((uint64_t)v10);
  uint64_t v5 = sub_1DC8A6878((uint64_t)v8);
  uint64_t v7 = sub_1DC8E597C(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DCAF45BC()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v7[0] = *(_OWORD *)v0;
  v7[1] = v1;
  void v7[2] = *(_OWORD *)(v0 + 32);
  int v8 = *(_DWORD *)(v0 + 48);
  uint64_t v2 = sub_1DC8A6878((uint64_t)v7);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DC8A8E44(v4, (uint64_t)v6);
      sub_1DCB88A28();
      sub_1DC8A8EA0((uint64_t)v6);
      v4 += 40;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

float sub_1DCAF46D0@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DCAF34EC(a1, (uint64_t)v13);
  sub_1DC8818D0((uint64_t)a1);
  if (!v2)
  {
    float result = *(float *)v13;
    int v6 = v13[1];
    int v7 = v15;
    int v8 = v16;
    char v9 = v17;
    long long v10 = v18;
    uint64_t v11 = v19;
    uint64_t v12 = v14;
    *(_DWORD *)a2 = v13[0];
    *(_DWORD *)(a2 + 4) = v6;
    *(void *)(a2 + 8) = v12;
    *(_DWORD *)(a2 + 16) = v7;
    *(_DWORD *)(a2 + 20) = v8;
    *(unsigned char *)(a2 + 24) = v9;
    *(_OWORD *)(a2 + 28) = v10;
    *(void *)(a2 + 44) = v11;
  }
  return result;
}

uint64_t sub_1DCAF4760(void *a1)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  v4[0] = *(_OWORD *)v1;
  v4[1] = v2;
  _OWORD v4[2] = *(_OWORD *)(v1 + 32);
  int v5 = *(_DWORD *)(v1 + 48);
  return sub_1DCAF38D0((uint64_t)v4, a1);
}

uint64_t sub_1DCAF47A0()
{
  sub_1DC89D754();
  long long v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  v3[2] = *(_OWORD *)(v0 + 32);
  int v4 = *(_DWORD *)(v0 + 48);
  sub_1DC8A6CB8((uint64_t)v3);
  return sub_1DCB891F8();
}

uint64_t sub_1DCAF4818(uint64_t a1)
{
  return sub_1DCB037A8(a1);
}

uint64_t sub_1DCAF483C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73676E697070616DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DCAF48C4()
{
  return 0x73676E697070616DLL;
}

void sub_1DCAF48DC()
{
  sub_1DCB03918();
  sub_1DCB039F0();
  sub_1DC87E988(&qword_1EAAAA500);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCB038F4();
  sub_1DCB022C8();
  sub_1DCB03888();
  sub_1DC87E988((uint64_t *)&unk_1EAA9CB70);
  sub_1DCB02454((uint64_t)&unk_1EAAAA4F8);
  sub_1DCB0374C();
  sub_1DC8CD890();
  v1();
  sub_1DCB0392C();
}

void sub_1DCAF49DC()
{
  sub_1DCB03918();
  sub_1DCB03978();
  sub_1DC87E988(&qword_1EAAAA490);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DCB03680();
  sub_1DCB022C8();
  sub_1DC9AF88C();
  if (!v1)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAA9CB70);
    sub_1DCB02454((uint64_t)&unk_1EAAAA488);
    sub_1DCB03700();
    uint64_t v3 = sub_1DCB035A4();
    v4(v3);
  }
  sub_1DC8818D0(v0);
  sub_1DCB0396C();
  sub_1DCB0392C();
}

uint64_t sub_1DCAF4AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCB891C8();
}

uint64_t sub_1DCAF4B74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  BOOL v12 = a1 == a5 && a2 == a6;
  if (v12 || (char v13 = sub_1DCB89018(), v14 = 0, (v13 & 1) != 0))
  {
    sub_1DC91BCA8(a3, a7);
    char v14 = a4 ^ a8 ^ 1;
    if ((v15 & 1) == 0) {
      char v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t sub_1DCAF4BEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1752457584 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB989C0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x796C6E4F757063 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DCAF4D28(char a1)
{
  if (!a1) {
    return 1752457584;
  }
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return 0x796C6E4F757063;
}

void sub_1DCAF4D7C()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAAA4F0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D970();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB0227C();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  if (!v0)
  {
    sub_1DCA78A68();
    sub_1DC87E988((uint64_t *)&unk_1EAA9CB70);
    sub_1DCB02454((uint64_t)&unk_1EAAAA4F8);
    sub_1DCB88F18();
    sub_1DCB88ED8();
  }
  sub_1DCB03AA8();
  v4();
  sub_1DC88D674();
}

uint64_t sub_1DCAF4F14()
{
  sub_1DCB03B4C();
  sub_1DC89D754();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DC9210E8((uint64_t)v2, v0);
  swift_bridgeObjectRelease();
  sub_1DCB891C8();
  return sub_1DCB891F8();
}

void sub_1DCAF4FA0()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAAA478);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB0227C();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DCB88DA8();
    sub_1DC87E988((uint64_t *)&unk_1EAA9CB70);
    sub_1DCA78A68();
    sub_1DCB02454((uint64_t)&unk_1EAAAA488);
    swift_bridgeObjectRetain();
    sub_1DCB88DF8();
    swift_bridgeObjectRetain();
    sub_1DCB88DB8();
    sub_1DC89D710();
    v4();
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

uint64_t sub_1DCAF5208()
{
  sub_1DCB03AD0();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAF525C(uint64_t a1, uint64_t a2)
{
  if (a1 == 7955819 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DCAF52D4()
{
  return 7955819;
}

void sub_1DCAF52E4()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  char v4 = v3;
  uint64_t v6 = sub_1DC87E988(v5);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC95AE60();
  sub_1DC881A8C(v4, v4[3]);
  v2();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  sub_1DC88D674();
}

uint64_t sub_1DCAF53E4()
{
  return sub_1DCB891F8();
}

void sub_1DCAF543C()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  char v4 = v3;
  sub_1DC87E988(v5);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC981E40();
  sub_1DC881A8C(v4, v4[3]);
  v2();
  sub_1DCB89298();
  if (!v0)
  {
    sub_1DCB88DA8();
    sub_1DC88D5C8();
    v7();
  }
  sub_1DC8818D0((uint64_t)v4);
  sub_1DC88D674();
}

uint64_t sub_1DCAF555C()
{
  return sub_1DCB891B8();
}

BOOL sub_1DCAF5590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t sub_1DCAF55A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCAF5680(char a1)
{
  if (a1) {
    return 0x656469727473;
  }
  else {
    return 0x746E756F63;
  }
}

void sub_1DCAF56B0()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAAA4D8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D970();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB02198();
  sub_1DCB892B8();
  sub_1DCB88F08();
  if (!v0)
  {
    sub_1DCA78A68();
    sub_1DCB88F08();
  }
  sub_1DCB03670();
  v4();
  sub_1DC88D674();
}

uint64_t sub_1DCAF57C4()
{
  return sub_1DCB891F8();
}

void sub_1DCAF581C()
{
  sub_1DCB03918();
  sub_1DCB03978();
  sub_1DC87E988(&qword_1EAAAA448);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DCB03680();
  sub_1DCB02198();
  sub_1DC9AF88C();
  if (!v1)
  {
    sub_1DCB88DE8();
    sub_1DCA78A68();
    sub_1DCB88DE8();
    uint64_t v3 = sub_1DCB035A4();
    v4(v3);
  }
  sub_1DC8818D0(v0);
  sub_1DCB0396C();
  sub_1DCB0392C();
}

void sub_1DCAF5948()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_1DC87E988(v4);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v3, v3[3]);
  v1();
  sub_1DCB892B8();
  sub_1DC89D710();
  v6();
  sub_1DC88D674();
}

uint64_t sub_1DCAF5A1C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAF5A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1DCB891B8();
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1DC89DCDC();
      sub_1DCB879B8();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCAF5AF4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DCAF5B74()
{
  return 0x736C6562616CLL;
}

void sub_1DCAF5B88()
{
  sub_1DCB03918();
  sub_1DCB039F0();
  sub_1DC87E988(&qword_1EAAAA4B0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCB038F4();
  sub_1DCB0214C();
  sub_1DCB03888();
  sub_1DC87E988(&qword_1EAA9E7F0);
  sub_1DCB02360((uint64_t)&unk_1EAAAB460);
  sub_1DCB0374C();
  sub_1DC8CD890();
  v1();
  sub_1DCB0392C();
}

void sub_1DCAF5C88()
{
  sub_1DCB03918();
  sub_1DCB03978();
  sub_1DC87E988(&qword_1EAAAA438);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DCB03680();
  sub_1DCB0214C();
  sub_1DC9AF88C();
  if (!v1)
  {
    sub_1DC87E988(&qword_1EAA9E7F0);
    sub_1DCB02360((uint64_t)&qword_1EAAA1850);
    sub_1DCB03700();
    uint64_t v3 = sub_1DCB035A4();
    v4(v3);
  }
  sub_1DC8818D0(v0);
  sub_1DCB0396C();
  sub_1DCB0392C();
}

uint64_t sub_1DCAF5D98()
{
  swift_bridgeObjectRetain();
  sub_1DC8A7C6C();
  sub_1DCB891B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAF5DF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E69727065756C62 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DCAF5E8C()
{
  return 0x6E69727065756C62;
}

void sub_1DCAF5EA8()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  sub_1DC87E988(&qword_1EAAAA4A0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v1, v1[3]);
  sub_1DCB020B4();
  sub_1DCB892B8();
  sub_1DCB02314();
  sub_1DCB88F18();
  sub_1DC89D710();
  v5(v3, v4);
  sub_1DC88D674();
}

uint64_t sub_1DCAF5FAC()
{
  return sub_1DCB891F8();
}

void sub_1DCAF6014()
{
  sub_1DCB03918();
  sub_1DCB03978();
  sub_1DC87E988(&qword_1EAAAA420);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DCB03680();
  sub_1DCB020B4();
  sub_1DC9AF88C();
  if (!v1)
  {
    sub_1DCB02100();
    sub_1DCB88DF8();
    uint64_t v3 = sub_1DCB035A4();
    v4(v3);
  }
  sub_1DC8818D0(v0);
  sub_1DC89DCDC();
  sub_1DCB0396C();
  sub_1DCB0392C();
}

uint64_t sub_1DCAF6110()
{
  uint64_t v1 = sub_1DCAFF07C(v0, (uint64_t)&v28);
  uint64_t v9 = v28;
  uint64_t v10 = v29;
  switch(v29 >> 28)
  {
    case 1u:
      sub_1DCB03A4C();
      sub_1DCB891B8();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1DC981E74();
      sub_1DC9210E8(v12, v13);
      goto LABEL_9;
    case 2u:
      sub_1DCB03A4C();
      sub_1DCB891B8();
      swift_bridgeObjectRetain();
      sub_1DC981E74();
      sub_1DCB879B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1DC89DCDC();
      sub_1DC9210E8(v14, v15);
      swift_bridgeObjectRelease();
      return sub_1DCB891C8();
    case 3u:
    case 4u:
      sub_1DCB03A58();
      sub_1DCB891B8();
      swift_bridgeObjectRetain();
      sub_1DC981E74();
      sub_1DCB879B8();
      goto LABEL_9;
    case 5u:
      sub_1DCB03A4C();
      sub_1DCB891B8();
      sub_1DCB891B8();
      goto LABEL_44;
    case 6u:
      sub_1DCB03A4C();
      sub_1DCB891B8();
      swift_bridgeObjectRetain();
      sub_1DC981E74();
      sub_1DC8A7C04();
      goto LABEL_9;
    case 7u:
      sub_1DCB03A58();
      sub_1DCB891B8();
      swift_bridgeObjectRetain();
      sub_1DC981E74();
      sub_1DC8A7C6C();
      sub_1DCB891B8();
LABEL_9:
      uint64_t result = (uint64_t)sub_1DCAFF90C((uint64_t *)v0);
      break;
    case 8u:
      sub_1DCB03A34();
      BOOL v18 = v18 && v10 == 0x80000000;
      if (!v18 || v17 != 0)
      {
        if (v16 || ((sub_1DCB03858(), v18) ? (BOOL v21 = v9 == 1) : (BOOL v21 = 0), v21 ? (v22 = v20 == 0) : (v22 = 0), !v22))
        {
          if (v16 || ((sub_1DCB03858(), v18) ? (BOOL v24 = v9 == 2) : (BOOL v24 = 0), !v24 || v23))
          {
            if (v16 || ((sub_1DCB03858(), v18) ? (BOOL v26 = v9 == 3) : (BOOL v26 = 0), !v26 || v25))
            {
              if (!v16) {
                sub_1DCB03858();
              }
            }
          }
        }
      }
LABEL_44:
      uint64_t result = sub_1DCB891B8();
      break;
    default:
      sub_1DCB03864(v1, v2, v3, v4, v5, v6, v7, v8, v27, v28);
      sub_1DCB891B8();
      uint64_t result = sub_1DC8A6CB8((uint64_t)v30);
      break;
  }
  return result;
}

uint64_t sub_1DCAF63BC(long long *a1, long long *a2)
{
  sub_1DCAFF07C(a1, (uint64_t)&v80);
  uint64_t v3 = v80;
  uint64_t v4 = *((void *)&v81 + 1);
  switch(DWORD2(v81) >> 28)
  {
    case 1u:
      *((void *)&v81 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      sub_1DCB036A4();
      if (v15 != 0x10000000) {
        goto LABEL_111;
      }
      uint64_t v16 = sub_1DCB03B38(v14);
      sub_1DC91BCA8(v16, v17);
      return v13 & 1;
    case 2u:
      *((void *)&v81 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      uint64_t v19 = *((void *)&v80 + 1);
      uint64_t v18 = v81;
      sub_1DCAFF07C(a2, (uint64_t)&v84);
      char v20 = BYTE8(v85);
      if ((DWORD2(v85) & 0xF0000000) != 0x20000000) {
        goto LABEL_111;
      }
      *((void *)&v85 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      uint64_t v21 = v85;
      BOOL v22 = v3 == (void)v84 && v19 == *((void *)&v84 + 1);
      if (!v22 && (sub_1DCB89018() & 1) == 0) {
        goto LABEL_111;
      }
      sub_1DC91BCA8(v18, v21);
      if ((v23 & 1) == 0 || (v4 & 1) != (v20 & 1)) {
        goto LABEL_111;
      }
      goto LABEL_48;
    case 3u:
      *((void *)&v81 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      uint64_t v24 = *((void *)&v80 + 1);
      sub_1DCB036A4();
      uint64_t v27 = 805306368;
      goto LABEL_17;
    case 4u:
      *((void *)&v81 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      uint64_t v24 = *((void *)&v80 + 1);
      sub_1DCB036A4();
      uint64_t v27 = 0x40000000;
LABEL_17:
      if (v26 != v27) {
        goto LABEL_111;
      }
      *((void *)&v85 + 1) = v25 & 0xFFFFFFFF0FFFFFFFLL;
      if (v3 == (void)v84 && v24 == *((void *)&v84 + 1)) {
LABEL_48:
      }
        char v13 = 1;
      else {
        char v13 = sub_1DCB89018();
      }
      return v13 & 1;
    case 5u:
      *((void *)&v81 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      uint64_t v29 = *((void *)&v80 + 1);
      sub_1DCAFF07C(a2, (uint64_t)&v84);
      if ((DWORD2(v85) & 0xF0000000) != 0x50000000) {
        goto LABEL_111;
      }
      BOOL v30 = v3 == (void)v84 && v29 == *((void *)&v84 + 1);
      goto LABEL_108;
    case 6u:
      *((void *)&v81 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      sub_1DCB036A4();
      if (v32 != 1610612736) {
        goto LABEL_111;
      }
      uint64_t v33 = (void *)sub_1DCB03B38(v31);
      char v13 = sub_1DC8DCAE8(v33, v34);
      return v13 & 1;
    case 7u:
      *((void *)&v81 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      uint64_t v35 = *((void *)&v80 + 1);
      sub_1DCB036A4();
      if (v37 != 1879048192) {
        goto LABEL_111;
      }
      *((void *)&v85 + 1) = v36 & 0xFFFFFFFF0FFFFFFFLL;
      uint64_t v38 = *((void *)&v84 + 1);
      char v13 = sub_1DC8DCBB4(v3, v84) & (v35 == v38);
      return v13 & 1;
    case 8u:
      sub_1DCB03A34();
      if (v22 && v4 == 0x80000000 && v43 == 0)
      {
        sub_1DCB0355C();
        if (!v22) {
          goto LABEL_111;
        }
        sub_1DCB0384C();
        int8x16_t v59 = vorrq_s8(v57, v58);
        int8x16_t v60 = vextq_s8(v59, v59, 8uLL);
        uint64_t v62 = *(void *)&vorr_s8(*(int8x8_t *)v60.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL)) | v61;
      }
      else
      {
        uint64_t v46 = v42 | v40 | v41;
        if (v39 || ((sub_1DCB03858(), v22) ? (BOOL v47 = v3 == 1) : (BOOL v47 = 0), !v47 || v46))
        {
          if (v39 || ((sub_1DCB03858(), v22) ? (BOOL v63 = v3 == 2) : (BOOL v63 = 0), !v63 || v46))
          {
            if (v39 || ((sub_1DCB03858(), v22) ? (BOOL v65 = v3 == 3) : (BOOL v65 = 0), !v65 || v46))
            {
              if (v39 || ((sub_1DCB03858(), v22) ? (BOOL v67 = v3 == 4) : (BOOL v67 = 0), !v67 || v46))
              {
                if (v39 || (v4 == 0x80000000 ? (BOOL v69 = v3 == 5) : (BOOL v69 = 0), !v69 || v46))
                {
                  sub_1DCB0355C();
                  if (!v22) {
                    goto LABEL_111;
                  }
                  sub_1DCB035E4();
                  BOOL v55 = v71 == 6;
                }
                else
                {
                  sub_1DCB0355C();
                  if (!v22) {
                    goto LABEL_111;
                  }
                  sub_1DCB035E4();
                  BOOL v55 = v70 == 5;
                }
              }
              else
              {
                sub_1DCB0355C();
                if (!v22) {
                  goto LABEL_111;
                }
                sub_1DCB035E4();
                BOOL v55 = v68 == 4;
              }
            }
            else
            {
              sub_1DCB0355C();
              if (!v22) {
                goto LABEL_111;
              }
              sub_1DCB035E4();
              BOOL v55 = v66 == 3;
            }
          }
          else
          {
            sub_1DCB0355C();
            if (!v22) {
              goto LABEL_111;
            }
            sub_1DCB035E4();
            BOOL v55 = v64 == 2;
          }
        }
        else
        {
          sub_1DCB0355C();
          if (!v22)
          {
LABEL_111:
            char v13 = 0;
            return v13 & 1;
          }
          sub_1DCB035E4();
          BOOL v55 = v54 == 1;
        }
        uint64_t v72 = v53 | v52;
        BOOL v56 = v55 && v72 == 0 && v48 == 0x80000000;
        uint64_t v62 = v51 | v50;
      }
      BOOL v30 = v56 && v62 == 0 && v49 == 0;
LABEL_108:
      char v13 = v30;
      return v13 & 1;
    default:
      *((void *)&v81 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      int v87 = v83;
      long long v84 = v80;
      long long v85 = v81;
      long long v86 = v82;
      uint64_t v5 = sub_1DCAFF07C(a2, (uint64_t)&v77);
      if ((v78 & 0xF0000000) != 0) {
        goto LABEL_111;
      }
      sub_1DCB03864(v5, v6, v7, v8, v9, v10, v11, v12, v76, v77);
      char v13 = sub_1DCAF44F4((uint64_t)&v84, (uint64_t)v79);
      return v13 & 1;
  }
}

uint64_t sub_1DCAF67C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B6E616265 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB9ADA0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB97C80 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB9ADC0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB9ADE0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DCB9AE00 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    BOOL v6 = a1 == 0x7379654B70616DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else
    {
      BOOL v7 = a1 == 0x65646F4D74723565 && a2 == 0xE90000000000006CLL;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        BOOL v8 = a1 == 0x654B7463656C6573 && a2 == 0xE900000000000079;
        if (v8 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          BOOL v9 = a1 == 0x654B6E6769737361 && a2 == 0xE900000000000079;
          if (v9 || (sub_1DCB89018() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else
          {
            BOOL v10 = a1 == 0x6563696C73 && a2 == 0xE500000000000000;
            if (v10 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              BOOL v11 = a1 == 0x6E657474616C66 && a2 == 0xE700000000000000;
              if (v11 || (sub_1DCB89018() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else
              {
                BOOL v12 = a1 == 0x667542656772656DLL && a2 == 0xEC00000073726566;
                if (v12 || (sub_1DCB89018() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB9AE20 || (sub_1DCB89018() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DCB9AE40)
                {
                  swift_bridgeObjectRelease();
                  return 14;
                }
                else
                {
                  char v13 = sub_1DCB89018();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 14;
                  }
                  else {
                    return 15;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1DCAF6D70()
{
  return 15;
}

uint64_t sub_1DCAF6D78(char a1)
{
  uint64_t result = 0x6B6E616265;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000010;
      break;
    case 2:
    case 3:
    case 13:
      uint64_t result = 0xD000000000000011;
      break;
    case 4:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0xD000000000000017;
      break;
    case 6:
      uint64_t result = 0x7379654B70616DLL;
      break;
    case 7:
      uint64_t result = 0x65646F4D74723565;
      break;
    case 8:
      uint64_t v3 = 0x7463656C6573;
      goto LABEL_9;
    case 9:
      uint64_t v3 = 0x6E6769737361;
LABEL_9:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x654B000000000000;
      break;
    case 10:
      uint64_t result = 0x6563696C73;
      break;
    case 11:
      uint64_t result = 0x6E657474616C66;
      break;
    case 12:
      uint64_t result = 0x667542656772656DLL;
      break;
    case 14:
      uint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DCAF6F34()
{
  sub_1DC88D6B0();
  int v49 = v0;
  uint64_t v5 = v4;
  sub_1DC87E988(&qword_1EAAAA118);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA120);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA128);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA130);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA138);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA140);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA148);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA150);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA158);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v14);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA160);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v15);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA168);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v16);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA170);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v17);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAAA178);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v18);
  sub_1DC95AE60();
  sub_1DC87E988(&qword_1EAAAA180);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v19);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA188);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v20);
  sub_1DC89D988();
  uint64_t v40 = sub_1DC87E988(&qword_1EAAAA190);
  sub_1DC89D4E0();
  uint64_t v39 = v21;
  MEMORY[0x1F4188790](v22);
  sub_1DC89D9A0();
  sub_1DC881A8C(v5, v5[3]);
  sub_1DCAFF948();
  sub_1DCB892B8();
  sub_1DCAFF07C(v49, (uint64_t)v41);
  uint64_t v23 = *(void *)v41;
  uint64_t v24 = *(void *)&v41[24];
  switch(*(_DWORD *)&v41[24] >> 28)
  {
    case 1:
      *(void *)&v41[24] &= 0xFFFFFFFF0FFFFFFFLL;
      sub_1DCAFFE54();
      sub_1DCB039CC();
      sub_1DCB004DC();
      sub_1DCB88F18();
      goto LABEL_9;
    case 2:
      v48[0] = sub_1DCB036EC(*(uint64_t *)&v41[24]);
      *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)&v41[9];
      sub_1DCAFFDBC();
      sub_1DCB035C0();
      sub_1DCB00490();
      sub_1DCB038A8();
      goto LABEL_11;
    case 3:
      v48[2] = sub_1DCB036EC(*(uint64_t *)&v41[24]);
      sub_1DCAFFD24();
      sub_1DCB035C0();
      sub_1DCB00444();
      sub_1DCB038A8();
      goto LABEL_11;
    case 4:
      v48[3] = sub_1DCB036EC(*(uint64_t *)&v41[24]);
      sub_1DCAFFC8C();
      sub_1DCB035C0();
      sub_1DCB003F8();
      sub_1DCB038A8();
      goto LABEL_11;
    case 5:
      v48[4] = sub_1DCB036EC(*(uint64_t *)&v41[24]);
      sub_1DCAFFBF4();
      sub_1DCB035C0();
      sub_1DCB003AC();
      sub_1DCB038A8();
      goto LABEL_11;
    case 6:
      *(void *)&v41[24] &= 0xFFFFFFFF0FFFFFFFLL;
      sub_1DCAFFA2C();
      sub_1DCB039CC();
      sub_1DCB002C8();
      sub_1DCB88F18();
LABEL_9:
      sub_1DC88D5C8();
      v25();
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      uint64_t v27 = v2;
      goto LABEL_12;
    case 7:
      v48[5] = sub_1DCB036EC(*(uint64_t *)&v41[24]);
      sub_1DCAFF994();
      sub_1DCB035C0();
      sub_1DCB0027C();
      sub_1DCB88F18();
      goto LABEL_11;
    case 8:
      int v29 = v43;
      uint64_t v30 = *((void *)&v42 + 1) | v42;
      if (v43 || *(void *)&v41[24] != 0x80000000 || v30 | *(void *)v41 | *(void *)&v41[16] | *(void *)&v41[8])
      {
        uint64_t v32 = v30 | *(void *)&v41[16] | *(void *)&v41[8];
        uint64_t v1 = v40;
        if (v43 || ((sub_1DCB0384C(), v33) ? (BOOL v33 = v23 == 1) : (BOOL v33 = 0), !v33 || v32))
        {
          if (v29 || ((sub_1DCB0384C(), v33) ? (BOOL v34 = v23 == 2) : (BOOL v34 = 0), !v34 || v32))
          {
            if (v29 || ((sub_1DCB0384C(), v33) ? (BOOL v35 = v23 == 3) : (BOOL v35 = 0), !v35 || v32))
            {
              if (v29 || ((sub_1DCB0384C(), v33) ? (BOOL v36 = v23 == 4) : (BOOL v36 = 0), !v36 || v32))
              {
                if (v29 || (v24 == 0x80000000 ? (BOOL v37 = v23 == 5) : (BOOL v37 = 0), !v37 || v32))
                {
                  sub_1DCAFFAC4();
                  sub_1DCB03634();
                  sub_1DCB00314();
                  sub_1DCB035F8();
                }
                else
                {
                  sub_1DCAFFB5C();
                  sub_1DCB03634();
                  sub_1DCB00360();
                  sub_1DCB035F8();
                }
              }
              else
              {
                sub_1DCAFFEEC();
                sub_1DCB03634();
                sub_1DCB00528();
                sub_1DCB035F8();
              }
            }
            else
            {
              sub_1DCAFFF84();
              sub_1DCB03634();
              sub_1DCB00574();
              sub_1DCB035F8();
            }
          }
          else
          {
            sub_1DCB0001C();
            sub_1DCB03634();
            sub_1DCB005C0();
            sub_1DCB035F8();
          }
        }
        else
        {
          sub_1DCB0014C();
          sub_1DCB03634();
          sub_1DCB00658();
          sub_1DCB035F8();
        }
        sub_1DC88D5C8();
        v38();
        uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        uint64_t v27 = v3;
LABEL_12:
        v26(v27, v1);
      }
      else
      {
        sub_1DCB001E4();
        sub_1DCB88E88();
        sub_1DCB006A4();
        sub_1DCB88F18();
        sub_1DC88D5C8();
        v31();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v3, v40);
      }
      sub_1DC88D674();
      return;
    default:
      *(void *)&v41[24] &= 0xFFFFFFFF0FFFFFFFLL;
      int v47 = v43;
      long long v44 = *(_OWORD *)v41;
      long long v45 = *(_OWORD *)&v41[16];
      long long v46 = v42;
      sub_1DCB000B4();
      uint64_t v1 = v40;
      sub_1DCB88E88();
      sub_1DCB0060C();
      sub_1DCB88F18();
LABEL_11:
      sub_1DC88D5C8();
      v28();
      uint64_t v27 = sub_1DCB03B58();
      goto LABEL_12;
  }
}

uint64_t sub_1DCAF7B10()
{
  return sub_1DCB891F8();
}

void sub_1DCAF7B48()
{
  sub_1DC88D6B0();
  uint64_t v5 = v4;
  uint64_t v132 = v6;
  int v127 = sub_1DC87E988(&qword_1EAAA9FA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC88D550();
  int v126 = sub_1DC87E988(&qword_1EAAA9FA8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  int v125 = sub_1DC87E988(&qword_1EAAA9FB0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  uint64_t v131 = v10;
  int v124 = sub_1DC87E988(&qword_1EAAA9FB8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v11);
  sub_1DCA36830(v12, v110);
  int v123 = sub_1DC87E988(&qword_1EAAA9FC0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v13);
  sub_1DCA36AE0(v14, v111);
  int v122 = sub_1DC87E988(&qword_1EAAA9FC8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v15);
  sub_1DC88D550();
  int v121 = sub_1DC87E988(&qword_1EAAA9FD0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v16);
  sub_1DC88D550();
  uint64_t v134 = v17;
  sub_1DC87E988(&qword_1EAAA9FD8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v18);
  sub_1DC88D550();
  int v120 = sub_1DC87E988(&qword_1EAAA9FE0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v19);
  sub_1DC88D550();
  int v119 = sub_1DC87E988(&qword_1EAAA9FE8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v20);
  sub_1DC88D550();
  uint64_t v129 = v21;
  int v118 = sub_1DC87E988(&qword_1EAAA9FF0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v22);
  sub_1DCA36AA8(v23, v112);
  int v117 = sub_1DC87E988(&qword_1EAAA9FF8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v24);
  sub_1DC88D550();
  uint64_t v128 = v25;
  sub_1DC87E988(&qword_1EAAAA000);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v26);
  sub_1DC88D550();
  int v116 = sub_1DC87E988(&qword_1EAAAA008);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v27);
  sub_1DC89D988();
  uint64_t v28 = sub_1DC87E988(&qword_1EAAAA010);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v29);
  sub_1DC8CD750();
  uint64_t v30 = sub_1DC87E988(&qword_1EAAAA018);
  sub_1DC89D4E0();
  uint64_t v32 = v31;
  MEMORY[0x1F4188790](v33);
  sub_1DC89D970();
  uint64_t v140 = (uint64_t)v5;
  sub_1DC881A8C(v5, v5[3]);
  sub_1DCAFF948();
  sub_1DCB89298();
  if (v1) {
    goto LABEL_21;
  }
  unint64_t v115 = v0;
  uint64_t v114 = v28;
  uint64_t v34 = v133;
  uint64_t v35 = v134;
  *(void *)&long long v135 = v32;
  uint64_t v36 = sub_1DCB88E58();
  uint64_t v37 = *(void *)(v36 + 16);
  if (!v37
    || (uint64_t v113 = *(unsigned __int8 *)(v36 + 32),
        sub_1DC9CFE4C(1, v37, v36, v36 + 32, 0, (2 * v37) | 1),
        uint64_t v39 = v38,
        unint64_t v41 = v40,
        swift_bridgeObjectRelease(),
        v39 != v41 >> 1))
  {
    uint64_t v43 = sub_1DCB88B18();
    sub_1DC883884();
    long long v45 = v44;
    sub_1DC87E988(&qword_1EAA9E130);
    *long long v45 = &unk_1F37ECCA8;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, *MEMORY[0x1E4FBBA70], v43);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v3, v30);
LABEL_21:
    sub_1DC8818D0(v140);
    goto LABEL_22;
  }
  switch(v113)
  {
    case 1:
      sub_1DCB0014C();
      uint64_t v34 = v2;
      sub_1DCB03538();
      sub_1DCB00198();
      int v42 = v116;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v46 = sub_1DCB03504();
      v47(v46);
      swift_unknownObjectRelease();
      uint64_t v48 = sub_1DCB03520();
      v49(v48);
      sub_1DCB03588();
      uint64_t v3 = 1;
      break;
    case 2:
      sub_1DCB000B4();
      sub_1DCB03538();
      sub_1DCB00100();
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v50 = sub_1DCB03504();
      v51(v50);
      swift_unknownObjectRelease();
      uint64_t v52 = sub_1DCB03520();
      v53(v52);
      sub_1DCB03B7C();
      uint64_t v35 = v137;
      unint64_t v41 = v138;
      int v42 = v139;
      uint64_t v34 = v54 | ((unint64_t)v136 << 32);
      break;
    case 3:
      sub_1DCB0001C();
      uint64_t v34 = v128;
      sub_1DCB03538();
      sub_1DCB00068();
      int v42 = v117;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v55 = sub_1DCB03504();
      v56(v55);
      swift_unknownObjectRelease();
      uint64_t v57 = sub_1DCB03520();
      v58(v57);
      sub_1DCB03588();
      uint64_t v3 = 2;
      break;
    case 4:
      sub_1DCAFFF84();
      sub_1DCB03538();
      sub_1DCAFFFD0();
      int v42 = v118;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v59 = sub_1DCB03504();
      v60(v59);
      swift_unknownObjectRelease();
      uint64_t v61 = sub_1DCB03520();
      v62(v61);
      sub_1DCB03588();
      uint64_t v3 = 3;
      break;
    case 5:
      sub_1DCAFFEEC();
      uint64_t v34 = v129;
      sub_1DCB03538();
      sub_1DCAFFF38();
      int v42 = v119;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v63 = sub_1DCB03504();
      v64(v63);
      swift_unknownObjectRelease();
      uint64_t v65 = sub_1DCB03520();
      v66(v65);
      sub_1DCB03588();
      uint64_t v3 = 4;
      break;
    case 6:
      sub_1DCAFFE54();
      sub_1DCB03538();
      sub_1DCAFFEA0();
      int v42 = v120;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v67 = sub_1DCB03504();
      v68(v67);
      swift_unknownObjectRelease();
      uint64_t v69 = sub_1DCB03520();
      v70(v69);
      sub_1DCB03940();
      uint64_t v34 = 0x10000000;
      break;
    case 7:
      sub_1DCAFFDBC();
      sub_1DCA04B7C();
      sub_1DCAFFE08();
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v71 = sub_1DCB03504();
      v72(v71);
      swift_unknownObjectRelease();
      uint64_t v73 = sub_1DCB03520();
      v74(v73);
      uint64_t v35 = 0;
      unint64_t v41 = 0;
      int v42 = 0;
      sub_1DCB03B7C();
      uint64_t v34 = v75 | 0x20000000;
      break;
    case 8:
      sub_1DCAFFD24();
      sub_1DCA04B7C();
      sub_1DCAFFD70();
      int v42 = v121;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v76 = sub_1DCB03504();
      v77(v76);
      swift_unknownObjectRelease();
      uint64_t v78 = sub_1DCB03520();
      v80.n128_f64[0] = v79(v78);
      sub_1DCB03654(v80);
      uint64_t v34 = 805306368;
      break;
    case 9:
      sub_1DCAFFC8C();
      sub_1DCB03538();
      sub_1DCAFFCD8();
      int v42 = v122;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v81 = sub_1DCB03504();
      v82(v81);
      swift_unknownObjectRelease();
      uint64_t v83 = sub_1DCB03520();
      v85.n128_f64[0] = v84(v83);
      sub_1DCB03654(v85);
      uint64_t v34 = 0x40000000;
      break;
    case 10:
      sub_1DCAFFBF4();
      sub_1DCB03538();
      sub_1DCAFFC40();
      int v42 = v123;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v86 = sub_1DCB03504();
      v87(v86);
      swift_unknownObjectRelease();
      uint64_t v88 = sub_1DCB03520();
      v90.n128_f64[0] = v89(v88);
      sub_1DCB03654(v90);
      uint64_t v34 = 1342177280;
      break;
    case 11:
      sub_1DCAFFB5C();
      uint64_t v34 = v130;
      sub_1DCB03538();
      sub_1DCAFFBA8();
      int v42 = v124;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v91 = sub_1DCB03504();
      v92(v91);
      swift_unknownObjectRelease();
      uint64_t v93 = sub_1DCB03520();
      v94(v93);
      sub_1DCB03588();
      uint64_t v3 = 5;
      break;
    case 12:
      sub_1DCAFFAC4();
      uint64_t v34 = v131;
      sub_1DCB03538();
      sub_1DCAFFB10();
      int v42 = v125;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v95 = sub_1DCB03504();
      v96(v95);
      swift_unknownObjectRelease();
      uint64_t v97 = sub_1DCB03520();
      v98(v97);
      sub_1DCB03588();
      uint64_t v3 = 6;
      break;
    case 13:
      sub_1DCAFFA2C();
      sub_1DCB03538();
      sub_1DCAFFA78();
      int v42 = v126;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v99 = sub_1DCB03504();
      v100(v99);
      swift_unknownObjectRelease();
      uint64_t v101 = sub_1DCB03520();
      v102(v101);
      sub_1DCB03940();
      uint64_t v34 = 1610612736;
      break;
    case 14:
      sub_1DCAFF994();
      sub_1DCB03538();
      sub_1DCAFF9E0();
      int v42 = v127;
      sub_1DCA0514C();
      sub_1DCB036C8();
      uint64_t v105 = sub_1DCB03504();
      v106(v105);
      swift_unknownObjectRelease();
      uint64_t v107 = sub_1DCB03520();
      v109.n128_f64[0] = v108(v107);
      sub_1DCB03654(v109);
      uint64_t v34 = 1879048192;
      break;
    default:
      sub_1DCB001E4();
      int v42 = v115;
      sub_1DCA04B7C();
      sub_1DCB00230();
      uint64_t v35 = v114;
      unint64_t v41 = v115;
      sub_1DCB88DF8();
      sub_1DC88D5C8();
      v103();
      swift_unknownObjectRelease();
      sub_1DCB03B58();
      sub_1DC88D5C8();
      v104();
      uint64_t v3 = 0;
      sub_1DCB03588();
      break;
  }
  sub_1DC8818D0(v140);
  *(void *)uint64_t v132 = v3;
  *(_OWORD *)(v132 + 8) = v135;
  *(void *)(v132 + 24) = v34;
  *(void *)(v132 + 32) = v35;
  *(void *)(v132 + 40) = v41;
  *(_DWORD *)(v132 + 48) = v42;
LABEL_22:
  sub_1DC88D674();
}

uint64_t sub_1DCAF8AA8()
{
  sub_1DCB03AD0();
  swift_bridgeObjectRetain();
  v0(v2, v1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAF8B00(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736567617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DCAF8B80()
{
  return 0x736567617473;
}

void sub_1DCAF8B94()
{
  sub_1DCB03918();
  sub_1DCB039F0();
  sub_1DC87E988(&qword_1EAAA9F88);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCB038F4();
  sub_1DCAFF7C4();
  sub_1DCB03888();
  sub_1DC87E988(&qword_1EAAA9F70);
  sub_1DCAFF85C((uint64_t)&unk_1EAAA9F90);
  sub_1DCB0374C();
  sub_1DC8CD890();
  v1();
  sub_1DCB0392C();
}

uint64_t sub_1DCAF8CA0(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_1DC89D754();
  swift_bridgeObjectRetain();
  a2(v5, a1);
  swift_bridgeObjectRelease();
  return sub_1DCB891F8();
}

void sub_1DCAF8CF8()
{
  sub_1DCB03918();
  sub_1DCB03978();
  sub_1DC87E988(&qword_1EAAA9F60);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DCB03680();
  sub_1DCAFF7C4();
  sub_1DC9AF88C();
  if (!v1)
  {
    sub_1DC87E988(&qword_1EAAA9F70);
    sub_1DCAFF85C((uint64_t)&unk_1EAAA9F78);
    sub_1DCB03700();
    uint64_t v3 = sub_1DCB035A4();
    v4(v3);
  }
  sub_1DC8818D0(v0);
  sub_1DCB0396C();
  sub_1DCB0392C();
}

double sub_1DCAF8E14@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(float *)&double result = sub_1DCAF46D0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_DWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1DCAF8E64(void *a1)
{
  return sub_1DCAF4760(a1);
}

uint64_t sub_1DCAF8E84()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  v3[2] = *(_OWORD *)(v0 + 32);
  int v4 = *(_DWORD *)(v0 + 48);
  sub_1DCB891A8();
  sub_1DC8A6CB8((uint64_t)v3);
  return sub_1DCB891F8();
}

uint64_t sub_1DCAF8F14(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02548();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF8F50(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02548();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF8F8C()
{
}

uint64_t sub_1DCAF8FC8(uint64_t a1)
{
  unint64_t v2 = sub_1DCB024FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9004(uint64_t a1)
{
  unint64_t v2 = sub_1DCB024FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF9040()
{
}

uint64_t sub_1DCAF907C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB024B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF90B8(uint64_t a1)
{
  unint64_t v2 = sub_1DCB024B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF90F4()
{
}

uint64_t sub_1DCAF9134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAF483C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCAF9160(uint64_t a1)
{
  unint64_t v2 = sub_1DCB022C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF919C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB022C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF91D8(void *a1@<X8>)
{
  sub_1DCAF49DC();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1DCAF9204()
{
}

uint64_t sub_1DCAF9220()
{
  return sub_1DCAF8CA0(*v0, (void (*)(unsigned char *, uint64_t))sub_1DC9210E8);
}

uint64_t sub_1DCAF9250()
{
  return sub_1DCAF8AA8();
}

uint64_t sub_1DCAF9280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAFA6A8(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1DC9210E8);
}

uint64_t sub_1DCAF9298(void *a1, void *a2)
{
  return sub_1DCAF4838(*a1, *a2);
}

uint64_t sub_1DCAF92A4()
{
  return sub_1DCAF4D28(*v0);
}

uint64_t sub_1DCAF92AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAF4BEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAF92D4(uint64_t a1)
{
  unint64_t v2 = sub_1DCB0227C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9310(uint64_t a1)
{
  unint64_t v2 = sub_1DCB0227C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF934C(uint64_t a1@<X8>)
{
  sub_1DCAF4FA0();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v6 & 1;
  }
}

void sub_1DCAF9384()
{
}

uint64_t sub_1DCAF93A8()
{
  return sub_1DCAF4F14();
}

uint64_t sub_1DCAF93B8(uint64_t a1)
{
  return sub_1DCAF4AEC(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1DCAF93C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DC9210E8((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_1DCB891C8();
  return sub_1DCB891F8();
}

uint64_t sub_1DCAF9460(uint64_t a1, uint64_t a2)
{
  return sub_1DCAF4B74(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1DCAF9488(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02230();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF94C4(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02230();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF9500(void *a1@<X8>)
{
}

void sub_1DCAF953C()
{
}

uint64_t sub_1DCAF9580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAF525C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCAF95AC(uint64_t a1)
{
  unint64_t v2 = sub_1DCB021E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF95E8(uint64_t a1)
{
  unint64_t v2 = sub_1DCB021E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF9624(void *a1@<X8>)
{
}

void sub_1DCAF9660(void *a1@<X8>)
{
  sub_1DCAF543C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_1DCAF9698()
{
}

uint64_t sub_1DCAF96D8()
{
  return sub_1DCAF53E4();
}

uint64_t sub_1DCAF96F4()
{
  return sub_1DCAF5208();
}

uint64_t sub_1DCAF9710(uint64_t *a1, uint64_t *a2)
{
  return sub_1DC8F6714(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_1DCAF973C()
{
  return sub_1DCAF5680(*v0);
}

uint64_t sub_1DCAF9744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAF55A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAF976C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02198();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF97A8(uint64_t a1)
{
  unint64_t v2 = sub_1DCB02198();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF97E4(void *a1@<X8>)
{
  sub_1DCAF581C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_1DCAF9810()
{
}

uint64_t sub_1DCAF982C()
{
  return sub_1DCAF57C4();
}

uint64_t sub_1DCAF9834()
{
  return sub_1DCAF555C();
}

BOOL sub_1DCAF983C(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCAF5590(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1DCAF9850(uint64_t a1)
{
  unint64_t v2 = sub_1DCB023BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF988C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB023BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF98C8()
{
}

uint64_t sub_1DCAF9908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAF5AF4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCAF9934(uint64_t a1)
{
  unint64_t v2 = sub_1DCB0214C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9970(uint64_t a1)
{
  unint64_t v2 = sub_1DCB0214C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF99AC(void *a1@<X8>)
{
  sub_1DCAF5C88();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1DCAF99D8()
{
}

uint64_t sub_1DCAF99F4()
{
  return sub_1DCAF8CA0(*v0, (void (*)(unsigned char *, uint64_t))sub_1DC8A7C04);
}

uint64_t sub_1DCAF9A24(uint64_t a1)
{
  return sub_1DCAF5A4C(a1, *v1);
}

uint64_t sub_1DCAF9A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAFA6A8(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1DC8A7C04);
}

uint64_t sub_1DCAF9A44(void *a1, void *a2)
{
  return sub_1DCAF5AF0(*a1, *a2);
}

uint64_t sub_1DCAF9A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAF5DF8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCAF9A80(uint64_t a1)
{
  unint64_t v2 = sub_1DCB020B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9ABC(uint64_t a1)
{
  unint64_t v2 = sub_1DCB020B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAF9AF8(void *a1@<X8>)
{
  sub_1DCAF6014();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_1DCAF9B24()
{
}

uint64_t sub_1DCAF9B40()
{
  return sub_1DCAF5FAC();
}

uint64_t sub_1DCAF9B48()
{
  return sub_1DCAF5D98();
}

uint64_t sub_1DCAF9B50()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAF9BB8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFC8C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9BF4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFC8C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF9C30()
{
  return sub_1DCAF6D78(*v0);
}

uint64_t sub_1DCAF9C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAF67C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAF9C60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCAF6D70();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAF9C88(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFF948();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9CC4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFF948();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF9D00(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFDBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9D3C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFDBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF9D78(uint64_t a1)
{
  unint64_t v2 = sub_1DCB001E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9DB4(uint64_t a1)
{
  unint64_t v2 = sub_1DCB001E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF9DF0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFB5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9E2C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFB5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF9E68(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFF84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9EA4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFF84();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF9EE0(uint64_t a1)
{
  unint64_t v2 = sub_1DCB0001C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9F1C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB0001C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF9F58(uint64_t a1)
{
  unint64_t v2 = sub_1DCB0014C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAF9F94(uint64_t a1)
{
  unint64_t v2 = sub_1DCB0014C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAF9FD0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFEEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA00C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFEEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAFA048(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFA2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA084(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFA2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAFA0C0(uint64_t a1)
{
  unint64_t v2 = sub_1DCB000B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA0FC(uint64_t a1)
{
  unint64_t v2 = sub_1DCB000B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAFA138(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFE54();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA174(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFE54();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAFA1B0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFAC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA1EC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFAC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAFA228(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFD24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA264(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFD24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAFA2A0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFBF4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA2DC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFFBF4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAFA318(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFF994();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA354(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFF994();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAFA390(uint64_t a1@<X8>)
{
  sub_1DCAF7B48();
  if (!v1) {
    sub_1DCAFF07C(v3, a1);
  }
}

void sub_1DCAFA3D8()
{
  sub_1DCAFF07C(v0, (uint64_t)v1);
  sub_1DCAF6F34();
}

uint64_t sub_1DCAFA428()
{
  sub_1DCAFF07C(v0, (uint64_t)v2);
  return sub_1DCAF7B10();
}

uint64_t sub_1DCAFA460()
{
  sub_1DCAFF07C(v0, (uint64_t)v2);
  return sub_1DCAF6110();
}

uint64_t sub_1DCAFA4A0()
{
  sub_1DCAFF07C(v0, (uint64_t)v2);
  sub_1DCB891A8();
  sub_1DCAF6110();
  return sub_1DCB891F8();
}

uint64_t sub_1DCAFA4F4(long long *a1, long long *a2)
{
  sub_1DCAFF07C(a1, (uint64_t)v4);
  sub_1DCAFF07C(a2, (uint64_t)v5);
  return sub_1DCAF63BC(v4, v5) & 1;
}

uint64_t sub_1DCAFA544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAF8B00(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCAFA570(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFF7C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAFA5AC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAFF7C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCAFA5E8(void *a1@<X8>)
{
  sub_1DCAF8CF8();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1DCAFA614()
{
}

uint64_t sub_1DCAFA630()
{
  return sub_1DCAF8CA0(*v0, (void (*)(unsigned char *, uint64_t))sub_1DC8A76EC);
}

uint64_t sub_1DCAFA660()
{
  return sub_1DCAF8AA8();
}

uint64_t sub_1DCAFA690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCAFA6A8(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1DC8A76EC);
}

uint64_t sub_1DCAFA6A8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *v4;
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  a4(v8, v6);
  swift_bridgeObjectRelease();
  return sub_1DCB891F8();
}

uint64_t sub_1DCAFA704(void *a1, void *a2)
{
  return sub_1DCAF8AFC(*a1, *a2);
}

uint64_t sub_1DCAFA710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a2;
  uint64_t v42 = a2;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v10 = (_DWORD *)(a1 + 80);
    while (1)
    {
      uint64_t v7 = *((void *)v10 - 5);
      uint64_t v11 = *((void *)v10 - 4);
      uint64_t v12 = *((void *)v10 - 3);
      uint64_t v13 = *((void *)v10 - 2);
      uint64_t v14 = *((void *)v10 - 1);
      int v15 = *v10;
      *(void *)&long long v36 = *((void *)v10 - 6);
      *((void *)&v36 + 1) = v7;
      uint64_t v37 = v11;
      uint64_t v38 = v12;
      uint64_t v39 = v13;
      uint64_t v40 = v14;
      int v41 = v15;
      uint64_t v16 = sub_1DCB0372C();
      sub_1DC8A8D94(v16, v17, v18, v19);
      sub_1DCAFA850(&v42, &v36, a3, a4, a5, a6, a7, &v35);
      if (v34) {
        break;
      }
      uint64_t v34 = 0;
      v10 += 14;
      uint64_t v20 = sub_1DCB0372C();
      sub_1DC8A8CE4(v20, v21, v22, v23);
      swift_release();
      uint64_t v7 = v35;
      uint64_t v42 = v35;
      if (!--v8)
      {
        swift_bridgeObjectRelease_n();
        return v7;
      }
    }
    uint64_t v24 = sub_1DCB0372C();
    sub_1DC8A8CE4(v24, v25, v26, v27);
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_retain();
  }
  return v7;
}

void sub_1DCAFA850(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v15 = *a1;
  sub_1DCAFF07C(a2, (uint64_t)v17);
  sub_1DCAFA8E8(v17, v15, a3, a4, a5, a6, a7);
  if (!v8) {
    *a8 = v16;
  }
}

void sub_1DCAFA8E8(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1DCAFF07C(a1, (uint64_t)&v26);
  uint64_t v13 = v26;
  uint64_t v14 = *((void *)&v27 + 1);
  switch(DWORD2(v27) >> 28)
  {
    case 1u:
      *((void *)&v27 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      sub_1DCAFBDD8();
      break;
    case 2u:
      sub_1DCAFC020(v26, *((uint64_t *)&v26 + 1), v27, BYTE8(v27) & 1, a2, a3, a4, a5, a6, a7, v25, v26, *((uint64_t *)&v26 + 1), v27, *((void *)&v27 + 1) & 0xFFFFFFFF0FFFFFFFLL, v28, *((uint64_t *)&v28 + 1), v29, v30,
        *((uint64_t *)&v30 + 1),
        v31,
        *((char **)&v31 + 1));
      break;
    case 3u:
      sub_1DCB03774();
      sub_1DCAFC744();
      break;
    case 4u:
      sub_1DCB03774();
      sub_1DCAFC924();
      break;
    case 5u:
      sub_1DCB03774();
      sub_1DCAFCB10();
      break;
    case 6u:
      *((void *)&v27 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      sub_1DCAFD134();
      break;
    case 7u:
      sub_1DCB03774();
      sub_1DCAFD388();
      break;
    case 8u:
      int v15 = v29;
      if (v29) {
        BOOL v16 = 0;
      }
      else {
        BOOL v16 = *((void *)&v27 + 1) == 0x80000000;
      }
      if (v16
        && (*((void *)&v28 + 1) | (unint64_t)v28 | (unint64_t)v26 | (unint64_t)v27 | *((void *)&v26 + 1)) == 0)
      {
        sub_1DCAFAB50();
      }
      else
      {
        uint64_t v18 = *((void *)&v28 + 1) | v28 | v27 | *((void *)&v26 + 1);
        if (!v29
          && ((sub_1DCB0384C(), v16) ? (BOOL v19 = v13 == 1) : (BOOL v19 = 0), v19 ? (v20 = v18 == 0) : (v20 = 0), v20))
        {
          sub_1DCAFAEE8();
        }
        else if (v15 || ((sub_1DCB0384C(), v16) ? (BOOL v21 = v13 == 2) : (BOOL v21 = 0), !v21 || v18))
        {
          if (v15 || ((sub_1DCB0384C(), v16) ? (BOOL v22 = v13 == 3) : (BOOL v22 = 0), !v22 || v18))
          {
            if (v15 || ((sub_1DCB0384C(), v16) ? (BOOL v23 = v13 == 4) : (BOOL v23 = 0), !v23 || v18))
            {
              if (v15 || (v14 == 0x80000000 ? (BOOL v24 = v13 == 5) : (BOOL v24 = 0), !v24 || v18)) {
                sub_1DCAFCD98();
              }
              else {
                sub_1DCAFB0B8();
              }
            }
            else
            {
              sub_1DCAFBB84();
            }
          }
          else
          {
            sub_1DCAFB9B4();
          }
        }
        else
        {
          sub_1DCAFB7A8();
        }
      }
      break;
    default:
      *((void *)&v27 + 1) &= 0xFFFFFFFF0FFFFFFFLL;
      int v33 = v29;
      long long v30 = v26;
      long long v31 = v27;
      long long v32 = v28;
      sub_1DCAFB2F0();
      break;
  }
}

void sub_1DCAFAB50()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAA1060);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC9D2FF4();
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA1068);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v4);
  sub_1DC95AE60();
  sub_1DC87E988(&qword_1EAAA1070);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D9A0();
  sub_1DC87E988((uint64_t *)&unk_1EAAA1078);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DCB038D8();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988(&qword_1EAAA1130);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB874A8();
  sub_1DCB0395C();
  v7();
  uint64_t v8 = (void *(**)@<X0>(void *@<X8>))(v1 + *(int *)(v3 + 52));
  *uint64_t v8 = sub_1DCA05D94;
  v8[1] = 0;
  uint64_t v9 = (void *)(v1 + *(int *)(v3 + 56));
  *uint64_t v9 = sub_1DCAFF09C;
  v9[1] = 0;
  sub_1DC8881AC();
  v10();
  uint64_t v11 = sub_1DC886810();
  *(void *)(v11 + 16) = sub_1DCAFD69C;
  *(void *)(v11 + 24) = 0;
  sub_1DC87E988(&qword_1EAA9DA70);
  sub_1DC8E7358((uint64_t)&qword_1EAAA1138);
  sub_1DC8E7358((uint64_t)&qword_1EAA9DA80);
  sub_1DCB874D8();
  swift_release();
  sub_1DC88CC04(v1, &qword_1EAAA1068);
  sub_1DC8E7358((uint64_t)&qword_1EAAA1140);
  sub_1DCB03B2C();
  sub_1DCB873D8();
  sub_1DC88CC04(v0, &qword_1EAAA1070);
  sub_1DC8E7358((uint64_t)&qword_1EAAA1148);
  sub_1DCB03A68();
  sub_1DCB873A8();
  sub_1DCB03AE0();
  sub_1DC88D5C8();
  v12();
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCAFAEE8()
{
  sub_1DC89D9F8();
  sub_1DC87E988((uint64_t *)&unk_1EAAA5340);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA1058);
  sub_1DC89D4E0();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v4);
  sub_1DCB038C4();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB03800();
  sub_1DCB039A8();
  sub_1DCB03A24();
  v5();
  sub_1DCB03984();
  uint64_t v6 = *(void (**)(void))(v2 + 8);
  sub_1DCB03670();
  v6();
  sub_1DC8E7358((uint64_t)&qword_1EAAA10A8);
  sub_1DCB03824();
  sub_1DCB03670();
  v6();
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCAFB0B8()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAA1048);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA1050);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB03618();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988(&qword_1EAAA10B0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB03800();
  uint64_t v3 = sub_1DC886810();
  *(void *)(v3 + 16) = sub_1DCAFDE28;
  *(void *)(v3 + 24) = 0;
  sub_1DC87E988(&qword_1EAAA1110);
  sub_1DC8E7358((uint64_t)&qword_1EAAA1118);
  sub_1DC8E7358((uint64_t)&qword_1EAAA1120);
  sub_1DCB874D8();
  swift_release();
  sub_1DCB03B90();
  sub_1DC89D710();
  v4();
  sub_1DC8E7358((uint64_t)&qword_1EAAA1128);
  sub_1DCB873A8();
  sub_1DC88CC04(v0, &qword_1EAAA1050);
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCAFB2F0()
{
  sub_1DC89D9F8();
  uint64_t v3 = v2;
  BOOL v22 = (int *)sub_1DC87E988(&qword_1EAAA1028);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v4);
  sub_1DC89D9A0();
  uint64_t v23 = sub_1DC87E988((uint64_t *)&unk_1EAAA5340);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC9D2FF4();
  uint64_t v25 = sub_1DC87E988(&qword_1EAAA1030);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  uint64_t v24 = v9;
  sub_1DC87E988(&qword_1EAAA1038);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  uint64_t v26 = v11;
  sub_1DC87E988(&qword_1EAAA1040);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  uint64_t v13 = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB874A8();
  int v15 = *(_DWORD *)(v3 + 32);
  int v14 = *(_DWORD *)(v3 + 36);
  if (__CFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = *(unsigned int *)(v3 + 28);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v0, v23);
    *(void *)(v1 + v22[15]) = (v14 + v15);
    *(void *)(v1 + v22[16]) = v16;
    *(void *)(v1 + v22[17]) = v13;
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v17 + 28) = *(_OWORD *)(v3 + 12);
    *(_DWORD *)(v17 + 44) = v16;
    *(_DWORD *)(v17 + 48) = v15;
    *(_DWORD *)(v17 + 52) = v14;
    *(void *)(v17 + 56) = *(void *)(v3 + 40);
    *(_DWORD *)(v17 + 64) = *(_DWORD *)(v3 + 48);
    sub_1DC8B9F3C(v1, v24, &qword_1EAAA1028);
    uint64_t v18 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v24 + *(int *)(v25 + 52));
    *uint64_t v18 = sub_1DC88CB28;
    v18[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v17;
    BOOL v19 = (uint64_t (**)(uint64_t))(v24 + *(int *)(v25 + 56));
    *BOOL v19 = sub_1DCAFF16C;
    v19[1] = 0;
    sub_1DC88CC04(v1, &qword_1EAAA1028);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v23);
    uint64_t v20 = sub_1DC886810();
    *(void *)(v20 + 16) = sub_1DCAFD69C;
    *(void *)(v20 + 24) = 0;
    sub_1DC87E988(&qword_1EAA9DA70);
    sub_1DC8E7358((uint64_t)&unk_1EAAA10F0);
    sub_1DC8E7358((uint64_t)&qword_1EAA9DA80);
    sub_1DCB874D8();
    swift_release();
    sub_1DC88CC04(v24, &qword_1EAAA1030);
    sub_1DC8E7358((uint64_t)&qword_1EAAA1100);
    sub_1DCB873D8();
    sub_1DC88CC04(v26, &qword_1EAAA1038);
    sub_1DC8E7358((uint64_t)&qword_1EAAA1108);
    sub_1DCB873A8();
    sub_1DCB03AE0();
    sub_1DC88D5C8();
    v21();
    sub_1DCB03A9C();
    sub_1DC89DA54();
  }
}

void sub_1DCAFB7A8()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAA1020);
  sub_1DC89D4E0();
  uint64_t v1 = v0;
  MEMORY[0x1F4188790](v2);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v3);
  sub_1DC87E988(&qword_1EAAA1058);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DCB03618();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988((uint64_t *)&unk_1EAAA10E0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB03B2C();
  sub_1DCB874A8();
  sub_1DCB87138();
  uint64_t v5 = *(void (**)(void))(v1 + 8);
  sub_1DCB03670();
  v5();
  sub_1DCB03AEC();
  sub_1DCB03670();
  v5();
  sub_1DC8E7358((uint64_t)&qword_1EAAA10A8);
  sub_1DCB873A8();
  sub_1DCA36C34();
  v6();
  sub_1DCB03A9C();
  sub_1DC89DA54();
}

void sub_1DCAFB9B4()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAA1020);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA1058);
  sub_1DC89D4E0();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v4);
  sub_1DCB038C4();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988((uint64_t *)&unk_1EAAA10E0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB03800();
  sub_1DCB039A8();
  sub_1DCB03A24();
  v5();
  sub_1DCB03984();
  uint64_t v6 = *(void (**)(void))(v2 + 8);
  sub_1DCB03670();
  v6();
  sub_1DC8E7358((uint64_t)&qword_1EAAA10A8);
  sub_1DCB03824();
  sub_1DCB03670();
  v6();
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCAFBB84()
{
  sub_1DC89D9F8();
  uint64_t v8 = sub_1DC87E988((uint64_t *)&unk_1EAAA5340);
  sub_1DC89D4E0();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA1018);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA1058);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DCB038D8();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB037DC();
  sub_1DC87E988(&qword_1EAAA10A0);
  sub_1DCB87138();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v8);
  sub_1DCB87138();
  sub_1DC8881AC();
  v6();
  sub_1DC8E7358((uint64_t)&qword_1EAAA10A8);
  sub_1DCB873A8();
  sub_1DCB03A24();
  v7();
  sub_1DCB03A9C();
  sub_1DC89DA54();
}

void sub_1DCAFBDD8()
{
  sub_1DC89D9F8();
  uint64_t v11 = v1;
  sub_1DC87E988(&qword_1EAAA1010);
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA1058);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DCB03618();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB03B2C();
  sub_1DCB874A8();
  *(void *)(swift_allocObject() + 16) = v11;
  swift_bridgeObjectRetain();
  sub_1DCB87128();
  swift_release();
  uint64_t v10 = *(void (**)(void))(v3 + 8);
  sub_1DCA36C34();
  v10();
  sub_1DCB03AEC();
  sub_1DCA36C34();
  v10();
  sub_1DC8E7358((uint64_t)&qword_1EAAA10A8);
  sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  sub_1DCB03A9C();
  sub_1DC89DA54();
}

void sub_1DCAFC020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char *a22)
{
  sub_1DC88D6B0();
  uint64_t v94 = v23;
  uint64_t v95 = v22;
  uint64_t v91 = v24;
  v81[0] = v25;
  LODWORD(v93) = v26;
  uint64_t v90 = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v92 = a22;
  v81[3] = sub_1DC87E988(&qword_1EAAA1010);
  sub_1DC89D4E0();
  v81[1] = v32;
  MEMORY[0x1F4188790](v33);
  sub_1DC89D9A0();
  v81[4] = sub_1DC87E988(&qword_1EAAA1150);
  sub_1DC89D4E0();
  v81[2] = v34;
  MEMORY[0x1F4188790](v35);
  sub_1DC8CD750();
  uint64_t v84 = sub_1DC87E988(&qword_1EAAA1158);
  sub_1DC89D4E0();
  uint64_t v82 = v36;
  MEMORY[0x1F4188790](v37);
  sub_1DC88D550();
  uint64_t v89 = v38;
  uint64_t v83 = sub_1DC87E988(&qword_1EAAA1160);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v39);
  sub_1DCA36830(v40, v81[0]);
  uint64_t v86 = sub_1DC87E988(&qword_1EAAA1168);
  sub_1DC89D4E0();
  uint64_t v85 = v41;
  MEMORY[0x1F4188790](v42);
  sub_1DCA36AE0(v43, v81[0]);
  sub_1DC87E988(&qword_1EAAA1170);
  sub_1DC89D4E0();
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  MEMORY[0x1F4188790](v44);
  sub_1DCA36AA8(v46, v81[0]);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  uint64_t v96 = v48;
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)v81 - v50;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v31, v29, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v53 = v95;
  sub_1DC9683DC();
  if (v53)
  {
    sub_1DCB03AE0();
    sub_1DC88D5C8();
    v56();
  }
  else
  {
    uint64_t v57 = v54;
    uint64_t v58 = v55;
    uint64_t v95 = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
    uint64_t v94 = sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
    sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
    sub_1DCB874A8();
    sub_1DC87E988((uint64_t *)&unk_1EAAA1178);
    sub_1DCB87128();
    sub_1DC88D5C8();
    v59();
    sub_1DC87E988(&qword_1EAAA0A20);
    sub_1DCB87128();
    sub_1DC88D5C8();
    v60();
    uint64_t v61 = sub_1DC886810();
    *(void *)(v61 + 16) = v57;
    *(void *)(v61 + 24) = v58;
    uint64_t v62 = swift_allocObject();
    uint64_t v63 = v57;
    uint64_t v64 = v90;
    *(void *)(v62 + 16) = v90;
    uint64_t v65 = v64;
    uint64_t v66 = sub_1DC886810();
    *(void *)(v66 + 16) = sub_1DC9586C8;
    *(void *)(v66 + 24) = v62;
    uint64_t v67 = sub_1DC886810();
    *(void *)(v67 + 16) = sub_1DC958714;
    *(void *)(v67 + 24) = v66;
    uint64_t v68 = sub_1DC886810();
    *(void *)(v68 + 16) = sub_1DC958674;
    *(void *)(v68 + 24) = v61;
    uint64_t v69 = (void *)swift_allocObject();
    v69[2] = sub_1DCA33610;
    v69[3] = 0;
    v69[4] = sub_1DC95874C;
    v69[5] = v68;
    v69[6] = sub_1DC958730;
    v69[7] = v67;
    uint64_t v70 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
    uint64_t v91 = v63;
    uint64_t v92 = v51;
    *((void *)v70 + 2) = v63;
    *((void *)v70 + 3) = v58;
    *((void *)v70 + 4) = v65;
    uint64_t v72 = v81[6];
    uint64_t v71 = v82;
    uint64_t v93 = AssociatedTypeWitness;
    sub_1DCB0395C();
    v73();
    uint64_t v74 = v83;
    uint64_t v75 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v72 + *(int *)(v83 + 52));
    *uint64_t v75 = sub_1DCA340C4;
    v75[1] = v70;
    uint64_t v76 = (void *)(v72 + *(int *)(v74 + 56));
    *uint64_t v76 = sub_1DC9587B0;
    v76[1] = v69;
    long long v77 = *(void (**)(void))(v71 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1DC8CD890();
    v77();
    sub_1DC8E7358((uint64_t)&qword_1EAAA1188);
    sub_1DCB873D8();
    sub_1DC88CC04(v72, &qword_1EAAA1160);
    sub_1DCB870D8();
    sub_1DCB03B58();
    sub_1DC88D5C8();
    v78();
    sub_1DC8E7358((uint64_t)&unk_1EAAA1190);
    sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DC88D5C8();
    v79();
    sub_1DCB03AE0();
    v80(v92, v93);
  }
  sub_1DC88D674();
}

void sub_1DCAFC744()
{
  sub_1DC89D9F8();
  uint64_t v1 = v0;
  uint64_t v9 = v2;
  sub_1DC87E988(&qword_1EAAA1010);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA1058);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DCB03618();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB037DC();
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = v9;
  *(void *)(v5 + 24) = v1;
  swift_bridgeObjectRetain();
  sub_1DCB87128();
  swift_release();
  uint64_t v6 = sub_1DCB03B90();
  v7(v6);
  sub_1DC8E7358((uint64_t)&qword_1EAAA10A8);
  sub_1DCB03824();
  sub_1DCA36C34();
  v8();
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCAFC924()
{
  sub_1DC89D9F8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_1DC87E988(&qword_1EAAA1000);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA1008);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D970();
  uint64_t v6 = sub_1DC886810();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v1;
  swift_bridgeObjectRetain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB873D8();
  swift_release();
  sub_1DCB870D8();
  sub_1DCB03B90();
  sub_1DCA36C34();
  v7();
  sub_1DC8E7358((uint64_t)&qword_1EAAA10D8);
  sub_1DCB03824();
  sub_1DCB03670();
  v8();
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCAFCB10()
{
  sub_1DC89D9F8();
  uint64_t v14 = v2;
  uint64_t v13 = v3;
  sub_1DC87E988(&qword_1EAAA0FE8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC981E40();
  uint64_t v5 = (int *)sub_1DC87E988(&qword_1EAAA0FF0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAA0FF8);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC95AE60();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA10B0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB873D8();
  sub_1DCB0395C();
  v11();
  *(void *)(v1 + v5[15]) = v13;
  *(void *)(v1 + v5[16]) = v14;
  *(void *)(v1 + v5[17]) = v10;
  sub_1DC8881AC();
  v12();
  sub_1DC8E7358((uint64_t)&qword_1EAAA10C0);
  sub_1DCB873D8();
  sub_1DC88CC04(v1, &qword_1EAAA0FF0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA10C8);
  sub_1DCB03A68();
  sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t *))(v8 + 8))(v0, &qword_1EAAA0FF0);
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCAFCD98()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAA1048);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D9A0();
  uint64_t v15 = sub_1DC87E988(&qword_1EAAA0FD8);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  sub_1DC87E988(&qword_1EAAA0FE0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC95AE60();
  uint64_t v14 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F70);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC8CD750();
  sub_1DC87E988(&qword_1EAAA1058);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC89D9B8();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988(&qword_1EAAA10B0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB874A8();
  sub_1DC87E988(&qword_1EAAA10B8);
  sub_1DCB03B2C();
  sub_1DCB87128();
  sub_1DCB03AE0();
  sub_1DC88D5C8();
  v11();
  sub_1DCB87138();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v15);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
  sub_1DCB87138();
  sub_1DC88D5C8();
  v12();
  sub_1DCB87138();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v14);
  sub_1DC8E7358((uint64_t)&qword_1EAAA10A8);
  sub_1DCB873A8();
  sub_1DC88D5C8();
  v13();
  sub_1DCB03A9C();
  sub_1DC89DA54();
}

void sub_1DCAFD134()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA1018);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC981E40();
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA1058);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  sub_1DCB038C4();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988(&qword_1EAAA10A0);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB037DC();
  *(void *)(swift_allocObject() + 16) = v2;
  swift_bridgeObjectRetain();
  sub_1DCB87128();
  swift_release();
  sub_1DCA36C34();
  v11();
  sub_1DCB87138();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v10, v4);
  sub_1DC8E7358((uint64_t)&qword_1EAAA10A8);
  sub_1DCB03824();
  v12(v0, v4);
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCAFD388()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAA0FC0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA0FC8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC95AE60();
  sub_1DC87E988(&qword_1EAAA0FD0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D9A0();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
  sub_1DC87E988(&qword_1EAAA0190);
  sub_1DC8E7358((uint64_t)&unk_1EAAA3D60);
  sub_1DCB874A8();
  sub_1DCAFE7A0();
  sub_1DC8881AC();
  v3();
  sub_1DC8E7358((uint64_t)&qword_1EAAA1090);
  sub_1DCB873D8();
  sub_1DCA36C34();
  v4();
  sub_1DC8E7358((uint64_t)&qword_1EAAA1098);
  sub_1DCB03A68();
  sub_1DCB873A8();
  sub_1DCB03AA8();
  v5();
  sub_1DCB03840();
  sub_1DC89DA54();
}

uint64_t sub_1DCAFD5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC87E9DC(a1, (uint64_t)v8);
  sub_1DC87E988(&qword_1EAAA1130);
  uint64_t result = sub_1DCB03B0C();
  if (result)
  {
    long long v4 = v6;
    *(_OWORD *)a2 = v5;
    *(_OWORD *)(a2 + 16) = v4;
    *(void *)(a2 + 32) = v7;
  }
  else
  {
    uint64_t v7 = 0;
    long long v5 = 0u;
    long long v6 = 0u;
    sub_1DC88CC04((uint64_t)&v5, &qword_1EAAA9F00);
    sub_1DC8DA330();
    sub_1DC883884();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCAFD69C(uint64_t a1)
{
  return sub_1DCAFD7B0(a1, &qword_1EAAAA7F0, (uint64_t *)&unk_1EAAAA800, (uint64_t)&qword_1EAA9DAA0);
}

uint64_t sub_1DCAFD6B8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFDFE0(a1, (uint64_t *)&unk_1EAAA0CB0, a2);
}

uint64_t sub_1DCAFD6C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFE70C(a1, (uint64_t *)&unk_1EAAA0CB0, a2);
}

uint64_t sub_1DCAFD6E4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCAF2DDC(*a1, a2);
}

uint64_t sub_1DCAFD714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC87E9DC(a1, a2);
}

uint64_t sub_1DCAFD71C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E9DC(a1, (uint64_t)v5);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    *a2 = v4;
  }
  else
  {
    sub_1DC8DA330();
    sub_1DC883884();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCAFD7B0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  sub_1DC87E988(a2);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC981E40();
  sub_1DC87E988(a3);
  sub_1DC8E7358(a4);
  sub_1DCB87AE8();
  sub_1DC87E988(&qword_1EAA9DF60);
  sub_1DCB87178();
  sub_1DCB03AA8();
  return v7();
}

uint64_t sub_1DCAFD8BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFE70C(a1, (uint64_t *)&unk_1EAA9C6E0, a2);
}

uint64_t sub_1DCAFD8DC(uint64_t a1)
{
  uint64_t v3 = sub_1DCA36CBC(a1);
  uint64_t result = sub_1DCAF1B34(v3, (void (*)(long long *, long long *, long long *))sub_1DCAFF1E0);
  if (!v2)
  {
    uint64_t v5 = sub_1DCAF237C(result);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v5;
  }
  return result;
}

_OWORD *sub_1DCAFD95C(uint64_t *a1, _OWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = a3[1];
  uint64_t v8 = (uint64_t)(a3 + 2);
  uint64_t v17 = *a3;
  uint64_t v7 = v17;
  uint64_t v18 = v6;
  sub_1DC87E9DC((uint64_t)(a3 + 2), (uint64_t)v19);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DC9611C8(v17, v6, a4);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v15[0] = v17;
  v15[1] = v6;
  sub_1DC87E9DC(v8, (uint64_t)v16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_1DC88CC04((uint64_t)v15, &qword_1EAAA6A88);
  }
  else
  {
    sub_1DC87E9DC((uint64_t)v16, (uint64_t)v14);
    swift_bridgeObjectRetain_n();
    sub_1DC88CC04((uint64_t)v15, &qword_1EAAA6A88);
    uint64_t v9 = v7;
    uint64_t v11 = v6;
    sub_1DC8818D0((uint64_t)v14);
  }
  sub_1DC8818D0((uint64_t)v19);
  sub_1DC87E9DC(v8, (uint64_t)v16);
  sub_1DC87E9CC(v16, v19);
  sub_1DC87E9CC(v19, v16);
  *a1 = v9;
  a1[1] = v11;
  return sub_1DC87E9CC(v16, a2);
}

uint64_t sub_1DCAFDAC0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFDFE0(a1, (uint64_t *)&unk_1EAA9C6E0, a2);
}

uint64_t sub_1DCAFDACC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E9DC(a1, (uint64_t)v8);
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v5 = v8[5];
    a2[3] = v3;
    a2[4] = &off_1F37F48F0;
    *a2 = v5;
  }
  else
  {
    sub_1DCAFF118();
    uint64_t v6 = sub_1DC883884();
    return sub_1DC981FC0(v6, v7);
  }
  return result;
}

uint64_t sub_1DCAFDB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC8B9960(a1, a2);
}

uint64_t sub_1DCAFDB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC87E9DC(a1, (uint64_t)v8);
  sub_1DC87E988((uint64_t *)&unk_1EAAA10E0);
  if (sub_1DCB03B0C()) {
    return sub_1DC8BA1CC(v6, a2);
  }
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  sub_1DC88CC04((uint64_t)v6, &qword_1EAAA9F20);
  sub_1DCAFF118();
  uint64_t v4 = sub_1DC883884();
  return sub_1DC981FC0(v4, v5);
}

uint64_t sub_1DCAFDC2C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v1 = a1[4];
  sub_1DC881A8C(a1, v2);
  return (*(uint64_t (**)(void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void, uint64_t, uint64_t))(*(void *)(v1 + 8) + 8))(sub_1DCAFDCB4, 0, MEMORY[0x1E4FBC840] + 8, v2);
}

void *sub_1DCAFDCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  if (a1) {
    uint64_t result = sub_1DCB0F6AC(a1, (a2 - a1) / 4);
  }
  else {
    uint64_t result = (void *)MEMORY[0x1E4FBC860];
  }
  *a3 = result;
  return result;
}

void sub_1DCAFDD24(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1DC89822C();
    uint64_t v5 = v9;
    uint64_t v6 = (float *)(v3 + 32);
    unint64_t v7 = *(void *)(v9 + 16);
    do
    {
      float v8 = *v6;
      uint64_t v10 = v5;
      if (v7 >= *(void *)(v5 + 24) >> 1)
      {
        sub_1DC89822C();
        uint64_t v5 = v10;
      }
      *(void *)(v5 + 16) = v7 + 1;
      *(double *)(v5 + 8 * v7 + 32) = v8;
      ++v6;
      ++v7;
      --v4;
    }
    while (v4);
  }
  *a2 = v5;
}

uint64_t sub_1DCAFDDFC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFDFE0(a1, &qword_1EAAA10A0, a2);
}

uint64_t sub_1DCAFDE08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFE70C(a1, &qword_1EAAA10B0, a2);
}

uint64_t sub_1DCAFDE28(uint64_t a1)
{
  return sub_1DCAFD7B0(a1, &qword_1EAAA9F10, &qword_1EAAA10B0, (uint64_t)&unk_1EAAA9F18);
}

uint64_t sub_1DCAFDE44(uint64_t a1)
{
  uint64_t v3 = sub_1DCA36CBC(a1);
  uint64_t result = sub_1DCAFE940(v3);
  if (!v2) {
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_1DCAFDE70(uint64_t a1)
{
  uint64_t v2 = sub_1DCA36CBC(a1);
  uint64_t result = sub_1DCAFEC00(v2);
  uint64_t *v1 = result;
  return result;
}

uint64_t sub_1DCAFDE98(uint64_t a1)
{
  uint64_t v2 = sub_1DCA36CBC(a1);
  uint64_t result = sub_1DCAFEE7C(v2);
  uint64_t *v1 = result;
  return result;
}

uint64_t sub_1DCAFDED4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_bridgeObjectRetain();
  sub_1DCAF292C(v7, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAFDF34()
{
  sub_1DCB03AD0();
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA0900);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 40) = v0;
  sub_1DC87E9DC(v2, inited + 48);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DCB877D8();
  *uint64_t v4 = result;
  return result;
}

uint64_t sub_1DCAFDFD4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFDFE0(a1, &qword_1EAAA10B0, a2);
}

uint64_t sub_1DCAFDFE0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  a3[3] = sub_1DC87E988(a2);
  *a3 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCAFE028@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)result;
  uint64_t v3 = *(void *)(*(void *)result + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v9 = a2;
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1DCB03B9C();
    sub_1DC898A4C();
    uint64_t v5 = v2 + 32;
    while (1)
    {
      sub_1DC87E9DC(v5, (uint64_t)v14);
      sub_1DC87E9DC((uint64_t)v14, (uint64_t)v12);
      sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_1DC8BA1CC(v10, (uint64_t)v13);
      sub_1DC8BA1CC(v13, (uint64_t)v15);
      sub_1DC8818D0((uint64_t)v14);
      uint64_t v4 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCB03AB8();
        sub_1DC898A4C();
        uint64_t v4 = v16;
      }
      unint64_t v6 = *(void *)(v4 + 16);
      if (v6 >= *(void *)(v4 + 24) >> 1)
      {
        sub_1DC898A4C();
        uint64_t v4 = v16;
      }
      *(void *)(v4 + 16) = v6 + 1;
      uint64_t result = sub_1DC8BA1CC(v15, v4 + 40 * v6 + 32);
      v5 += 32;
      if (!--v3)
      {
        a2 = v9;
        goto LABEL_11;
      }
    }
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_1DC88CC04((uint64_t)v10, &qword_1EAAA5360);
    sub_1DCAFF118();
    uint64_t v7 = sub_1DC883884();
    sub_1DC981FC0(v7, v8);
    sub_1DC8818D0((uint64_t)v14);
    return swift_release();
  }
  else
  {
LABEL_11:
    *a2 = v4;
  }
  return result;
}

uint64_t sub_1DCAFE1D0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t result = *a1;
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    BOOL v19 = a2;
    uint64_t v4 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v7 = 0xC000000000000000;
    uint64_t v8 = MEMORY[0x1E4F277C0];
    uint64_t v9 = MEMORY[0x1E4F277B0];
    while (2)
    {
      sub_1DC8B9960(v4, (uint64_t)v29);
      uint64_t v10 = v30;
      uint64_t v11 = v31;
      sub_1DC881A8C(v29, v30);
      (*(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>), void, uint64_t, uint64_t, uint64_t))(v11 + 8))(&v25, sub_1DCB034EC, 0, v8, v10, v11);
      uint64_t v12 = v25;
      uint64_t v27 = v5;
      unint64_t v28 = v7;
      v24[3] = v8;
      v24[4] = v9;
      v24[0] = v25;
      v24[1] = v26;
      unint64_t v23 = v26;
      uint64_t v13 = sub_1DC881A8C(v24, v8);
      uint64_t v14 = *v13;
      unint64_t v15 = v13[1];
      switch(v15 >> 62)
      {
        case 1uLL:
          if (v14 >> 32 < (int)v14)
          {
            __break(1u);
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
          }
          uint64_t v21 = v12;
          sub_1DC8AF450(v12, v23);
          sub_1DCB03B64();
          sub_1DC8AF450(v14, v15);
          if (sub_1DCB867D8() && __OFSUB__((int)v14, sub_1DCB86808())) {
            goto LABEL_23;
          }
          sub_1DCB867F8();
          sub_1DCB03A00();
          sub_1DC881920(v14, v15);
          uint64_t v8 = MEMORY[0x1E4F277C0];
LABEL_13:
          uint64_t v9 = MEMORY[0x1E4F277B0];
          uint64_t v17 = v21;
          unint64_t v16 = v23;
LABEL_16:
          sub_1DC8818D0((uint64_t)v24);
          sub_1DC881920(v17, v16);
          sub_1DC8818D0((uint64_t)v29);
          sub_1DC881920(v5, v7);
          uint64_t v5 = v27;
          unint64_t v7 = v28;
          v4 += 40;
          if (--v3) {
            continue;
          }
          uint64_t result = swift_bridgeObjectRelease();
          a2 = v19;
          break;
        case 2uLL:
          uint64_t v21 = v12;
          uint64_t v22 = v6;
          uint64_t v18 = *(void *)(v14 + 16);
          uint64_t v20 = *(void *)(v14 + 24);
          sub_1DC8AF450(v12, v23);
          sub_1DCB03B64();
          swift_retain();
          swift_retain();
          if (sub_1DCB867D8() && __OFSUB__(v18, sub_1DCB86808())) {
            goto LABEL_22;
          }
          if (__OFSUB__(v20, v18)) {
            goto LABEL_21;
          }
          sub_1DCB867F8();
          sub_1DCB03A00();
          swift_release();
          swift_release();
          uint64_t v6 = v22;
          goto LABEL_13;
        case 3uLL:
          unint64_t v16 = v23;
          sub_1DC8AF450(v12, v23);
          sub_1DCB03B64();
          uint64_t v17 = v12;
          goto LABEL_15;
        default:
          unint64_t v16 = v23;
          sub_1DC8AF450(v12, v23);
          sub_1DCB03B64();
          uint64_t v17 = v12;
          uint64_t v8 = MEMORY[0x1E4F277C0];
LABEL_15:
          sub_1DCB86A88();
          goto LABEL_16;
      }
      break;
    }
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xC000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t sub_1DCAFE588@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  a2[3] = MEMORY[0x1E4F277C0];
  a2[4] = (uint64_t)&off_1F37DF2D0;
  *a2 = v3;
  a2[1] = v2;
  return sub_1DC8AF450(v3, v2);
}

uint64_t sub_1DCAFE5AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = sub_1DC881A8C(a1, v3);
  a2[3] = v3;
  uint64_t v5 = sub_1DC8EF6AC(a2);
  uint64_t v6 = *(uint64_t (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16);

  return v6(v5, v4, v3);
}

uint64_t sub_1DCAFE62C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFE70C(a1, &qword_1EAAA10A0, a2);
}

uint64_t sub_1DCAFE64C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*(void *)(*a1 + 16) == *(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DCAA7F14(a2, v4);
    uint64_t result = sub_1DC87E988(&qword_1EAAA0190);
    a3[3] = result;
    *a3 = v6;
  }
  else
  {
    sub_1DCAFF118();
    sub_1DC883884();
    return sub_1DC8E7710(v8, 1);
  }
  return result;
}

uint64_t sub_1DCAFE6EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCAFE70C(a1, &qword_1EAAA0190, a2);
}

uint64_t sub_1DCAFE70C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  sub_1DC87E9DC(a1, (uint64_t)v8);
  sub_1DC87E988(a2);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    *a3 = v8[5];
  }
  else
  {
    sub_1DCAFF118();
    uint64_t v6 = sub_1DC883884();
    return sub_1DC981FC0(v6, v7);
  }
  return result;
}

void sub_1DCAFE7A0()
{
  sub_1DC89D9F8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA0FB8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  uint64_t v8 = sub_1DC886810();
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v3;
  uint64_t v9 = sub_1DC886810();
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v3;
  sub_1DC87E988(&qword_1EAAA0FC0);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v1, v0);
  uint64_t v11 = (void *)(v1 + *(int *)(v6 + 52));
  *uint64_t v11 = sub_1DC9585B0;
  v11[1] = v9;
  uint64_t v12 = (uint64_t (**)@<X0>(uint64_t *@<X0>, uint64_t *@<X1>, uint64_t *@<X8>))(v1 + *(int *)(v6 + 56));
  *uint64_t v12 = sub_1DC958594;
  v12[1] = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t *@<X1>, uint64_t *@<X8>))v8;
  sub_1DC8E7358((uint64_t)&qword_1EAAA1088);
  swift_bridgeObjectRetain_n();
  sub_1DCB873B8();
  sub_1DC88CC04(v1, &qword_1EAAA0FB8);
  sub_1DC89DA54();
}

uint64_t sub_1DCAFE928@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  a2[3] = MEMORY[0x1E4FBB1A0];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCAFE940(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA9F28);
  uint64_t result = sub_1DCB88CD8();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v23 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1DC87E9DC(*(void *)(a1 + 56) + 32 * i, (uint64_t)v28);
    sub_1DC87E9DC((uint64_t)v28, (uint64_t)v26);
    swift_bridgeObjectRetain();
    sub_1DC87E988((uint64_t *)&unk_1EAAA10E0);
    if (!swift_dynamicCast())
    {
      uint64_t v25 = 0;
      memset(v24, 0, sizeof(v24));
      sub_1DC88CC04((uint64_t)v24, &qword_1EAAA9F20);
      sub_1DCAFF118();
      swift_allocError();
      *uint64_t v22 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1DC8818D0((uint64_t)v28);
      return (uint64_t)v3;
    }
    sub_1DC8BA1CC(v24, (uint64_t)v27);
    sub_1DC8818D0((uint64_t)v28);
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v18 = (void *)(v3[6] + 16 * i);
    *uint64_t v18 = v17;
    v18[1] = v16;
    uint64_t result = sub_1DC8BA1CC(v27, v3[7] + 40 * i);
    uint64_t v19 = v3[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v3[2] = v21;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_26;
    }
    if (v12 >= v29) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v23 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v29) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v23 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v29) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v23 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v29) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v23 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v29) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v23 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DCAFEC00(uint64_t a1)
{
  void (*v24)(long long *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>), void, void, uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  int64_t v34;
  long long v35;
  void v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  uint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA7828);
  uint64_t result = sub_1DCB88CD8();
  int64_t v5 = 0;
  uint64_t v32 = a1;
  uint64_t v33 = (void *)result;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  int64_t v29 = v7;
  uint64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v31 = result + 64;
  if ((v10 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v39 = v2;
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  uint64_t v34 = v5;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v15 << 6))
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * i);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    sub_1DC8B9960(*(void *)(v32 + 56) + 40 * i, (uint64_t)v36);
    uint64_t v21 = v37;
    uint64_t v22 = v38;
    sub_1DC881A8C(v36, v37);
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t v24 = *(void (**)(long long *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>), void, void, uint64_t, uint64_t))(v23 + 8);
    swift_bridgeObjectRetain();
    uint64_t v25 = v39;
    v24(&v35, sub_1DC8AF420, 0, MEMORY[0x1E4F277C0], v21, v23);
    uint64_t v2 = v25;
    sub_1DC8818D0((uint64_t)v36);
    *(void *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t result = (uint64_t)v33;
    unint64_t v26 = (void *)(v33[6] + 16 * i);
    char *v26 = v19;
    v26[1] = v20;
    *(_OWORD *)(v33[7] + 16 * i) = v35;
    uint64_t v27 = v33[2];
    BOOL v14 = __OFADD__(v27, 1);
    unint64_t v28 = v27 + 1;
    if (v14)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    _OWORD v33[2] = v28;
    int64_t v5 = v34;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v14 = __OFADD__(v5, 1);
    int64_t v15 = v5 + 1;
    if (v14) {
      goto LABEL_25;
    }
    if (v15 >= v30) {
      return result;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    if (!v16) {
      break;
    }
LABEL_15:
    uint64_t v39 = v2;
    unint64_t v11 = (v16 - 1) & v16;
    uint64_t v34 = v15;
  }
  int64_t v17 = v15 + 1;
  if (v15 + 1 >= v30) {
    return result;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16) {
    goto LABEL_14;
  }
  int64_t v17 = v15 + 2;
  if (v15 + 2 >= v30) {
    return result;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16) {
    goto LABEL_14;
  }
  int64_t v17 = v15 + 3;
  if (v15 + 3 >= v30) {
    return result;
  }
  unint64_t v16 = *(void *)(v29 + 8 * v17);
  if (v16)
  {
LABEL_14:
    int64_t v15 = v17;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v30) {
      return result;
    }
    unint64_t v16 = *(void *)(v29 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1DCAFEE7C(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA18D8);
  uint64_t result = sub_1DCB88CD8();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v28 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    unint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 56) + 16 * i);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    uint64_t v27 = MEMORY[0x1E4F277C0];
    *(void *)&long long v26 = v21;
    *((void *)&v26 + 1) = v20;
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v22 = (void *)(v3[6] + 16 * i);
    *uint64_t v22 = v17;
    v22[1] = v18;
    uint64_t result = (uint64_t)sub_1DC87E9CC(&v26, (_OWORD *)(v3[7] + 32 * i));
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v25;
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DC8AF450(v21, v20);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DCAFF07C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_DWORD *)(a2 + 48) = *((_DWORD *)a1 + 12);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1DCAFF09C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1DCAF2E48(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1DCAFF0C8()
{
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DCAFF0F8(float32x4_t *a1, uint64_t a2)
{
  return sub_1DCAF33B8(a1, a2, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24), *(void **)(v2 + 32));
}

unint64_t sub_1DCAFF118()
{
  unint64_t result = qword_1EAAA9F08;
  if (!qword_1EAAA9F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F08);
  }
  return result;
}

void sub_1DCAFF164()
{
}

uint64_t sub_1DCAFF16C(uint64_t a1)
{
  uint64_t v3 = sub_1DCA36CBC(a1);
  uint64_t result = sub_1DC88C7BC(v3, v4);
  if (!v2) {
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_1DCAFF198()
{
  return swift_deallocObject();
}

uint64_t sub_1DCAFF1A8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

_OWORD *sub_1DCAFF1E0(uint64_t *a1, _OWORD *a2, uint64_t *a3)
{
  return sub_1DCAFD95C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1DCAFF1FC()
{
  swift_release();
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DCAFF234()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCAFF27C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCAFF2C4()
{
  swift_bridgeObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DCAFF2F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9459AC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCAFF31C()
{
  swift_bridgeObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

unint64_t sub_1DCAFF34C()
{
  unint64_t result = qword_1EAAA9F38;
  if (!qword_1EAAA9F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F38);
  }
  return result;
}

unint64_t sub_1DCAFF398()
{
  unint64_t result = qword_1EAAA9F40;
  if (!qword_1EAAA9F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F40);
  }
  return result;
}

void type metadata accessor for SNPipelineModelRecipe()
{
}

void type metadata accessor for SNPipelineModelUtils.DomainError()
{
}

uint64_t sub_1DCAFF400(uint64_t *a1)
{
  return sub_1DC8A8CE4(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1DCAFF418(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  int v9 = *(_DWORD *)(a2 + 48);
  sub_1DC8A8D94(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t sub_1DCAFF494(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  int v9 = *(_DWORD *)(a2 + 48);
  sub_1DC8A8D94(*(void *)a2, v4, v5, v6);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 48) = v9;
  sub_1DC8A8CE4(v10, v11, v12, v13);
  return a1;
}

__n128 sub_1DCAFF524(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1DCAFF540(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = v3;
  sub_1DC8A8CE4(v4, v6, v5, v7);
  return a1;
}

uint64_t sub_1DCAFF598(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFF7 && *(unsigned char *)(a1 + 52))
    {
      unsigned int v2 = *(_DWORD *)a1 + 2147483639;
    }
    else if ((((*(_DWORD *)(a1 + 24) >> 28) & 0x8000000F | (16 * ((*(_DWORD *)(a1 + 24) >> 1) & 0x7FFFFFF))) ^ 0x7FFFFFFF) >= 0x7FFFFFF7)
    {
      unsigned int v2 = -1;
    }
    else
    {
      unsigned int v2 = ((*(_DWORD *)(a1 + 24) >> 28) & 0x8000000F | (16 * ((*(_DWORD *)(a1 + 24) >> 1) & 0x7FFFFFF))) ^ 0x7FFFFFFF;
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1DCAFF5EC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFF7)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 2147483640;
    if (a3 > 0x7FFFFFF7) {
      *(unsigned char *)(result + 52) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFF7) {
      *(unsigned char *)(result + 52) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 2 * ((-a2 >> 4) & 0x7FFFFFF) - (a2 << 28);
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      *(_DWORD *)(result + 48) = 0;
    }
  }
  return result;
}

uint64_t sub_1DCAFF664(_DWORD *a1)
{
  int v1 = a1[6];
  if (v1 >= 0) {
    return v1 >> 28;
  }
  else {
    return (*a1 + 8);
  }
}

uint64_t sub_1DCAFF680(uint64_t result)
{
  *(void *)(result + 24) &= 0xFFFFFFFF0FFFFFFFLL;
  return result;
}

uint64_t sub_1DCAFF690(uint64_t result, unsigned int a2)
{
  if (a2 < 8)
  {
    *(void *)(result + 24) = *(void *)(result + 24) & 0xFFFFFFFF00000001 | (a2 << 28);
  }
  else
  {
    *(void *)__n128 result = a2 - 8;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0x80000000;
    *(void *)(result + 32) = 0;
    *(void *)(result + 40) = 0;
    *(_DWORD *)(result + 48) = 0;
  }
  return result;
}

void type metadata accessor for SNPipelineModelRecipe.Stage()
{
}

unint64_t sub_1DCAFF6D8()
{
  unint64_t result = qword_1EAAA9F48;
  if (!qword_1EAAA9F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F48);
  }
  return result;
}

unint64_t sub_1DCAFF728()
{
  unint64_t result = qword_1EAAA9F50;
  if (!qword_1EAAA9F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F50);
  }
  return result;
}

unint64_t sub_1DCAFF778()
{
  unint64_t result = qword_1EAAA9F58;
  if (!qword_1EAAA9F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F58);
  }
  return result;
}

unint64_t sub_1DCAFF7C4()
{
  unint64_t result = qword_1EAAA9F68;
  if (!qword_1EAAA9F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F68);
  }
  return result;
}

unint64_t sub_1DCAFF810()
{
  unint64_t result = qword_1EAAA9F80;
  if (!qword_1EAAA9F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F80);
  }
  return result;
}

unint64_t sub_1DCAFF85C(uint64_t a1)
{
  unint64_t result = sub_1DC89DD64(a1);
  if (!result)
  {
    sub_1DCB03B4C();
    sub_1DC8863A8(&qword_1EAAA9F70);
    v2();
    sub_1DC89DCDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1DCAFF8C0()
{
  unint64_t result = qword_1EAAA9F98;
  if (!qword_1EAAA9F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA9F98);
  }
  return result;
}

uint64_t *sub_1DCAFF90C(uint64_t *a1)
{
  return a1;
}

unint64_t sub_1DCAFF948()
{
  unint64_t result = qword_1EAAAA020;
  if (!qword_1EAAAA020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA020);
  }
  return result;
}

unint64_t sub_1DCAFF994()
{
  unint64_t result = qword_1EAAAA028;
  if (!qword_1EAAAA028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA028);
  }
  return result;
}

unint64_t sub_1DCAFF9E0()
{
  unint64_t result = qword_1EAAAA030;
  if (!qword_1EAAAA030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA030);
  }
  return result;
}

unint64_t sub_1DCAFFA2C()
{
  unint64_t result = qword_1EAAAA038;
  if (!qword_1EAAAA038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA038);
  }
  return result;
}

unint64_t sub_1DCAFFA78()
{
  unint64_t result = qword_1EAAAA040;
  if (!qword_1EAAAA040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA040);
  }
  return result;
}

unint64_t sub_1DCAFFAC4()
{
  unint64_t result = qword_1EAAAA048;
  if (!qword_1EAAAA048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA048);
  }
  return result;
}

unint64_t sub_1DCAFFB10()
{
  unint64_t result = qword_1EAAAA050;
  if (!qword_1EAAAA050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA050);
  }
  return result;
}

unint64_t sub_1DCAFFB5C()
{
  unint64_t result = qword_1EAAAA058;
  if (!qword_1EAAAA058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA058);
  }
  return result;
}

unint64_t sub_1DCAFFBA8()
{
  unint64_t result = qword_1EAAAA060;
  if (!qword_1EAAAA060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA060);
  }
  return result;
}

unint64_t sub_1DCAFFBF4()
{
  unint64_t result = qword_1EAAAA068;
  if (!qword_1EAAAA068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA068);
  }
  return result;
}

unint64_t sub_1DCAFFC40()
{
  unint64_t result = qword_1EAAAA070;
  if (!qword_1EAAAA070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA070);
  }
  return result;
}

unint64_t sub_1DCAFFC8C()
{
  unint64_t result = qword_1EAAAA078;
  if (!qword_1EAAAA078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA078);
  }
  return result;
}

unint64_t sub_1DCAFFCD8()
{
  unint64_t result = qword_1EAAAA080;
  if (!qword_1EAAAA080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA080);
  }
  return result;
}

unint64_t sub_1DCAFFD24()
{
  unint64_t result = qword_1EAAAA088;
  if (!qword_1EAAAA088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA088);
  }
  return result;
}

unint64_t sub_1DCAFFD70()
{
  unint64_t result = qword_1EAAAA090;
  if (!qword_1EAAAA090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA090);
  }
  return result;
}

unint64_t sub_1DCAFFDBC()
{
  unint64_t result = qword_1EAAAA098;
  if (!qword_1EAAAA098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA098);
  }
  return result;
}

unint64_t sub_1DCAFFE08()
{
  unint64_t result = qword_1EAAAA0A0;
  if (!qword_1EAAAA0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0A0);
  }
  return result;
}

unint64_t sub_1DCAFFE54()
{
  unint64_t result = qword_1EAAAA0A8;
  if (!qword_1EAAAA0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0A8);
  }
  return result;
}

unint64_t sub_1DCAFFEA0()
{
  unint64_t result = qword_1EAAAA0B0;
  if (!qword_1EAAAA0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0B0);
  }
  return result;
}

unint64_t sub_1DCAFFEEC()
{
  unint64_t result = qword_1EAAAA0B8;
  if (!qword_1EAAAA0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0B8);
  }
  return result;
}

unint64_t sub_1DCAFFF38()
{
  unint64_t result = qword_1EAAAA0C0;
  if (!qword_1EAAAA0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0C0);
  }
  return result;
}

unint64_t sub_1DCAFFF84()
{
  unint64_t result = qword_1EAAAA0C8;
  if (!qword_1EAAAA0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0C8);
  }
  return result;
}

unint64_t sub_1DCAFFFD0()
{
  unint64_t result = qword_1EAAAA0D0;
  if (!qword_1EAAAA0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0D0);
  }
  return result;
}

unint64_t sub_1DCB0001C()
{
  unint64_t result = qword_1EAAAA0D8;
  if (!qword_1EAAAA0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0D8);
  }
  return result;
}

unint64_t sub_1DCB00068()
{
  unint64_t result = qword_1EAAAA0E0;
  if (!qword_1EAAAA0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0E0);
  }
  return result;
}

unint64_t sub_1DCB000B4()
{
  unint64_t result = qword_1EAAAA0E8;
  if (!qword_1EAAAA0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0E8);
  }
  return result;
}

unint64_t sub_1DCB00100()
{
  unint64_t result = qword_1EAAAA0F0;
  if (!qword_1EAAAA0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0F0);
  }
  return result;
}

unint64_t sub_1DCB0014C()
{
  unint64_t result = qword_1EAAAA0F8;
  if (!qword_1EAAAA0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA0F8);
  }
  return result;
}

unint64_t sub_1DCB00198()
{
  unint64_t result = qword_1EAAAA100;
  if (!qword_1EAAAA100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA100);
  }
  return result;
}

unint64_t sub_1DCB001E4()
{
  unint64_t result = qword_1EAAAA108;
  if (!qword_1EAAAA108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA108);
  }
  return result;
}

unint64_t sub_1DCB00230()
{
  unint64_t result = qword_1EAAAA110;
  if (!qword_1EAAAA110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA110);
  }
  return result;
}

unint64_t sub_1DCB0027C()
{
  unint64_t result = qword_1EAAAA198;
  if (!qword_1EAAAA198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA198);
  }
  return result;
}

unint64_t sub_1DCB002C8()
{
  unint64_t result = qword_1EAAAA1A0;
  if (!qword_1EAAAA1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1A0);
  }
  return result;
}

unint64_t sub_1DCB00314()
{
  unint64_t result = qword_1EAAAA1A8;
  if (!qword_1EAAAA1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1A8);
  }
  return result;
}

unint64_t sub_1DCB00360()
{
  unint64_t result = qword_1EAAAA1B0;
  if (!qword_1EAAAA1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1B0);
  }
  return result;
}

unint64_t sub_1DCB003AC()
{
  unint64_t result = qword_1EAAAA1B8;
  if (!qword_1EAAAA1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1B8);
  }
  return result;
}

unint64_t sub_1DCB003F8()
{
  unint64_t result = qword_1EAAAA1C0;
  if (!qword_1EAAAA1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1C0);
  }
  return result;
}

unint64_t sub_1DCB00444()
{
  unint64_t result = qword_1EAAAA1C8;
  if (!qword_1EAAAA1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1C8);
  }
  return result;
}

unint64_t sub_1DCB00490()
{
  unint64_t result = qword_1EAAAA1D0;
  if (!qword_1EAAAA1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1D0);
  }
  return result;
}

unint64_t sub_1DCB004DC()
{
  unint64_t result = qword_1EAAAA1D8;
  if (!qword_1EAAAA1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1D8);
  }
  return result;
}

unint64_t sub_1DCB00528()
{
  unint64_t result = qword_1EAAAA1E0;
  if (!qword_1EAAAA1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1E0);
  }
  return result;
}

unint64_t sub_1DCB00574()
{
  unint64_t result = qword_1EAAAA1E8;
  if (!qword_1EAAAA1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1E8);
  }
  return result;
}

unint64_t sub_1DCB005C0()
{
  unint64_t result = qword_1EAAAA1F0;
  if (!qword_1EAAAA1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1F0);
  }
  return result;
}

unint64_t sub_1DCB0060C()
{
  unint64_t result = qword_1EAAAA1F8;
  if (!qword_1EAAAA1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA1F8);
  }
  return result;
}

unint64_t sub_1DCB00658()
{
  unint64_t result = qword_1EAAAA200;
  if (!qword_1EAAAA200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA200);
  }
  return result;
}

unint64_t sub_1DCB006A4()
{
  unint64_t result = qword_1EAAAA208;
  if (!qword_1EAAAA208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA208);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SNPipelineModelRecipe.Stage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 14) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v5 = v6 - 15;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SNPipelineModelRecipe.Stage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB00844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.EbankCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.EbankCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.FloatArrayToDataCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.FloatArrayToDataCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.LogMelSpectrogramCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.LogMelSpectrogramCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.FloatArrayToBytesCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.FloatArrayToBytesCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.FloatArrayFromBytesCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.FloatArrayFromBytesCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.FloatArrayToDoubleArrayCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.FloatArrayToDoubleArrayCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.MapKeysCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.MapKeysCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.E5rtModelCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.E5rtModelCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.SelectKeyCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.SelectKeyCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.AssignKeyCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.AssignKeyCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.SliceCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.SliceCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.FlattenCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.FlattenCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.MergeBuffersCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.MergeBuffersCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.LabelDoubleScoresCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.LabelDoubleScoresCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stage.SoundActionsPostProcessingCodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stage.SoundActionsPostProcessingCodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.CodingKeys;
}

void type metadata accessor for SNPipelineModelRecipe.Stages.MergeBuffers()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.Flatten()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.FloatArrayToDoubleArray()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.FloatArrayFromBytes()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.FloatArrayToBytes()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.FloatArrayToData()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.EBank()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.SoundActionsPostProcessing()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.LabelDoubleScores()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.Slice()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.AssignKey()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.SelectKey()
{
}

uint64_t sub_1DCB00A1C()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB00A58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCB00AA0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_1DCB00B10(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_1DCB00B60(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCB00BA0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SNPipelineModelRecipe.Stages.E5RT()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.MapKeys()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages()
{
}

void type metadata accessor for SNPipelineModelRecipe.Stages.LogMelSpectrogram()
{
}

unint64_t sub_1DCB00C18()
{
  unint64_t result = qword_1EAAAA210;
  if (!qword_1EAAAA210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA210);
  }
  return result;
}

unint64_t sub_1DCB00C68()
{
  unint64_t result = qword_1EAAAA218;
  if (!qword_1EAAAA218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA218);
  }
  return result;
}

unint64_t sub_1DCB00CB8()
{
  unint64_t result = qword_1EAAAA220;
  if (!qword_1EAAAA220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA220);
  }
  return result;
}

unint64_t sub_1DCB00D08()
{
  unint64_t result = qword_1EAAAA228;
  if (!qword_1EAAAA228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA228);
  }
  return result;
}

unint64_t sub_1DCB00D58()
{
  unint64_t result = qword_1EAAAA230;
  if (!qword_1EAAAA230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA230);
  }
  return result;
}

unint64_t sub_1DCB00DA8()
{
  unint64_t result = qword_1EAAAA238;
  if (!qword_1EAAAA238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA238);
  }
  return result;
}

unint64_t sub_1DCB00DF8()
{
  unint64_t result = qword_1EAAAA240;
  if (!qword_1EAAAA240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA240);
  }
  return result;
}

unint64_t sub_1DCB00E48()
{
  unint64_t result = qword_1EAAAA248;
  if (!qword_1EAAAA248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA248);
  }
  return result;
}

unint64_t sub_1DCB00E98()
{
  unint64_t result = qword_1EAAAA250;
  if (!qword_1EAAAA250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA250);
  }
  return result;
}

unint64_t sub_1DCB00EE8()
{
  unint64_t result = qword_1EAAAA258;
  if (!qword_1EAAAA258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA258);
  }
  return result;
}

unint64_t sub_1DCB00F38()
{
  unint64_t result = qword_1EAAAA260;
  if (!qword_1EAAAA260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA260);
  }
  return result;
}

unint64_t sub_1DCB00F88()
{
  unint64_t result = qword_1EAAAA268;
  if (!qword_1EAAAA268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA268);
  }
  return result;
}

unint64_t sub_1DCB00FD8()
{
  unint64_t result = qword_1EAAAA270;
  if (!qword_1EAAAA270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA270);
  }
  return result;
}

unint64_t sub_1DCB01028()
{
  unint64_t result = qword_1EAAAA278;
  if (!qword_1EAAAA278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA278);
  }
  return result;
}

unint64_t sub_1DCB01078()
{
  unint64_t result = qword_1EAAAA280;
  if (!qword_1EAAAA280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA280);
  }
  return result;
}

unint64_t sub_1DCB010C8()
{
  unint64_t result = qword_1EAAAA288;
  if (!qword_1EAAAA288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA288);
  }
  return result;
}

unint64_t sub_1DCB01118()
{
  unint64_t result = qword_1EAAAA290;
  if (!qword_1EAAAA290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA290);
  }
  return result;
}

unint64_t sub_1DCB01168()
{
  unint64_t result = qword_1EAAAA298;
  if (!qword_1EAAAA298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA298);
  }
  return result;
}

unint64_t sub_1DCB011B8()
{
  unint64_t result = qword_1EAAAA2A0;
  if (!qword_1EAAAA2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2A0);
  }
  return result;
}

unint64_t sub_1DCB01208()
{
  unint64_t result = qword_1EAAAA2A8;
  if (!qword_1EAAAA2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2A8);
  }
  return result;
}

unint64_t sub_1DCB01258()
{
  unint64_t result = qword_1EAAAA2B0;
  if (!qword_1EAAAA2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2B0);
  }
  return result;
}

unint64_t sub_1DCB012A8()
{
  unint64_t result = qword_1EAAAA2B8;
  if (!qword_1EAAAA2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2B8);
  }
  return result;
}

unint64_t sub_1DCB012F8()
{
  unint64_t result = qword_1EAAAA2C0;
  if (!qword_1EAAAA2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2C0);
  }
  return result;
}

unint64_t sub_1DCB01348()
{
  unint64_t result = qword_1EAAAA2C8;
  if (!qword_1EAAAA2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2C8);
  }
  return result;
}

unint64_t sub_1DCB01398()
{
  unint64_t result = qword_1EAAAA2D0;
  if (!qword_1EAAAA2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2D0);
  }
  return result;
}

unint64_t sub_1DCB013E8()
{
  unint64_t result = qword_1EAAAA2D8;
  if (!qword_1EAAAA2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2D8);
  }
  return result;
}

unint64_t sub_1DCB01438()
{
  unint64_t result = qword_1EAAAA2E0;
  if (!qword_1EAAAA2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2E0);
  }
  return result;
}

unint64_t sub_1DCB01488()
{
  unint64_t result = qword_1EAAAA2E8;
  if (!qword_1EAAAA2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2E8);
  }
  return result;
}

unint64_t sub_1DCB014D8()
{
  unint64_t result = qword_1EAAAA2F0;
  if (!qword_1EAAAA2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2F0);
  }
  return result;
}

unint64_t sub_1DCB01528()
{
  unint64_t result = qword_1EAAAA2F8;
  if (!qword_1EAAAA2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA2F8);
  }
  return result;
}

unint64_t sub_1DCB01578()
{
  unint64_t result = qword_1EAAAA300;
  if (!qword_1EAAAA300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA300);
  }
  return result;
}

unint64_t sub_1DCB015C8()
{
  unint64_t result = qword_1EAAAA308;
  if (!qword_1EAAAA308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA308);
  }
  return result;
}

unint64_t sub_1DCB01618()
{
  unint64_t result = qword_1EAAAA310;
  if (!qword_1EAAAA310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA310);
  }
  return result;
}

unint64_t sub_1DCB01668()
{
  unint64_t result = qword_1EAAAA318;
  if (!qword_1EAAAA318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA318);
  }
  return result;
}

unint64_t sub_1DCB016B8()
{
  unint64_t result = qword_1EAAAA320;
  if (!qword_1EAAAA320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA320);
  }
  return result;
}

unint64_t sub_1DCB01708()
{
  unint64_t result = qword_1EAAAA328;
  if (!qword_1EAAAA328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA328);
  }
  return result;
}

unint64_t sub_1DCB01758()
{
  unint64_t result = qword_1EAAAA330;
  if (!qword_1EAAAA330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA330);
  }
  return result;
}

unint64_t sub_1DCB017A8()
{
  unint64_t result = qword_1EAAAA338;
  if (!qword_1EAAAA338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA338);
  }
  return result;
}

unint64_t sub_1DCB017F8()
{
  unint64_t result = qword_1EAAAA340;
  if (!qword_1EAAAA340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA340);
  }
  return result;
}

unint64_t sub_1DCB01848()
{
  unint64_t result = qword_1EAAAA348;
  if (!qword_1EAAAA348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA348);
  }
  return result;
}

unint64_t sub_1DCB01898()
{
  unint64_t result = qword_1EAAAA350;
  if (!qword_1EAAAA350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA350);
  }
  return result;
}

unint64_t sub_1DCB018E8()
{
  unint64_t result = qword_1EAAAA358;
  if (!qword_1EAAAA358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA358);
  }
  return result;
}

unint64_t sub_1DCB01938()
{
  unint64_t result = qword_1EAAAA360;
  if (!qword_1EAAAA360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA360);
  }
  return result;
}

unint64_t sub_1DCB01988()
{
  unint64_t result = qword_1EAAAA368;
  if (!qword_1EAAAA368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA368);
  }
  return result;
}

unint64_t sub_1DCB019D8()
{
  unint64_t result = qword_1EAAAA370;
  if (!qword_1EAAAA370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA370);
  }
  return result;
}

unint64_t sub_1DCB01A28()
{
  unint64_t result = qword_1EAAAA378;
  if (!qword_1EAAAA378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA378);
  }
  return result;
}

unint64_t sub_1DCB01A78()
{
  unint64_t result = qword_1EAAAA380;
  if (!qword_1EAAAA380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA380);
  }
  return result;
}

unint64_t sub_1DCB01AC8()
{
  unint64_t result = qword_1EAAAA388;
  if (!qword_1EAAAA388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA388);
  }
  return result;
}

unint64_t sub_1DCB01B18()
{
  unint64_t result = qword_1EAAAA390;
  if (!qword_1EAAAA390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA390);
  }
  return result;
}

unint64_t sub_1DCB01B68()
{
  unint64_t result = qword_1EAAAA398;
  if (!qword_1EAAAA398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA398);
  }
  return result;
}

unint64_t sub_1DCB01BB8()
{
  unint64_t result = qword_1EAAAA3A0;
  if (!qword_1EAAAA3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3A0);
  }
  return result;
}

unint64_t sub_1DCB01C08()
{
  unint64_t result = qword_1EAAAA3A8;
  if (!qword_1EAAAA3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3A8);
  }
  return result;
}

unint64_t sub_1DCB01C58()
{
  unint64_t result = qword_1EAAAA3B0;
  if (!qword_1EAAAA3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3B0);
  }
  return result;
}

unint64_t sub_1DCB01CA8()
{
  unint64_t result = qword_1EAAAA3B8;
  if (!qword_1EAAAA3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3B8);
  }
  return result;
}

unint64_t sub_1DCB01CF8()
{
  unint64_t result = qword_1EAAAA3C0;
  if (!qword_1EAAAA3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3C0);
  }
  return result;
}

unint64_t sub_1DCB01D48()
{
  unint64_t result = qword_1EAAAA3C8;
  if (!qword_1EAAAA3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3C8);
  }
  return result;
}

unint64_t sub_1DCB01D98()
{
  unint64_t result = qword_1EAAAA3D0;
  if (!qword_1EAAAA3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3D0);
  }
  return result;
}

unint64_t sub_1DCB01DE8()
{
  unint64_t result = qword_1EAAAA3D8;
  if (!qword_1EAAAA3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3D8);
  }
  return result;
}

unint64_t sub_1DCB01E38()
{
  unint64_t result = qword_1EAAAA3E0;
  if (!qword_1EAAAA3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3E0);
  }
  return result;
}

unint64_t sub_1DCB01E88()
{
  unint64_t result = qword_1EAAAA3E8;
  if (!qword_1EAAAA3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3E8);
  }
  return result;
}

unint64_t sub_1DCB01ED8()
{
  unint64_t result = qword_1EAAAA3F0;
  if (!qword_1EAAAA3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3F0);
  }
  return result;
}

unint64_t sub_1DCB01F28()
{
  unint64_t result = qword_1EAAAA3F8;
  if (!qword_1EAAAA3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA3F8);
  }
  return result;
}

unint64_t sub_1DCB01F78()
{
  unint64_t result = qword_1EAAAA400;
  if (!qword_1EAAAA400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA400);
  }
  return result;
}

unint64_t sub_1DCB01FC8()
{
  unint64_t result = qword_1EAAAA408;
  if (!qword_1EAAAA408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA408);
  }
  return result;
}

unint64_t sub_1DCB02018()
{
  unint64_t result = qword_1EAAAA410;
  if (!qword_1EAAAA410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA410);
  }
  return result;
}

unint64_t sub_1DCB02068()
{
  unint64_t result = qword_1EAAAA418;
  if (!qword_1EAAAA418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA418);
  }
  return result;
}

unint64_t sub_1DCB020B4()
{
  unint64_t result = qword_1EAAAA428;
  if (!qword_1EAAAA428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA428);
  }
  return result;
}

unint64_t sub_1DCB02100()
{
  unint64_t result = qword_1EAAAA430;
  if (!qword_1EAAAA430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA430);
  }
  return result;
}

unint64_t sub_1DCB0214C()
{
  unint64_t result = qword_1EAAAA440;
  if (!qword_1EAAAA440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA440);
  }
  return result;
}

unint64_t sub_1DCB02198()
{
  unint64_t result = qword_1EAAAA450;
  if (!qword_1EAAAA450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA450);
  }
  return result;
}

unint64_t sub_1DCB021E4()
{
  unint64_t result = qword_1EAAAA460;
  if (!qword_1EAAAA460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA460);
  }
  return result;
}

unint64_t sub_1DCB02230()
{
  unint64_t result = qword_1EAAAA470;
  if (!qword_1EAAAA470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA470);
  }
  return result;
}

unint64_t sub_1DCB0227C()
{
  unint64_t result = qword_1EAAAA480;
  if (!qword_1EAAAA480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA480);
  }
  return result;
}

unint64_t sub_1DCB022C8()
{
  unint64_t result = qword_1EAAAA498;
  if (!qword_1EAAAA498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA498);
  }
  return result;
}

unint64_t sub_1DCB02314()
{
  unint64_t result = qword_1EAAAA4A8;
  if (!qword_1EAAAA4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA4A8);
  }
  return result;
}

unint64_t sub_1DCB02360(uint64_t a1)
{
  unint64_t result = sub_1DC89DD64(a1);
  if (!result)
  {
    sub_1DCB03B4C();
    sub_1DC8863A8(&qword_1EAA9E7F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1DCB023BC()
{
  unint64_t result = qword_1EAAAA4C0;
  if (!qword_1EAAAA4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA4C0);
  }
  return result;
}

unint64_t sub_1DCB02408()
{
  unint64_t result = qword_1EAAAA4D0;
  if (!qword_1EAAAA4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA4D0);
  }
  return result;
}

unint64_t sub_1DCB02454(uint64_t a1)
{
  unint64_t result = sub_1DC89DD64(a1);
  if (!result)
  {
    sub_1DCB03B4C();
    sub_1DC8863A8((uint64_t *)&unk_1EAA9CB70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1DCB024B0()
{
  unint64_t result = qword_1EAAAA510;
  if (!qword_1EAAAA510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA510);
  }
  return result;
}

unint64_t sub_1DCB024FC()
{
  unint64_t result = qword_1EAAAA520;
  if (!qword_1EAAAA520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA520);
  }
  return result;
}

unint64_t sub_1DCB02548()
{
  unint64_t result = qword_1EAAAA530;
  if (!qword_1EAAAA530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA530);
  }
  return result;
}

unint64_t sub_1DCB02594()
{
  unint64_t result = qword_1EAAAA540;
  if (!qword_1EAAAA540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA540);
  }
  return result;
}

unint64_t sub_1DCB025E0()
{
  unint64_t result = qword_1EAAAA550;
  if (!qword_1EAAAA550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA550);
  }
  return result;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.EBank.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.EBank.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.FloatArrayToData.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.FloatArrayToData.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.FloatArrayToBytes.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.FloatArrayToBytes.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.FloatArrayFromBytes.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.FloatArrayFromBytes.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.FloatArrayToDoubleArray.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.FloatArrayToDoubleArray.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.Flatten.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.Flatten.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.MergeBuffers.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.MergeBuffers.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.MapKeys.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.MapKeys.CodingKeys;
}

unsigned char *_s13SoundAnalysis21SNPipelineModelRecipeV6StagesV4E5RTV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB02778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.E5RT.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.E5RT.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.SelectKey.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.SelectKey.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.AssignKey.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.AssignKey.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SNPipelineModelRecipe.Stages.Slice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB0289CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.Slice.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.Slice.CodingKeys;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.LabelDoubleScores.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.LabelDoubleScores.CodingKeys;
}

unsigned char *_s13SoundAnalysis21SNPipelineModelRecipeV5StageO15EbankCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCB02980);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNPipelineModelRecipe.Stages.SoundActionsPostProcessing.CodingKeys()
{
  return &type metadata for SNPipelineModelRecipe.Stages.SoundActionsPostProcessing.CodingKeys;
}

unint64_t sub_1DCB029BC()
{
  unint64_t result = qword_1EAAAA558;
  if (!qword_1EAAAA558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA558);
  }
  return result;
}

unint64_t sub_1DCB02A0C()
{
  unint64_t result = qword_1EAAAA560;
  if (!qword_1EAAAA560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA560);
  }
  return result;
}

unint64_t sub_1DCB02A5C()
{
  unint64_t result = qword_1EAAAA568;
  if (!qword_1EAAAA568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA568);
  }
  return result;
}

unint64_t sub_1DCB02AAC()
{
  unint64_t result = qword_1EAAAA570;
  if (!qword_1EAAAA570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA570);
  }
  return result;
}

unint64_t sub_1DCB02AFC()
{
  unint64_t result = qword_1EAAAA578;
  if (!qword_1EAAAA578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA578);
  }
  return result;
}

unint64_t sub_1DCB02B4C()
{
  unint64_t result = qword_1EAAAA580;
  if (!qword_1EAAAA580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA580);
  }
  return result;
}

unint64_t sub_1DCB02B9C()
{
  unint64_t result = qword_1EAAAA588;
  if (!qword_1EAAAA588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA588);
  }
  return result;
}

unint64_t sub_1DCB02BEC()
{
  unint64_t result = qword_1EAAAA590;
  if (!qword_1EAAAA590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA590);
  }
  return result;
}

unint64_t sub_1DCB02C3C()
{
  unint64_t result = qword_1EAAAA598;
  if (!qword_1EAAAA598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA598);
  }
  return result;
}

unint64_t sub_1DCB02C8C()
{
  unint64_t result = qword_1EAAAA5A0;
  if (!qword_1EAAAA5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5A0);
  }
  return result;
}

unint64_t sub_1DCB02CDC()
{
  unint64_t result = qword_1EAAAA5A8;
  if (!qword_1EAAAA5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5A8);
  }
  return result;
}

unint64_t sub_1DCB02D2C()
{
  unint64_t result = qword_1EAAAA5B0;
  if (!qword_1EAAAA5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5B0);
  }
  return result;
}

unint64_t sub_1DCB02D7C()
{
  unint64_t result = qword_1EAAAA5B8;
  if (!qword_1EAAAA5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5B8);
  }
  return result;
}

unint64_t sub_1DCB02DCC()
{
  unint64_t result = qword_1EAAAA5C0;
  if (!qword_1EAAAA5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5C0);
  }
  return result;
}

unint64_t sub_1DCB02E1C()
{
  unint64_t result = qword_1EAAAA5C8;
  if (!qword_1EAAAA5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5C8);
  }
  return result;
}

unint64_t sub_1DCB02E6C()
{
  unint64_t result = qword_1EAAAA5D0;
  if (!qword_1EAAAA5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5D0);
  }
  return result;
}

unint64_t sub_1DCB02EBC()
{
  unint64_t result = qword_1EAAAA5D8;
  if (!qword_1EAAAA5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5D8);
  }
  return result;
}

unint64_t sub_1DCB02F0C()
{
  unint64_t result = qword_1EAAAA5E0;
  if (!qword_1EAAAA5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5E0);
  }
  return result;
}

unint64_t sub_1DCB02F5C()
{
  unint64_t result = qword_1EAAAA5E8;
  if (!qword_1EAAAA5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5E8);
  }
  return result;
}

unint64_t sub_1DCB02FAC()
{
  unint64_t result = qword_1EAAAA5F0;
  if (!qword_1EAAAA5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5F0);
  }
  return result;
}

unint64_t sub_1DCB02FFC()
{
  unint64_t result = qword_1EAAAA5F8;
  if (!qword_1EAAAA5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA5F8);
  }
  return result;
}

unint64_t sub_1DCB0304C()
{
  unint64_t result = qword_1EAAAA600;
  if (!qword_1EAAAA600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA600);
  }
  return result;
}

unint64_t sub_1DCB0309C()
{
  unint64_t result = qword_1EAAAA608;
  if (!qword_1EAAAA608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA608);
  }
  return result;
}

unint64_t sub_1DCB030EC()
{
  unint64_t result = qword_1EAAAA610;
  if (!qword_1EAAAA610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA610);
  }
  return result;
}

unint64_t sub_1DCB0313C()
{
  unint64_t result = qword_1EAAAA618;
  if (!qword_1EAAAA618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA618);
  }
  return result;
}

unint64_t sub_1DCB0318C()
{
  unint64_t result = qword_1EAAAA620;
  if (!qword_1EAAAA620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA620);
  }
  return result;
}

unint64_t sub_1DCB031DC()
{
  unint64_t result = qword_1EAAAA628;
  if (!qword_1EAAAA628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA628);
  }
  return result;
}

unint64_t sub_1DCB0322C()
{
  unint64_t result = qword_1EAAAA630;
  if (!qword_1EAAAA630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA630);
  }
  return result;
}

unint64_t sub_1DCB0327C()
{
  unint64_t result = qword_1EAAAA638;
  if (!qword_1EAAAA638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA638);
  }
  return result;
}

unint64_t sub_1DCB032CC()
{
  unint64_t result = qword_1EAAAA640;
  if (!qword_1EAAAA640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA640);
  }
  return result;
}

unint64_t sub_1DCB0331C()
{
  unint64_t result = qword_1EAAAA648;
  if (!qword_1EAAAA648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA648);
  }
  return result;
}

unint64_t sub_1DCB0336C()
{
  unint64_t result = qword_1EAAAA650;
  if (!qword_1EAAAA650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA650);
  }
  return result;
}

unint64_t sub_1DCB033BC()
{
  unint64_t result = qword_1EAAAA658;
  if (!qword_1EAAAA658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA658);
  }
  return result;
}

unint64_t sub_1DCB0340C()
{
  unint64_t result = qword_1EAAAA660;
  if (!qword_1EAAAA660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA660);
  }
  return result;
}

unint64_t sub_1DCB0345C()
{
  unint64_t result = qword_1EAAAA668;
  if (!qword_1EAAAA668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA668);
  }
  return result;
}

uint64_t sub_1DCB034EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DC8AF420(a1, a2, a3);
}

uint64_t sub_1DCB03504()
{
  return v0;
}

uint64_t sub_1DCB03520()
{
  return v0;
}

uint64_t sub_1DCB03538()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCB0355C()
{
  return sub_1DCAFF07C(v0, v1 - 128);
}

double sub_1DCB03588()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  return result;
}

uint64_t sub_1DCB035A4()
{
  return v0;
}

uint64_t sub_1DCB035C0()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DCB035F8()
{
  return sub_1DCB88F18();
}

void sub_1DCB03618()
{
  *(void *)(v1 - 88) = v0;
}

uint64_t sub_1DCB03634()
{
  return sub_1DCB88E88();
}

double sub_1DCB03654(__n128 a1)
{
  a1.n128_u64[0] = *(void *)(v1 - 136);
  *(__n128 *)(v1 - 160) = a1;
  return a1.n128_f64[0];
}

void *sub_1DCB03680()
{
  return sub_1DC881A8C(v0, v0[3]);
}

uint64_t sub_1DCB036A4()
{
  return sub_1DCAFF07C(v0, v1 - 128);
}

uint64_t sub_1DCB036D4()
{
  return v0;
}

__n128 sub_1DCB036EC@<Q0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 448) = a1 & 0xFFFFFFFF0FFFFFFFLL;
  return *(__n128 *)(v1 + 424);
}

uint64_t sub_1DCB03700()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCB0372C()
{
  return v0;
}

uint64_t sub_1DCB0374C()
{
  return sub_1DCB88F18();
}

void sub_1DCB03788(uint64_t a1@<X8>)
{
  sub_1DCAC5F78(0xD000000000000019, (a1 - 32) | 0x8000000000000000);
}

uint64_t sub_1DCB037A8(uint64_t a1)
{
  return sub_1DC8818D0(a1);
}

uint64_t sub_1DCB037C4()
{
  return v0;
}

uint64_t sub_1DCB037DC()
{
  return sub_1DCB874A8();
}

uint64_t sub_1DCB03800()
{
  return sub_1DCB874A8();
}

uint64_t sub_1DCB03824()
{
  return sub_1DCB873A8();
}

uint64_t sub_1DCB03840()
{
  return v0;
}

__n128 sub_1DCB03864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10)
{
  return (__n128)a10;
}

uint64_t sub_1DCB03888()
{
  return sub_1DCB892B8();
}

uint64_t sub_1DCB038A8()
{
  return sub_1DCB88F18();
}

void sub_1DCB038C4()
{
  *(void *)(v1 - 88) = v0;
}

void sub_1DCB038D8()
{
  *(void *)(v1 - 88) = v0;
}

void *sub_1DCB038F4()
{
  return sub_1DC881A8C(v0, v0[3]);
}

double sub_1DCB03940()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  return result;
}

uint64_t sub_1DCB03984()
{
  return sub_1DCB87138();
}

uint64_t sub_1DCB039A8()
{
  return sub_1DCB87138();
}

uint64_t sub_1DCB039CC()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DCB03A00()
{
  return sub_1DCB86A88();
}

uint64_t sub_1DCB03A68()
{
  return *(void *)(v0 - 104);
}

void sub_1DCB03A78()
{
  *(void *)(v1 - 88) = v0;
  sub_1DC897B8C();
}

uint64_t sub_1DCB03A9C()
{
  return v0;
}

uint64_t sub_1DCB03AB8()
{
  return 0;
}

uint64_t sub_1DCB03AEC()
{
  return sub_1DCB87138();
}

uint64_t sub_1DCB03B0C()
{
  return swift_dynamicCast();
}

uint64_t sub_1DCB03B38@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 104) = a1 & 0xFFFFFFFF0FFFFFFFLL;
  return v1;
}

uint64_t sub_1DCB03B58()
{
  return v0;
}

uint64_t sub_1DCB03B64()
{
  return sub_1DC8AF450(v0, v1);
}

__n128 sub_1DCB03B7C()
{
  __n128 result = *(__n128 *)(v0 - 136);
  *(__n128 *)(v0 - 160) = result;
  return result;
}

uint64_t sub_1DCB03B90()
{
  return v0;
}

uint64_t sub_1DCB03B9C()
{
  return 0;
}

unint64_t sub_1DCB03BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9637DC(a2, a3);
}

uint64_t sub_1DCB03BD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DC9840F4();
  uint64_t v4 = v3;
  uint64_t v5 = MGGetProductType();
  sub_1DCB03C2C(v5, (uint64_t)v2, v4, a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB03C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DCB86A18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC983D28(a1, v29);
  sub_1DCB04314((uint64_t)v29, (uint64_t)v30);
  if (v31)
  {
    char v15 = v30[0];
    sub_1DC8CBC38(v29);
  }
  else
  {
    char v15 = 7;
  }
  uint64_t v16 = sub_1DC983EFC(v15, a2, a3);
  if (v17)
  {
    unint64_t v22 = sub_1DC984260(v16, v17);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v27 = v22;
    unint64_t v28 = v24;
    sub_1DCB87A18();
    sub_1DCB86928();
    swift_bridgeObjectRelease();
    uint64_t v25 = 0;
  }
  else
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1DCB86FE8();
    sub_1DC89F57C(v18, (uint64_t)qword_1EAAFF810);
    uint64_t v19 = sub_1DCB86FC8();
    os_log_type_t v20 = sub_1DCB88468();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1DC873000, v19, v20, "No distance classifier model available on this product", v21, 2u);
      MEMORY[0x1E01A99C0](v21, -1, -1);
    }

    uint64_t v25 = 1;
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a4, v25, 1, v11);
  sub_1DC90A3F8(a4, (uint64_t)v10);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v11) == 1) {
    return sub_1DC916734((uint64_t)v10);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_1DCB86988();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id SNDistanceClassifier.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id SNDistanceClassifier.init()()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SNDistanceClassifier();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SNDistanceClassifier()
{
  return self;
}

id SNDistanceClassifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SNDistanceClassifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DCB04314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAA9E950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCB0437C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAA9DA60);
  sub_1DC88CF34(&qword_1EAAAA770, &qword_1EAA9DA60);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB0447C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAAA2F78);
  sub_1DC88CF34((unint64_t *)&unk_1EAAAA760, &qword_1EAAA2F78);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB0457C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAAAA7D0);
  sub_1DC88CF34(&qword_1EAAAA7D8, &qword_1EAAAA7D0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB0467C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988((uint64_t *)&unk_1EAAA4FF0);
  sub_1DC88CF34(&qword_1EAAAA840, (uint64_t *)&unk_1EAAA4FF0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB0477C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988((uint64_t *)&unk_1EAAA50A0);
  sub_1DC88CF34(&qword_1EAAAA8C8, (uint64_t *)&unk_1EAAA50A0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB0487C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAAAA930);
  sub_1DC88CF34((unint64_t *)&unk_1EAAAA938, &qword_1EAAAA930);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB0497C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAAAA7C0);
  sub_1DC88CF34(&qword_1EAAAA7C8, &qword_1EAAAA7C0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB04A7C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988((uint64_t *)&unk_1EAAA3CB0);
  sub_1DC88CF34(&qword_1EAAAAA10, (uint64_t *)&unk_1EAAA3CB0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB04B7C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAAAABC0);
  sub_1DC88CF34(&qword_1EAAAABC8, &qword_1EAAAABC0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB04C7C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAAAABB0);
  sub_1DC88CF34(&qword_1EAAAABB8, &qword_1EAAAABB0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB04D7C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAAAABA0);
  sub_1DC88CF34(&qword_1EAAAABA8, &qword_1EAAAABA0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB04E7C()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAAAAB90);
  sub_1DC88CF34(&qword_1EAAAAB98, &qword_1EAAAAB90);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

uint64_t sub_1DCB04F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_bridgeObjectRetain_n();
  sub_1DC87E988(&qword_1EAAAA688);
  sub_1DC88CF34(&qword_1EAAAA6E8, &qword_1EAAAA688);
  sub_1DCB873C8();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DCB050E0()
{
  sub_1DCB11914();
  sub_1DCA367E8();
  uint64_t v0 = sub_1DC886810();
  sub_1DCB11A44(v0);
  uint64_t v1 = sub_1DC886810();
  sub_1DCB11A38(v1);
  uint64_t v2 = sub_1DC886810();
  sub_1DCB118B0(v2);
  sub_1DC87E988(&qword_1EAA9F1F0);
  sub_1DC88CF34(&qword_1EAAAAAE0, &qword_1EAA9F1F0);
  sub_1DCB11A2C();
  sub_1DCB11834();
  swift_release();
  swift_release();
  sub_1DCB118FC();
  return swift_release();
}

void *sub_1DCB051E0(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAAA678);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  sub_1DC87E988(&qword_1EAAAA680);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC8A22D0();
  sub_1DC87E988(&qword_1EAAAA688);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  sub_1DC87E988((uint64_t *)&unk_1EAAAA690);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  sub_1DCB86BF8();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC88D550();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 48);
  char v11 = *(unsigned char *)(a1 + 49);
  char v12 = *(unsigned char *)(a1 + 50);
  char v13 = *(unsigned char *)(a1 + 51);
  char v14 = *(unsigned char *)(a1 + 52);
  char v15 = *(unsigned char *)(a1 + 53);
  uint64_t v16 = *(void *)(a1 + 56);
  char v17 = *(unsigned char *)(a1 + 64);
  long long v38 = *(_OWORD *)a1;
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  long long v41 = *(_OWORD *)(a1 + 32);
  char v42 = v10;
  char v43 = v11;
  char v44 = v12;
  char v45 = v13;
  char v46 = v14;
  char v47 = v15;
  uint64_t v48 = v16;
  char v49 = v17;
  __n128 result = (void *)sub_1DCB146B8(&v50, &v38);
  if (!v1)
  {
    os_log_type_t v20 = result;
    uint64_t v21 = v50;
    uint64_t v37 = v19;
    sub_1DCB86BE8();
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = v10 ^ 1;
    *(void *)(v22 + 24) = v20;
    unint64_t v23 = (void *)swift_allocObject();
    uint64_t v23[2] = sub_1DCB0CFA0;
    v23[3] = v22;
    v23[4] = v21;
    id v36 = v20;
    swift_retain();
    sub_1DC87E988(&qword_1EAAA5950);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAA6A0, &qword_1EAAA5950);
    sub_1DCB87378();
    sub_1DC87E988((uint64_t *)&unk_1EAA9CD48);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAA6B0, &qword_1EAAAA678);
    sub_1DCB874A8();
    sub_1DC88D5C8();
    v24();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_1DCB0D044;
    *(void *)(v25 + 24) = 0;
    sub_1DC87E988(&qword_1EAA9CD58);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAA6C0, &qword_1EAAAA680);
    sub_1DCB874A8();
    swift_release();
    sub_1DC88D5C8();
    v26();
    *(void *)&long long v38 = 0;
    *((void *)&v38 + 1) = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    *(void *)&long long v38 = 0xD000000000000021;
    *((void *)&v38 + 1) = 0x80000001DCB9AEF0;
    sub_1DCB11178(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB04F7C(v38, *((uint64_t *)&v38 + 1));
    swift_bridgeObjectRelease();
    sub_1DC88D5C8();
    v27();
    sub_1DC88CF34(&qword_1EAAAA6D0, (uint64_t *)&unk_1EAAAA690);
    uint64_t v28 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAAA6D8);
    swift_allocObject();
    uint64_t v29 = sub_1DC9C5478(v28);
    sub_1DC88D5C8();
    v30();
    *(void *)&long long v38 = v29;
    sub_1DC88CF34(&qword_1EAAAA6E0, &qword_1EAAAA6D8);
    uint64_t v31 = sub_1DCB873A8();
    swift_release();
    unsigned int v32 = objc_msgSend(v37, sel_channelCount);
    objc_msgSend(v37, sel_sampleRate);
    double v34 = v33;

    swift_release();
    sub_1DC88D5C8();
    __n128 result = (void *)v35();
    if ((~*(void *)&v34 & 0x7FF0000000000000) != 0)
    {
      if (v34 > -9.22337204e18)
      {
        if (v34 < 9.22337204e18)
        {
          type metadata accessor for SharedBuiltInMicrophone.Instance();
          __n128 result = (void *)swift_allocObject();
          result[2] = v31;
          result[3] = v32;
          result[4] = (uint64_t)v34;
          return result;
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1DCB05890(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return sub_1DCB889B8();
  }
  else {
    return *(void *)(a1 + 16);
  }
}

void sub_1DCB058B4(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if ((unint64_t)(a2 - 0x2000000000000000) >> 62 != 3) {
      __break(1u);
    }
  }
  else
  {
    sub_1DC89D6B4();
  }
}

void sub_1DCB058DC(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7) {
      __break(1u);
    }
  }
  else
  {
    sub_1DC89D6B4();
  }
}

void sub_1DCB05904()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAA7F0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA7F8);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB075A4(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
    sub_1DC88CF34(&qword_1EAA9DAA0, (uint64_t *)&unk_1EAAAA800);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &unk_1EAAAA800;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA810, &qword_1EAAAA7F8);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB05A80()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAA778);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790]();
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA780);
  sub_1DCB1189C();
  MEMORY[0x1F4188790]();
  sub_1DCB117F8();
  uint64_t v1 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB07930(v1, v2, v3);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAAA788);
    sub_1DC88CF34(&qword_1EAAAA790, &qword_1EAAAA788);
    sub_1DCB1187C();
    uint64_t v4 = sub_1DC8BABC0();
    uint64_t v5 = sub_1DCB117A4(v4);
    v6(v5);
    sub_1DCB11978();
    *uint64_t v7 = sub_1DCB115D0;
    v7[1] = &qword_1EAAAA788;
    id v8 = v0;
    uint64_t v9 = sub_1DCB1181C();
    v10(v9);
    sub_1DC88CF34(&qword_1EAAAA798, &qword_1EAAAA780);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB05BFC()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAA7F0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA7F8);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB07CBC(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
    sub_1DC88CF34(&qword_1EAA9DAA0, (uint64_t *)&unk_1EAAAA800);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &unk_1EAAAA800;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA810, &qword_1EAAAA7F8);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB05D78()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAA7F0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA7F8);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB08048(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
    sub_1DC88CF34(&qword_1EAA9DAA0, (uint64_t *)&unk_1EAAAA800);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &unk_1EAAAA800;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA810, &qword_1EAAAA7F8);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB05EF4()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAA9E480);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA890);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB083D4(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAA9E590);
    sub_1DC88CF34(&qword_1EAAA5250, &qword_1EAA9E590);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAA9E590;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA898, &qword_1EAAAA890);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB06070()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAA848);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA850);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB08760(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA0DF0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0E00, (uint64_t *)&unk_1EAAA0DF0);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &unk_1EAAA0DF0;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA858, &qword_1EAAAA850);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

uint64_t sub_1DCB061EC(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAAA778);
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1DC87E988(&qword_1EAAAA780);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v9 = (void *)MEMORY[0x1E01A8D20](v8);
  uint64_t v10 = sub_1DCB08B10(a1, a2, a3);
  return v10;
}

void sub_1DCB0645C()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAA848);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA850);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB08E9C(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA0DF0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0E00, (uint64_t *)&unk_1EAAA0DF0);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &unk_1EAAA0DF0;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA858, &qword_1EAAAA850);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB065D8()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAA11E0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA948);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB09228(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAA1210);
    sub_1DC88CF34(&qword_1EAAA1218, &qword_1EAAA1210);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAA1210;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA950, &qword_1EAAAA948);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB06754()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAA9C0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA9C8);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB095D8(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAAA9D0);
    sub_1DC88CF34(&qword_1EAAAA9D8, &qword_1EAAAA9D0);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAAA9D0;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA9E0, &qword_1EAAAA9C8);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB068D0()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAA11E0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAA948);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB09964(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAA1210);
    sub_1DC88CF34(&qword_1EAAA1218, &qword_1EAAA1210);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAA1210;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAA950, &qword_1EAAAA948);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB06A4C()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAAA18);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAAA20);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB09CF0(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAAAA28);
    sub_1DC88CF34(&qword_1EAAAAA30, &qword_1EAAAAA28);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAAAA28;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAAA38, &qword_1EAAAAA20);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB06BC8()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAAA18);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAAA20);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB0A0A0(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAAAA28);
    sub_1DC88CF34(&qword_1EAAAAA30, &qword_1EAAAAA28);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAAAA28;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAAA38, &qword_1EAAAAA20);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB06D44()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAABD0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAABD8);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB0A450(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAAABE0);
    sub_1DC88CF34(&qword_1EAAAABE8, &qword_1EAAAABE0);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAAABE0;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAABF0, &qword_1EAAAABD8);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB06EC0()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAAB48);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAAB50);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB0A7DC(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAAAB58);
    sub_1DC88CF34(&qword_1EAAAAB60, &qword_1EAAAAB58);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAAAB58;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAAB68, &qword_1EAAAAB50);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB0703C()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAAB00);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAAB08);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB0AB68(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAAAB10);
    sub_1DC88CF34(&qword_1EAAAAB18, &qword_1EAAAAB10);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAAAB10;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAAB20, &qword_1EAAAAB08);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

void sub_1DCB071B8()
{
  sub_1DC89D9F8();
  sub_1DCB118EC();
  sub_1DC87E988(&qword_1EAAAAB00);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAAAB08);
  sub_1DCB1189C();
  MEMORY[0x1F4188790](v2);
  sub_1DCB117F8();
  uint64_t v3 = (void (*)(void))sub_1DCB117E0();
  sub_1DCB0AEF4(v3, v4, v5);
  sub_1DCB119B0();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAAAAB10);
    sub_1DC88CF34(&qword_1EAAAAB18, &qword_1EAAAAB10);
    sub_1DCB1187C();
    uint64_t v6 = sub_1DC8BABC0();
    uint64_t v7 = sub_1DCB117A4(v6);
    v8(v7);
    sub_1DCB11978();
    *uint64_t v9 = sub_1DCB115D0;
    v9[1] = &qword_1EAAAAB10;
    id v10 = v0;
    uint64_t v11 = sub_1DCB1181C();
    v12(v11);
    sub_1DC88CF34(&qword_1EAAAAB20, &qword_1EAAAAB08);
    sub_1DCB118D0();
    sub_1DCA85F0C();
    sub_1DCB11960();
  }
  sub_1DCB03840();
  sub_1DC89DA54();
}

uint64_t sub_1DCB07334(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  sub_1DC87E988((uint64_t *)&unk_1EAAAAD00);
  MEMORY[0x1F4188790]();
  sub_1DC87E988(&qword_1EAAAA710);
  uint64_t v6 = MEMORY[0x1F4188790]();
  uint64_t v7 = (void *)MEMORY[0x1E01A8D20](v6);
  uint64_t v8 = sub_1DCB0B280(a1, a2, a3);
  return v8;
}

uint64_t sub_1DCB075A4(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA818);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  id v10 = (_DWORD *)swift_slowAlloc();
  *id v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA820);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA828, &qword_1EAAAA820);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAA830, &qword_1EAAAA818);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB07930(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA7A0);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  id v10 = (_DWORD *)swift_slowAlloc();
  *id v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA7A8);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA7B0, &qword_1EAAAA7A8);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAA7B8, &qword_1EAAAA7A0);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB07CBC(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA818);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  id v10 = (_DWORD *)swift_slowAlloc();
  *id v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA820);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA828, &qword_1EAAAA820);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAA830, &qword_1EAAAA818);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB08048(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA818);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  id v10 = (_DWORD *)swift_slowAlloc();
  *id v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA820);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA828, &qword_1EAAAA820);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAA830, &qword_1EAAAA818);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB083D4(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA8A0);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  id v10 = (_DWORD *)swift_slowAlloc();
  *id v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA8A8);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA8B0, &qword_1EAAAA8A8);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAA8B8, &qword_1EAAAA8A0);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB08760(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAAA860);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAAA868);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v28 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (_DWORD *)swift_slowAlloc();
  *uint64_t v13 = 0;
  *(void *)(v12 + 16) = v13;
  uint64_t v14 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v12;
    *(void *)(v15 + 24) = v14;
    uint64_t v16 = swift_allocObject();
    uint64_t v25 = v9;
    *(void *)(v16 + 16) = sub_1DCB115DC;
    *(void *)(v16 + 24) = v15;
    uint64_t v17 = swift_allocObject();
    uint64_t v26 = v10;
    uint64_t v18 = v17;
    *(void *)(v17 + 16) = sub_1DCB115DC;
    *(void *)(v17 + 24) = v15;
    uint64_t v19 = sub_1DC87E988(&qword_1EAAAA870);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v27, v19);
    os_log_type_t v20 = &v8[*(int *)(v6 + 36)];
    *((_OWORD *)v20 + 2) = 0u;
    *((_OWORD *)v20 + 3) = 0u;
    *(_OWORD *)os_log_type_t v20 = 0u;
    *((_OWORD *)v20 + 1) = 0u;
    *((void *)v20 + 8) = sub_1DCB117A0;
    *((void *)v20 + 9) = v16;
    *((_OWORD *)v20 + 5) = 0u;
    *((_OWORD *)v20 + 6) = 0u;
    *((_OWORD *)v20 + 7) = 0u;
    *((void *)v20 + 16) = sub_1DC8C1CB8;
    *((void *)v20 + 17) = v18;
    *((void *)v20 + 18) = 0;
    *((void *)v20 + 19) = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA878, &qword_1EAAAA860);
    uint64_t v21 = v28;
    sub_1DCB87508();
    sub_1DC8A8F50((uint64_t)v8, &qword_1EAAAA860);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAA880, &qword_1EAAAA868);
    uint64_t v22 = v25;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v22);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB08B10(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA7A0);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA7A8);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA7B0, &qword_1EAAAA7A8);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAA7B8, &qword_1EAAAA7A0);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB08E9C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA910);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115DC;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115DC;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA918);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA920, &qword_1EAAAA918);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAA928, &qword_1EAAAA910);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB09228(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAAA958);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988((uint64_t *)&unk_1EAAAA960);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v28 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (_DWORD *)swift_slowAlloc();
  *uint64_t v13 = 0;
  *(void *)(v12 + 16) = v13;
  uint64_t v14 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v12;
    *(void *)(v15 + 24) = v14;
    uint64_t v16 = swift_allocObject();
    uint64_t v25 = v9;
    *(void *)(v16 + 16) = sub_1DCB115DC;
    *(void *)(v16 + 24) = v15;
    uint64_t v17 = swift_allocObject();
    uint64_t v26 = v10;
    uint64_t v18 = v17;
    *(void *)(v17 + 16) = sub_1DCB115DC;
    *(void *)(v17 + 24) = v15;
    uint64_t v19 = sub_1DC87E988(&qword_1EAAA6080);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v27, v19);
    os_log_type_t v20 = &v8[*(int *)(v6 + 36)];
    *((_OWORD *)v20 + 2) = 0u;
    *((_OWORD *)v20 + 3) = 0u;
    *(_OWORD *)os_log_type_t v20 = 0u;
    *((_OWORD *)v20 + 1) = 0u;
    *((void *)v20 + 8) = sub_1DCB117A0;
    *((void *)v20 + 9) = v16;
    *((_OWORD *)v20 + 5) = 0u;
    *((_OWORD *)v20 + 6) = 0u;
    *((_OWORD *)v20 + 7) = 0u;
    *((void *)v20 + 16) = sub_1DC8C1CB8;
    *((void *)v20 + 17) = v18;
    *((void *)v20 + 18) = 0;
    *((void *)v20 + 19) = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA970, &qword_1EAAAA958);
    uint64_t v21 = v28;
    sub_1DCB87508();
    sub_1DC8A8F50((uint64_t)v8, &qword_1EAAAA958);
    sub_1DC88CF34(&qword_1EAAAA978, (uint64_t *)&unk_1EAAAA960);
    uint64_t v22 = v25;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v22);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB095D8(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA9E8);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB11208;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB11208;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA9F0);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA9F8, &qword_1EAAAA9F0);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAAAA00, &qword_1EAAAA9E8);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB09964(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA980);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115DC;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115DC;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAA988);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA990, &qword_1EAAAA988);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAA998, &qword_1EAAAA980);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB09CF0(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAAAA40);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAAAA48);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v28 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (_DWORD *)swift_slowAlloc();
  *uint64_t v13 = 0;
  *(void *)(v12 + 16) = v13;
  uint64_t v14 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v12;
    *(void *)(v15 + 24) = v14;
    uint64_t v16 = swift_allocObject();
    uint64_t v25 = v9;
    *(void *)(v16 + 16) = sub_1DCB1123C;
    *(void *)(v16 + 24) = v15;
    uint64_t v17 = swift_allocObject();
    uint64_t v26 = v10;
    uint64_t v18 = v17;
    *(void *)(v17 + 16) = sub_1DCB1123C;
    *(void *)(v17 + 24) = v15;
    uint64_t v19 = sub_1DC87E988(&qword_1EAAAAA50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v27, v19);
    os_log_type_t v20 = &v8[*(int *)(v6 + 36)];
    *((_OWORD *)v20 + 2) = 0u;
    *((_OWORD *)v20 + 3) = 0u;
    *(_OWORD *)os_log_type_t v20 = 0u;
    *((_OWORD *)v20 + 1) = 0u;
    *((void *)v20 + 8) = sub_1DCB1126C;
    *((void *)v20 + 9) = v16;
    *((_OWORD *)v20 + 5) = 0u;
    *((_OWORD *)v20 + 6) = 0u;
    *((_OWORD *)v20 + 7) = 0u;
    *((void *)v20 + 16) = sub_1DC8C1CB8;
    *((void *)v20 + 17) = v18;
    *((void *)v20 + 18) = 0;
    *((void *)v20 + 19) = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAAA58, &qword_1EAAAAA40);
    uint64_t v21 = v28;
    sub_1DCB87508();
    sub_1DC8A8F50((uint64_t)v8, &qword_1EAAAAA40);
    sub_1DC88CF34(&qword_1EAAAAA60, &qword_1EAAAAA48);
    uint64_t v22 = v25;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v22);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB0A0A0(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAAAA68);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988((uint64_t *)&unk_1EAAAAA70);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v28 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (_DWORD *)swift_slowAlloc();
  *uint64_t v13 = 0;
  *(void *)(v12 + 16) = v13;
  uint64_t v14 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v12;
    *(void *)(v15 + 24) = v14;
    uint64_t v16 = swift_allocObject();
    uint64_t v25 = v9;
    *(void *)(v16 + 16) = sub_1DCB115DC;
    *(void *)(v16 + 24) = v15;
    uint64_t v17 = swift_allocObject();
    uint64_t v26 = v10;
    uint64_t v18 = v17;
    *(void *)(v17 + 16) = sub_1DCB115DC;
    *(void *)(v17 + 24) = v15;
    uint64_t v19 = sub_1DC87E988((uint64_t *)&unk_1EAAA1380);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v27, v19);
    os_log_type_t v20 = &v8[*(int *)(v6 + 36)];
    *((_OWORD *)v20 + 2) = 0u;
    *((_OWORD *)v20 + 3) = 0u;
    *(_OWORD *)os_log_type_t v20 = 0u;
    *((_OWORD *)v20 + 1) = 0u;
    *((void *)v20 + 8) = sub_1DCB117A0;
    *((void *)v20 + 9) = v16;
    *((_OWORD *)v20 + 5) = 0u;
    *((_OWORD *)v20 + 6) = 0u;
    *((_OWORD *)v20 + 7) = 0u;
    *((void *)v20 + 16) = sub_1DC8C1CB8;
    *((void *)v20 + 17) = v18;
    *((void *)v20 + 18) = 0;
    *((void *)v20 + 19) = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAAA80, &qword_1EAAAAA68);
    uint64_t v21 = v28;
    sub_1DCB87508();
    sub_1DC8A8F50((uint64_t)v8, &qword_1EAAAAA68);
    sub_1DC88CF34(&qword_1EAAAAA88, (uint64_t *)&unk_1EAAAAA70);
    uint64_t v22 = v25;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v22);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB0A450(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAABF8);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAAC00);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAAC08, &qword_1EAAAAC00);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAAC10, &qword_1EAAAABF8);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB0A7DC(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAAB70);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAAB78);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAAB80, &qword_1EAAAAB78);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAAB88, &qword_1EAAAAB70);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB0AB68(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAAB28);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAAB30);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAAB38, &qword_1EAAAAB30);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAAB40, &qword_1EAAAAB28);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB0AEF4(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAAB28);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB115D8;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB115D8;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1CB8;
    uint64_t v35 = sub_1DC8C1CB8;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988(&qword_1EAAAAB30);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAAB38, &qword_1EAAAAB30);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAAB40, &qword_1EAAAAB28);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

uint64_t sub_1DCB0B280(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAAA730);
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  uint64_t v11 = swift_allocObject();
  a1();
  if (v3)
  {
    swift_release();
    swift_deallocUninitializedObject();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v14 = v13;
    *(void *)(v13 + 16) = sub_1DCB110C0;
    *(void *)(v13 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    uint64_t v23 = 0;
    uint64_t v16 = v15;
    *(void *)(v15 + 16) = sub_1DCB110C0;
    *(void *)(v15 + 24) = v12;
    uint64_t v25 = v53;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v21 = sub_1DCB117A0;
    uint64_t v30 = sub_1DCB117A0;
    uint64_t v31 = v14;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    os_log_type_t v20 = sub_1DC8C1140;
    uint64_t v35 = sub_1DC8C1140;
    uint64_t v36 = v15;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    v19[1] = sub_1DC87E988((uint64_t *)&unk_1EAAAA738);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAAAA748, (uint64_t *)&unk_1EAAAA738);
    sub_1DCB87508();
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    uint64_t v39 = v53;
    char v44 = v21;
    uint64_t v45 = v14;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    char v49 = v20;
    uint64_t v50 = v16;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    sub_1DCB112EC(&v39, (void (*)(uint64_t, uint64_t))sub_1DCB115E0);
    sub_1DC88CF34(&qword_1EAAAA750, &qword_1EAAAA730);
    uint64_t v17 = v24;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v17);
    swift_release();
  }
  return a2;
}

void sub_1DCB0B60C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *(os_unfair_lock_s **)(a1 + 16);
  if (os_unfair_lock_trylock(v5))
  {
    uint64_t v6 = (uint64_t *)(a2 + 16);
    swift_beginAccess();
    if (*v6)
    {
      swift_beginAccess();
      uint64_t v7 = *v6;
      *uint64_t v6 = 0;
      a3(v7);
    }
    os_unfair_lock_unlock(v5);
  }
}

void sub_1DCB0B69C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(a1 + 16);
  if (os_unfair_lock_trylock(v3))
  {
    uint64_t v4 = (uint64_t *)(a2 + 16);
    swift_beginAccess();
    if (*v4 != 1)
    {
      swift_beginAccess();
      uint64_t v5 = *v4;
      *uint64_t v4 = 1;
      sub_1DCB110C8(v5);
    }
    os_unfair_lock_unlock(v3);
  }
}

uint64_t sub_1DCB0B72C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1DCB0B754(void *a1)
{
  id v2 = a1;
  sub_1DC87E988(&qword_1EAA9DF60);
  uint64_t v3 = sub_1DCB88FE8();
  if (v3)
  {
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a1;
  }
  return v4;
}

void sub_1DCB0B7EC(void *a1, uint64_t a2, unint64_t a3)
{
  if (a1) {
    uint64_t v5 = 0x64656C696166;
  }
  else {
    uint64_t v5 = 0x64656873696E6966;
  }
  if (a1) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  uint64_t v16 = (uint64_t)a1;
  id v7 = a1;
  sub_1DC87E988(&qword_1EAAAA6F0);
  uint64_t v8 = sub_1DCB87988();
  unint64_t v10 = v9;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1DCB86FE8();
  sub_1DC89F57C(v11, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DCB86FC8();
  os_log_type_t v13 = sub_1DCB88488();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = v15;
    *(_DWORD *)uint64_t v14 = 136446722;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(a2, a3, &v16);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v5, v6, &v16);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v8, v10, &v16);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v12, v13, "%{public}sreceive completion %{public}s; %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v15, -1, -1);
    MEMORY[0x1E01A99C0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

unint64_t sub_1DCB0BAAC(unint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)result;
  if (!*(void *)result) {
    goto LABEL_41;
  }
  if (a4 < 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __n128 result = sub_1DCB88C68();
    __break(1u);
    return result;
  }
  if (a4)
  {
    if ((a5 & 0x8000000000000000) == 0)
    {
      unint64_t v6 = 0;
      uint64_t v7 = a5 * a4;
      while (1)
      {
        if (v6 == a4) {
          goto LABEL_35;
        }
        if ((unsigned __int128)((uint64_t)v6 * (__int128)a5) >> 64 != (uint64_t)(v6 * a5) >> 63)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        if (a5)
        {
          unint64_t v8 = v7 + v6;
          BOOL v9 = __OFADD__(v7, v6);
          if ((unsigned __int128)(a5 * (__int128)a4) >> 64 != (a5 * a4) >> 63) {
            goto LABEL_37;
          }
          if (v9) {
            goto LABEL_38;
          }
          if (v6 != v8) {
            break;
          }
        }
LABEL_15:
        if (++v6 == a4) {
          goto LABEL_29;
        }
      }
      unint64_t v10 = *(void *)(a3 + 16);
      if (v6 < v10)
      {
        uint64_t v11 = (_DWORD *)(v5 + 4 * v6 * a5);
        uint64_t v12 = a5 - 1;
        __n128 result = v6;
        do
        {
          int v13 = *(_DWORD *)(a3 + 32 + 4 * result);
          if (result % a4 == v6)
          {
            uint64_t v14 = result / a4 + 1;
            uint64_t v15 = v14 * a4;
            if ((unsigned __int128)(v14 * (__int128)a4) >> 64 != (v14 * a4) >> 63)
            {
              __break(1u);
LABEL_34:
              __break(1u);
LABEL_35:
              __break(1u);
              goto LABEL_36;
            }
            BOOL v16 = __OFADD__(v15, v6);
            __n128 result = v15 + v6;
            if (v16) {
              goto LABEL_34;
            }
          }
          else
          {
            ++result;
          }
          *uint64_t v11 = v13;
          if (!v12 || result == v8) {
            goto LABEL_15;
          }
          ++v11;
          --v12;
        }
        while (result < v10);
      }
      __break(1u);
LABEL_29:
      if ((unsigned __int128)(a5 * (__int128)a4) >> 64 == (a5 * a4) >> 63) {
        goto LABEL_32;
      }
      __break(1u);
      goto LABEL_31;
    }
    goto LABEL_40;
  }
LABEL_31:
  uint64_t v7 = a4 * a5;
LABEL_32:
  *a2 = v7;
  return result;
}

int64_t sub_1DCB0BC2C(void *a1)
{
  uint64_t v1 = a1;
  id v2 = objc_msgSend(a1, sel_format);
  unsigned int v3 = objc_msgSend(v2, sel_isInterleaved);

  if (v3)
  {
    type metadata accessor for SNError();
    uint64_t v4 = 0xD000000000000015;
    uint64_t v5 = "buffer is interleaved";
LABEL_20:
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, v4, (unint64_t)(v5 - 32) | 0x8000000000000000);
    return swift_willThrow();
  }
  unsigned int v26 = objc_msgSend(v1, sel_frameLength);
  id v6 = objc_msgSend(v1, sel_format);
  unsigned int v7 = objc_msgSend(v6, sel_channelCount);

  unint64_t v8 = (char *)objc_msgSend(v1, sel_audioBufferList);
  uint64_t v9 = sub_1DCB0F938(v8 + 8, *(unsigned int *)v8);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1DC89836C();
    uint64_t v11 = v27;
    if (*(_DWORD *)(v9 + 32) != 1)
    {
LABEL_13:
      type metadata accessor for SNError();
      sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000027, 0x80000001DCB9AF90);
      swift_willThrow();
      swift_release();
      return swift_release();
    }
    unsigned int v24 = v7;
    uint64_t v25 = v1;
    uint64_t v12 = 0;
    unint64_t v13 = *(void *)(v27 + 16);
    uint64_t v14 = 16 * v13;
    uint64_t v15 = v10 - 1;
    while (1)
    {
      uint64_t v16 = *(void *)(v9 + v12 + 40);
      uint64_t v17 = v16 ? v16 + *(unsigned int *)(v9 + v12 + 36) : 0;
      uint64_t v28 = v11;
      if (v13 >= *(void *)(v11 + 24) >> 1)
      {
        uint64_t v20 = v14;
        sub_1DC89836C();
        uint64_t v14 = v20;
        uint64_t v11 = v28;
      }
      *(void *)(v11 + 16) = v13 + 1;
      uint64_t v18 = v11 + v14 + v12;
      *(void *)(v18 + 32) = v16;
      *(void *)(v18 + 40) = v17;
      if (!v15) {
        break;
      }
      int v19 = *(_DWORD *)(v9 + v12 + 48);
      v12 += 16;
      --v15;
      ++v13;
      if (v19 != 1) {
        goto LABEL_13;
      }
    }
    swift_release();
    uint64_t v1 = v25;
    unsigned int v7 = v24;
  }
  else
  {
    swift_release();
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  if (*(void *)(v11 + 16) != v7)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    uint64_t v4 = 0xD000000000000021;
    uint64_t v5 = "could not map buffers to channels";
    goto LABEL_20;
  }
  id v22 = objc_msgSend(v1, sel_format);
  unsigned int v23 = objc_msgSend(v22, sel_channelCount);

  int64_t result = v26 * (unint64_t)v23;
  if ((v23 * (unsigned __int128)v26) >> 64 == result >> 63) {
    return (int64_t)sub_1DCB0D0EC(result, v11, v26, v7);
  }
  __break(1u);
  return result;
}

char *sub_1DCB0BF88(char *result, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v8 = *(void *)(a3 + 16);
  if (!v8)
  {
LABEL_21:
    uint64_t v16 = a4 * a5;
    if ((a4 * (unsigned __int128)a5) >> 64 != v16 >> 63) {
      goto LABEL_25;
    }
    *a2 = v16;
    return result;
  }
  if ((unint64_t)(a4 - 0x2000000000000000) >> 62 != 3) {
    goto LABEL_26;
  }
  uint64_t v9 = result;
  uint64_t v10 = 0;
  uint64_t v11 = 4 * a4;
  uint64_t v12 = (void *)(a3 + 40);
  while (1)
  {
    unint64_t v13 = (const void *)*(v12 - 1);
    if (v13)
    {
      if (*v12 - (void)v13 != v11) {
        goto LABEL_23;
      }
    }
    else if (v11)
    {
LABEL_23:
      type metadata accessor for SNError();
      sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001BLL, 0x80000001DCB9B010);
      return (char *)swift_willThrow();
    }
    uint64_t v14 = *(char **)v9;
    if (!*(void *)v9)
    {
      int64_t result = 0;
      goto LABEL_12;
    }
    if ((unsigned __int128)(a4 * (__int128)v10) >> 64 != (a4 * v10) >> 63) {
      break;
    }
    int64_t result = &v14[4 * a4 * v10];
    uint64_t v14 = &result[v11];
LABEL_12:
    if (v13) {
      uint64_t v15 = *v12 - (void)v13;
    }
    else {
      uint64_t v15 = 0;
    }
    if (result)
    {
      if (v14 - result < v15) {
        goto LABEL_27;
      }
      if (v13) {
        int64_t result = (char *)memmove(result, v13, *v12 - (void)v13);
      }
    }
    else if (v15 > 0)
    {
      goto LABEL_27;
    }
    ++v10;
    v12 += 2;
    if (v8 == v10) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  int64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

void sub_1DCB0C160(void *a1)
{
  id v2 = objc_msgSend(a1, sel_format);
  unsigned int v3 = objc_msgSend(v2, sel_isInterleaved);

  if (v3) {
    sub_1DCB0C1DC(a1);
  }
  else {
    sub_1DCB0BC2C(a1);
  }
}

void sub_1DCB0C1DC(void *a1)
{
  id v3 = objc_msgSend(a1, sel_format);
  unsigned int v4 = objc_msgSend(v3, sel_isInterleaved);

  if (v4)
  {
    unsigned int v5 = objc_msgSend(a1, sel_frameLength);
    id v6 = objc_msgSend(a1, sel_format);
    unsigned int v7 = objc_msgSend(v6, sel_channelCount);

    uint64_t v8 = (char *)objc_msgSend(a1, sel_audioBufferList);
    uint64_t v9 = sub_1DCB0F938(v8 + 8, *(unsigned int *)v8);
    int v10 = sub_1DC935778(v9);
    swift_release();
    if (v1) {
      return;
    }
    if (v7 == v10)
    {
      id v11 = objc_msgSend(a1, sel_format);
      unsigned int v12 = objc_msgSend(v11, sel_channelCount);

      int64_t v13 = v5 * (unint64_t)v12;
      if ((v12 * (unsigned __int128)v5) >> 64 == v13 >> 63)
      {
        uint64_t v14 = sub_1DCA07864(v5 * (unint64_t)v12);
        if ((unint64_t)(v13 - 0x2000000000000000) >> 62 == 3)
        {
          uint64_t v15 = v14;
          sub_1DCB88778();
          int64_t v16 = v5 * (unint64_t)v7;
          if ((v5 * (unsigned __int128)v7) >> 64 == v16 >> 63)
          {
            if (v13 >= v16)
            {
              *(void *)(v15 + 16) = v16;
              return;
            }
            goto LABEL_16;
          }
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_15;
    }
    type metadata accessor for SNError();
    uint64_t v17 = 0xD000000000000027;
    uint64_t v18 = "unexpected number of channels in buffer";
  }
  else
  {
    type metadata accessor for SNError();
    uint64_t v17 = 0xD000000000000019;
    uint64_t v18 = "buffer is not interleaved";
  }
  sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, v17, (unint64_t)(v18 - 32) | 0x8000000000000000);
  swift_willThrow();
}

uint64_t sub_1DCB0C428(uint64_t a1, void (*a2)(uint64_t *__return_ptr, unsigned char *))
{
  sub_1DCB10FA8(a1, (uint64_t)v8);
  sub_1DCB10FA8((uint64_t)v8, (uint64_t)v6);
  sub_1DCB11010((uint64_t)v8);
  a2(&v7, v6);
  uint64_t result = sub_1DCB11044(a1);
  if (!v2) {
    return v7;
  }
  return result;
}

uint64_t sub_1DCB0C4B8()
{
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1DCB0C53C(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  char v4 = *((unsigned char *)a1 + 48);
  char v5 = *((unsigned char *)a1 + 49);
  char v6 = *((unsigned char *)a1 + 50);
  char v7 = *((unsigned char *)a1 + 51);
  char v8 = *((unsigned char *)a1 + 52);
  char v9 = *((unsigned char *)a1 + 53);
  uint64_t v10 = *((void *)a1 + 7);
  char v11 = *((unsigned char *)a1 + 64);
  long long v12 = *a2;
  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v14 = *((void *)a2 + 3);
  char v15 = *((unsigned char *)a2 + 48);
  char v16 = *((unsigned char *)a2 + 49);
  char v17 = *((unsigned char *)a2 + 50);
  char v18 = *((unsigned char *)a2 + 51);
  char v19 = *((unsigned char *)a2 + 52);
  char v20 = *((unsigned char *)a2 + 53);
  uint64_t v21 = *((void *)a2 + 7);
  char v22 = *((unsigned char *)a2 + 64);
  long long v36 = *a1;
  uint64_t v37 = v2;
  uint64_t v38 = v3;
  long long v39 = a1[2];
  char v40 = v4;
  char v41 = v5;
  char v42 = v6;
  char v43 = v7;
  char v44 = v8;
  char v45 = v9;
  uint64_t v46 = v10;
  char v47 = v11;
  long long v24 = v12;
  uint64_t v25 = v13;
  uint64_t v26 = v14;
  long long v27 = a2[2];
  char v28 = v15;
  char v29 = v16;
  char v30 = v17;
  char v31 = v18;
  char v32 = v19;
  char v33 = v20;
  uint64_t v34 = v21;
  char v35 = v22;
  return static AudioConfiguration.== infix(_:_:)((uint64_t)&v36, (uint64_t)&v24) & 1;
}

uint64_t sub_1DCB0C628(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001DCB91850)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1DCB0C6B0()
{
  return 0xD000000000000012;
}

uint64_t sub_1DCB0C6CC(void *a1)
{
  uint64_t v2 = sub_1DC87E988((uint64_t *)&unk_1EAAAAAB8);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB1128C();
  sub_1DCB892B8();
  sub_1DC8821D0();
  sub_1DCB88F18();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_1DCB0C878()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB0C940@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DC87E988(&qword_1EAAAAAA0);
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC8A22D0();
  uint64_t v11 = v10 - v9;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB1128C();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC8822B0();
    sub_1DCB88DF8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
    *(_OWORD *)a2 = v13;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v15;
    *(_OWORD *)(a2 + 32) = v16;
    *(unsigned char *)(a2 + 48) = v17;
    *(unsigned char *)(a2 + 49) = v18;
    *(unsigned char *)(a2 + 50) = v19;
    *(unsigned char *)(a2 + 51) = v20;
    *(unsigned char *)(a2 + 52) = v21;
    *(unsigned char *)(a2 + 53) = v22;
    *(void *)(a2 + 56) = v23;
    *(unsigned char *)(a2 + 64) = v24;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCB0CAD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB0C628(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCB0CAFC(uint64_t a1)
{
  unint64_t v2 = sub_1DCB1128C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB0CB38(uint64_t a1)
{
  unint64_t v2 = sub_1DCB1128C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB0CB74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCB0C940(a1, a2);
}

uint64_t sub_1DCB0CB8C(void *a1)
{
  return sub_1DCB0C6CC(a1);
}

uint64_t sub_1DCB0CBAC()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB0CC74()
{
  uint64_t v1 = sub_1DC87E988(qword_1EAAA2FA8);
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  id v9[2] = sub_1DC88CEC8;
  _OWORD v9[3] = v0;
  void v9[4] = v8;
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  sub_1DCB87378();
  sub_1DC88CF34((unint64_t *)&unk_1EAAAAA90, qword_1EAAA2FA8);
  uint64_t v10 = sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v10;
}

uint64_t sub_1DCB0CDF8()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedBuiltInMicrophone.Instance()
{
  return self;
}

void type metadata accessor for SharedBuiltInMicrophone()
{
}

void type metadata accessor for SharedBuiltInMicrophone.Configuration()
{
}

unint64_t sub_1DCB0CE70()
{
  unint64_t result = qword_1EAAAA670;
  if (!qword_1EAAAA670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAA670);
  }
  return result;
}

uint64_t sub_1DCB0CEBC()
{
  return sub_1DCB0CC74();
}

uint64_t sub_1DCB0CEE0()
{
  return *(void *)(*(void *)v0 + 24);
}

uint64_t sub_1DCB0CEEC()
{
  return *(void *)(*(void *)v0 + 32);
}

uint64_t sub_1DCB0CEF8@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  if (a1)
  {
    type metadata accessor for SessionActivation();
    swift_allocObject();
    uint64_t result = sub_1DCAD29D0(a2, 0);
    if (v3) {
      return result;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *a3 = result;
  return result;
}

uint64_t sub_1DCB0CF70()
{
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DCB0CFA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCB0CEF8(*(unsigned char *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_1DCB0CFC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)(a1 + 8);
  sub_1DCB0C160(*(void **)a1);
  if (!v2)
  {
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    uint64_t v11 = v7;
    char v12 = v8;
    id v13 = objc_msgSend(v4, sel_sampleTime);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    *(unsigned char *)(a2 + 24) = v12 & 1;
    *(void *)(a2 + 32) = v13;
  }
}

unint64_t sub_1DCB0D044@<X0>(unint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)result;
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v5 = *(void *)(result + 16);
  if (*(unsigned char *)(result + 24) != 1)
  {
    uint64_t result = swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if ((unsigned __int128)(v3 * (__int128)v5) >> 64 == (v3 * v5) >> 63)
  {
    j__swift_bridgeObjectRetain(*(void *)result, v3, v5, 1);
    uint64_t result = sub_1DCB0D1B0(v3 * v5, v4, v3, v5);
    uint64_t v4 = result;
LABEL_5:
    *a2 = v4;
    a2[1] = v3;
    a2[2] = v5;
    return result;
  }
  __break(1u);
  return result;
}

char *sub_1DCB0D0EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v9 = sub_1DCA07864(a1);
  v12[1] = a1;
  uint64_t v13 = 0;
  v12[0] = v10;
  uint64_t result = sub_1DCB0BF88((char *)v12, &v13, a2, a3, a4);
  if (v4)
  {
    if (v13 <= a1)
    {
      *(void *)(v9 + 16) = v13;
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      return (char *)v9;
    }
    __break(1u);
  }
  else if (v13 <= a1)
  {
    *(void *)(v9 + 16) = v13;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DCB0D1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1DCA07864(a1);
  v12[1] = a1;
  uint64_t v13 = 0;
  v12[0] = v10;
  unint64_t result = sub_1DCB0BAAC((unint64_t)v12, &v13, a2, a3, a4);
  if (v4)
  {
    if (v13 <= a1)
    {
      *(void *)(v9 + 16) = v13;
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      return v9;
    }
    __break(1u);
  }
  else if (v13 <= a1)
  {
    *(void *)(v9 + 16) = v13;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCB0D274()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119E0();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1DCB0D314(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = (void *)sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11B5C();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  uint64_t v6 = (void *)sub_1DCB119D4();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1DCB0D3B0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  uint64_t v5 = *(void *)(*(void *)(type metadata accessor for KShotSegment(0) - 8) + 72) * a2;
  unint64_t v6 = a3 + v5;
  unint64_t v7 = a1 + v5;
  if (v6 > a1 && v7 > a3)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0D48C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  if (a3 + (a2 << 6) > a1 && a1 + (a2 << 6) > a3)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAAAAF8);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

void *sub_1DCB0D550(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = (void *)sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11B18();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  unint64_t v6 = (void *)sub_1DCB119D4();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1DCB0D5E8()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11BCC();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1DCB0D68C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = (void *)sub_1DCA78868();
    __break(1u);
    return result;
  }
  unint64_t v3 = a1 + 48 * a2;
  if (a3 + 48 * a2 > a1)
  {
    BOOL v4 = v3 >= a3;
    BOOL v5 = v3 == a3;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  unint64_t v6 = (void *)sub_1DCB119D4();

  return memcpy(v6, v7, v8);
}

void *sub_1DCB0D738(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = (void *)sub_1DCA78868();
    __break(1u);
    return result;
  }
  if (&__dst[52 * a2] > __src && &__src[52 * a2] > __dst)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return memcpy(__dst, __src, 52 * a2);
}

void *sub_1DCB0D7E8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = (void *)sub_1DCA78868();
    __break(1u);
    return result;
  }
  if (&__dst[28 * a2] > __src && &__src[28 * a2] > __dst)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return memcpy(__dst, __src, 28 * a2);
}

uint64_t sub_1DCB0D898(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  if (a3 + 48 * a2 > a1 && a1 + 48 * a2 > a3)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988((uint64_t *)&unk_1EAAAA8F0);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0D960(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0DBA8(a1, a2);
}

uint64_t sub_1DCB0D96C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1192C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAA69D0);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0DA1C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11AF8();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAAA8D8);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0DACC(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0DAE4(a1, a2);
}

uint64_t sub_1DCB0DAD8(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0DAE4(a1, a2);
}

uint64_t sub_1DCB0DAE4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1192C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(v3);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0DB90(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0DBA8(a1, a2);
}

uint64_t sub_1DCB0DB9C(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0DBA8(a1, a2);
}

uint64_t sub_1DCB0DBA8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1185C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(v3);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0DC54(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1185C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAA9C748);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0DD04()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11BCC();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1DCB0DDA4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = (void *)sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11948();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  BOOL v6 = (void *)sub_1DCB119D4();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1DCB0DE3C(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0E8A4(a1, a2);
}

uint64_t sub_1DCB0DE48(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1192C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAA9E478);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0DEF8()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119E0();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0DF9C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1185C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAA6A20);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E04C()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119E0();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E0EC()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119F4();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E18C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11A6C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988((uint64_t *)&unk_1EAA9E750);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E23C(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0E734(a1, a2);
}

uint64_t sub_1DCB0E250(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0E670(a1, a2);
}

uint64_t sub_1DCB0E25C(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0DBA8(a1, a2);
}

void *sub_1DCB0E268(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[16 * a2] > __src ? (BOOL v3 = &__src[16 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1DCB88D08();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 16 * a2);
  }
  return result;
}

void *sub_1DCB0E344(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = (void *)sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11A88();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  BOOL v6 = (void *)sub_1DCB119D4();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1DCB0E3DC()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119E0();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E47C()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119F4();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1DCB0E51C()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = (void *)sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11BB8();
  if (!v6 & v5) {
    BOOL v7 = v4 > (unint64_t)v3;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return memcpy(v3, v1, v2);
}

uint64_t sub_1DCB0E5B4()
{
  sub_1DCB119C8();
  if (v3 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  if (v2 + 48 * v1 > v0 && v0 + 48 * v1 > v2)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E664(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0E670(a1, a2);
}

uint64_t sub_1DCB0E670(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11A6C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(v3);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E720(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0E734(a1, a2);
}

uint64_t sub_1DCB0E734(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11A6C();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC89C89C(0, v3);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E7E8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1185C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAA6990);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E898(uint64_t a1, uint64_t a2)
{
  return sub_1DCB0E8A4(a1, a2);
}

uint64_t sub_1DCB0E8A4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11A50();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(v3);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0E950(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1185C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAAA900);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0EA00(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1185C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAAAAC8);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0EAB0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  if (a3 + 160 * a2 > a1 && a1 + 160 * a2 > a3)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAA41B0);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0EB78(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11A50();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988((uint64_t *)&unk_1EAAAA7E0);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0EC28(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1192C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAAA908);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0ECD8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1185C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAAA9A0);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0ED88(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1192C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAAA9A8);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0EE38()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119F4();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0EED8()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119E0();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0EF78(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11A50();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAA9CF0);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0F028(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB11AF8();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0F0D8()
{
  sub_1DCB119C8();
  if (v0 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB119F4();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCB0F178(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_1DC8AF148();
    sub_1DCA7865C();
LABEL_11:
    uint64_t result = sub_1DCA78868();
    __break(1u);
    return result;
  }
  sub_1DCB1185C();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_1DC8AF148();
    sub_1DCA7864C();
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAAAA758);
  sub_1DCB117CC();

  return swift_arrayInitWithCopy();
}

void *sub_1DCB0F228(_DWORD *a1)
{
  unint64_t v1 = *a1;
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1DC87E988((uint64_t *)&unk_1EAAAA700);
  unint64_t v3 = (void *)sub_1DC89D788();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  long long v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  if (sub_1DCB0FBA8(&v6, (uint64_t)(v3 + 4), v1, a1) != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

unint64_t *sub_1DCB0F2BC(unint64_t *result, unint64_t a2)
{
  unint64_t v3 = (unint64_t)result;
  int64_t v4 = a2 - (void)result;
  if (a2 < (unint64_t)result)
  {
    if ((uint64_t)((uint64_t)result - a2) < 0)
    {
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
    int64_t v4 = a2 - (void)result;
LABEL_5:
    if (!v4) {
      return (unint64_t *)MEMORY[0x1E4FBC860];
    }
    if (v4 <= 0)
    {
      char v5 = (unint64_t *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1DC87E988(qword_1EAAA6448);
      char v5 = (unint64_t *)sub_1DC89D788();
      j__malloc_size(v5);
      sub_1DCB11AE4();
      _OWORD v5[2] = v4;
      long long v5[3] = v6;
    }
    uint64_t result = sub_1DCB0FC24(v7, v5 + 4, v4, v3, a2);
    if (result == (unint64_t *)v4) {
      return v5;
    }
    __break(1u);
    goto LABEL_13;
  }
  if ((uint64_t)(a2 - (void)result) >= 0) {
    goto LABEL_5;
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_1DCB0F384()
{
}

void sub_1DCB0F39C()
{
  sub_1DCAF00EC();
  if (*(void *)(v0 + 16))
  {
    sub_1DC87E988(&qword_1EAA9C6C0);
    unint64_t v1 = (const void *)sub_1DC89D788();
    size_t v2 = j__malloc_size(v1);
    sub_1DCB11A0C(v2 - 32);
    sub_1DCB102D0(v3, v4, v5, v6);
    sub_1DCB11AA0();
    sub_1DCB11984();
    if (!v7) {
      __break(1u);
    }
  }
  sub_1DCAF01E8();
}

void sub_1DCB0F41C()
{
  sub_1DCAF00EC();
  if (*(void *)(v0 + 16))
  {
    sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
    unint64_t v1 = (const void *)sub_1DC89D788();
    size_t v2 = j__malloc_size(v1);
    sub_1DCB11A0C(v2 - 32);
    sub_1DCB10464(v3, v4, v5, v6);
    sub_1DCB11AA0();
    sub_1DCB11984();
    if (!v7) {
      __break(1u);
    }
  }
  sub_1DCAF01E8();
}

uint64_t sub_1DCB0F49C(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_1DCB889B8();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1DC87E988(&qword_1EAA9C720);
    uint64_t v3 = (void *)sub_1DC89D788();
    size_t v4 = j__malloc_size(v3);
    v3[2] = v2;
    long long v3[3] = (2 * ((uint64_t)(v4 - 32) / 8)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DCB10664(&v7, v3 + 4, v2, a1);
  uint64_t result = sub_1DC964348();
  if (v5 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void sub_1DCB0F58C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (a4 >> 1 != a3)
  {
    sub_1DCB11B94();
    if (!(v7 ^ v8 | v6))
    {
      sub_1DC87E988((uint64_t *)&unk_1EAAA1370);
      uint64_t v9 = (const void *)sub_1DC89D788();
      size_t v10 = j__malloc_size(v9);
      sub_1DCB11B84(v10 - 32);
    }
    if (v5 != v4)
    {
      sub_1DCB0DD04();
      return;
    }
    goto LABEL_9;
  }
}

void *sub_1DCB0F634(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1DCB11B74();
  if (v4 ^ v5 | v3)
  {
    char v6 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1DC87E988(&qword_1EAA9C6C0);
    char v6 = (void *)sub_1DC89D788();
    j__malloc_size(v6);
    sub_1DCB11AE4();
    long long v6[2] = v2;
    v6[3] = v7;
  }
  uint64_t v8 = sub_1DCB11B34();
  sub_1DCB0DDA4(v8, v9);
  return v6;
}

void *sub_1DCB0F6AC(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1DCB11B74();
  if (v4 ^ v5 | v3)
  {
    char v6 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1DC87E988(&qword_1EAA9DD00);
    char v6 = (void *)sub_1DC89D788();
    size_t v7 = j__malloc_size(v6);
    long long v6[2] = v2;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 4);
  }
  uint64_t v8 = sub_1DCB11B34();
  sub_1DCB0D314(v8, v9);
  return v6;
}

void sub_1DCB0F730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1DCAF00EC();
  a25 = v26;
  a26 = v28;
  uint64_t v29 = *(void *)(v27 + 16);
  if (v29)
  {
    uint64_t v30 = v27;
    sub_1DC87E988(&qword_1EAAAAAE8);
    char v31 = (void *)swift_allocObject();
    size_t v32 = j__malloc_size(v31);
    v31[2] = v29;
    v31[3] = 2 * ((uint64_t)(v32 - 32) / 24);
    sub_1DCB1097C(&a10, v31 + 4, v29, v30);
    swift_bridgeObjectRetain();
    sub_1DCB11984();
    if (!v33) {
      __break(1u);
    }
  }
  sub_1DCAF01E8();
}

void sub_1DCB0F7E4()
{
}

void sub_1DCB0F7FC()
{
  sub_1DCAF00EC();
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0;
    sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
    char v3 = (const void *)sub_1DC89D788();
    size_t v4 = j__malloc_size(v3);
    sub_1DCB11A0C(v4 - 32);
    v2();
    sub_1DCB11AA0();
    sub_1DCB11984();
    if (!v5) {
      __break(1u);
    }
  }
  sub_1DCAF01E8();
}

void *sub_1DCB0F884(void *result, uint64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v4 = (uint64_t)result;
    if (v2 <= 0)
    {
      char v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1DC87E988(&qword_1EAA9C6C0);
      char v5 = (void *)sub_1DC89D788();
      size_t v6 = j__malloc_size(v5);
      sub_1DCB11B84(v6 - 32);
    }
    uint64_t result = sub_1DCB10DAC(v7, v5 + 4, v2, v4, a2);
    if (result == (void *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCB0F938(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  if (a2 <= 0)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAAA700);
    uint64_t v4 = swift_allocObject();
    size_t v5 = j__malloc_size((const void *)v4);
    *(void *)(v4 + 16) = a2;
    *(void *)(v4 + 24) = 2 * ((uint64_t)(v5 - 32) / 16);
  }
  sub_1DCB0E268(a1, a2, (char *)(v4 + 32));
  return v4;
}

void sub_1DCB0F9D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v6)
  {
    sub_1DCB11B94();
    if (!(v8 ^ v9 | v7))
    {
      sub_1DC87E988((uint64_t *)&unk_1EAA9DCA0);
      size_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      long long v10[2] = v6;
      _OWORD v10[3] = 2 * v11 - 64;
    }
    if (v5 != v4)
    {
      sub_1DCB0E51C();
      return;
    }
    goto LABEL_9;
  }
}

void *sub_1DCB0FA80(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1DCB11B74();
  if (v4 ^ v5 | v3)
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1DC87E988(&qword_1EAAAAAF0);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    long long v6[2] = v2;
    v6[3] = 2 * v7 - 64;
  }
  char v8 = (char *)sub_1DCB11B34();
  sub_1DC9F8FCC(v8, v9, v10);
  return v6;
}

void sub_1DCB0FB00(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v7)
  {
    sub_1DCB11B94();
    if (!(v9 ^ v10 | v8))
    {
      sub_1DC87E988(&qword_1EAA9C6C0);
      size_t v11 = (const void *)sub_1DC89D788();
      size_t v12 = j__malloc_size(v11);
      sub_1DCB11B84(v12 - 32);
    }
    if (v6 != v4)
    {
      sub_1DCB0DDA4(v5 + 8 * v4, v7);
      return;
    }
    goto LABEL_9;
  }
}

void *sub_1DCB0FBA8(void *result, uint64_t a2, unint64_t a3, _DWORD *a4)
{
  if (!a2)
  {
LABEL_11:
    a3 = 0;
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    *uint64_t result = a4;
    result[1] = a3;
    return (void *)a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (*a4)
    {
      uint64_t v4 = 0;
      unint64_t v5 = 1;
      while (1)
      {
        unint64_t v6 = (void *)(a2 + v4 * 4);
        uint64_t v7 = *(void *)&a4[v4 + 4];
        *unint64_t v6 = *(void *)&a4[v4 + 2];
        v6[1] = v7;
        if (a3 == v5) {
          goto LABEL_12;
        }
        unint64_t v8 = *a4;
        if (v5 == v8)
        {
          a3 = v5;
          goto LABEL_12;
        }
        v4 += 4;
        if (v5++ >= v8)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

unint64_t *sub_1DCB0FC24(unint64_t *result, unint64_t *a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    unint64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (unint64_t *)a3;
  }
  if ((a3 & 0x8000000000000000) != 0) {
    goto LABEL_20;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_21;
  }
  if (a5 > a4)
  {
    unint64_t v5 = a4 + 1;
    *a2 = a4;
    unint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    uint64_t v7 = a2 + 1;
    while (v6)
    {
      if (a5 == v5)
      {
        unint64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v5 >= a5) {
        goto LABEL_19;
      }
      unint64_t v8 = v5 + 1;
      *v7++ = v5++;
      if (!--v6)
      {
        unint64_t v5 = v8;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DCB0FCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a4 + 64;
  sub_1DCB11AC4();
  if (!v8)
  {
    int64_t v13 = 0;
LABEL_32:
    *uint64_t v7 = a4;
    v7[1] = v6;
    void v7[2] = ~v10;
    void v7[3] = v13;
    v7[4] = v4;
    return;
  }
  uint64_t v11 = v9;
  if (!v9)
  {
    int64_t v13 = 0;
    goto LABEL_32;
  }
  if (v9 < 0) {
    goto LABEL_34;
  }
  size_t v12 = v8;
  uint64_t v27 = v10;
  uint64_t v28 = v7;
  int64_t v13 = 0;
  uint64_t v14 = 0;
  int64_t v29 = (unint64_t)(63 - v10) >> 6;
  if (!v4) {
    goto LABEL_6;
  }
LABEL_5:
  sub_1DCB11BA4();
  int64_t v16 = v15 | (v13 << 6);
  while (1)
  {
    ++v14;
    char v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    sub_1DC87E9DC(*(void *)(a4 + 56) + 32 * v16, (uint64_t)&v31);
    *(void *)&long long v30 = v22;
    *((void *)&v30 + 1) = v21;
    long long v24 = v31;
    long long v23 = v32;
    long long v34 = v31;
    long long v35 = v32;
    long long v33 = v30;
    *size_t v12 = v30;
    v12[1] = v24;
    void v12[2] = v23;
    if (v14 == v11)
    {
      swift_bridgeObjectRetain();
LABEL_31:
      uint64_t v10 = v27;
      uint64_t v7 = v28;
      goto LABEL_32;
    }
    v12 += 3;
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v17 >= v29) {
      goto LABEL_30;
    }
    if (*(void *)(v6 + 8 * v17)) {
      goto LABEL_16;
    }
    int64_t v18 = v13 + 2;
    ++v13;
    if (v17 + 1 >= v29) {
      goto LABEL_30;
    }
    if (*(void *)(v6 + 8 * v18)) {
      goto LABEL_16;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 2 >= v29) {
      goto LABEL_30;
    }
    if (*(void *)(v6 + 8 * (v17 + 2))) {
      goto LABEL_16;
    }
    int64_t v13 = v17 + 2;
    if (v17 + 3 >= v29) {
      goto LABEL_30;
    }
    if (*(void *)(v6 + 8 * (v17 + 3))) {
      goto LABEL_16;
    }
    int64_t v25 = v17 + 4;
    int64_t v13 = v17 + 3;
    if (v17 + 4 >= v29)
    {
LABEL_30:
      uint64_t v4 = 0;
      goto LABEL_31;
    }
    if (!*(void *)(v6 + 8 * v25))
    {
      do
      {
        int64_t v26 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          goto LABEL_35;
        }
        if (v26 >= v29)
        {
          int64_t v13 = v29 - 1;
          goto LABEL_30;
        }
        ++v25;
      }
      while (!*(void *)(v6 + 8 * v26));
    }
LABEL_16:
    sub_1DCB11B44();
    int64_t v13 = v19;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1DCB0FEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a4 + 64;
  sub_1DCB11AC4();
  if (!v8)
  {
    int64_t v13 = 0;
LABEL_34:
    *uint64_t v7 = a4;
    v7[1] = v6;
    void v7[2] = ~v10;
    void v7[3] = v13;
    v7[4] = v4;
    return;
  }
  uint64_t v11 = v9;
  if (!v9)
  {
    int64_t v13 = 0;
    goto LABEL_34;
  }
  if (v9 < 0) {
    goto LABEL_36;
  }
  size_t v12 = v8;
  uint64_t v28 = v10;
  int64_t v29 = v7;
  int64_t v13 = 0;
  uint64_t v14 = 0;
  int64_t v15 = (unint64_t)(63 - v10) >> 6;
  if (!v4) {
    goto LABEL_6;
  }
LABEL_5:
  sub_1DCB11BA4();
  int64_t v17 = v16 | (v13 << 6);
  while (1)
  {
    ++v14;
    char v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v17);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    long long v23 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v17);
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    *size_t v12 = v22;
    v12[1] = v21;
    void v12[2] = v25;
    _OWORD v12[3] = v24;
    if (v14 == v11)
    {
      swift_bridgeObjectRetain();
      sub_1DC8AF450(v25, v24);
LABEL_33:
      uint64_t v10 = v28;
      uint64_t v7 = v29;
      goto LABEL_34;
    }
    v12 += 4;
    swift_bridgeObjectRetain();
    sub_1DC8AF450(v25, v24);
    if (v4) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v18 >= v15) {
      goto LABEL_29;
    }
    if (!*(void *)(v6 + 8 * v18))
    {
      v13 += 2;
      if (v18 + 1 >= v15)
      {
        uint64_t v4 = 0;
        int64_t v13 = v18;
        goto LABEL_33;
      }
      if (!*(void *)(v6 + 8 * v13))
      {
        if (v18 + 2 >= v15) {
          goto LABEL_29;
        }
        if (!*(void *)(v6 + 8 * (v18 + 2)))
        {
          int64_t v13 = v18 + 3;
          if (v18 + 3 >= v15)
          {
            uint64_t v4 = 0;
            int64_t v13 = v18 + 2;
            goto LABEL_33;
          }
          if (*(void *)(v6 + 8 * v13)) {
            goto LABEL_14;
          }
          int64_t v26 = v18 + 4;
          if (v18 + 4 >= v15)
          {
LABEL_29:
            uint64_t v4 = 0;
            goto LABEL_33;
          }
          if (!*(void *)(v6 + 8 * v26))
          {
            do
            {
              int64_t v27 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                goto LABEL_37;
              }
              if (v27 >= v15)
              {
                uint64_t v4 = 0;
                int64_t v13 = v15 - 1;
                goto LABEL_33;
              }
              ++v26;
            }
            while (!*(void *)(v6 + 8 * v27));
          }
        }
      }
    }
LABEL_14:
    sub_1DCB11B44();
    int64_t v13 = v19;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t sub_1DCB100D0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    long long v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    char v20 = (void *)(*(void *)(a4 + 56) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1DCB102D0(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_36:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_36;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_18;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    int64_t v13 = v8;
LABEL_18:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_19;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v13 = v15;
    goto LABEL_18;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    unint64_t v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1DCB10464(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    long long v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    char v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1DCB10664(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1DCB88978();
    type metadata accessor for SNModelFeatureConnection();
    sub_1DCB11178(&qword_1EAA9C640, (void (*)(uint64_t))type metadata accessor for SNModelFeatureConnection);
    uint64_t result = (void *)sub_1DCB88028();
    uint64_t v4 = v26;
    uint64_t v8 = v27;
    uint64_t v9 = v28;
    int64_t v10 = v29;
    unint64_t v11 = v30;
  }
  else
  {
    int64_t v10 = 0;
    uint64_t v12 = -1 << *(unsigned char *)(a4 + 32);
    uint64_t v8 = a4 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(a4 + 56);
  }
  if (!a2)
  {
    uint64_t v15 = 0;
LABEL_47:
    *uint64_t v7 = v4;
    v7[1] = v8;
    void v7[2] = v9;
    void v7[3] = v10;
    v7[4] = v11;
    return (void *)v15;
  }
  if (!a3)
  {
    uint64_t v15 = 0;
    goto LABEL_47;
  }
  if (a3 < 0) {
    goto LABEL_49;
  }
  uint64_t v15 = 0;
  int64_t v24 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1DCB889E8()) {
        goto LABEL_46;
      }
      type metadata accessor for SNModelFeatureConnection();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v18 = v25;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v25) {
        goto LABEL_46;
      }
      goto LABEL_28;
    }
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      goto LABEL_27;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v19 >= v24)
    {
      unint64_t v11 = 0;
      goto LABEL_46;
    }
    unint64_t v20 = *(void *)(v8 + 8 * v19);
    if (v20) {
      goto LABEL_26;
    }
    int64_t v21 = v10 + 2;
    if (v10 + 2 >= v24)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_46;
    }
    unint64_t v20 = *(void *)(v8 + 8 * v21);
    if (!v20)
    {
      if (v10 + 3 >= v24) {
        goto LABEL_43;
      }
      unint64_t v20 = *(void *)(v8 + 8 * (v10 + 3));
      if (v20)
      {
        int64_t v19 = v10 + 3;
        goto LABEL_26;
      }
      int64_t v21 = v10 + 4;
      if (v10 + 4 >= v24)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_46;
      }
      unint64_t v20 = *(void *)(v8 + 8 * v21);
      if (!v20)
      {
        int64_t v19 = v10 + 5;
        if (v10 + 5 >= v24)
        {
LABEL_43:
          unint64_t v11 = 0;
          int64_t v10 = v21;
          goto LABEL_46;
        }
        unint64_t v20 = *(void *)(v8 + 8 * v19);
        if (!v20)
        {
          int64_t v22 = v10 + 6;
          while (v22 < v24)
          {
            unint64_t v20 = *(void *)(v8 + 8 * v22++);
            if (v20)
            {
              int64_t v19 = v22 - 1;
              goto LABEL_26;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v24 - 1;
          goto LABEL_46;
        }
        goto LABEL_26;
      }
    }
    int64_t v19 = v21;
LABEL_26:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v19 << 6);
    int64_t v10 = v19;
LABEL_27:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    unint64_t v18 = result;
    if (!result) {
      goto LABEL_46;
    }
LABEL_28:
    ++v15;
    *a2++ = v18;
    if (v15 == a3)
    {
      uint64_t v15 = a3;
LABEL_46:
      uint64_t v9 = v23;
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

void *sub_1DCB1097C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  int64_t v10 = a2;
  uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v23 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v19 = (void *)(*(void *)(a4 + 56) + 24 * v15);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    *int64_t v10 = *v19;
    v10[1] = v20;
    long long v10[2] = v21;
    if (v12 == v9)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      goto LABEL_38;
    }
    v10 += 3;
    swift_retain();
    swift_retain();
    uint64_t result = (void *)swift_retain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v22;
      uint64_t result = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1DCB10BAC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    long long v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1DCB10DAC(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    uint64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (void *)a3;
  }
  if (a3 < 0) {
    goto LABEL_20;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_21;
  }
  if (a5 > a4)
  {
    uint64_t v5 = a4 + 1;
    *a2 = a4;
    uint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    uint64_t v7 = a2 + 1;
    while (v6)
    {
      if (a5 == v5)
      {
        uint64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v5 >= a5) {
        goto LABEL_19;
      }
      uint64_t v8 = v5 + 1;
      *v7++ = v5++;
      if (!--v6)
      {
        uint64_t v5 = v8;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCB10E48@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1DCB061EC(a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t sub_1DCB10E74(uint64_t *a1, uint64_t (*a2)(void))
{
  return sub_1DCB0B72C(*a1, a2);
}

uint64_t sub_1DCB10E7C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCB0B754(*a1);
  *a2 = result;
  return result;
}

void sub_1DCB10EA8(void **a1, uint64_t a2, unint64_t a3)
{
}

uint64_t sub_1DCB10EC4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, unsigned char *)@<X1>, uint64_t *a3@<X8>)
{
  long long v5 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v5;
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t result = sub_1DCB0C428((uint64_t)v10, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
    a3[3] = v9;
  }
  return result;
}

uint64_t sub_1DCB10F10@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1DCB07334(a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t sub_1DCB10F40@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCB10F10(*(void (**)(void))(v1 + 16), *(void *)(v1 + 24), (uint64_t *)(v1 + 32), a1);
}

uint64_t sub_1DCB10F4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCB10EC4(a1, *(void (**)(uint64_t *__return_ptr, unsigned char *))(v2 + 16), a2);
}

void sub_1DCB10F68(uint64_t a1)
{
  sub_1DC9F82A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DCB10F70()
{
  swift_bridgeObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

void sub_1DCB10FA0()
{
  sub_1DC9F8400(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DCB10FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAAA6F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCB11010(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCB11044(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCB1107C@<X0>(void *a1@<X8>)
{
  return sub_1DC9A6A40(*(id *)(v1 + 16), a1);
}

uint64_t sub_1DCB11084()
{
  if (*(void *)(v0 + 16) != 1) {
    swift_release();
  }
  sub_1DC8C1FB4();

  return swift_deallocObject();
}

void sub_1DCB110C0()
{
  sub_1DCB0B69C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DCB110C8(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCB110E0()
{
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DCB11110()
{
  sub_1DC8C1FB4();

  return swift_deallocObject();
}

uint64_t sub_1DCB11140()
{
  swift_release();
  sub_1DC8C1FB4();

  return swift_deallocObject();
}

uint64_t sub_1DCB11178(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCB111C0()
{
  swift_unknownObjectRelease();
  sub_1DC8C1FB4();

  return swift_deallocObject();
}

void sub_1DCB11208()
{
  sub_1DCB0B60C(*(void *)(v0 + 16), *(void *)(v0 + 24), MEMORY[0x1E4FBC8D0]);
}

void sub_1DCB1123C()
{
  sub_1DCB0B60C(*(void *)(v0 + 16), *(void *)(v0 + 24), MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1DCB1126C(uint64_t *a1)
{
  return sub_1DCB10E74(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1DCB1127C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCB10E48(*(void (**)(void))(v1 + 16), *(void *)(v1 + 24), (uint64_t *)(v1 + 32), a1);
}

unint64_t sub_1DCB1128C()
{
  unint64_t result = qword_1EAAAAAA8;
  if (!qword_1EAAAAAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAAAA8);
  }
  return result;
}

void sub_1DCB112E0(void **a1)
{
  sub_1DCB10EA8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_1DCB112EC(void *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v9 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v12 = a1[11];
  uint64_t v13 = a1[13];
  uint64_t v14 = a1[15];
  uint64_t v15 = a1[17];
  uint64_t v16 = a1[19];
  swift_release();
  sub_1DC884EC0(v4);
  sub_1DC884EC0(v5);
  a2(v6, v7);
  a2(v8, v9);
  sub_1DC884EC0(v11);
  sub_1DC884EC0(v12);
  sub_1DC884EC0(v13);
  sub_1DC884EC0(v14);
  sub_1DC884EC0(v15);
  sub_1DC884EC0(v16);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SharedBuiltInMicrophone.Configuration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCB114A4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedBuiltInMicrophone.Configuration.CodingKeys()
{
  return &type metadata for SharedBuiltInMicrophone.Configuration.CodingKeys;
}

unint64_t sub_1DCB114E0()
{
  unint64_t result = qword_1EAAAAC18;
  if (!qword_1EAAAAC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAAC18);
  }
  return result;
}

unint64_t sub_1DCB11530()
{
  unint64_t result = qword_1EAAAAC20;
  if (!qword_1EAAAAC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAAC20);
  }
  return result;
}

unint64_t sub_1DCB11580()
{
  unint64_t result = qword_1EAAAAC28;
  if (!qword_1EAAAAC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAAC28);
  }
  return result;
}

uint64_t sub_1DCB117A4(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return v2;
}

uint64_t sub_1DCB117CC()
{
  return v0;
}

uint64_t sub_1DCB117E0()
{
  return v0;
}

void sub_1DCB117F8()
{
  JUMPOUT(0x1E01A8D20);
}

uint64_t sub_1DCB1181C()
{
  return v0;
}

uint64_t sub_1DCB11834()
{
  return sub_1DCB873C8();
}

uint64_t sub_1DCB1187C()
{
  return sub_1DCB87AE8();
}

uint64_t sub_1DCB118B0(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v1;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1DCB118D0()
{
  return sub_1DCB873A8();
}

uint64_t sub_1DCB11960()
{
  return sub_1DC8A8F50(v1, v0);
}

uint64_t sub_1DCB11984()
{
  return sub_1DC964348();
}

void sub_1DCB119B0()
{
}

uint64_t sub_1DCB119D4()
{
  return v0;
}

void sub_1DCB11A0C(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_1DCB11A38(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_1DCB11A44(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_1DCB11AA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCB11B34()
{
  return v0;
}

void sub_1DCB11B84(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_1DCB11BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1DC898A9C();
    uint64_t v7 = v15;
    uint64_t v8 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v9 = v10;
      unint64_t v11 = *(void *)(v15 + 16);
      unint64_t v12 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1) {
        sub_1DC898A9C();
      }
      *(void *)(v15 + 16) = v11 + 1;
      uint64_t v13 = (void *)(v15 + 24 * v11);
      v13[4] = a2;
      v13[5] = a3;
      v13[6] = v9;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v7;
}

void sub_1DCB11CF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
}

void sub_1DCB11D08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
}

void sub_1DCB11D20(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  if ((a4 & 1) == 0) {
    goto LABEL_2;
  }
  sub_1DCB89088();
  swift_unknownObjectRetain_n();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = *(void *)(v10 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass()) {
    swift_unknownObjectRelease();
  }
LABEL_9:
  swift_unknownObjectRelease();
  sub_1DC89DD10();
}

void sub_1DCB11E14()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAAAD10);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  uint64_t v3 = sub_1DC87E988(&qword_1EAAAAC68);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D9B8();
  uint64_t v7 = sub_1DC87E988(&qword_1EAAAAD18);
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC8C1FC4();
  static AudioDataSourceUtils.systemAudioEventPublisher()();
  sub_1DC88CF34(&qword_1EAAAAC60, &qword_1EAAAAC68);
  sub_1DCB874A8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  sub_1DC88CF34(&qword_1EAAAAD20, &qword_1EAAAAD18);
  sub_1DCB87488();
  sub_1DCB87218();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1DCB19664;
  *(void *)(v11 + 24) = 0;
  sub_1DC87E988(&qword_1EAAAAD28);
  sub_1DC88CF34(&qword_1EAAAAD30, &qword_1EAAAAD10);
  sub_1DC88CF34(&qword_1EAAAAD38, &qword_1EAAAAD28);
  sub_1DCB874D8();
  swift_release();
  sub_1DCB19ED4();
  v12();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v7);
  sub_1DC89DA54();
}

void sub_1DCB120F0()
{
  sub_1DC89D9F8();
  uint64_t v2 = sub_1DC87E988(&qword_1EAAAAC78);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAAAFC8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  sub_1DC87E988(&qword_1EAAAAFD0);
  sub_1DC89D4E0();
  uint64_t v13 = v10;
  uint64_t v14 = v11;
  MEMORY[0x1F4188790](v10);
  sub_1DC8C1FC4();
  sub_1DC87E988(&qword_1EAA9E490);
  sub_1DC88CF34(&qword_1EAAAAC90, &qword_1EAA9E490);
  sub_1DCB87488();
  sub_1DCB87218();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1DCB196E8;
  *(void *)(v12 + 24) = 0;
  sub_1DC87E988(&qword_1EAAAAFD8);
  sub_1DC88CF34(&qword_1EAAAACA0, &qword_1EAAAAC78);
  sub_1DC88CF34((unint64_t *)&unk_1EAAAAFE0, &qword_1EAAAAFD8);
  sub_1DCB874D8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  sub_1DC87E988(&qword_1EAA9E4C0);
  sub_1DC88CF34(&qword_1EAAAAFF0, &qword_1EAA9E4C0);
  sub_1DC88CF34(&qword_1EAAAAFF8, &qword_1EAAAAFC8);
  sub_1DCB87448();
  sub_1DC901A64(v9, &qword_1EAAAAFC8);
  sub_1DC88CF34(&qword_1EAAAB000, &qword_1EAAAAFD0);
  sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v13);
  sub_1DC89DA54();
}

uint64_t sub_1DCB12428()
{
  uint64_t v0 = sub_1DC87E988(&qword_1EAAAAC78);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAAAAC80);
  MEMORY[0x1F4188790](v15);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAAAC88);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v16 = v6;
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC87E988(&qword_1EAA9E490);
  v14[1] = &unk_1DCBD1A98;
  sub_1DC88CF34(&qword_1EAAAAC90, &qword_1EAA9E490);
  sub_1DCB87488();
  sub_1DCB87218();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1DCB19778;
  *(void *)(v10 + 24) = 0;
  sub_1DC87E988(&qword_1EAAAAC98);
  sub_1DC88CF34(&qword_1EAAAACA0, &qword_1EAAAAC78);
  sub_1DC88CF34(&qword_1EAAAACA8, &qword_1EAAAAC98);
  sub_1DCB874D8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1DC87E988(&qword_1EAAAAC70);
  sub_1DC88CF34(&qword_1EAAAACB0, &qword_1EAAAAC70);
  sub_1DC88CF34(&qword_1EAAAACB8, &qword_1EAAAAC80);
  sub_1DCB87448();
  sub_1DC901A64((uint64_t)v5, &qword_1EAAAAC80);
  sub_1DC88CF34(&qword_1EAAAACC0, &qword_1EAAAAC88);
  uint64_t v11 = v16;
  uint64_t v12 = sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v11);
  return v12;
}

uint64_t sub_1DCB127F0(uint64_t a1, float a2)
{
  if (a1 < 0)
  {
    sub_1DC8AF148();
    uint64_t result = sub_1DCA07A10();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1DCB87CF8();
    uint64_t v5 = 0;
    *(void *)(result + 16) = a1;
    do
    {
      uint64_t v6 = result + 4 * v5++;
      *(float *)(v6 + 32) = a2;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1DCB1288C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  if (a5 < 0)
  {
    sub_1DC8AF148();
    uint64_t result = sub_1DCA07A10();
    __break(1u);
  }
  else
  {
    uint64_t v5 = a5;
    if (a5)
    {
      sub_1DC87E988(&qword_1EAAA9D00);
      uint64_t result = sub_1DCB87CF8();
      *(void *)(result + 16) = v5;
      uint64_t v11 = 32;
      do
      {
        uint64_t v12 = result + v11;
        *(void *)uint64_t v12 = a1;
        *(void *)(v12 + 8) = a2;
        *(void *)(v12 + 16) = a3;
        *(unsigned char *)(v12 + 24) = a4 & 1;
        v11 += 28;
        --v5;
      }
      while (v5);
    }
    else
    {
      return MEMORY[0x1E4FBC860];
    }
  }
  return result;
}

uint64_t sub_1DCB12950(uint64_t a1, __n128 a2, __n128 a3)
{
  if (a1 < 0)
  {
    sub_1DC8AF148();
    uint64_t result = sub_1DCA07A10();
    __break(1u);
  }
  else if (a1)
  {
    sub_1DC87E988(&qword_1EAAAAE98);
    uint64_t result = sub_1DCB87CF8();
    uint64_t v5 = 0;
    *(void *)(result + 16) = a1;
    do
    {
      uint64_t v6 = (__n128 *)(result + 32 * v5++);
      long long v6[2] = a2;
      v6[3] = a3;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1DCB129F8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_1DCB88C58();
    __break(1u);
  }
  else if (a2)
  {
    uint64_t result = sub_1DCB87CF8();
    uint64_t v5 = 0;
    *(void *)(result + 16) = a2;
    do
    {
      uint64_t v6 = result + 8 * v5++;
      *(void *)(v6 + 32) = a1;
    }
    while (a2 != v5);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1DCB12AAC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(result + 16);
  BOOL v4 = __OFSUB__(a2, v3);
  uint64_t v5 = a2 - v3;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = result;
    if (v5 < 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = sub_1DCB129F8(a3, v5);
      swift_bridgeObjectRetain();
      sub_1DCB191FC(v7);
    }
    return v6;
  }
  return result;
}

uint64_t sub_1DCB12B2C(uint64_t result, void (*a2)(uint64_t, uint64_t))
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2 >> 59)
  {
    __break(1u);
  }
  else
  {
    sub_1DCB16360(result + 32, result + 32 + 16 * v2, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCB12B84()
{
  sub_1DC87E988(&qword_1EAAAAE90);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DC89D988();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0DA0);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA0DB0, (uint64_t *)&unk_1EAAA0DA0);
  sub_1DCB87AE8();
  sub_1DC87E988(&qword_1EAA9DF60);
  sub_1DCB87178();
  uint64_t v1 = sub_1DC8CD9A8();
  return v2(v1);
}

void sub_1DCB12C94()
{
}

void sub_1DCB12CB0(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v6 = sub_1DC87E988(a1);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC89D970();
  sub_1DC87E988(a2);
  sub_1DC88CF34(a3, a2);
  sub_1DCB87AE8();
  sub_1DC87E988(&qword_1EAA9DF60);
  sub_1DCB87178();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
  sub_1DC89DD10();
}

uint64_t sub_1DCB12DBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCB12DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC901EB8(a1, (uint64_t)v8, (uint64_t *)&unk_1EAAA69A0);
  unsigned __int8 v4 = v9;
  long long v5 = v8[1];
  *(_OWORD *)a2 = v8[0];
  *(_OWORD *)(a2 + 16) = v5;
  long long v6 = v8[3];
  *(_OWORD *)(a2 + 32) = v8[2];
  *(_OWORD *)(a2 + 48) = v6;
  *(_WORD *)(a2 + 64) = v4;
  return sub_1DC9F6CC8(a1);
}

uint64_t sub_1DCB12E38(char a1)
{
  return a1 & 1;
}

uint64_t sub_1DCB12E44()
{
  return 0;
}

uint64_t sub_1DCB12E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 0;
  return sub_1DC9C59B0(a1);
}

void *sub_1DCB12E78(void *a1, void *a2)
{
  id v4 = a1;
  id v5 = a2;
  return a1;
}

uint64_t sub_1DCB12EB0(uint64_t a1, char a2, void (*a3)(uint64_t, void))
{
  return a1;
}

uint64_t sub_1DCB12EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DC87E9DC(a1, a2);
  *(unsigned char *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_1DCB12F1C(void *a1)
{
  id v1 = a1;
  sub_1DC87E988(&qword_1EAAAAE28);
  return sub_1DCB87328();
}

uint64_t sub_1DCB12F80(void *a1, uint64_t *a2)
{
  id v3 = a1;
  sub_1DC87E988(a2);
  return sub_1DCB87328();
}

uint64_t sub_1DCB12FD4(void *a1)
{
  id v1 = a1;
  sub_1DC87E988((uint64_t *)&unk_1EAAAAFA0);
  return sub_1DCB87328();
}

uint64_t sub_1DCB13034(void *a1)
{
  id v1 = a1;
  sub_1DC87E988(&qword_1EAAAACD8);
  return sub_1DCB87328();
}

uint64_t sub_1DCB13088(void *a1, uint64_t *a2)
{
  id v3 = a1;
  sub_1DC87E988(a2);
  return sub_1DCB87328();
}

uint64_t sub_1DCB130DC(void *a1)
{
  id v1 = a1;
  sub_1DC87E988(&qword_1EAAAAEB0);
  return sub_1DCB87328();
}

void sub_1DCB13130()
{
  sub_1DC89D9F8();
  sub_1DCB19EA4(v1);
  sub_1DC87E988(&qword_1EAAAADE0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAAADE8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1DCB19DA0();
  v0(v4);
  sub_1DC87E988(&qword_1EAAAADF0);
  sub_1DC88CF34(&qword_1EAAAADF8, &qword_1EAAAADE8);
  sub_1DCB19DC8();
  sub_1DC87E988(&qword_1EAAAAE00);
  sub_1DC88CF34(&qword_1EAAAAE08, &qword_1EAAAADE0);
  sub_1DC88CF34(&qword_1EAAAAE10, &qword_1EAAAAE00);
  sub_1DCB19E14();
  uint64_t v5 = sub_1DCB19E60();
  v6(v5);
  uint64_t v7 = sub_1DC99BA44();
  v8(v7);
  sub_1DC89DA54();
}

void sub_1DCB132DC()
{
  sub_1DC89D9F8();
  sub_1DCB19EA4(v1);
  sub_1DC87E988(&qword_1EAAAAE18);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAAAE20);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1DCB19DA0();
  v0(v4);
  sub_1DC87E988(&qword_1EAAAAE28);
  sub_1DC88CF34(&qword_1EAAAAE30, &qword_1EAAAAE20);
  sub_1DCB19DC8();
  sub_1DC87E988(&qword_1EAAAAE38);
  sub_1DC88CF34(&qword_1EAAAAE40, &qword_1EAAAAE18);
  sub_1DC88CF34((unint64_t *)&unk_1EAAAAE48, &qword_1EAAAAE38);
  sub_1DCB19E14();
  uint64_t v5 = sub_1DCB19E60();
  v6(v5);
  uint64_t v7 = sub_1DC99BA44();
  v8(v7);
  sub_1DC89DA54();
}

void sub_1DCB13488()
{
  sub_1DC89D9F8();
  uint64_t v15 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_1DC87E988(&qword_1EAAAAE58);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAAAE60);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC8C1FC4();
  v16[0] = v8;
  v16[1] = v6;
  _OWORD v16[2] = v4;
  v16[3] = v2;
  v15(v16);
  sub_1DC87E988(&qword_1EAAAAE68);
  sub_1DC88CF34(&qword_1EAAAAE70, &qword_1EAAAAE60);
  sub_1DCB19DC8();
  sub_1DC87E988(&qword_1EAAAAE78);
  sub_1DC88CF34(&qword_1EAAAAE80, &qword_1EAAAAE58);
  sub_1DC88CF34(&qword_1EAAAAE88, &qword_1EAAAAE78);
  sub_1DCB87438();
  uint64_t v11 = sub_1DC8CD9A8();
  v12(v11);
  uint64_t v13 = sub_1DCB1A034();
  v14(v13);
  sub_1DC89DA54();
}

void sub_1DCB1368C()
{
  sub_1DC89D9F8();
  uint64_t v1 = v0;
  sub_1DC87E988(&qword_1EAAAAED8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAAAEE0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC8C1FC4();
  v1();
  sub_1DC87E988(&qword_1EAAAAEE8);
  sub_1DC88CF34(&qword_1EAAAAEF0, &qword_1EAAAAEE0);
  sub_1DCB19DC8();
  sub_1DC87E988(&qword_1EAAAAEF8);
  sub_1DC88CF34(&qword_1EAAAAF00, &qword_1EAAAAED8);
  sub_1DC88CF34(&qword_1EAAAAF08, &qword_1EAAAAEF8);
  sub_1DCB19E14();
  sub_1DC8CD9A8();
  sub_1DC89D710();
  v4();
  sub_1DCB1A034();
  sub_1DCB19ED4();
  v5();
  sub_1DC89DA54();
}

void sub_1DCB13858()
{
  sub_1DC89D9F8();
  sub_1DCB19EA4(v1);
  sub_1DC87E988(&qword_1EAAAAD90);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAAAD98);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1DCB19DA0();
  v0(v4);
  sub_1DC87E988(&qword_1EAAAADA0);
  sub_1DC88CF34(&qword_1EAAAADA8, &qword_1EAAAAD98);
  sub_1DCB19DC8();
  sub_1DC87E988(&qword_1EAAAADB0);
  sub_1DC88CF34(&qword_1EAAAADB8, &qword_1EAAAAD90);
  sub_1DC88CF34((unint64_t *)&unk_1EAAAADC0, &qword_1EAAAADB0);
  sub_1DCB19E14();
  uint64_t v5 = sub_1DCB19E60();
  v6(v5);
  uint64_t v7 = sub_1DC99BA44();
  v8(v7);
  sub_1DC89DA54();
}

uint64_t sub_1DCB13A04@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  v13[1] = a2;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAAAD40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DC87E988(&qword_1EAAAAD48);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v9);
  sub_1DC87E988(&qword_1EAAAAD50);
  sub_1DC88CF34(&qword_1EAAAAD58, &qword_1EAAAAD48);
  sub_1DCB873D8();
  sub_1DC87E988(&qword_1EAAAAD60);
  sub_1DC88CF34(&qword_1EAAAAD68, &qword_1EAAAAD40);
  sub_1DC88CF34((unint64_t *)&unk_1EAAAAD70, &qword_1EAAAAD60);
  sub_1DCB87438();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1DCB13C88@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  v13[1] = a2;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAAB008);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DC87E988(&qword_1EAAAB010);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v9);
  sub_1DC87E988(&qword_1EAAAB018);
  sub_1DC88CF34(&qword_1EAAAB020, &qword_1EAAAB010);
  sub_1DCB873D8();
  sub_1DC87E988(&qword_1EAAAB028);
  sub_1DC88CF34(&qword_1EAAAB030, &qword_1EAAAB008);
  sub_1DC88CF34(&qword_1EAAAB038, &qword_1EAAAB028);
  sub_1DCB87438();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_1DCB13F0C()
{
  void (*v0)(uint64_t *__return_ptr, uint64_t *);
  void (*v1)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  sub_1DC89D9F8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_1DC87E988((uint64_t *)&unk_1EAAAAF90);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC89D988();
  uint64_t v8 = v3;
  v1(&v7, &v8);
  sub_1DC87E988(&qword_1EAA9EBB0);
  sub_1DC87E988((uint64_t *)&unk_1EAAAAFA0);
  sub_1DC88CF34(&qword_1EAA9EBB8, &qword_1EAA9EBB0);
  sub_1DCB873D8();
  sub_1DC87E988(&qword_1EAAAAFB0);
  sub_1DC88CF34(&qword_1EAAAAFB8, (uint64_t *)&unk_1EAAAAF90);
  sub_1DC88CF34(&qword_1EAAAAFC0, &qword_1EAAAAFB0);
  sub_1DCB87438();
  uint64_t v5 = sub_1DC8CD9A8();
  v6(v5);
  swift_release();
  sub_1DC89DA54();
}

uint64_t sub_1DCB140DC@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  v13[1] = a2;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAAACC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DC87E988(&qword_1EAAAACD0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v9);
  sub_1DC87E988(&qword_1EAAAACD8);
  sub_1DC88CF34(&qword_1EAAAACE0, &qword_1EAAAACD0);
  sub_1DCB873D8();
  sub_1DC87E988(&qword_1EAAAACE8);
  sub_1DC88CF34(&qword_1EAAAACF0, &qword_1EAAAACC8);
  sub_1DC88CF34(&qword_1EAAAACF8, &qword_1EAAAACE8);
  sub_1DCB87438();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_1DCB14360()
{
  sub_1DC89D9F8();
  sub_1DCB19EA4(v1);
  sub_1DC87E988(&qword_1EAAAAF38);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAAAF40);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1DCB19DA0();
  v0(v4);
  sub_1DC87E988(&qword_1EAAAAF48);
  sub_1DC88CF34(&qword_1EAAAAF50, &qword_1EAAAAF40);
  sub_1DCB19DC8();
  sub_1DC87E988(&qword_1EAAAAF58);
  sub_1DC88CF34(&qword_1EAAAAF60, &qword_1EAAAAF38);
  sub_1DC88CF34(&qword_1EAAAAF68, &qword_1EAAAAF58);
  sub_1DCB19E14();
  uint64_t v5 = sub_1DCB19E60();
  v6(v5);
  uint64_t v7 = sub_1DC99BA44();
  v8(v7);
  sub_1DC89DA54();
}

void sub_1DCB1450C()
{
  sub_1DC89D9F8();
  sub_1DCB19EA4(v1);
  sub_1DC87E988(&qword_1EAAAAEA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAAAEA8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = sub_1DCB19DA0();
  v0(v4);
  sub_1DC87E988(&qword_1EAAAAEB0);
  sub_1DC88CF34(&qword_1EAAAAEB8, &qword_1EAAAAEA8);
  sub_1DCB19DC8();
  sub_1DC87E988(&qword_1EAAAAEC0);
  sub_1DC88CF34(&qword_1EAAAAEC8, &qword_1EAAAAEA0);
  sub_1DC88CF34(&qword_1EAAAAED0, &qword_1EAAAAEC0);
  sub_1DCB19E14();
  uint64_t v5 = sub_1DCB19E60();
  v6(v5);
  uint64_t v7 = sub_1DC99BA44();
  v8(v7);
  sub_1DC89DA54();
}

uint64_t sub_1DCB146B8(uint64_t *a1, long long *a2)
{
  uint64_t v33 = sub_1DC87E988(&qword_1EAAAAC70);
  sub_1DC89D4E0();
  uint64_t v35 = v3;
  MEMORY[0x1F4188790](v4);
  sub_1DC88D550();
  uint64_t v34 = v5;
  uint64_t v6 = sub_1DC87E988(&qword_1EAA9E490);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DC88D550();
  uint64_t v40 = v7;
  uint64_t v39 = sub_1DCB884D8();
  sub_1DC89D4E0();
  uint64_t v37 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  uint64_t v38 = v10;
  sub_1DCB884C8();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  uint64_t v12 = sub_1DCB875B8();
  MEMORY[0x1F4188790](v12 - 8);
  sub_1DC88D550();
  long long v43 = a2[1];
  long long v45 = *a2;
  uint64_t v13 = *((void *)a2 + 5);
  uint64_t v41 = *((void *)a2 + 4);
  int v14 = *((unsigned __int8 *)a2 + 48);
  char v15 = *((unsigned char *)a2 + 49);
  char v16 = *((unsigned char *)a2 + 50);
  uint64_t v17 = (void *)*((unsigned __int8 *)a2 + 51);
  char v18 = *((unsigned char *)a2 + 52);
  char v19 = *((unsigned char *)a2 + 53);
  uint64_t v20 = *((void *)a2 + 7);
  LOBYTE(a2) = *((unsigned char *)a2 + 64);
  v48[0] = v45;
  v48[1] = v43;
  uint64_t v49 = v41;
  uint64_t v50 = v13;
  char v51 = v14;
  char v52 = v15;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E9F0]), sel_initAuxiliarySession);
  char v53 = v16;
  char v54 = (char)v17;
  char v55 = v18;
  char v56 = v19;
  uint64_t v57 = v20;
  char v58 = (char)a2;
  sub_1DCB16E18(v21, (uint64_t)v48);
  if (v46) {
    goto LABEL_2;
  }
  int v47 = v14;
  if (v13)
  {
    unint64_t v22 = *(void *)(v13 + 16);
  }
  else
  {
    id v23 = objc_msgSend(v21, sel_inputNumberOfChannels);
    if ((unint64_t)v23 <= 1) {
      unint64_t v22 = 1;
    }
    else {
      unint64_t v22 = (unint64_t)v23;
    }
    if ((v22 & 0x8000000000000000) != 0) {
      goto LABEL_17;
    }
  }
  if (!HIDWORD(v22))
  {
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F15350]), sel_initWithLayoutTag_, v22 | 0x930000);
    if (v24)
    {
      uint64_t v25 = v24;
      sub_1DCAD2D74();
      id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153A0]), sel_initWithCommonFormat_sampleRate_interleaved_channelLayout_, 1, 1, v25, v26);
      if (v47) {
        int v28 = 4096;
      }
      else {
        int v28 = 0;
      }
      int v44 = v28;
      uint64_t v42 = swift_allocObject();
      *(unsigned char *)(v42 + 16) = v47;
      *(void *)(v42 + 24) = v13;
      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9D100);
      swift_bridgeObjectRetain();
      sub_1DCB875A8();
      *(void *)&v48[0] = MEMORY[0x1E4FBC860];
      sub_1DCB19918((unint64_t *)&qword_1EAA9D0F0, MEMORY[0x1E4FBCC10]);
      sub_1DC87E988((uint64_t *)&unk_1EAA9D0D0);
      uint64_t v17 = v21;
      sub_1DC88CF34((unint64_t *)&qword_1EAA9D0E0, (uint64_t *)&unk_1EAA9D0D0);
      sub_1DCB88928();
      (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v38, *MEMORY[0x1E4FBCC58], v39);
      int64_t v29 = (void *)sub_1DCB88508();
      sub_1DCB11E14();
      sub_1DCA0E264(v27, v17, v44, (uint64_t)sub_1DCB17EBC, v42, v29);
      uint64_t v30 = sub_1DCB12428();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v33);
      sub_1DC901A64(v40, &qword_1EAA9E490);
      swift_release();

      *a1 = v30;
      return (uint64_t)v17;
    }
    sub_1DC884E74();
    swift_allocError();
    *long long v32 = 0;
    swift_willThrow();
LABEL_2:

    return (uint64_t)v17;
  }
LABEL_17:
  sub_1DC8AF148();
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

uint64_t static AudioDataSourceUtils.hasBuiltInMicrophone()()
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  uint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[8];
  unsigned char v17[16];
  uint64_t v18;
  void v19[2];
  char v20[48];
  uint64_t v21;
  unsigned char v22[16];
  unsigned char v23[8];

  uint64_t v1 = MGGetProductType();
  sub_1DC983D28(v1, v16);
  sub_1DC901EB8((uint64_t)v16, (uint64_t)v20, (uint64_t *)&unk_1EAA9E950);
  if (v21)
  {
    char v2 = v20[0];
    sub_1DC8CBC38(v16);
    sub_1DC9836F8(v2, (uint64_t)v17);
    uint64_t v3 = (void (*)(uint64_t *__return_ptr, uint64_t))v19[1];
    sub_1DC901EB8((uint64_t)&v18, (uint64_t)v22, (uint64_t *)&unk_1EAAA4140);
    swift_retain();
    sub_1DC8CBCC4((uint64_t)v22);
    sub_1DC901EB8((uint64_t)v19, (uint64_t)v23, &qword_1EAA9E980);
    sub_1DC8CBD50((uint64_t)v23);
    uint64_t v4 = swift_release();
    v3(&v13, v4);
    swift_release();
    uint64_t v5 = v14;
    uint64_t v6 = v15;
  }
  else
  {
    if (qword_1EAA9D260 != -1) {
      swift_once();
    }
    uint64_t v5 = algn_1EAAFFAA8[0];
    uint64_t v6 = qword_1EAAFFAC0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E9F0]), sel_initAuxiliarySession);
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB1A034();
  uint64_t v9 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  sub_1DCB165E4(v7, (uint64_t)v8, (uint64_t)v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    sub_1DCB14ED0(v7);
    uint64_t v11 = v10;

    uint64_t v5 = v11 != 0;
    if (v11) {
      swift_bridgeObjectRelease();
    }
  }
  return v5 & 1;
}

unint64_t sub_1DCB14ED0(void *a1)
{
  unint64_t result = sub_1DCB192D8(a1);
  if (!result) {
    return result;
  }
  unint64_t v2 = result;
  if (result >> 62)
  {
    unint64_t result = sub_1DCB88CC8();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_21:
    uint64_t v15 = 0;
LABEL_22:
    swift_bridgeObjectRelease();
    return v15;
  }
  uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_21;
  }
LABEL_4:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v15 = 0;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E01A7AE0](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
      uint64_t v6 = v5;
      id v7 = objc_msgSend(v5, sel_portType, v15);
      uint64_t v8 = sub_1DCB87938();
      uint64_t v10 = v9;
      if (v8 == sub_1DCB87938() && v10 == v11) {
        break;
      }
      char v13 = sub_1DCB89018();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_16;
      }

LABEL_17:
      if (v3 == ++v4) {
        goto LABEL_22;
      }
    }

    swift_bridgeObjectRelease_n();
LABEL_16:
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v6, sel_UID);
    uint64_t v15 = sub_1DCB87938();

    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1DCB15088(OpaqueAudioQueue *a1, void *a2, char a3, uint64_t a4)
{
  if (a3) {
    sub_1DCB15100(a1);
  }
  if (a4 && *(void *)(a4 + 16))
  {
    uint64_t v7 = *(void *)(a4 + 32);
    sub_1DCB153A8(a4, v7, a1, a2);
  }
}

void sub_1DCB15100(OpaqueAudioQueue *a1)
{
  inData[2] = *MEMORY[0x1E4F143B8];
  LODWORD(inData[0]) = 1;
  OSStatus v1 = AudioQueueSetProperty(a1, 0x6C73746Eu, inData, 4u);
  sub_1DCB2F960(v1);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DCB86FE8();
  sub_1DC89F57C(v2, (uint64_t)qword_1EAAFF810);
  uint64_t v3 = sub_1DCB86FC8();
  os_log_type_t v4 = sub_1DCB88448();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_1DC873000, v3, v4, "Enable listen mode success", v5, 2u);
    sub_1DC8E7728();
  }
}

void sub_1DCB153A8(uint64_t a1, uint64_t a2, OpaqueAudioQueue *a3, void *a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  unint64_t v7 = sub_1DCB14ED0(a4);
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    MEMORY[0x1F4188790](v7);
    uint64_t v24 = 0;
    long long outData = 0u;
    long long v23 = 0u;
    UInt32 ioDataSize = 40;
    OSStatus Property = AudioQueueGetProperty(a3, 0x61716674u, &outData, &ioDataSize);
    sub_1DCB2F960(Property);
    sub_1DCB156B4(a1, a2, HIDWORD(v23));
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    char v19 = (unint64_t *)sub_1DCB11BE0(v18, v9, v10);
    swift_bridgeObjectRetain();
    sub_1DCB15F00(v19, (void (*)(uint64_t, uint64_t))sub_1DCB1987C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC89DD10();
  }
  else
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1DCB86FE8();
    sub_1DC89F57C(v12, (uint64_t)qword_1EAAFF810);
    uint64_t v20 = sub_1DCB86FC8();
    os_log_type_t v13 = sub_1DCB88468();
    if (os_log_type_enabled(v20, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_1DC873000, v20, v13, "Couldn't obtain the built-in mic UID. Skipping setting of the AQ channel assignments", v14, 2u);
      sub_1DC8E7728();
    }
    sub_1DC89DD10();
  }
}

void sub_1DCB156B4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = sub_1DCB12AAC(a1, a3, a2);
  if ((a3 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (*(void *)(v4 + 16) >= a3)
  {
    sub_1DCB11D20(v4, v4 + 32, 0, (2 * a3) | 1, sub_1DCB0FB00);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(v5 + 16);
    if (!v7)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1DC897E1C();
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      unint64_t v11 = *(void *)(v12 + 16);
      if (v11 >= *(void *)(v12 + 24) >> 1) {
        sub_1DC897E1C();
      }
      ++v8;
      *(void *)(v12 + 16) = v11 + 1;
      *(void *)(v12 + 8 * v11 + 32) = v10;
      if (v7 == v8) {
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1DCB157F8()
{
  return sub_1DCB891B8();
}

BOOL sub_1DCB15858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a4 && a2 == a5) {
    return a3 == a6;
  }
  char v9 = sub_1DCB89018();
  BOOL result = 0;
  if (v9) {
    return a3 == a6;
  }
  return result;
}

uint64_t sub_1DCB158AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4955656369766564 && a2 == 0xE900000000000044;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E6C656E6E616863 && a2 == 0xED00007265626D75)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCB159CC(char a1)
{
  if (a1) {
    return 0x4E6C656E6E616863;
  }
  else {
    return 0x4955656369766564;
  }
}

uint64_t sub_1DCB15A14(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAAB078);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB19B24();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  if (!v1) {
    sub_1DCB88F08();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1DCB15B50()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB15BC8(void *a1)
{
  sub_1DC87E988(&qword_1EAAAB068);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v4 = a1[4];
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB19B24();
  sub_1DCB89298();
  if (v1)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    uint64_t v4 = sub_1DCB88DA8();
    swift_bridgeObjectRetain();
    sub_1DCB88DE8();
    uint64_t v6 = sub_1DC981F98();
    v7(v6);
    sub_1DC8818D0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1DCB15D64()
{
  return sub_1DCB159CC(*v0);
}

uint64_t sub_1DCB15D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB158AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB15D94(uint64_t a1)
{
  unint64_t v2 = sub_1DCB19B24();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB15DD0(uint64_t a1)
{
  unint64_t v2 = sub_1DCB19B24();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB15E0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCB15BC8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1DCB15E3C(void *a1)
{
  return sub_1DCB15A14(a1);
}

uint64_t sub_1DCB15E5C()
{
  return sub_1DCB15B50();
}

uint64_t sub_1DCB15E68()
{
  return sub_1DCB157F8();
}

uint64_t sub_1DCB15E74()
{
  return sub_1DCB891F8();
}

BOOL sub_1DCB15EE4(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCB15858(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_1DCB15F00(unint64_t *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v2 = a2;
  unint64_t v3 = a1[2];
  if (!v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1E4FBC860];
LABEL_13:
    swift_bridgeObjectRetain();
    sub_1DCB16234(v5, v2);
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1DC898AEC();
  uint64_t v5 = v20;
  unint64_t v6 = v4[6];
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DCB87908();
  if ((v6 & 0x8000000000000000) == 0 && !HIDWORD(v6))
  {
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    unint64_t v9 = *(void *)(v20 + 16);
    uint64_t v10 = (unint64_t *)(v9 + 1);
    if (v9 >= *(void *)(v20 + 24) >> 1) {
      goto LABEL_23;
    }
    while (1)
    {
      *(void *)(v5 + 16) = v10;
      uint64_t v11 = v5 + 24 * v9;
      *(void *)(v11 + 32) = v8;
      *(_DWORD *)(v11 + 40) = v6;
      *(void *)(v11 + 48) = v8;
      if (v3 == 1) {
        break;
      }
      unint64_t v12 = v4[9];
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1DCB87908();
      if ((v12 & 0x8000000000000000) != 0 || HIDWORD(v12)) {
        goto LABEL_24;
      }
      uint64_t v8 = v13;
      swift_bridgeObjectRelease();
      unint64_t v9 = *(void *)(v5 + 16);
      if (v9 >= *(void *)(v5 + 24) >> 1)
      {
        sub_1DC898AEC();
        uint64_t v5 = v20;
      }
      *(void *)(v5 + 16) = v9 + 1;
      uint64_t v14 = v5 + 24 * v9;
      *(void *)(v14 + 32) = v8;
      *(_DWORD *)(v14 + 40) = v12;
      *(void *)(v14 + 48) = v8;
      if (v3 == 2) {
        break;
      }
      uint64_t v10 = v4 + 12;
      unint64_t v6 = 2;
      while (v6 < v3)
      {
        unint64_t v16 = *v10;
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1DCB87908();
        if ((v16 & 0x8000000000000000) != 0 || HIDWORD(v16)) {
          goto LABEL_24;
        }
        uint64_t v4 = (unint64_t *)v17;
        swift_bridgeObjectRelease();
        uint64_t v20 = v5;
        unint64_t v9 = *(void *)(v5 + 16);
        uint64_t v8 = v9 + 1;
        if (v9 >= *(void *)(v5 + 24) >> 1) {
          sub_1DC898AEC();
        }
        *(void *)(v5 + 16) = v8;
        uint64_t v18 = v5 + 24 * v9;
        *(void *)(v18 + 32) = v4;
        ++v6;
        *(_DWORD *)(v18 + 40) = v16;
        *(void *)(v18 + 48) = v4;
        v10 += 3;
        if (v3 == v6) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_23:
      sub_1DC898AEC();
      uint64_t v5 = v20;
    }
LABEL_11:
    uint64_t v2 = a2;
    goto LABEL_13;
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

uint64_t sub_1DCB16234(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1DC898B3C();
    uint64_t v4 = v14;
    unint64_t v6 = *(void *)(v14 + 16);
    uint64_t v7 = 16 * v6;
    uint64_t v8 = (_DWORD *)(a1 + 40);
    do
    {
      uint64_t v9 = *((void *)v8 - 1);
      int v10 = *v8;
      unint64_t v11 = v6 + 1;
      if (v6 >= *(void *)(v14 + 24) >> 1) {
        sub_1DC898B3C();
      }
      *(void *)(v14 + 16) = v11;
      uint64_t v12 = v14 + v7;
      *(void *)(v12 + 32) = v9;
      *(_DWORD *)(v12 + 40) = v10;
      v7 += 16;
      v8 += 6;
      unint64_t v6 = v11;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRetain();
  sub_1DCB12B2C(v4, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DCB16360(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  if (!a1)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 >= 0x100000000)
  {
LABEL_9:
    sub_1DCB88C58();
    __break(1u);
    return;
  }
  a3(1634820961, a1);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DCB86FE8();
  sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1DCB86FC8();
  os_log_type_t v5 = sub_1DCB88448();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = MEMORY[0x1E01A6C50](v8, MEMORY[0x1E4FBB550]);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    sub_1DC9F8920(v9, v11, &v12);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 1024;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v4, v5, "Set audio queue channel map (one-indexed) %s with result %d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v7, -1, -1);
    MEMORY[0x1E01A99C0](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1DCB165E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v7[2] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  if (objc_msgSend(a1, sel_setCategory_mode_options_error_, a2, a3, a4, v7))
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    uint64_t v6 = (void *)sub_1DCB86898();

    swift_willThrow();
    type metadata accessor for SNError();
    sub_1DCB19E4C();
    sub_1DCB88A98();
    sub_1DCB19E38();
    sub_1DCB19EB8();
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DCB19FAC();
    sub_1DCB19E88();
    sub_1DCB19D70((uint64_t)v7[0], (uint64_t)"com.apple.SoundAnalysis");
    sub_1DCB19F94();
    swift_willThrow();
  }
}

void sub_1DCB16728()
{
  sub_1DCB19EFC();
  int v3 = objc_msgSend(v2, sel_prefersNoMicrophoneUsageIndicator);
  if (v3 != v1)
  {
    if (sub_1DCB19EE0(v3, sel_setPrefersNoMicrophoneUsageIndicator_error_, v4, v5, v6, v7, v8, v9, v13, 0))
    {
      id v10 = v14;
    }
    else
    {
      id v11 = v14;
      uint64_t v12 = (void *)sub_1DCB19FDC();

      swift_willThrow();
      type metadata accessor for SNError();
      sub_1DCB19E4C();
      sub_1DCB88A98();
      sub_1DCB19E38();
      sub_1DCB19EB8();
      sub_1DC87E988(&qword_1EAA9DF60);
      sub_1DCB19FAC();
      sub_1DCB19E88();
      sub_1DCB19D70((uint64_t)v14, (uint64_t)"com.apple.SoundAnalysis");
      sub_1DCB19F94();
      swift_willThrow();
    }
  }
}

void sub_1DCB1684C()
{
  sub_1DCB19EFC();
  int v3 = objc_msgSend(v2, sel_allowHapticsAndSystemSoundsDuringRecording);
  if (v3 != v1)
  {
    if (sub_1DCB19EE0(v3, sel_setAllowHapticsAndSystemSoundsDuringRecording_error_, v4, v5, v6, v7, v8, v9, v13, 0))
    {
      id v10 = v14;
    }
    else
    {
      id v11 = v14;
      uint64_t v12 = (void *)sub_1DCB19FDC();

      swift_willThrow();
      type metadata accessor for SNError();
      sub_1DCB19E4C();
      sub_1DCB88A98();
      sub_1DCB19E38();
      sub_1DCB19EB8();
      sub_1DC87E988(&qword_1EAA9DF60);
      sub_1DCB19FAC();
      sub_1DCB19E88();
      sub_1DCB19D70((uint64_t)v14, (uint64_t)"com.apple.SoundAnalysis");
      sub_1DCB19F94();
      swift_willThrow();
    }
  }
}

void sub_1DCB16970()
{
  sub_1DCB19EFC();
  int v3 = objc_msgSend(v2, sel_decoupledIO);
  if (v3 != v1)
  {
    if (sub_1DCB19EE0(v3, sel_preferDecoupledIO_error_, v4, v5, v6, v7, v8, v9, v13, 0))
    {
      id v10 = v14;
    }
    else
    {
      id v11 = v14;
      uint64_t v12 = (void *)sub_1DCB19FDC();

      swift_willThrow();
      type metadata accessor for SNError();
      sub_1DCB19E4C();
      sub_1DCB88A98();
      sub_1DCB19E38();
      sub_1DCB19EB8();
      sub_1DC87E988(&qword_1EAA9DF60);
      sub_1DCB19FAC();
      sub_1DCB19E88();
      sub_1DCB19D70((uint64_t)v14, (uint64_t)"com.apple.SoundAnalysis");
      sub_1DCB19F94();
      swift_willThrow();
    }
  }
}

void sub_1DCB16A94()
{
  sub_1DCB19EFC();
  int v3 = objc_msgSend(v2, sel_eligibleForBTSmartRoutingConsideration);
  if (v3 != v1)
  {
    if (sub_1DCB19EE0(v3, sel_setEligibleForBTSmartRoutingConsideration_error_, v4, v5, v6, v7, v8, v9, v13, 0))
    {
      id v10 = v14;
    }
    else
    {
      id v11 = v14;
      uint64_t v12 = (void *)sub_1DCB19FDC();

      swift_willThrow();
      type metadata accessor for SNError();
      sub_1DCB19E4C();
      sub_1DCB88A98();
      sub_1DCB19E38();
      sub_1DCB19EB8();
      sub_1DC87E988(&qword_1EAA9DF60);
      sub_1DCB19FAC();
      sub_1DCB19E88();
      sub_1DCB19D70((uint64_t)v14, (uint64_t)"com.apple.SoundAnalysis");
      sub_1DCB19F94();
      swift_willThrow();
    }
  }
}

void sub_1DCB16BB8(void *a1, uint64_t a2)
{
  _OWORD v5[2] = *(id *)MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (objc_msgSend(a1, sel_setAudioHardwareControlFlags_error_, a2, v5))
  {
    id v2 = v5[0];
  }
  else
  {
    id v3 = v5[0];
    int v4 = (void *)sub_1DCB86898();

    swift_willThrow();
    type metadata accessor for SNError();
    sub_1DCB19E4C();
    sub_1DCB88A98();
    sub_1DCB19E38();
    sub_1DCB19EB8();
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DCB19FAC();
    sub_1DCB19E88();
    sub_1DCB19D70((uint64_t)v5[0], (uint64_t)"com.apple.SoundAnalysis");
    sub_1DCB19F94();
    swift_willThrow();
  }
}

void sub_1DCB16CF4()
{
  sub_1DCB19EFC();
  int v3 = objc_msgSend(v2, sel_participatesInVolumePolicy);
  if (v3 != v1)
  {
    if (sub_1DCB19EE0(v3, sel_setParticipatesInVolumePolicy_error_, v4, v5, v6, v7, v8, v9, v13, 0))
    {
      id v10 = v14;
    }
    else
    {
      id v11 = v14;
      uint64_t v12 = (void *)sub_1DCB19FDC();

      swift_willThrow();
      type metadata accessor for SNError();
      sub_1DCB19E4C();
      sub_1DCB88A98();
      sub_1DCB19E38();
      sub_1DCB19EB8();
      sub_1DC87E988(&qword_1EAA9DF60);
      sub_1DCB19FAC();
      sub_1DCB19E88();
      sub_1DCB19D70((uint64_t)v14, (uint64_t)"com.apple.SoundAnalysis");
      sub_1DCB19F94();
      swift_willThrow();
    }
  }
}

void sub_1DCB16E18(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v21 = *(void *)(a2 + 56);
  char v22 = *(unsigned char *)(a2 + 64);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1DCB86FE8();
  sub_1DC89F57C(v6, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  int v7 = sub_1DCB86FC8();
  os_log_type_t v8 = sub_1DCB88488();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v20 = a1;
    int v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v23 = v19;
    *(_DWORD *)int v9 = 136315138;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DCB87988();
    sub_1DC9F8920(v10, v11, &v23);
    uint64_t v3 = v2;
    sub_1DCB88778();
    uint64_t v12 = v5;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v13 = v9;
    _os_log_impl(&dword_1DC873000, v7, v8, "configuring session: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v19, -1, -1);
    a1 = v20;
    MEMORY[0x1E01A99C0](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v12 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  sub_1DCB165E4(a1, (uint64_t)v14, (uint64_t)v15, v12);

  if (!v3)
  {
    sub_1DCB16728();
    sub_1DCB1684C();
    sub_1DCB16970();
    sub_1DCB16A94();
    if ((v22 & 1) == 0) {
      sub_1DCB16BB8(a1, v21);
    }
    unint64_t v16 = sub_1DCB86FC8();
    os_log_type_t v17 = sub_1DCB88488();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_1DC873000, v16, v17, "ignoring config for prefers no interruptions", v18, 2u);
      MEMORY[0x1E01A99C0](v18, -1, -1);
    }

    sub_1DCB16CF4();
  }
}

void static AudioDataSourceUtils.configureAudioSession(session:configuration:fully:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  if (a3)
  {
    char v8 = *(unsigned char *)(a2 + 64);
    uint64_t v9 = *(void *)(a2 + 56);
    char v10 = *(unsigned char *)(a2 + 53);
    char v11 = *(unsigned char *)(a2 + 52);
    char v12 = *(unsigned char *)(a2 + 51);
    char v13 = *(unsigned char *)(a2 + 50);
    char v14 = *(unsigned char *)(a2 + 49);
    char v15 = *(unsigned char *)(a2 + 48);
    uint64_t v16 = *(void *)(a2 + 40);
    v19[0] = *(void *)a2;
    v19[1] = v4;
    void v19[2] = v6;
    v19[3] = v5;
    v19[4] = v7;
    v19[5] = v16;
    char v20 = v15;
    char v21 = v14;
    char v22 = v13;
    char v23 = v12;
    char v24 = v11;
    char v25 = v10;
    uint64_t v26 = v9;
    char v27 = v8;
    sub_1DCB16E18(a1, (uint64_t)v19);
  }
  else
  {
    swift_bridgeObjectRetain();
    os_log_type_t v17 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    sub_1DCB165E4(a1, (uint64_t)v17, (uint64_t)v18, v7);
  }
}

void sub_1DCB17394()
{
  sub_1DCB88568();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790]();
  sub_1DC89D988();
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(self, sel_defaultCenter);
  sub_1DCB88578();

  sub_1DCB19918(&qword_1EAAAAF80, MEMORY[0x1E4F27FC8]);
  sub_1DCB873D8();
  uint64_t v2 = sub_1DC8CD9A8();
  v3(v2);

  sub_1DC89DD10();
}

BOOL static AudioDataSourceUtils.SystemAudioEvent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AudioDataSourceUtils.SystemAudioEvent.hash(into:)()
{
  return sub_1DCB891B8();
}

uint64_t AudioDataSourceUtils.SystemAudioEvent.hashValue.getter()
{
  return sub_1DCB891F8();
}

void static AudioDataSourceUtils.systemAudioEventPublisher()()
{
  sub_1DC89D9F8();
  void v12[2] = v0;
  sub_1DC87E988(&qword_1EAAAAC38);
  sub_1DC89D4E0();
  uint64_t v2 = v1;
  ((void (*)(void))MEMORY[0x1F4188790])();
  sub_1DC8A22D0();
  sub_1DC87E988(&qword_1EAAAAC40);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  uint64_t v5 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  v12[1] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  _OWORD v12[3] = (char *)v12 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v9);
  sub_1DCB17394();
  v12[0] = MEMORY[0x1E4F1A938];
  sub_1DC88CF34(&qword_1EAAAAC48, &qword_1EAAAAC38);
  sub_1DCB19F48();
  char v10 = *(void (**)(void))(v2 + 8);
  sub_1DCB19ED4();
  v10();
  sub_1DCB17394();
  sub_1DCB19F48();
  sub_1DCB19ED4();
  v10();
  sub_1DCB17394();
  sub_1DCB19F48();
  sub_1DCB19ED4();
  v10();
  sub_1DCB17394();
  sub_1DCB873D8();
  sub_1DCB19ED4();
  v10();
  sub_1DC88CF34(&qword_1EAAAAC50, &qword_1EAAAAC40);
  sub_1DCB87458();
  char v11 = *(void (**)(void))(v4 + 8);
  sub_1DC89D710();
  v11();
  sub_1DC89D710();
  v11();
  sub_1DC89D710();
  v11();
  sub_1DC89D710();
  v11();
  sub_1DC89DA54();
}

void sub_1DCB178B8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void sub_1DCB178C4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void sub_1DCB178D0(unsigned char *a1)
{
  switch(*a1)
  {
    case 1:
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_1DCB86FE8();
      sub_1DC89F57C(v6, (uint64_t)qword_1EAAFF810);
      uint64_t v7 = sub_1DCB86FC8();
      os_log_type_t v8 = sub_1DCB88488();
      if (!os_log_type_enabled(v7, v8)) {
        goto LABEL_20;
      }
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      char v10 = "AVAudioSession route change";
      goto LABEL_19;
    case 2:
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1DCB86FE8();
      sub_1DC89F57C(v11, (uint64_t)qword_1EAAFF810);
      uint64_t v2 = sub_1DCB86FC8();
      os_log_type_t v12 = sub_1DCB88488();
      if (os_log_type_enabled(v2, v12))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        _os_log_impl(&dword_1DC873000, v2, v12, "AVAudioSession media services lost", v4, 2u);
        char v5 = 0;
        goto LABEL_14;
      }
      char v5 = 0;
      break;
    case 3:
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_1DCB86FE8();
      sub_1DC89F57C(v13, (uint64_t)qword_1EAAFF810);
      uint64_t v7 = sub_1DCB86FC8();
      os_log_type_t v8 = sub_1DCB88488();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        char v10 = "AVAudioSession media services reset";
LABEL_19:
        _os_log_impl(&dword_1DC873000, v7, v8, v10, v9, 2u);
        MEMORY[0x1E01A99C0](v9, -1, -1);
      }
LABEL_20:

      return;
    default:
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_1DCB86FE8();
      sub_1DC89F57C(v1, (uint64_t)qword_1EAAFF810);
      uint64_t v2 = sub_1DCB86FC8();
      os_log_type_t v3 = sub_1DCB88488();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        _os_log_impl(&dword_1DC873000, v2, v3, "AVAudioSession interrupted", v4, 2u);
        char v5 = 1;
LABEL_14:
        MEMORY[0x1E01A99C0](v4, -1, -1);
      }
      else
      {
        char v5 = 1;
      }
      break;
  }

  sub_1DCB19830();
  swift_allocError();
  *char v14 = v5;
  swift_willThrow();
}

unint64_t sub_1DCB17C18()
{
  unint64_t result = qword_1EAAAAC58;
  if (!qword_1EAAAAC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAAC58);
  }
  return result;
}

void type metadata accessor for AudioDataSourceUtils()
{
}

unsigned char *storeEnumTagSinglePayload for AudioDataSourceUtils.SystemAudioEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB17D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for AudioDataSourceUtils.SystemAudioEvent()
{
}

uint64_t sub_1DCB17D70()
{
  return sub_1DC88CF34(&qword_1EAAAAC60, &qword_1EAAAAC68);
}

uint64_t sub_1DCB17DB0()
{
  return swift_release();
}

uint64_t sub_1DCB17DB8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1DCB17DF0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DCB17E34(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

void type metadata accessor for SNAudioQueueConfiguration()
{
}

uint64_t sub_1DCB17E84()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1DCB17EBC(OpaqueAudioQueue *a1, void *a2)
{
  sub_1DCB15088(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1DCB17EC8()
{
  sub_1DCB19E00();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1DCB19F24() || (sub_1DCB19F18(), !(v6 ^ v4 | v5)))
  {
    sub_1DCB19F3C();
    sub_1DCA72E94();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1DCB19DEC();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  os_log_type_t v8 = (char *)sub_1DCB19E78();
  sub_1DCB0D7E8(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v1 = v2;
    return;
  }
  sub_1DCB19F0C();
  if (!v4)
  {
    *(void *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1DCB17F74()
{
  sub_1DCB1A020();
  if (v6)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = v4;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = (uint64_t)v0;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v9 = v0[3] >> 1, v9 < v3))
  {
    sub_1DCA72F6C();
    uint64_t v0 = v10;
    uint64_t *v1 = (uint64_t)v10;
    uint64_t v9 = v10[3] >> 1;
  }
  uint64_t v11 = v0[2];
  uint64_t v12 = v9 - v11;
  sub_1DCB0FCC0((uint64_t)v57, (uint64_t)&v0[6 * v11 + 4], v9 - v11, v7);
  if (v13 < v2) {
    goto LABEL_14;
  }
  if (v13)
  {
    uint64_t v14 = v0[2];
    BOOL v6 = __OFADD__(v14, v13);
    uint64_t v15 = v14 + v13;
    if (v6)
    {
      __break(1u);
      goto LABEL_19;
    }
    v0[2] = v15;
  }
  if (v13 == v12)
  {
LABEL_15:
    uint64_t v12 = v0[2];
    uint64_t v0 = (void *)v57[0];
    uint64_t v48 = v57[1];
    uint64_t v7 = v59;
    if (v60)
    {
      unint64_t v17 = (v60 - 1) & v60;
      unint64_t v18 = __clz(__rbit64(v60)) | (v59 << 6);
      uint64_t v19 = v58;
LABEL_17:
      char v20 = (uint64_t *)(v0[6] + 16 * v18);
      uint64_t v22 = *v20;
      uint64_t v21 = v20[1];
      sub_1DC87E9DC(v0[7] + 32 * v18, (uint64_t)&v55);
      *(void *)&long long v54 = v22;
      *((void *)&v54 + 1) = v21;
      swift_bridgeObjectRetain();
      uint64_t v2 = v7;
LABEL_41:
      sub_1DCB19960((uint64_t)&v54, (uint64_t)&v51);
      if (!*((void *)&v51 + 1))
      {
LABEL_80:
        sub_1DC901A64((uint64_t)&v54, (uint64_t *)&unk_1EAA9C660);
        sub_1DC964348();
        return sub_1DC901A64((uint64_t)&v51, (uint64_t *)&unk_1EAA9C660);
      }
      int64_t v49 = (unint64_t)(v19 + 64) >> 6;
      while (1)
      {
        sub_1DC901A64((uint64_t)&v51, (uint64_t *)&unk_1EAA9C660);
        uint64_t v28 = *v1;
        uint64_t v29 = *(void *)(*v1 + 24) >> 1;
        if (v29 < v12 + 1)
        {
          sub_1DCA72F6C();
          uint64_t v28 = v47;
          uint64_t *v1 = v47;
          uint64_t v29 = *(void *)(v47 + 24) >> 1;
        }
        sub_1DCB19960((uint64_t)&v54, (uint64_t)v50);
        if (*((void *)&v50[0] + 1)) {
          break;
        }
        int64_t v39 = v2;
LABEL_77:
        sub_1DC901A64((uint64_t)v50, (uint64_t *)&unk_1EAA9C660);
        uint64_t v2 = v39;
LABEL_79:
        *(void *)(*v1 + 16) = v12;
        sub_1DCB19960((uint64_t)&v54, (uint64_t)&v51);
        if (!*((void *)&v51 + 1)) {
          goto LABEL_80;
        }
      }
      uint64_t v30 = v28 + 32;
      while (1)
      {
        long long v51 = v50[0];
        long long v52 = v50[1];
        long long v53 = v50[2];
        if (v12 >= v29)
        {
          sub_1DC901A64((uint64_t)&v51, &qword_1EAAA6A88);
          goto LABEL_79;
        }
        uint64_t result = sub_1DC901A64((uint64_t)&v54, (uint64_t *)&unk_1EAA9C660);
        long long v31 = (_OWORD *)(v30 + 48 * v12);
        long long v33 = v52;
        long long v32 = v53;
        *long long v31 = v51;
        v31[1] = v33;
        v31[2] = v32;
        if (!v17) {
          break;
        }
        unint64_t v34 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        unint64_t v35 = v34 | (v2 << 6);
LABEL_50:
        long long v36 = (uint64_t *)(v0[6] + 16 * v35);
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        sub_1DC87E9DC(v0[7] + 32 * v35, (uint64_t)&v55);
        *(void *)&long long v54 = v37;
        *((void *)&v54 + 1) = v38;
        swift_bridgeObjectRetain();
        int64_t v39 = v2;
LABEL_57:
        ++v12;
        sub_1DCB19960((uint64_t)&v54, (uint64_t)v50);
        if (!*((void *)&v50[0] + 1)) {
          goto LABEL_77;
        }
      }
      if (__OFADD__(v2, 1))
      {
        __break(1u);
        return result;
      }
      sub_1DCB1A008();
      if (v41 == v6)
      {
        int64_t v39 = v2;
LABEL_56:
        unint64_t v17 = 0;
        long long v55 = 0u;
        long long v56 = 0u;
        uint64_t v2 = v39;
        long long v54 = 0u;
        goto LABEL_57;
      }
      unint64_t v42 = *(void *)(v48 + 8 * v40);
      if (!v42)
      {
        int64_t v39 = v40;
        sub_1DCB1A014();
        if (v41 == v6) {
          goto LABEL_56;
        }
        unint64_t v42 = *(void *)(v48 + 8 * v44);
        if (!v42)
        {
          int64_t v39 = v44;
          if (v43 + 2 >= v49) {
            goto LABEL_56;
          }
          unint64_t v42 = *(void *)(v48 + 8 * (v43 + 2));
          if (v42)
          {
            int64_t v40 = v43 + 2;
            goto LABEL_55;
          }
          int64_t v39 = v43 + 2;
          sub_1DCB1A014();
          if (v41 == v6) {
            goto LABEL_56;
          }
          unint64_t v42 = *(void *)(v48 + 8 * v44);
          if (!v42)
          {
            int64_t v39 = v44;
            sub_1DCB1A008();
            if (v41 == v6) {
              goto LABEL_56;
            }
            unint64_t v42 = *(void *)(v48 + 8 * v40);
            if (!v42)
            {
              do
              {
                sub_1DCB1A008();
                if (v41 == v6)
                {
                  int64_t v39 = v49 - 1;
                  goto LABEL_56;
                }
                unint64_t v42 = *(void *)(v48 + 8 * v45);
                uint64_t v46 = v45 + 1;
              }
              while (!v42);
              int64_t v40 = v46 - 1;
            }
            goto LABEL_55;
          }
        }
        int64_t v40 = v44;
      }
LABEL_55:
      unint64_t v17 = (v42 - 1) & v42;
      unint64_t v35 = __clz(__rbit64(v42)) + (v40 << 6);
      uint64_t v2 = v40;
      goto LABEL_50;
    }
LABEL_19:
    int64_t v23 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_39:
      uint64_t v19 = v5;
    }
    else
    {
      uint64_t v19 = v58;
      int64_t v24 = (unint64_t)(v58 + 64) >> 6;
      uint64_t v2 = v7;
      if (v23 < v24)
      {
        unint64_t v25 = *(void *)(v48 + 8 * v23);
        if (v25)
        {
LABEL_22:
          unint64_t v17 = (v25 - 1) & v25;
          unint64_t v18 = __clz(__rbit64(v25)) + (v23 << 6);
          uint64_t v7 = v23;
          goto LABEL_17;
        }
        uint64_t v26 = v7 + 2;
        uint64_t v2 = v7 + 1;
        if (v7 + 2 < v24)
        {
          uint64_t v5 = v58;
          unint64_t v25 = *(void *)(v48 + 8 * v26);
          if (v25)
          {
LABEL_25:
            int64_t v23 = v26;
LABEL_26:
            uint64_t v19 = v58;
            goto LABEL_22;
          }
          uint64_t v2 = v7 + 2;
          if (v7 + 3 < v24)
          {
            unint64_t v25 = *(void *)(v48 + 8 * (v7 + 3));
            if (v25)
            {
              int64_t v23 = v7 + 3;
              goto LABEL_26;
            }
            uint64_t v26 = v7 + 4;
            uint64_t v2 = v7 + 3;
            uint64_t v19 = v58;
            if (v7 + 4 < v24)
            {
              unint64_t v25 = *(void *)(v48 + 8 * v26);
              if (v25) {
                goto LABEL_25;
              }
              int64_t v23 = v7 + 5;
              uint64_t v2 = v7 + 4;
              uint64_t v19 = v58;
              if (v7 + 5 < v24)
              {
                unint64_t v25 = *(void *)(v48 + 8 * v23);
                if (v25) {
                  goto LABEL_22;
                }
                uint64_t v2 = v24 - 1;
                int64_t v27 = v7 + 6;
                do
                {
                  if (v27 >= v24) {
                    goto LABEL_39;
                  }
                  unint64_t v25 = *(void *)(v48 + 8 * v27++);
                }
                while (!v25);
                int64_t v23 = v27 - 1;
                goto LABEL_26;
              }
            }
          }
        }
      }
    }
    unint64_t v17 = 0;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v54 = 0u;
    goto LABEL_41;
  }

  return sub_1DC964348();
}

void sub_1DCB184D0()
{
  sub_1DCB1A020();
  if (v9)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = v8;
  if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t v10 = *(void *)(v0 + 24) >> 1, v10 < v4))
  {
    sub_1DCA7308C();
    uint64_t v0 = v11;
    uint64_t v10 = *(void *)(v11 + 24) >> 1;
  }
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v13 = v10 - v12;
  sub_1DCB0FEDC((uint64_t)v37, v0 + 32 * v12 + 32, v10 - v12, v2);
  if (v14 < v3) {
    goto LABEL_12;
  }
  if (v14)
  {
    uint64_t v16 = *(void *)(v0 + 16);
    BOOL v9 = __OFADD__(v16, v14);
    uint64_t v17 = v16 + v14;
    if (v9)
    {
      __break(1u);
      goto LABEL_46;
    }
    *(void *)(v0 + 16) = v17;
  }
  if (v14 != v13) {
    goto LABEL_10;
  }
LABEL_13:
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v13 = v38;
  uint64_t v36 = v37[1];
  int64_t v15 = v39;
  uint64_t v34 = v38;
  if (!v40)
  {
LABEL_46:
    uint64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      return;
    }
    int64_t v20 = (unint64_t)(v13 + 64) >> 6;
    if (v22 >= v20) {
      goto LABEL_10;
    }
    uint64_t v31 = *(void *)(v36 + 8 * v22);
    if (!v31)
    {
      uint64_t v32 = v15 + 2;
      if (v15 + 2 >= v20) {
        goto LABEL_10;
      }
      uint64_t v31 = *(void *)(v36 + 8 * v32);
      if (v31)
      {
LABEL_55:
        uint64_t v22 = v32;
      }
      else
      {
        if (v15 + 3 >= v20) {
          goto LABEL_10;
        }
        uint64_t v31 = *(void *)(v36 + 8 * (v15 + 3));
        if (!v31) {
          goto LABEL_60;
        }
        uint64_t v22 = v15 + 3;
      }
    }
LABEL_49:
    uint64_t v18 = (v31 - 1) & v31;
    uint64_t v19 = v22;
    uint64_t v13 = v34;
    goto LABEL_15;
  }
  uint64_t v18 = (v40 - 1) & v40;
  uint64_t v19 = v39;
LABEL_15:
  sub_1DCB19F68();
  sub_1DC8AF450(v6, v7);
  if (!v5) {
    goto LABEL_10;
  }
  int64_t v35 = (unint64_t)(v13 + 64) >> 6;
  int64_t v15 = v19;
  while (1)
  {
    uint64_t v21 = *(void *)(v0 + 24) >> 1;
    if (v21 < v3 + 1)
    {
      int64_t v29 = v15;
      sub_1DCA7308C();
      int64_t v15 = v29;
      uint64_t v0 = v30;
      uint64_t v21 = *(void *)(v30 + 24) >> 1;
    }
    if (v3 < v21) {
      break;
    }
LABEL_44:
    *(void *)(v0 + 16) = v3;
  }
  while (1)
  {
    uint64_t v22 = v0 + 32 + 32 * v3;
    *(void *)uint64_t v22 = v2;
    *(void *)(v22 + 8) = v5;
    *(void *)(v22 + 16) = v6;
    *(void *)(v22 + 24) = v7;
    ++v3;
    if (!v18) {
      break;
    }
    v18 &= v18 - 1;
    int64_t v23 = v15;
LABEL_33:
    sub_1DCB19F68();
    sub_1DC8AF450(v6, v7);
    int64_t v15 = v23;
    if (v3 >= v21) {
      goto LABEL_44;
    }
  }
  int64_t v23 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    if (v23 >= v35) {
      goto LABEL_51;
    }
    uint64_t v24 = *(void *)(v36 + 8 * v23);
    if (v24) {
      goto LABEL_32;
    }
    sub_1DCB1A014();
    if (v26 == v9) {
      goto LABEL_51;
    }
    uint64_t v24 = *(void *)(v36 + 8 * v25);
    if (!v24)
    {
      if (v23 + 2 >= v35) {
        goto LABEL_51;
      }
      uint64_t v24 = *(void *)(v36 + 8 * (v23 + 2));
      if (v24)
      {
        v23 += 2;
        goto LABEL_32;
      }
      sub_1DCB1A014();
      if (v26 == v9) {
        goto LABEL_51;
      }
      uint64_t v24 = *(void *)(v36 + 8 * v25);
      if (!v24)
      {
        v23 += 4;
        if (v23 >= v35) {
          goto LABEL_51;
        }
        uint64_t v24 = *(void *)(v36 + 8 * v23);
        if (!v24)
        {
          while (1)
          {
            sub_1DCB1A008();
            if (v26 == v9) {
              break;
            }
            uint64_t v24 = *(void *)(v36 + 8 * v27);
            uint64_t v28 = v27 + 1;
            if (v24)
            {
              int64_t v23 = v28 - 1;
              goto LABEL_32;
            }
          }
LABEL_51:
          *(void *)(v0 + 16) = v3;
          goto LABEL_10;
        }
        goto LABEL_32;
      }
    }
    int64_t v23 = v25;
LABEL_32:
    uint64_t v18 = (v24 - 1) & v24;
    goto LABEL_33;
  }
  __break(1u);
LABEL_60:
  uint64_t v32 = v22 + 3;
  if (v22 + 3 < v20)
  {
    uint64_t v31 = *(void *)(v36 + 8 * v32);
    if (v31) {
      goto LABEL_55;
    }
    v22 += 4;
    if (v22 >= v20) {
      goto LABEL_10;
    }
    uint64_t v31 = *(void *)(v36 + 8 * v22);
    if (!v31)
    {
      int64_t v33 = v15 + 6;
      while (v33 < v20)
      {
        uint64_t v31 = *(void *)(v36 + 8 * v33++);
        if (v31)
        {
          uint64_t v22 = v33 - 1;
          goto LABEL_49;
        }
      }
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_10:
  sub_1DC964348();
  void *v1 = v0;
}

void sub_1DCB188F8()
{
  sub_1DCB19E00();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1DCB19F24() || (sub_1DCB19F18(), !(v6 ^ v4 | v5)))
  {
    sub_1DCB19F3C();
    sub_1DCA73418();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1DCB19DEC();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1DCB19E78();
  sub_1DCB0DD04();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v1 = v2;
    return;
  }
  sub_1DCB19F0C();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1DCB189A0()
{
  sub_1DCB19E00();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1DCB19F24() || (sub_1DCB19F18(), !(v6 ^ v4 | v5)))
  {
    sub_1DCB19F3C();
    sub_1DCA73564();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1DCB19DEC();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = sub_1DCB19E78();
  sub_1DCB0DE3C(v8, v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v1 = v2;
    return;
  }
  sub_1DCB19F0C();
  if (!v4)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1DCB18A48()
{
  sub_1DCB19E00();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1DCB19F24() || (sub_1DCB19F18(), !(v6 ^ v4 | v5)))
  {
    sub_1DCB19F3C();
    sub_1DCA735CC();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1DCB19DEC();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = sub_1DCB19E78();
  sub_1DCB0DF9C(v8, v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v1 = v2;
    return;
  }
  sub_1DCB19F0C();
  if (!v4)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1DCB18AF4()
{
  sub_1DCB19E00();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1DCB19F24() || (sub_1DCB19F18(), !(v6 ^ v4 | v5)))
  {
    sub_1DCB19F3C();
    sub_1DCA73600();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1DCB19DEC();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1DCB19E78();
  sub_1DCB0E0EC();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v1 = v2;
    return;
  }
  sub_1DCB19F0C();
  if (!v4)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1DCB18BA0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1E01A7AF0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    unint64_t *v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    uint64_t v10 = sub_1DCB19FC4(v8);
    sub_1DCB19348(v10, v11, a1, (void (*)(uint64_t, void, uint64_t))sub_1DCB0E18C, (uint64_t)&unk_1EAAAADD0, (uint64_t *)&unk_1EAA9D0C0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1DC899A54);
    if (v12 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  if (v12 >= 1)
  {
    sub_1DCB19FF4();
    if (v15)
    {
      __break(1u);
      return;
    }
    *(void *)(v13 + 16) = v14;
  }
  swift_bridgeObjectRelease();
  sub_1DC89DD10();
  sub_1DCB87C68();
}

void sub_1DCB18D80(unint64_t a1)
{
}

void sub_1DCB18DBC(unint64_t a1)
{
}

void sub_1DCB18DF8(unint64_t a1, void (*a2)(uint64_t, void, uint64_t), uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v12 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v14 = v13 + v11;
  if (__OFADD__(v13, v11))
  {
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v12 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v12;
  uint64_t v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    uint64_t v13 = 1;
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = (void (*)(uint64_t, void, uint64_t))a3;
  a3 = (uint64_t)a4;
  a4 = a5;
  if (v12 >> 62) {
    goto LABEL_27;
  }
  uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14) {
      uint64_t v17 = v14;
    }
    swift_bridgeObjectRetain();
    unint64_t v12 = MEMORY[0x1E01A7AF0](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *uint64_t v5 = v12;
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (uint64_t)a2;
    a2 = (void (*)(uint64_t, void, uint64_t))v11;
    uint64_t v11 = v24;
LABEL_16:
    uint64_t v18 = sub_1DCB19FC4(v16);
    sub_1DCB19348(v18, v19, a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v20 >= v11) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  if (v20 >= 1)
  {
    sub_1DCB19FF4();
    if (v23)
    {
      __break(1u);
      return;
    }
    *(void *)(v21 + 16) = v22;
  }
  swift_bridgeObjectRelease();

  sub_1DCB87C68();
}

void sub_1DCB18FFC()
{
  sub_1DCB19E00();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1DCB19F24() || (sub_1DCB19F18(), !(v6 ^ v4 | v5)))
  {
    sub_1DCB19F3C();
    sub_1DCA73908();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1DCB19DEC();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = sub_1DCB19E78();
  sub_1DCB0E7E8(v8, v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v1 = v2;
    return;
  }
  sub_1DCB19F0C();
  if (!v4)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1DCB190A8()
{
  sub_1DCB19E00();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1DCB19F24() || (sub_1DCB19F18(), !(v6 ^ v4 | v5)))
  {
    sub_1DCB19F3C();
    sub_1DCA73B68();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1DCB19DEC();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v8 = sub_1DCB19E78();
  sub_1DCB0EAB0(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v1 = v2;
    return;
  }
  sub_1DCB19F0C();
  if (!v4)
  {
    *(void *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1DCB19154()
{
  sub_1DCB19E00();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1DCB19F24() || (sub_1DCB19F18(), !(v6 ^ v4 | v5)))
  {
    sub_1DCB19F3C();
    sub_1DCA73C34();
    uint64_t v2 = v7;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_1DCB19DEC();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = sub_1DCB19E78();
  sub_1DCB0EB78(v8, v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v1 = v2;
    return;
  }
  sub_1DCB19F0C();
  if (!v4)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1DCB191FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(void *)(v3 + 24) >> 1)
  {
    sub_1DCA73D94();
    uint64_t v3 = v6;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1DCB0D688(a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1DCB192D8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_availableInputs);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_1DC89C89C(0, &qword_1EAAAAF88);
  uint64_t v3 = sub_1DCB87C38();

  return v3;
}

uint64_t sub_1DCB19348(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, void, uint64_t), uint64_t a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = result;
  unint64_t v13 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1DCB88CC8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v14) {
      return a3;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v14) {
      return a3;
    }
  }
  if (v12)
  {
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1DCB88CC8();
      uint64_t result = swift_bridgeObjectRelease();
      if (v15 <= a2)
      {
        if (v14 >= 1)
        {
          uint64_t v16 = (unint64_t *)sub_1DCB1A034();
          uint64_t v18 = sub_1DC88CF34(v16, v17);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v14; ++i)
          {
            uint64_t v20 = sub_1DC87E988(a6);
            uint64_t v21 = (void (*)(unsigned char *, void))a7(v24, i, a3, v20, v18);
            id v23 = *v22;
            v21(v24, 0);
            *(void *)(v12 + 8 * i) = v23;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v12);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCB19508@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DCB12DBC();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1DCB1953C(void **a1)
{
  return sub_1DCB12F80(*a1, &qword_1EAAAADA0);
}

uint64_t sub_1DCB19560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCB198A8(a1, (void (*)(uint64_t, void))sub_1DC9F6AF0, a2);
}

uint64_t sub_1DCB19578(void **a1)
{
  return sub_1DCB13088(*a1, &qword_1EAAAADF0);
}

uint64_t sub_1DCB1959C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC901EB8(a1, (uint64_t)v4, (uint64_t *)&unk_1EAAA69A0);
  return sub_1DCB12DD8((uint64_t)v4, a2);
}

uint64_t sub_1DCB195E0(void **a1)
{
  return sub_1DCB12F1C(*a1);
}

uint64_t sub_1DCB195E8@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DCB12E38(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1DCB1961C(void **a1)
{
  return sub_1DCB12F80(*a1, &qword_1EAAAAE68);
}

uint64_t sub_1DCB19640(void **a1)
{
  return sub_1DCB12F80(*a1, &qword_1EAAAAEE8);
}

void sub_1DCB19664()
{
}

uint64_t sub_1DCB19694@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DCB12E44();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1DCB196C4(void **a1)
{
  return sub_1DCB12F80(*a1, &qword_1EAAAAD50);
}

void sub_1DCB196E8()
{
}

uint64_t sub_1DCB19718(void **a1)
{
  return sub_1DCB12F80(*a1, &qword_1EAAAB018);
}

uint64_t sub_1DCB1973C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  _OWORD v4[2] = a1[2];
  return sub_1DCB12E50((uint64_t)v4, a2);
}

uint64_t sub_1DCB19770(void **a1)
{
  return sub_1DCB12FD4(*a1);
}

void sub_1DCB19778()
{
}

uint64_t sub_1DCB197A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCB140DC(*(void (**)(uint64_t))(v1 + 16), a1);
}

void *sub_1DCB197B0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DCB12E78(*a1, a1[1]);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  return result;
}

uint64_t sub_1DCB197E8(void **a1)
{
  return sub_1DCB13034(*a1);
}

uint64_t sub_1DCB197F0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB19828@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCB13A04(*(void (**)(uint64_t))(v1 + 16), a1);
}

unint64_t sub_1DCB19830()
{
  unint64_t result = qword_1EAAAAD80;
  if (!qword_1EAAAAD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAAD80);
  }
  return result;
}

uint64_t sub_1DCB1987C(AudioQueuePropertyID inID, void *inData, UInt32 inDataSize)
{
  return AudioQueueSetProperty(*(AudioQueueRef *)(v3 + 16), inID, inData, inDataSize);
}

uint64_t sub_1DCB19890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCB198A8(a1, (void (*)(uint64_t, void))sub_1DC9F6E60, a2);
}

uint64_t sub_1DCB198A8@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1DCB12EB0(*(void *)a1, *(unsigned char *)(a1 + 8), a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 9) = v6 & 1;
  return result;
}

uint64_t sub_1DCB198EC(void **a1)
{
  return sub_1DCB13088(*a1, &qword_1EAAAAF48);
}

uint64_t sub_1DCB19910(void **a1)
{
  return sub_1DCB130DC(*a1);
}

uint64_t sub_1DCB19918(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCB19960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAA9C660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCB199C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCB13C88(*(void (**)(uint64_t))(v1 + 16), a1);
}

void *sub_1DCB199D0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *sub_1DCB19A28(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for AudioDataSourceUtils.ChannelAssignment()
{
}

void type metadata accessor for AudioDataSourceUtils.DomainError()
{
}

unint64_t sub_1DCB19A88()
{
  unint64_t result = qword_1EAAAB058;
  if (!qword_1EAAAB058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB058);
  }
  return result;
}

unint64_t sub_1DCB19AD8()
{
  unint64_t result = qword_1EAAAB060;
  if (!qword_1EAAAB060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB060);
  }
  return result;
}

unint64_t sub_1DCB19B24()
{
  unint64_t result = qword_1EAAAB070;
  if (!qword_1EAAAB070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB070);
  }
  return result;
}

unsigned char *_s13SoundAnalysis20AudioDataSourceUtilsV17ChannelAssignmentV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB19C3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioDataSourceUtils.ChannelAssignment.CodingKeys()
{
  return &type metadata for AudioDataSourceUtils.ChannelAssignment.CodingKeys;
}

unint64_t sub_1DCB19C78()
{
  unint64_t result = qword_1EAAAB080;
  if (!qword_1EAAAB080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB080);
  }
  return result;
}

unint64_t sub_1DCB19CC8()
{
  unint64_t result = qword_1EAAAB088;
  if (!qword_1EAAAB088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB088);
  }
  return result;
}

unint64_t sub_1DCB19D18()
{
  unint64_t result = qword_1EAAAB090;
  if (!qword_1EAAAB090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB090);
  }
  return result;
}

id sub_1DCB19D70@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return sub_1DCA14B2C(0xD000000000000017, (a2 - 32) | 0x8000000000000000, 1, 0, a1, v2);
}

uint64_t sub_1DCB19DA0()
{
  *(void *)(v1 - 88) = v0;
  return v1 - 88;
}

uint64_t sub_1DCB19DC8()
{
  return sub_1DCB873D8();
}

uint64_t sub_1DCB19E14()
{
  return sub_1DCB87438();
}

uint64_t sub_1DCB19E60()
{
  return v0;
}

uint64_t sub_1DCB19E78()
{
  return v0 + 32;
}

uint64_t sub_1DCB19E88()
{
  return sub_1DCB87A18();
}

void sub_1DCB19EA4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 96) = a1;
}

uint64_t sub_1DCB19EB8()
{
  return sub_1DCB87A18();
}

id sub_1DCB19EE0(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return objc_msgSend(v10, a2, v11, &a10);
}

uint64_t sub_1DCB19F24()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1DCB19F48()
{
  return sub_1DCB873D8();
}

uint64_t sub_1DCB19F68()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCB19F94()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB19FAC()
{
  return sub_1DCB88C08();
}

uint64_t sub_1DCB19FC4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8 * *(void *)(a1 + 16) + 32;
}

uint64_t sub_1DCB19FDC()
{
  return sub_1DCB86898();
}

uint64_t sub_1DCB1A034()
{
  return v0;
}

uint64_t sub_1DCB1A040(uint64_t a1)
{
  return sub_1DCB1A2A4(a1);
}

uint64_t sub_1DCB1A068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(AssociatedTypeWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
}

uint64_t sub_1DCB1A194()
{
  swift_getWitnessTable();
  _s21ServerEnvironmentImplVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DCB1A2C8(WitnessTable, v1, v2);
}

uint64_t sub_1DCB1A21C()
{
  swift_getWitnessTable();
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DCB1A2C8(WitnessTable, v1, v2);
}

uint64_t sub_1DCB1A2A4(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1DCB1A2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCB1A068(v3, v4, a3, a1);
}

double SNSignalThresholdResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNSignalThresholdResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1DCB1A320(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAAB0C8);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  uint64_t v11 = v2[2];
  uint64_t v12 = v2[5];
  uint64_t v14 = v2[3];
  uint64_t v15 = v12;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB1B1B0();
  sub_1DCB892B8();
  uint64_t v16 = v10;
  uint64_t v17 = v2[1];
  uint64_t v18 = v11;
  uint64_t v19 = v14;
  uint64_t v20 = v2[4];
  uint64_t v21 = v15;
  sub_1DC89C64C();
  sub_1DCB88F18();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_1DCB1A474@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DC87E988(&qword_1EAAAB0B0);
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB1B1B0();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC89C600();
    sub_1DCB88DF8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    uint64_t v11 = v19;
    uint64_t v12 = v16[1];
    uint64_t v13 = v18;
    long long v14 = v17;
    *(void *)a2 = v16[0];
    *(void *)(a2 + 8) = v12;
    *(_OWORD *)(a2 + 16) = v14;
    *(void *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v11;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCB1A5D8(uint64_t a1)
{
  unint64_t v2 = sub_1DCB1B1B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB1A614(uint64_t a1)
{
  unint64_t v2 = sub_1DCB1B1B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB1A650@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCB1A474(a1, a2);
}

uint64_t sub_1DCB1A668(void *a1)
{
  return sub_1DCB1A320(a1);
}

double SNSignalThresholdResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNSignalThresholdResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double (*SNSignalThresholdResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNSignalThresholdResult.timeRange.getter((uint64_t)v3);
  return sub_1DCB1A7CC;
}

double sub_1DCB1A7CC(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNSignalThresholdResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

id sub_1DCB1A808()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x1E4F1FA20];
  uint64_t v3 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v4 = &v0[OBJC_IVAR___SNSignalThresholdResult_impl];
  *(void *)uint64_t v4 = *MEMORY[0x1E4F1FA20];
  *((void *)v4 + 1) = *(void *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((void *)v4 + 4) = *(void *)(v2 + 32);
  *((void *)v4 + 5) = v3;
  v6.receiver = v0;
  v6.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1DCB1A8A0(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = &v3[OBJC_IVAR___SNSignalThresholdResult_impl];
  *(void *)uint64_t v5 = *(void *)a1;
  *((void *)v5 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v5 + 4) = *(void *)(a1 + 32);
  *((void *)v5 + 5) = v4;
  v7.receiver = v3;
  v7.Class super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

id SNSignalThresholdResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  v6[0] = *(void *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl);
  sub_1DC8AA540(v1 + OBJC_IVAR___SNSignalThresholdResult_impl);
  v6[5] = v4;
  id result = sub_1DCB1A8A0((uint64_t)v6);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNSignalThresholdResult.hash.getter()
{
  return sub_1DCB891F8();
}

BOOL SNSignalThresholdResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_1DC87E9CC(&v16, v15);
    sub_1DC87E9DC((uint64_t)v15, (uint64_t)v11);
    if (swift_dynamicCast())
    {
      uint64_t v3 = (void *)v10[0];
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl + 40);
      uint64_t v5 = v10[0] + OBJC_IVAR___SNSignalThresholdResult_impl;
      uint64_t v6 = *(void *)(v10[0] + OBJC_IVAR___SNSignalThresholdResult_impl);
      v11[0] = *(void *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl);
      v11[1] = *(void *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl + 8);
      long long v12 = *(_OWORD *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl + 16);
      uint64_t v13 = *(void *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl + 32);
      uint64_t v14 = v4;
      v10[0] = v6;
      sub_1DC8AA540(v5);
      v10[5] = v7;
      BOOL v8 = static TimeRange.== infix(_:_:)((uint64_t)v11, (uint64_t)v10);
    }
    else
    {
      BOOL v8 = 0;
    }
    sub_1DC8818D0((uint64_t)v15);
  }
  else
  {
    return 0;
  }
  return v8;
}

id SNSignalThresholdResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNSignalThresholdResult.init(coder:)(a1);
}

id SNSignalThresholdResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87E2EC(1819307369, 0xE400000000000000, a1);
  swift_getObjectType();

  id v4 = sub_1DCB1A8A0((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNSignalThresholdResult.encode(with:)(NSCoder with)
{
  long long v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl + 16);
  v3[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl);
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNSignalThresholdResult_impl + 32);
  sub_1DC87C838((uint64_t)v3, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNSignalThresholdResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSignalThresholdResult.description.getter()
{
  v14.receiver = v0;
  v14.Class super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v14, sel_description);
  uint64_t v2 = sub_1DCB87938();
  uint64_t v4 = v3;

  uint64_t v15 = v2;
  uint64_t v16 = v4;
  sub_1DCB87A18();
  SNSignalThresholdResult.timeRange.getter((uint64_t)v17);
  uint64_t v5 = v17[0];
  uint64_t v6 = v17[2];
  uint64_t v7 = v17[3];
  uint64_t v8 = v17[5];
  uint64_t v9 = self;
  v13[0] = v5;
  v13[1] = v17[1];
  void v13[2] = v6;
  _OWORD v13[3] = v7;
  v13[4] = v17[4];
  v13[5] = v8;
  id v10 = objc_msgSend(v9, sel_valueWithCMTimeRange_, v13);
  id v11 = objc_msgSend(v10, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v15;
}

id SNSignalThresholdResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DCB1B0CC@<D0>(uint64_t a1@<X8>)
{
  return SNSignalThresholdResult.timeRange.getter(a1);
}

double sub_1DCB1B0F0(uint64_t a1)
{
  return SNSignalThresholdResult.timeRange.setter(a1);
}

uint64_t type metadata accessor for SNSignalThresholdResult()
{
  return self;
}

uint64_t method lookup function for SNSignalThresholdResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNSignalThresholdResult);
}

ValueMetadata *type metadata accessor for SignalThresholdResult()
{
  return &type metadata for SignalThresholdResult;
}

unint64_t sub_1DCB1B164()
{
  unint64_t result = qword_1EAAAB0A8;
  if (!qword_1EAAAB0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB0A8);
  }
  return result;
}

unint64_t sub_1DCB1B1B0()
{
  unint64_t result = qword_1EAAAB0B8;
  if (!qword_1EAAAB0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB0B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SignalThresholdResult.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCB1B298);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SignalThresholdResult.CodingKeys()
{
  return &type metadata for SignalThresholdResult.CodingKeys;
}

unint64_t sub_1DCB1B2D4()
{
  unint64_t result = qword_1EAAAB0D8;
  if (!qword_1EAAAB0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB0D8);
  }
  return result;
}

unint64_t sub_1DCB1B324()
{
  unint64_t result = qword_1EAAAB0E0;
  if (!qword_1EAAAB0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB0E0);
  }
  return result;
}

unint64_t sub_1DCB1B374()
{
  unint64_t result = qword_1EAAAB0E8;
  if (!qword_1EAAAB0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB0E8);
  }
  return result;
}

uint64_t sub_1DCB1B3C0()
{
  if ((sub_1DCB878C8() & 1) == 0) {
    return 0;
  }
  type metadata accessor for KVPair();
  return sub_1DCB878C8() & 1;
}

uint64_t sub_1DCB1B444()
{
  return sub_1DCB87818();
}

uint64_t sub_1DCB1B494()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB1B4F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v16[4] = a4;
  void v16[2] = a6;
  uint64_t v7 = *(void *)(a2 + 24);
  v16[0] = a2;
  v16[1] = v7;
  type metadata accessor for KVPair.CodingKeys();
  swift_getWitnessTable();
  uint64_t v8 = sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v16 - v12;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB892B8();
  char v18 = 0;
  uint64_t v14 = v16[5];
  sub_1DCB88F18();
  if (!v14)
  {
    char v17 = 1;
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v8);
}

uint64_t sub_1DCB1B67C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v36 = a6;
  uint64_t v37 = a5;
  uint64_t v41 = a4;
  sub_1DC88D538();
  uint64_t v35 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  uint64_t v39 = v11;
  sub_1DC88D538();
  uint64_t v38 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  uint64_t v42 = v14;
  type metadata accessor for KVPair.CodingKeys();
  swift_getWitnessTable();
  uint64_t v44 = sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v40 = v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v43 = a2;
  uint64_t v17 = type metadata accessor for KVPair();
  sub_1DC88D538();
  uint64_t v34 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v34 - v20;
  sub_1DC881A8C(a1, a1[3]);
  uint64_t v22 = v45;
  sub_1DCB89298();
  if (v22) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  id v23 = v21;
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  char v47 = 0;
  sub_1DCB88DF8();
  char v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  uint64_t v45 = v23;
  v26(v23, v42, v43);
  char v46 = 1;
  sub_1DCB88DF8();
  uint64_t v27 = sub_1DCB1CD54();
  v28(v27);
  uint64_t v29 = v17;
  uint64_t v30 = *(int *)(v17 + 36);
  uint64_t v31 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v45[v30], v24, a3);
  uint64_t v32 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v36, v31, v29);
  sub_1DC8818D0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v31, v29);
}

BOOL sub_1DCB1B9D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC8884D0(*a1, *a2);
}

uint64_t sub_1DCB1B9E4()
{
  return sub_1DC888600();
}

uint64_t sub_1DCB1B9F4()
{
  return sub_1DC8884E0();
}

uint64_t sub_1DCB1BA04()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB1BA4C()
{
  return sub_1DC8DB718(*v0);
}

uint64_t sub_1DCB1BA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC8DB640(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB1BA8C()
{
  return sub_1DC888648();
}

uint64_t sub_1DCB1BAB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DC8885F8();
  *a1 = result;
  return result;
}

uint64_t sub_1DCB1BAE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DCB1BB38(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1DCB1BB8C()
{
  return sub_1DCB1B3C0();
}

uint64_t sub_1DCB1BB9C()
{
  return sub_1DCB1B494();
}

uint64_t sub_1DCB1BBA8()
{
  return sub_1DCB1B444();
}

uint64_t sub_1DCB1BBB4()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB1BC0C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1DCB1B67C(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a3 - 8), *(void *)(a3 - 24), a4);
}

uint64_t sub_1DCB1BC34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DCB1B4F4(a1, a2, a3, *(void *)(a3 - 16), a5, *(void *)(a3 - 32));
}

uint64_t sub_1DCB1BC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DCAD3260();
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v9 = v16;
  uint64_t v17 = a3;
  uint64_t v10 = sub_1DC8EF6AC(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v10, v4, v9);
  sub_1DCAD3334(v15);
  if (!v5)
  {
    sub_1DC8818D0((uint64_t)v15);
    uint64_t v11 = v4 + *(int *)(a2 + 36);
    uint64_t v12 = *(void *)(a2 + 24);
    uint64_t v16 = v12;
    uint64_t v17 = a4;
    uint64_t v13 = sub_1DC8EF6AC(v15);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v13, v11, v12);
    sub_1DCAD3334(v15);
  }
  swift_release();
  return sub_1DC8818D0((uint64_t)v15);
}

uint64_t sub_1DCB1BD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCB1BC54(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16));
}

uint64_t sub_1DCB1BD98()
{
  sub_1DC8867A8();
  uint64_t v2 = v1;
  v0[6] = v3;
  v0[7] = v4;
  v0[4] = v1;
  v0[5] = v5;
  v0[2] = v6;
  v0[3] = v7;
  v0[8] = *(void *)(v5 - 8);
  v0[9] = swift_task_alloc();
  v0[10] = *(void *)(v2 - 8);
  v0[11] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[12] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1DCB1BED4;
  return sub_1DC9780D0();
}

uint64_t sub_1DCB1BED4(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_1DC88678C();
  *uint64_t v7 = v6;
  v5[13] = a1;
  v5[14] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1DCB1C38C, 0, 0);
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v5[15] = v8;
    *uint64_t v8 = v6;
    v8[1] = sub_1DCB1C038;
    return sub_1DC9783F0();
  }
}

uint64_t sub_1DCB1C038()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  *(void *)(v4 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_1DCB1C3FC;
  }
  else {
    uint64_t v5 = sub_1DCB1C11C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DCB1C11C()
{
  sub_1DC8867A8();
  (*(void (**)(void, void, void))(v0[10] + 32))(v0[2], v0[11], v0[4]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[17] = v1;
  void *v1 = v0;
  v1[1] = sub_1DCB1C1D8;
  return sub_1DC9783F0();
}

uint64_t sub_1DCB1C1D8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  *(void *)(v4 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_1DCB1C478;
  }
  else {
    uint64_t v5 = sub_1DCB1C2BC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DCB1C2BC()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[2];
  swift_release();
  swift_release();
  uint64_t v5 = type metadata accessor for KVPair();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4 + *(int *)(v5 + 36), v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v6();
}

uint64_t sub_1DCB1C38C()
{
  sub_1DC8867A8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCB1C3FC()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCB1C478()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v4();
}

uint64_t sub_1DCB1C520()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8D6930;
  return sub_1DCB1BD98();
}

uint64_t sub_1DCB1C604()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8D78C0;
  return sub_1DCB1C520();
}

uint64_t sub_1DCB1C6C8()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for KVPair()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for KVPair.CodingKeys()
{
  return sub_1DC8866E4();
}

unsigned char *sub_1DCB1C744(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB1C810);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1DCB1C838(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_1DCB1CA10(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          long long v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1DCB1CC9CLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t sub_1DCB1CCC4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCB1CD00()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB1CD1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB1CD38()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB1CD54()
{
  return v0;
}

uint64_t sub_1DCB1CD70@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = *a2;
  uint64_t v18 = a2[1];
  uint64_t v19 = v11;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DCA444B0(a3, a4, &v19, &v18, v10);
  if (v5) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = v12;
  uint64_t v16 = v13;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = v18;
  *a2 = v19;
  a2[1] = v17;
  *a5 = v15;
  a5[1] = v16;
  return result;
}

uint64_t sub_1DCB1CE14@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(result + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DC897E1C();
    uint64_t v6 = v8;
    unint64_t v7 = *(void *)(v8 + 16);
    do
    {
      if (v7 >= *(void *)(v8 + 24) >> 1) {
        sub_1DC897E1C();
      }
      *(void *)(v8 + 16) = v7 + 1;
      *(void *)(v8 + 8 * v7++ + 32) = 0;
      --v5;
    }
    while (v5);
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = v6;
  a3[1] = a2;
  return result;
}

void *sub_1DCB1CEF4()
{
  uint64_t v0 = sub_1DCB87998();
  uint64_t v1 = dlopen((const char *)(v0 + 32), 1);
  swift_release();
  if (!v1)
  {
    type metadata accessor for SNError();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000020, 0x80000001DCB9B240);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v1;
}

uint64_t (*sub_1DCB1D00C(void *a1))()
{
  uint64_t v1 = dlsym(a1, "RegisterAudioUnits_InternalUnsearchable");
  uint64_t v2 = nullsub_1;
  if (v1)
  {
    *(void *)(swift_allocObject() + 16) = v1;
    return sub_1DCB1D118;
  }
  return (uint64_t (*)())v2;
}

uint64_t sub_1DCB1D084()
{
  uint64_t v0 = sub_1DCB1CEF4();
  uint64_t v1 = sub_1DCB1D00C(v0);
  v1();
  uint64_t result = swift_release();
  byte_1EAA9C6C8 = 1;
  return result;
}

uint64_t sub_1DCB1D108()
{
  return swift_deallocObject();
}

uint64_t sub_1DCB1D118()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DCB1D120()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB1D1E8(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAAB288);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB1FD1C();
  sub_1DCB892B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

void sub_1DCB1D2C8()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAAB308);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB20164();
  sub_1DC89D5E4();
  sub_1DC881C58();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC8821D0();
    sub_1DCB88F18();
  }
  uint64_t v4 = sub_1DC8D5378();
  v5(v4);
  sub_1DC89DCC4();
  sub_1DC88D674();
}

void sub_1DCB1D498()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAAB318);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB20164();
  sub_1DCB89298();
  if (!v0)
  {
    LOBYTE(v8) = 0;
    sub_1DC881CA4();
    sub_1DCB20474();
    sub_1DC8822B0();
    sub_1DCB20474();
    uint64_t v6 = sub_1DC8CD878();
    v7(v6);
    *(_OWORD *)uint64_t v4 = v8;
    *(void *)(v4 + 16) = v9;
    *(void *)(v4 + 24) = v10;
    *(_OWORD *)(v4 + 32) = v11;
    *(unsigned char *)(v4 + 48) = v12;
    *(unsigned char *)(v4 + 49) = v13;
    *(unsigned char *)(v4 + 50) = v14;
    *(unsigned char *)(v4 + 51) = v15;
    *(unsigned char *)(v4 + 52) = v16;
    *(unsigned char *)(v4 + 53) = v17;
    *(void *)(v4 + 56) = v18;
    *(unsigned char *)(v4 + 64) = v19;
  }
  sub_1DC8818D0((uint64_t)v2);
  sub_1DC89DCC4();
  sub_1DC88D674();
}

uint64_t sub_1DCB1D634()
{
  return sub_1DCB891D8();
}

uint64_t sub_1DCB1D6C8(float *a1, float *a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *((void *)a1 + 5);
  float v4 = a1[12];
  uint64_t v5 = *(void *)a2;
  float v6 = a2[12];
  uint64_t v11 = *((void *)a2 + 5);
  v12[0] = v2;
  v12[1] = *((void *)a1 + 1);
  long long v13 = *((_OWORD *)a1 + 1);
  uint64_t v14 = *((void *)a1 + 4);
  uint64_t v15 = v3;
  v8[0] = v5;
  v8[1] = *((void *)a2 + 1);
  long long v9 = *((_OWORD *)a2 + 1);
  uint64_t v10 = *((void *)a2 + 4);
  return static TimeRange.== infix(_:_:)((uint64_t)v12, (uint64_t)v8) & (v4 == v6);
}

uint64_t sub_1DCB1D758(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C6C656269636564 && a2 == 0xEC0000006C657665)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCB1D86C(char a1)
{
  if (a1) {
    return 0x4C6C656269636564;
  }
  else {
    return 0x676E6152656D6974;
  }
}

void sub_1DCB1D8B0(void *a1)
{
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAAB2B0);
  sub_1DC89D4E0();
  uint64_t v7 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB1FD68();
  sub_1DC89D5E4();
  sub_1DC89C64C();
  sub_1DCB88F18();
  if (!v6) {
    sub_1DCB88EF8();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v3);
  sub_1DC89DCC4();
}

uint64_t sub_1DCB1DA1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAAB298);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB1FD68();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC89C600();
    sub_1DCB88DF8();
    sub_1DCB88DD8();
    int v7 = v6;
    uint64_t v8 = sub_1DC99BA44();
    v9(v8);
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v15;
    *(void *)(a2 + 40) = v16;
    *(_DWORD *)(a2 + 48) = v7;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCB1DBCC(uint64_t a1)
{
  unint64_t v2 = sub_1DCB1FD1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB1DC08(uint64_t a1)
{
  unint64_t v2 = sub_1DCB1FD1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB1DC48(void *a1)
{
  return sub_1DCB1D1E8(a1);
}

uint64_t sub_1DCB1DC60(uint64_t a1)
{
  unint64_t v2 = sub_1DCB20164();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB1DC9C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB20164();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCB1DCD8()
{
}

void sub_1DCB1DCF0()
{
}

uint64_t sub_1DCB1DD08()
{
  return sub_1DCB1D86C(*v0);
}

uint64_t sub_1DCB1DD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB1D758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB1DD38(uint64_t a1)
{
  unint64_t v2 = sub_1DCB1FD68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB1DD74(uint64_t a1)
{
  unint64_t v2 = sub_1DCB1FD68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB1DDB8()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB1DE94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCB1DA1C(a1, a2);
}

void sub_1DCB1DEAC(void *a1)
{
}

uint64_t sub_1DCB1DEC8()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1DCB1DF58;
  return sub_1DC977FC0();
}

uint64_t sub_1DCB1DF58(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC8BA85C();
  *int v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  v5[4] = a1;
  v5[5] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1DC8C67E4, 0, 0);
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(void))((char *)&dword_1EAAA2788 + dword_1EAAA2788);
    long long v9 = (void *)swift_task_alloc();
    v5[6] = v9;
    *long long v9 = v7;
    v9[1] = sub_1DC8D2460;
    return v11();
  }
}

uint64_t sub_1DCB1E0C0(uint64_t a1, uint64_t a2)
{
  sub_1DCAD2DD0();
  _OWORD v4[3] = sub_1DC87E988(&qword_1EAAA4280);
  _OWORD v4[4] = sub_1DCB200F0();
  v4[0] = a2;
  swift_retain();
  sub_1DCAD2E10(v4);
  swift_release();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DCB1E148()
{
  sub_1DC8867A8();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8D2674;
  return sub_1DCB1DEC8();
}

uint64_t sub_1DCB1E1E0(uint64_t a1)
{
  return sub_1DCB1E0C0(a1, *v1);
}

uint64_t sub_1DCB1E1FC()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1DC8D27F4;
  return sub_1DCB1E148();
}

id sub_1DCB1E290@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[5];
  int v8 = *((_DWORD *)a1 + 12);
  type metadata accessor for SNLKFSResult();
  v10[0] = v4;
  v10[1] = a1[1];
  _OWORD v10[2] = v5;
  _OWORD v10[3] = v6;
  void v10[4] = a1[4];
  v10[5] = v7;
  int v11 = v8;
  id result = sub_1DC8771E8((uint64_t)v10);
  *a2 = result;
  return result;
}

void sub_1DCB1E324()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAAB218);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DCB2045C(v13);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  uint64_t v6 = sub_1DC881A8C(v2, v4);
  sub_1DCB2045C(v12);
  uint64_t v7 = type metadata accessor for SNLKFSResult();
  void v11[2] = v13;
  sub_1DC882264((uint64_t)v13);
  uint64_t v8 = sub_1DC9EB114((uint64_t)v6, v12, v7, sub_1DCB1FADC, (uint64_t)v11, v4, v7, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    *(void *)&v12[0] = v8;
    sub_1DC87E988(&qword_1EAAAB220);
    sub_1DC88CF34(&qword_1EAAAB228, &qword_1EAAAB220);
    sub_1DCB873D8();
    swift_release();
    sub_1DC88CF34((unint64_t *)&unk_1EAAAB230, &qword_1EAAAB218);
    sub_1DCB873A8();
    uint64_t v9 = sub_1DC8D5378();
    v10(v9);
  }
  sub_1DC89DCC4();
  sub_1DC88D674();
}

void sub_1DCB1E514()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v25 = sub_1DC87E988(&qword_1EAA9E870);
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  uint64_t v26 = sub_1DC87E988(&qword_1EAAAB240);
  sub_1DC89D4E0();
  uint64_t v28 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC8A22D0();
  uint64_t v12 = v11 - v10;
  uint64_t v27 = sub_1DC87E988((uint64_t *)&unk_1EAAAB248);
  sub_1DC89D4E0();
  uint64_t v29 = v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCB2045C(v31);
  uint64_t v17 = swift_allocObject();
  sub_1DCB2045C((void *)(v17 + 16));
  sub_1DC8B9960(v1, (uint64_t)v30);
  uint64_t v18 = swift_allocObject();
  sub_1DC8BA1CC(v30, v18 + 16);
  memcpy((void *)(v18 + 56), v31, 0x41uLL);
  char v19 = (void *)swift_allocObject();
  void v19[2] = sub_1DCB1FB40;
  v19[3] = v17;
  v19[4] = sub_1DCB1FBAC;
  v19[5] = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1DC8CB980;
  *(void *)(v20 + 24) = v19;
  sub_1DC882264((uint64_t)v31);
  sub_1DC882264((uint64_t)v31);
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAA9ED90);
  sub_1DC88CF34((unint64_t *)&unk_1EAA9E890, (uint64_t *)&unk_1EAA9ED90);
  sub_1DCB87378();
  type metadata accessor for SNLKFSResult();
  sub_1DC88CF34(&qword_1EAA9EDA0, &qword_1EAA9E870);
  uint64_t v21 = v25;
  sub_1DCB874A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v21);
  swift_release();
  swift_release();
  sub_1DC88CF34(&qword_1EAAAB258, &qword_1EAAAB240);
  uint64_t v22 = v26;
  sub_1DCB873D8();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v12, v22);
  sub_1DC88CF34(&qword_1EAAAB260, (uint64_t *)&unk_1EAAAB248);
  uint64_t v23 = v27;
  sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v23);
  sub_1DC88D674();
}

uint64_t sub_1DCB1E900()
{
  uint64_t v0 = (objc_class *)type metadata accessor for SNMeasureLKFSRequest();
  v4.receiver = objc_allocWithZone(v0);
  v4.Class super_class = v0;
  id v1 = objc_msgSendSuper2(&v4, sel_init);
  uint64_t v2 = sub_1DCB1E978();

  return v2;
}

uint64_t sub_1DCB1E978()
{
  if (qword_1EAA9C6D0 != -1) {
    swift_once();
  }
  if (byte_1EAA9C6C8)
  {
    type metadata accessor for SNAudioLevelMeasurer();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001ALL, 0x80000001DCB91A50);
    return swift_willThrow();
  }
  return result;
}

id sub_1DCB1EA54()
{
  uint64_t v0 = (objc_class *)type metadata accessor for SNMeasureLKFSRequest();
  v2.receiver = objc_allocWithZone(v0);
  v2.Class super_class = v0;
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_1DCB1EAA0@<X0>(void *a1@<X0>, const void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1DC881A8C(a1, v6);
  memcpy(__dst, a2, 0x41uLL);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 8))(__dst, v6, v7);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

float sub_1DCB1EB30@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR___SNLKFSResult_impl;
  uint64_t v3 = *(void *)(v2 + 40);
  float result = *(float *)(v2 + 48);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v2 + 16);
  *(void *)(a2 + 32) = *(void *)(v2 + 32);
  *(void *)(a2 + 40) = v3;
  *(float *)(a2 + 48) = result;
  return result;
}

id SNMeasureLKFSRequest.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v4.receiver = objc_allocWithZone(ObjectType);
  v4.Class super_class = ObjectType;
  id result = objc_msgSendSuper2(&v4, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNMeasureLKFSRequest.hash.getter()
{
  return sub_1DCB891F8();
}

uint64_t SNMeasureLKFSRequest.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v7);
  if (!v8) {
    return 0;
  }
  sub_1DC87E9CC(&v7, v6);
  sub_1DC87E9DC((uint64_t)v6, (uint64_t)v5);
  uint64_t v2 = swift_dynamicCast();
  if (v2) {

  }
  sub_1DC8818D0((uint64_t)v6);
  return v2;
}

id SNMeasureLKFSRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNMeasureLKFSRequest.init(coder:)(a1);
}

id SNMeasureLKFSRequest.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  uint64_t v6 = sub_1DC8CF80C();
  sub_1DC87E470(v6, v7, (uint64_t)a1);

  v10.receiver = objc_allocWithZone(ObjectType);
  v10.Class super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, sel_init);

  swift_getObjectType();
  sub_1DC8CF7EC();
  return v8;
}

Swift::Void __swiftcall SNMeasureLKFSRequest.encode(with:)(NSCoder with)
{
  uint64_t v2 = sub_1DC8CF80C();
  sub_1DC87C8A0(v2, v3, v1);
}

uint64_t static SNMeasureLKFSRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNMeasureLKFSRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DCB1EFF8()
{
  return sub_1DCB1E978();
}

uint64_t type metadata accessor for SNMeasureLKFSRequest()
{
  return self;
}

uint64_t method lookup function for SNMeasureLKFSRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNMeasureLKFSRequest);
}

id sub_1DCB1F050(double a1)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = self;
  *(void *)&long long v33 = 0;
  id v4 = sub_1DCB6B73C(v3, (uint64_t)&v33);
  if (!v4)
  {
    id v14 = (id)v33;
    sub_1DCB86898();

    swift_willThrow();
    return v4;
  }
  id v5 = (id)v33;
  uint64_t v6 = (void *)sub_1DCB87908();
  *(void *)&long long v33 = 0;
  id v7 = sub_1DCB68494(v3, v4, v6, (uint64_t)&v33);

  if (!v7)
  {
    id v15 = (id)v33;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_27;
  }
  id v8 = (id)v33;
  uint64_t v9 = (void *)sub_1DCB87908();
  *(void *)&long long v33 = 0;
  id v10 = sub_1DCB68964(v3, v4, v9, 1, (uint64_t)&v33);

  if (!v10)
  {
    id v16 = (id)v33;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_27;
  }
  id v11 = (id)v33;
  uint64_t v12 = (void *)sub_1DCB203D4();
  int v13 = sub_1DCA89B70(0x6D6C7073uLL, 0xE400000000000000);
  if (v1)
  {

LABEL_6:
LABEL_27:

    return v4;
  }
  id v32 = 0;
  LODWORD(v33) = 1635083896;
  DWORD1(v33) = v13;
  *((void *)&v33 + 1) = 1634758764;
  int v34 = 0;
  id v17 = sub_1DCB69FFC(v3, v4, v12, 1, 1, &v33, (uint64_t)&v32);

  if (!v17)
  {
    id v28 = v32;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_6;
  }
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (a1 <= -1.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (a1 >= 4294967300.0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1DCB20404((uint64_t)v32);
  uint64_t v18 = sub_1DCB203A4();
  if (!sub_1DCB6B83C(v18, v19, v7, v17, 0, 0, v20, v21))
  {
    id v29 = v32;
    sub_1DCB86898();

LABEL_26:
    swift_willThrow();

    goto LABEL_27;
  }
  sub_1DCB20404((uint64_t)v32);
  uint64_t v22 = sub_1DCB203A4();
  if (!sub_1DCB6B83C(v22, v23, v17, v10, 0, 0, v24, v25))
  {
    id v30 = v32;
    sub_1DCB86898();

    goto LABEL_26;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  if (a1 >= 9.22337204e18) {
    goto LABEL_33;
  }
  id v26 = v32;
  sub_1DCB5EC24((uint64_t)v4);
  sub_1DCB5F1F8((uint64_t)v4);
  if (!sub_1DCB20440((uint64_t)v17)
    || (sub_1DCB20440((uint64_t)v17) & 1) == 0
    || (sub_1DCB20440((uint64_t)v17) & 1) == 0)
  {
    sub_1DC8A1D40();
    swift_allocError();
    *uint64_t v27 = 5;
    swift_willThrow();
  }
  return v4;
}

int64_t sub_1DCB1F460(void *a1, int64_t a2, void (*a3)(void), int64_t a4)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = self;
  v31.start.CMTimeValue value = 0;
  id v9 = sub_1DCB6C41C(v8, a1, (uint64_t)&v31);
  if (!v9)
  {
    id v27 = (id)v31.start.value;
    sub_1DCB86898();

    swift_willThrow();
    return a2;
  }
  id v10 = v9;
  id v11 = (id)v31.start.value;
  int64_t v12 = sub_1DCB89168();
  int32_t v13 = sub_1DCB5C99C((uint64_t)a1);
  if (v13 < 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
  CMTimeMake(&v31.start, v12, v13);
  CMTimeValue value = v31.start.value;
  uint64_t v15 = *(void *)&v31.start.timescale;
  CMTimeEpoch epoch = v31.start.epoch;
  int32_t v17 = sub_1DCB5C99C((uint64_t)a1);
  if (v17 < 0) {
    goto LABEL_12;
  }
  CMTimeMake(&v31.start, a2, v17);
  CMTimeValue v18 = v31.start.value;
  CMTimeEpoch v19 = v31.start.epoch;
  uint64_t v20 = (objc_class *)type metadata accessor for SNLKFSResult();
  uint64_t v21 = *(void *)&v31.start.timescale;
  uint64_t v22 = (char *)objc_msgSend(objc_allocWithZone(v20), sel_init);
  duration.CMTimeEpoch epoch = v19;
  start.CMTimeValue value = value;
  *(void *)&start.CMTimeScale timescale = v15;
  start.CMTimeEpoch epoch = epoch;
  duration.CMTimeValue value = v18;
  *(void *)&duration.CMTimeScale timescale = v21;
  CMTimeRangeMake(&v31, &start, &duration);
  a2 = a4;
  CMTimeRange v39 = v31;
  a3();
  if (v4)
  {
  }
  else
  {
    uint64_t v23 = sub_1DCB883C8();
    ((void (*)(uint64_t))a3)(v23);
    sub_1DCB883D8();
    uint64_t v24 = v38;
    uint64_t v25 = &v22[OBJC_IVAR___SNLKFSResult_impl];
    *(void *)uint64_t v25 = v34;
    *((void *)v25 + 1) = v35;
    *((_OWORD *)v25 + 1) = v36;
    *((void *)v25 + 4) = v37;
    *((void *)v25 + 5) = v24;
    sub_1DCB2FD9C((uint64_t)a1, 7, 0, 0);
    *((_DWORD *)v25 + 12) = v26;
    sub_1DC87E988(&qword_1EAA9C720);
    CMTimeValue v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1DCBB8670;
    *(void *)(v29 + 32) = v22;
    v31.start.CMTimeValue value = v29;
    sub_1DCB87C68();
    a2 = v31.start.value;
  }
  return a2;
}

id sub_1DCB1F728()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DCB1FC74();
  swift_allocError();
  return (id)swift_willThrow();
}

void sub_1DCB1F784(int a1, double a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = swift_allocObject();
  *(double *)(v7 + 16) = a2;
  *(_DWORD *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = v6;
  swift_retain();
  uint64_t v8 = sub_1DC8A12D0();
  swift_release();
  if (!v3)
  {
    id v9 = (void *)v2[2];
    _OWORD v2[2] = v8;
  }
}

id sub_1DCB1F854@<X0>(void *a1@<X8>, double a2@<D0>)
{
  id result = sub_1DCB1F050(a2);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

id sub_1DCB1F884()
{
  id result = sub_1DCB1F728();
  if (!v0)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)sub_1DCB203D4();
    id v4 = sub_1DCB60550(v2, v3);

    return v4;
  }
  return result;
}

uint64_t type metadata accessor for SNAudioLevelMeasurer()
{
  return self;
}

void type metadata accessor for AudioLevel.AudioSourceAgnosticRequest()
{
}

void type metadata accessor for AudioLevel()
{
}

uint64_t sub_1DCB1F924(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 52)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCB1F944(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(void *)id result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 52) = v3;
  return result;
}

void type metadata accessor for AudioLevel.Result()
{
}

unint64_t sub_1DCB1F98C(uint64_t a1)
{
  unint64_t result = sub_1DC88303C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCB1F9B4(uint64_t a1)
{
  unint64_t result = sub_1DC882FF0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCB1F9E0()
{
  unint64_t result = qword_1EAAAB208;
  if (!qword_1EAAAB208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB208);
  }
  return result;
}

unint64_t sub_1DCB1FA30()
{
  unint64_t result = qword_1EAAAB210;
  if (!qword_1EAAAB210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB210);
  }
  return result;
}

int64_t sub_1DCB1FA7C(void *a1, int64_t a2, void (*a3)(void), int64_t a4)
{
  return sub_1DCB1F460(a1, a2, a3, a4);
}

id sub_1DCB1FA94()
{
  return sub_1DCB1F884();
}

void sub_1DCB1FAAC(int a1, double a2)
{
}

id sub_1DCB1FAC4()
{
  return sub_1DCB1F728();
}

uint64_t sub_1DCB1FADC()
{
  return sub_1DCB1E900();
}

uint64_t sub_1DCB1FAF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1DCB1FB40()
{
  return sub_1DCB1EA54();
}

uint64_t sub_1DCB1FB5C()
{
  sub_1DC8818D0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCB1FBAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCB1EAA0((void *)(v1 + 16), (const void *)(v1 + 56), a1);
}

uint64_t sub_1DCB1FBCC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB1FC0C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB1FC44@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCA18898(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1DCB1FC74()
{
  unint64_t result = qword_1EAAAB280;
  if (!qword_1EAAAB280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB280);
  }
  return result;
}

uint64_t sub_1DCB1FCC0()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1DCB1FCF8@<X0>(void *a1@<X8>)
{
  return sub_1DCB1F854(a1, *(double *)(v1 + 16));
}

unint64_t sub_1DCB1FD1C()
{
  unint64_t result = qword_1EAAAB290;
  if (!qword_1EAAAB290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB290);
  }
  return result;
}

unint64_t sub_1DCB1FD68()
{
  unint64_t result = qword_1EAAAB2A0;
  if (!qword_1EAAAB2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB2A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioLevel.Result.CodingKeys()
{
  return &type metadata for AudioLevel.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for AudioLevel.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for AudioLevel.AudioSourceAgnosticRequest.CodingKeys;
}

unsigned char *sub_1DCB1FDD8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCB1FE74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SNAudioLevelMeasurer.DomainError()
{
}

void type metadata accessor for AudioLevel.Session()
{
}

void type metadata accessor for AudioLevel.Request()
{
}

unint64_t sub_1DCB1FEC4()
{
  unint64_t result = qword_1EAAAB2C0;
  if (!qword_1EAAAB2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB2C0);
  }
  return result;
}

unint64_t sub_1DCB1FF14()
{
  unint64_t result = qword_1EAAAB2C8;
  if (!qword_1EAAAB2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB2C8);
  }
  return result;
}

unint64_t sub_1DCB1FF64()
{
  unint64_t result = qword_1EAAAB2D0;
  if (!qword_1EAAAB2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB2D0);
  }
  return result;
}

unint64_t sub_1DCB1FFB4()
{
  unint64_t result = qword_1EAAAB2D8;
  if (!qword_1EAAAB2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB2D8);
  }
  return result;
}

unint64_t sub_1DCB20004()
{
  unint64_t result = qword_1EAAAB2E0;
  if (!qword_1EAAAB2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB2E0);
  }
  return result;
}

unint64_t sub_1DCB20054()
{
  unint64_t result = qword_1EAAAB2E8;
  if (!qword_1EAAAB2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB2E8);
  }
  return result;
}

unint64_t sub_1DCB200A4()
{
  unint64_t result = qword_1EAAAB2F0;
  if (!qword_1EAAAB2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB2F0);
  }
  return result;
}

unint64_t sub_1DCB200F0()
{
  unint64_t result = qword_1EAAAB300;
  if (!qword_1EAAAB300)
  {
    sub_1DC8863A8(&qword_1EAAA4280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB300);
  }
  return result;
}

unint64_t sub_1DCB20164()
{
  unint64_t result = qword_1EAAAB310;
  if (!qword_1EAAAB310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB310);
  }
  return result;
}

unsigned char *_s13SoundAnalysis10AudioLevelV6ResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB2027CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioLevel.Request.CodingKeys()
{
  return &type metadata for AudioLevel.Request.CodingKeys;
}

unint64_t sub_1DCB202B8()
{
  unint64_t result = qword_1EAAAB330;
  if (!qword_1EAAAB330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB330);
  }
  return result;
}

unint64_t sub_1DCB20308()
{
  unint64_t result = qword_1EAAAB338;
  if (!qword_1EAAAB338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB338);
  }
  return result;
}

unint64_t sub_1DCB20358()
{
  unint64_t result = qword_1EAAAB340;
  if (!qword_1EAAAB340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB340);
  }
  return result;
}

uint64_t sub_1DCB203A4()
{
  return v0;
}

uint64_t sub_1DCB203D4()
{
  return sub_1DCB87908();
}

double sub_1DCB20404(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_1DCB6BA88(v1, 9600, 1, (uint64_t)va);
}

uint64_t sub_1DCB20440(uint64_t a1)
{
  return sub_1DCB5AAB4(a1);
}

void *sub_1DCB2045C(void *a1)
{
  return memcpy(a1, v1, 0x41uLL);
}

uint64_t sub_1DCB20474()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCB20494(unint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = v1;
  if (v4)
  {
    unsigned int v6 = (void *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DCB20A18(v6, v30);
      uint64_t v7 = (void *)v30[0];
      if ((a1 & 0x8000000000000000) != 0)
      {
        if ((v30[0] & 0x8000000000000000) == 0) {
          goto LABEL_9;
        }
        uint64_t v7 = (void *)(v30[0] & 0x7FFFFFFFFFFFFFFFLL);
        sub_1DCA6C540();
        id v8 = (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
      }
      else
      {
        if ((v30[0] & 0x8000000000000000) != 0) {
          goto LABEL_9;
        }
        sub_1DCA6C540();
        id v8 = (id)a1;
      }
      id v9 = v8;
      id v10 = v7;
      char v11 = sub_1DCB886A8();

      if (v11)
      {
        sub_1DCB20AE0(v30, &v31);
        goto LABEL_14;
      }
LABEL_9:
      sub_1DCB20A50(v30);
      v6 += 3;
      if (!--v4) {
        goto LABEL_12;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 1;
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v12 = v5;
  if (v32 || v33 != 1)
  {
    sub_1DCB20AE0(&v31, &v34);
    uint64_t v3 = MEMORY[0x1E01A9AE0](v35);
    sub_1DCB20A50(&v34);
    if (v3) {
      goto LABEL_20;
    }
  }
  else
  {
    sub_1DCB20A80((uint64_t)&v31);
  }
  uint64_t v13 = v36;
  uint64_t v14 = sub_1DC9EB5FC(a1);
  if (v13) {
    return v3;
  }
  uint64_t v3 = v14;
  uint64_t v36 = 0;
  unint64_t v34 = a1;
  v35[1] = v15;
  swift_unknownObjectWeakInit();
  sub_1DC87E988((uint64_t *)&unk_1EAA9C800);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DCBB93B0;
  sub_1DCB20A18(&v34, (void *)(v16 + 32));
  uint64_t v31 = v16;
  id v17 = (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
  swift_bridgeObjectRetain();
  sub_1DCB18AF4();
  uint64_t v18 = v31;
  sub_1DCB20A50(&v34);
  *(void *)(v5 + 16) = v18;
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  v30[0] = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(v19 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v21)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    *(void *)(v12 + 16) = v20;
    swift_bridgeObjectRelease();
    return v3;
  }
  uint64_t v28 = v3;
  uint64_t v29 = v5;
  unint64_t v23 = 0;
  uint64_t v24 = (void *)(v19 + 32);
  while (v23 < *(void *)(v19 + 16))
  {
    sub_1DCB20A18(v24, &v34);
    uint64_t v25 = MEMORY[0x1E01A9AE0](v35);
    swift_unknownObjectRelease();
    if (v25)
    {
      sub_1DCB20AE0(&v34, &v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DC89813C();
      }
      uint64_t v26 = v30[0];
      unint64_t v27 = *(void *)(v30[0] + 16);
      if (v27 >= *(void *)(v30[0] + 24) >> 1)
      {
        sub_1DC89813C();
        uint64_t v26 = v30[0];
      }
      *(void *)(v26 + 16) = v27 + 1;
      uint64_t result = (uint64_t)sub_1DCB20AE0(&v31, (void *)(v26 + 24 * v27 + 32));
    }
    else
    {
      uint64_t result = (uint64_t)sub_1DCB20A50(&v34);
    }
    ++v23;
    v24 += 3;
    if (v21 == v23)
    {
      uint64_t v12 = v29;
      uint64_t v20 = v30[0];
      uint64_t v3 = v28;
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SNAudioProcessorCache()
{
  return self;
}

uint64_t destroy for SNAudioProcessorCache.Entry(void *a1)
{
  return swift_unknownObjectWeakDestroy();
}

void *initializeWithCopy for SNAudioProcessorCache.Entry(void *a1, void *a2)
{
  uint64_t v4 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  id v5 = v4;
  swift_unknownObjectWeakCopyInit();
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for SNAudioProcessorCache.Entry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v5 = *a1;
  *a1 = *a2;
  unsigned int v6 = (void *)(v5 & 0x7FFFFFFFFFFFFFFFLL);
  id v7 = v4;

  swift_unknownObjectWeakCopyAssign();
  a1[2] = a2[2];
  return a1;
}

void *initializeWithTake for SNAudioProcessorCache.Entry(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeInit();
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for SNAudioProcessorCache.Entry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;

  swift_unknownObjectWeakTakeAssign();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for SNAudioProcessorCache.Entry(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else if ((*(void *)(a1 + 16) & 0xF000000000000007) != 0)
    {
      int v2 = *(_DWORD *)(a1 + 8) & 0x7FFFFFFF;
    }
    else
    {
      int v2 = -1;
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SNAudioProcessorCache.Entry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      *(void *)(result + 16) = 1;
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAudioProcessorCache.Entry()
{
  return &type metadata for SNAudioProcessorCache.Entry;
}

void *sub_1DCB20A18(void *a1, void *a2)
{
  return a2;
}

void *sub_1DCB20A50(void *a1)
{
  return a1;
}

uint64_t sub_1DCB20A80(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAA9C750);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1DCB20AE0(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_1DCB20B18()
{
  return *(unsigned int *)(v0
                         + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames);
}

uint64_t sub_1DCB20B28()
{
  return *(unsigned int *)(v0 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames);
}

void sub_1DCB20B38(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  uint64_t v5 = (void *)v4(ObjectType, a2);
  id v6 = objc_msgSend(v5, sel_inputDescriptionsByName);

  sub_1DC8CFEF4();
  uint64_t v7 = sub_1DCB877B8();

  if (*(void *)(v7 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1DC9A4508(v7);
  uint64_t v9 = v8;
  char v11 = v10;
  swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_10:
    type metadata accessor for SNError();
    sub_1DC8E7B68();
    sub_1DC931D18(v21, v22, (uint64_t)"SNSoundPrintFeatureExtractor models must have one input feature");
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v11, sel_multiArrayConstraint);

  if (!v12)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    uint64_t v25 = "SNSoundPrintFeatureExtractor model must have an MLMultiArray input feature";
LABEL_14:
    sub_1DC931D18(v23, v24, (uint64_t)v25);
    swift_willThrow();

    return;
  }
  uint64_t v13 = (void *)v4(ObjectType, a2);
  id v14 = objc_msgSend(v13, sel_outputDescriptionsByName);

  uint64_t v15 = sub_1DCB877B8();
  if (*(void *)(v15 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_1DC9A4508(v15);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!v17)
  {
LABEL_13:
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    uint64_t v25 = "SNSoundPrintFeatureExtractor models must have one output feature";
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v19, sel_multiArrayConstraint);

  if (!v20)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC931D18(v26, v27, (uint64_t)"SNSoundPrintFeatureExtractor model must have an MLMultiArray output feature");
    swift_willThrow();
  }
}

id sub_1DCB20DF4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v11 = v5;
  sub_1DCB20B38(a1, a2);
  id v12 = (uint64_t *)&v11[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_model];
  *id v12 = a1;
  v12[1] = a2;
  *(_DWORD *)&v11[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames] = a3;
  *(_DWORD *)&v11[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames] = a4;
  swift_unknownObjectRetain();

  v15.receiver = v11;
  v15.Class super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_unknownObjectRelease();
  return v13;
}

uint64_t sub_1DCB20F28()
{
  swift_getObjectType();
  sub_1DC931D40();
  v0();
  sub_1DC91ACCC();
  uint64_t v1 = sub_1DCB887E8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1DCB89278() ^ v1;
  return v2 ^ sub_1DCB89278();
}

BOOL sub_1DCB20FCC(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)v16);
  if (v17)
  {
    if (swift_dynamicCast())
    {
      swift_getObjectType();
      sub_1DC931D40();
      uint64_t v4 = v3();
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)&v15[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_model + 8];
      uint64_t ObjectType = swift_getObjectType();
      if (v4 == (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7) && v6 == v9)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v11 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0)
        {
LABEL_13:

          return 0;
        }
      }
      if (*(_DWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames) == *(_DWORD *)&v15[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames])
      {
        int v12 = *(_DWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames);
        int v13 = *(_DWORD *)&v15[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames];

        return v12 == v13;
      }
      goto LABEL_13;
    }
  }
  else
  {
    sub_1DC881978((uint64_t)v16);
  }
  return 0;
}

void sub_1DCB211B8()
{
}

uint64_t type metadata accessor for SNSoundPrintFeatureExtractorConfiguration()
{
  return self;
}

uint64_t sub_1DCB2122C()
{
  return sub_1DCB20B18();
}

uint64_t sub_1DCB21250()
{
  return sub_1DCB20B28();
}

uint64_t sub_1DCB21274(void *a1, unsigned __int8 *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2;
}

void sub_1DCB212B0(void *a1)
{
}

uint64_t sub_1DCB212CC(unint64_t a1)
{
  if (a1 >> 62)
  {
    while (2)
    {
      sub_1DCAF0004();
      uint64_t v9 = sub_1DCB88CC8();
      swift_bridgeObjectRelease();
      if (v9)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_1DCB88CC8();
        if (!v10)
        {
LABEL_21:
          swift_bridgeObjectRelease();
          return 1;
        }
        uint64_t v1 = v10;
        if (v10 >= 1)
        {
LABEL_4:
          uint64_t v3 = 0;
          uint64_t v4 = 1;
          do
          {
            if ((a1 & 0xC000000000000001) != 0) {
              id v5 = (id)MEMORY[0x1E01A7AE0](v3, a1);
            }
            else {
              id v5 = *(id *)(a1 + 8 * v3 + 32);
            }
            uint64_t v6 = v5;
            uint64_t v7 = (uint64_t)objc_msgSend(v5, sel_integerValue);

            uint64_t v8 = v4 * v7;
            if ((unsigned __int128)(v4 * (__int128)v7) >> 64 != (v4 * v7) >> 63) {
              goto LABEL_13;
            }
            ++v3;
            v4 *= v7;
          }
          while (v1 != v3);
          swift_bridgeObjectRelease();
          if (v8 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (v8 <= 0x7FFFFFFF) {
              return v8;
            }
            __break(1u);
LABEL_13:
            __break(1u);
            continue;
          }
          __break(1u);
          goto LABEL_21;
        }
        __break(1u);
      }
      break;
    }
  }
  else
  {
    sub_1DCB27304();
    if (v1)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
  }
  return 0;
}

void sub_1DCB21404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = a1 + 40;
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v16 = a1 + 40;
    do
    {
      uint64_t v8 = (uint64_t *)(v6 + 16 * v5);
      unint64_t v9 = v5;
      while (1)
      {
        if (v9 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v11 = *(v8 - 1);
        uint64_t v10 = *v8;
        unint64_t v5 = v9 + 1;
        swift_bridgeObjectRetain();
        sub_1DCA183A0(v11, v10, a2);
        if ((v12 & 1) == 0) {
          break;
        }
        swift_bridgeObjectRelease();
        v8 += 2;
        ++v9;
        if (v4 == v5) {
          goto LABEL_13;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DC897B8C();
      }
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v14 = v13 + 1;
      if (v13 >= *(void *)(v7 + 24) >> 1)
      {
        sub_1DC897B8C();
        unint64_t v14 = v13 + 1;
      }
      *(void *)(v7 + 16) = v14;
      uint64_t v15 = v7 + 16 * v13;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v10;
      uint64_t v6 = v16;
    }
    while (v4 - 1 != v9);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1DCB2156C(void *a1, uint64_t a2)
{
  unsigned int v3 = objc_msgSend(a1, sel_frameLength);
  if (a2 && v3 > a2)
  {
    uint64_t v4 = (char *)objc_msgSend(a1, sel_audioBufferList);
    unsigned int v5 = objc_msgSend(a1, sel_frameLength);
    id v6 = objc_msgSend(a1, sel_format);
    uint64_t v7 = objc_msgSend(v6, sel_streamDescription);

    unsigned int v26 = v7[6];
    uint64_t v28 = MEMORY[0x1E4FBC860];
    if (v5)
    {
      uint64_t v8 = 0;
      uint64_t v25 = (uint64_t *)(v4 + 16);
      while (1)
      {
        id v9 = objc_msgSend(a1, sel_format, v25);
        id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, v9, a2);

        if (!v10) {
          break;
        }
        uint64_t v11 = (unsigned int *)objc_msgSend(v10, sel_mutableAudioBufferList);
        if (v5 >= a2) {
          uint64_t v12 = a2;
        }
        else {
          uint64_t v12 = v5;
        }
        unint64_t v13 = v12 * (unint64_t)v26;
        if ((v13 & 0xFFFFFFFF00000000) != 0)
        {
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          break;
        }
        uint64_t v14 = *v11;
        if (v14)
        {
          uint64_t v15 = (void **)(v11 + 4);
          uint64_t v16 = v25;
          do
          {
            uint64_t v18 = *v16;
            v16 += 2;
            uint64_t v17 = v18;
            if (!v18) {
              goto LABEL_27;
            }
            if (!*v15) {
              goto LABEL_28;
            }
            memmove(*v15, (const void *)(v17 + v8), v13);
            *((_DWORD *)v15 - 1) = v13;
            v15 += 2;
          }
          while (--v14);
        }
        objc_msgSend(v10, sel_setFrameLength_, v12);
        BOOL v19 = __OFADD__(v8, v13);
        v8 += v13;
        if (v19) {
          goto LABEL_25;
        }
        BOOL v20 = v5 >= v12;
        v5 -= v12;
        if (!v20) {
          goto LABEL_26;
        }
        id v21 = v10;
        MEMORY[0x1E01A6BF0]();
        unint64_t v22 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v22 >> 1)
        {
          sub_1DC8AF114(v22);
          sub_1DCB87CB8();
        }
        sub_1DCB87D28();
        sub_1DCB87C68();

        if (!v5) {
          return;
        }
      }
      __break(1u);
    }
  }
  else
  {
    sub_1DC87E988(&qword_1EAA9C720);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1DCBB8670;
    *(void *)(v23 + 32) = a1;
    sub_1DCB87C68();
    id v24 = a1;
  }
}

void sub_1DCB217E4(uint64_t a1@<X8>)
{
  uint64_t v2 = SecTaskCreateFromSelf(0);
  if (v2)
  {
    unsigned int v3 = v2;
    sub_1DCB24184(v2, a1);
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DC8E7B68();
    sub_1DCA14B2C(v4, v5, 2, 0, 0xD000000000000016, 0x80000001DCB9B600);
    swift_willThrow();
  }
}

uint64_t sub_1DCB218A8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_outputDescriptionsByName);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v2 = sub_1DCB877B8();

  unsigned int v3 = (void *)sub_1DC9A4430(v2);
  swift_bridgeObjectRelease();
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  id v4 = objc_msgSend(v3, sel_multiArrayConstraint);

  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  id v5 = objc_msgSend(v4, sel_shape);

  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v6 = sub_1DCB87C38();

  return v6;
}

uint64_t sub_1DCB219B0(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_1DCAF0004();
    sub_1DCB88CC8();
    sub_1DCB2729C();
  }
  else
  {
    sub_1DCB27304();
  }
  if (v1 == 1) {
    return 1;
  }
  BOOL v4 = v1 < 2;
  uint64_t v5 = v1 - 2;
  if (v4) {
    return 0;
  }
  sub_1DC8A42E0(v5, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0) {
    id v6 = (id)MEMORY[0x1E01A7AE0](v5, a1);
  }
  else {
    id v6 = *(id *)(a1 + 8 * v5 + 32);
  }
  uint64_t v7 = v6;
  sub_1DCB22DE0(v6);
  uint64_t v9 = v8;

  return v9;
}

BOOL sub_1DCB21A60(void *a1)
{
  id v2 = objc_msgSend(a1, sel_shapeConstraint);
  unsigned int v3 = (char *)objc_msgSend(v2, sel_sizeRangeForDimension);

  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
  unint64_t v4 = sub_1DCB87C38();

  if (v4 >> 62)
  {
    sub_1DCAF0004();
    sub_1DCB88CC8();
    sub_1DCB2729C();
    if (v3)
    {
LABEL_3:
      BOOL v5 = __OFSUB__(v3, 1);
      id v6 = v3 - 1;
      if (v5)
      {
        __break(1u);
      }
      else
      {
        sub_1DCB27328();
        if (!v1)
        {
          id v7 = *(id *)(v4 + 8 * (void)v6 + 32);
LABEL_6:
          sub_1DCB2729C();
          objc_msgSend(v6, sel_rangeValue);
          uint64_t v9 = v8;

          return v9 > 1;
        }
      }
      MEMORY[0x1E01A7AE0](v6, v4);
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DCB27304();
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1DCB21B6C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_shapeConstraint);
  unsigned int v3 = (char *)objc_msgSend(v2, sel_sizeRangeForDimension);

  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
  unint64_t v4 = sub_1DCB87C38();

  if (!(v4 >> 62))
  {
    sub_1DCB27304();
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1DCAF0004();
  sub_1DCB88CC8();
  sub_1DCB2729C();
  if (!v3) {
    goto LABEL_8;
  }
LABEL_3:
  BOOL v5 = __OFSUB__(v3, 1);
  id v6 = v3 - 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1DCB27328();
  if (v1)
  {
LABEL_11:
    MEMORY[0x1E01A7AE0](v6, v4);
    goto LABEL_6;
  }
  id v7 = *(id *)(v4 + 8 * (void)v6 + 32);
LABEL_6:
  sub_1DCB2729C();
  id v8 = objc_msgSend(v6, sel_rangeValue);

  return v8;
}

uint64_t sub_1DCB21C80(void *a1)
{
  id v1 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v2 = sub_1DCB877B8();

  unsigned int v3 = (void *)sub_1DC9A4430(v2);
  swift_bridgeObjectRelease();
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  id v4 = objc_msgSend(v3, sel_multiArrayConstraint);

  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  id v5 = objc_msgSend(v4, sel_shape);

  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v6 = sub_1DCB87C38();

  return v6;
}

uint64_t sub_1DCB21D88(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_20;
    }
LABEL_16:
    if ((v8 & 0x4000000000000000) == 0)
    {
      uint64_t v1 = *(void *)(v8 + 16);
      uint64_t result = swift_release();
      goto LABEL_18;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    sub_1DCB88CC8();
    sub_1DC8C213C();
    uint64_t result = swift_release_n();
    if (v1 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_18:
    if (v1 <= 0x7FFFFFFF) {
      return v1;
    }
    goto LABEL_22;
  }
  sub_1DCAF0004();
  uint64_t result = sub_1DCB88CC8();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1E01A7AE0](i, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * i + 32);
      }
      id v7 = v6;
      if ((uint64_t)objc_msgSend(v6, sel_integerValue) < 2)
      {
      }
      else
      {
        sub_1DCB88B48();
        sub_1DCB88B78();
        sub_1DCB88B88();
        uint64_t v1 = (uint64_t)&v9;
        sub_1DCB88B58();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v8 = v9;
    if (v9 < 0) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_1DCB21F0C(void *a1, int32_t a2)
{
  uint64_t v5 = sub_1DCB237B8(a1);
  if (!v2)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    id v9 = objc_msgSend(a1, sel_inputDescriptionsByName);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
    uint64_t v10 = sub_1DCB877B8();

    uint64_t v11 = sub_1DC9612B8(v7, v8, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11
      && (id v12 = objc_msgSend(v11, sel_multiArrayConstraint)) != 0
      && (unint64_t v13 = v12,
          id v14 = objc_msgSend(v12, sel_shapeConstraint),
          v13,
          v14))
    {
      sub_1DCB227FC(v14, a2);
    }
    else
    {
      sub_1DC884E74();
      swift_allocError();
      *uint64_t v15 = 0;
      swift_willThrow();
    }
  }
}

CMTimeValue sub_1DCB22068(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3, id a4)
{
  uint64_t v4 = (uint64_t)a4;
  *(void *)&v23.unint64_t timescale = a2;
  v23.CMTimeEpoch epoch = a3;
  v23.CMTimeValue value = a1;
  id v5 = objc_msgSend(a4, sel_type);
  if (v5 == (id)1)
  {
    unint64_t v7 = (unint64_t)&selRef_enumeratedDurations;
    id v8 = objc_msgSend((id)v4, sel_enumeratedDurations);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
    unint64_t timescale = sub_1DCB87C38();

    if (timescale >> 62) {
      goto LABEL_20;
    }
    if (*(void *)((timescale & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        unint64_t v10 = timescale & 0xC000000000000001;
        sub_1DC8A42E0(0, (timescale & 0xC000000000000001) == 0, timescale);
        if ((timescale & 0xC000000000000001) != 0) {
          id v11 = (id)MEMORY[0x1E01A7AE0](0, timescale);
        }
        else {
          id v11 = *(id *)(timescale + 32);
        }
        id v12 = v11;
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_CMTimeValue);
        CMTimeValue value = range.start.value;
        unint64_t timescale = range.start.timescale;

        id v13 = [(id)v4 *(SEL *)v7];
        unint64_t v7 = sub_1DCB87C38();

        if (v7 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_1DCB88CC8();
          sub_1DCB2729C();
          if (!v10)
          {
LABEL_26:
            swift_bridgeObjectRelease();
            return value;
          }
        }
        else
        {
          sub_1DCB27304();
          if (!v10) {
            goto LABEL_26;
          }
        }
        unint64_t v22 = v7 & 0xC000000000000001;
        uint64_t v4 = 4;
        while (1)
        {
          CMTimeValue v21 = value;
          id v14 = v22 ? (id)MEMORY[0x1E01A7AE0](v4 - 4, v7) : *(id *)(v7 + 8 * v4);
          uint64_t v15 = v14;
          uint64_t v16 = v4 - 3;
          if (__OFADD__(v4 - 4, 1)) {
            break;
          }
          unint64_t v17 = v7;
          objc_msgSend(v14, sel_CMTimeValue);
          unint64_t timescale = range.start.timescale;
          char v18 = sub_1DCB88608();

          if ((v18 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            return v21;
          }
          ++v4;
          CMTimeValue value = range.start.value;
          unint64_t v7 = v17;
          if (v16 == v10)
          {
            swift_bridgeObjectRelease();
            return range.start.value;
          }
        }
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_1DCB88CC8();
        swift_bridgeObjectRelease();
      }
      while (v19);
    }
    swift_bridgeObjectRelease();
    return *MEMORY[0x1E4F1F9F8];
  }
  if (v5 != (id)2) {
    return *MEMORY[0x1E4F1F9F8];
  }
  objc_msgSend((id)v4, sel_durationRange);
  CMTime time = v23;
  CMTimeClampToRange(&v24, &time, &range);
  return v24.value;
}

void sub_1DCB223BC(void *a1)
{
  uint64_t v2 = sub_1DCB26E9C(a1);
  if (!v2 || (uint64_t v3 = sub_1DCAC7AC4(v2), swift_bridgeObjectRelease(), !v3))
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for SNModelMetadataUtils();
  uint64_t v4 = sub_1DCB30CCC(a1, MEMORY[0x1E4FBC870]);
  sub_1DCB21404(v3, v4);
}

id sub_1DCB22448()
{
  uint64_t v0 = sub_1DCB22784();
  uint64_t v1 = sub_1DCB22EA4();
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAAAB380);
  id v2 = sub_1DCB238D0(v0, 65568);
  id v3 = sub_1DCB238D0(v1, 65600);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  sub_1DC87E988(&qword_1EAA9C720);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DCBB8670;
  *(void *)(v4 + 32) = v2;
  sub_1DCB87C68();
  id v27 = v2;
  id v5 = sub_1DCB2735C(0x72724169746C754DLL, 0xEF7475706E497961);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DCBB8670;
  *(void *)(v6 + 32) = v3;
  sub_1DCB87C68();
  id v26 = v3;
  sub_1DC8E7B68();
  id v8 = sub_1DCB2735C(0xD000000000000010, v7);
  sub_1DC87E988(&qword_1EAAAB390);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  id v10 = objc_msgSend(v5, sel_name);
  uint64_t v11 = sub_1DCB87938();
  uint64_t v13 = v12;

  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 48) = v5;
  id v14 = v5;
  uint64_t v15 = sub_1DCB877D8();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DCBB93B0;
  id v17 = objc_msgSend(v8, sel_name);
  uint64_t v18 = sub_1DCB87938();
  uint64_t v20 = v19;

  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  *(void *)(v16 + 48) = v8;
  id v21 = v8;
  uint64_t v22 = sub_1DCB877D8();
  id v23 = objc_allocWithZone(MEMORY[0x1E4F1E998]);
  id v24 = sub_1DCA88D70(v15, v22, 0, 0xE000000000000000, 0, 0xE000000000000000, 0);

  return v24;
}

uint64_t sub_1DCB2270C()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  sub_1DCB88B68();
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 12288);
  sub_1DCB27310();
  sub_1DCB27260();
  sub_1DCB27280();
  sub_1DCB88B58();
  return v1;
}

uint64_t sub_1DCB22784()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  sub_1DCB88B68();
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 15600);
  sub_1DCB27310();
  sub_1DCB27260();
  sub_1DCB27280();
  sub_1DCB88B58();
  return v1;
}

void sub_1DCB227FC(void *a1, int32_t a2)
{
  p_CMTime start = (unint64_t)a1;
  id v7 = objc_msgSend(a1, sel_type);
  if (v7 == (id)3)
  {
    id v18 = objc_msgSend((id)p_start, sel_sizeRangeForDimension);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
    p_CMTime start = sub_1DCB87C38();

    if (!(p_start >> 62))
    {
      uint64_t v19 = *(void *)((p_start & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19) {
        goto LABEL_23;
      }
      goto LABEL_40;
    }
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
    if (v47)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1DCB88CC8();
      swift_bridgeObjectRelease();
      if (!v19)
      {
        swift_bridgeObjectRelease();
        sub_1DCB26EF8();
        swift_allocError();
        swift_willThrow();
LABEL_44:
        sub_1DC89C89C(0, (unint64_t *)&unk_1EAAAB3B0);
        sub_1DCB23730();

        return;
      }
LABEL_23:
      BOOL v20 = __OFSUB__(v19, 1);
      uint64_t v21 = v19 - 1;
      if (v20)
      {
        __break(1u);
      }
      else
      {
        sub_1DC8A42E0(v21, (p_start & 0xC000000000000001) == 0, p_start);
        if ((p_start & 0xC000000000000001) == 0)
        {
          id v22 = *(id *)(p_start + 8 * v21 + 32);
LABEL_26:
          id v23 = v22;
          swift_bridgeObjectRelease();
          id v24 = objc_msgSend(v23, sel_rangeValue);
          int64_t v26 = v25;

          if ((a2 & 0x80000000) == 0)
          {
            CMTimeMake(&v57.start, (int64_t)v24, a2);
            CMTimeValue value = v57.start.value;
            CMTimeEpoch epoch = v57.start.epoch;
            uint64_t v29 = *(void *)&v57.start.timescale;
            CMTimeMake(&v57.start, v26, a2);
            CMTime duration = v57.start;
            start.CMTimeValue value = value;
            *(void *)&start.unint64_t timescale = v29;
            start.CMTimeEpoch epoch = epoch;
            CMTimeRangeMake(&v57, &start, &duration);
            CMTimeValue v30 = v57.start.value;
            CMTimeEpoch v31 = v57.start.epoch;
            CMTimeValue v32 = v57.duration.value;
            CMTimeEpoch v33 = v57.duration.epoch;
            uint64_t v34 = *(void *)&v57.start.timescale;
            uint64_t v35 = *(void *)&v57.duration.timescale;
            id v36 = objc_allocWithZone((Class)SNTimeDurationConstraint);
            v57.start.CMTimeValue value = v30;
            *(void *)&v57.start.unint64_t timescale = v34;
            v57.start.CMTimeEpoch epoch = v31;
            v57.duration.CMTimeValue value = v32;
            *(void *)&v57.duration.unint64_t timescale = v35;
            v57.duration.CMTimeEpoch epoch = v33;
            objc_msgSend(v36, sel_initWithDurationRange_, &v57);
            return;
          }
          __break(1u);
          goto LABEL_48;
        }
      }
      id v22 = (id)MEMORY[0x1E01A7AE0](v21, p_start);
      goto LABEL_26;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x1E4F1FA20];
    CMTimeValue v49 = *MEMORY[0x1E4F1FA20];
    CMTimeEpoch v50 = *(void *)(MEMORY[0x1E4F1FA20] + 16);
    CMTimeValue v51 = *(void *)(MEMORY[0x1E4F1FA20] + 24);
    CMTimeEpoch v52 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
    id v53 = objc_allocWithZone((Class)SNTimeDurationConstraint);
    v57.start.CMTimeValue value = v49;
    *(void *)&v57.start.unint64_t timescale = *(void *)(v48 + 8);
    v57.start.CMTimeEpoch epoch = v50;
    v57.duration.CMTimeValue value = v51;
    *(void *)&v57.duration.unint64_t timescale = *(void *)(v48 + 32);
    v57.duration.CMTimeEpoch epoch = v52;
    objc_msgSend(v53, sel_initWithDurationRange_, &v57);
    return;
  }
  if (v7 != (id)2)
  {
    if ((a2 & 0x80000000) == 0)
    {
      CMTimeValue v37 = sub_1DCB88628();
      CMTimeScale v39 = v38;
      CMTimeEpoch v41 = v40;
      unint64_t v42 = HIDWORD(v38);
      uint64_t v43 = MEMORY[0x1E4F1FA10];
      CMTimeValue v44 = *MEMORY[0x1E4F1FA10];
      CMTimeEpoch v45 = *(void *)(MEMORY[0x1E4F1FA10] + 16);
      id v46 = objc_allocWithZone((Class)SNTimeDurationConstraint);
      v57.start.CMTimeValue value = v37;
      v57.start.unint64_t timescale = v39;
      v57.start.CMTimeFlags flags = v42;
      v57.start.CMTimeEpoch epoch = v41;
      v57.duration.CMTimeValue value = v44;
      *(void *)&v57.duration.unint64_t timescale = *(void *)(v43 + 8);
      v57.duration.CMTimeEpoch epoch = v45;
      objc_msgSend(v46, sel_initWithDurationRange_, &v57);
      return;
    }
    __break(1u);
    goto LABEL_42;
  }
  id v8 = objc_msgSend((id)p_start, sel_enumeratedShapes);
  sub_1DC87E988(&qword_1EAA9C8D0);
  uint64_t v3 = sub_1DCB87C38();

  unint64_t v2 = *(void *)(v3 + 16);
  if (v2)
  {
    start.CMTimeValue value = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    p_CMTime start = *(void *)(v3 + 32);
    if (!(p_start >> 62))
    {
      sub_1DCB2737C();
      if (v4)
      {
LABEL_6:
        if (a2 < 0)
        {
LABEL_48:
          __break(1u);
          return;
        }
        id v9 = self;
        uint64_t v10 = 0;
        while (1)
        {
          unint64_t v11 = v4 - 1;
          if (__OFSUB__(v4, 1)) {
            break;
          }
          if ((p_start & 0xC000000000000001) != 0)
          {
            id v12 = (id)MEMORY[0x1E01A7AE0](v11, p_start);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_34;
            }
            if (v11 >= *(void *)((p_start & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_35;
            }
            id v12 = *(id *)(p_start + 8 * v11 + 32);
          }
          uint64_t v13 = v12;
          swift_bridgeObjectRelease();
          objc_msgSend(v13, sel_integerValue);
          v57.start.CMTimeValue value = sub_1DCB88628();
          v57.start.unint64_t timescale = v14;
          v57.start.CMTimeFlags flags = v15;
          v57.start.CMTimeEpoch epoch = v16;
          id v17 = objc_msgSend(v9, sel_valueWithCMTime_, &v57);
          swift_bridgeObjectRelease();

          sub_1DCB88B48();
          uint64_t v4 = *(void *)(start.value + 16);
          sub_1DCB88B78();
          sub_1DCB88B88();
          p_CMTime start = (unint64_t)&start;
          sub_1DCB88B58();
          if (v2 - 1 == v10)
          {
            swift_bridgeObjectRelease();
            goto LABEL_32;
          }
          if (v10 + 1 >= v2) {
            goto LABEL_36;
          }
          p_CMTime start = *(void *)(v3 + 8 * v10 + 40);
          if (p_start >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v4 = sub_1DCB88CC8();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1DCB2737C();
          }
          ++v10;
          if (!v4) {
            goto LABEL_43;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_43:
      swift_bridgeObjectRelease();
      sub_1DC884E74();
      swift_allocError();
      *long long v54 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_44;
    }
LABEL_42:
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_6;
    }
    goto LABEL_43;
  }
  swift_bridgeObjectRelease();
LABEL_32:
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAAAB3B0);
  sub_1DC8C213C();
  sub_1DCB23730();
}

void sub_1DCB22DE0(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedLongLong_, 0xFFFFFFFFLL);
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedLongLong_, 0);
  id v4 = objc_msgSend(a1, sel_compare_, v2);
  id v5 = v2;
  if (v4 != (id)1)
  {
    if (objc_msgSend(a1, sel_compare_, v3) == (id)-1) {
      id v5 = v3;
    }
    else {
      id v5 = a1;
    }
  }
  unint64_t v6 = (unint64_t)objc_msgSend(v5, sel_unsignedLongLongValue);

  if (HIDWORD(v6)) {
    __break(1u);
  }
}

uint64_t sub_1DCB22EA4()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  sub_1DCB88B68();
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 1);
  sub_1DCB27310();
  sub_1DCB27260();
  sub_1DCB27280();
  sub_1DCB88B58();
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 96);
  sub_1DCB27310();
  sub_1DCB27260();
  sub_1DCB27280();
  sub_1DCB88B58();
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 64);
  sub_1DCB27310();
  sub_1DCB27260();
  sub_1DCB27280();
  sub_1DCB88B58();
  return v1;
}

id sub_1DCB22F74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  id v8 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAAB398);
    id v9 = (void *)sub_1DCB87C08();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = 0;
  }
  id v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_featureDescriptionWithName_type_optional_constraints_, v8, a3, a4 & 1, v9);

  return v10;
}

uint64_t sub_1DCB23030(void *a1)
{
  id v1 = objc_msgSend(a1, sel_description);
  sub_1DCB87938();

  sub_1DC91ACCC();
  uint64_t v2 = sub_1DCB887D8();
  swift_bridgeObjectRelease();
  type metadata accessor for SNDetectSoundRequest();
  if (swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    id v3 = (void *)sub_1DC8C7690();
    uint64_t v2 = sub_1DCB87938();

    swift_unknownObjectRelease();
  }
  return v2;
}

void sub_1DCB23140(unint64_t a1, uint64_t a2)
{
  uint64_t v35 = type metadata accessor for KShotSegment(0);
  MEMORY[0x1F4188790](v35);
  id v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v6) {
      break;
    }
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1DC897B8C();
    if (v6 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v33 = a2;
    a2 = 0;
    uint64_t v7 = v43;
    unint64_t v34 = a1 & 0xC000000000000001;
    unint64_t v8 = a1;
    while (v6 != a2)
    {
      if (v34) {
        id v9 = (id)MEMORY[0x1E01A7AE0](a2, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * a2 + 32);
      }
      id v10 = v9;
      uint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      sub_1DCB88A98();
      swift_bridgeObjectRelease();
      uint64_t v41 = 0x3D20656D614E207BLL;
      unint64_t v42 = 0xE900000000000020;
      uint64_t v11 = (uint64_t)v10 + OBJC_IVAR___SNKShotSegment_impl;
      swift_beginAccess();
      sub_1DC890A18(v11, (uint64_t)v5);
      id v12 = &v5[*(int *)(v35 + 20)];
      sub_1DCB86938();
      uint64_t v13 = sub_1DCB86A18();
      (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      uint64_t v14 = *(void *)(v11 + 40);
      unint64_t v15 = *(void *)(v11 + 8);
      uint64_t v16 = *(void *)(v11 + 32);
      long long v17 = *(_OWORD *)(v11 + 16);
      uint64_t v36 = *(void *)v11;
      unint64_t v37 = v15;
      long long v38 = v17;
      uint64_t v39 = v16;
      uint64_t v40 = v14;
      sub_1DCB87988();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();

      uint64_t v18 = v41;
      unint64_t v19 = v42;
      uint64_t v43 = v7;
      unint64_t v21 = *(void *)(v7 + 16);
      unint64_t v20 = *(void *)(v7 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1DC8AF114(v20);
        sub_1DC897B8C();
        uint64_t v7 = v43;
      }
      ++a2;
      *(void *)(v7 + 16) = v21 + 1;
      unint64_t v22 = v7 + 16 * v21;
      *(void *)(v22 + 32) = v18;
      *(void *)(v22 + 40) = v19;
      a1 = v8;
      if (v6 == a2)
      {
        a2 = v33;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1DCB86FE8();
  sub_1DC89F57C(v23, (uint64_t)qword_1EAAFF810);
  sub_1DC8C213C();
  swift_bridgeObjectRetain();
  id v24 = sub_1DCB86FC8();
  os_log_type_t v25 = sub_1DCB88488();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 134218240;
    uint64_t v36 = *(void *)(v7 + 16);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2048;
    uint64_t v36 = a2;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v24, v25, "[Custom Sound Recognition Model Training] Completed segmentation successfully. Segment count: %ld. Exemplar index: %ld.", (uint8_t *)v26, 0x16u);
    sub_1DC8E7728();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  id v27 = sub_1DCB86FC8();
  os_log_type_t v28 = sub_1DCB88488();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v41 = v7;
    sub_1DC87E988(&qword_1EAA9E7F0);
    sub_1DC91AD18();
    uint64_t v30 = sub_1DCB87858();
    uint64_t v41 = sub_1DC9F8920(v30, v31, &v36);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v27, v28, "[Custom Sound Recognition Model Training] Segments: %s).", v29, 0xCu);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id sub_1DCB23730()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
  id v1 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEnumeratedDurations_, v1);

  return v2;
}

uint64_t sub_1DCB237B8(void *a1)
{
  sub_1DCB23C1C(a1, 0);
  uint64_t v2 = v1;
  if (*(void *)(v1 + 16) == 1)
  {
    uint64_t v3 = *(void *)(v1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = type metadata accessor for SNError();
    sub_1DCB88A98();
    sub_1DC8E7B68();
    sub_1DCB87A18();
    MEMORY[0x1E01A6C50](v2, MEMORY[0x1E4FBB1A0]);
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v5 = sub_1DCABC260();
    uint64_t v3 = v4;
    sub_1DCA14B2C(v5, v6, 2, 0, v7, 0xE000000000000000);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v3;
}

id sub_1DCB238D0(uint64_t a1, uint64_t a2)
{
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v3 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_constraintWithShape_dataType_, v3, a2);

  return v4;
}

uint64_t sub_1DCB2395C(unint64_t a1, unsigned int a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v5 = v4 < 2;
  uint64_t v6 = v4 - 2;
  if (v5 || a2 < 2)
  {
    if (a2 == 1)
    {
      id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, sub_1DCB212CC(a1));
LABEL_19:
      uint64_t v18 = v8;
      sub_1DCB22DE0(v8);
      uint64_t v20 = v19;

      return v20;
    }
    return 0;
  }
  sub_1DC8A42E0(v6, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0) {
    id v9 = (id)MEMORY[0x1E01A7AE0](v6, a1);
  }
  else {
    id v9 = *(id *)(a1 + 8 * v6 + 32);
  }
  id v10 = v9;
  id v11 = objc_msgSend(v9, sel_integerValue);

  if (v11 != (id)a2) {
    return 0;
  }
  unsigned int v12 = sub_1DCB212CC(a1);
  if ((v12 & 0x80000000) == 0)
  {
    unsigned int v13 = v12;
    if ((a1 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x1E01A7AE0](v6, a1);
    }
    else {
      id v14 = *(id *)(a1 + 8 * v6 + 32);
    }
    uint64_t v16 = v14;
    unint64_t v17 = (unint64_t)objc_msgSend(v14, sel_unsignedIntegerValue);

    if (v17)
    {
      id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v13 / v17);
      goto LABEL_19;
    }
    __break(1u);
  }
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

void sub_1DCB23C1C(void *a1, char a2)
{
  type metadata accessor for SNModelMetadataUtils();
  id v42 = a1;
  uint64_t v3 = sub_1DCB30D3C(a1, MEMORY[0x1E4FBC870]);
  uint64_t v4 = sub_1DCB05890(v3);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_22:
    long long v38 = &selRef_inputDescriptionsByName;
    if (a2) {
      long long v38 = &selRef_outputDescriptionsByName;
    }
    id v39 = objc_msgSend(v42, *v38, v42);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
    uint64_t v40 = sub_1DCB877B8();

    uint64_t v41 = sub_1DCB30830(v40);
    sub_1DCB26300(v9, (uint64_t)v41);
    sub_1DCB2729C();
    sub_1DCB0F41C();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = v4;
  uint64_t v48 = MEMORY[0x1E4FBC860];
  sub_1DC897B8C();
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = sub_1DCB88968();
    char v8 = 1;
  }
  else
  {
    uint64_t v6 = sub_1DC9A4F30(v3);
    char v8 = v10 & 1;
  }
  uint64_t v45 = v6;
  uint64_t v46 = v7;
  char v47 = v8;
  if ((v5 & 0x8000000000000000) == 0)
  {
    do
    {
      uint64_t v12 = v45;
      uint64_t v11 = v46;
      char v13 = v47;
      uint64_t v14 = sub_1DCB2739C();
      sub_1DC9A4C74(v14, v15, v16, v17);
      uint64_t v19 = v18;
      uint64_t v20 = &v18[OBJC_IVAR___SNModelFeatureConnection_impl + 16];
      uint64_t v21 = 8;
      if (a2) {
        uint64_t v20 = &v18[OBJC_IVAR___SNModelFeatureConnection_impl];
      }
      else {
        uint64_t v21 = 24;
      }
      uint64_t v22 = *(void *)&v18[OBJC_IVAR___SNModelFeatureConnection_impl + v21];
      uint64_t v23 = *(void *)v20;
      swift_bridgeObjectRetain();

      uint64_t v24 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC897B8C();
        uint64_t v24 = v48;
      }
      unint64_t v26 = *(void *)(v24 + 16);
      unint64_t v25 = *(void *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1DC8AF114(v25);
        sub_1DC897B8C();
        uint64_t v24 = v48;
      }
      *(void *)(v24 + 16) = v26 + 1;
      unint64_t v27 = v24 + 16 * v26;
      *(void *)(v27 + 32) = v23;
      *(void *)(v27 + 40) = v22;
      if ((v3 & 0xC000000000000001) != 0)
      {
        if ((v13 & 1) == 0) {
          goto LABEL_26;
        }
        if (sub_1DCB88988()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_1DC87E988((uint64_t *)&unk_1EAAAB810);
        unint64_t v37 = (void (*)(char *, void))sub_1DCB88018();
        sub_1DCB889F8();
        v37(v44, 0);
      }
      else
      {
        int64_t v28 = sub_1DCB2739C();
        int64_t v32 = sub_1DCB360FC(v28, v29, v30, v31);
        uint64_t v34 = v33;
        char v36 = v35;
        sub_1DC8F2B2C(v12, v11, v13);
        uint64_t v45 = v32;
        uint64_t v46 = v34;
        char v47 = v36 & 1;
      }
      --v5;
    }
    while (v5);
    sub_1DC8F2B2C(v45, v46, v47);
    swift_bridgeObjectRelease();
    uint64_t v9 = v48;
    goto LABEL_22;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_1DCB23FB8()
{
  uint64_t result = sub_1DCB23FDC();
  byte_1EAAFFB70 = result & 1;
  return result;
}

uint64_t sub_1DCB23FDC()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_processName);

  uint64_t v2 = sub_1DCB87938();
  uint64_t v4 = v3;

  if (v2 == 0x616E61646E756F73 && v4 == 0xEE0064736973796CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

uint64_t sub_1DCB24120()
{
  uint64_t result = os_variant_allows_internal_security_policies();
  byte_1EAAFF828 = result;
  return result;
}

void sub_1DCB24184(__SecTask *a1@<X2>, uint64_t a2@<X8>)
{
  v13[1] = *(CFErrorRef *)MEMORY[0x1E4F143B8];
  v13[0] = 0;
  uint64_t v4 = (__CFString *)sub_1DCB87908();
  CFTypeRef v5 = SecTaskCopyValueForEntitlement(a1, v4, v13);

  CFErrorRef v6 = v13[0];
  if (v13[0])
  {
    if (!v5)
    {
      type metadata accessor for SNError();
      type metadata accessor for CFError(0);
      sub_1DCB25F7C();
      uint64_t v7 = (void *)swift_allocError();
      *char v8 = v6;
      uint64_t v9 = v6;
      char v10 = (void *)sub_1DCB86888();
      sub_1DC8E7B68();
      sub_1DCA14B2C(0xD000000000000017, v11, 2, v10, v12, 0x80000001DCB9B620);

      swift_willThrow();
      return;
    }
    goto LABEL_6;
  }
  if (v5)
  {
    CFErrorRef v6 = 0;
LABEL_6:
    *(void *)(a2 + 24) = swift_getObjectType();

    *(void *)a2 = v5;
    return;
  }
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
}

void *sub_1DCB242FC()
{
  sub_1DC87E988(&qword_1EAA9C720);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DCBD8F30;
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  *(void *)(v1 + 32) = sub_1DCB88688();
  *(void *)(v1 + 40) = sub_1DCB88688();
  *(void *)(v1 + 48) = sub_1DCB88688();
  sub_1DCB87C68();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  uint64_t v3 = sub_1DCB272EC();
  id v5 = sub_1DCB25FCC(v3, v4);
  CFErrorRef v6 = v5;
  if (v0)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC8F661C(v8, v9, (uint64_t)"Could not create MLMultiArray");
    swift_willThrow();
  }
  else
  {
    MEMORY[0x1F4188790](v5);
    id v7 = v6;
    sub_1DCB88418();
  }
  return v6;
}

id sub_1DCB244B8(_DWORD *a1, int a2, int a3, id a4)
{
  if (a1)
  {
    id result = objc_msgSend(a4, sel_floatValue);
    *a1 = v6;
  }
  else
  {
    sub_1DC884E74();
    swift_allocError();
    *id v7 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCB24540()
{
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t result = sub_1DCB88418();
  if (!v0) {
    return v2;
  }
  return result;
}

id sub_1DCB245CC@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  if (a1)
  {
    int v3 = *a1;
    id v4 = objc_allocWithZone(NSNumber);
    LODWORD(v5) = v3;
    id result = objc_msgSend(v4, sel_initWithFloat_, v5);
    *a2 = result;
  }
  else
  {
    sub_1DC884E74();
    swift_allocError();
    *id v7 = 0;
    return (id)swift_willThrow();
  }
  return result;
}

id sub_1DCB2466C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  id v6 = a3;
  id v7 = (void *)a5();

  return v7;
}

void sub_1DCB2470C(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_setFrameLength_, a2);
  int v3 = objc_msgSend(a1, sel_mutableAudioBufferList);
  int v4 = *(_DWORD *)v3;
  if (*(_DWORD *)v3)
  {
    double v5 = (void *)v3[2];
    size_t v6 = *((unsigned int *)v3 + 3);
    while (v5)
    {
      bzero(v5, v6);
      if (!--v4) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCB24828(uint64_t a1, void *a2)
{
  int v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  char v5 = v3();
  swift_release();

  return v5 & 1;
}

id sub_1DCB2489C(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, int64_t, id *), int a4)
{
  void v12[2] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = objc_msgSend(a1, sel_audioBufferList);
  uint64_t v9 = v8[2];
  v12[0] = v8[1];
  v12[1] = v9;
  return sub_1DCB24954((uint64_t)v12, a3, a4, a2, a1, &v11);
}

id sub_1DCB24954(uint64_t a1, uint64_t (*a2)(uint64_t, int64_t, id *), int a3, uint64_t a4, id a5, void *a6)
{
  v20[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = *(void *)(a1 + 16 * a4 + 8);
  if (!v6) {
LABEL_8:
  }
    __break(1u);
  id v10 = objc_msgSend(a5, sel_format);
  uint64_t v11 = (unsigned int *)objc_msgSend(v10, sel_streamDescription);

  uint64_t v12 = v11[8];
  unsigned int v13 = objc_msgSend(a5, sel_frameLength);
  int64_t v14 = v12 * (unint64_t)v13;
  if ((v12 * (unsigned __int128)v13) >> 64 != v14 >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  v20[0] = 0;
  char v15 = a2(v6, v14 / 8, v20);
  id v16 = v20[0];
  if (v15) {
    return v20[0];
  }
  type metadata accessor for SNError();
  id v18 = v16;
  id v19 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB91E10);
  id result = (id)swift_willThrow();
  *a6 = v19;
  return result;
}

void sub_1DCB24AE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v7;
  _OWORD v8[3] = a2;
  _OWORD v8[4] = a1;
  v14[5] = v8;
  v15[0] = 0;
  uint64_t v14[4] = sub_1DCB2725C;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1DCB25000;
  v14[3] = &unk_1F37FABC0;
  uint64_t v9 = _Block_copy(v14);
  id v10 = (uint64_t (*)(void *, void *, id *))a4[2];
  swift_retain();
  swift_retain();
  LOBYTE(v10) = v10(a4, v9, v15);
  _Block_release(v9);
  swift_release();
  id v11 = v15[0];
  if (v10)
  {
    id v12 = v15[0];
  }
  else
  {
    type metadata accessor for SNError();
    id v13 = v11;
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB91E10);
    swift_willThrow();
  }
  swift_release();
  swift_release();
  _Block_release(a4);
}

uint64_t sub_1DCB24CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, CMTimeRange *a6, unsigned int a7, char a8, uint64_t (*a9)(void *, id, id *), uint64_t a10, uint64_t (*a11)(void *, id, id *), uint64_t a12)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  id v16 = (void *)swift_allocObject();
  void v16[2] = v15;
  v16[3] = a2;
  void v16[4] = a1;
  swift_retain();
  id v17 = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCB2506C(v17, a6, a7, a8, a9, a10, a11, a12, (uint64_t)sub_1DCB2705C, (uint64_t)v16);
  if (v25)
  {
    id v18 = (id)sub_1DCB86888();
  }
  else
  {
    id v18 = 0;
  }
  swift_release();

  swift_release();
  swift_release();
  if (v25)
  {
    type metadata accessor for SNError();
    id v19 = v18;
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB91E10);
    swift_willThrow();
  }
  else
  {
    id v20 = v18;
  }
  swift_release();
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_1DCB24EA0(const void *a1, size_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = (void *)(a4 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v13 = *(void *)(a4 + 16);
  uint64_t v14 = v13 + a2;
  if (__OFADD__(v13, a2))
  {
    __break(1u);
  }
  else
  {
    if (v14 > a5) {
      return v14 <= a5;
    }
    memcpy((void *)(a6 + v13), a1, a2);
    uint64_t result = swift_beginAccess();
    if (!__OFADD__(*v11, a2))
    {
      *v11 += a2;
      return v14 <= a5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCB25000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  LOBYTE(a4) = v7(a2, a3, a4);
  swift_release();
  return a4 & 1;
}

void sub_1DCB2506C(void *a1, CMTimeRange *a2, unsigned int a3, char a4, uint64_t (*a5)(void *, id, id *), uint64_t a6, uint64_t (*a7)(void *, id, id *), uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v16 = (void *)swift_allocObject();
  void v16[2] = v10;
  v16[3] = a9;
  void v16[4] = a10;
  type metadata accessor for SNAudioFileUtils();
  double timescale = (double)a2->duration.timescale;
  swift_retain();
  sub_1DCABA810(a1, timescale);
  if (v11)
  {
    swift_release();
  }
  else
  {
    id v19 = v18;
    objc_msgSend(v18, sel_setFramePosition_, 0);
    sub_1DCABB360(v19, a2, 0, a3, a4 & 1, a5, a6, a7, a8, (uint64_t (*)(void *, id *))sub_1DCB270A0, (uint64_t)v16);
    swift_release();
  }
}

uint64_t sub_1DCB251A0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, int64_t, id *), int a5)
{
  id v7 = a1;
  swift_retain();
  sub_1DCB2489C(v7, 0, a4, a5);
  swift_release();

  return 1;
}

unint64_t sub_1DCB25400(void *a1, CMTimeRange *a2, unsigned int a3, char a4, uint64_t (*a5)(void *, id, id *), uint64_t a6, uint64_t (*a7)(void *, id, id *), uint64_t a8, uint64_t a9)
{
  id v10 = v9;
  id v17 = objc_msgSend(a1, sel_processingFormat);
  id v18 = objc_msgSend(v17, sel_commonFormat);

  if (v18 != (id)1)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    unint64_t v26 = "unsupported audio file format; need float32";
LABEL_20:
    sub_1DC8F661C(v24, v25, (uint64_t)v26);
    swift_willThrow();
    return (unint64_t)v10;
  }
  if (!a9)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    unint64_t v26 = "bad num dimensions; need >0";
    goto LABEL_20;
  }
  uint64_t v19 = a9 - 1;
  if (__OFSUB__(a9, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v19 < 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    sub_1DCA73DC8();
    uint64_t v27 = v42;
    goto LABEL_13;
  }
  uint64_t v45 = a5;
  unsigned int v46 = a3;
  uint64_t v47 = a8;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (a9 != 1)
  {
    uint64_t v21 = a2;
    uint64_t v51 = MEMORY[0x1E4FBC860];
    sub_1DC8989AC();
    uint64_t v20 = v51;
    unint64_t v22 = *(void *)(v51 + 16);
    do
    {
      unint64_t v23 = *(void *)(v51 + 24);
      if (v22 >= v23 >> 1)
      {
        sub_1DC8AF114(v23);
        sub_1DC8989AC();
      }
      *(void *)(v51 + 16) = v22 + 1;
      *(void *)(v51 + 8 * v22++ + 32) = 1;
      --v19;
    }
    while (v19);
    a2 = v21;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = v20;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_27;
  }
LABEL_13:
  unint64_t v29 = *(void *)(v27 + 16);
  unint64_t v28 = *(void *)(v27 + 24);
  if (v29 >= v28 >> 1)
  {
    sub_1DC8AF114(v28);
    sub_1DCA73DC8();
    uint64_t v27 = v43;
  }
  uint64_t v44 = (uint64_t)v10;
  CMTimeValue value = a2->duration.value;
  *(void *)(v27 + 16) = v29 + 1;
  *(void *)(v27 + 8 * v29 + 32) = value;
  swift_bridgeObjectRelease();
  id v31 = *(id *)(v27 + 16);
  if (v31)
  {
    sub_1DCB88B68();
    id v32 = 0;
    do
    {
      id v10 = (char *)v32 + 1;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, *(void *)(v27 + 8 * (void)v32 + 32));
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      id v32 = v10;
    }
    while (v31 != v10);
  }
  swift_bridgeObjectRelease();
  id v33 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  uint64_t v34 = sub_1DCB272EC();
  id v36 = sub_1DCB25FCC(v34, v35);
  if (v50) {
    return (unint64_t)v10;
  }
  unint64_t v37 = v36;
  id v38 = a1;
  swift_retain_n();
  swift_retain_n();
  id v39 = v38;
  id v10 = v37;
  id v40 = objc_msgSend(v10, sel_dataPointer);
  unint64_t result = (unint64_t)objc_msgSend(v10, sel_count);
  if ((result - 0x2000000000000000) >> 62 == 3)
  {
    sub_1DCB24CC0((uint64_t)v40, 4 * result, v44, v44, v39, a2, v46, a4 & 1, v45, a6, a7, v47);
    swift_release();
    swift_release();

    return (unint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCB25984(uint64_t a1, double a2)
{
  uint64_t v32 = a1;
  uint64_t v28 = sub_1DCB87568();
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  id v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCB875E8();
  sub_1DC89D4E0();
  uint64_t v30 = v9;
  uint64_t v31 = v8;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v10);
  unint64_t v29 = (char *)&v27 - v11;
  dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(unsigned char *)(v13 + 24) = -1;
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C798);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v12;
  swift_retain();
  id v16 = v12;
  sub_1DCB88648();

  swift_release();
  uint64_t result = sub_1DCB875C8();
  double v18 = a2 * 1000.0;
  if ((~COERCE__INT64(a2 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *id v7 = (uint64_t)v18;
  uint64_t v19 = v28;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4FBCAC8], v28);
  sub_1DCB875D8();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v7, v19);
  uint64_t v20 = *(void (**)(void))(v30 + 8);
  sub_1DCB272DC();
  v20();
  sub_1DCB88588();
  if ((sub_1DCB87578() & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    unint64_t v25 = 0x80000001DCB9B660;
    unint64_t v22 = 0xD000000000000017;
    goto LABEL_8;
  }
  swift_beginAccess();
  int v21 = *(unsigned __int8 *)(v13 + 24);
  if (v21 == 255)
  {
    type metadata accessor for SNError();
    unint64_t v22 = sub_1DCABC260();
    uint64_t v24 = 0x6C65646F6D206F6ELL;
    unint64_t v25 = 0xEF646564616F6C20;
LABEL_8:
    sub_1DCA14B2C(v22, v23, 1, 0, v24, v25);
LABEL_9:
    swift_willThrow();

    sub_1DCB272DC();
    v20();
    return swift_release();
  }
  if (v21)
  {
    sub_1DC9F6E60(*(id *)(v13 + 16));
    goto LABEL_9;
  }
  id v26 = *(id *)(v13 + 16);
  sub_1DCB272DC();
  v20();
  swift_release();

  return (uint64_t)v26;
}

uint64_t sub_1DCB25D58(void *a1, char a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v6 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = a1;
  unsigned __int8 v7 = *(unsigned char *)(a3 + 24);
  *(unsigned char *)(a3 + 24) = a2 & 1;
  sub_1DCB26FD8(v6, v7);
  sub_1DC9F6E60(a1);
  return sub_1DCB88598();
}

uint64_t type metadata accessor for SNUtils()
{
  return self;
}

unint64_t sub_1DCB25F7C()
{
  unint64_t result = qword_1EAAAB368;
  if (!qword_1EAAAB368)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB368);
  }
  return result;
}

id sub_1DCB25FCC(uint64_t a1, uint64_t a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v4 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1DCB86898();

    swift_willThrow();
  }
  return v5;
}

void sub_1DCB260C8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return;
  }
  uint64_t v17 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a2 + 56;
    uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v7 = ~v16;
    while (1)
    {
      uint64_t v8 = *(void *)(a1 + 32 + 8 * v5++);
      uint64_t v9 = sub_1DCB89198();
      unint64_t v10 = v9 & v7;
      if ((*(void *)(v6 + (((v9 & (unint64_t)v7) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (v9 & v7))) {
        break;
      }
LABEL_7:
      if (v5 == v4) {
        return;
      }
    }
    while (*(void *)(*(void *)(a2 + 48) + 8 * v10) != v8)
    {
      unint64_t v10 = (v10 + 1) & v7;
      if (((*(void *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    uint64_t v18 = v5;
    unint64_t v11 = (unint64_t)(63 - v16) >> 6;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v11 < 0x81 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      memcpy((char *)&v15 - v13, (const void *)(a2 + 56), 8 * v11);
      sub_1DCB272B4();
      swift_release();
      if (!v10)
      {
        swift_bridgeObjectRelease();
        return;
      }
      swift_willThrow();

      __break(1u);
      goto LABEL_18;
    }
    id v14 = (void *)swift_slowAlloc();
    memcpy(v14, (const void *)(a2 + 56), 8 * v11);
    sub_1DCB272B4();
    sub_1DC8C213C();
    swift_release();
    if (v10)
    {
LABEL_18:

      sub_1DC8E7728();
      __break(1u);
      return;
    }
    swift_bridgeObjectRelease();
    sub_1DC8E7728();
  }
}

uint64_t sub_1DCB26300(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v26 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      sub_1DCB891A8();
      swift_bridgeObjectRetain();
      sub_1DCB879B8();
      uint64_t v9 = sub_1DCB891F8();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        uint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1DCB89018() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v27 = v5;
LABEL_22:
          char v19 = *(unsigned char *)(v2 + 32);
          unint64_t v20 = (unint64_t)((1 << v19) + 63) >> 6;
          size_t v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_1DCB267A4((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_1DCB267A4((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1E01A99C0](v23, -1, -1);
          }
          return v22;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          uint64_t v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1DCB89018() & 1) != 0)
          {
            uint64_t v27 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_22;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_1DCB26614(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v10 = *a5;
  unint64_t v9 = a5[1];
  unint64_t v11 = *(void *)(*a5 + 16);
  if (v9 == v11)
  {
LABEL_16:
    swift_retain();
    return sub_1DCB269CC(v6, a2, v8, a3);
  }
  else
  {
    uint64_t v13 = a3 + 56;
    uint64_t v14 = ~(-1 << *(unsigned char *)(a3 + 32));
    while (v9 < v11)
    {
      if (__OFADD__(v9, 1)) {
        goto LABEL_19;
      }
      uint64_t v15 = *(void *)(v10 + 32 + 8 * v9);
      a5[1] = v9 + 1;
      unint64_t result = sub_1DCB89198();
      uint64_t v16 = result & v14;
      unint64_t v17 = (result & (unint64_t)v14) >> 6;
      uint64_t v18 = 1 << (result & v14);
      if ((v18 & *(void *)(v13 + 8 * v17)) != 0)
      {
        uint64_t v19 = *(void *)(a3 + 48);
        if (*(void *)(v19 + 8 * v16) == v15)
        {
LABEL_12:
          unint64_t v22 = v6[v17];
          v6[v17] = v22 & ~v18;
          if ((v18 & v22) != 0)
          {
            if (__OFSUB__(v8--, 1)) {
              goto LABEL_20;
            }
            if (!v8) {
              return MEMORY[0x1E4FBC870];
            }
          }
        }
        else
        {
          for (uint64_t i = v16 + 1; ; uint64_t i = v21 + 1)
          {
            unint64_t v21 = i & v14;
            if (((*(void *)(v13 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            if (*(void *)(v19 + 8 * v21) == v15)
            {
              unint64_t v17 = v21 >> 6;
              uint64_t v18 = 1 << v21;
              goto LABEL_12;
            }
          }
        }
      }
      unint64_t v9 = a5[1];
      unint64_t v11 = *(void *)(v10 + 16);
      if (v9 == v11) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCB267A4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v30 = (unint64_t *)result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1DCB26C0C(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_30;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1DCB891A8();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    uint64_t v14 = sub_1DCB891F8();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_25;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    unint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1DCB89018() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1DCB89018() & 1) != 0)
        {
          unint64_t result = swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_13;
        }
      }
LABEL_25:
      unint64_t result = swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    unint64_t result = swift_bridgeObjectRelease();
LABEL_13:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_31;
      }
      --v31;
      if (!v23) {
        return MEMORY[0x1E4FBC870];
      }
    }
LABEL_26:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1DCB269CC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_35:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1DC87E988(&qword_1EAAAB378);
  uint64_t result = sub_1DCB88A78();
  uint64_t v9 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_35;
    }
    unint64_t v16 = a1[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_35;
      }
      unint64_t v16 = a1[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_35;
        }
        unint64_t v16 = a1[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1DCB89198();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_35;
  }
  unint64_t v16 = a1[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_35;
    }
    unint64_t v16 = a1[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1DCB26C0C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_35:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1DC87E988(&qword_1EAAAB370);
  uint64_t result = sub_1DCB88A78();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_35;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_35;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1DCB891A8();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    uint64_t result = sub_1DCB891F8();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_35;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1DCB26E9C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_classLabels);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DCB87C38();

  return v3;
}

unint64_t sub_1DCB26EF8()
{
  unint64_t result = qword_1EAAAB3A8;
  if (!qword_1EAAAB3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB3A8);
  }
  return result;
}

uint64_t sub_1DCB26F44()
{
  if (*(unsigned __int8 *)(v0 + 24) != 255) {
    sub_1DCAE0404(*(id *)(v0 + 16));
  }

  return swift_deallocObject();
}

uint64_t sub_1DCB26F8C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB26FCC(void *a1, char a2)
{
  return sub_1DCB25D58(a1, a2 & 1, *(void *)(v2 + 16));
}

void sub_1DCB26FD8(id a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_1DCAE0404(a1);
  }
}

uint64_t sub_1DCB26FF0()
{
  uint64_t v0 = sub_1DCB27348();
  return v1(v0);
}

uint64_t sub_1DCB27014()
{
  return swift_deallocObject();
}

uint64_t sub_1DCB27024()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB2705C(const void *a1, size_t a2, uint64_t a3)
{
  return sub_1DCB24EA0(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1DCB27068()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB270A0(void *a1, uint64_t a2)
{
  return sub_1DCB251A0(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, int64_t, id *))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1DCB270AC()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1DCB270E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCB270F4()
{
  return swift_release();
}

id sub_1DCB270FC(_DWORD *a1, int a2, int a3)
{
  return sub_1DCB244B8(a1, a2, a3, *(id *)(v3 + 16));
}

unsigned char *storeEnumTagSinglePayload for SNUtils.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCB271B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNUtils.DomainError()
{
  return &type metadata for SNUtils.DomainError;
}

unint64_t sub_1DCB271F0()
{
  unint64_t result = qword_1EAAAB3C0;
  if (!qword_1EAAAB3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB3C0);
  }
  return result;
}

uint64_t sub_1DCB27260()
{
  return sub_1DCB88B78();
}

uint64_t sub_1DCB27280()
{
  return sub_1DCB88B88();
}

uint64_t sub_1DCB2729C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB272B4()
{
  return sub_1DCB26614(v2, v3, v0, v1, (void *)(v4 - 104));
}

uint64_t sub_1DCB272EC()
{
  return v0;
}

uint64_t sub_1DCB27310()
{
  return sub_1DCB88B48();
}

uint64_t sub_1DCB27328()
{
  return sub_1DC8A42E0(v1, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t sub_1DCB27348()
{
  return *(void *)(v0 + 16);
}

id sub_1DCB2735C(uint64_t a1, uint64_t a2)
{
  return sub_1DCB22F74(a1, a2, 5, 0, v2);
}

uint64_t sub_1DCB2737C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1DCB2739C()
{
  return v0;
}

uint64_t sub_1DCB273B0(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 80) = result;
  return result;
}

void sub_1DCB273C4(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 48) = a1;
}

double SNAudioCorrelationResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNAudioCorrelationResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1DCB27410(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(v3 + OBJC_IVAR___SNAudioCorrelationResult_impl);
  v4[7] = result;
  v4[8] = a2;
  v4[9] = a3;
  return result;
}

uint64_t sub_1DCB27430()
{
  return sub_1DCB891B8();
}

BOOL sub_1DCB27518(double *a1, double *a2)
{
  double v2 = *a1;
  uint64_t v3 = *((void *)a1 + 5);
  double v4 = a1[6];
  uint64_t v5 = *((void *)a1 + 7);
  int v6 = *((_DWORD *)a1 + 16);
  int v7 = *((_DWORD *)a1 + 17);
  uint64_t v9 = *((void *)a1 + 9);
  uint64_t v8 = *((void *)a1 + 10);
  double v10 = *a2;
  double v11 = a2[6];
  uint64_t v12 = *((void *)a2 + 7);
  int v13 = *((_DWORD *)a2 + 16);
  int v14 = *((_DWORD *)a2 + 17);
  uint64_t v16 = *((void *)a2 + 9);
  uint64_t v15 = *((void *)a2 + 10);
  uint64_t v26 = *((void *)a2 + 5);
  *(double *)uint64_t v27 = v2;
  *(double *)&v27[1] = a1[1];
  long long v28 = *((_OWORD *)a1 + 1);
  uint64_t v29 = *((void *)a1 + 4);
  uint64_t v30 = v3;
  *(double *)unint64_t v23 = v10;
  *(double *)&v23[1] = a2[1];
  long long v24 = *((_OWORD *)a2 + 1);
  uint64_t v25 = *((void *)a2 + 4);
  BOOL v17 = static TimeRange.== infix(_:_:)((uint64_t)v27, (uint64_t)v23);
  BOOL result = 0;
  if (v17 && v4 == v11 && v5 == v12 && v6 == v13 && v7 == v14 && v9 == v16) {
    return v8 == v15;
  }
  return result;
}

uint64_t sub_1DCB27608(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x756C61566B616570 && a2 == 0xE900000000000065;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x656D69546B616570 && a2 == 0xE800000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x496C656E6E616863 && a2 == 0xEC0000007865646ELL)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1DCB277E8(char a1)
{
  uint64_t result = 0x676E6152656D6974;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x756C61566B616570;
      break;
    case 2:
      uint64_t result = 0x656D69546B616570;
      break;
    case 3:
      uint64_t result = 0x496C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCB27884(void *a1)
{
  BOOL v2 = v1;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAAB3F0);
  sub_1DC89D4E0();
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  uint64_t v10 = v2[2];
  uint64_t v11 = v2[3];
  uint64_t v24 = v2[5];
  uint64_t v12 = v2[7];
  uint64_t v13 = v2[8];
  uint64_t v21 = v2[9];
  uint64_t v22 = v12;
  uint64_t v20 = v2[10];
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB28E48();
  sub_1DCB892B8();
  uint64_t v26 = v9;
  int v14 = v8;
  uint64_t v27 = v2[1];
  uint64_t v28 = v10;
  uint64_t v29 = v11;
  uint64_t v30 = v2[4];
  uint64_t v31 = v24;
  char v32 = 0;
  sub_1DC89C64C();
  uint64_t v15 = v25;
  sub_1DCB88F18();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, v4);
  }
  uint64_t v18 = v21;
  uint64_t v17 = v22;
  uint64_t v19 = v23;
  LOBYTE(v26) = 1;
  sub_1DCB88EE8();
  uint64_t v26 = v17;
  uint64_t v27 = v13;
  uint64_t v28 = v18;
  char v32 = 2;
  sub_1DC89C18C();
  sub_1DCB88F18();
  LOBYTE(v26) = 3;
  sub_1DCB88F08();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v14, v4);
}

uint64_t sub_1DCB27AB4()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB27BEC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAAB3E0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB28E48();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC89C600();
    sub_1DCB290D8();
    sub_1DCB29100(1);
    sub_1DCB88DC8();
    uint64_t v7 = v6;
    sub_1DC89C0C0();
    sub_1DCB290D8();
    sub_1DCB29100(3);
    uint64_t v9 = sub_1DCB88DE8();
    uint64_t v10 = sub_1DC8D5364();
    v11(v10);
    *a2 = v12;
    a2[1] = v13;
    a2[2] = v14;
    a2[3] = v15;
    a2[4] = v16;
    a2[5] = v17;
    a2[6] = v7;
    a2[7] = v12;
    a2[8] = v13;
    a2[9] = v14;
    a2[10] = v9;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCB27DDC()
{
  return sub_1DCB277E8(*v0);
}

uint64_t sub_1DCB27DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB27608(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB27E0C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB28E48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB27E48(uint64_t a1)
{
  unint64_t v2 = sub_1DCB28E48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB27E8C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB27FC0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCB27BEC(a1, a2);
}

uint64_t sub_1DCB27FD8(void *a1)
{
  return sub_1DCB27884(a1);
}

double SNAudioCorrelationResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNAudioCorrelationResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double (*SNAudioCorrelationResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNAudioCorrelationResult.timeRange.getter((uint64_t)v3);
  return sub_1DCB28140;
}

double sub_1DCB28140(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNAudioCorrelationResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double sub_1DCB281A0()
{
  return *(double *)(v0 + OBJC_IVAR___SNAudioCorrelationResult_impl + 48);
}

uint64_t sub_1DCB28210()
{
  return *(void *)(v0 + OBJC_IVAR___SNAudioCorrelationResult_impl + 56);
}

uint64_t sub_1DCB28278()
{
  return *(void *)(v0 + OBJC_IVAR___SNAudioCorrelationResult_impl + 80);
}

id sub_1DCB282B4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x1E4F1FA20];
  uint64_t v3 = MEMORY[0x1E4F1F9F8];
  uint64_t v4 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v5 = *MEMORY[0x1E4F1F9F8];
  uint64_t v6 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
  uint64_t v7 = &v0[OBJC_IVAR___SNAudioCorrelationResult_impl];
  *(void *)uint64_t v7 = *MEMORY[0x1E4F1FA20];
  *((void *)v7 + 1) = *(void *)(v2 + 8);
  *((_OWORD *)v7 + 1) = *(_OWORD *)(v2 + 16);
  *((void *)v7 + 4) = *(void *)(v2 + 32);
  *((void *)v7 + 5) = v4;
  *((void *)v7 + 6) = 0;
  *((void *)v7 + 7) = v5;
  *((void *)v7 + 8) = *(void *)(v3 + 8);
  *((void *)v7 + 9) = v6;
  *((void *)v7 + 10) = 0;
  v9.receiver = v0;
  v9.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

id sub_1DCB2836C(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = &v3[OBJC_IVAR___SNAudioCorrelationResult_impl];
  *(void *)uint64_t v7 = *(void *)a1;
  *((void *)v7 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v7 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v7 + 4) = *(void *)(a1 + 32);
  *((void *)v7 + 5) = v4;
  *((void *)v7 + 6) = v5;
  *((void *)v7 + 7) = v6;
  *((void *)v7 + 8) = *(void *)(a1 + 64);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)(a1 + 72);
  v9.receiver = v3;
  v9.Class super_class = v1;
  return objc_msgSendSuper2(&v9, sel_init);
}

id SNAudioCorrelationResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DCB29088(OBJC_IVAR___SNAudioCorrelationResult_impl);
  id result = sub_1DCB2836C((uint64_t)v4);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNAudioCorrelationResult.hash.getter()
{
  return sub_1DCB27AB4();
}

BOOL SNAudioCorrelationResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v30);
  if (v31)
  {
    sub_1DC87E9CC(&v30, v29);
    sub_1DC87E9DC((uint64_t)v29, (uint64_t)v21);
    if (swift_dynamicCast())
    {
      double v3 = v13[0];
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 40);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 48);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 56);
      v21[0] = *(double *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl);
      v21[1] = *(double *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 8);
      long long v22 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 16);
      uint64_t v23 = *(void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 32);
      uint64_t v24 = v4;
      uint64_t v25 = v5;
      uint64_t v26 = v6;
      uint64_t v27 = *(void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 64);
      long long v28 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl + 72);
      uint64_t v7 = *(void *)&v13[0] + OBJC_IVAR___SNAudioCorrelationResult_impl;
      uint64_t v8 = *(void *)(*(void *)&v13[0] + OBJC_IVAR___SNAudioCorrelationResult_impl + 40);
      uint64_t v9 = *(void *)(*(void *)&v13[0] + OBJC_IVAR___SNAudioCorrelationResult_impl + 48);
      uint64_t v10 = *(void *)(*(void *)&v13[0] + OBJC_IVAR___SNAudioCorrelationResult_impl + 56);
      v13[0] = *(double *)(*(void *)&v13[0] + OBJC_IVAR___SNAudioCorrelationResult_impl);
      v13[1] = *(double *)(v7 + 8);
      long long v14 = *(_OWORD *)(v7 + 16);
      uint64_t v15 = *(void *)(v7 + 32);
      uint64_t v16 = v8;
      uint64_t v17 = v9;
      uint64_t v18 = v10;
      uint64_t v19 = *(void *)(v7 + 64);
      long long v20 = *(_OWORD *)(v7 + 72);
      BOOL v11 = sub_1DCB27518(v21, v13);
    }
    else
    {
      BOOL v11 = 0;
    }
    sub_1DC8818D0((uint64_t)v29);
  }
  else
  {
    return 0;
  }
  return v11;
}

id SNAudioCorrelationResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNAudioCorrelationResult.init(coder:)(a1);
}

id SNAudioCorrelationResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87E49C();
  swift_getObjectType();

  id v4 = sub_1DCB2836C((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNAudioCorrelationResult.encode(with:)(NSCoder with)
{
  memcpy(__dst, (const void *)(v1 + OBJC_IVAR___SNAudioCorrelationResult_impl), sizeof(__dst));
  sub_1DC87C908(__dst, 1819307369, 0xE400000000000000, with.super.isa);
}

uint64_t static SNAudioCorrelationResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNAudioCorrelationResult.description.getter()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1DCB88A98();
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  v17.receiver = v0;
  v17.Class super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v17, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  uint64_t v20 = *(void *)&v1[OBJC_IVAR___SNAudioCorrelationResult_impl + 80];
  sub_1DCB88F98();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB29118();
  sub_1DCB87A18();
  uint64_t v4 = *(void *)&v1[OBJC_IVAR___SNAudioCorrelationResult_impl + 56];
  unint64_t v5 = *(void *)&v1[OBJC_IVAR___SNAudioCorrelationResult_impl + 64];
  uint64_t v6 = *(void *)&v1[OBJC_IVAR___SNAudioCorrelationResult_impl + 72];
  uint64_t v7 = self;
  uint64_t v20 = v4;
  unint64_t v21 = v5;
  *(void *)&long long v22 = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTime_, &v20);
  id v9 = objc_msgSend(v8, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB29118();
  sub_1DCB87A18();
  sub_1DCB87FB8();
  sub_1DCB87A18();
  SNAudioCorrelationResult.timeRange.getter((uint64_t)&v20);
  v13[0] = v20;
  v13[1] = v21;
  long long v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  id v10 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v13);
  id v11 = objc_msgSend(v10, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v18;
}

id SNAudioCorrelationResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DCB28D04@<D0>(uint64_t a1@<X8>)
{
  return SNAudioCorrelationResult.timeRange.getter(a1);
}

double sub_1DCB28D28(uint64_t a1)
{
  return SNAudioCorrelationResult.timeRange.setter(a1);
}

uint64_t type metadata accessor for SNAudioCorrelationResult()
{
  return self;
}

uint64_t method lookup function for SNAudioCorrelationResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNAudioCorrelationResult);
}

uint64_t getEnumTagSinglePayload for AudioCorrelationResult(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 88)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AudioCorrelationResult(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 88) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AudioCorrelationResult()
{
  return &type metadata for AudioCorrelationResult;
}

unint64_t sub_1DCB28DFC()
{
  unint64_t result = qword_1EAAAB3D8;
  if (!qword_1EAAAB3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB3D8);
  }
  return result;
}

unint64_t sub_1DCB28E48()
{
  unint64_t result = qword_1EAAAB3E8;
  if (!qword_1EAAAB3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB3E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioCorrelationResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB28F60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioCorrelationResult.CodingKeys()
{
  return &type metadata for AudioCorrelationResult.CodingKeys;
}

unint64_t sub_1DCB28F9C()
{
  unint64_t result = qword_1EAAAB3F8;
  if (!qword_1EAAAB3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB3F8);
  }
  return result;
}

unint64_t sub_1DCB28FEC()
{
  unint64_t result = qword_1EAAAB400;
  if (!qword_1EAAAB400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB400);
  }
  return result;
}

unint64_t sub_1DCB2903C()
{
  unint64_t result = qword_1EAAAB408;
  if (!qword_1EAAAB408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB408);
  }
  return result;
}

__n128 sub_1DCB29088@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)(v1 + a1 + 72);
}

uint64_t sub_1DCB290D8()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCB29100@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 160) = a1;
  return v1 - 160;
}

uint64_t sub_1DCB29118()
{
  return 0x6B616550203BLL;
}

uint64_t sub_1DCB2912C(void *a1)
{
  uint64_t v2 = sub_1DCB86758();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1DCB86798();
  swift_allocObject();
  sub_1DCB86788();
  sub_1DCB86748();
  sub_1DCB86768();
  sub_1DC881A8C(a1, a1[3]);
  uint64_t v3 = sub_1DCB86778();
  swift_release();
  return v3;
}

uint64_t sub_1DCB29218()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for JSONUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB29384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONUtils.DomainError()
{
  return &type metadata for JSONUtils.DomainError;
}

unint64_t sub_1DCB293C0()
{
  unint64_t result = qword_1EAAAB410;
  if (!qword_1EAAAB410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB410);
  }
  return result;
}

uint64_t SoundAnalysisBundleMarker.deinit()
{
  return v0;
}

uint64_t SoundAnalysisBundleMarker.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SoundAnalysisBundleMarker()
{
  return self;
}

uint64_t method lookup function for SoundAnalysisBundleMarker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SoundAnalysisBundleMarker);
}

void sub_1DCB29460(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_1DCB86888();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_1DCB294C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DCB87E48();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v5) == 1)
  {
    sub_1DC999EB8(a1);
  }
  else
  {
    sub_1DCB87E38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DCB87DE8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1DCB29604(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    id v3 = a2;
    return sub_1DCB29664(v2, (uint64_t)v3);
  }
  else
  {
    return j__swift_continuation_throwingResume();
  }
}

uint64_t sub_1DCB29664(uint64_t a1, uint64_t a2)
{
  sub_1DC87E988(&qword_1EAA9DF60);
  swift_allocError();
  *id v3 = a2;

  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1DCB296CC(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  unsigned int v6 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, void *, uint64_t), uint64_t))(a1 + 32);
  uint64_t v7 = sub_1DCB877B8();
  if (a3) {
    a3 = sub_1DCB877B8();
  }
  id v8 = _Block_copy(a4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  swift_retain();
  v6(v7, a3, sub_1DCB2CC90, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1DCB297DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unsigned int v6 = a2;
  if (a1)
  {
    uint64_t v7 = (void *)sub_1DCB87788();
    if (!v6) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v7 = 0;
  if (a2) {
LABEL_3:
  }
    unsigned int v6 = (void *)sub_1DCB87788();
LABEL_4:
  if (a3) {
    uint64_t v8 = sub_1DCB86888();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = (id)v8;
  (*(void (**)(uint64_t, void *, void *))(a4 + 16))(a4, v7, v6);
}

uint64_t sub_1DCB298C4()
{
  long long v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  long long v2 = v0[3];
  _OWORD v4[2] = v0[2];
  _OWORD v4[3] = v2;
  sub_1DC960918((uint64_t)v4);
  sub_1DCAC0A50();
  sub_1DC960970((uint64_t)v4);
  swift_bridgeObjectRetain();
  sub_1DC8CD7C8();
  sub_1DC8A7C04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DC8CD7C8();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DC8CD7C8();
  sub_1DCB879B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB29980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v27 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  BOOL v12 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  uint64_t v24 = *(void *)(a2 + 48);
  uint64_t v25 = *(void *)(a2 + 56);
  if (v12 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v14 & 1) != 0))
  {
    BOOL v15 = v4 == v8 && v5 == v9;
    if (v15 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v16 & 1) != 0))
    {
      BOOL v17 = v6 == v10 && v7 == v11;
      if (v17 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v18 & 1) != 0))
      {
        BOOL v19 = v27 == v24 && v26 == v25;
        if (v19 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v20 & 1) != 0))
        {
          if (sub_1DC8DCAE8(*(void **)(a1 + 64), *(void **)(a2 + 64)))
          {
            BOOL v21 = *(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80);
            if (v21 || (sub_1DCB89018(), uint64_t result = sub_1DC8E7A68(), (v22 & 1) != 0))
            {
              if (*(void *)(a1 + 88) == *(void *)(a2 + 88) && *(void *)(a1 + 96) == *(void *)(a2 + 96))
              {
                return 1;
              }
              else
              {
                return sub_1DCB89018();
              }
            }
          }
          else
          {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCB29B28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E49726576726573 && a2 == 0xEA00000000006F66;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6946726576726573 && a2 == 0xEF7368746150656CLL;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6142726576726573 && a2 == 0xEE00687461506573;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB9B910)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_1DCB29D2C(char a1)
{
  unint64_t result = 0x6E49726576726573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6946726576726573;
      break;
    case 2:
      unint64_t result = 0x6142726576726573;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCB29DE0(void *a1)
{
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAAB450);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB2C62C();
  sub_1DCB892B8();
  sub_1DC9608CC();
  sub_1DCB88F18();
  if (!v1)
  {
    sub_1DC87E988(&qword_1EAA9E7F0);
    sub_1DC960868((unint64_t *)&unk_1EAAAB460);
    sub_1DCB88F18();
    sub_1DCB2CEC4(2);
    sub_1DCB2CEC4(3);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1DCB29FA0()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB29FE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAAB438);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB2C62C();
  sub_1DCB89298();
  if (v2) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  sub_1DC96081C();
  sub_1DCB88DF8();
  sub_1DC87E988(&qword_1EAA9E7F0);
  sub_1DC960868(&qword_1EAAA1850);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCB88DF8();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DCB88DA8();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DCB88DA8();
  uint64_t v10 = v9;
  uint64_t v15 = v8;
  uint64_t v11 = sub_1DCB2CEB0();
  v12(v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC8818D0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v16;
  a2[1] = v17;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v21;
  a2[6] = v22;
  a2[7] = v23;
  a2[8] = v16;
  a2[9] = v14;
  a2[10] = v7;
  a2[11] = v15;
  a2[12] = v10;
  return result;
}

unint64_t sub_1DCB2A450()
{
  return sub_1DCB29D2C(*v0);
}

uint64_t sub_1DCB2A458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB29B28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB2A480(uint64_t a1)
{
  unint64_t v2 = sub_1DCB2C62C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB2A4BC(uint64_t a1)
{
  unint64_t v2 = sub_1DCB2C62C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1DCB2A4F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1DCB29FE0(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x68uLL);
  }
  return result;
}

uint64_t sub_1DCB2A544(void *a1)
{
  return sub_1DCB29DE0(a1);
}

uint64_t sub_1DCB2A564()
{
  return sub_1DCB891F8();
}

id sub_1DCB2A5A4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl];
  uint64_t v8 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 8];
  uint64_t v9 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 16];
  uint64_t v10 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 24];
  uint64_t v11 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 32];
  uint64_t v12 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 40];
  uint64_t v14 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 48];
  uint64_t v13 = *(void *)&a1[OBJC_IVAR___SNFileServerInfo_impl + 56];
  uint64_t v15 = (objc_class *)type metadata accessor for SNCopyFilesRequest();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  uint64_t v17 = &v16[OBJC_IVAR___SNCopyFilesRequest_impl];
  *(void *)uint64_t v17 = v7;
  *((void *)v17 + 1) = v8;
  *((void *)v17 + 2) = v9;
  *((void *)v17 + 3) = v10;
  *((void *)v17 + 4) = v11;
  *((void *)v17 + 5) = v12;
  *((void *)v17 + 6) = v14;
  *((void *)v17 + 7) = v13;
  *((void *)v17 + 8) = a4;
  *((void *)v17 + 9) = a2;
  *((void *)v17 + 10) = a3;
  *((void *)v17 + 11) = a5;
  *((void *)v17 + 12) = a6;
  v25.receiver = v16;
  v25.Class super_class = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = objc_msgSendSuper2(&v25, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v18;
}

uint64_t (*sub_1DCB2A75C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1DC8A22D0();
  uint64_t v30 = v12 - v11;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F946E0]), sel_init);
  objc_msgSend(v13, sel_setDispatchQueue_, a1);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F946C8]), sel_init);
  objc_msgSend(v14, sel_setDispatchQueue_, a1);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94710]), sel_init);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v16;
  long long v17[3] = a2;
  v17[4] = a3;
  v17[5] = v14;
  void v17[6] = v5;
  v17[7] = v15;
  v17[8] = a1;
  v17[9] = a4;
  v17[10] = a5;
  aBlock[4] = sub_1DCB2C7F0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCA09C70;
  aBlock[3] = &unk_1F37FABE8;
  id v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v19 = v14;
  id v20 = v5;
  id v21 = v15;
  id v22 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_setLocalDeviceUpdatedHandler_, v18);
  _Block_release(v18);
  uint64_t v23 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v30, 1, 1, v23);
  uint64_t v24 = (void *)swift_allocObject();
  long long v24[2] = 0;
  v24[3] = 0;
  v24[4] = v13;
  id v25 = v13;
  uint64_t v26 = sub_1DCB294C4(v30, (uint64_t)&unk_1EAAAB478, (uint64_t)v24);
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = v25;
  v27[3] = v19;
  v27[4] = v21;
  v27[5] = v26;
  swift_release();
  return sub_1DCB2C974;
}

uint64_t sub_1DCB2AA18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v18 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v18 - 8);
  id v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E01A9AE0](a2 + 16);
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v32 = a9;
    uint64_t v23 = sub_1DCB87E48();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v20, 1, 1, v23);
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = a3;
    uint64_t v26 = (uint64_t)v24;
    long long v24[2] = 0;
    v24[3] = 0;
    v24[4] = v22;
    void v24[5] = v25;
    v24[6] = a4;
    v24[7] = a1;
    v24[8] = a5;
    v24[9] = a6;
    v24[10] = a7;
    v24[11] = a8;
    v24[12] = v32;
    v24[13] = a10;
    swift_retain();
    id v27 = a1;
    id v28 = a5;
    id v29 = a6;
    id v30 = a7;
    id v31 = a8;
    swift_retain();
    sub_1DCB294C4((uint64_t)v20, (uint64_t)&unk_1EAAAB490, v26);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCB2AB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 576) = v14;
  *(_OWORD *)(v8 + 544) = v12;
  *(_OWORD *)(v8 + 560) = v13;
  *(void *)(v8 + 536) = a8;
  *(void *)(v8 + 528) = a7;
  *(void *)(v8 + 520) = a6;
  *(void *)(v8 + 504) = a4;
  *(void *)(v8 + 512) = a5;
  uint64_t v9 = sub_1DCB86A18();
  *(void *)(v8 + 584) = v9;
  *(void *)(v8 + 592) = *(void *)(v9 - 8);
  *(void *)(v8 + 600) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCB2AC9C, 0, 0);
}

uint64_t sub_1DCB2AC9C()
{
  uint64_t v1 = (void *)v0[66];
  uint64_t v2 = v0[65];
  uint64_t v3 = (void *)v0[63];
  uint64_t v4 = v0[64];
  uint64_t v5 = (void *)sub_1DCB87908();
  objc_msgSend(v3, sel_deregisterRequestID_, v5);

  uint64_t v6 = (void *)sub_1DCB87908();
  uint64_t v7 = sub_1DC886810();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v2;
  uint64_t v8 = sub_1DC886810();
  *(void *)(v8 + 16) = sub_1DCB2CBF8;
  *(void *)(v8 + 24) = v7;
  v0[46] = sub_1DCB2CC00;
  v0[47] = v8;
  v0[42] = MEMORY[0x1E4F143A8];
  v0[43] = 1107296256;
  v0[44] = sub_1DCB296CC;
  v0[45] = &unk_1F37FAF80;
  uint64_t v9 = _Block_copy(v0 + 42);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_registerRequestID_options_handler_, v6, 0, v9);
  _Block_release(v9);

  sub_1DCB2C6F4(v1, (SEL *)&selRef_idsDeviceIdentifier);
  v0[76] = v10;
  if (!v10) {
    __break(1u);
  }
  v0[77] = type metadata accessor for SNFileSharingUtils();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[78] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1DCB2AEEC;
  return sub_1DC914A7C();
}

uint64_t sub_1DCB2AEEC()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 632) = v5;
  *(void *)(v3 + 640) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCB2B010()
{
  sub_1DC886900();
  uint64_t v1 = v0[68];
  uint64_t v2 = OBJC_IVAR___SNCopyFilesRequest_impl;
  v0[81] = OBJC_IVAR___SNCopyFilesRequest_impl;
  v0[82] = *(void *)(v1 + v2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[83] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DCB2B104;
  return sub_1DC914A7C();
}

uint64_t sub_1DCB2B104()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 672) = v5;
  *(void *)(v3 + 680) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCB2B228()
{
  uint64_t v1 = (void *)v0[79];
  sub_1DC87E988(&qword_1EAA9E7E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBC6B50;
  v0[54] = 0x7550746567726174;
  v0[55] = 0xEF79654B63696C62;
  sub_1DCB88A38();
  uint64_t v3 = sub_1DCB2C690(v1);
  if (v4 >> 60 == 15)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = (void *)v0[79];
  *(void *)(inited + 96) = MEMORY[0x1E4F277C0];
  *(void *)(inited + 72) = v3;
  *(void *)(inited + 80) = v4;
  v0[56] = 0x4449746567726174;
  v0[57] = 0xE800000000000000;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  sub_1DCB88A38();
  uint64_t v7 = sub_1DCB2C6F4(v5, (SEL *)&selRef_idsDeviceID);
  if (!v8)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  uint64_t v9 = (void *)v0[84];
  uint64_t v10 = (void *)(v0[68] + v0[81]);
  *(void *)(inited + 168) = v6;
  *(void *)(inited + 144) = v7;
  *(void *)(inited + 152) = v8;
  v0[60] = 0x6874615065736162;
  v0[61] = 0xE800000000000000;
  sub_1DCB88A38();
  uint64_t v12 = v10[9];
  uint64_t v11 = v10[10];
  *(void *)(inited + 240) = v6;
  *(void *)(inited + 216) = v12;
  *(void *)(inited + 224) = v11;
  v0[58] = 0x68746150656C6966;
  v0[59] = 0xE900000000000073;
  swift_bridgeObjectRetain();
  sub_1DCB88A38();
  uint64_t v13 = v10[8];
  *(void *)(inited + 312) = sub_1DC87E988(&qword_1EAA9E7F0);
  *(void *)(inited + 288) = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DCB877D8();
  v0[86] = v14;
  uint64_t v15 = sub_1DCB2C6F4(v9, (SEL *)&selRef_identifier);
  v0[87] = v16;
  if (!v16) {
    goto LABEL_9;
  }
  uint64_t v17 = v15;
  uint64_t v18 = v16;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[88] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1DCB2B518;
  uint64_t v20 = v0[63];
  return sub_1DC914EA0(0xD000000000000013, 0x80000001DCB96020, v14, v17, v18, v20);
}

uint64_t sub_1DCB2B518()
{
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *unint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 712) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DCB2B668()
{
  uint64_t v1 = (void *)v0[69];
  objc_msgSend(v1, sel_setDispatchQueue_, v0[70]);
  objc_msgSend(v1, sel_setFlags_, objc_msgSend(v1, sel_flags) | 1);
  v0[62] = 0;
  unsigned int v2 = objc_msgSend(v1, sel_prepareTemplateAndReturnError_, v0 + 62);
  uint64_t v3 = (void *)v0[62];
  if (v2)
  {
    uint64_t v4 = v0[75];
    uint64_t v5 = v0[74];
    uint64_t v6 = v0[73];
    uint64_t v7 = v0[72];
    uint64_t v30 = v0[71];
    id v31 = (void *)v0[84];
    uint64_t v8 = (void *)v0[69];
    id v9 = v3;
    sub_1DCB86918();
    uint64_t v10 = (void *)sub_1DCB86948();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    objc_msgSend(v8, sel_setTemporaryDirectoryURL_, v10);

    uint64_t v11 = sub_1DC886810();
    *(void *)(v11 + 16) = v30;
    *(void *)(v11 + 24) = v7;
    uint64_t v12 = sub_1DC886810();
    *(void *)(v12 + 16) = sub_1DCB2CC28;
    *(void *)(v12 + 24) = v11;
    v0[52] = sub_1DCB2CC30;
    v0[53] = v12;
    v0[48] = MEMORY[0x1E4F143A8];
    v0[49] = 1107296256;
    v0[50] = sub_1DCB2BDD8;
    v0[51] = &unk_1F37FB0C0;
    uint64_t v13 = _Block_copy(v0 + 48);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_setReceivedItemHandler_, v13);
    _Block_release(v13);
    uint64_t v14 = sub_1DCB2C690(v31);
    if (v15 >> 60 == 15)
    {
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v21 = v14;
      unint64_t v22 = v15;
      uint64_t v16 = (void *)sub_1DCB86AB8();
      sub_1DC88668C(v21, v22);
    }
    uint64_t v23 = (void *)v0[79];
    objc_msgSend((id)v0[69], sel_setPeerPublicKey_, v16);

    sub_1DCB2C6F4(v23, (SEL *)&selRef_idsDeviceID);
    if (v24)
    {
      uint64_t v25 = (void *)sub_1DCB87908();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = 0;
    }
    uint64_t v26 = (void *)v0[84];
    id v27 = (void *)v0[79];
    id v28 = (void *)v0[69];
    objc_msgSend(v28, sel_setTargetID_, v25);

    objc_msgSend(v28, sel_activate);
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v17 = (void *)v0[84];
    uint64_t v18 = (void *)v0[79];
    id v19 = v3;
    sub_1DCB86898();

    swift_willThrow();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
  }
  return v20();
}

uint64_t sub_1DCB2B9E8()
{
  sub_1DC8867A8();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1DCB2CEE8();
  return v0();
}

uint64_t sub_1DCB2BA74()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void **)(v0 + 632);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  sub_1DCB2CEE8();
  return v2();
}

uint64_t sub_1DCB2BB08()
{
  sub_1DC886900();
  uint64_t v1 = *(void **)(v0 + 672);
  uint64_t v2 = *(void **)(v0 + 632);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1DCB2CEE8();
  return v3();
}

uint64_t sub_1DCB2BBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1DCB86FE8();
  sub_1DC89F57C(v6, (uint64_t)qword_1EAAFF810);
  uint64_t v7 = sub_1DCB86FC8();
  os_log_type_t v8 = sub_1DCB88488();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&dword_1DC873000, v7, v8, "Transfer completed", v9, 2u);
    MEMORY[0x1E01A99C0](v9, -1, -1);
  }

  return a5(0);
}

void sub_1DCB2BCB0(void *a1, void (*a2)(void), uint64_t a3, void (*a4)(void *))
{
  uint64_t v7 = type metadata accessor for FileCopyingResult(0);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (void *)((char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SNFileSharingUtils();
  sub_1DC9162A0(a1, v9);
  uint64_t v10 = type metadata accessor for SNFileCopyingResult(0);
  id v11 = sub_1DCB3C2E0((uint64_t)v9);
  v14[3] = v10;
  v14[0] = v11;
  id v12 = v11;
  a4(v14);
  sub_1DC8818D0((uint64_t)v14);
  a2(0);
}

void sub_1DCB2BDD8(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v5 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v5;
  swift_retain();
  id v6 = a2;
  v4();
  swift_release();
  swift_release();
}

uint64_t sub_1DCB2BE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 120) = a4;
  return MEMORY[0x1F4188298](sub_1DCB2BEB0, 0, 0);
}

uint64_t sub_1DCB2BEB0()
{
  sub_1DC886900();
  uint64_t v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_1DCB2BFA0;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1DCB29604;
  v0[13] = &unk_1E6CA77A0;
  v0[14] = v2;
  objc_msgSend(v1, sel_activateWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DCB2BFA0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 128) = *(void *)(v3 + 48);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DCB2C080()
{
  sub_1DC886900();
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DCB2C0E8(void *a1, void *a2, void *a3)
{
  objc_msgSend(a1, sel_invalidate);
  objc_msgSend(a2, sel_invalidate);
  objc_msgSend(a3, sel_invalidate);
  sub_1DC87E988(&qword_1EAA9DF60);

  return sub_1DCB87EE8();
}

id SNCopyFilesRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNCopyFilesRequest.init()()
{
}

id SNCopyFilesRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SNCopyFilesRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNCopyFilesRequest()
{
  return self;
}

uint64_t (*sub_1DCB2C2D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  return sub_1DCB2C974;
}

uint64_t method lookup function for SNCopyFilesRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNCopyFilesRequest);
}

uint64_t destroy for CopyFilesRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CopyFilesRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CopyFilesRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CopyFilesRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CopyFilesRequest()
{
  return &type metadata for CopyFilesRequest;
}

unint64_t sub_1DCB2C5E0()
{
  unint64_t result = qword_1EAAAB430;
  if (!qword_1EAAAB430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB430);
  }
  return result;
}

unint64_t sub_1DCB2C62C()
{
  unint64_t result = qword_1EAAAB440;
  if (!qword_1EAAAB440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB440);
  }
  return result;
}

uint64_t sub_1DCB2C678(void *a1)
{
  return sub_1DCB2C6F4(a1, (SEL *)&selRef_idsDeviceID);
}

uint64_t sub_1DCB2C684(void *a1)
{
  return sub_1DCB2C6F4(a1, (SEL *)&selRef_idsDeviceIdentifier);
}

uint64_t sub_1DCB2C690(void *a1)
{
  id v1 = objc_msgSend(a1, sel_edPKData);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = sub_1DCB86AD8();

  return v3;
}

uint64_t sub_1DCB2C6F4(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1DCB87938();
  }
  return sub_1DC8CD7C8();
}

uint64_t sub_1DCB2C750()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1DCB2C788()
{
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB2C7F0(void *a1)
{
  return sub_1DCB2AA18(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1DCB2C828(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCB2C838()
{
  return swift_release();
}

uint64_t sub_1DCB2C840()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCB2C880()
{
  sub_1DC886900();
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DCB2CE8C;
  uint64_t v4 = sub_1DC933DB4();
  return sub_1DCB2BE90(v4, v5, v6, v2);
}

uint64_t sub_1DCB2C924()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB2C974()
{
  return sub_1DCB2C0E8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1DCB2C980()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB2C9F8()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1DCB2CAF8;
  uint64_t v8 = sub_1DC933DB4();
  return sub_1DCB2AB90(v8, v9, v10, v2, v3, v4, v5, v6);
}

uint64_t sub_1DCB2CAF8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88679C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1DCB2CBC0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB2CBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCB2BBB8(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1DCB2CC00()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1DCB2CC28(void *a1, void (*a2)(void), uint64_t a3)
{
  sub_1DCB2BCB0(a1, a2, a3, *(void (**)(void *))(v3 + 16));
}

uint64_t sub_1DCB2CC30()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DCB2CC58()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_1DCB2CC90(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1DCB297DC(a1, a2, a3, *(void *)(v3 + 16));
}

unsigned char *storeEnumTagSinglePayload for CopyFilesRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB2CD64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CopyFilesRequest.CodingKeys()
{
  return &type metadata for CopyFilesRequest.CodingKeys;
}

unint64_t sub_1DCB2CDA0()
{
  unint64_t result = qword_1EAAAB4A0;
  if (!qword_1EAAAB4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB4A0);
  }
  return result;
}

unint64_t sub_1DCB2CDF0()
{
  unint64_t result = qword_1EAAAB4A8;
  if (!qword_1EAAAB4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB4A8);
  }
  return result;
}

unint64_t sub_1DCB2CE40()
{
  unint64_t result = qword_1EAAAB4B0[0];
  if (!qword_1EAAAB4B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAAB4B0);
  }
  return result;
}

uint64_t sub_1DCB2CEB0()
{
  return v0;
}

uint64_t sub_1DCB2CEC4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_1DCB88EC8();
}

uint64_t sub_1DCB2CEE8()
{
  return v0 + 8;
}

uint64_t sub_1DCB2CEF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656873696E6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCB2CFE8(char a1)
{
  if (a1) {
    return 0x6572756C696166;
  }
  else {
    return 0x64656873696E6966;
  }
}

uint64_t sub_1DCB2D020()
{
  return sub_1DCB2CFE8(*v0);
}

uint64_t sub_1DCB2D030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB2CEF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB2D060(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DCB2D0B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1DCB2D108()
{
  return sub_1DC8A4CB8();
}

uint64_t sub_1DCB2D114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC8A4C0C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCB2D148(uint64_t a1, uint64_t a2)
{
  return sub_1DCB2D260(a1, a2, (uint64_t (*)(void, void))sub_1DC888648);
}

uint64_t sub_1DCB2D160(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DCB2D1B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1DCB2D208()
{
  return sub_1DC8CE4BC();
}

uint64_t sub_1DCB2D214@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DC8CE49C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DCB2D248(uint64_t a1, uint64_t a2)
{
  return sub_1DCB2D260(a1, a2, (uint64_t (*)(void, void))sub_1DCB2F054);
}

uint64_t sub_1DCB2D260(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  return a3(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_1DCB2D288(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DCB2D2DC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t PubSub.Completion<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  uint64_t v4 = *(void *)(a2 + 16);
  sub_1DCB2F0A4();
  uint64_t v5 = type metadata accessor for PubSub.Completion.FailureCodingKeys();
  swift_getWitnessTable();
  sub_1DCB2F0D4();
  uint64_t v41 = v5;
  v38[6] = v6;
  sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v43 = v8;
  uint64_t v44 = v7;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v9);
  sub_1DCB2F0C8();
  uint64_t v40 = v10;
  sub_1DC88D538();
  uint64_t v42 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  uint64_t v39 = v13;
  sub_1DCB2F0A4();
  uint64_t v14 = type metadata accessor for PubSub.Completion.FinishedCodingKeys();
  swift_getWitnessTable();
  sub_1DCB2F0D4();
  v38[5] = v14;
  v38[3] = v15;
  v38[4] = sub_1DCB88F78();
  sub_1DC88D538();
  v38[2] = v16;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v17);
  sub_1DCB2F0C8();
  v38[1] = v18;
  sub_1DC88D538();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCB2F0A4();
  type metadata accessor for PubSub.Completion.CodingKeys();
  swift_getWitnessTable();
  sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v47 = v25;
  uint64_t v48 = v24;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v26);
  id v28 = (char *)v38 - v27;
  sub_1DC881A8C(a1, a1[3]);
  uint64_t v50 = v28;
  sub_1DCB892B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v49, v46);
  uint64_t v49 = v4;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v23, 1, v4) == 1)
  {
    char v51 = 0;
    sub_1DCB88E88();
    sub_1DC88D5C8();
    v29();
    sub_1DC88D5C8();
    return v30();
  }
  else
  {
    uint64_t v32 = v47;
    uint64_t v33 = v42;
    uint64_t v34 = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v39, v23, v49);
    char v52 = 1;
    uint64_t v35 = v48;
    sub_1DCB88E88();
    sub_1DCB88F18();
    uint64_t v36 = sub_1DC9D2E38();
    v37(v36);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v49);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v50, v35);
  }
}

uint64_t type metadata accessor for PubSub.Completion.FailureCodingKeys()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for PubSub.Completion.FinishedCodingKeys()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for PubSub.Completion.CodingKeys()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCB2D75C(void *a1, uint64_t a2, uint64_t a3)
{
  return PubSub.Completion<>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t PubSub.Completion<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v57 = a3;
  unint64_t v60 = a4;
  uint64_t v6 = type metadata accessor for PubSub.Completion.FailureCodingKeys();
  swift_getWitnessTable();
  sub_1DCB2F0D4();
  uint64_t v64 = v7;
  uint64_t v65 = v6;
  uint64_t v56 = sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v58 = v8;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v9);
  sub_1DCB2F0C8();
  uint64_t v66 = v10;
  sub_1DCB2F0B4();
  uint64_t v11 = type metadata accessor for PubSub.Completion.FinishedCodingKeys();
  swift_getWitnessTable();
  sub_1DCB2F0D4();
  uint64_t v62 = v12;
  uint64_t v63 = v11;
  uint64_t v55 = sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v54 = v13;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v14);
  sub_1DCB2F0C8();
  uint64_t v61 = v15;
  sub_1DCB2F0B4();
  type metadata accessor for PubSub.Completion.CodingKeys();
  swift_getWitnessTable();
  uint64_t v70 = sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v68 = v16;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v71 = a2;
  uint64_t v67 = type metadata accessor for PubSub.Completion();
  sub_1DC88D538();
  uint64_t v59 = v20;
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v51 - v25;
  sub_1DC881A8C(a1, a1[3]);
  uint64_t v69 = v19;
  uint64_t v27 = v76;
  sub_1DCB89298();
  if (v27) {
    goto LABEL_7;
  }
  char v52 = v24;
  id v53 = v26;
  uint64_t v76 = a1;
  uint64_t v29 = v70;
  uint64_t v28 = v71;
  uint64_t v30 = v69;
  *(void *)&long long v72 = sub_1DCB88E58();
  sub_1DCB87D78();
  swift_getWitnessTable();
  *(void *)&long long v74 = sub_1DCB888F8();
  *((void *)&v74 + 1) = v31;
  *(void *)&long long v75 = v32;
  *((void *)&v75 + 1) = v33;
  sub_1DCB888B8();
  swift_getWitnessTable();
  sub_1DCB88128();
  char v34 = v72;
  if (v72 == 2 || (long long v51 = v74, v72 = v74, v73 = v75, (sub_1DCB881C8() & 1) == 0))
  {
    uint64_t v38 = sub_1DCB88B18();
    swift_allocError();
    uint64_t v40 = v39;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v40 = v67;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v40, *MEMORY[0x1E4FBBA70], v38);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v30, v29);
    a1 = v76;
LABEL_7:
    uint64_t v41 = (uint64_t)a1;
    return sub_1DC8818D0(v41);
  }
  if (v34)
  {
    LOBYTE(v72) = 1;
    sub_1DCB88D58();
    uint64_t v43 = (uint64_t)v52;
    sub_1DCB88DF8();
    uint64_t v44 = sub_1DC9D2E38();
    v45(v44);
    swift_unknownObjectRelease();
    uint64_t v46 = sub_1DCB2F07C();
    v47(v46);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v43, 0, 1, v28);
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
    uint64_t v49 = (uint64_t)v53;
    uint64_t v50 = v67;
    v48(v53, v43, v67);
    v48(v60, v49, v50);
  }
  else
  {
    LOBYTE(v72) = 0;
    sub_1DCB88D58();
    sub_1DC88D5C8();
    v35();
    swift_unknownObjectRelease();
    sub_1DC88D5C8();
    v36();
    uint64_t v37 = (uint64_t)v53;
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v53, 1, 1, v28);
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v60, v37, v67);
  }
  uint64_t v41 = (uint64_t)v76;
  return sub_1DC8818D0(v41);
}

uint64_t type metadata accessor for PubSub.Completion()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCB2DDDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  return PubSub.Completion<>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t static PubSub.Completion<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  sub_1DC88D538();
  uint64_t v34 = v6;
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC88D550();
  uint64_t v31 = v8;
  uint64_t v9 = type metadata accessor for PubSub.Completion();
  sub_1DC88D538();
  uint64_t v11 = v10;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1DC88D538();
  uint64_t v17 = v16;
  sub_1DC88D668();
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v30 - v20;
  uint64_t v22 = (char *)&v30 + *(int *)(v19 + 48) - v20;
  uint64_t v33 = v11;
  uint64_t v23 = *(void (**)(void))(v11 + 16);
  sub_1DCA7D25C();
  v23();
  sub_1DCA7D25C();
  v23();
  sub_1DC913CE0((uint64_t)v21);
  if (v25)
  {
    char v24 = 1;
    sub_1DC913CE0((uint64_t)v22);
    if (v25) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_1DCA7D25C();
    v23();
    sub_1DC913CE0((uint64_t)v22);
    if (!v25)
    {
      uint64_t v26 = v34;
      uint64_t v27 = v31;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v22, a3);
      char v24 = sub_1DCB878C8();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v26 + 8);
      v28(v27, a3);
      v28(v14, a3);
LABEL_10:
      uint64_t v17 = v33;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, a3);
  }
  char v24 = 0;
  uint64_t v9 = TupleTypeMetadata2;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v9);
  return v24 & 1;
}

uint64_t sub_1DCB2E060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static PubSub.Completion<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t PubSub.Completion<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  sub_1DCB2F064();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCB2F064();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, v12);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v2) == 1) {
    return sub_1DCB891B8();
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v10, v2);
  sub_1DCB891B8();
  sub_1DCB87818();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t PubSub.Completion<>.hashValue.getter(uint64_t a1)
{
  sub_1DCB891A8();
  PubSub.Completion<>.hash(into:)((uint64_t)v3, a1);
  return sub_1DCB891F8();
}

uint64_t sub_1DCB2E22C(uint64_t a1)
{
  return PubSub.Completion<>.hashValue.getter(a1);
}

uint64_t sub_1DCB2E234(uint64_t a1, uint64_t a2)
{
  return PubSub.Completion<>.hash(into:)(a1, a2);
}

uint64_t sub_1DCB2E23C(uint64_t a1, uint64_t a2)
{
  sub_1DCB891A8();
  PubSub.Completion<>.hash(into:)((uint64_t)v4, a2);
  return sub_1DCB891F8();
}

uint64_t sub_1DCB2E290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC88D538();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = 1;
  sub_1DC913CE0((uint64_t)v6);
  if (!v10)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a2, v6, v8);
    uint64_t v9 = 0;
  }
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, v9, 1, v8);
}

uint64_t PubSub.Completion.toCombine()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCB2E290(a1, a2);
}

uint64_t static PubSub.Completion.fromCombine(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DCB871D8();
  return sub_1DCB2E290(v2, a1);
}

Swift::Void __swiftcall PubSub.AnyCancellable.cancel()()
{
}

uint64_t PubSub.AnyPublisher.sink(receiveCompletion:receiveValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t *a4@<X8>)
{
  swift_retain();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = a3[3];
  void v8[2] = a3[2];
  _OWORD v8[3] = v9;
  _OWORD v8[4] = a3[4];
  v8[5] = a1;
  void v8[6] = a2;
  sub_1DCB87238();
  swift_retain();
  swift_getWitnessTable();
  uint64_t v10 = sub_1DCB87428();
  swift_release();
  uint64_t result = swift_release();
  *a4 = v10;
  return result;
}

uint64_t sub_1DCB2E508(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = type metadata accessor for PubSub.Completion();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = sub_1DCB871D8();
  sub_1DCB2E290(v7, (uint64_t)v6);
  a2(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DCB2E614()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB2E64C(uint64_t a1)
{
  return sub_1DCB2E508(a1, *(void (**)(char *))(v1 + 40));
}

uint64_t PubSub.AnySubject.send(_:)()
{
  return sub_1DCB87358();
}

uint64_t PubSub.AnySubject.send(completion:)()
{
  sub_1DCB2F094();
  uint64_t v0 = sub_1DCB871D8();
  sub_1DC88D538();
  uint64_t v2 = v1;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v8 - v4;
  swift_getObjectType();
  sub_1DCB2F094();
  uint64_t v6 = type metadata accessor for PubSub.Completion();
  sub_1DCB2E290(v6, (uint64_t)v5);
  sub_1DCB87338();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v0);
}

uint64_t static PubSub.AnySubject.createSharedPassthroughSubject()@<X0>(uint64_t *a1@<X8>)
{
  sub_1DCB872C8();
  sub_1DCB872A8();
  swift_getWitnessTable();
  uint64_t v2 = sub_1DC8FB968();
  swift_release();
  sub_1DCB2F094();
  type metadata accessor for SharedSubject();
  uint64_t result = swift_getWitnessTable();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1DCB2E83C()
{
  return swift_unknownObjectRetain();
}

uint64_t PubSub.AnySubject.toCombine()()
{
  return sub_1DCB2E83C();
}

uint64_t static PubSub.AnySubject.fromCombine(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCB2E8A0()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for PubSub()
{
  return &type metadata for PubSub;
}

uint64_t sub_1DCB2E8F8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 > 3) {
            LODWORD(v7) = 4;
          }
          switch((int)v7)
          {
            case 2:
              LODWORD(v7) = *a1;
              break;
            case 3:
              LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v7) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v7) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v6 + (v7 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v14 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_1DCB2EA7C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v9) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v10;
  unsigned int v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        int v6 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v15 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v16 = ~v10 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v18 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1DCB2EC9CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (a2)
      {
LABEL_28:
        if (v9 >= 2)
        {
          uint64_t v19 = a2 + 1;
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, v19, v9, v7);
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for PubSub.AnyCancellable()
{
  return &type metadata for PubSub.AnyCancellable;
}

uint64_t type metadata accessor for PubSub.AnyPublisher()
{
  return sub_1DC8866E4();
}

_OWORD *sub_1DCB2ECEC(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

void *sub_1DCB2ED20(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *sub_1DCB2ED68(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t type metadata accessor for PubSub.AnySubject()
{
  return sub_1DC8866E4();
}

unsigned char *sub_1DCB2EDB8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB2EE84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1DCB2EEAC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCB2EF48);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCB2EF70()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB2EF8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB2EFA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB2EFC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB2EFE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB2EFFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB2F018()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCB2F034()
{
  return swift_getWitnessTable();
}

uint64_t _s13SoundAnalysis6PubSubV14AnyCancellableV11fromCombineyAE0H0ADCFZ_0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1DCB2F07C()
{
  return v0;
}

uint64_t sub_1DCB2F094()
{
  return 0;
}

uint64_t sub_1DCB2F0A4()
{
  return 255;
}

uint64_t sub_1DCB2F0B4()
{
  return 255;
}

uint64_t sub_1DCB2F0D4()
{
  return 0;
}

uint64_t sub_1DCB2F0E0()
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  v1[2] = &v3;
  v1[3] = &v2;
  uint64_t v2 = 0;
  sub_1DCB2F168((uint64_t)sub_1DCB2F3F4, (uint64_t)v1);
  if (!v2) {
    return v3;
  }
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB2F168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  v7[4] = sub_1DCB2F458;
  v7[5] = v4;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  void v7[2] = sub_1DCB2F274;
  id v7[3] = &unk_1F37FAC10;
  uint64_t v5 = _Block_copy(v7);
  swift_retain();
  swift_release();
  os_enumerate_boot_args_b();
  _Block_release(v5);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCB2F274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4) & 1;
}

BOOL sub_1DCB2F2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void **a5)
{
  if (a1)
  {
    if (a2)
    {
      uint64_t v7 = sub_1DCB87A28();
      uint64_t v9 = v8;
      uint64_t v10 = sub_1DCB87A28();
      uint64_t v12 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC9B4600();
      uint64_t v13 = *(void *)(*a4 + 16);
      sub_1DC9B4758(v13);
      uint64_t v14 = *a4;
      *(void *)(v14 + 16) = v13 + 1;
      unsigned int v15 = (void *)(v14 + 32 * v13);
      void v15[4] = v7;
      void v15[5] = v9;
      v15[6] = v10;
      v15[7] = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = sub_1DCB87A28();
      uint64_t v21 = v20;
      swift_bridgeObjectRetain();
      sub_1DC9B4600();
      uint64_t v22 = *(void *)(*a4 + 16);
      sub_1DC9B4758(v22);
      uint64_t v23 = *a4;
      *(void *)(v23 + 16) = v22 + 1;
      char v24 = (void *)(v23 + 32 * v22);
      v24[4] = v19;
      void v24[5] = v21;
      v24[6] = 0;
      v24[7] = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DCB2F3FC();
    uint64_t v17 = swift_allocError();
    swift_willThrow();
    int v18 = *a5;
    *a5 = (void *)v17;
  }
  return a1 != 0;
}

BOOL sub_1DCB2F3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCB2F2AC(a1, a2, a3, *(uint64_t **)(v3 + 16), *(void ***)(v3 + 24));
}

unint64_t sub_1DCB2F3FC()
{
  unint64_t result = qword_1EAAAB7C0;
  if (!qword_1EAAAB7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB7C0);
  }
  return result;
}

uint64_t sub_1DCB2F448()
{
  return swift_deallocObject();
}

uint64_t sub_1DCB2F458()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1DCB2F484(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCB2F494()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for BootArgsUtils.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCB2F538);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BootArgsUtils.DomainError()
{
  return &type metadata for BootArgsUtils.DomainError;
}

ValueMetadata *type metadata accessor for SystemBootArgsReader()
{
  return &type metadata for SystemBootArgsReader;
}

unint64_t sub_1DCB2F584()
{
  unint64_t result = qword_1EAAAB7C8;
  if (!qword_1EAAAB7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB7C8);
  }
  return result;
}

uint64_t sub_1DCB2F5D0()
{
  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeResultsFormatterNode()
{
  return self;
}

uint64_t sub_1DCB2F6AC()
{
  return swift_bridgeObjectRetain();
}

id sub_1DCB2F6BC(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___SNFileListingResult_fileItems] = a1;
  v3.receiver = v1;
  v3.Class super_class = (Class)type metadata accessor for SNFileListingResult();
  return objc_msgSendSuper2(&v3, sel_init);
}

id SNFileListingResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNFileListingResult.init()()
{
}

id SNFileListingResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SNFileListingResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileListingResult()
{
  return self;
}

uint64_t method lookup function for SNFileListingResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNFileListingResult);
}

char *sub_1DCB2F82C(char *result)
{
  if (result)
  {
    unint64_t result = mach_error_string((mach_error_t)result);
    if (result)
    {
      sub_1DCB87A28();
      type metadata accessor for SNError();
      sub_1DCB88A98();
      swift_bridgeObjectRelease();
      sub_1DCB2FB60();
      sub_1DCB88F98();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      unint64_t v1 = sub_1DCB2FB48();
      sub_1DCA14B2C(v1, v2, v3, 0, v4, 0xE000000000000000);
      swift_bridgeObjectRelease();
      return (char *)swift_willThrow();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1DCB2F960(int a1)
{
  uint64_t result = sub_1DCB87088();
  if (result != a1)
  {
    type metadata accessor for SNError();
    uint64_t v3 = sub_1DCB87938();
    uint64_t v5 = v4;
    id v6 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    id v7 = sub_1DCB2FA98(v3, v5, a1, 0);
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCB2FB60();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v8 = sub_1DCB2FB48();
    sub_1DCA14B2C(v8, v9, v10, v7, v11, 0xE000000000000000);

    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

id sub_1DCB2FA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  if (a4)
  {
    unint64_t v8 = (void *)sub_1DCB87788();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

unint64_t sub_1DCB2FB48()
{
  return 0xD000000000000017;
}

id sub_1DCB2FB74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = self;
  id v7 = (objc_class *)type metadata accessor for SNMLModelObjC();
  unint64_t v8 = (char *)objc_allocWithZone(v7);
  id v9 = &v8[OBJC_IVAR____TtC13SoundAnalysis13SNMLModelObjC_model];
  *(void *)id v9 = a2;
  *((void *)v9 + 1) = a3;
  v14.receiver = v8;
  v14.Class super_class = v7;
  swift_unknownObjectRetain();
  id v10 = objc_msgSendSuper2(&v14, sel_init);
  id v13 = 0;
  LODWORD(a2) = sub_1DCB6ABF4(v6, a1, v10, (uint64_t)&v13);

  if (a2) {
    return v13;
  }
  id v12 = v13;
  sub_1DCB86898();

  return (id)swift_willThrow();
}

id sub_1DCB2FC90@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v6 = self;
  id v17 = 0;
  int v7 = sub_1DCB6C65C(v6, a1, a2, (uint64_t)&v18, (uint64_t)&v17);
  id v8 = v17;
  if (v7)
  {
    uint64_t v9 = *((void *)&v18 + 1);
    long long v10 = v19;
    int v11 = v20;
    int v12 = HIDWORD(v20);
    uint64_t v13 = *(void *)((char *)&v20 + 4);
    long long v14 = v21;
    *(void *)a3 = v18;
    *(void *)(a3 + 8) = v9;
    *(_OWORD *)(a3 + 16) = v10;
    *(_DWORD *)(a3 + 32) = v11;
    *(void *)(a3 + 36) = v13;
    *(_DWORD *)(a3 + 44) = v12;
    *(_OWORD *)(a3 + 48) = v14;
    return v8;
  }
  else
  {
    id v16 = v17;
    sub_1DCB86898();

    return (id)swift_willThrow();
  }
}

uint64_t sub_1DCB2FD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v6 = 0;
  uint64_t result = sub_1DCB5A708(a1, (float *)&v6, a2, a3, a4);
  if ((result & 1) == 0)
  {
    sub_1DC8A1D40();
    sub_1DC883884();
    *uint64_t v5 = 4;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCB2FE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *(void *)a5;
  if (!*(void *)a5)
  {
    unsigned int v11 = 0;
    sub_1DC884E74();
    sub_1DC883884();
    char v10 = 0;
LABEL_7:
    *uint64_t v9 = v10;
    return swift_willThrow();
  }
  if (*(void *)(a5 + 8) - v6 < 0x100000000)
  {
    unsigned int v11 = *(_DWORD *)(a5 + 8) - v6;
    uint64_t result = sub_1DCB59F68(a1, v6, (int *)&v11);
    if (result)
    {
      uint64_t v8 = v6 + v11;
      *(void *)a5 = v6;
      *(void *)(a5 + 8) = v8;
      return result;
    }
    sub_1DC8A1D40();
    sub_1DC883884();
    char v10 = 2;
    goto LABEL_7;
  }
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

uint64_t sub_1DCB2FF84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = MEMORY[0x1E01A5AE0](a5);
  unint64_t v14 = v10;
  sub_1DCB300A8(&v13, a1, a2, a3, a4, &v12);
  uint64_t result = sub_1DC881920(v13, v14);
  if (!v5) {
    return v12;
  }
  return result;
}

uint64_t sub_1DCB30018(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1DCB2FF84(a1, a2, a3, a4, a5);
  unint64_t v9 = v8;
  if (!v5 && sub_1DCB86AF8() != a5)
  {
    sub_1DC8A1D40();
    sub_1DC883884();
    *unint64_t v10 = 3;
    swift_willThrow();
    sub_1DC881920(v7, v9);
  }
  return v7;
}

void sub_1DCB300A8(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *a1;
  unint64_t v10 = a1[1];
  id v12 = a2;
  uint64_t v13 = v12;
  switch(v10 >> 62)
  {
    case 1uLL:
      unsigned int v34 = a5;
      uint64_t v17 = v10 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1DCBC1AB0;
      id v18 = v12;
      uint64_t v19 = v11 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      id v32 = v18;
      if (v19 < (int)v11) {
        goto LABEL_16;
      }
      if (sub_1DCB867D8() && __OFSUB__((int)v11, sub_1DCB86808())) {
        goto LABEL_17;
      }
      sub_1DCB86818();
      swift_allocObject();
      uint64_t v28 = sub_1DCB867C8();
      swift_release();
      uint64_t v17 = v28;
      a3 = a3;
      id v18 = v32;
LABEL_11:
      if (v19 < (int)v11)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      id v29 = v18;
      uint64_t v30 = a3;
      id v31 = v29;
      sub_1DCB3042C((int)v11, v11 >> 32, v29, v30, a4, v34, a6);

      unint64_t v26 = v17 | 0x4000000000000000;
LABEL_13:
      *a1 = v11;
      a1[1] = v26;
LABEL_14:

      return;
    case 2uLL:
      *(void *)&long long v37 = v11;
      *((void *)&v37 + 1) = v10 & 0x3FFFFFFFFFFFFFFFLL;
      unsigned int v33 = a4;
      unsigned int v35 = a5;
      id v20 = v12;
      sub_1DCB86A38();
      uint64_t v21 = v10 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v22 = a3;
      uint64_t v23 = *(void *)(v11 + 16);
      uint64_t v24 = *(void *)(v11 + 24);
      id v25 = v20;
      sub_1DCB3042C(v23, v24, v25, v22, v33, v35, a6);

      unint64_t v26 = v21 | 0x8000000000000000;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v37 + 7) = 0;
      *(void *)&long long v37 = 0;
      id v27 = v12;
      sub_1DCB30520((uint64_t)&v37, 0, v27, a3, a4, a5, a6);

      goto LABEL_14;
    default:
      *(void *)&long long v37 = v11;
      WORD4(v37) = v10;
      BYTE10(v37) = BYTE2(v10);
      BYTE11(v37) = BYTE3(v10);
      BYTE12(v37) = BYTE4(v10);
      BYTE13(v37) = BYTE5(v10);
      uint64_t v14 = BYTE6(v10);
      BYTE14(v37) = BYTE6(v10);
      id v15 = v12;
      sub_1DCB30520((uint64_t)&v37, v14, v15, a3, a4, a5, a6);

      unint64_t v16 = DWORD2(v37) | ((unint64_t)BYTE12(v37) << 32) | ((unint64_t)BYTE13(v37) << 40) | ((unint64_t)BYTE14(v37) << 48);
      *a1 = v37;
      a1[1] = v16;
      goto LABEL_14;
  }
}

void sub_1DCB3042C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v13 = sub_1DCB867D8();
  if (!v13) {
    goto LABEL_13;
  }
  uint64_t v14 = v13;
  uint64_t v15 = sub_1DCB86808();
  uint64_t v16 = a1 - v15;
  if (__OFSUB__(a1, v15))
  {
    __break(1u);
    goto LABEL_12;
  }
  BOOL v17 = __OFSUB__(a2, a1);
  uint64_t v18 = a2 - a1;
  if (v17)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v19 = sub_1DCB867F8();
  if (v19 >= v18) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v19;
  }
  uint64_t v26 = v14 + v16;
  uint64_t v27 = v14 + v16 + v20;
  uint64_t v21 = v28;
  sub_1DCB2FE40((uint64_t)a3, a4, a5, a6, (uint64_t)&v26);
  if (v21)
  {
  }
  else
  {
    uint64_t v22 = sub_1DC9E1140(v26, v27);
    uint64_t v24 = v23;

    *a7 = v22;
    a7[1] = v24;
  }
}

void sub_1DCB30520(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v13 = a1;
  uint64_t v14 = a1 + a2;
  sub_1DCB2FE40((uint64_t)a3, a4, a5, a6, (uint64_t)&v13);
  if (v7)
  {
  }
  else
  {
    uint64_t v10 = sub_1DC9E1140(v13, v14);
    uint64_t v12 = v11;

    *a7 = v10;
    a7[1] = v12;
  }
}

unsigned char *storeEnumTagSinglePayload for DSPGraphUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB30678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DSPGraphUtils.DomainError()
{
  return &type metadata for DSPGraphUtils.DomainError;
}

unint64_t sub_1DCB306B4()
{
  unint64_t result = qword_1EAAAB7F0;
  if (!qword_1EAAAB7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB7F0);
  }
  return result;
}

double sub_1DCB30700(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  sub_1DCB33FD0(v5);

  if (!v2) {
    v14.n128_u64[0] = sub_1DCB36964(v6, v7, v8, v9, v10, v11, v12, v13, v16, v17, HIBYTE(v17), v18, v19, v20, v21, v14).n128_u64[0];
  }
  return v14.n128_f64[0];
}

uint64_t sub_1DCB3077C(uint64_t a1)
{
  uint64_t v2 = sub_1DCB88008();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1DCB340D8(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_1DCB30830(uint64_t a1)
{
  return sub_1DCB308E4(a1, sub_1DCA21AF4);
}

uint64_t sub_1DCB30848(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  BOOL v3 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v3)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = sub_1DCB88008();
  uint64_t v7 = result;
  if (v2 == a2) {
    return result;
  }
  if (a2 < v2) {
    goto LABEL_9;
  }
  if (v2 >= a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  do
    sub_1DCB34288(&v6, v2++);
  while (a2 != v2);
  return v7;
}

void *sub_1DCB308E4(uint64_t a1, void *(*a2)(void *__return_ptr, uint64_t))
{
  uint64_t v20 = sub_1DCB88008();
  uint64_t result = a2(v21, a1);
  uint64_t v5 = v21[0];
  uint64_t v6 = v21[1];
  int64_t v7 = v21[3];
  unint64_t v8 = v22;
  int64_t v9 = (unint64_t)(v21[2] + 64) >> 6;
  if (!v22) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v11 = v10 | (v7 << 6);
  while (1)
  {
    unint64_t v16 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v11);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    sub_1DCB340D8(&v19, v17, v18);
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_21;
    }
    unint64_t v13 = *(void *)(v6 + 8 * v12);
    int64_t v14 = v7 + 1;
    if (!v13)
    {
      int64_t v14 = v7 + 2;
      if (v7 + 2 >= v9) {
        goto LABEL_21;
      }
      unint64_t v13 = *(void *)(v6 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v7 + 3;
        if (v7 + 3 >= v9) {
          goto LABEL_21;
        }
        unint64_t v13 = *(void *)(v6 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v7 + 4;
          if (v7 + 4 >= v9) {
            goto LABEL_21;
          }
          unint64_t v13 = *(void *)(v6 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v7 + 5;
            if (v7 + 5 >= v9) {
              goto LABEL_21;
            }
            unint64_t v13 = *(void *)(v6 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v7 + 6;
              while (v15 < v9)
              {
                unint64_t v13 = *(void *)(v6 + 8 * v15++);
                if (v13)
                {
                  int64_t v14 = v15 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (void *)v20;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v7 = v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCB30A6C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for SNModelFeatureConnection();
  sub_1DCB361E0(&qword_1EAA9C640, v3, (void (*)(uint64_t))type metadata accessor for SNModelFeatureConnection);
  uint64_t result = sub_1DCB88008();
  uint64_t v5 = result;
  uint64_t v10 = result;
  if (!v2)
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DCB88CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_13;
  }
LABEL_5:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1E01A7AE0](i, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * i + 32);
      }
      sub_1DCB34384(&v9, v8);
    }
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCB30BDC(void *a1, int a2)
{
  LODWORD(v2) = a2;
  sub_1DCB33C1C(a1);
  id v3 = sub_1DCB33884();
  char v5 = v4;
  swift_bridgeObjectRelease();
  if (v5) {
    unint64_t v2 = v2;
  }
  else {
    unint64_t v2 = (unint64_t)v3;
  }
  if ((v2 & 0x8000000000000000) == 0 && !HIDWORD(v2)) {
    return v2;
  }
  sub_1DC8AF148();
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

uint64_t sub_1DCB30CCC(void *a1, uint64_t a2)
{
  sub_1DCB33C1C(a1);
  uint64_t v3 = sub_1DCB33784();
  swift_bridgeObjectRelease();
  if (v3) {
    return v3;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1DCB30D3C(void *a1, uint64_t a2)
{
  uint64_t v3 = sub_1DCB33D58(a1);
  if (v3) {
    return v3;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1DCB30D98()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNModelFeatureConnection_impl + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DCB30DD4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNModelFeatureConnection_impl);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DCB30E10()
{
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB30E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = sub_1DCB89018(), uint64_t result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
    {
      return 1;
    }
    else
    {
      return sub_1DCB89018();
    }
  }
  return result;
}

uint64_t sub_1DCB30F3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB9B9B0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DCB9B9D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1DCB31028(char a1)
{
  if (a1) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000011;
  }
}

void sub_1DCB31064()
{
  sub_1DC88D6B0();
  v11[0] = v1;
  v11[1] = v2;
  char v4 = v3;
  uint64_t v5 = sub_1DC87E988(&qword_1EAAAB840);
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(v4, v4[3]);
  sub_1DCB36228();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  if (!v0) {
    sub_1DCB88EC8();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_1DC88D674();
}

uint64_t sub_1DCB311A0()
{
  return sub_1DCB891F8();
}

void sub_1DCB31230()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAAB830);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB36228();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DCB88DA8();
    swift_bridgeObjectRetain();
    sub_1DCB88DA8();
    uint64_t v4 = sub_1DC99BA44();
    v5(v4);
    swift_bridgeObjectRetain();
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

unint64_t sub_1DCB313D0()
{
  return sub_1DCB31028(*v0);
}

uint64_t sub_1DCB313D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB30F3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB31400(uint64_t a1)
{
  unint64_t v2 = sub_1DCB36228();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB3143C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB36228();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB31478()
{
  return sub_1DCB311A0();
}

uint64_t sub_1DCB31484()
{
  return sub_1DCB30E10();
}

uint64_t sub_1DCB31490()
{
  return sub_1DCB891F8();
}

void sub_1DCB31514(void *a1@<X8>)
{
  sub_1DCB31230();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
}

void sub_1DCB31544()
{
}

uint64_t sub_1DCB31564(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCB30E9C(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1DCB31580()
{
  int v1 = *(unsigned __int8 *)(v0 + 9);
  int v2 = *(unsigned __int8 *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_1DCB891C8();
  }
  else
  {
    sub_1DCB891C8();
    sub_1DCB891B8();
  }
  if (v1 == 2)
  {
    sub_1DCB891C8();
    if (!v2) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DCB891C8();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    if (!v2)
    {
LABEL_6:
      sub_1DCB891C8();
      sub_1DCB891B8();
      if (!v3) {
        goto LABEL_7;
      }
LABEL_13:
      sub_1DCB891C8();
      if (v4) {
        goto LABEL_8;
      }
      return sub_1DCB891C8();
    }
  }
  sub_1DCB891C8();
  if (v3) {
    goto LABEL_13;
  }
LABEL_7:
  sub_1DCB891C8();
  sub_1DCB891B8();
  if (!v4) {
    return sub_1DCB891C8();
  }
LABEL_8:
  sub_1DCB891C8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

BOOL sub_1DCB3170C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  char v8 = *(unsigned char *)(a2 + 8);
  int v9 = *(unsigned __int8 *)(a2 + 9);
  uint64_t v10 = *(void *)(a2 + 16);
  int v11 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  int v13 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 56);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 9) == 2)
  {
    if (v9 != 2) {
      return 0;
    }
  }
  else
  {
    if (v9 == 2) {
      return 0;
    }
    uint64_t v21 = *(void *)(a1 + 56);
    uint64_t v22 = *(void *)(a1 + 48);
    char v16 = sub_1DC8C21EC();
    uint64_t v7 = v21;
    uint64_t v6 = v22;
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  if (v3)
  {
    if (!v11) {
      return 0;
    }
  }
  else
  {
    if (v2 == v10) {
      char v17 = v11;
    }
    else {
      char v17 = 1;
    }
    if (v17) {
      return 0;
    }
  }
  if (v5)
  {
    if (!v13) {
      return 0;
    }
  }
  else
  {
    if (v4 == v12) {
      char v18 = v13;
    }
    else {
      char v18 = 1;
    }
    if (v18) {
      return 0;
    }
  }
  if (v7)
  {
    if (!v14) {
      return 0;
    }
    BOOL v19 = v6 == v15 && v7 == v14;
    return v19 || (sub_1DCB89018() & 1) != 0;
  }
  return !v14;
}

uint64_t sub_1DCB3184C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DCB9BB90 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB9BBB0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB9BBD0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656449646E756F73 && a2 == 0xEF7265696669746ELL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1DCB31A80(char a1)
{
  unint64_t result = 0x6152656C706D6173;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x656449646E756F73;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DCB31B50()
{
  sub_1DC88D6B0();
  uint64_t v19 = v1;
  char v3 = v2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAAB890);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  int v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v22 = *(unsigned char *)(v0 + 9);
  uint64_t v18 = *(void *)(v0 + 16);
  int v17 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 32);
  int v15 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v13 = *(void *)(v0 + 48);
  uint64_t v14 = v10;
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCB366C0();
  sub_1DCB892B8();
  LOBYTE(v20) = 0;
  uint64_t v11 = v19;
  sub_1DCB88EA8();
  if (!v11)
  {
    LOBYTE(v20) = v22;
    sub_1DC8CD378();
    sub_1DCB88EB8();
    LOBYTE(v20) = 2;
    sub_1DCB88EA8();
    LOBYTE(v20) = 3;
    sub_1DCB88EA8();
    uint64_t v20 = v13;
    uint64_t v21 = v14;
    sub_1DC87E988((uint64_t *)&unk_1EAAAB880);
    sub_1DCB3670C(&qword_1EAA9E930);
    sub_1DCB88EB8();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_1DC88D674();
}

uint64_t sub_1DCB31DB0()
{
  return sub_1DCB891F8();
}

void sub_1DCB31E34()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAAB868);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB366C0();
  sub_1DCB89298();
  if (!v0)
  {
    uint64_t v6 = sub_1DCB369FC();
    char v8 = v7;
    sub_1DC8CD32C();
    sub_1DCB88D98();
    uint64_t v9 = sub_1DCB369FC();
    char v17 = v10;
    uint64_t v18 = v9;
    LOBYTE(v19) = 3;
    uint64_t v11 = sub_1DCB369FC();
    char v15 = v12;
    uint64_t v16 = v11;
    sub_1DC87E988((uint64_t *)&unk_1EAAAB880);
    sub_1DCB3670C(&qword_1EAA9E910);
    sub_1DCB88D98();
    uint64_t v13 = sub_1DCA82C24();
    v14(v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v6;
    *(unsigned char *)(v4 + 8) = v8 & 1;
    *(unsigned char *)(v4 + 9) = 0;
    *(void *)(v4 + 16) = v18;
    *(unsigned char *)(v4 + 24) = v17 & 1;
    *(void *)(v4 + 32) = v16;
    *(unsigned char *)(v4 + 40) = v15 & 1;
    *(void *)(v4 + 48) = v19;
    *(void *)(v4 + 56) = v20;
  }
  sub_1DC8818D0((uint64_t)v2);
  swift_bridgeObjectRelease();
  sub_1DC88D674();
}

unint64_t sub_1DCB3208C()
{
  return sub_1DCB31A80(*v0);
}

uint64_t sub_1DCB32094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB3184C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB320BC(uint64_t a1)
{
  unint64_t v2 = sub_1DCB366C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB320F8(uint64_t a1)
{
  unint64_t v2 = sub_1DCB366C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB3213C()
{
  return sub_1DCB891F8();
}

void sub_1DCB321BC()
{
}

void sub_1DCB321D4()
{
}

uint64_t sub_1DCB32220(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR___SNModelFeatureConnection_impl);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_1DCACF1B8();
}

id sub_1DCB32250(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v3 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();

  return v3;
}

void sub_1DCB322B8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_1DCB87938();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);
}

uint64_t sub_1DCB32330(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___SNModelFeatureConnection_impl;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return sub_1DCACF1B8();
}

id sub_1DCB32348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v10 = &v4[OBJC_IVAR___SNModelFeatureConnection_impl];
  *(void *)char v10 = a1;
  *((void *)v10 + 1) = a2;
  *((void *)v10 + 2) = a3;
  *((void *)v10 + 3) = a4;
  v12.receiver = v4;
  v12.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

id sub_1DCB32414@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = v1 + OBJC_IVAR___SNModelFeatureConnection_impl;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl + 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  id v9 = (char *)objc_allocWithZone(ObjectType);
  char v10 = &v9[OBJC_IVAR___SNModelFeatureConnection_impl];
  *(void *)char v10 = v6;
  *((void *)v10 + 1) = v5;
  *((void *)v10 + 2) = v8;
  *((void *)v10 + 3) = v7;
  v12.receiver = v9;
  v12.Class super_class = ObjectType;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id result = objc_msgSendSuper2(&v12, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t sub_1DCB3254C()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCB36AEC();
  uint64_t v0 = sub_1DCB311A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCB325B4(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_1DC87E9CC(&v16, v15);
    sub_1DC87E9DC((uint64_t)v15, (uint64_t)v14);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl);
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl + 8);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl + 16);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl + 24);
      uint64_t v7 = *(void *)&v13[OBJC_IVAR___SNModelFeatureConnection_impl + 16];
      uint64_t v8 = *(void *)&v13[OBJC_IVAR___SNModelFeatureConnection_impl + 24];
      BOOL v9 = v3 == *(void *)&v13[OBJC_IVAR___SNModelFeatureConnection_impl]
        && v4 == *(void *)&v13[OBJC_IVAR___SNModelFeatureConnection_impl + 8];
      if (v9 || (sub_1DCB89018() & 1) != 0)
      {
        if (v5 == v7 && v6 == v8)
        {

          char v11 = 1;
        }
        else
        {
          sub_1DCB36AEC();
          char v11 = sub_1DCB89018();
        }
        goto LABEL_17;
      }
    }
    char v11 = 0;
LABEL_17:
    sub_1DC8818D0((uint64_t)v15);
    return v11 & 1;
  }
  char v11 = 0;
  return v11 & 1;
}

id sub_1DCB32748(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  id v6 = sub_1DC87E59C();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;

  uint64_t v13 = (char *)objc_allocWithZone(ObjectType);
  uint64_t v14 = &v13[OBJC_IVAR___SNModelFeatureConnection_impl];
  *(void *)uint64_t v14 = v6;
  *((void *)v14 + 1) = v8;
  *((void *)v14 + 2) = v10;
  *((void *)v14 + 3) = v12;
  v17.receiver = v13;
  v17.Class super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v17, sel_init);

  swift_getObjectType();
  sub_1DCA87970();
  return v15;
}

uint64_t sub_1DCB32864(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl + 8);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl + 16);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNModelFeatureConnection_impl + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC87CA80(v4, v3, v6, v5, 1819307369, 0xE400000000000000, a1);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_1DCB329A4()
{
}

uint64_t type metadata accessor for SNModelFeatureConnection()
{
  return self;
}

uint64_t sub_1DCB32A50()
{
  sub_1DC91ACCC();
  uint64_t v0 = sub_1DCB36AB8();
  return sub_1DCB3077C(v0);
}

id sub_1DCB32AA4()
{
  uint64_t v14 = sub_1DC91AB88();
  uint64_t v15 = v0;
  uint64_t v12 = 15917;
  unint64_t v13 = 0xE200000000000000;
  sub_1DC91ACCC();
  uint64_t v1 = sub_1DCB887C8();
  uint64_t v2 = (void *)sub_1DC91AA60(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2[2] == 2)
  {
    uint64_t v4 = v2[4];
    uint64_t v3 = v2[5];
    uint64_t v6 = v2[6];
    uint64_t v5 = v2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v7 = (objc_class *)type metadata accessor for SNModelFeatureConnection();
    uint64_t v8 = (char *)objc_allocWithZone(v7);
    uint64_t v9 = &v8[OBJC_IVAR___SNModelFeatureConnection_impl];
    *(void *)uint64_t v9 = v4;
    *((void *)v9 + 1) = v3;
    *((void *)v9 + 2) = v6;
    *((void *)v9 + 3) = v5;
    v11.receiver = v8;
    v11.Class super_class = v7;
    return objc_msgSendSuper2(&v11, sel_init);
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1DCB88A98();
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DC8AF09C(0, (uint64_t)"com.apple.SoundAnalysis");
    swift_bridgeObjectRelease();
    return (id)swift_willThrow();
  }
}

uint64_t sub_1DCB32C2C()
{
  sub_1DC91ACCC();
  uint64_t v1 = sub_1DCB36AB8();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v6 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v3 = v1 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      sub_1DCB32AA4();
      swift_bridgeObjectRelease();
      if (v0) {
        break;
      }
      v3 += 16;
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      if (!--v2)
      {
        unint64_t v4 = v6;
        swift_bridgeObjectRelease();
        return sub_1DCB30A6C(v4);
      }
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = MEMORY[0x1E4FBC860];
    return sub_1DCB30A6C(v4);
  }
}

#error "1DCB32F00: call analysis failed (funcsize=378)"

uint64_t sub_1DCB33374(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v31 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v30 = (unint64_t)(63 - v5) >> 6;
  uint64_t v32 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v12)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (i << 6);
      int64_t v12 = i;
      goto LABEL_23;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v13 >= v30) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v12 = i + 1;
    if (!v14)
    {
      int64_t v12 = i + 2;
      if (i + 2 >= v30) {
        goto LABEL_40;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = i + 3;
        if (i + 3 >= v30) {
          goto LABEL_40;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v12);
        if (!v14) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_23:
    if (!*(void *)(v4 + 16))
    {
      uint64_t v2 = 0;
      goto LABEL_41;
    }
    uint64_t v16 = v3;
    objc_super v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1DCB891A8();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    uint64_t v20 = sub_1DCB891F8();
    uint64_t v21 = v4;
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v20 & ~v22;
    if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_38;
    }
    uint64_t v24 = *(void *)(v21 + 48);
    id v25 = (void *)(v24 + 16 * v23);
    BOOL v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_1DCB89018() & 1) == 0)
    {
      uint64_t v27 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v27;
        if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        uint64_t v28 = (void *)(v24 + 16 * v23);
        BOOL v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_1DCB89018() & 1) != 0) {
          goto LABEL_37;
        }
      }
LABEL_38:
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
LABEL_41:
      sub_1DC964348();
      return v2;
    }
LABEL_37:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v16;
    uint64_t v4 = v21;
  }
  int64_t v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_40:
    uint64_t v2 = 1;
    goto LABEL_41;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v12 = i + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1DCB3365C(uint64_t a1, id a2)
{
  id v4 = objc_msgSend(a2, sel_inputDescriptionsByName);
  sub_1DC8CFEF4();
  uint64_t v5 = sub_1DCB877B8();

  uint64_t v6 = sub_1DCB308E4(v5, sub_1DCA21AF4);
  id v7 = objc_msgSend(a2, sel_outputDescriptionsByName);
  uint64_t v8 = sub_1DCB877B8();

  uint64_t v9 = sub_1DCB308E4(v8, sub_1DCA21AF4);
  sub_1DCB32D6C(a1, v6, v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB33784()
{
  sub_1DCB36A50();
  if (v0)
  {
    sub_1DC9637DC(0x7473696C796E6564, 0xE800000000000000);
    if (v1)
    {
      sub_1DCB36A1C();
      sub_1DCB32A50();
      swift_bridgeObjectRelease();
    }
  }
  return sub_1DC8E7890();
}

uint64_t sub_1DCB33804()
{
  sub_1DCB36A50();
  if (v0)
  {
    sub_1DC9637DC(0xD000000000000014, 0x80000001DCB9BAE0);
    if (v1)
    {
      sub_1DCB36A1C();
      sub_1DCB32C2C();
      swift_bridgeObjectRelease();
    }
  }
  return sub_1DC8E7890();
}

id sub_1DCB33884()
{
  sub_1DCB36A50();
  if (!v2) {
    return 0;
  }
  sub_1DC9637DC(0x6152656C706D6173, 0xEA00000000006574);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1DCB369A8();
  id v4 = sub_1DCB36A7C();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v4;
    sub_1DCA896D4();
    sub_1DCA897C4();
    id v1 = objc_msgSend(v5, sel_integerValue);
    swift_bridgeObjectRelease();
  }
  return v1;
}

id sub_1DCB33960()
{
  sub_1DCB36A50();
  if (!v2) {
    return 0;
  }
  sub_1DC9637DC(0x657A6953706F68, 0xE700000000000000);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1DCB369A8();
  id v4 = sub_1DCB36A7C();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v4;
    sub_1DCA896D4();
    sub_1DCA897C4();
    id v1 = objc_msgSend(v5, sel_integerValue);
    swift_bridgeObjectRelease();
  }
  return v1;
}

id sub_1DCB33A38()
{
  sub_1DCB36A50();
  if (!v2) {
    return 0;
  }
  sub_1DC9637DC(0x6953776F646E6977, 0xEA0000000000657ALL);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1DCB369A8();
  id v4 = sub_1DCB36A7C();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v4;
    sub_1DCA896D4();
    sub_1DCA897C4();
    id v1 = objc_msgSend(v5, sel_integerValue);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1DCB33B14()
{
  sub_1DCB36A50();
  if (!v2) {
    return 2;
  }
  uint64_t v3 = v1;
  sub_1DC9637DC(0x6165467475706E69, 0xEC00000065727574);
  if ((v4 & 1) == 0) {
    return 2;
  }
  sub_1DCB369A8();
  char v5 = sub_1DC9AE868(v0, v3);
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1DCB33B9C()
{
  sub_1DCB36A50();
  if (v0)
  {
    sub_1DC9637DC(0x656449646E756F73, 0xEF7265696669746ELL);
    if (v1)
    {
      sub_1DCB36A1C();
      sub_1DCB87908();
      swift_bridgeObjectRelease();
    }
  }
  return sub_1DC8E7890();
}

uint64_t sub_1DCB33C1C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_metadata);
  type metadata accessor for MLModelMetadataKey(0);
  sub_1DCB361E0((unint64_t *)&unk_1EAA9C780, 255, type metadata accessor for MLModelMetadataKey);
  uint64_t v2 = sub_1DCB877B8();

  id v3 = (id)*MEMORY[0x1E4F1E898];
  sub_1DC961218((uint64_t)v3, v2, &v6);

  swift_bridgeObjectRelease();
  if (v7)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAA9CB70);
    if (swift_dynamicCast()) {
      return v5;
    }
  }
  else
  {
    sub_1DC881978((uint64_t)&v6);
  }
  return sub_1DCB877D8();
}

uint64_t sub_1DCB33D58(void *a1)
{
  sub_1DCB33C1C(a1);
  uint64_t v3 = sub_1DCB33804();
  swift_bridgeObjectRelease();
  if (!v1 && v3)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_1DCB3365C(v4, a1);
    swift_bridgeObjectRelease();
  }
  return sub_1DC8E7890();
}

void sub_1DCB33EC8(uint64_t a1@<X8>)
{
  id v3 = sub_1DCB33884();
  if (!v1)
  {
    id v5 = v3;
    char v6 = v4;
    sub_1DCB36B14();
    char v7 = sub_1DCB33B14();
    sub_1DCB36B14();
    id v8 = sub_1DCB33A38();
    char v10 = v9;
    sub_1DCB36B14();
    id v11 = sub_1DCB33960();
    char v21 = v12;
    sub_1DCB36B14();
    uint64_t v13 = sub_1DCB33B9C();
    if (v13)
    {
      unint64_t v14 = (void *)v13;
      uint64_t v15 = sub_1DCB87938();
      uint64_t v19 = v16;
      uint64_t v20 = v15;

      uint64_t v18 = v19;
      uint64_t v17 = v20;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v18 = 0;
    }
    *(void *)a1 = v5;
    *(unsigned char *)(a1 + 8) = v6 & 1;
    *(unsigned char *)(a1 + 9) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v10 & 1;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v21 & 1;
    *(void *)(a1 + 48) = v17;
    *(void *)(a1 + 56) = v18;
  }
}

double sub_1DCB33FD0(void *a1)
{
  sub_1DCB33C1C(a1);
  sub_1DCB33EC8((uint64_t)&v12);
  uint64_t v2 = swift_bridgeObjectRelease();
  if (!v1) {
    v10.n128_u64[0] = sub_1DCB36964(v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, v14, v15, v16, v17, v18, v10).n128_u64[0];
  }
  return v10.n128_f64[0];
}

uint64_t type metadata accessor for SNModelMetadataUtils()
{
  return self;
}

ValueMetadata *type metadata accessor for ModelFeatureConnection()
{
  return &type metadata for ModelFeatureConnection;
}

unint64_t sub_1DCB3408C()
{
  unint64_t result = qword_1EAAAB808;
  if (!qword_1EAAAB808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB808);
  }
  return result;
}

uint64_t sub_1DCB340D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  uint64_t v8 = sub_1DCB891F8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1DCB89018() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned __int8 v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unsigned __int8 v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1DCB89018() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1DCB35CC8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1DCB34288(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1DCB89198();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1DCB35E64(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1DCB34384(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1DCB889C8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for SNModelFeatureConnection();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1DCB889B8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1DCB35A70(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_1DCB357D4();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_1DCB35C44((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DCB88698();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      type metadata accessor for SNModelFeatureConnection();
      id v13 = *(id *)(*(void *)(v6 + 48) + 8 * v12);
      char v14 = sub_1DCB886A8();

      if (v14)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unsigned __int8 v18 = *(void **)(*(void *)(*v2 + 48) + 8 * v12);
        *a1 = v18;
        id v19 = v18;
        return 0;
      }
      uint64_t v15 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v15;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        id v16 = *(id *)(*(void *)(v6 + 48) + 8 * v12);
        char v17 = sub_1DCB886A8();

        if (v17) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1DCB35F88((uint64_t)v8, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

void *sub_1DCB345F8()
{
  uint64_t v1 = v0;
  sub_1DC87E988(&qword_1EAAAB370);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DCB88A48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DCB347AC()
{
  uint64_t v1 = v0;
  sub_1DC87E988(&qword_1EAAAB378);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DCB88A48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(void *)(*(void *)(v4 + 48) + 8 * i) = *(void *)(*(void *)(v2 + 48) + 8 * i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1DCB34944()
{
  uint64_t v1 = v0;
  sub_1DC87E988((uint64_t *)&unk_1EAAAB820);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DCB88A48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    *(void *)(*(void *)(v4 + 48) + 8 * i) = v20;
    id result = v20;
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DCB34AF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1DC87E988(&qword_1EAAAB370);
  uint64_t v3 = sub_1DCB88A58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1DCB891A8();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    uint64_t result = sub_1DCB891F8();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DCB34D9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1DC87E988(&qword_1EAAAB378);
  uint64_t result = sub_1DCB88A58();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = sub_1DCB89198();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DCB34FFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1DC87E988((uint64_t *)&unk_1EAAAB820);
  uint64_t v3 = sub_1DCB88A58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    id v18 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = sub_1DCB88698();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DCB35274()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1DC87E988(&qword_1EAAAB370);
  uint64_t v3 = sub_1DCB88A58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_1DCB891A8();
      sub_1DCB879B8();
      uint64_t result = sub_1DCB891F8();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *uint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1DCAEE710(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *int64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1DCB35550()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1DC87E988(&qword_1EAAAB378);
  uint64_t result = sub_1DCB88A58();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v7 = (uint64_t *)(v2 + 56);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = -1 << v8;
    uint64_t v28 = v1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v6;
    uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = result + 56;
    if ((v9 & v6) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v13 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = sub_1DCB89198();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v11) {
        goto LABEL_32;
      }
      unint64_t v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        int64_t v5 = v15 + 1;
        if (v15 + 1 >= v11) {
          goto LABEL_32;
        }
        unint64_t v16 = v7[v5];
        if (!v16)
        {
          int64_t v5 = v15 + 2;
          if (v15 + 2 >= v11) {
            goto LABEL_32;
          }
          unint64_t v16 = v7[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63) {
                sub_1DCAEE710(0, v11, (void *)(v2 + 56));
              }
              else {
                *unint64_t v7 = v27;
              }
              uint64_t v1 = v28;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v11) {
                  goto LABEL_32;
                }
                unint64_t v16 = v7[v5];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1DCB357D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1DC87E988((uint64_t *)&unk_1EAAAB820);
  uint64_t v3 = sub_1DCB88A58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = sub_1DCB88698();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v28;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_1DCAEE710(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1DCB35A70(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  sub_1DC87E988((uint64_t *)&unk_1EAAAB820);
  uint64_t v2 = sub_1DCB88A68();
  uint64_t v14 = v2;
  sub_1DCB88978();
  if (!sub_1DCB889E8())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  type metadata accessor for SNModelFeatureConnection();
  while (1)
  {
    swift_dynamicCast();
    uint64_t v2 = v14;
    if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
    {
      sub_1DCB357D4();
      uint64_t v2 = v14;
    }
    uint64_t result = sub_1DCB88698();
    uint64_t v4 = v2 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = result & ~v5;
    unint64_t v7 = v6 >> 6;
    if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) == 0) {
      break;
    }
    unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    ++*(void *)(v2 + 16);
    if (!sub_1DCB889E8()) {
      goto LABEL_16;
    }
  }
  char v9 = 0;
  unint64_t v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    BOOL v11 = v7 == v10;
    if (v7 == v10) {
      unint64_t v7 = 0;
    }
    v9 |= v11;
    uint64_t v12 = *(void *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1DCB35C44(uint64_t a1, uint64_t a2)
{
  sub_1DCB88698();
  unint64_t result = sub_1DCB88958();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1DCB35CC8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1DCB35274();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1DCB345F8();
      goto LABEL_22;
    }
    sub_1DCB34AF0();
  }
  uint64_t v11 = *v4;
  sub_1DCB891A8();
  sub_1DCB879B8();
  unint64_t result = sub_1DCB891F8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_1DCB89018(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_1DCB890D8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_1DCB89018();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1DCB35E64(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1DCB35550();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1DCB347AC();
      goto LABEL_14;
    }
    sub_1DCB34D9C();
  }
  uint64_t v8 = *v3;
  unint64_t result = sub_1DCB89198();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      unint64_t result = sub_1DCB890D8();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_1DCB35F88(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1DCB357D4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1DCB34944();
      goto LABEL_14;
    }
    sub_1DCB34FFC();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1DCB88698();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for SNModelFeatureConnection();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1DCB886A8();

    if (v12)
    {
LABEL_13:
      sub_1DCB890D8();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1DCB886A8();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

int64_t sub_1DCB360FC(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCB361E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCB36228()
{
  unint64_t result = qword_1EAAAB838;
  if (!qword_1EAAAB838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB838);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ModelFeatureConnection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB36340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelFeatureConnection.CodingKeys()
{
  return &type metadata for ModelFeatureConnection.CodingKeys;
}

uint64_t initializeWithCopy for DetectorHeadModelMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectorHeadModelMetadata(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  uint64_t v4 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DetectorHeadModelMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectorHeadModelMetadata(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 56);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectorHeadModelMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectorHeadModelMetadata()
{
  return &type metadata for DetectorHeadModelMetadata;
}

unint64_t sub_1DCB36584()
{
  unint64_t result = qword_1EAAAB848;
  if (!qword_1EAAAB848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB848);
  }
  return result;
}

unint64_t sub_1DCB365D4()
{
  unint64_t result = qword_1EAAAB850;
  if (!qword_1EAAAB850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB850);
  }
  return result;
}

unint64_t sub_1DCB36624()
{
  unint64_t result = qword_1EAAAB858;
  if (!qword_1EAAAB858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB858);
  }
  return result;
}

unint64_t sub_1DCB36674()
{
  unint64_t result = qword_1EAAAB860;
  if (!qword_1EAAAB860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB860);
  }
  return result;
}

unint64_t sub_1DCB366C0()
{
  unint64_t result = qword_1EAAAB870;
  if (!qword_1EAAAB870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB870);
  }
  return result;
}

uint64_t sub_1DCB3670C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8((uint64_t *)&unk_1EAAAB880);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DetectorHeadModelMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB3683CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectorHeadModelMetadata.CodingKeys()
{
  return &type metadata for DetectorHeadModelMetadata.CodingKeys;
}

unint64_t sub_1DCB36878()
{
  unint64_t result = qword_1EAAAB898;
  if (!qword_1EAAAB898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB898);
  }
  return result;
}

unint64_t sub_1DCB368C8()
{
  unint64_t result = qword_1EAAAB8A0;
  if (!qword_1EAAAB8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB8A0);
  }
  return result;
}

unint64_t sub_1DCB36918()
{
  unint64_t result = qword_1EAAAB8A8;
  if (!qword_1EAAAB8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB8A8);
  }
  return result;
}

__n128 sub_1DCB36964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unsigned __int8 a10, unsigned __int8 a11, unint64_t a12, unsigned __int8 a13, unint64_t a14, unsigned __int8 a15, __n128 a16)
{
  __n128 result = a16;
  v16->n128_u64[0] = a9;
  v16->n128_u8[8] = a10;
  v16->n128_u8[9] = a11;
  v16[1].n128_u64[0] = a12;
  v16[1].n128_u8[8] = a13;
  v16[2].n128_u64[0] = a14;
  v16[2].n128_u8[8] = a15;
  v16[3] = a16;
  return result;
}

uint64_t sub_1DCB369A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCB369C8()
{
  return sub_1DCB87A18();
}

uint64_t sub_1DCB369FC()
{
  return sub_1DCB88D88();
}

uint64_t sub_1DCB36A1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCB36A5C()
{
  return v0;
}

uint64_t sub_1DCB36A6C()
{
  return v0;
}

id sub_1DCB36A7C()
{
  return sub_1DC91A908(v1, v0);
}

void sub_1DCB36A98()
{
  sub_1DC897B8C();
}

uint64_t sub_1DCB36AB8()
{
  return sub_1DCB887C8();
}

uint64_t sub_1DCB36AEC()
{
  return v0;
}

char *sub_1DCB36B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  return &a16;
}

uint64_t sub_1DCB36B14()
{
  return v0;
}

uint64_t sub_1DCB36B20()
{
  return sub_1DCB889F8();
}

void sub_1DCB36B40()
{
  uint64_t v0 = (void *)sub_1DCB87908();
  uint64_t v1 = (void *)sub_1DCB87908();
  uint64_t v2 = PPSCreateTelemetryIdentifier();

  uint64_t v3 = v2;
  if (!v2)
  {
    sub_1DCB37160();
    uint64_t v3 = swift_allocError();
    swift_willThrow();
  }
  qword_1EAAFFB78 = v3;
  byte_1EAAFFB80 = v2 == 0;
}

uint64_t sub_1DCB36C0C()
{
  if (qword_1EAA9D288 != -1) {
    swift_once();
  }
  uint64_t v0 = (uint64_t (*)(void *))qword_1EAAFFB78;
  char v1 = byte_1EAAFFB80;
  if (byte_1EAAFFB80)
  {
    id v2 = (id)qword_1EAAFFB78;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    uint64_t result = 0;
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v0;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = sub_1DCB3712C;
    *(void *)(result + 24) = v4;
    uint64_t v0 = sub_1DCB37134;
  }
  qword_1EAAFFB88 = (uint64_t)v0;
  unk_1EAAFFB90 = result;
  byte_1EAAFFB98 = v1;
  return result;
}

void sub_1DCB36D18()
{
  id v0 = (id)sub_1DCB87788();
  PPSSendTelemetry();
}

uint64_t (*sub_1DCB36D84())(uint64_t a1)
{
  uint64_t result = sub_1DCB36DA8();
  qword_1EAAFFBA0 = (uint64_t)result;
  *(void *)algn_1EAAFFBA8 = v1;
  return result;
}

uint64_t (*sub_1DCB36DA8())(uint64_t a1)
{
  if (qword_1EAA9D290 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EAAFFB88;
  uint64_t v0 = unk_1EAAFFB90;
  if (byte_1EAAFFB98)
  {
    id v2 = (id)qword_1EAAFFB88;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1DCB86FE8();
    sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
    uint64_t v4 = sub_1DCB86FC8();
    os_log_type_t v5 = sub_1DCB88468();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v6 = 0;
      _os_log_impl(&dword_1DC873000, v4, v5, "Could not create PowerLog telemetry writer; ignoring power logs.", v6, 2u);
      MEMORY[0x1E01A99C0](v6, -1, -1);
    }
    sub_1DCB3709C(v1, v0, 1);

    return nullsub_1;
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    *(void *)(v8 + 24) = v0;
    swift_retain();
    return sub_1DCB370E4;
  }
}

uint64_t sub_1DCB36F64(uint64_t a1, __int16 a2)
{
  sub_1DC87E988(&qword_1EAA9E7E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB9440;
  sub_1DCB372D4();
  *(void *)(inited + 96) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 72) = a1;
  sub_1DCB372D4();
  uint64_t v5 = MEMORY[0x1E4FBB390];
  *(void *)(inited + 168) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 144) = a2 & 1;
  sub_1DCB372D4();
  *(void *)(inited + 240) = v5;
  *(unsigned char *)(inited + 216) = HIBYTE(a2) & 1;
  return sub_1DCB877D8();
}

void sub_1DCB3709C(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_1DCB370AC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB370E4(uint64_t a1)
{
  id v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1DCB3711C()
{
  return swift_deallocObject();
}

void sub_1DCB3712C()
{
}

uint64_t sub_1DCB37134(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_1DCB37160()
{
  unint64_t result = qword_1EAAAB8B0;
  if (!qword_1EAAAB8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB8B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PowerLogUtils.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCB37248);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerLogUtils.DomainError()
{
  return &type metadata for PowerLogUtils.DomainError;
}

unint64_t sub_1DCB37284()
{
  unint64_t result = qword_1EAAAB8B8;
  if (!qword_1EAAAB8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB8B8);
  }
  return result;
}

uint64_t sub_1DCB372D4()
{
  return sub_1DCB88A38();
}

uint64_t sub_1DCB372F0()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB37334()
{
  uint64_t v0 = sub_1DC87E988(&qword_1EAAAB958);
  sub_1DC89D4E0();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v6 = v5 - v4;
  unint64_t v7 = (void *)sub_1DCA7D2F0();
  sub_1DC881A8C(v7, v8);
  sub_1DCB3A8AC();
  sub_1DCB892B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
}

void sub_1DCB37410()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAAB9D8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB3ADE4();
  sub_1DCB892B8();
  sub_1DC881B1C();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC8821D0();
    sub_1DCB88F18();
  }
  uint64_t v4 = sub_1DC8D5378();
  v5(v4);
  sub_1DC88D674();
}

void sub_1DCB375F4()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAAB9E8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB3ADE4();
  sub_1DCB89298();
  if (!v0)
  {
    LOBYTE(v8) = 0;
    sub_1DC881B68();
    sub_1DCB20474();
    sub_1DC8822B0();
    sub_1DCB20474();
    uint64_t v6 = sub_1DC8CD878();
    v7(v6);
    *(_OWORD *)uint64_t v4 = v8;
    *(void *)(v4 + 16) = v9;
    *(void *)(v4 + 24) = v10;
    *(_OWORD *)(v4 + 32) = v11;
    *(unsigned char *)(v4 + 48) = v12;
    *(unsigned char *)(v4 + 49) = v13;
    *(unsigned char *)(v4 + 50) = v14;
    *(unsigned char *)(v4 + 51) = v15;
    *(unsigned char *)(v4 + 52) = v16;
    *(unsigned char *)(v4 + 53) = v17;
    *(void *)(v4 + 56) = v18;
    *(unsigned char *)(v4 + 64) = v19;
  }
  sub_1DC8818D0((uint64_t)v2);
  sub_1DC88D674();
}

uint64_t sub_1DCB37794()
{
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB378BC(float64x2_t *a1, float64x2_t *a2)
{
  double v4 = a1->f64[0];
  float64_t v5 = a1[2].f64[1];
  double v6 = a1[5].f64[0];
  float64_t v7 = a1[5].f64[1];
  float64_t v8 = a1[6].f64[0];
  double v9 = a2->f64[0];
  double v10 = a2[5].f64[0];
  float64_t v11 = a2[5].f64[1];
  float64_t v12 = a2[6].f64[0];
  float64_t v20 = a2[2].f64[1];
  *(double *)unint64_t v21 = v4;
  v21[1] = *(void *)&a1->f64[1];
  float64x2_t v22 = a1[1];
  float64_t v23 = a1[2].f64[0];
  float64_t v24 = v5;
  *(double *)char v17 = v9;
  v17[1] = *(void *)&a2->f64[1];
  float64x2_t v18 = a2[1];
  float64_t v19 = a2[2].f64[0];
  BOOL v13 = static TimeRange.== infix(_:_:)((uint64_t)v21, (uint64_t)v17);
  uint64_t result = 0;
  if (v13
    && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(a1[3], a2[3]), (int32x4_t)vceqq_f64(a1[4], a2[4]))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0&& v6 == v10)
  {
    if (*(void *)&v7 == *(void *)&v11 && *(void *)&v8 == *(void *)&v12)
    {
      return 1;
    }
    else
    {
      return sub_1DCB89018();
    }
  }
  return result;
}

uint64_t sub_1DCB37A10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1685024621 && a2 == 0xE400000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x65636E656C6176 && a2 == 0xE700000000000000;
        if (v8 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6C6173756F7261 && a2 == 0xE700000000000000;
          if (v9 || (sub_1DCB89018() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x636E616E696D6F64 && a2 == 0xE900000000000065;
            if (v10 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6564496C65646F6DLL && a2 == 0xEF7265696669746ELL)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_1DCB89018();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1DCB37D18(char a1)
{
  uint64_t result = 0x676E6152656D6974;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E656469666E6F63;
      break;
    case 2:
      uint64_t result = 1685024621;
      break;
    case 3:
      uint64_t result = 0x65636E656C6176;
      break;
    case 4:
      uint64_t result = 0x6C6173756F7261;
      break;
    case 5:
      uint64_t result = 0x636E616E696D6F64;
      break;
    case 6:
      uint64_t result = 0x6564496C65646F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCB37E08(void *a1)
{
  sub_1DC87E988((uint64_t *)&unk_1EAAAB980);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB3A8F8();
  sub_1DCB892B8();
  sub_1DC89C64C();
  sub_1DCB88F18();
  if (v7)
  {
    sub_1DCA7D2F0();
    sub_1DC88D5C8();
    return v3();
  }
  else
  {
    sub_1DCB3B0FC(1);
    sub_1DCB3B0E4();
    sub_1DCB3B0FC(2);
    sub_1DCB3B0E4();
    sub_1DCB3B0FC(3);
    sub_1DCB3B0E4();
    sub_1DCB3B0FC(4);
    sub_1DCB3B0E4();
    sub_1DCB3B0FC(5);
    sub_1DCB3B0E4();
    sub_1DCB88EC8();
    uint64_t v5 = sub_1DCA7D2F0();
    return v6(v5);
  }
}

uint64_t sub_1DCB38058@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAAB968);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB3A8F8();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC89C600();
    sub_1DCB88DF8();
    float64x2_t v22 = a2;
    sub_1DCB3B070(1);
    uint64_t v7 = v6;
    sub_1DCB3B070(2);
    uint64_t v9 = v8;
    sub_1DCB3B070(3);
    uint64_t v11 = v10;
    sub_1DCB3B070(4);
    uint64_t v13 = v12;
    sub_1DCB3B070(5);
    uint64_t v15 = v14;
    uint64_t v17 = sub_1DCB88DA8();
    uint64_t v19 = v18;
    uint64_t v20 = sub_1DC8D5364();
    v21(v20);
    *float64x2_t v22 = v23;
    v22[1] = v24;
    void v22[2] = v25;
    uint64_t v22[3] = v26;
    void v22[4] = v27;
    void v22[5] = v28;
    v22[6] = v7;
    v22[7] = v9;
    v22[8] = v11;
    v22[9] = v13;
    v22[10] = v15;
    v22[11] = v17;
    v22[12] = v19;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCB382A4(uint64_t a1)
{
  unint64_t v2 = sub_1DCB3A8AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB382E0(uint64_t a1)
{
  unint64_t v2 = sub_1DCB3A8AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB3831C()
{
  return sub_1DCB37334();
}

uint64_t sub_1DCB38334(uint64_t a1)
{
  unint64_t v2 = sub_1DCB3ADE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB38370(uint64_t a1)
{
  unint64_t v2 = sub_1DCB3ADE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCB383AC()
{
}

void sub_1DCB383C4()
{
}

uint64_t sub_1DCB383DC()
{
  return sub_1DCB37D18(*v0);
}

uint64_t sub_1DCB383E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCB37A10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCB3840C(uint64_t a1)
{
  unint64_t v2 = sub_1DCB3A8F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCB38448(uint64_t a1)
{
  unint64_t v2 = sub_1DCB3A8F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCB3848C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCB384CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCB38058(a1, a2);
}

uint64_t sub_1DCB384E4(void *a1)
{
  return sub_1DCB37E08(a1);
}

uint64_t sub_1DCB38500()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1DCB38590;
  return sub_1DC977FC0();
}

uint64_t sub_1DCB38590(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC8BA85C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  v5[4] = a1;
  v5[5] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1DC8C67E4, 0, 0);
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(void))((char *)&dword_1EAAA2750 + dword_1EAAA2750);
    uint64_t v9 = (void *)swift_task_alloc();
    v5[6] = v9;
    *uint64_t v9 = v7;
    v9[1] = sub_1DC8D2460;
    return v11();
  }
}

uint64_t sub_1DCB386F8(uint64_t a1, uint64_t a2)
{
  sub_1DCAD2DD0();
  _OWORD v4[3] = sub_1DC87E988(&qword_1EAAA4298);
  _OWORD v4[4] = sub_1DCB3AD70();
  v4[0] = a2;
  swift_retain();
  sub_1DCAD2E10(v4);
  swift_release();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DCB38780()
{
  sub_1DC8867A8();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8D2674;
  return sub_1DCB38500();
}

uint64_t sub_1DCB38818(uint64_t a1)
{
  return sub_1DCB386F8(a1, *v1);
}

uint64_t sub_1DCB38834()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1DC8D27F4;
  return sub_1DCB38780();
}

id sub_1DCB388C8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[5];
  long long v12 = *((_OWORD *)a1 + 4);
  long long v13 = *((_OWORD *)a1 + 3);
  uint64_t v8 = a1[10];
  uint64_t v10 = a1[11];
  uint64_t v9 = a1[12];
  type metadata accessor for SNSpeechEmotionResult();
  v14[0] = v4;
  v14[1] = a1[1];
  void v14[2] = v5;
  v14[3] = v6;
  uint64_t v14[4] = a1[4];
  void v14[5] = v7;
  long long v15 = v13;
  long long v16 = v12;
  uint64_t v17 = v8;
  uint64_t v18 = v10;
  uint64_t v19 = v9;
  swift_bridgeObjectRetain();
  id result = sub_1DCA5F038((uint64_t)v14);
  *a2 = result;
  return result;
}

void sub_1DCB38994()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAAB8E0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DCB2045C(v13);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  uint64_t v6 = sub_1DC881A8C(v2, v4);
  sub_1DCB2045C(v12);
  uint64_t v7 = type metadata accessor for SNSpeechEmotionResult();
  void v11[2] = v13;
  sub_1DC882264((uint64_t)v13);
  uint64_t v8 = sub_1DC9EB114((uint64_t)v6, v12, v7, sub_1DCB3A5F8, (uint64_t)v11, v4, v7, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    *(void *)&v12[0] = v8;
    sub_1DC87E988(&qword_1EAAAB8E8);
    sub_1DC88CF34(&qword_1EAAAB8F0, &qword_1EAAAB8E8);
    sub_1DCB873D8();
    swift_release();
    sub_1DC88CF34((unint64_t *)&unk_1EAAAB8F8, &qword_1EAAAB8E0);
    sub_1DCB873A8();
    uint64_t v9 = sub_1DC8D5378();
    v10(v9);
  }
  sub_1DC88D674();
}

void sub_1DCB38B88()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v16 = sub_1DC87E988(&qword_1EAA9E870);
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  sub_1DC87E988(&qword_1EAAAB908);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC8A22D0();
  sub_1DC87E988((uint64_t *)&unk_1EAAAB910);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DCB2045C(v18);
  uint64_t v10 = swift_allocObject();
  sub_1DCB2045C((void *)(v10 + 16));
  sub_1DC8B9960(v1, (uint64_t)v17);
  uint64_t v11 = swift_allocObject();
  sub_1DC8BA1CC(v17, v11 + 16);
  memcpy((void *)(v11 + 56), v18, 0x41uLL);
  long long v12 = (void *)swift_allocObject();
  void v12[2] = sub_1DCB3A65C;
  void v12[3] = v10;
  long long v12[4] = sub_1DCB1FBAC;
  void v12[5] = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1DC8CB980;
  *(void *)(v13 + 24) = v12;
  sub_1DC882264((uint64_t)v18);
  sub_1DC882264((uint64_t)v18);
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAA9ED90);
  sub_1DC88CF34((unint64_t *)&unk_1EAA9E890, (uint64_t *)&unk_1EAA9ED90);
  sub_1DCB87378();
  type metadata accessor for SNSpeechEmotionResult();
  sub_1DC88CF34(&qword_1EAA9EDA0, &qword_1EAA9E870);
  sub_1DCB874A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v16);
  swift_release();
  swift_release();
  sub_1DC88CF34(&qword_1EAAAB920, &qword_1EAAAB908);
  sub_1DCB873D8();
  sub_1DC88D5C8();
  v14();
  sub_1DC88CF34(&qword_1EAAAB928, (uint64_t *)&unk_1EAAAB910);
  sub_1DCB873A8();
  sub_1DC88D5C8();
  v15();
  sub_1DC88D674();
}

uint64_t sub_1DCB38F6C()
{
  uint64_t v0 = (objc_class *)type metadata accessor for SNEstimateSpeechEmotionRequest();
  v4.receiver = objc_allocWithZone(v0);
  v4.Class super_class = v0;
  id v1 = objc_msgSendSuper2(&v4, sel_init);
  type metadata accessor for SNSpeechEmotionEstimator();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;

  return v2;
}

uint64_t sub_1DCB38FEC()
{
  type metadata accessor for SNSpeechEmotionEstimator();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  return result;
}

id sub_1DCB39030()
{
  uint64_t v0 = (objc_class *)type metadata accessor for SNEstimateSpeechEmotionRequest();
  v2.receiver = objc_allocWithZone(v0);
  v2.Class super_class = v0;
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_1DCB3907C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR___SNSpeechEmotionResult_impl;
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v5 = *(void *)(v2 + 96);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v2 + 16);
  *(void *)(a2 + 32) = *(void *)(v2 + 32);
  *(void *)(a2 + 40) = v3;
  long long v7 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(a2 + 64) = v7;
  *(void *)(a2 + 80) = v4;
  *(void *)(a2 + 88) = v6;
  *(void *)(a2 + 96) = v5;
  return swift_bridgeObjectRetain();
}

id SNEstimateSpeechEmotionRequest.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v4.receiver = objc_allocWithZone(ObjectType);
  v4.Class super_class = ObjectType;
  id result = objc_msgSendSuper2(&v4, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNEstimateSpeechEmotionRequest.hash.getter()
{
  return sub_1DCB891F8();
}

uint64_t SNEstimateSpeechEmotionRequest.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v7);
  if (!v8) {
    return 0;
  }
  sub_1DC87E9CC(&v7, v6);
  sub_1DC87E9DC((uint64_t)v6, (uint64_t)v5);
  uint64_t v2 = swift_dynamicCast();
  if (v2) {

  }
  sub_1DC8818D0((uint64_t)v6);
  return v2;
}

id SNEstimateSpeechEmotionRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNEstimateSpeechEmotionRequest.init(coder:)(a1);
}

id SNEstimateSpeechEmotionRequest.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  uint64_t v6 = sub_1DC8CF80C();
  sub_1DC87E6C8(v6, v7, (uint64_t)a1);

  v10.receiver = objc_allocWithZone(ObjectType);
  v10.Class super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, sel_init);

  swift_getObjectType();
  sub_1DC8CF7EC();
  return v8;
}

Swift::Void __swiftcall SNEstimateSpeechEmotionRequest.encode(with:)(NSCoder with)
{
  uint64_t v2 = sub_1DC8CF80C();
  sub_1DC87CCA0(v2, v3, v1);
}

uint64_t static SNEstimateSpeechEmotionRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNEstimateSpeechEmotionRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1DCB3955C()
{
  id result = (_UNKNOWN **)sub_1DCB38FEC();
  if (v0) {
    return &off_1F37EFD90;
  }
  return result;
}

uint64_t type metadata accessor for SNEstimateSpeechEmotionRequest()
{
  return self;
}

uint64_t method lookup function for SNEstimateSpeechEmotionRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNEstimateSpeechEmotionRequest);
}

id sub_1DCB395C4(uint64_t a1, uint64_t a2)
{
  v50[6] = *(id *)MEMORY[0x1E4F143B8];
  objc_super v4 = self;
  sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DCBBCDA0;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = 0xD000000000000018;
  *(void *)(v5 + 56) = 0x80000001DCB9BC80;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_pathWithComponents_, v6);

  if (!v7)
  {
    sub_1DCB87938();
    id v7 = (id)sub_1DCB87908();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = self;
  v50[0] = 0;
  id v9 = sub_1DCB6B73C(v8, (uint64_t)v50);
  if (!v9)
  {
    id v42 = v50[0];

    sub_1DCB86898();
    swift_willThrow();
    return v9;
  }
  id v10 = v50[0];
  uint64_t v11 = (void *)sub_1DCB87908();
  uint64_t v12 = sub_1DCB3B11C();
  id v15 = sub_1DCB68494(v12, v13, v11, v14);

  if (!v15)
  {
    id v43 = v50[0];

    sub_1DCB86898();
    swift_willThrow();
LABEL_17:

    return v9;
  }
  id v16 = v50[0];
  uint64_t v17 = (void *)sub_1DCB3B0C4();
  uint64_t v18 = sub_1DCB3B11C();
  id v21 = sub_1DCB691D4(v18, v19, v17, v20);

  if (!v21)
  {
    id v44 = v50[0];

    sub_1DCB86898();
    swift_willThrow();

    goto LABEL_17;
  }
  id v22 = v50[0];
  uint64_t v23 = (void *)sub_1DCB3B0C4();
  v50[0] = 0;
  id v24 = sub_1DCB694A8(v8, v9, v23, v7, (uint64_t)v50);

  if (!v24)
  {
    id v45 = v50[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_17;
  }
  id v25 = v50[0];
  sub_1DCB3B108();
  sub_1DCB6BA88(v26, v27, 1, v28);
  uint64_t v29 = sub_1DCB3B094();
  if (!sub_1DCB6B83C(v29, v30, v15, v21, 0, 0, v31, v32))
  {
    id v46 = v49;
    sub_1DCB86898();

LABEL_16:
    swift_willThrow();

    goto LABEL_17;
  }
  id v33 = v49;
  sub_1DCB3B108();
  sub_1DCB6BB18(v34, v35, v36);
  uint64_t v37 = sub_1DCB3B094();
  if ((sub_1DCB6B83C(v37, v38, v21, v24, 0, 0, v39, v40) & 1) == 0)
  {
    id v47 = v49;
    sub_1DCB86898();

    goto LABEL_16;
  }
  id v41 = v49;
  sub_1DCB5EC24((uint64_t)v9);
  sub_1DCB5F1F8((uint64_t)v9);

  return v9;
}

id sub_1DCB39970(void *a1, int64_t a2, void (*a3)(void), void *a4)
{
  uint64_t v5 = v4;
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = self;
  id v11 = sub_1DCB69EE8(v10, a1);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_1DCB86AD8();
    unint64_t v15 = v14;

    if (sub_1DCB86AF8() <= 15)
    {
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1DCB86FE8();
      sub_1DC89F57C(v16, (uint64_t)qword_1EAAFF810);
      sub_1DC8AF450(v13, v15);
      uint64_t v17 = sub_1DCB86FC8();
      os_log_type_t v18 = sub_1DCB88468();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 134218240;
        sub_1DCB86AF8();
        sub_1DCB88778();
        sub_1DC9E94B8();
        *(_WORD *)(v19 + 12) = 2048;
        v67.start.CMTimeValue value = 4;
        sub_1DCB88778();
        _os_log_impl(&dword_1DC873000, v17, v18, "EAR framework returned %ld bytes instead of %ld float elements", (uint8_t *)v19, 0x16u);
        MEMORY[0x1E01A99C0](v19, -1, -1);
      }
      else
      {
        sub_1DC9E94B8();
      }

      sub_1DC9E94B8();
      return (id)MEMORY[0x1E4FBC860];
    }
    uint64_t v65 = a4;
    uint64_t v66 = a3;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (v13 >> 32 < (int)v13) {
          goto LABEL_60;
        }
        swift_retain();
        uint64_t v29 = (float *)sub_1DCB3A740((int)v13, v13 >> 32);
        if (v4) {
          goto LABEL_62;
        }
        int v27 = v29;
        uint64_t v28 = 0;
        sub_1DC9E94B8();
        break;
      case 2uLL:
        uint64_t v24 = *(void *)(v13 + 16);
        uint64_t v25 = *(void *)(v13 + 24);
        swift_retain();
        swift_retain();
        unsigned int v26 = (float *)sub_1DCB3A740(v24, v25);
        if (v5)
        {
          swift_release();
          swift_release();
          __break(1u);
LABEL_62:
          sub_1DC9E94B8();
          __break(1u);
          JUMPOUT(0x1DCB39FD4);
        }
        int v27 = v26;
        uint64_t v28 = 0;
        swift_release();
        swift_release();
        break;
      case 3uLL:
        uint64_t v22 = 0;
        uint64_t v21 = 0;
        uint64_t v20 = 0;
        goto LABEL_15;
      default:
        uint64_t v20 = BYTE6(v15);
        uint64_t v21 = v15 & 0xFFFFFFFFFFFFLL;
        uint64_t v22 = v13;
LABEL_15:
        int v27 = (float *)sub_1DCA25B3C(v22, v21, v20);
        uint64_t v28 = v4;
        break;
    }
    v67.start.CMTimeValue value = 0;
    id v30 = sub_1DCB68148(v10, a1, (uint64_t)&v67);
    if (!v30)
    {
      id v23 = (id)v67.start.value;
      swift_bridgeObjectRelease();
      sub_1DCB86898();

      swift_willThrow();
      goto LABEL_52;
    }
    id v31 = v30;
    uint64_t v64 = v28;
    id v32 = (id)v67.start.value;
    int64_t v33 = sub_1DCB89168();
    int32_t v34 = sub_1DCB5C99C((uint64_t)a1);
    if (v34 < 0)
    {
      __break(1u);
    }
    else
    {
      CMTimeMake(&v67.start, v33, v34);
      CMTimeValue value = v67.start.value;
      uint64_t v36 = *(void *)&v67.start.timescale;
      CMTimeEpoch epoch = v67.start.epoch;
      int32_t v38 = sub_1DCB5C99C((uint64_t)a1);
      if ((v38 & 0x80000000) == 0)
      {
        CMTimeEpoch v62 = epoch;
        uint64_t v63 = v31;
        CMTimeMake(&v67.start, a2, v38);
        CMTimeValue v39 = v67.start.value;
        uint64_t v40 = *(void *)&v67.start.timescale;
        CMTimeEpoch v41 = v67.start.epoch;
        id v42 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNSpeechEmotionResult()), sel_init);
        if (*((void *)v27 + 2))
        {
          id v43 = v42;
          float v44 = v27[8] / 3.0;
          float v45 = -1.0;
          if (v44 > -1.0) {
            float v46 = v27[8] / 3.0;
          }
          else {
            float v46 = -1.0;
          }
          if (v44 <= 1.0) {
            float v47 = v46;
          }
          else {
            float v47 = 1.0;
          }
          uint64_t v48 = (double *)&v42[OBJC_IVAR___SNSpeechEmotionResult_impl];
          *(double *)&v42[OBJC_IVAR___SNSpeechEmotionResult_impl + 56] = v47;
          if (*((void *)v27 + 2) >= 2uLL)
          {
            float v49 = v27[9] * 0.5;
            if (v49 > -1.0) {
              float v45 = v27[9] * 0.5;
            }
            if (v49 > 1.0) {
              float v45 = 1.0;
            }
            v48[9] = v45;
            if (*((void *)v27 + 2) >= 3uLL)
            {
              float v50 = v27[10] * 0.5;
              if (v50 > -1.0) {
                float v51 = v27[10] * 0.5;
              }
              else {
                float v51 = -1.0;
              }
              if (v50 <= 1.0) {
                float v52 = v51;
              }
              else {
                float v52 = 1.0;
              }
              v48[8] = v52;
              if (*((void *)v27 + 2) >= 4uLL)
              {
                CMTimeValue v53 = value;
                float v54 = v27[11];
                swift_bridgeObjectRelease();
                if ((float)(v54 * 0.5) > -1.0) {
                  float v55 = v54 * 0.5;
                }
                else {
                  float v55 = -1.0;
                }
                if ((float)(v54 * 0.5) <= 1.0) {
                  float v56 = v55;
                }
                else {
                  float v56 = 1.0;
                }
                v48[10] = v56;
                uint64_t v57 = v43;
                SNSpeechEmotionResult.modelIdentifier.setter(0xD00000000000001FLL, 0x80000001DCB9BC60);
                v48[6] = 1.0;
                duration.CMTimeEpoch epoch = v41;
                start.CMTimeValue value = v53;
                *(void *)&start.double timescale = v36;
                start.CMTimeEpoch epoch = v62;
                duration.CMTimeValue value = v39;
                *(void *)&duration.double timescale = v40;
                CMTimeRangeMake(&v67, &start, &duration);
                CMTimeRange v75 = v67;
                id v23 = v65;
                v66();
                if (!v64)
                {
                  uint64_t v58 = sub_1DCB883C8();
                  ((void (*)(uint64_t))v66)(v58);
                  sub_1DCB883D8();
                  uint64_t v60 = v74;
                  *(void *)uint64_t v48 = v70;
                  *((void *)v48 + 1) = v71;
                  *((_OWORD *)v48 + 1) = v72;
                  *((void *)v48 + 4) = v73;
                  *((void *)v48 + 5) = v60;
                  sub_1DC87E988(&qword_1EAA9C720);
                  CMTimeValue v61 = swift_allocObject();
                  *(_OWORD *)(v61 + 16) = xmmword_1DCBB8670;
                  *(void *)(v61 + 32) = v57;
                  v67.start.CMTimeValue value = v61;
                  sub_1DCB87C68();
                  id v23 = (id)v67.start.value;

                  sub_1DC9E94B8();
                  return v23;
                }

LABEL_52:
                sub_1DC9E94B8();
                return v23;
              }
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
            }
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
    }
    __break(1u);
    goto LABEL_56;
  }
  return (id)MEMORY[0x1E4FBC860];
}

id sub_1DCB39FE4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DCB3A808();
  swift_allocError();
  return (id)swift_willThrow();
}

void sub_1DCB3A040()
{
  objc_super v2 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  type metadata accessor for SNFileUtils();
  sub_1DCB3B520(v7);
  uint64_t v8 = sub_1DCB86A18();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v7, 1, v8) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = sub_1DCB869D8();
    uint64_t v11 = v10;
    sub_1DC88D5C8();
    v12();
    uint64_t v13 = (void *)swift_allocObject();
    void v13[2] = v9;
    _OWORD v13[3] = v11;
    v13[4] = v3;
    uint64_t v14 = sub_1DC8A12D0();
    swift_release();
    if (!v1)
    {
      unint64_t v15 = (void *)v2[2];
      _OWORD v2[2] = v14;
    }
  }
}

id sub_1DCB3A1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id result = sub_1DCB395C4(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id sub_1DCB3A1F4()
{
  id result = sub_1DCB39FE4();
  if (!v0)
  {
    objc_super v2 = result;
    uint64_t v3 = (void *)sub_1DCB3B0C4();
    id v4 = sub_1DCB60550(v2, v3);

    return v4;
  }
  return result;
}

uint64_t type metadata accessor for SNSpeechEmotionEstimator()
{
  return self;
}

void type metadata accessor for SpeechEmotionEstimation.AudioSourceAgnosticRequest()
{
}

void type metadata accessor for SpeechEmotionEstimation()
{
}

uint64_t sub_1DCB3A29C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCB3A2A4(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCB3A2EC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCB3A398(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v3 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v3;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCB3A404(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 96);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCB3A444(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 96) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SpeechEmotionEstimation.Result()
{
}

unint64_t sub_1DCB3A4A8(uint64_t a1)
{
  unint64_t result = sub_1DC9BFB88();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCB3A4D0(uint64_t a1)
{
  unint64_t result = sub_1DC9BFDD4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCB3A4FC()
{
  unint64_t result = qword_1EAAAB8D0;
  if (!qword_1EAAAB8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB8D0);
  }
  return result;
}

unint64_t sub_1DCB3A54C()
{
  unint64_t result = qword_1EAAAB8D8;
  if (!qword_1EAAAB8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB8D8);
  }
  return result;
}

id sub_1DCB3A598(void *a1, int64_t a2, void (*a3)(void), void *a4)
{
  return sub_1DCB39970(a1, a2, a3, a4);
}

id sub_1DCB3A5B0()
{
  return sub_1DCB3A1F4();
}

void sub_1DCB3A5C8()
{
}

id sub_1DCB3A5E0()
{
  return sub_1DCB39FE4();
}

uint64_t sub_1DCB3A5F8()
{
  return sub_1DCB38F6C();
}

uint64_t sub_1DCB3A614()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1DCB3A65C()
{
  return sub_1DCB39030();
}

uint64_t sub_1DCB3A678()
{
  sub_1DC8818D0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCB3A6C8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCB3A708()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_1DCB3A740(uint64_t a1, uint64_t a2)
{
  unint64_t result = (void *)sub_1DCB867D8();
  uint64_t v5 = (uint64_t)result;
  if (result)
  {
    unint64_t result = (void *)sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      return result;
    }
    v5 += a1 - (void)result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v8 = sub_1DCB867F8();
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  return sub_1DCB0F6AC(v5, v9 / 4);
}

uint64_t sub_1DCB3A7D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCA1886C(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1DCB3A808()
{
  unint64_t result = qword_1EAAAB948;
  if (!qword_1EAAAB948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB948);
  }
  return result;
}

uint64_t sub_1DCB3A854()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1DCB3A88C@<X0>(void *a1@<X8>)
{
  return sub_1DCB3A1C8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1DCB3A8AC()
{
  unint64_t result = qword_1EAAAB960;
  if (!qword_1EAAAB960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB960);
  }
  return result;
}

unint64_t sub_1DCB3A8F8()
{
  unint64_t result = qword_1EAAAB970;
  if (!qword_1EAAAB970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB970);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SpeechEmotionEstimation.Result.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCB3AA10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}