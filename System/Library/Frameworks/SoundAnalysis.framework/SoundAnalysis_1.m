double (*SNSoundActionsResult.confidence.modify(void *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSoundActionsResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 48);
  return sub_1DC8FA1F4;
}

double sub_1DC8FA1F4(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + *(void *)(a1 + 16) + 48) = *(void *)a1;
  return result;
}

uint64_t SNSoundActionsResult.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNSoundActionsResult_impl + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SNSoundActionsResult.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___SNSoundActionsResult_impl;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC8FA31C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return SNSoundActionsResult.name.setter(v1, v2);
}

uint64_t (*SNSoundActionsResult.name.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 64);
  *a1 = *(void *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 56);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1DC8FA3B8;
}

uint64_t sub_1DC8FA3B8(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return SNSoundActionsResult.name.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  SNSoundActionsResult.name.setter(v3, v2);

  return swift_bridgeObjectRelease();
}

id sub_1DC8FA42C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x1E4F1FA20];
  uint64_t v3 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  v4 = &v0[OBJC_IVAR___SNSoundActionsResult_impl];
  *(void *)v4 = *MEMORY[0x1E4F1FA20];
  *((void *)v4 + 1) = *(void *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((void *)v4 + 4) = *(void *)(v2 + 32);
  *((void *)v4 + 5) = v3;
  *((void *)v4 + 6) = 0;
  *((void *)v4 + 7) = 0;
  *((void *)v4 + 8) = 0xE000000000000000;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1DC8FA4CC(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  v8 = &v3[OBJC_IVAR___SNSoundActionsResult_impl];
  *(void *)v8 = *(void *)a1;
  *((void *)v8 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v8 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v8 + 4) = *(void *)(a1 + 32);
  *((void *)v8 + 5) = v4;
  *((void *)v8 + 6) = v5;
  *((void *)v8 + 7) = v6;
  *((void *)v8 + 8) = v7;
  v10.receiver = v3;
  v10.super_class = v1;
  return objc_msgSendSuper2(&v10, sel_init);
}

id SNSoundActionsResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DC8FB3C0(OBJC_IVAR___SNSoundActionsResult_impl);
  sub_1DC8FB34C();
  uint64_t v7 = v4;
  uint64_t v8 = v3;
  swift_bridgeObjectRetain();
  id result = sub_1DC8FA4CC((uint64_t)v6);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNSoundActionsResult.hash.getter()
{
  return sub_1DC8F9AD0();
}

uint64_t SNSoundActionsResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v27);
  if (v28)
  {
    sub_1DC87E9CC(&v27, v26);
    sub_1DC87E9DC((uint64_t)v26, (uint64_t)v22);
    if (swift_dynamicCast())
    {
      uint64_t v3 = (char *)v18[0];
      if (v18[0])
      {
        uint64_t v4 = v1 + OBJC_IVAR___SNSoundActionsResult_impl;
        uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl);
        uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 40);
        double v7 = *(double *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 48);
        uint64_t v8 = *(void *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 56);
        uint64_t v9 = *(void *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 64);
        uint64_t v10 = *(void *)(v18[0] + OBJC_IVAR___SNSoundActionsResult_impl);
        uint64_t v11 = *(void *)(v18[0] + OBJC_IVAR___SNSoundActionsResult_impl + 40);
        double v12 = *(double *)(v18[0] + OBJC_IVAR___SNSoundActionsResult_impl + 48);
        uint64_t v13 = *(void *)(v18[0] + OBJC_IVAR___SNSoundActionsResult_impl + 56);
        uint64_t v14 = *(void *)(v18[0] + OBJC_IVAR___SNSoundActionsResult_impl + 64);
        v22[0] = v5;
        v22[1] = *(void *)(v4 + 8);
        long long v23 = *(_OWORD *)(v4 + 16);
        uint64_t v24 = *(void *)(v4 + 32);
        uint64_t v25 = v6;
        v18[0] = v10;
        v18[1] = *(void *)&v3[OBJC_IVAR___SNSoundActionsResult_impl + 8];
        long long v19 = *(_OWORD *)&v3[OBJC_IVAR___SNSoundActionsResult_impl + 16];
        uint64_t v20 = *(void *)&v3[OBJC_IVAR___SNSoundActionsResult_impl + 32];
        uint64_t v21 = v11;
        if (static TimeRange.== infix(_:_:)((uint64_t)v22, (uint64_t)v18) && v7 == v12)
        {
          if (v8 == v13 && v9 == v14)
          {

            char v16 = 1;
          }
          else
          {
            sub_1DC8FB374();
            char v16 = sub_1DCB89018();
          }
          goto LABEL_14;
        }
      }
    }
    char v16 = 0;
LABEL_14:
    sub_1DC8818D0((uint64_t)v26);
    return v16 & 1;
  }
  char v16 = 0;
  return v16 & 1;
}

id SNSoundActionsResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNSoundActionsResult.init(coder:)(a1);
}

id SNSoundActionsResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87D43C();
  swift_getObjectType();

  id v4 = sub_1DC8FA4CC((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNSoundActionsResult.encode(with:)(NSCoder with)
{
  memcpy(__dst, (const void *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl), sizeof(__dst));
  sub_1DC88298C((uint64_t)__dst);
  sub_1DC87B228(__dst, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1DC8FADA8((uint64_t)__dst);
}

uint64_t static SNSoundActionsResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSoundActionsResult.description.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1DCB88A98();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1DCB87938();

  sub_1DC8FB3A4();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  swift_bridgeObjectRetain();
  sub_1DC8FB3A4();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87FB8();
  sub_1DCB87A18();
  SNSoundActionsResult.timeRange.getter((uint64_t)&v15);
  uint64_t v3 = v15;
  uint64_t v4 = v17;
  uint64_t v5 = v18;
  uint64_t v6 = v20;
  double v7 = self;
  v11[0] = v3;
  v11[1] = v16;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  id v9 = objc_msgSend(v8, sel_description);
  sub_1DCB87938();

  sub_1DC8FB3A4();
  swift_bridgeObjectRelease();
  return v13;
}

id SNSoundActionsResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC8FADA8(uint64_t a1)
{
  return a1;
}

double sub_1DC8FADD4@<D0>(uint64_t a1@<X8>)
{
  return SNSoundActionsResult.timeRange.getter(a1);
}

double sub_1DC8FADF8(uint64_t a1)
{
  return SNSoundActionsResult.timeRange.setter(a1);
}

void sub_1DC8FAE1C(double *a1@<X8>)
{
  *a1 = SNSoundActionsResult.confidence.getter();
}

void sub_1DC8FAE48(double *a1)
{
}

uint64_t sub_1DC8FAE70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SNSoundActionsResult.name.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t type metadata accessor for SNSoundActionsResult()
{
  return self;
}

uint64_t method lookup function for SNSoundActionsResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNSoundActionsResult);
}

uint64_t destroy for SoundActionsResult()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SoundActionsResult(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SoundActionsResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for SoundActionsResult(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for SoundActionsResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v3 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SoundActionsResult(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 64);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SoundActionsResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsResult()
{
  return &type metadata for SoundActionsResult;
}

unint64_t sub_1DC8FB0C0()
{
  unint64_t result = qword_1EAA9F898;
  if (!qword_1EAA9F898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9F898);
  }
  return result;
}

unint64_t sub_1DC8FB10C()
{
  unint64_t result = qword_1EAA9F8A8;
  if (!qword_1EAA9F8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9F8A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SoundActionsResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC8FB224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsResult.CodingKeys()
{
  return &type metadata for SoundActionsResult.CodingKeys;
}

unint64_t sub_1DC8FB260()
{
  unint64_t result = qword_1EAA9F8C8;
  if (!qword_1EAA9F8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9F8C8);
  }
  return result;
}

unint64_t sub_1DC8FB2B0()
{
  unint64_t result = qword_1EAA9F8D0;
  if (!qword_1EAA9F8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9F8D0);
  }
  return result;
}

unint64_t sub_1DC8FB300()
{
  unint64_t result = qword_1EAA9F8D8;
  if (!qword_1EAA9F8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9F8D8);
  }
  return result;
}

uint64_t sub_1DC8FB374()
{
  return v0;
}

uint64_t sub_1DC8FB38C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t sub_1DC8FB3A4()
{
  return sub_1DCB87A18();
}

double sub_1DC8FB3C0@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1 + 48);
}

uint64_t sub_1DC8FB3D4()
{
  return v0;
}

unsigned char *storeEnumTagSinglePayload for RuntimeFeatureFlags.SoundAnalysis(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC8FB484);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RuntimeFeatureFlags.SoundAnalysis()
{
  return &type metadata for RuntimeFeatureFlags.SoundAnalysis;
}

unint64_t sub_1DC8FB4C0()
{
  unint64_t result = qword_1EAA9F8E0[0];
  if (!qword_1EAA9F8E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAA9F8E0);
  }
  return result;
}

const char *sub_1DC8FB50C()
{
  return "SoundAnalysis";
}

const char *sub_1DC8FB520()
{
  return "systemCombinePipes";
}

uint64_t sub_1DC8FB534()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC8FB584(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DC8FB5C4(a1);
  return v2;
}

uint64_t sub_1DC8FB5C4(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 16) = a1;
  sub_1DC8FB9A8();
  sub_1DC8FB9A8();
  swift_unknownObjectRetain();
  sub_1DCAC50E4();
  sub_1DCB87108();
  swift_getWitnessTable();
  type metadata accessor for SubscriptionSerializer();
  swift_getWitnessTable();
  uint64_t v3 = sub_1DCB873A8();
  swift_release();
  swift_unknownObjectRelease();
  *(void *)(v2 + 24) = v3;
  return v2;
}

uint64_t sub_1DC8FB6D8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void))
{
  return a2(a1, *(void *)(*(void *)v2 + 80), *(void *)(*(void *)v2 + 88));
}

uint64_t sub_1DC8FB734()
{
  return sub_1DCB87348();
}

uint64_t sub_1DC8FB780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 24);
  sub_1DC8FB9A8();
  sub_1DC8FB9A8();
  uint64_t v8 = sub_1DC8FB9B4();
  uint64_t v9 = sub_1DC8FB9B4();

  return MEMORY[0x1F40D6910](a1, v7, v8, v9, a2, a3);
}

uint64_t sub_1DC8FB838()
{
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1DC8FB860()
{
  sub_1DC8FB838();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedSubject()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC8FB8AC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DC8FB8CC(uint64_t a1)
{
  return sub_1DC8FB6D8(a1, MEMORY[0x1E4F1AC48]);
}

uint64_t sub_1DC8FB8F8(uint64_t a1)
{
  return sub_1DC8FB6D8(a1, MEMORY[0x1E4F1AC40]);
}

uint64_t sub_1DC8FB928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC8FB780(a1, a2, a3);
}

uint64_t sub_1DC8FB94C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC8FB968()
{
  type metadata accessor for SharedSubject();
  uint64_t v0 = swift_unknownObjectRetain();
  return sub_1DC8FB584(v0);
}

uint64_t sub_1DC8FB9B4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1DC8FB9D4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DC8FBBC8(*(void *)(v5 + OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted), *(void *)(v5 + OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted + 8), *(void *)(v5 + OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted + 16), *(void *)(v5 + OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted + 24), a1, a2, a3, a4, a5);
}

void sub_1DC8FBB10(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 >> 60 == 15)
  {
    uint64_t v10 = 0;
    if (a5)
    {
LABEL_3:
      uint64_t v11 = sub_1DCB86888();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v10 = (void *)sub_1DCB86AB8();
    if (a5) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
LABEL_6:
  id v12 = (id)v11;
  (*(void (**)(uint64_t, void, void *, uint64_t))(a6 + 16))(a6, a1 & 1, v10, a4);
}

uint64_t sub_1DC8FBBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v24 = a8;
  uint64_t v16 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v18, 1, 1, v19);
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a7;
  v20[5] = a1;
  v20[6] = a2;
  v20[7] = a3;
  v20[8] = a4;
  v20[9] = a5;
  uint64_t v21 = v24;
  v20[10] = a6;
  v20[11] = v21;
  v20[12] = a9;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_1DC8B9C40(a5, a6);
  swift_retain();
  sub_1DCA97644();
  return swift_release();
}

void sub_1DC8FBD18()
{
}

uint64_t type metadata accessor for XPCProxyXPCHost()
{
  return self;
}

void type metadata accessor for XPCConnectionState()
{
}

uint64_t sub_1DC8FBDD0()
{
  swift_release();

  return swift_release();
}

uint64_t sub_1DC8FBE0C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1DC8FBE58(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DC8FBEB8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

void type metadata accessor for XPCProxy()
{
}

id sub_1DC8FBF0C()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_1F381C620);
  objc_msgSend(v0, sel_setInterface_forSelector_argumentIndex_ofReply_, v0, sel_xpcUnsafeSendMessageWithData_proxy_completionHandler_, 1, 0);
  id result = objc_msgSend(v0, sel_setInterface_forSelector_argumentIndex_ofReply_, v0, sel_xpcUnsafeSendMessageWithData_proxy_completionHandler_, 2, 1);
  qword_1EAAFF878 = (uint64_t)v0;
  return result;
}

uint64_t sub_1DC8FBFA8()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  *(void *)(v0 + 64) = v1;
  swift_task_alloc();
  sub_1DC8BAD7C();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v3;
  v2[1] = sub_1DC8FC064;
  sub_1DC8BA86C();
  return sub_1DC8FC13C(v4, v5, v6, v7, v8);
}

uint64_t sub_1DC8FC064()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v7 = *(_OWORD **)(v3 + 64);
    long long v8 = *(_OWORD *)(v3 + 16);
    long long v9 = *(_OWORD *)(v3 + 48);
    v7[1] = *(_OWORD *)(v3 + 32);
    v7[2] = v9;
    *uint64_t v7 = v8;
  }
  sub_1DC8BA978();
  return v10();
}

uint64_t sub_1DC8FC13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC8FC168()
{
  sub_1DC902AC4();
  uint64_t receiver = (uint64_t)v0[11].receiver;
  sub_1DC87E988(&qword_1EAA9F980);
  swift_allocObject();
  uint64_t v2 = sub_1DC8FFB44();
  v0[12].Class super_class = (Class)v2;
  sub_1DC901EB8(receiver, (uint64_t)&v0[8], (uint64_t *)&unk_1EAAA2640);
  sub_1DC901EB8((uint64_t)&v0[8], (uint64_t)&v0[7], (uint64_t *)&unk_1EAAA2640);
  if ((unint64_t)v0[7].super_class >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = (void *)sub_1DCB86AB8();
  }
  uint64_t v4 = v0[11].receiver;
  uint64_t v5 = v4[2];
  if (v5)
  {
    uint64_t v7 = v4[4];
    uint64_t v6 = v4[5];
    uint64_t v8 = v4[3];
    long long v9 = (objc_class *)type metadata accessor for XPCProxyXPCHost();
    uint64_t v10 = (char *)objc_allocWithZone(v9);
    uint64_t v11 = (uint64_t *)&v10[OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted];
    *uint64_t v11 = v5;
    v11[1] = v8;
    v11[2] = v7;
    v11[3] = v6;
    sub_1DC902AF8();
    sub_1DC902AF8();
    v0[9].uint64_t receiver = v10;
    v0[9].Class super_class = v9;
    swift_retain();
    swift_retain();
    id v12 = objc_msgSendSuper2(v0 + 9, sel_init);
    swift_release();
    swift_release();
    sub_1DC8866A0(v5);
  }
  else
  {
    id v12 = 0;
  }
  Class super_class = v0[11].super_class;
  id v13 = v0[12].receiver;
  Class v15 = v0[10].super_class;
  uint64_t v16 = (objc_class *)swift_allocObject();
  *((void *)v16 + 2) = super_class;
  *((void *)v16 + 3) = v13;
  *((void *)v16 + 4) = v2;
  v0[3].uint64_t receiver = sub_1DC8FFC24;
  v0[3].Class super_class = v16;
  v0[1].uint64_t receiver = (id)MEMORY[0x1E4F143A8];
  v0[1].Class super_class = (Class)1107296256;
  v0[2].uint64_t receiver = sub_1DC8FCE68;
  v0[2].Class super_class = (Class)&unk_1F37FA940;
  uint64_t v17 = _Block_copy(&v0[1]);
  swift_retain();
  swift_retain();
  swift_release();
  [(objc_class *)v15 xpcUnsafeSendMessageWithData:v3 proxy:v12 completionHandler:v17];

  _Block_release(v17);
  swift_unknownObjectRelease();
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EAA9F998 + dword_1EAA9F998);
  swift_retain();
  swift_task_alloc();
  sub_1DC8BAD7C();
  v0[13].uint64_t receiver = v18;
  *uint64_t v18 = v19;
  v18[1] = sub_1DC8FC444;
  uint64_t v20 = (uint64_t)v0[11].super_class;
  uint64_t v21 = (uint64_t)v0[12].receiver;
  return v23((uint64_t)&v0[4], v20, v21, (uint64_t)&unk_1EAA9F990, v2);
}

uint64_t sub_1DC8FC444()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 216) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC8FC528()
{
  sub_1DC902AC4();
  uint64_t v1 = v0[10];
  if ((unint64_t)(v1 - 1) >= 2)
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[9];
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v7 = v0[13];
    uint64_t v8 = (void *)v0[20];
    swift_release();
    void *v8 = v3;
    v8[1] = v4;
    v8[2] = v1;
    v8[3] = v5;
    v8[4] = v6;
    v8[5] = v7;
    sub_1DC8BAB84();
  }
  else
  {
    sub_1DC8FFCD8();
    swift_allocError();
    swift_willThrow();
    swift_release();
    sub_1DC8BA978();
  }
  return v2();
}

uint64_t sub_1DC8FC60C()
{
  sub_1DC8867A8();
  swift_release_n();
  sub_1DC8BA978();
  return v0();
}

void sub_1DC8FC66C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, id a5, uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    if (a4)
    {
      id v12 = (void *)swift_allocObject();
      v12[2] = a4;
      v12[3] = a6;
      v12[4] = a7;
      swift_retain_n();
      id v13 = &unk_1EAA9E368;
    }
    else
    {
      id v13 = 0;
      id v12 = 0;
      a6 = 0;
      a7 = 0;
    }
    uint64_t v17 = a2;
    *(void *)&long long v18 = a3;
    *((void *)&v18 + 1) = v13;
    *(void *)&long long v19 = v12;
    *((void *)&v19 + 1) = a6;
    uint64_t v20 = a7;
    char v21 = 0;
    swift_unknownObjectRetain();
    sub_1DC8B9C40(a2, a3);
    sub_1DC8B9C40(a2, a3);
    sub_1DC884F60((uint64_t)v13);
    sub_1DC8FC8B4((uint64_t)&v17);
    sub_1DC88668C(a2, a3);
    sub_1DC8866A0((uint64_t)v13);
    sub_1DC88668C(a2, a3);
    sub_1DC8866A0((uint64_t)v13);
  }
  else
  {
    if (a5)
    {
      id v14 = a5;
    }
    else
    {
      type metadata accessor for SNError();
      id v14 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0x206E776F6E6B6E75, 0xED0000726F727265);
      a5 = 0;
    }
    uint64_t v17 = (uint64_t)v14;
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v20 = 0;
    char v21 = 1;
    id v15 = a5;
    id v16 = v14;
    sub_1DC8FC8B4((uint64_t)&v17);
  }
}

uint64_t sub_1DC8FC8B4(uint64_t a1)
{
  sub_1DC901EB8(a1, (uint64_t)v46, &qword_1EAA9FA70);
  uint64_t v3 = v46[0];
  uint64_t v4 = v46[1];
  uint64_t v5 = v46[2];
  uint64_t v6 = v46[3];
  uint64_t v7 = v46[4];
  uint64_t v8 = v46[5];
  char v9 = v47;
  uint64_t v10 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  if (*(unsigned char *)(v1 + 73))
  {
    sub_1DC87E988(&qword_1EAA9FA78);
    sub_1DC90237C(&qword_1EAA9FA80, &qword_1EAA9FA78);
    swift_allocError();
    swift_willThrow();
    os_unfair_lock_unlock(v10);
    return swift_release();
  }
  uint64_t v13 = *(void *)(v1 + 56);
  uint64_t v12 = *(void *)(v1 + 64);
  uint64_t v14 = *(void *)(v1 + 40);
  uint64_t v15 = *(void *)(v1 + 48);
  uint64_t v38 = v14;
  uint64_t v16 = v5;
  uint64_t v18 = *(void *)(v1 + 24);
  unint64_t v17 = *(void *)(v1 + 32);
  uint64_t v48 = v3;
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 32) = v4;
  uint64_t v42 = v16;
  uint64_t v43 = v4;
  *(void *)(v1 + 40) = v16;
  *(void *)(v1 + 48) = v6;
  uint64_t v41 = v6;
  uint64_t v19 = v7;
  *(void *)(v1 + 56) = v7;
  *(void *)(v1 + 64) = v8;
  char v20 = *(unsigned char *)(v1 + 72);
  char v37 = v20;
  char v21 = v9;
  *(unsigned char *)(v1 + 72) = v9;
  *(unsigned char *)(v1 + 73) = 1;
  unint64_t v22 = v17;
  uint64_t v23 = v15;
  uint64_t v24 = v13;
  uint64_t v25 = v12;
  sub_1DC901C58((void *)v18, v17, v14, v15, v13, v12, v20, 0);
  sub_1DC901F14(a1, (void (*)(void, void, void, void, void, void, void))sub_1DC901C68);
  sub_1DC901CD4((void *)v18, v22, v38, v23, v24, v25, v37, 0);
  os_unfair_lock_unlock(v10);
  uint64_t result = swift_release();
  int64_t v26 = 0;
  uint64_t v27 = *(void *)(v18 + 64);
  os_unfair_lock_t lock = (os_unfair_lock_t)(v18 + 64);
  uint64_t v28 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  int64_t v40 = (unint64_t)(v28 + 63) >> 6;
  if ((v29 & v27) == 0) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v31 = __clz(__rbit64(v30));
  v30 &= v30 - 1;
  for (unint64_t i = v31 | (v26 << 6); ; unint64_t i = __clz(__rbit64(v34)) + (v26 << 6))
  {
    v36 = *(void (**)(void *))(*(void *)(v18 + 56) + 16 * i);
    v44[0] = v48;
    v44[1] = v43;
    v44[2] = v42;
    v44[3] = v41;
    v44[4] = v19;
    v44[5] = v8;
    char v45 = v21;
    sub_1DC901F14(a1, (void (*)(void, void, void, void, void, void, void))sub_1DC901C68);
    swift_retain();
    v36(v44);
    swift_release();
    uint64_t result = sub_1DC901F14(a1, (void (*)(void, void, void, void, void, void, void))sub_1DC901CE4);
    if (v30) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v33 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v33 >= v40) {
      return swift_release();
    }
    unint64_t v34 = *(void *)&lock[2 * v33]._os_unfair_lock_opaque;
    ++v26;
    if (!v34)
    {
      int64_t v26 = v33 + 1;
      if (v33 + 1 >= v40) {
        return swift_release();
      }
      unint64_t v34 = *(void *)&lock[2 * v26]._os_unfair_lock_opaque;
      if (!v34)
      {
        int64_t v26 = v33 + 2;
        if (v33 + 2 >= v40) {
          return swift_release();
        }
        unint64_t v34 = *(void *)&lock[2 * v26]._os_unfair_lock_opaque;
        if (!v34)
        {
          int64_t v26 = v33 + 3;
          if (v33 + 3 >= v40) {
            return swift_release();
          }
          unint64_t v34 = *(void *)&lock[2 * v26]._os_unfair_lock_opaque;
          if (!v34) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v30 = (v34 - 1) & v34;
  }
  int64_t v35 = v33 + 4;
  if (v35 >= v40) {
    return swift_release();
  }
  unint64_t v34 = *(void *)&lock[2 * v35]._os_unfair_lock_opaque;
  if (v34)
  {
    int64_t v26 = v35;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v26 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v26 >= v40) {
      return swift_release();
    }
    unint64_t v34 = *(void *)&lock[2 * v26]._os_unfair_lock_opaque;
    ++v35;
    if (v34) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1DC8FCC28(void *a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  if (*(unsigned char *)(v1 + 32))
  {
    sub_1DC87E988(&qword_1EAA9FAB8);
    sub_1DC90237C(&qword_1EAA9FAC0, &qword_1EAA9FAB8);
    swift_allocError();
    swift_willThrow();
    os_unfair_lock_unlock(v3);
LABEL_25:
    swift_release();
    return;
  }
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = a1;
  *(unsigned char *)(v1 + 32) = 1;
  sub_1DC902294((id)v4, 0);
  id v5 = a1;
  sub_1DC9022A0((id)v4, 0);
  os_unfair_lock_unlock(v3);
  swift_release();
  int64_t v6 = 0;
  uint64_t v7 = v4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v6 << 6))
  {
    unint64_t v17 = *(void (**)(void **))(*(void *)(v4 + 56) + 16 * i);
    uint64_t v19 = a1;
    id v18 = a1;
    swift_retain();
    v17(&v19);
    swift_release();

    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v11) {
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_25;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_25;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15)
        {
          int64_t v6 = v14 + 3;
          if (v14 + 3 >= v11) {
            goto LABEL_25;
          }
          unint64_t v15 = *(void *)(v7 + 8 * v6);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v11) {
    goto LABEL_25;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1DC8FCE68(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(void (**)(uint64_t, void *, unint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    swift_retain();
    id v10 = v7;
    uint64_t v7 = (void *)sub_1DCB86AD8();
    unint64_t v12 = v11;
  }
  else
  {
    swift_retain();
    unint64_t v12 = 0xF000000000000000;
  }
  swift_unknownObjectRetain();
  id v13 = a5;
  v9(a2, v7, v12, a4, a5);

  swift_unknownObjectRelease();
  sub_1DC88668C((uint64_t)v7, v12);

  return swift_release();
}

uint64_t sub_1DC8FCF3C(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EAA9FA48 + dword_1EAA9FA48);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 88) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC8FCFF4;
  return v4(v1 + 16);
}

uint64_t sub_1DC8FCFF4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC8FD0BC()
{
  sub_1DC8867A8();
  long long v1 = *(_OWORD *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 64);
  if (v2 == 255)
  {
    uint64_t v3 = *(void **)(v0 + 80);
    *uint64_t v3 = 0;
    v3[1] = 0;
    v3[2] = 1;
    v3[3] = 0;
    v3[4] = 0;
    v3[5] = 0;
LABEL_5:
    sub_1DC8BAB84();
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    long long v4 = *(_OWORD *)(v0 + 32);
    long long v5 = *(_OWORD *)(v0 + 48);
    int64_t v6 = *(_OWORD **)(v0 + 80);
    *int64_t v6 = v1;
    v6[1] = v4;
    v6[2] = v5;
    goto LABEL_5;
  }
  *(void *)(v0 + 72) = v1;
  sub_1DC87E988(&qword_1EAA9DF60);
  swift_willThrowTypedImpl();
  sub_1DC8BA978();
LABEL_7:
  return v7();
}

uint64_t sub_1DC8FD180(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  uint64_t v3 = sub_1DCB86BF8();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DC8FD240, 0, 0);
}

uint64_t sub_1DC8FD240()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  sub_1DCB86BE8();
  uint64_t v3 = swift_task_alloc();
  v0[14] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_task_alloc();
  v0[15] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  sub_1DC87E988(&qword_1EAA9FA60);
  sub_1DC902A64();
  *uint64_t v5 = v6;
  v5[1] = sub_1DC8FD344;
  sub_1DC9029F4();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188148](v7, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1DC8FD344()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC8FD444()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_1DC902A50();
  v3(v2);
  char v4 = *(unsigned char *)(v0 + 64);
  long long v5 = *(_OWORD *)(v0 + 32);
  long long v6 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v5;
  *(_OWORD *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 48) = v4;
  swift_task_dealloc();
  sub_1DC8BA978();
  return v7();
}

uint64_t sub_1DC8FD4C8()
{
  sub_1DC8867A8();
  v1[2] = v0;
  uint64_t v2 = sub_1DCB86BF8();
  v1[3] = v2;
  sub_1DC89D568(v2);
  v1[4] = v3;
  v1[5] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DC8FD55C()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  sub_1DCB86BE8();
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_task_alloc();
  v0[7] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  sub_1DC87E988(&qword_1EAA9FAE0);
  sub_1DC902A64();
  *uint64_t v5 = v6;
  v5[1] = sub_1DC8FD660;
  sub_1DC9029F4();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188148](v7, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1DC8FD660()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC8FD760()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC902A50();
  v2(v1);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 72);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1DC8FD7D4()
{
  sub_1DC8867A8();
  v1[3] = v0;
  uint64_t v2 = sub_1DCB86BF8();
  v1[4] = v2;
  sub_1DC89D568(v2);
  v1[5] = v3;
  v1[6] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DC8FD868()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  sub_1DCB86BE8();
  uint64_t v3 = swift_task_alloc();
  v0[7] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_task_alloc();
  v0[8] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  sub_1DC87E988(&qword_1EAA9FAA0);
  sub_1DC902A64();
  *uint64_t v5 = v6;
  v5[1] = sub_1DC8FD96C;
  sub_1DC9029F4();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188148](v7, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1DC8FD96C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC8FDA6C()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC902A50();
  v2(v1);
  uint64_t v3 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1DC8FDAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return MEMORY[0x1F4188298](sub_1DC8FDB08, 0, 0);
}

uint64_t sub_1DC8FDB08()
{
  sub_1DC902AC4();
  uint64_t v17 = v0;
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_1DC87E988(&qword_1EAA9F9A8);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 136) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1DCBBCDA0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  *(void *)(v5 + 32) = &unk_1EAA9F9B8;
  *(void *)(v5 + 40) = v6;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  *(void *)(v7 + 24) = v1;
  *(void *)(v5 + 48) = &unk_1EAA9F9C8;
  *(void *)(v5 + 56) = v7;
  swift_retain();
  swift_retain();
  uint64_t v8 = sub_1DC8FE6F4(v16, v5);
  uint64_t v10 = (void (*)(uint64_t))v16[0];
  uint64_t v9 = v16[1];
  *(void *)(v0 + 144) = v8;
  *(void *)(v0 + 152) = v9;
  uint64_t v11 = swift_retain();
  v10(v11);
  swift_release();
  long long v12 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 160) = v12;
  uint64_t v15 = (uint64_t (*)(uint64_t))(v12 + *(int *)v12);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1DC8FDCD4;
  return v15(v0 + 16);
}

uint64_t sub_1DC8FDCD4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC8FDDB0()
{
  int v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 == 255)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 160) + **(int **)(v0 + 160));
    swift_task_alloc();
    sub_1DC8BAD7C();
    *(void *)(v0 + 176) = v2;
    *uint64_t v2 = v3;
    v2[1] = sub_1DC8FDCD4;
    return v10(v0 + 16);
  }
  long long v11 = *(_OWORD *)(v0 + 16);
  long long v8 = *(_OWORD *)(v0 + 48);
  long long v9 = *(_OWORD *)(v0 + 32);
  swift_release();
  sub_1DCB87EE8();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1 == 254)
  {
    uint64_t v5 = *(void **)(v0 + 96);
    *uint64_t v5 = 0;
    v5[1] = 0;
    v5[2] = 2;
    v5[3] = 0;
    v5[4] = 0;
    v5[5] = 0;
  }
  else
  {
    if (v1)
    {
      *(void *)(v0 + 88) = v11;
      sub_1DC87E988(&qword_1EAA9DF60);
      swift_willThrowTypedImpl();
      sub_1DC8BA978();
      goto LABEL_11;
    }
    uint64_t v6 = *(_OWORD **)(v0 + 96);
    *uint64_t v6 = v11;
    v6[1] = v9;
    v6[2] = v8;
  }
  sub_1DC8BAB84();
LABEL_11:
  return v7();
}

uint64_t sub_1DC8FDFA8()
{
  sub_1DC8867A8();
  swift_release();
  return swift_unexpectedError();
}

uint64_t sub_1DC8FE010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 184) = v11;
  *(void *)(v8 + 192) = v12;
  *(_OWORD *)(v8 + 168) = v10;
  *(void *)(v8 + 152) = a7;
  *(void *)(v8 + 160) = a8;
  *(void *)(v8 + 136) = a5;
  *(void *)(v8 + 144) = a6;
  *(void *)(v8 + 128) = a4;
  return MEMORY[0x1F4188298](sub_1DC8FE04C, 0, 0);
}

uint64_t sub_1DC8FE04C()
{
  uint64_t v1 = v0[16];
  if (v1)
  {
    uint64_t v2 = v0[19];
    uint64_t v3 = v0[20];
    uint64_t v4 = (void *)swift_allocObject();
    v4[2] = v1;
    v4[3] = v2;
    v4[4] = v3;
    swift_retain_n();
    uint64_t v5 = &unk_1EAA9FB08;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  v0[27] = v2;
  v0[28] = v3;
  v0[25] = v5;
  v0[26] = v4;
  uint64_t v7 = v0[21];
  unint64_t v6 = v0[22];
  v0[2] = v7;
  uint64_t v8 = (int *)v0[17];
  v0[3] = v6;
  v0[4] = v5;
  v0[5] = v4;
  v0[6] = v2;
  v0[7] = v3;
  swift_unknownObjectRetain();
  sub_1DC8B9C40(v7, v6);
  sub_1DC884F60((uint64_t)v5);
  uint64_t v12 = (int *)((char *)v8 + *v8);
  swift_task_alloc();
  sub_1DC8BAD7C();
  v0[29] = v9;
  *long long v9 = v10;
  v9[1] = sub_1DC8FE1F0;
  return ((uint64_t (*)(void *, void *))v12)(v0 + 8, v0 + 2);
}

uint64_t sub_1DC8FE1F0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 240) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC8FE2CC()
{
  sub_1DC902AC4();
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v2 = *(void *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = (objc_class *)type metadata accessor for XPCProxyXPCHost();
    uint64_t v6 = (char *)objc_allocWithZone(v5);
    uint64_t v7 = (uint64_t *)&v6[OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted];
    *uint64_t v7 = v1;
    v7[1] = v4;
    v7[2] = v3;
    v7[3] = v2;
    sub_1DC902B18();
    sub_1DC902B18();
    *(void *)(v0 + 112) = v6;
    *(void *)(v0 + 120) = v5;
    swift_retain();
    swift_retain();
    id v8 = objc_msgSendSuper2((objc_super *)(v0 + 112), sel_init);
    swift_release();
    swift_release();
    sub_1DC902AA8(v1);
  }
  else
  {
    id v8 = 0;
  }
  uint64_t v9 = *(void *)(v0 + 200);
  uint64_t v11 = *(void *)(v0 + 168);
  unint64_t v10 = *(void *)(v0 + 176);
  (*(void (**)(uint64_t, void, void, id, void))(v0 + 184))(1, *(void *)(v0 + 64), *(void *)(v0 + 72), v8, 0);
  sub_1DC886630((uint64_t *)(v0 + 64));
  sub_1DC902AA8(v9);
  sub_1DC88668C(v11, v10);
  sub_1DC902AA8(v9);
  swift_unknownObjectRelease();
  sub_1DC8BA978();
  return v12();
}

uint64_t sub_1DC8FE424()
{
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = (void (*)(void, void, unint64_t, void, void *))v0[23];
  sub_1DC88668C(v0[21], v0[22]);
  sub_1DC902B38();
  sub_1DC902B38();
  id v3 = v1;
  v2(0, 0, 0xF000000000000000, 0, v1);

  sub_1DC8BA978();
  return v4();
}

uint64_t sub_1DC8FE4E4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 72) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 80) = v3;
  *id v3 = v2;
  v3[1] = sub_1DC8FE5C4;
  return v5(v2 + 16);
}

uint64_t sub_1DC8FE5C4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *id v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 88) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC8FE6A0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  BOOL v2 = *(void *)(v0 + 88) != 0;
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  *(unsigned char *)(v1 + 48) = v2;
  return sub_1DC9029C0();
}

uint64_t sub_1DC8FE6C8()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 72);
  *(void *)uint64_t v2 = v1;
  *(_OWORD *)(v2 + 8) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = v1 != 0;
  return sub_1DC9029C0();
}

uint64_t sub_1DC8FE6F4(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  v51 = a1;
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v41 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9F9D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  int64_t v40 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v7;
  MEMORY[0x1F4188790](v6);
  v49 = (char *)&v40 - v8;
  uint64_t v9 = sub_1DC87E988(&qword_1EAA9F9D8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988(&qword_1EAA9F9E0);
  uint64_t v47 = *(void *)(v13 - 8);
  uint64_t v48 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  char v45 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = sub_1DC87E988(&qword_1EAA9F9E8);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  char v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v40 - v22;
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)&v40 - v22, 1, 1, v4);
  v52 = v23;
  sub_1DC87E988(&qword_1EAA9F9F0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBD028], v9);
  v46 = v17;
  sub_1DCB87ED8();
  uint64_t v42 = v23;
  sub_1DC8B9F3C((uint64_t)v23, (uint64_t)v21, &qword_1EAA9F9E8);
  uint64_t v24 = v4;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v21, 1, v4) == 1)
  {
    sub_1DC901A64((uint64_t)v21, &qword_1EAA9F9E8);
    uint64_t result = sub_1DCB88C68();
    __break(1u);
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    int64_t v26 = v49;
    v25(v49, v21, v24);
    uint64_t v27 = sub_1DCB87E48();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v41, 1, 1, v27);
    uint64_t v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v40, v26, v24);
    unint64_t v29 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v30 = (char *)swift_allocObject();
    *((void *)v30 + 2) = 0;
    *((void *)v30 + 3) = 0;
    *((void *)v30 + 4) = v50;
    v25(&v30[v29], v28, v24);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1DCA97644();
    v32 = v46;
    uint64_t v33 = v47;
    unint64_t v34 = v45;
    uint64_t v35 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v45, v46, v48);
    unint64_t v36 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v37 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v37 + v36, v34, v35);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v24);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v35);
    uint64_t v38 = v51;
    void *v51 = sub_1DC8FFFF0;
    v38[1] = v37;
    sub_1DC901A64((uint64_t)v42, &qword_1EAA9F9E8);
    return v31;
  }
  return result;
}

uint64_t sub_1DC8FEC78(uint64_t a1, uint64_t a2)
{
  sub_1DC901A64(a2, &qword_1EAA9F9E8);
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9F9D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, 0, 1, v4);
}

uint64_t sub_1DC8FED18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1DC8FED38, 0, 0);
}

uint64_t sub_1DC8FED38()
{
  sub_1DC8867A8();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC8FEE18;
  return MEMORY[0x1F4187F28]();
}

uint64_t sub_1DC8FEE18()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC8FEEFC()
{
  sub_1DC8867A8();
  sub_1DC87E988(&qword_1EAA9F9D0);
  sub_1DCB87E88();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC8FEF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  uint64_t v5 = sub_1DC87E988(&qword_1EAA9F9D0);
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(void *)(v6 + 64);
  v4[15] = swift_task_alloc();
  sub_1DC87E988(&qword_1EAAA2180);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DC8FF070, 0, 0);
}

uint64_t sub_1DC8FF070()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (long long *)(v1 + 32);
    uint64_t v23 = *(void *)(v0 + 112) + 7;
    uint64_t v24 = *(void *)(v0 + 104);
    uint64_t v22 = sub_1DCB87E48();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v25 = v2;
      uint64_t v26 = *(void *)(v0 + 128);
      uint64_t v5 = *(void *)(v0 + 120);
      uint64_t v7 = *(void *)(v0 + 88);
      uint64_t v6 = *(void *)(v0 + 96);
      long long v27 = *v3;
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, 1, 1, v22);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v5, v7, v6);
      unint64_t v8 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 24) = 0;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v9 + v8, v5, v6);
      *(_OWORD *)(v9 + ((v23 + v8) & 0xFFFFFFFFFFFFFFF8)) = v27;
      sub_1DC8B9F3C(v4, v26, &qword_1EAAA2180);
      int v10 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v26, 1, v22);
      swift_retain_n();
      uint64_t v11 = *(void *)(v0 + 128);
      if (v10 == 1)
      {
        sub_1DC901A64(*(void *)(v0 + 128), &qword_1EAAA2180);
      }
      else
      {
        sub_1DCB87E38();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v11, v22);
      }
      if (*(void *)(v9 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v12 = sub_1DCB87DE8();
        uint64_t v14 = v13;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v12 = 0;
        uint64_t v14 = 0;
      }
      uint64_t v15 = **(void **)(v0 + 72);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = &unk_1EAA9FA20;
      *(void *)(v16 + 24) = v9;
      uint64_t v17 = v14 | v12;
      if (v14 | v12)
      {
        uint64_t v17 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v12;
        *(void *)(v0 + 40) = v14;
      }
      uint64_t v18 = *(void *)(v0 + 136);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v17;
      *(void *)(v0 + 64) = v15;
      swift_task_create();
      swift_release();
      swift_release();
      sub_1DC901A64(v18, &qword_1EAAA2180);
      ++v3;
      --v2;
    }
    while (v25 != 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v19;
  uint64_t v20 = sub_1DC87E988(&qword_1EAA9FA30);
  *uint64_t v19 = v0;
  v19[1] = sub_1DC8FF408;
  return MEMORY[0x1F4187C40](0, 0, v20);
}

uint64_t sub_1DC8FF408()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v3();
}

uint64_t sub_1DC8FF524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  v5[9] = a4;
  uint64_t v7 = sub_1DC87E988(&qword_1EAA9FA38);
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  int v10 = (uint64_t (*)(void *))((char *)a5 + *a5);
  unint64_t v8 = (void *)swift_task_alloc();
  v5[13] = v8;
  void *v8 = v5;
  v8[1] = sub_1DC8FF66C;
  return v10(v5 + 2);
}

uint64_t sub_1DC8FF66C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC8FF734()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_1DC87E988(&qword_1EAA9F9D0);
  sub_1DCB87E78();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  sub_1DC8BA978();
  sub_1DC8BA86C();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1DC8FF7D4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1DC8FF8A4;
  return v5();
}

uint64_t sub_1DC8FF8A4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 32) = v3;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DC8FF974()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16);
  if (v1)
  {
    *(void *)uint64_t v2 = v1;
    *(_OWORD *)(v2 + 8) = 0u;
    *(_OWORD *)(v2 + 24) = 0u;
    *(void *)(v2 + 40) = 0;
    char v3 = 1;
  }
  else
  {
    *(_OWORD *)(v2 + 16) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)uint64_t v2 = 0u;
    char v3 = -1;
  }
  *(unsigned char *)(v2 + 48) = v3;
  return sub_1DC9029C0();
}

uint64_t sub_1DC8FF9B4(uint64_t a1, int *a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAA9FA40 + dword_1EAA9FA40);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8FFA78;
  return v7(a1, a2);
}

uint64_t sub_1DC8FFA78()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC8FFB44()
{
  type metadata accessor for SafeLock();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = (_DWORD *)swift_slowAlloc();
  *uint64_t v2 = 0;
  *(void *)(v1 + 16) = v2;
  *(void *)(v0 + 16) = v1;
  sub_1DCB86BF8();
  sub_1DC87E988(&qword_1EAA9E770);
  sub_1DC901F58();
  *(void *)(v0 + 24) = sub_1DCB877D8();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 58) = 0u;
  return v0;
}

uint64_t sub_1DC8FFBE4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC8FFC24(char a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  sub_1DC8FC66C(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_1DC8FFC30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC8FFC40()
{
  return swift_release();
}

uint64_t sub_1DC8FFC48()
{
  sub_1DC8867A8();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC886800(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC8D6930;
  return sub_1DC8FCF3C(v1);
}

unint64_t sub_1DC8FFCD8()
{
  unint64_t result = qword_1EAA9F9A0;
  if (!qword_1EAA9F9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9F9A0);
  }
  return result;
}

uint64_t sub_1DC8FFD24()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC8FFD5C()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC886898();
  return sub_1DC8FF7D4(v3, v4);
}

uint64_t sub_1DC8FFDEC()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC886898();
  return sub_1DC8FF9B4(v3, v4);
}

uint64_t sub_1DC8FFE7C(uint64_t a1)
{
  return sub_1DC8FEC78(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DC8FFE84()
{
  sub_1DC87E988(&qword_1EAA9F9D0);
  sub_1DC9029D4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1DC902A90();
  v1(v0);

  return swift_deallocObject();
}

uint64_t sub_1DC8FFF20()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v0 = sub_1DC87E988(&qword_1EAA9F9D0);
  sub_1DC8E77E0(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC886800(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC8D6930;
  sub_1DC902A74();
  sub_1DC8BA86C();
  return sub_1DC8FED18(v4, v5, v6, v7, v8);
}

uint64_t sub_1DC8FFFE4()
{
  return sub_1DC90251C(&qword_1EAA9F9E0);
}

uint64_t sub_1DC8FFFF0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAA9F9E0);
  sub_1DC8E77E0(v2);

  return sub_1DC9DDE50(a1);
}

uint64_t sub_1DC900044()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_1DC886800(v7);
  void *v8 = v9;
  v8[1] = sub_1DC8D78C0;
  return sub_1DC8FEF60(v4, v2, v6, v5);
}

uint64_t sub_1DC9000EC()
{
  return sub_1DC900104(&qword_1EAA9E7C8);
}

uint64_t sub_1DC9000F8()
{
  return sub_1DC900104(&qword_1EAA9E788);
}

uint64_t sub_1DC900104(uint64_t *a1)
{
  type metadata accessor for SafeLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  _DWORD *v4 = 0;
  *(void *)(v3 + 16) = v4;
  *(void *)(v1 + 16) = v3;
  sub_1DCB86BF8();
  sub_1DC87E988(a1);
  sub_1DC901F58();
  *(void *)(v1 + 24) = sub_1DCB877D8();
  *(unsigned char *)(v1 + 32) = 0;
  return v1;
}

uint64_t sub_1DC90019C(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v4 = sub_1DC9003B4(v1, a1);
  os_unfair_lock_unlock(v3);
  uint64_t result = swift_release();
  if (v4)
  {
    memset(v6, 0, sizeof(v6));
    char v7 = -1;
    swift_retain();
    v4((uint64_t)v6);
    sub_1DC884EC0((uint64_t)v4);
    return sub_1DC884EC0((uint64_t)v4);
  }
  return result;
}

uint64_t sub_1DC900258(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v4 = sub_1DC900560(v1, a1);
  os_unfair_lock_unlock(v3);
  uint64_t result = swift_release();
  if (v4)
  {
    v6[0] = 1;
    swift_retain();
    ((void (*)(char *))v4)(v6);
    sub_1DC884EC0((uint64_t)v4);
    return sub_1DC884EC0((uint64_t)v4);
  }
  return result;
}

uint64_t sub_1DC900308(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v4 = sub_1DC900690(v1, a1);
  os_unfair_lock_unlock(v3);
  uint64_t result = swift_release();
  if (v4)
  {
    uint64_t v6 = 0;
    swift_retain();
    ((void (*)(uint64_t *))v4)(&v6);
    sub_1DC884EC0((uint64_t)v4);
    return sub_1DC884EC0((uint64_t)v4);
  }
  return result;
}

uint64_t (*sub_1DC9003B4(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 73)) {
    return 0;
  }
  unint64_t v36 = (_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  unint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 72);
  uint64_t v37 = *(void **)(a1 + 24);
  sub_1DC901C58(v37, v9, v8, v7, v6, v5, v10, 0);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DC96146C(a2, v37);
  uint64_t v35 = v12;
  unint64_t v13 = v9;
  uint64_t v14 = v11;
  sub_1DC901CD4(v37, v13, v8, v7, v6, v5, v10, 0);
  if (v14)
  {
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v14;
    *(void *)(v22 + 24) = v35;
    uint64_t v23 = sub_1DC901DA4;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v22 = 0;
  }
  sub_1DC8BF58C(a2, v15, v16, v17, v18, v19, v20, v21, v34, v35);
  sub_1DC884EC0(v24);
  uint64_t v25 = *(void **)(a1 + 24);
  unint64_t v26 = *(void *)(a1 + 32);
  uint64_t v27 = *(void *)(a1 + 40);
  uint64_t v28 = *(void *)(a1 + 48);
  uint64_t v29 = *(void *)(a1 + 56);
  uint64_t v30 = *(void *)(a1 + 64);
  char v31 = *(unsigned char *)(a1 + 73);
  *(void *)(a1 + 24) = v37;
  *unint64_t v36 = 0u;
  v36[1] = 0u;
  char v32 = *(unsigned char *)(a1 + 72);
  *(_OWORD *)((char *)v36 + 26) = 0u;
  sub_1DC901CD4(v25, v26, v27, v28, v29, v30, v32, v31);
  if (!v14) {
    return 0;
  }
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v23;
  *(void *)(v33 + 24) = v22;
  return sub_1DC901D9C;
}

uint64_t (*sub_1DC900560(uint64_t a1, uint64_t a2))()
{
  if (*(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v22 = *(void *)(a1 + 24);
  sub_1DC902490(v22, 0);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DC96146C(a2, v22);
  uint64_t v6 = v5;
  sub_1DC90249C(v22, 0);
  if (v4)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v4;
    *(void *)(v14 + 24) = v6;
    uint64_t v15 = sub_1DC9024D8;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v14 = 0;
  }
  sub_1DC8BF694(a2, v7, v8, v9, v10, v11, v12, v13, v21, v22);
  sub_1DC884EC0(v16);
  uint64_t v17 = *(void *)(a1 + 24);
  char v18 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v23;
  *(unsigned char *)(a1 + 32) = 0;
  sub_1DC90249C(v17, v18);
  if (!v4) {
    return 0;
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v15;
  *(void *)(v19 + 24) = v14;
  return sub_1DC9024A8;
}

uint64_t (*sub_1DC900690(uint64_t a1, uint64_t a2))()
{
  if (*(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v22 = *(void **)(a1 + 24);
  sub_1DC902294(v22, 0);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DC96146C(a2, v22);
  uint64_t v6 = v5;
  sub_1DC9022A0(v22, 0);
  if (v4)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v4;
    *(void *)(v14 + 24) = v6;
    uint64_t v15 = sub_1DC9022DC;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v14 = 0;
  }
  sub_1DC8BF6A8(a2, v7, v8, v9, v10, v11, v12, v13, v21, (uint64_t)v22);
  sub_1DC884EC0(v16);
  uint64_t v17 = *(void **)(a1 + 24);
  char v18 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v23;
  *(unsigned char *)(a1 + 32) = 0;
  sub_1DC9022A0(v17, v18);
  if (!v4) {
    return 0;
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v15;
  *(void *)(v19 + 24) = v14;
  return sub_1DC9022AC;
}

uint64_t sub_1DC9007C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1DC9007E4, 0, 0);
}

uint64_t sub_1DC9007E4()
{
  sub_1DC8867A8();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  sub_1DC87E988(&qword_1EAA9FA60);
  sub_1DC902A64();
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9008C8;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x1F41880D8](v4, 0, 0, 0x65756C6176, 0xE500000000000000, sub_1DC901DAC, v1);
}

uint64_t sub_1DC9008C8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v3();
}

uint64_t sub_1DC9009A4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1DC9009C4, 0, 0);
}

uint64_t sub_1DC9009C4()
{
  sub_1DC886900();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  sub_1DC87E988(&qword_1EAA9FAE0);
  *uint64_t v2 = v0;
  v2[1] = sub_1DC900A9C;
  uint64_t v3 = sub_1DC902A28();
  return MEMORY[0x1F41880D8](v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1DC900A9C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = v1;
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v0;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(unsigned __int8 *)(v2 + 48);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  return v7(v6);
}

uint64_t sub_1DC900B80(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return MEMORY[0x1F4188298](sub_1DC900BA0, 0, 0);
}

uint64_t sub_1DC900BA0()
{
  sub_1DC886900();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  sub_1DC87E988(&qword_1EAA9FAA0);
  *uint64_t v2 = v0;
  v2[1] = sub_1DC900C78;
  uint64_t v3 = sub_1DC902A28();
  return MEMORY[0x1F41880D8](v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1DC900C78()
{
  sub_1DC886900();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 8);
  return v5(v4);
}

uint64_t sub_1DC900DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(os_unfair_lock_s **)(*(void *)(a2 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  uint64_t v15 = a3;
  sub_1DC901028(a2, a3, a1, (uint64_t)&v16);
  uint64_t v7 = v16;
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  uint64_t v12 = v20;
  uint64_t v11 = v21;
  int v13 = v22;
  os_unfair_lock_unlock(v6);
  swift_release();
  if (v13 == 255)
  {
    uint64_t result = sub_1DCB87F08();
    if (result) {
      return sub_1DC90019C(v15);
    }
  }
  else
  {
    uint64_t v16 = v7;
    uint64_t v17 = v8;
    uint64_t v18 = v9;
    uint64_t v19 = v10;
    uint64_t v20 = v12;
    uint64_t v21 = v11;
    unsigned __int8 v22 = v13;
    sub_1DC87E988(&qword_1EAA9FA68);
    return sub_1DCB87DF8();
  }
  return result;
}

uint64_t sub_1DC900EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(os_unfair_lock_s **)(*(void *)(a2 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  char v7 = sub_1DC901300(a2, a3, a1);
  os_unfair_lock_unlock(v6);
  swift_release();
  if (v7)
  {
    uint64_t result = sub_1DCB87F08();
    if (result) {
      return sub_1DC900258(a3);
    }
  }
  else
  {
    sub_1DC87E988(&qword_1EAA9FAF0);
    return sub_1DCB87DF8();
  }
  return result;
}

uint64_t sub_1DC900F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(os_unfair_lock_s **)(*(void *)(a2 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  char v7 = sub_1DC901560(a2, a3, a1);
  os_unfair_lock_unlock(v6);
  swift_release();
  if (v7)
  {
    sub_1DC87E988(&qword_1EAA9FAB0);
    return sub_1DCB87DF8();
  }
  else
  {
    uint64_t result = sub_1DCB87F08();
    if (result) {
      return sub_1DC900308(a3);
    }
  }
  return result;
}

void sub_1DC901028(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v7 = sub_1DC87E988(&qword_1EAA9FA68);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = sub_1DCB86BF8();
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(a1 + 24);
  if (*(unsigned char *)(a1 + 73) == 1)
  {
    char v16 = *(unsigned char *)(a1 + 72);
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v17 = *(void *)(a1 + 64);
    uint64_t v20 = *(void *)(a1 + 40);
    uint64_t v19 = *(void *)(a1 + 48);
    unint64_t v21 = *(void *)(a1 + 32);
    char v22 = v16 & 1;
    sub_1DC901C68(v15, v21, v20, v19, v18, v17, v16 & 1);
  }
  else
  {
    uint64_t v37 = v11;
    uint64_t v38 = (_OWORD *)(a1 + 32);
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v24 = v39;
    uint64_t v39 = v12;
    v23(v14, v24, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
    unint64_t v25 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v26 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v26 + v25, (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    int64_t v40 = v15;
    sub_1DC8BFECC();
    uint64_t v27 = v40;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v37);
    uint64_t v28 = *(void **)(a1 + 24);
    unint64_t v29 = *(void *)(a1 + 32);
    uint64_t v30 = *(void *)(a1 + 40);
    uint64_t v31 = *(void *)(a1 + 48);
    uint64_t v32 = *(void *)(a1 + 56);
    uint64_t v33 = *(void *)(a1 + 64);
    char v34 = *(unsigned char *)(a1 + 73);
    *(void *)(a1 + 24) = v27;
    uint64_t v35 = v38;
    *uint64_t v38 = 0u;
    v35[1] = 0u;
    char v36 = *(unsigned char *)(a1 + 72);
    *(_OWORD *)((char *)v35 + 26) = 0u;
    sub_1DC901CD4(v28, v29, v30, v31, v32, v33, v36, v34);
    uint64_t v15 = 0;
    unint64_t v21 = 0;
    uint64_t v20 = 0;
    uint64_t v19 = 0;
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    char v22 = -1;
  }
  *(void *)a4 = v15;
  *(void *)(a4 + 8) = v21;
  *(void *)(a4 + 16) = v20;
  *(void *)(a4 + 24) = v19;
  *(void *)(a4 + 32) = v18;
  *(void *)(a4 + 40) = v17;
  *(unsigned char *)(a4 + 48) = v22;
}

uint64_t sub_1DC901300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1DC87E988(&qword_1EAA9FAF0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = sub_1DCB86BF8();
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *(unsigned __int8 *)(a1 + 32);
  if ((v15 & 1) == 0)
  {
    uint64_t v27 = v3;
    uint64_t v16 = *(void *)(a1 + 24);
    int v26 = v15;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v24 = v12;
    uint64_t v25 = v11;
    v17(v14, a2, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
    unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v18, (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = v16;
    sub_1DC8BFFF0();
    uint64_t v20 = v28;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v25);
    uint64_t v21 = *(void *)(a1 + 24);
    char v22 = *(unsigned char *)(a1 + 32);
    *(void *)(a1 + 24) = v20;
    *(unsigned char *)(a1 + 32) = 0;
    sub_1DC90249C(v21, v22);
    int v15 = v26;
  }
  return v15 ^ 1u;
}

void *sub_1DC901560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a3;
  uint64_t v6 = sub_1DC87E988(&qword_1EAA9FAB0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = sub_1DCB86BF8();
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(a1 + 24);
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    id v15 = v14;
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v24 = v11;
    uint64_t v25 = v10;
    v16(v13, a2, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v6);
    uint64_t v17 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v26 = v3;
    uint64_t v18 = swift_allocObject() + ((v17 + 16) & ~v17);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v18, (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = v14;
    sub_1DC8C013C();
    uint64_t v19 = v27;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v25);
    uint64_t v20 = *(void **)(a1 + 24);
    char v21 = *(unsigned char *)(a1 + 32);
    *(void *)(a1 + 24) = v19;
    *(unsigned char *)(a1 + 32) = 0;
    sub_1DC9022A0(v20, v21);
    return 0;
  }
  return v14;
}

uint64_t sub_1DC9017CC(uint64_t a1)
{
  sub_1DC901EB8(a1, (uint64_t)v3, &qword_1EAA9FA60);
  sub_1DC901E60(a1);
  sub_1DC87E988(&qword_1EAA9FA68);
  return sub_1DCB87DF8();
}

uint64_t sub_1DC901828()
{
  return sub_1DCB87DF8();
}

uint64_t sub_1DC901870(void *a1)
{
  id v1 = a1;
  sub_1DC87E988(&qword_1EAA9FAB0);
  return sub_1DCB87DF8();
}

uint64_t sub_1DC9018B8()
{
  sub_1DC87E988(&qword_1EAA9F9D0);
  sub_1DC9029D4();
  swift_unknownObjectRelease();
  uint64_t v0 = sub_1DC902A90();
  v1(v0);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC90196C()
{
  sub_1DC88688C();
  uint64_t v0 = sub_1DC87E988(&qword_1EAA9F9D0);
  sub_1DC89D568(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC886800(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC8D78C0;
  sub_1DC902A74();
  return sub_1DC8FF524(v4, v5, v6, v7, v8);
}

uint64_t sub_1DC901A64(uint64_t a1, uint64_t *a2)
{
  sub_1DC87E988(a2);
  sub_1DC88819C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1DC901AB8()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC886898();
  return v4(v3);
}

uint64_t sub_1DC901B54()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC886898();
  return sub_1DC9007C0(v3, v4, v5);
}

uint64_t sub_1DC901BE4()
{
  return sub_1DC90019C(*(void *)(v0 + 24));
}

uint64_t sub_1DC901C0C(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  char v2 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = v2;
  return a2(v5);
}

id sub_1DC901C58(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  if (a8) {
    return sub_1DC901C68(a1, a2, a3, a4, a5, a6, a7 & 1);
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

id sub_1DC901C68(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    return a1;
  }
  else
  {
    sub_1DC8B9C40((uint64_t)a1, a2);
    return (id)sub_1DC884F60(a3);
  }
}

void sub_1DC901CD4(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  if (a8) {
    sub_1DC901CE4(a1, a2, a3, a4, a5, a6, a7 & 1);
  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1DC901CE4(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
  }
  else
  {
    sub_1DC88668C((uint64_t)a1, a2);
    sub_1DC8866A0(a3);
  }
}

uint64_t sub_1DC901D50(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  char v2 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = v2;
  return a2(v5);
}

uint64_t sub_1DC901D9C(uint64_t a1)
{
  return sub_1DC901D50(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_1DC901DA4(uint64_t a1)
{
  return sub_1DC901C0C(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_1DC901DAC(uint64_t a1)
{
  return sub_1DC900DA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DC901DB4(uint64_t a1)
{
  sub_1DC901EB8(a1, (uint64_t)v2, &qword_1EAA9FA60);
  return sub_1DC9017CC((uint64_t)v2);
}

uint64_t sub_1DC901E00()
{
  return sub_1DC90251C(&qword_1EAA9FA68);
}

uint64_t sub_1DC901E0C()
{
  uint64_t v0 = sub_1DC87E988(&qword_1EAA9FA68);
  sub_1DC8E77E0(v0);
  uint64_t v1 = sub_1DC902A10();

  return sub_1DC901DB4(v1);
}

uint64_t sub_1DC901E60(uint64_t a1)
{
  return a1;
}

id sub_1DC901E9C(id result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255) {
    return sub_1DC901C68(result, a2, a3, a4, a5, a6, a7 & 1);
  }
  return result;
}

uint64_t sub_1DC901EB8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1DC87E988(a3);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1DC901F14(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_1DC901F58()
{
  unint64_t result = qword_1EAA9E778;
  if (!qword_1EAA9E778)
  {
    sub_1DCB86BF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9E778);
  }
  return result;
}

uint64_t sub_1DC901FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  char v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *char v6 = v3;
  v6[1] = sub_1DC902048;
  return sub_1DC9009A4(a2, a3);
}

uint64_t sub_1DC902048()
{
  sub_1DC886900();
  char v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *char v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  void *v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(unsigned char **)(v5 + 16) = v3 & 1;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1DC902128()
{
  return sub_1DC901828();
}

uint64_t sub_1DC902130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  char v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *char v6 = v3;
  v6[1] = sub_1DC8EFD70;
  return sub_1DC900B80(a2, a3);
}

uint64_t sub_1DC9021D0()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC886898();
  return v4(v3);
}

uint64_t sub_1DC90226C()
{
  return sub_1DC900308(*(void *)(v0 + 24));
}

id sub_1DC902294(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_1DC9022A0(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DC9022AC()
{
  sub_1DC902AD0();
  return v0();
}

uint64_t sub_1DC9022DC()
{
  sub_1DC902AD0();
  return v0();
}

uint64_t sub_1DC90230C(uint64_t a1)
{
  return sub_1DC900F70(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DC902314(void **a1)
{
  return sub_1DC901870(*a1);
}

uint64_t sub_1DC90231C()
{
  return sub_1DC90251C(&qword_1EAA9FAB0);
}

uint64_t sub_1DC902328()
{
  uint64_t v0 = sub_1DC87E988(&qword_1EAA9FAB0);
  sub_1DC8E77E0(v0);
  uint64_t v1 = (void **)sub_1DC902A10();

  return sub_1DC902314(v1);
}

uint64_t sub_1DC90237C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC9023CC()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC886898();
  return v4(v3);
}

uint64_t sub_1DC902468()
{
  return sub_1DC900258(*(void *)(v0 + 24));
}

uint64_t sub_1DC902490(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DC90249C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC9024A8()
{
  sub_1DC902AE4();
  return v0();
}

uint64_t sub_1DC9024D8()
{
  sub_1DC902AE4();
  return v0();
}

uint64_t sub_1DC902508(uint64_t a1)
{
  return sub_1DC900EA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DC902510()
{
  return sub_1DC90251C(&qword_1EAA9FAF0);
}

uint64_t sub_1DC90251C(uint64_t *a1)
{
  sub_1DC87E988(a1);
  sub_1DC88819C();
  (*(void (**)(unint64_t))(v2 + 8))(v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));

  return swift_deallocObject();
}

uint64_t sub_1DC9025A0()
{
  uint64_t v0 = sub_1DC87E988(&qword_1EAA9FAF0);
  sub_1DC8E77E0(v0);
  sub_1DC902A10();

  return sub_1DC902128();
}

uint64_t sub_1DC9025F4()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_1DC90262C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1DC8FBB10(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_1DC902634()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 60 != 15) {
    sub_1DC881920(*(void *)(v0 + 72), v1);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9026A4(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v13 = v1[2];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)sub_1DC886800(v9);
  *uint64_t v10 = v11;
  v10[1] = sub_1DC8D78C0;
  return sub_1DC8FE010(a1, v13, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1DC9027A4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9027E4()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC8BA950();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DC886800(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC902A74();
  sub_1DC8BA86C();
  return sub_1DC8FBFA8();
}

unsigned char *sub_1DC902880(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC90291CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for XPCProxyUtils.DomainError()
{
}

unint64_t sub_1DC902954()
{
  unint64_t result = qword_1EAA9FB10[0];
  if (!qword_1EAA9FB10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAA9FB10);
  }
  return result;
}

uint64_t sub_1DC9029C0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC9029F4()
{
  return v0;
}

uint64_t sub_1DC902A10()
{
  return v0;
}

uint64_t sub_1DC902A28()
{
  return v0;
}

uint64_t sub_1DC902A50()
{
  return v0;
}

uint64_t sub_1DC902A90()
{
  return v0 + v1;
}

uint64_t sub_1DC902AA8(uint64_t result)
{
  return sub_1DC8866A0(result);
}

uint64_t sub_1DC902AF8()
{
  return sub_1DC884F60(v0);
}

uint64_t sub_1DC902B18()
{
  return sub_1DC884F60(v0);
}

uint64_t sub_1DC902B38()
{
  return sub_1DC8866A0(v0);
}

uint64_t sub_1DC902B58()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC902C0C(uint64_t a1, const void *a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1DC902C5C(a1, a2);
  return v4;
}

uint64_t *sub_1DC902C5C(uint64_t a1, const void *a2)
{
  uint64_t v5 = *v2;
  *((_OWORD *)v2 + 2) = 0u;
  v2[6] = 0;
  *((_OWORD *)v2 + 1) = 0u;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  swift_beginAccess();
  sub_1DC9046E8((uint64_t)v13, (uint64_t)(v2 + 2));
  swift_endAccess();
  sub_1DC905D68();
  uint64_t v6 = *(void *)(v5 + 88);
  sub_1DC905D54();
  uint64_t v8 = v7;
  (*(void (**)(void))(v7 + 16))();
  type metadata accessor for SafeLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_DWORD *)swift_slowAlloc();
  *uint64_t v10 = 0;
  *(void *)(v9 + 16) = v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v6);
  v2[7] = v9;
  sub_1DC905D68();
  memcpy((char *)v2 + *(void *)(v11 + 136), a2, 0xA0uLL);
  return v2;
}

uint64_t sub_1DC902D9C(uint64_t a1)
{
  sub_1DC89F6D8();
  uint64_t v4 = v3;
  uint64_t v5 = *(os_unfair_lock_s **)(v1[7] + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1DC902EF8((uint64_t)v1, a1);
  os_unfair_lock_unlock(v5);
  swift_release();
  uint64_t v6 = *(void *)(*v1 + 136);
  uint64_t v7 = *(void (**)(void *))((char *)v1 + v6);
  uint64_t v8 = *(void (**)(void *))((char *)v1 + v6 + 16);
  uint64_t v9 = sub_1DC902F64((uint64_t)v1 + *(void *)(*v1 + 128), v4[10], v4[11], v4[12], v4[13]);
  v11[3] = v4;
  v11[4] = swift_getWitnessTable();
  v11[0] = v1;
  swift_retain();
  if (v7) {
    v7(v11);
  }
  ((void (*)(void *))v9)(v11);
  if (v8) {
    v8(v11);
  }
  sub_1DC8818D0((uint64_t)v11);
  return swift_release();
}

uint64_t sub_1DC902EF8(uint64_t a1, uint64_t a2)
{
  sub_1DC8B9960(a2, (uint64_t)v4);
  swift_beginAccess();
  sub_1DC9046E8((uint64_t)v4, a1 + 16);
  return swift_endAccess();
}

uint64_t (*sub_1DC902F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a2;
  *((void *)v13 + 3) = a3;
  *((void *)v13 + 4) = a4;
  *((void *)v13 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, a3);
  return sub_1DC904850;
}

uint64_t sub_1DC903094(uint64_t a1)
{
  sub_1DC8FB9A8();
  sub_1DC8FB9A8();
  uint64_t v3 = *(void *)(v2 + 80);
  sub_1DC8FB9A8();
  uint64_t v5 = *(void *)(v4 + 88);
  sub_1DC8FB9A8();
  sub_1DC9031E0(v8, v3, v5, *(void *)(v6 + 96), *(void *)(v7 + 104));
  swift_getAssociatedTypeWitness();
  uint64_t v9 = (void (*)(uint64_t))sub_1DC905D74();
  sub_1DC937B20(v9, v10, v11, v12, v13, v14, a1);
  swift_release();
  return v16;
}

uint64_t (*sub_1DC9031E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a2;
  *((void *)v13 + 3) = a3;
  *((void *)v13 + 4) = a4;
  *((void *)v13 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, a3);
  return sub_1DC904784;
}

uint64_t sub_1DC903310(uint64_t a1)
{
  sub_1DC8FB9A8();
  sub_1DC8FB9A8();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DCB871D8();
  uint64_t v3 = (void (*)(uint64_t))sub_1DC905D74();
  return sub_1DC937B20(v3, v4, v5, v6, v7, v1, a1);
}

uint64_t sub_1DC903428(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(a2 + 56) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1DC9034F4(a2);
  os_unfair_lock_unlock(v3);
  swift_release();
  return sub_1DCB87198();
}

uint64_t sub_1DC9034F4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  swift_beginAccess();
  sub_1DC9046E8((uint64_t)v3, v1);
  return swift_endAccess();
}

uint64_t sub_1DC903558()
{
  sub_1DC905D68();
  uint64_t v2 = v0 + *(void *)(v1 + 136);
  uint64_t v3 = *(void (**)(uint64_t *))(v2 + 96);
  uint64_t v4 = *(uint64_t (**)(uint64_t *))(v2 + 112);
  uint64_t v7 = v5;
  if (v3) {
    v3(&v7);
  }
  uint64_t result = sub_1DC9035D8((uint64_t)&v7, v0);
  if (v4) {
    return v4(&v7);
  }
  return result;
}

uint64_t sub_1DC9035D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(a2 + 56) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1DC9036BC(a2, (uint64_t)v5);
  sub_1DC904890((uint64_t)v5, (uint64_t)v7);
  os_unfair_lock_unlock(v3);
  swift_release();
  sub_1DC9048F8((uint64_t)v7, (uint64_t)v5);
  if (v6)
  {
    sub_1DC881A8C(v5, v6);
    sub_1DCB87248();
    sub_1DC904960((uint64_t)v7);
    return sub_1DC8818D0((uint64_t)v5);
  }
  else
  {
    sub_1DC904960((uint64_t)v7);
    return sub_1DC904960((uint64_t)v5);
  }
}

uint64_t sub_1DC9036BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  return sub_1DC9048F8(v3, a2);
}

uint64_t sub_1DC903718()
{
  sub_1DC905D68();
  uint64_t v2 = v0 + *(void *)(v1 + 136);
  uint64_t v3 = *(void (**)(void))(v2 + 128);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v2 + 144);
  if (v3) {
    v3();
  }
  uint64_t result = sub_1DC903784(v0);
  if (v4) {
    return v4(result);
  }
  return result;
}

uint64_t sub_1DC903784(uint64_t a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(*(void *)(a1 + 56) + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1DC903860(a1, (uint64_t)v4);
  sub_1DC904890((uint64_t)v4, (uint64_t)v6);
  os_unfair_lock_unlock(v2);
  swift_release();
  sub_1DC9048F8((uint64_t)v6, (uint64_t)v4);
  if (v5)
  {
    sub_1DC881A8C(v4, v5);
    sub_1DCB871C8();
    sub_1DC904960((uint64_t)v6);
    return sub_1DC8818D0((uint64_t)v4);
  }
  else
  {
    sub_1DC904960((uint64_t)v6);
    return sub_1DC904960((uint64_t)v4);
  }
}

uint64_t sub_1DC903860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  sub_1DC9048F8(v3, a2);
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_beginAccess();
  sub_1DC9046E8((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t *sub_1DC9038F0()
{
  uint64_t v1 = *v0;
  sub_1DC904960((uint64_t)(v0 + 2));
  swift_release();
  sub_1DC905D68();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(v2 + 128));
  memcpy(v4, (char *)v0 + *(void *)(*v0 + 136), sizeof(v4));
  sub_1DC9049C0(v4);
  return v0;
}

uint64_t sub_1DC9039A8()
{
  sub_1DC9038F0();
  sub_1DC89F6D8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SnoopPublisher.Instance()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC9039F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

void *sub_1DC903A00(void *result)
{
  uint64_t v1 = result;
  if (*result) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[2]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[4]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[6]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[8]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[10]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[12]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[14]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[16]) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[18])
  {
    return (void *)swift_release();
  }
  return result;
}

void *sub_1DC903AD8(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  uint64_t v9 = a2[6];
  if (v9)
  {
    uint64_t v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  uint64_t v11 = a2[8];
  if (v11)
  {
    uint64_t v12 = a2[9];
    a1[8] = v11;
    a1[9] = v12;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  }
  uint64_t v13 = a2[10];
  if (v13)
  {
    uint64_t v14 = a2[11];
    a1[10] = v13;
    a1[11] = v14;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  }
  uint64_t v15 = a2[12];
  if (v15)
  {
    uint64_t v16 = a2[13];
    a1[12] = v15;
    a1[13] = v16;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  }
  uint64_t v17 = a2[14];
  if (v17)
  {
    uint64_t v18 = a2[15];
    a1[14] = v17;
    a1[15] = v18;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  }
  uint64_t v19 = a2[16];
  if (v19)
  {
    uint64_t v20 = a2[17];
    a1[16] = v19;
    a1[17] = v20;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
  }
  uint64_t v21 = a2[18];
  if (v21)
  {
    uint64_t v22 = a2[19];
    a1[18] = v21;
    a1[19] = v22;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  }
  return a1;
}

void *sub_1DC903C88(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (a1[8])
  {
    if (v16)
    {
      uint64_t v17 = a2[9];
      a1[8] = v16;
      a1[9] = v17;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = a2[9];
    a1[8] = v16;
    a1[9] = v18;
    swift_retain();
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  uint64_t v19 = a2[10];
  if (a1[10])
  {
    if (v19)
    {
      uint64_t v20 = a2[11];
      a1[10] = v19;
      a1[11] = v20;
      swift_retain();
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v19)
  {
    uint64_t v21 = a2[11];
    a1[10] = v19;
    a1[11] = v21;
    swift_retain();
    goto LABEL_43;
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_43:
  uint64_t v22 = a2[12];
  if (a1[12])
  {
    if (v22)
    {
      uint64_t v23 = a2[13];
      a1[12] = v22;
      a1[13] = v23;
      swift_retain();
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v22)
  {
    uint64_t v24 = a2[13];
    a1[12] = v22;
    a1[13] = v24;
    swift_retain();
    goto LABEL_50;
  }
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
LABEL_50:
  uint64_t v25 = a2[14];
  if (a1[14])
  {
    if (v25)
    {
      uint64_t v26 = a2[15];
      a1[14] = v25;
      a1[15] = v26;
      swift_retain();
      swift_release();
      goto LABEL_57;
    }
    swift_release();
  }
  else if (v25)
  {
    uint64_t v27 = a2[15];
    a1[14] = v25;
    a1[15] = v27;
    swift_retain();
    goto LABEL_57;
  }
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_57:
  uint64_t v28 = a2[16];
  if (a1[16])
  {
    if (v28)
    {
      uint64_t v29 = a2[17];
      a1[16] = v28;
      a1[17] = v29;
      swift_retain();
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v28)
  {
    uint64_t v30 = a2[17];
    a1[16] = v28;
    a1[17] = v30;
    swift_retain();
    goto LABEL_64;
  }
  *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
LABEL_64:
  uint64_t v31 = a2[18];
  if (!a1[18])
  {
    if (v31)
    {
      uint64_t v33 = a2[19];
      a1[18] = v31;
      a1[19] = v33;
      swift_retain();
      return a1;
    }
LABEL_70:
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_70;
  }
  uint64_t v32 = a2[19];
  a1[18] = v31;
  a1[19] = v32;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1DC904020(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA0uLL);
}

void *sub_1DC904028(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (a1[8])
  {
    if (v16)
    {
      uint64_t v17 = a2[9];
      a1[8] = v16;
      a1[9] = v17;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = a2[9];
    a1[8] = v16;
    a1[9] = v18;
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  uint64_t v19 = a2[10];
  if (a1[10])
  {
    if (v19)
    {
      uint64_t v20 = a2[11];
      a1[10] = v19;
      a1[11] = v20;
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v19)
  {
    uint64_t v21 = a2[11];
    a1[10] = v19;
    a1[11] = v21;
    goto LABEL_43;
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_43:
  uint64_t v22 = a2[12];
  if (a1[12])
  {
    if (v22)
    {
      uint64_t v23 = a2[13];
      a1[12] = v22;
      a1[13] = v23;
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v22)
  {
    uint64_t v24 = a2[13];
    a1[12] = v22;
    a1[13] = v24;
    goto LABEL_50;
  }
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
LABEL_50:
  uint64_t v25 = a2[14];
  if (a1[14])
  {
    if (v25)
    {
      uint64_t v26 = a2[15];
      a1[14] = v25;
      a1[15] = v26;
      swift_release();
      goto LABEL_57;
    }
    swift_release();
  }
  else if (v25)
  {
    uint64_t v27 = a2[15];
    a1[14] = v25;
    a1[15] = v27;
    goto LABEL_57;
  }
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_57:
  uint64_t v28 = a2[16];
  if (a1[16])
  {
    if (v28)
    {
      uint64_t v29 = a2[17];
      a1[16] = v28;
      a1[17] = v29;
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v28)
  {
    uint64_t v30 = a2[17];
    a1[16] = v28;
    a1[17] = v30;
    goto LABEL_64;
  }
  *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
LABEL_64:
  uint64_t v31 = a2[18];
  if (!a1[18])
  {
    if (v31)
    {
      uint64_t v33 = a2[19];
      a1[18] = v31;
      a1[19] = v33;
      return a1;
    }
LABEL_70:
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_70;
  }
  uint64_t v32 = a2[19];
  a1[18] = v31;
  a1[19] = v32;
  swift_release();
  return a1;
}

uint64_t sub_1DC904348(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 160))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DC90439C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 160) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for SnoopPublisherHooks()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC904430(uint64_t a1)
{
  return sub_1DC902D9C(a1);
}

uint64_t sub_1DC904454(uint64_t a1)
{
  return sub_1DC903094(a1);
}

uint64_t sub_1DC904478(uint64_t a1)
{
  return sub_1DC903310(a1);
}

uint64_t sub_1DC90449C()
{
  return sub_1DC903558();
}

uint64_t sub_1DC9044C0()
{
  return sub_1DCB87098();
}

uint64_t sub_1DC9044E4()
{
  return sub_1DC903718();
}

uint64_t sub_1DC904508()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC904524()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC904540()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DC904560(uint64_t a1)
{
  return sub_1DC903428(a1, v1);
}

uint64_t sub_1DC904568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 + 24);
  __dst[0] = *(void *)(v11 + 16);
  __dst[1] = v13;
  __dst[2] = v12;
  __dst[3] = v14;
  type metadata accessor for SnoopPublisher.Instance();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  memcpy(__dst, (const void *)(v4 + *(int *)(a2 + 36)), sizeof(__dst));
  sub_1DC905C58(__dst);
  v16[1] = sub_1DC902C0C((uint64_t)v10, __dst);
  swift_getWitnessTable();
  sub_1DCB87388();
  return swift_release();
}

uint64_t sub_1DC9046D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC904568(a1, a4, a2);
}

uint64_t sub_1DC9046E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9FC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC904750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 48))();
  *a1 = result;
  return result;
}

uint64_t sub_1DC904784()
{
  return sub_1DCB871B8();
}

uint64_t sub_1DC9047C8()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1DC904850()
{
  return sub_1DCB871A8();
}

uint64_t sub_1DC904890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9FC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC9048F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9FC18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC904960(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(qword_1EAA9FC18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1DC9049C0(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[8];
  uint64_t v6 = a1[10];
  uint64_t v8 = a1[12];
  uint64_t v9 = a1[14];
  uint64_t v11 = a1[18];
  uint64_t v10 = a1[16];
  sub_1DC884EC0(*a1);
  sub_1DC884EC0(v2);
  sub_1DC884EC0(v3);
  sub_1DC884EC0(v4);
  sub_1DC884EC0(v5);
  sub_1DC884EC0(v6);
  sub_1DC884EC0(v8);
  sub_1DC884EC0(v9);
  sub_1DC884EC0(v10);
  sub_1DC884EC0(v11);
  return a1;
}

uint64_t sub_1DC904ABC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC904B54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 160 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (*v11)
    {
      uint64_t v12 = v11[1];
      *(void *)unint64_t v10 = *v11;
      *(void *)(v10 + 8) = v12;
      swift_retain();
    }
    else
    {
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
    }
    uint64_t v13 = v11[2];
    if (v13)
    {
      uint64_t v14 = v11[3];
      *(void *)(v10 + 16) = v13;
      *(void *)(v10 + 24) = v14;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 16) = *((_OWORD *)v11 + 1);
    }
    uint64_t v15 = v11[4];
    if (v15)
    {
      uint64_t v16 = v11[5];
      *(void *)(v10 + 32) = v15;
      *(void *)(v10 + 40) = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 32) = *((_OWORD *)v11 + 2);
    }
    uint64_t v17 = v11[6];
    if (v17)
    {
      uint64_t v18 = v11[7];
      *(void *)(v10 + 48) = v17;
      *(void *)(v10 + 56) = v18;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 48) = *((_OWORD *)v11 + 3);
    }
    uint64_t v19 = v11[8];
    if (v19)
    {
      uint64_t v20 = v11[9];
      *(void *)(v10 + 64) = v19;
      *(void *)(v10 + 72) = v20;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 64) = *((_OWORD *)v11 + 4);
    }
    uint64_t v21 = v11[10];
    if (v21)
    {
      uint64_t v22 = v11[11];
      *(void *)(v10 + 80) = v21;
      *(void *)(v10 + 88) = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 80) = *((_OWORD *)v11 + 5);
    }
    uint64_t v23 = v11[12];
    if (v23)
    {
      uint64_t v24 = v11[13];
      *(void *)(v10 + 96) = v23;
      *(void *)(v10 + 104) = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 96) = *((_OWORD *)v11 + 6);
    }
    uint64_t v25 = v11[14];
    if (v25)
    {
      uint64_t v26 = v11[15];
      *(void *)(v10 + 112) = v25;
      *(void *)(v10 + 120) = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 112) = *((_OWORD *)v11 + 7);
    }
    uint64_t v27 = v11[16];
    if (v27)
    {
      uint64_t v28 = v11[17];
      *(void *)(v10 + 128) = v27;
      *(void *)(v10 + 136) = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 128) = *((_OWORD *)v11 + 8);
    }
    uint64_t v29 = v11[18];
    if (!v29)
    {
      *(_OWORD *)(v10 + 144) = *((_OWORD *)v11 + 9);
      return v4;
    }
    uint64_t v30 = v11[19];
    *(void *)(v10 + 144) = v29;
    *(void *)(v10 + 152) = v30;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DC904DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  uint64_t result = (*(uint64_t (**)(void))v3)();
  uint64_t v5 = (void *)((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v5) {
    uint64_t result = swift_release();
  }
  if (v5[2]) {
    uint64_t result = swift_release();
  }
  if (v5[4]) {
    uint64_t result = swift_release();
  }
  if (v5[6]) {
    uint64_t result = swift_release();
  }
  if (v5[8]) {
    uint64_t result = swift_release();
  }
  if (v5[10]) {
    uint64_t result = swift_release();
  }
  if (v5[12]) {
    uint64_t result = swift_release();
  }
  if (v5[14]) {
    uint64_t result = swift_release();
  }
  if (v5[16]) {
    uint64_t result = swift_release();
  }
  if (v5[18])
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC904EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  if (*v8)
  {
    uint64_t v9 = v8[1];
    *int v7 = *v8;
    v7[1] = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)int v7 = *(_OWORD *)v8;
  }
  uint64_t v10 = v8[2];
  if (v10)
  {
    uint64_t v11 = v8[3];
    v7[2] = v10;
    v7[3] = v11;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
  }
  uint64_t v12 = v8[4];
  if (v12)
  {
    uint64_t v13 = v8[5];
    v7[4] = v12;
    v7[5] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
  }
  uint64_t v14 = v8[6];
  if (v14)
  {
    uint64_t v15 = v8[7];
    v7[6] = v14;
    v7[7] = v15;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
  }
  uint64_t v16 = v8[8];
  if (v16)
  {
    uint64_t v17 = v8[9];
    v7[8] = v16;
    v7[9] = v17;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
  }
  uint64_t v18 = v8[10];
  if (v18)
  {
    uint64_t v19 = v8[11];
    v7[10] = v18;
    v7[11] = v19;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
  }
  uint64_t v20 = v8[12];
  if (v20)
  {
    uint64_t v21 = v8[13];
    v7[12] = v20;
    v7[13] = v21;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 6) = *((_OWORD *)v8 + 6);
  }
  uint64_t v22 = v8[14];
  if (v22)
  {
    uint64_t v23 = v8[15];
    v7[14] = v22;
    v7[15] = v23;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 7) = *((_OWORD *)v8 + 7);
  }
  uint64_t v24 = v8[16];
  if (v24)
  {
    uint64_t v25 = v8[17];
    v7[16] = v24;
    v7[17] = v25;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 8) = *((_OWORD *)v8 + 8);
  }
  uint64_t v26 = v8[18];
  if (v26)
  {
    uint64_t v27 = v8[19];
    v7[18] = v26;
    v7[19] = v27;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
  }
  return a1;
}

uint64_t sub_1DC9050D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *v8;
  if (*v7)
  {
    if (v9)
    {
      uint64_t v10 = v8[1];
      *int v7 = v9;
      v7[1] = v10;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = v8[1];
    *int v7 = v9;
    v7[1] = v11;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)int v7 = *(_OWORD *)v8;
LABEL_8:
  uint64_t v12 = v8[2];
  if (v7[2])
  {
    if (v12)
    {
      uint64_t v13 = v8[3];
      v7[2] = v12;
      v7[3] = v13;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = v8[3];
    v7[2] = v12;
    v7[3] = v14;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
LABEL_15:
  uint64_t v15 = v8[4];
  if (v7[4])
  {
    if (v15)
    {
      uint64_t v16 = v8[5];
      v7[4] = v15;
      v7[5] = v16;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = v8[5];
    v7[4] = v15;
    v7[5] = v17;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
LABEL_22:
  uint64_t v18 = v8[6];
  if (v7[6])
  {
    if (v18)
    {
      uint64_t v19 = v8[7];
      v7[6] = v18;
      v7[7] = v19;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v18)
  {
    uint64_t v20 = v8[7];
    v7[6] = v18;
    v7[7] = v20;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
LABEL_29:
  uint64_t v21 = v8[8];
  if (v7[8])
  {
    if (v21)
    {
      uint64_t v22 = v8[9];
      v7[8] = v21;
      v7[9] = v22;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v21)
  {
    uint64_t v23 = v8[9];
    v7[8] = v21;
    v7[9] = v23;
    swift_retain();
    goto LABEL_36;
  }
  *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
LABEL_36:
  uint64_t v24 = v8[10];
  if (v7[10])
  {
    if (v24)
    {
      uint64_t v25 = v8[11];
      v7[10] = v24;
      v7[11] = v25;
      swift_retain();
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = v8[11];
    v7[10] = v24;
    v7[11] = v26;
    swift_retain();
    goto LABEL_43;
  }
  *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
LABEL_43:
  uint64_t v27 = v8[12];
  if (v7[12])
  {
    if (v27)
    {
      uint64_t v28 = v8[13];
      v7[12] = v27;
      v7[13] = v28;
      swift_retain();
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v27)
  {
    uint64_t v29 = v8[13];
    v7[12] = v27;
    v7[13] = v29;
    swift_retain();
    goto LABEL_50;
  }
  *((_OWORD *)v7 + 6) = *((_OWORD *)v8 + 6);
LABEL_50:
  uint64_t v30 = v8[14];
  if (v7[14])
  {
    if (v30)
    {
      uint64_t v31 = v8[15];
      v7[14] = v30;
      v7[15] = v31;
      swift_retain();
      swift_release();
      goto LABEL_57;
    }
    swift_release();
  }
  else if (v30)
  {
    uint64_t v32 = v8[15];
    v7[14] = v30;
    v7[15] = v32;
    swift_retain();
    goto LABEL_57;
  }
  *((_OWORD *)v7 + 7) = *((_OWORD *)v8 + 7);
LABEL_57:
  uint64_t v33 = v8[16];
  if (v7[16])
  {
    if (v33)
    {
      uint64_t v34 = v8[17];
      v7[16] = v33;
      v7[17] = v34;
      swift_retain();
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = v8[17];
    v7[16] = v33;
    v7[17] = v35;
    swift_retain();
    goto LABEL_64;
  }
  *((_OWORD *)v7 + 8) = *((_OWORD *)v8 + 8);
LABEL_64:
  uint64_t v36 = v8[18];
  if (!v7[18])
  {
    if (v36)
    {
      uint64_t v38 = v8[19];
      v7[18] = v36;
      v7[19] = v38;
      swift_retain();
      return a1;
    }
LABEL_70:
    *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
    return a1;
  }
  if (!v36)
  {
    swift_release();
    goto LABEL_70;
  }
  uint64_t v37 = v8[19];
  v7[18] = v36;
  v7[19] = v37;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC9054BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  memcpy((void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (const void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8), 0xA0uLL);
  return a1;
}

uint64_t sub_1DC905538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *v8;
  if (*v7)
  {
    if (v9)
    {
      uint64_t v10 = v8[1];
      *int v7 = v9;
      v7[1] = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = v8[1];
    *int v7 = v9;
    v7[1] = v11;
    goto LABEL_8;
  }
  *(_OWORD *)int v7 = *(_OWORD *)v8;
LABEL_8:
  uint64_t v12 = v8[2];
  if (v7[2])
  {
    if (v12)
    {
      uint64_t v13 = v8[3];
      v7[2] = v12;
      v7[3] = v13;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = v8[3];
    v7[2] = v12;
    v7[3] = v14;
    goto LABEL_15;
  }
  *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
LABEL_15:
  uint64_t v15 = v8[4];
  if (v7[4])
  {
    if (v15)
    {
      uint64_t v16 = v8[5];
      v7[4] = v15;
      v7[5] = v16;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = v8[5];
    v7[4] = v15;
    v7[5] = v17;
    goto LABEL_22;
  }
  *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
LABEL_22:
  uint64_t v18 = v8[6];
  if (v7[6])
  {
    if (v18)
    {
      uint64_t v19 = v8[7];
      v7[6] = v18;
      v7[7] = v19;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v18)
  {
    uint64_t v20 = v8[7];
    v7[6] = v18;
    v7[7] = v20;
    goto LABEL_29;
  }
  *((_OWORD *)v7 + 3) = *((_OWORD *)v8 + 3);
LABEL_29:
  uint64_t v21 = v8[8];
  if (v7[8])
  {
    if (v21)
    {
      uint64_t v22 = v8[9];
      v7[8] = v21;
      v7[9] = v22;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v21)
  {
    uint64_t v23 = v8[9];
    v7[8] = v21;
    v7[9] = v23;
    goto LABEL_36;
  }
  *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
LABEL_36:
  uint64_t v24 = v8[10];
  if (v7[10])
  {
    if (v24)
    {
      uint64_t v25 = v8[11];
      v7[10] = v24;
      v7[11] = v25;
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = v8[11];
    v7[10] = v24;
    v7[11] = v26;
    goto LABEL_43;
  }
  *((_OWORD *)v7 + 5) = *((_OWORD *)v8 + 5);
LABEL_43:
  uint64_t v27 = v8[12];
  if (v7[12])
  {
    if (v27)
    {
      uint64_t v28 = v8[13];
      v7[12] = v27;
      v7[13] = v28;
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v27)
  {
    uint64_t v29 = v8[13];
    v7[12] = v27;
    v7[13] = v29;
    goto LABEL_50;
  }
  *((_OWORD *)v7 + 6) = *((_OWORD *)v8 + 6);
LABEL_50:
  uint64_t v30 = v8[14];
  if (v7[14])
  {
    if (v30)
    {
      uint64_t v31 = v8[15];
      v7[14] = v30;
      v7[15] = v31;
      swift_release();
      goto LABEL_57;
    }
    swift_release();
  }
  else if (v30)
  {
    uint64_t v32 = v8[15];
    v7[14] = v30;
    v7[15] = v32;
    goto LABEL_57;
  }
  *((_OWORD *)v7 + 7) = *((_OWORD *)v8 + 7);
LABEL_57:
  uint64_t v33 = v8[16];
  if (v7[16])
  {
    if (v33)
    {
      uint64_t v34 = v8[17];
      v7[16] = v33;
      v7[17] = v34;
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = v8[17];
    v7[16] = v33;
    v7[17] = v35;
    goto LABEL_64;
  }
  *((_OWORD *)v7 + 8) = *((_OWORD *)v8 + 8);
LABEL_64:
  uint64_t v36 = v8[18];
  if (!v7[18])
  {
    if (v36)
    {
      uint64_t v38 = v8[19];
      v7[18] = v36;
      v7[19] = v38;
      return a1;
    }
LABEL_70:
    *((_OWORD *)v7 + 9) = *((_OWORD *)v8 + 9);
    return a1;
  }
  if (!v36)
  {
    swift_release();
    goto LABEL_70;
  }
  uint64_t v37 = v8[19];
  v7[18] = v36;
  v7[19] = v37;
  swift_release();
  return a1;
}

uint64_t sub_1DC9058A4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 160;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC9059E8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        int v17 = v7 + (v10 | v16);
        return (v17 + 1);
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v18 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  int v17 = v18 - 1;
  if (v17 < 0) {
    int v17 = -1;
  }
  return (v17 + 1);
}

void sub_1DC9059FC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 160;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFF60) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFF60) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFF60)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 160);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1DC905BFCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFE)
        {
          unint64_t v17 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0x7FFFFFFE)
          {
            *(void *)(v17 + 152) = 0;
            uint64_t v18 = (a2 - 0x7FFFFFFF);
            *(_OWORD *)(v17 + 136) = 0u;
            *(_OWORD *)(v17 + 120) = 0u;
            *(_OWORD *)(v17 + 104) = 0u;
            *(_OWORD *)(v17 + 88) = 0u;
            *(_OWORD *)(v17 + 72) = 0u;
            *(_OWORD *)(v17 + 56) = 0u;
            *(_OWORD *)(v17 + 40) = 0u;
            *(_OWORD *)(v17 + 24) = 0u;
            *(_OWORD *)(v17 + 8) = 0u;
          }
          else
          {
            uint64_t v18 = a2;
          }
          *(void *)unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SnoopPublisher()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC905C3C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t *sub_1DC905C58(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[8];
  uint64_t v6 = a1[10];
  uint64_t v8 = a1[12];
  uint64_t v9 = a1[14];
  uint64_t v11 = a1[18];
  uint64_t v10 = a1[16];
  sub_1DC8BA198(*a1);
  sub_1DC8BA198(v2);
  sub_1DC8BA198(v3);
  sub_1DC8BA198(v4);
  sub_1DC8BA198(v5);
  sub_1DC8BA198(v6);
  sub_1DC8BA198(v8);
  sub_1DC8BA198(v9);
  sub_1DC8BA198(v10);
  sub_1DC8BA198(v11);
  return a1;
}

uint64_t sub_1DC905D74()
{
  return v0;
}

void *sub_1DC905D88(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  return sub_1DC905DD0(__dst);
}

void *sub_1DC905DD0(void *a1)
{
  v2[2] = &v3;
  return sub_1DC9073F4(a1, (int *)sub_1DC88CB08, v2);
}

void sub_1DC905E14()
{
}

void sub_1DC905EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1DC88D538();
  uint64_t v29 = v28;
  uint64_t v31 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v32);
  uint64_t v33 = (char *)v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
  sub_1DC909E58();
  sub_1DC8E7D10();
  v37();
  unint64_t v38 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v25;
  *(void *)(v39 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v39 + v38, v33, v25);
  sub_1DC909E58();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = sub_1DC88D624();
  uint64_t v42 = sub_1DC88D624();
  uint64_t v43 = sub_1DC88D624();
  v47[2] = AssociatedTypeWitness;
  v47[3] = v41;
  v47[4] = v42;
  v47[5] = v43;
  uint64_t v44 = type metadata accessor for SharedSoundPrintA.Configuration();
  uint64_t v45 = type metadata accessor for SharedSoundPrintA.Instance();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DCACBE9C(v27, v36, (uint64_t)sub_1DC909B08, v39, v44, v45, WitnessTable, (uint64_t)&a10);
  swift_release();
  swift_release();
  sub_1DC88D674();
}

uint64_t sub_1DC9060E4()
{
  return sub_1DCB891B8();
}

BOOL sub_1DC90613C(uint64_t a1, uint64_t a2)
{
  if ((sub_1DCB878C8() & 1) != 0
    && (uint64_t v4 = type metadata accessor for SharedSoundPrintA.Configuration(),
        *(void *)(a1 + *(int *)(v4 + 52)) == *(void *)(a2 + *(int *)(v4 + 52))))
  {
    return *(void *)(a1 + *(int *)(v4 + 56)) == *(void *)(a2 + *(int *)(v4 + 56));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1DC9061D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001DCB90540 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DCB925C0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB925E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1DC906320(char a1)
{
  if (!a1) {
    return 0xD000000000000018;
  }
  if (a1 == 1) {
    return 0xD000000000000016;
  }
  return 0xD000000000000013;
}

void sub_1DC90637C()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v3 + 32);
  long long v12 = *(_OWORD *)(v3 + 16);
  long long v13 = v4;
  v11[1] = v3;
  long long v14 = v12;
  long long v15 = v4;
  type metadata accessor for SharedSoundPrintA.Configuration.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v7 = v6;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v11 - v9;
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB892B8();
  LOBYTE(v14) = 0;
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC909DD8(1);
    sub_1DC909DD8(2);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_1DC88D674();
}

uint64_t sub_1DC906504()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC90654C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for SharedSoundPrintA.Configuration();
  *(void *)(a5 + *(int *)(result + 52)) = a2;
  *(void *)(a5 + *(int *)(result + 56)) = a3;
  return result;
}

void sub_1DC9065FC()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v33 = v11;
  sub_1DC88D538();
  uint64_t v35 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC909D74(v14, v31);
  type metadata accessor for SharedSoundPrintA.Configuration.CodingKeys();
  swift_getWitnessTable();
  sub_1DC909E58();
  uint64_t v38 = sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v34 = v15;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v16);
  uint64_t v39 = v8;
  uint64_t v40 = v6;
  uint64_t v36 = v6;
  uint64_t v41 = v4;
  uint64_t v42 = v2;
  uint64_t v17 = type metadata accessor for SharedSoundPrintA.Configuration();
  sub_1DC88D538();
  uint64_t v32 = v18;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v31 - v20;
  sub_1DC881A8C(v10, v10[3]);
  sub_1DC909E58();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v10);
  }
  else
  {
    uint64_t v22 = v21;
    uint64_t v23 = v35;
    LOBYTE(v39) = 0;
    uint64_t v24 = v37;
    sub_1DCB88DF8();
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v22, v24, v8);
    uint64_t v25 = v17;
    *(void *)&v22[*(int *)(v17 + 52)] = sub_1DC909DB4(1);
    uint64_t v26 = sub_1DC909DB4(2);
    uint64_t v27 = sub_1DC909D3C();
    v28(v27);
    *(void *)&v22[*(int *)(v17 + 56)] = v26;
    uint64_t v29 = v32;
    sub_1DC8E7D10();
    v30();
    sub_1DC8818D0((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v25);
  }
  sub_1DC88D674();
}

BOOL sub_1DC9068D8(char *a1, char *a2)
{
  return sub_1DC894354(*a1, *a2);
}

uint64_t sub_1DC9068F0()
{
  return sub_1DC89F9AC();
}

uint64_t sub_1DC906900()
{
  return sub_1DC894364();
}

uint64_t sub_1DC906910()
{
  return sub_1DCB891F8();
}

unint64_t sub_1DC90695C()
{
  return sub_1DC906320(*v0);
}

uint64_t sub_1DC90696C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9061D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9069A0()
{
  return sub_1DC888648();
}

uint64_t sub_1DC9069C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DC8944FC();
  *a1 = result;
  return result;
}

uint64_t sub_1DC9069FC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DC906A50(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void sub_1DC906AA4()
{
}

void sub_1DC906AC8()
{
}

uint64_t sub_1DC906AE8()
{
  return sub_1DCB891F8();
}

BOOL sub_1DC906B2C(uint64_t a1, uint64_t a2)
{
  return sub_1DC90613C(a1, a2);
}

uint64_t sub_1DC906B3C()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAA9DAB8);
  sub_1DC88D538();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = sub_1DC88CEC8;
  v9[3] = v0;
  v9[4] = v8;
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
  sub_1DCB87378();
  sub_1DC88CF34(qword_1EAA9DAC0, &qword_1EAA9DAB8);
  uint64_t v10 = sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v10;
}

uint64_t type metadata accessor for SharedSoundPrintA.Instance()
{
  return self;
}

ValueMetadata *type metadata accessor for SharedSoundPrintA()
{
  return &type metadata for SharedSoundPrintA;
}

uint64_t sub_1DC906CF8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC906D98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1DC906EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC906F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC906FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC90704C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9070D8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC9071E4);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_1DC9071F8(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
  }
  else
  {
    int v9 = a3 - v7;
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v13 = a2 - v7;
    }
    else {
      int v13 = 1;
    }
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DC907398);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for SharedSoundPrintA.Configuration()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC9073D8()
{
  return swift_getWitnessTable();
}

void *sub_1DC9073F4(void *a1, int *a2, void *a3)
{
  v77 = a3;
  v78 = a2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9DA50);
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  MEMORY[0x1F4188790](v4);
  v76 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1DC87E988(&qword_1EAA9DA48);
  MEMORY[0x1F4188790](v74);
  v73 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1DC87E988(&qword_1EAA9FCA0);
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  v75 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1DC87E988(&qword_1EAA9FCA8);
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  v63 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAAA7D0);
  uint64_t v66 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988(&qword_1EAA9FCB0);
  uint64_t v67 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  int v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DCB86BF8();
  uint64_t v70 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = objc_allocWithZone(NSNumber);
  sub_1DC882264((uint64_t)a1);
  LODWORD(v19) = 1182400512;
  uint64_t v20 = objc_msgSend(v18, sel_initWithFloat_, v19);
  uint64_t v21 = v80;
  sub_1DCA89A70();
  if (!v21)
  {
    v58 = v11;
    uint64_t v59 = v9;
    v60 = v14;
    uint64_t v61 = v12;
    v80 = v17;
    uint64_t v62 = v15;
    memcpy(__dst, a1, 0x41uLL);
    id v22 = objc_msgSend(v20, sel_integerValue);

    __dst[9] = 1;
    __dst[10] = v22;
    uint64_t v23 = (void *)((uint64_t (*)(void *))v78)(__dst);
    sub_1DC88CABC((uint64_t)a1);
    sub_1DCB86BE8();
    __dst[0] = sub_1DC9A7A54();
    sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    uint64_t v24 = (int *)sub_1DC87E988(&qword_1EAA9E860);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    v78 = v24;
    sub_1DCB873D8();
    swift_release();
    uint64_t v25 = a1[9];
    BOOL v26 = __OFSUB__(v25, 1);
    uint64_t v27 = v25 - 1;
    if (v26)
    {
      __break(1u);
    }
    else
    {
      uint64_t v28 = (unsigned __int128)(v27 * (__int128)160) >> 64;
      uint64_t v29 = 160 * v27;
      uint64_t v24 = (int *)v74;
      uint64_t v30 = v72;
      uint64_t v31 = (uint64_t)v73;
      uint64_t v9 = v71;
      if (v28 == v29 >> 63)
      {
        uint64_t v32 = v29 + 512;
        if (!__OFADD__(v29, 512))
        {
          uint64_t v33 = a1[10];
          uint64_t v34 = 160 * v33;
          if ((unsigned __int128)(v33 * (__int128)160) >> 64 == (160 * v33) >> 63)
          {
            v77 = v23;
            uint64_t v35 = v76;
            (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v73, v76, v72);
            *(void *)(v31 + v24[15]) = v32;
            *(void *)(v31 + v24[16]) = v34;
            *(void *)(v31 + v24[17]) = v78;
            (*(void (**)(char *, uint64_t))(v9 + 8))(v35, v30);
            sub_1DC87E988(&qword_1EAAA0BC0);
            sub_1DC88CF34(&qword_1EAA9FCB8, &qword_1EAA9DA48);
            sub_1DCB873D8();
            uint64_t v36 = sub_1DC88CC04(v31, &qword_1EAA9DA48);
            uint64_t v23 = (void *)MEMORY[0x1E01A8D20](v36);
            uint64_t v24 = (int *)MEMORY[0x1E01A8D20]();
            uint64_t v9 = v70;
            if (qword_1EAA9D1E0 == -1)
            {
LABEL_8:
              uint64_t v37 = swift_allocObject();
              *(unsigned char *)(v37 + 16) = 33;
              LOWORD(__dst[0]) = 33;
              uint64_t v38 = MEMORY[0x1F4188790](v37);
              *(&v57 - 4) = (uint64_t)sub_1DC909814;
              *(&v57 - 3) = v38;
              *(&v57 - 2) = (uint64_t)__dst;
              swift_retain();
              sub_1DCAC3890();
              uint64_t v40 = v39;
              swift_release();
              swift_release();
              uint64_t v42 = sub_1DC909584(v40, (uint64_t (*)(uint64_t))&off_1F37FEC20);
              uint64_t v44 = v43;
              uint64_t v45 = swift_allocObject();
              *(void *)(v45 + 16) = v42;
              *(void *)(v45 + 24) = v44;
              sub_1DC88CF34(&qword_1EAA9FCC0, &qword_1EAA9FCA0);
              swift_retain();
              v46 = v63;
              uint64_t v47 = v69;
              uint64_t v48 = v75;
              sub_1DCB874A8();
              swift_release();
              swift_release();
              (*(void (**)(char *, uint64_t))(v68 + 8))(v48, v47);
              swift_release();
              sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
              sub_1DC88CF34(&qword_1EAA9FCC8, &qword_1EAA9FCA8);
              v49 = v58;
              uint64_t v50 = v65;
              sub_1DCB873D8();
              (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v50);
              __dst[0] = 0;
              __dst[1] = 0xE000000000000000;
              sub_1DCB88A98();
              swift_bridgeObjectRelease();
              __dst[0] = 0xD000000000000019;
              __dst[1] = 0x80000001DCB925A0;
              sub_1DC88CBB4();
              v51 = v80;
              sub_1DCB88F98();
              sub_1DCB87A18();
              swift_bridgeObjectRelease();
              sub_1DCB87A18();
              v52 = v60;
              sub_1DCB0457C();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v59);
              sub_1DC88CF34(&qword_1EAA9FCD0, &qword_1EAA9FCB0);
              uint64_t v53 = v61;
              uint64_t v54 = sub_1DCB87468();
              sub_1DC87E988(&qword_1EAA9FCD8);
              swift_allocObject();
              uint64_t v55 = sub_1DC9C5478(v54);
              (*(void (**)(char *, uint64_t))(v67 + 8))(v52, v53);
              __dst[0] = v55;
              sub_1DC88CF34(&qword_1EAA9FCE0, &qword_1EAA9FCD8);
              uint64_t v56 = sub_1DCB873A8();
              swift_release();
              swift_release();
              type metadata accessor for SharedSoundPrintA.Instance();
              uint64_t v20 = (void *)swift_allocObject();
              v20[2] = v56;
              (*(void (**)(char *, uint64_t))(v9 + 8))(v51, v62);
              return v20;
            }
LABEL_14:
            swift_once();
            goto LABEL_8;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  sub_1DC88CABC((uint64_t)a1);

  return v20;
}

void sub_1DC907F34()
{
  sub_1DC88D6B0();
  uint64_t v74 = v2;
  v77 = v3;
  uint64_t v67 = v4;
  uint64_t v72 = v5;
  sub_1DC87E988(&qword_1EAA9DA50);
  sub_1DC88D538();
  uint64_t v68 = v7;
  uint64_t v69 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v73 = v8;
  uint64_t v71 = sub_1DC87E988(&qword_1EAA9DA48);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  uint64_t v70 = v10;
  sub_1DC87E988(&qword_1EAA9FCA0);
  sub_1DC88D538();
  v66[12] = v12;
  v66[13] = v11;
  MEMORY[0x1F4188790](v11);
  sub_1DC909D74(v13, v66[0]);
  sub_1DC87E988(&qword_1EAA9FCA8);
  sub_1DC88D538();
  v66[8] = v15;
  v66[9] = v14;
  MEMORY[0x1F4188790](v14);
  sub_1DC88D550();
  v66[7] = v16;
  uint64_t v17 = sub_1DC87E988(&qword_1EAAAA7D0);
  sub_1DC88D538();
  v66[10] = v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC8A22D0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_1DC87E988(&qword_1EAA9FCB0);
  sub_1DC88D538();
  v66[11] = v24;
  MEMORY[0x1F4188790](v25);
  sub_1DC8A22D0();
  uint64_t v28 = v27 - v26;
  uint64_t v29 = sub_1DCB86BF8();
  sub_1DC88D538();
  uint64_t v31 = v30;
  MEMORY[0x1F4188790](v32);
  sub_1DC909E14();
  id v33 = objc_allocWithZone(NSNumber);
  LODWORD(v34) = 1182400512;
  id v35 = objc_msgSend(v33, sel_initWithFloat_, v34);
  sub_1DCA89A70();
  if (!v1)
  {
    v66[0] = v22;
    v66[1] = v17;
    v66[2] = v28;
    v66[3] = v23;
    v66[5] = v29;
    v66[6] = v0;
    v66[4] = v31;
    id v36 = objc_msgSend(v35, sel_integerValue);

    uint64_t v75 = 1;
    unint64_t v76 = (unint64_t)v36;
    uint64_t v37 = (void *)v77(&v75);
    sub_1DCB86BE8();
    uint64_t v75 = sub_1DC9A7A54();
    sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    uint64_t v38 = (void *)sub_1DC87E988(&qword_1EAA9E860);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB873D8();
    swift_release();
    if (__OFSUB__(v72, 1))
    {
      __break(1u);
    }
    else
    {
      sub_1DC909E2C();
      uint64_t v40 = v71;
      uint64_t v42 = v68;
      uint64_t v41 = v69;
      if (v43)
      {
        uint64_t v44 = v39 + 512;
        uint64_t v45 = v73;
        if (!__OFADD__(v39, 512))
        {
          uint64_t v46 = 160 * v67;
          if ((unsigned __int128)(v67 * (__int128)160) >> 64 == (160 * v67) >> 63)
          {
            uint64_t v47 = v70;
            sub_1DC8E7D10();
            v48();
            *(void *)(v70 + *(int *)(v71 + 60)) = v44;
            *(void *)(v47 + *(int *)(v40 + 64)) = v46;
            *(void *)(v47 + *(int *)(v40 + 68)) = v38;
            (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v41);
            sub_1DC87E988(&qword_1EAAA0BC0);
            sub_1DC88CF34(&qword_1EAA9FCB8, &qword_1EAA9DA48);
            sub_1DCB873D8();
            uint64_t v49 = sub_1DC88CC04(v47, &qword_1EAA9DA48);
            uint64_t v37 = (void *)MEMORY[0x1E01A8D20](v49);
            uint64_t v38 = (void *)MEMORY[0x1E01A8D20]();
            if (qword_1EAA9D1E0 == -1)
            {
LABEL_9:
              uint64_t v50 = swift_allocObject();
              *(unsigned char *)(v50 + 16) = 33;
              LOWORD(v75) = 33;
              uint64_t v51 = MEMORY[0x1F4188790](v50);
              v66[-4] = (uint64_t)sub_1DC909D14;
              v66[-3] = v51;
              v66[-2] = (uint64_t)&v75;
              swift_retain();
              sub_1DCAC3890();
              uint64_t v53 = v52;
              swift_release();
              swift_release();
              uint64_t v54 = sub_1DC909584(v53, (uint64_t (*)(uint64_t))&off_1F37FEC20);
              uint64_t v56 = v55;
              uint64_t v57 = sub_1DC886810();
              *(void *)(v57 + 16) = v54;
              *(void *)(v57 + 24) = v56;
              sub_1DC88CF34(&qword_1EAA9FCC0, &qword_1EAA9FCA0);
              swift_retain();
              sub_1DCB874A8();
              swift_release();
              swift_release();
              sub_1DC88D5C8();
              v58();
              swift_release();
              sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
              sub_1DC88CF34(&qword_1EAA9FCC8, &qword_1EAA9FCA8);
              sub_1DCB873D8();
              sub_1DC88D5C8();
              v59();
              uint64_t v75 = 0;
              unint64_t v76 = 0xE000000000000000;
              sub_1DCB88A98();
              swift_bridgeObjectRelease();
              uint64_t v75 = 0xD000000000000019;
              unint64_t v76 = 0x80000001DCB925A0;
              sub_1DC88CBB4();
              sub_1DCB88F98();
              sub_1DCB87A18();
              swift_bridgeObjectRelease();
              sub_1DCB87A18();
              sub_1DCB0457C();
              swift_bridgeObjectRelease();
              sub_1DC88D5C8();
              v60();
              sub_1DC88CF34(&qword_1EAA9FCD0, &qword_1EAA9FCB0);
              uint64_t v61 = sub_1DCB87468();
              sub_1DC87E988(&qword_1EAA9FCD8);
              sub_1DC886810();
              uint64_t v62 = sub_1DC9C5478(v61);
              sub_1DC88D5C8();
              v63();
              uint64_t v75 = v62;
              sub_1DC88CF34(&qword_1EAA9FCE0, &qword_1EAA9FCD8);
              uint64_t v64 = sub_1DCB873A8();
              swift_release();
              swift_release();
              sub_1DC88D5C8();
              v65();
              type metadata accessor for SharedSoundPrintA.Instance();
              *(void *)(swift_allocObject() + 16) = v64;
              goto LABEL_10;
            }
LABEL_15:
            swift_once();
            goto LABEL_9;
          }
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }

LABEL_10:
  sub_1DC88D674();
}

void sub_1DC908860()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  unint64_t v9 = v8;
  uint64_t v93 = v11;
  v94 = v10;
  uint64_t v13 = v12;
  sub_1DC87E988(&qword_1EAA9DA50);
  sub_1DC88D538();
  uint64_t v86 = v15;
  v87 = v14;
  MEMORY[0x1F4188790](v14);
  sub_1DC88D550();
  uint64_t v91 = v16;
  uint64_t v89 = sub_1DC87E988(&qword_1EAA9DA48);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v17);
  sub_1DC88D550();
  uint64_t v88 = v18;
  sub_1DC87E988(&qword_1EAA9FCA0);
  sub_1DC88D538();
  v85[12] = v20;
  v85[13] = v19;
  MEMORY[0x1F4188790](v19);
  sub_1DC88D550();
  uint64_t v90 = v21;
  v85[4] = sub_1DC87E988(&qword_1EAA9FCA8);
  sub_1DC88D538();
  v85[3] = v22;
  MEMORY[0x1F4188790](v23);
  sub_1DC88D550();
  v85[2] = v24;
  v85[7] = sub_1DC87E988(&qword_1EAAAA7D0);
  sub_1DC88D538();
  v85[6] = v25;
  MEMORY[0x1F4188790](v26);
  sub_1DC88D550();
  v85[5] = v27;
  v85[10] = sub_1DC87E988(&qword_1EAA9FCB0);
  sub_1DC88D538();
  v85[9] = v28;
  MEMORY[0x1F4188790](v29);
  sub_1DC88D550();
  v85[8] = v30;
  v85[11] = sub_1DCB86BF8();
  sub_1DC88D538();
  v85[14] = v31;
  MEMORY[0x1F4188790](v32);
  sub_1DC8A22D0();
  uint64_t v35 = v34 - v33;
  sub_1DC88D538();
  uint64_t v37 = v36;
  MEMORY[0x1F4188790](v38);
  sub_1DC909E14();
  unint64_t v98 = v9;
  unint64_t v99 = v7;
  unint64_t v96 = v7;
  uint64_t v97 = v5;
  uint64_t v100 = v5;
  uint64_t v101 = v3;
  uint64_t v95 = v3;
  type metadata accessor for SharedReformattedAudioSource.Configuration();
  sub_1DC88D538();
  uint64_t v92 = v39;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (int *)((char *)v85 - v41);
  unint64_t v43 = v9;
  sub_1DC8E7D10();
  v44();
  id v45 = objc_allocWithZone(NSNumber);
  LODWORD(v46) = 1182400512;
  id v47 = objc_msgSend(v45, sel_initWithFloat_, v46);
  sub_1DCA89A70();
  if (v1)
  {
    (*(void (**)(uint64_t, unint64_t))(v37 + 8))(v0, v43);

    goto LABEL_11;
  }
  v85[0] = v13;
  v85[1] = v35;
  id v48 = objc_msgSend(v47, sel_integerValue);

  uint64_t v49 = (uint64_t)v48;
  uint64_t v50 = v95;
  sub_1DC9A79A8(1, v49, (uint64_t)v42);
  v94(v42);
  v94 = 0;
  sub_1DC909E44();
  sub_1DC88D5C8();
  v51();
  sub_1DCB86BE8();
  uint64_t v52 = (void *)sub_1DC9A7A54();
  unint64_t v98 = (unint64_t)v52;
  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  uint64_t v53 = sub_1DC87E988(&qword_1EAA9E860);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  sub_1DCB873D8();
  swift_release();
  unint64_t v98 = v43;
  unint64_t v99 = v96;
  uint64_t v100 = v97;
  uint64_t v101 = v50;
  if (__OFSUB__(*(void *)(v85[0] + *(int *)(type metadata accessor for SharedSoundPrintA.Configuration() + 52)), 1))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1DC909E2C();
  uint64_t v42 = (int *)v89;
  uint64_t v52 = v87;
  uint64_t v57 = v88;
  if (!v58) {
    goto LABEL_14;
  }
  uint64_t v59 = v55 + 512;
  if (__OFADD__(v55, 512))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v60 = *(void *)(v56 + *(int *)(v54 + 56));
  uint64_t v61 = 160 * v60;
  if ((unsigned __int128)(v60 * (__int128)160) >> 64 == (160 * v60) >> 63)
  {
    uint64_t v62 = v91;
    uint64_t v63 = v86;
    sub_1DC8E7D10();
    v64();
    *(void *)(v57 + v42[15]) = v59;
    *(void *)(v57 + v42[16]) = v61;
    *(void *)(v57 + v42[17]) = v53;
    (*(void (**)(uint64_t, void *))(v63 + 8))(v62, v52);
    sub_1DC87E988(&qword_1EAAA0BC0);
    sub_1DC88CF34(&qword_1EAA9FCB8, &qword_1EAA9DA48);
    sub_1DCB873D8();
    uint64_t v65 = sub_1DC88CC04(v57, &qword_1EAA9DA48);
    uint64_t v52 = (void *)MEMORY[0x1E01A8D20](v65);
    uint64_t v42 = (int *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 == -1) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  swift_once();
LABEL_9:
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = 33;
  LOWORD(v98) = 33;
  uint64_t v67 = MEMORY[0x1F4188790](v66);
  v85[-4] = sub_1DC909D14;
  v85[-3] = v67;
  v85[-2] = &v98;
  swift_retain();
  uint64_t v68 = v94;
  sub_1DCAC3890();
  if (v68)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88D5C8();
    v70();
    sub_1DC909DFC();
    sub_1DC88D5C8();
    v71();
  }
  else
  {
    uint64_t v72 = v69;
    swift_release();
    swift_release();
    uint64_t v73 = sub_1DC909584(v72, (uint64_t (*)(uint64_t))&off_1F37FEC20);
    uint64_t v75 = v74;
    uint64_t v76 = sub_1DC886810();
    v94 = 0;
    *(void *)(v76 + 16) = v73;
    *(void *)(v76 + 24) = v75;
    sub_1DC88CF34(&qword_1EAA9FCC0, &qword_1EAA9FCA0);
    swift_retain();
    sub_1DCB874A8();
    swift_release();
    swift_release();
    sub_1DC88D5C8();
    v77();
    swift_release();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC88CF34(&qword_1EAA9FCC8, &qword_1EAA9FCA8);
    sub_1DCB873D8();
    sub_1DC88D5C8();
    v78();
    unint64_t v98 = 0;
    unint64_t v99 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v98 = 0xD000000000000019;
    unint64_t v99 = 0x80000001DCB925A0;
    sub_1DC88CBB4();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB0457C();
    swift_bridgeObjectRelease();
    sub_1DC88D5C8();
    v79();
    sub_1DC88CF34(&qword_1EAA9FCD0, &qword_1EAA9FCB0);
    uint64_t v80 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAA9FCD8);
    sub_1DC886810();
    uint64_t v81 = sub_1DC9C5478(v80);
    sub_1DC88D5C8();
    v82();
    unint64_t v98 = v81;
    sub_1DC88CF34(&qword_1EAA9FCE0, &qword_1EAA9FCD8);
    uint64_t v83 = sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DC88D5C8();
    v84();
    type metadata accessor for SharedSoundPrintA.Instance();
    *(void *)(swift_allocObject() + 16) = v83;
  }
LABEL_11:
  sub_1DC88D674();
}

uint64_t sub_1DC909324@<X0>(uint64_t *a1@<X8>)
{
  sub_1DC87E988(&qword_1EAAA0BC0);
  sub_1DC88CF34(&qword_1EAA9FCE8, &qword_1EAAA0BC0);
  uint64_t result = sub_1DCB87058();
  *a1 = result;
  return result;
}

void sub_1DC909398()
{
}

void sub_1DC9093DC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9FCF0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = (void *)sub_1DCB87908();
  id v8 = objc_msgSend(a1, sel_featureValueForName_, v7);

  if (v8)
  {
    if (objc_msgSend(v8, sel_type) != (id)5)
    {
LABEL_5:
      sub_1DC9099EC();
      swift_allocError();
      *uint64_t v10 = 1;
      swift_willThrow();

      return;
    }
    sub_1DCB88498();
    uint64_t v9 = sub_1DC87E988(&qword_1EAAA0BC0);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v6, 1, v9) == 1)
    {
      sub_1DC88CC04((uint64_t)v6, &qword_1EAA9FCF0);
      goto LABEL_5;
    }

    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a2, v6, v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_1DC909584(uint64_t a1, uint64_t (*a2)(uint64_t a1)))(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t)))*((void *)a2 + 2);
  unint64_t v7 = (void *)v6(ObjectType, a2);
  uint64_t v8 = sub_1DC9A4654(v7);
  uint64_t v10 = v9;

  if (!v2)
  {
    uint64_t v11 = (void *)v6(ObjectType, a2);
    uint64_t v13 = sub_1DC9A4674(v11);
    uint64_t v15 = v14;

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v8;
    *(void *)(v16 + 24) = v10;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a1;
    *(void *)(v17 + 24) = a2;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v13;
    *(void *)(v18 + 24) = v15;
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = sub_1DC909964;
    v19[3] = v18;
    v19[4] = sub_1DC909948;
    v19[5] = v17;
    v19[6] = sub_1DC9098FC;
    v19[7] = v16;
    a2 = sub_1DC9099C8;
    swift_unknownObjectRetain();
  }
  return a2;
}

uint64_t sub_1DC909720(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t result = a6();
  if (!v6)
  {
    uint64_t v10 = a4();
    swift_unknownObjectRelease();
    a2(v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1DC9097CC()
{
}

uint64_t sub_1DC909814@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC9ADC08(a1, a2);
}

void sub_1DC909830(void *a1@<X8>)
{
  sub_1DCB05D78();
  *a1 = v2;
}

uint64_t sub_1DC90985C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC99F88C(a1, a2);
}

uint64_t sub_1DC90987C(uint64_t a1)
{
  return sub_1DC9A4954(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1DC90989C()
{
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC9098CC()
{
  swift_bridgeObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

id sub_1DC9098FC(uint64_t a1)
{
  return sub_1DC99F38C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DC909918()
{
  swift_unknownObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC909948(uint64_t a1)
{
  return sub_1DC9A489C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1DC909964(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1DC909980()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9099C8(uint64_t a1)
{
  return sub_1DC909720(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(void *)(v1 + 40), *(uint64_t (**)(void))(v1 + 48));
}

unint64_t sub_1DC9099EC()
{
  unint64_t result = qword_1EAA9FCF8[0];
  if (!qword_1EAA9FCF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAA9FCF8);
  }
  return result;
}

uint64_t sub_1DC909A38()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC909A78(void *a1@<X8>)
{
}

uint64_t sub_1DC909A84()
{
  sub_1DC88D5C8();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1DC909B08@<X0>(uint64_t *a1@<X8>)
{
  sub_1DC909E64();
  uint64_t result = v3();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for SharedSoundPrintA.Configuration.CodingKeys()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_1DC909B90(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC909C5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DC909C84()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC909CA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC909CBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC909CE4(uint64_t a1)
{
  return sub_1DC90987C(a1);
}

uint64_t sub_1DC909CFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC90985C(a1, a2);
}

uint64_t sub_1DC909D14@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC909814(a1, a2);
}

uint64_t sub_1DC909D2C()
{
  return swift_deallocObject();
}

uint64_t sub_1DC909D3C()
{
  return v0;
}

uint64_t sub_1DC909D54()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1DC909D74(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DC909D90()
{
  sub_1DC905E14();
}

uint64_t sub_1DC909DB4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return sub_1DCB88DE8();
}

uint64_t sub_1DC909DD8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return sub_1DCB88F08();
}

uint64_t sub_1DC909DFC()
{
  return *(void *)(v0 - 328);
}

uint64_t sub_1DC909E44()
{
  return v0;
}

uint64_t sub_1DC909E78()
{
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1DCAC358C();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC909F34()
{
  return sub_1DC9C2E68((void (*)(uint64_t))sub_1DC913C38);
}

uint64_t sub_1DC909F78()
{
  swift_retain();
  swift_retain();
  sub_1DCAC35B8();
  uint64_t v1 = v0;
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DC90A00C()
{
  uint64_t v0 = swift_retain();
  uint64_t v1 = sub_1DC9C45C8(v0, (void (*)(void))sub_1DC913BF4);
  swift_release();
  return v1;
}

uint64_t sub_1DC90A084()
{
  swift_retain();
  swift_retain();
  sub_1DCAC35D8();
  uint64_t v1 = v0;
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DC90A118(uint64_t a1)
{
  return sub_1DC9C2594(a1);
}

uint64_t sub_1DC90A140()
{
  return sub_1DC909F34();
}

uint64_t sub_1DC90A164()
{
  return sub_1DC909E78();
}

uint64_t AOPClassificationDemo.Request.init(modelURL:enablePostProcessing:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1DC90A1C4(a1, a3);
  uint64_t result = type metadata accessor for AOPClassificationDemo.Request();
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1DC90A1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AOPClassificationDemo.Request()
{
  uint64_t result = qword_1EAA9FDD0;
  if (!qword_1EAA9FDD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AOPClassificationDemo.Request.hash(into:)()
{
  uint64_t v2 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC89D970();
  uint64_t v6 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v7 = sub_1DC8BADF0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1DC909E14();
  sub_1DC90A3F8(v0, v0);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v2) == 1)
  {
    sub_1DCB891C8();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v0, v2);
    sub_1DCB891C8();
    sub_1DC913894((unint64_t *)&qword_1EAAABA60, MEMORY[0x1E4F276F0]);
    sub_1DCB87818();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  }
  type metadata accessor for AOPClassificationDemo.Request();
  return sub_1DCB891C8();
}

uint64_t sub_1DC90A3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static AOPClassificationDemo.Request.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC89D970();
  uint64_t v10 = sub_1DC87E988(&qword_1EAA9FD80);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  sub_1DC89D988();
  uint64_t v12 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v13 = sub_1DC8BADF0(v12);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = &v28[-v18];
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = &v28[-v20];
  sub_1DC90A3F8(a1, (uint64_t)&v28[-v20]);
  sub_1DC90A3F8(a2, (uint64_t)v19);
  uint64_t v22 = v2 + *(int *)(v11 + 56);
  sub_1DC90A3F8((uint64_t)v21, v2);
  sub_1DC90A3F8((uint64_t)v19, v22);
  sub_1DC913CE0(v2);
  if (!v23)
  {
    sub_1DC90A3F8(v2, (uint64_t)v16);
    sub_1DC913CE0(v22);
    if (!v23)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v3, v22, v6);
      sub_1DC913894(&qword_1EAA9F1B8, MEMORY[0x1E4F276F0]);
      int v29 = sub_1DCB878C8();
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v24(v3, v6);
      sub_1DC901A64((uint64_t)v19, qword_1EAA9CBC0);
      sub_1DC901A64((uint64_t)v21, qword_1EAA9CBC0);
      v24((uint64_t)v16, v6);
      sub_1DC901A64(v2, qword_1EAA9CBC0);
      if (v29) {
        goto LABEL_11;
      }
LABEL_12:
      char v26 = 0;
      return v26 & 1;
    }
    sub_1DC901A64((uint64_t)v19, qword_1EAA9CBC0);
    sub_1DC901A64((uint64_t)v21, qword_1EAA9CBC0);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v16, v6);
LABEL_9:
    sub_1DC901A64(v2, &qword_1EAA9FD80);
    goto LABEL_12;
  }
  sub_1DC901A64((uint64_t)v19, qword_1EAA9CBC0);
  sub_1DC901A64((uint64_t)v21, qword_1EAA9CBC0);
  sub_1DC913CE0(v22);
  if (!v23) {
    goto LABEL_9;
  }
  sub_1DC901A64(v2, qword_1EAA9CBC0);
LABEL_11:
  uint64_t v25 = type metadata accessor for AOPClassificationDemo.Request();
  char v26 = *(unsigned char *)(a1 + *(int *)(v25 + 20)) ^ *(unsigned char *)(a2 + *(int *)(v25 + 20)) ^ 1;
  return v26 & 1;
}

uint64_t sub_1DC90A798(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4C52556C65646F6DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB92600)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC90A888(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x4C52556C65646F6DLL;
  }
}

uint64_t sub_1DC90A8C4()
{
  return sub_1DC90A888(*v0);
}

uint64_t sub_1DC90A8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC90A798(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC90A8F4(uint64_t a1)
{
  unint64_t v2 = sub_1DC90AAE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC90A930(uint64_t a1)
{
  unint64_t v2 = sub_1DC90AAE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AOPClassificationDemo.Request.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9FD88);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC90AAE8();
  sub_1DCB892B8();
  sub_1DCB86A18();
  sub_1DC913894(&qword_1EAA9DD48, MEMORY[0x1E4F276F0]);
  sub_1DCB88EB8();
  if (!v1)
  {
    type metadata accessor for AOPClassificationDemo.Request();
    sub_1DCB88ED8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1DC90AAE8()
{
  unint64_t result = qword_1EAA9FD90;
  if (!qword_1EAA9FD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9FD90);
  }
  return result;
}

uint64_t AOPClassificationDemo.Request.hashValue.getter()
{
  uint64_t v2 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC89D988();
  uint64_t v6 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v7 = sub_1DC8BADF0(v6);
  MEMORY[0x1F4188790](v7);
  sub_1DC909E14();
  sub_1DCB891A8();
  sub_1DC90A3F8(v0, v0);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v2) == 1)
  {
    sub_1DCB891C8();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v0, v2);
    sub_1DCB891C8();
    sub_1DC913894((unint64_t *)&qword_1EAAABA60, MEMORY[0x1E4F276F0]);
    sub_1DCB87818();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  }
  type metadata accessor for AOPClassificationDemo.Request();
  sub_1DCB891C8();
  return sub_1DCB891F8();
}

uint64_t AOPClassificationDemo.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v5 = sub_1DC8BADF0(v4);
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v19 = v7 - v6;
  sub_1DC87E988(&qword_1EAA9FD98);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC8A22D0();
  uint64_t v9 = type metadata accessor for AOPClassificationDemo.Request();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v10);
  sub_1DC8A22D0();
  uint64_t v13 = v12 - v11;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC90AAE8();
  sub_1DCB89298();
  if (v2) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  sub_1DCB86A18();
  sub_1DC913894(&qword_1EAA9DD28, MEMORY[0x1E4F276F0]);
  sub_1DCB88D98();
  sub_1DC90A1C4(v19, v13);
  char v14 = sub_1DCB88DB8();
  uint64_t v15 = sub_1DC913CCC();
  v16(v15);
  *(unsigned char *)(v13 + *(int *)(v9 + 20)) = v14 & 1;
  sub_1DC90B174(v13, a2);
  sub_1DC8818D0((uint64_t)a1);
  return sub_1DC910328(v13, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
}

uint64_t sub_1DC90AF54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AOPClassificationDemo.Request.init(from:)(a1, a2);
}

uint64_t sub_1DC90AF6C(void *a1)
{
  return AOPClassificationDemo.Request.encode(to:)(a1);
}

uint64_t sub_1DC90AF8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DCB86A18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCB891A8();
  sub_1DC90A3F8(v1, (uint64_t)v8);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v8, 1, v2) == 1)
  {
    sub_1DCB891C8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1DCB891C8();
    sub_1DC913894((unint64_t *)&qword_1EAAABA60, MEMORY[0x1E4F276F0]);
    sub_1DCB87818();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1DCB891C8();
  return sub_1DCB891F8();
}

uint64_t sub_1DC90B174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AOPClassificationDemo.Request();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AOPClassificationDemo.Session.classificationResults.getter()
{
  return swift_retain();
}

uint64_t sub_1DC90B1E4()
{
  uint64_t v1 = *v0;
  sub_1DCAD2DD0();
  v3[3] = sub_1DC87E988(&qword_1EAA9FE90);
  v3[4] = sub_1DC913820();
  v3[0] = v1;
  swift_retain();
  sub_1DCAD2E10(v3);
  swift_release();
  return sub_1DC8818D0((uint64_t)v3);
}

uint64_t sub_1DC90B26C()
{
  sub_1DC8867A8();
  v0[2] = v1;
  v0[3] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DC90B308;
  return sub_1DC977FC0();
}

uint64_t sub_1DC90B308(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_1DC88678C();
  *uint64_t v7 = v6;
  v5[5] = a1;
  v5[6] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
  else
  {
    uint64_t v11 = (void *)sub_1DC8BAA00();
    v5[7] = v11;
    *uint64_t v11 = v6;
    v11[1] = sub_1DC90B464;
    return v13();
  }
}

uint64_t sub_1DC90B464(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_1DC88678C();
  *uint64_t v7 = v6;
  *(void *)(v5 + 64) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 72) = a1;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1DC90B55C()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC90B5B8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void **)(v0 + 16);
  swift_release();
  swift_release();
  *uint64_t v2 = v1;
  sub_1DC8BAB84();
  return v3();
}

uint64_t sub_1DC90B630()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC90B694()
{
  return sub_1DC90B1E4();
}

uint64_t sub_1DC90B6AC()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8D6930;
  return sub_1DC90B26C();
}

uint64_t sub_1DC90B748@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_1EAA9D260 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EAAFFAA0;
  uint64_t v2 = *(void *)algn_1EAAFFAA8;
  uint64_t v5 = qword_1EAAFFAB0;
  uint64_t v4 = qword_1EAAFFAB8;
  uint64_t v6 = qword_1EAAFFAC0;
  uint64_t v7 = qword_1EAAFFAC8;
  char v18 = byte_1EAAFFAD1;
  char v19 = byte_1EAAFFAD0;
  char v16 = byte_1EAAFFAD3;
  char v17 = byte_1EAAFFAD2;
  char v14 = byte_1EAAFFAD5;
  char v15 = byte_1EAAFFAD4;
  uint64_t v13 = qword_1EAAFFAD8;
  char v12 = byte_1EAAFFAE0;
  uint64_t v8 = swift_allocObject();
  sub_1DC913CB8(v8);
  uint64_t v9 = swift_allocObject();
  sub_1DC913CB8(v9);
  uint64_t v36 = &unk_1F37E2540;
  uint64_t v37 = &off_1F37E24A0;
  uint64_t v35 = swift_allocObject();
  sub_1DC913CB8(v35);
  v22[0] = v3;
  v22[1] = v2;
  void v22[2] = v5;
  v22[3] = v4;
  v22[4] = v6;
  v22[5] = v7;
  char v23 = v19;
  char v24 = v18;
  char v25 = v17;
  char v26 = v16;
  char v27 = v15;
  char v28 = v14;
  uint64_t v29 = v13;
  char v30 = v12;
  uint64_t v31 = sub_1DC913B1C;
  uint64_t v32 = v8;
  uint64_t v33 = sub_1DC913B3C;
  uint64_t v34 = v9;
  swift_bridgeObjectRetain();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC90BA8C(a1, v22, &v38);
  uint64_t result = sub_1DC901A64((uint64_t)v22, qword_1EAA9FFD8);
  if (!v21) {
    *a2 = v38;
  }
  return result;
}

uint64_t sub_1DC90B974(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v1 = sub_1DC9A7F88(__dst);
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DC90BA14()
{
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v0 = sub_1DC90A084();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DC90BA8C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  v175 = a2;
  v172 = a3;
  uint64_t v145 = sub_1DC87E988(&qword_1EAAAABB0);
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  v143 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_1DC87E988(&qword_1EAA9FEA0);
  uint64_t v154 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  v155 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1DC87E988(&qword_1EAA9FEA8);
  uint64_t v139 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  v136 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1DC87E988(&qword_1EAA9FEB0);
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  v137 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_1DC87E988(&qword_1EAA9FEB8);
  uint64_t v160 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  v150 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_1DC87E988(&qword_1EAA9FEC0);
  MEMORY[0x1F4188790](v133);
  v132 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1DC87E988(&qword_1EAA9FEC8);
  uint64_t v156 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  v147 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_1DC87E988(&qword_1EAA9FED0);
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  v131 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_1DC87E988(&qword_1EAA9FED8);
  uint64_t v134 = *(void *)(v135 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v135);
  v153 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v152 = (char *)&v125 - v14;
  uint64_t v15 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  v170 = *(void (***)(void (*)(double *@<X0>, void *@<X8>), uint64_t))(v15 - 8);
  uint64_t v171 = v15;
  MEMORY[0x1F4188790](v15);
  v168 = (void (*)(double *@<X0>, void *@<X8>))((char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = sub_1DCB870B8();
  uint64_t v169 = *(void *)(v173 - 8);
  MEMORY[0x1F4188790](v173);
  v167 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = (void *)sub_1DC87E988(&qword_1EAA9FEE0);
  uint64_t v129 = *(v130 - 1);
  MEMORY[0x1F4188790](v130);
  v128 = (uint64_t *)((char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v161 = sub_1DC87E988(&qword_1EAA9FEE8);
  uint64_t v146 = *(void *)(v161 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v161);
  v149 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v157 = (char *)&v125 - v21;
  uint64_t v163 = sub_1DC87E988(&qword_1EAA9FEF0);
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  v174 = (char *)&v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_1DC87E988(&qword_1EAAAABC0);
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  char v24 = (char *)&v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1DC87E988(&qword_1EAA9FEF8);
  uint64_t v166 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  char v27 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v28 - 8);
  char v30 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1DCB86A18();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)&v125 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v125 - v36;
  uint64_t v38 = sub_1DCB86BF8();
  uint64_t v177 = *(void *)(v38 - 8);
  uint64_t v178 = v38;
  MEMORY[0x1F4188790](v38);
  v176 = (char *)&v125 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCB86BE8();
  sub_1DC90A3F8(a1, (uint64_t)v30);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v30, 1, v31) != 1)
  {
    v174 = (char *)a1;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v37, v30, v31);
    double v46 = v182;
    uint64_t v47 = sub_1DC969B7C();
    v127 = v37;
    if (v46)
    {
      uint64_t v44 = v177;
      uint64_t v43 = v178;
      id v45 = v176;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v127, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    }
    uint64_t v64 = v47;
    type metadata accessor for E5RTExecutionStream();
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v64;
    sub_1DCB868C8();
    sub_1DCB869C8();
    v182 = *(void (**)(void, void))(v32 + 8);
    v182(v35, v31);
    uint64_t v66 = sub_1DC969C30();
    uint64_t v166 = v65;
    type metadata accessor for E5RTExecutionStreamOperation();
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v66;
    sub_1DC96BE9C(v67);
    uint64_t v68 = v166;
    sub_1DC969E30(v67);
    uint64_t v69 = (uint64_t (*)(void *))v175[9];
    memcpy(__dst, v175, 0x41uLL);
    uint64_t v70 = sub_1DC90F314(v68, v67, __dst, v69);
    uint64_t v164 = v67;
    uint64_t v165 = v31;
    char v71 = v174[*(int *)(type metadata accessor for AOPClassificationDemo.Request() + 20)];
    v175 = 0;
    uint64_t v163 = v70;
    if (v71)
    {
      uint64_t v72 = (void (*)(void, void))v128;
      sub_1DC90F7E4(12, 11, v70, (uint64_t)v128);
      sub_1DC88CF34(&qword_1EAA9FF28, &qword_1EAA9FEE0);
      uint64_t v73 = v130;
      uint64_t v74 = sub_1DCB87468();
      sub_1DC87E988(&qword_1EAA9FF30);
      swift_allocObject();
      uint64_t v75 = sub_1DC9C5478(v74);
      (*(void (**)(void, void *))(v129 + 8))(v72, v73);
      unint64_t v179 = v75;
      uint64_t v76 = v169;
      v77 = v167;
      (*(void (**)(char *, void, uint64_t))(v169 + 104))(v167, *MEMORY[0x1E4F1A8F8], v173);
      v78 = v168;
      *(void *)v168 = sub_1DC90FAC8;
      *((void *)v78 + 1) = 0;
      uint64_t v80 = v170;
      uint64_t v79 = v171;
      ((void (*)(void (*)(double *@<X0>, void *@<X8>), void, uint64_t))v170[13])(v78, *MEMORY[0x1E4F1A920], v171);
      sub_1DC88CF34(&qword_1EAA9FF38, &qword_1EAA9FF30);
      uint64_t v81 = v157;
      sub_1DCB87478();
      v80[1](v78, v79);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v173);
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v149, v81, v161);
      v174 = (char *)sub_1DC88CF34(&qword_1EAA9FF40, &qword_1EAA9FEE8);
      v82 = v147;
      sub_1DCB874A8();
      uint64_t v83 = sub_1DCB87CF8();
      *(void *)(v83 + 16) = 13;
      *(_OWORD *)(v83 + 32) = 0u;
      *(_OWORD *)(v83 + 48) = 0u;
      *(_OWORD *)(v83 + 64) = 0u;
      *(_OWORD *)(v83 + 80) = 0u;
      *(_OWORD *)(v83 + 96) = 0u;
      *(_OWORD *)(v83 + 112) = 0u;
      *(void *)(v83 + 128) = 0;
      unint64_t v179 = v83;
      uint64_t v84 = sub_1DC87E988(&qword_1EAAA10A0);
      uint64_t v171 = sub_1DC88CF34(&qword_1EAA9FF48, &qword_1EAA9FEC8);
      uint64_t v173 = sub_1DC88CF34(&qword_1EAA9FF50, &qword_1EAAA10A0);
      v85 = v131;
      uint64_t v86 = v148;
      sub_1DCB874F8();
      swift_bridgeObjectRelease();
      v87 = *(void (***)(void (*)(double *@<X0>, void *@<X8>), uint64_t))(v156 + 8);
      v156 += 8;
      v170 = v87;
      ((void (*)(char *, uint64_t))v87)(v82, v86);
      uint64_t v169 = sub_1DC88CF34(&qword_1EAA9FF58, &qword_1EAA9FED0);
      v168 = sub_1DC911944;
      uint64_t v88 = v150;
      uint64_t v126 = v84;
      uint64_t v89 = v85;
      sub_1DCB873D8();
      uint64_t v90 = v160;
      uint64_t v91 = *(char **)(v160 + 16);
      uint64_t v162 = v160 + 16;
      v167 = v91;
      uint64_t v92 = (uint64_t)v132;
      uint64_t v93 = v88;
      v94 = v88;
      uint64_t v95 = v151;
      ((void (*)(char *, char *, uint64_t))v91)(v132, v93, v151);
      unint64_t v96 = (int *)v133;
      *(void *)(v92 + *(int *)(v133 + 60)) = 14;
      *(void *)(v92 + v96[16]) = 1;
      *(void *)(v92 + v96[17]) = v84;
      uint64_t v97 = *(void **)(v90 + 8);
      uint64_t v160 = v90 + 8;
      v130 = v97;
      ((void (*)(char *, uint64_t))v97)(v94, v95);
      *(void *)(swift_allocObject() + 16) = 4;
      uint64_t v129 = sub_1DC88CF34(&qword_1EAA9FF60, &qword_1EAA9FEC0);
      sub_1DCB873D8();
      swift_release();
      sub_1DC901A64(v92, &qword_1EAA9FEC0);
      unint64_t v98 = *(uint64_t **)(v158 + 8);
      v158 += 8;
      v128 = v98;
      ((void (*)(char *, uint64_t))v98)(v89, v159);
      unint64_t v99 = v147;
      sub_1DCB874A8();
      uint64_t v100 = sub_1DCB87CF8();
      *(void *)(v100 + 16) = 27;
      bzero((void *)(v100 + 32), 0xD8uLL);
      unint64_t v179 = v100;
      uint64_t v101 = v148;
      uint64_t v102 = v126;
      sub_1DCB874F8();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v170)(v99, v101);
      v103 = v150;
      uint64_t v104 = v159;
      sub_1DCB873D8();
      v105 = v103;
      v106 = v103;
      uint64_t v107 = v151;
      ((void (*)(uint64_t, char *, uint64_t))v167)(v92, v105, v151);
      *(void *)(v92 + v96[15]) = 28;
      *(void *)(v92 + v96[16]) = 1;
      *(void *)(v92 + v96[17]) = v102;
      ((void (*)(char *, uint64_t))v130)(v106, v107);
      *(void *)(swift_allocObject() + 16) = 9;
      sub_1DCB873D8();
      swift_release();
      sub_1DC901A64(v92, &qword_1EAA9FEC0);
      ((void (*)(char *, uint64_t))v128)(v89, v104);
      uint64_t v173 = MEMORY[0x1E4F1A938];
      sub_1DC88CF34(&qword_1EAA9FF68, &qword_1EAA9FED8);
      v108 = v136;
      v109 = v152;
      uint64_t v110 = v135;
      v111 = v149;
      sub_1DCB873F8();
      sub_1DC87E988(&qword_1EAAA0190);
      sub_1DC88CF34(&qword_1EAA9FF70, &qword_1EAA9FEA8);
      v112 = v137;
      uint64_t v113 = v138;
      sub_1DCB873D8();
      (*(void (**)(char *, uint64_t))(v139 + 8))(v108, v113);
      sub_1DC88CF34(&qword_1EAA9FF78, &qword_1EAA9FEB0);
      uint64_t v114 = v141;
      uint64_t v115 = sub_1DCB873A8();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v112, v114);
      v116 = *(void (**)(char *, uint64_t))(v134 + 8);
      v116(v153, v110);
      v116(v109, v110);
      v117 = *(void (**)(char *, uint64_t))(v146 + 8);
      uint64_t v118 = v161;
      v117(v111, v161);
      v117(v157, v118);
    }
    else
    {
      unint64_t v179 = v70;
      sub_1DC87E988(&qword_1EAA9F2C8);
      sub_1DC88CF34(&qword_1EAA9F2D0, &qword_1EAA9F2C8);
      uint64_t v115 = sub_1DCB873A8();
    }
    uint64_t v119 = v154;
    v120 = v155;
    unint64_t v179 = v115;
    swift_retain();
    sub_1DC87E988(&qword_1EAA9F2C8);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
    sub_1DC88CF34(&qword_1EAA9F2D0, &qword_1EAA9F2C8);
    v121 = v143;
    sub_1DCB873D8();
    swift_release();
    unint64_t v179 = 0;
    unint64_t v180 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v179 = 0xD00000000000001FLL;
    unint64_t v180 = 0x80000001DCB92620;
    sub_1DC913894(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v55 = v176;
    uint64_t v122 = v178;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCA25EAC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v121, v145);
    sub_1DC88CF34(&qword_1EAA9FF20, &qword_1EAA9FEA0);
    uint64_t v123 = v142;
    uint64_t v60 = sub_1DCB873A8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v124 = v120;
    uint64_t v56 = v122;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v124, v123);
    v182(v127, v165);
    uint64_t v61 = v172;
    uint64_t v62 = v177;
LABEL_7:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v55, v56);
    *uint64_t v61 = v60;
    return result;
  }
  uint64_t v40 = v174;
  uint64_t v161 = (uint64_t)v24;
  uint64_t v159 = (uint64_t)v27;
  uint64_t v160 = v25;
  uint64_t v41 = sub_1DC901A64((uint64_t)v30, qword_1EAA9CBC0);
  uint64_t v42 = v182;
  ((void (*)(uint64_t))v175[11])(v41);
  if (!v42)
  {
    uint64_t v48 = sub_1DC9E97AC();
    swift_release();
    unint64_t v179 = v48;
    sub_1DC87E988(&qword_1EAA9FF00);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
    sub_1DC88CF34(&qword_1EAA9FF08, &qword_1EAA9FF00);
    sub_1DCB873D8();
    swift_release();
    uint64_t v49 = v169;
    uint64_t v50 = v167;
    (*(void (**)(char *, void, uint64_t))(v169 + 104))(v167, *MEMORY[0x1E4F1A8F8], v173);
    uint64_t v51 = v168;
    *(void *)v168 = sub_1DC90FDA8;
    *((void *)v51 + 1) = 0;
    uint64_t v53 = v170;
    uint64_t v52 = v171;
    ((void (*)(void (*)(double *@<X0>, void *@<X8>), void, uint64_t))v170[13])(v51, *MEMORY[0x1E4F1A920], v171);
    sub_1DC88CF34(&qword_1EAA9FF10, &qword_1EAA9FEF0);
    uint64_t v54 = v163;
    sub_1DCB87478();
    v53[1](v51, v52);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v173);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v40, v54);
    unint64_t v179 = 0;
    unint64_t v180 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v179 = 0xD00000000000001FLL;
    unint64_t v180 = 0x80000001DCB92620;
    sub_1DC913894(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v55 = v176;
    uint64_t v56 = v178;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    uint64_t v57 = v159;
    uint64_t v58 = v161;
    sub_1DCA25F8C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v58, v165);
    sub_1DC88CF34(&qword_1EAA9FF18, &qword_1EAA9FEF8);
    uint64_t v59 = v160;
    uint64_t v60 = sub_1DCB873A8();
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v57, v59);
    uint64_t v61 = v172;
    uint64_t v62 = v177;
    goto LABEL_7;
  }
  uint64_t v44 = v177;
  uint64_t v43 = v178;
  id v45 = v176;
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v43);
}

uint64_t sub_1DC90D6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v177 = a2;
  v175 = a3;
  uint64_t v154 = sub_1DC87E988(&qword_1EAAAABB0);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  v152 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_1DC87E988(&qword_1EAA9FEA0);
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x1F4188790](v157);
  v155 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_1DC87E988(&qword_1EAA9FEA8);
  uint64_t v140 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  uint64_t v138 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1DC87E988(&qword_1EAA9FEB0);
  uint64_t v141 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  uint64_t v139 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1DC87E988(&qword_1EAA9FEB8);
  uint64_t v161 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  v149 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_1DC87E988(&qword_1EAA9FEC0);
  MEMORY[0x1F4188790](v135);
  uint64_t v134 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1DC87E988(&qword_1EAA9FEC8);
  uint64_t v158 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  uint64_t v144 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_1DC87E988(&qword_1EAA9FED0);
  uint64_t v160 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  uint64_t v148 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1DC87E988(&qword_1EAA9FED8);
  uint64_t v136 = *(void *)(v137 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v137);
  uint64_t v151 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v162 = (char *)&v128 - v14;
  uint64_t v15 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v173 = *(void *)(v15 - 8);
  uint64_t v174 = v15;
  MEMORY[0x1F4188790](v15);
  v170 = (void (*)(double *@<X0>, void *@<X8>))((char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1DCB870B8();
  uint64_t v171 = *(void *)(v17 - 8);
  v172 = (void (*)(void, void))v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = (void *)sub_1DC87E988(&qword_1EAA9FEE0);
  uint64_t v131 = *(v132 - 1);
  MEMORY[0x1F4188790](v132);
  v130 = (uint64_t *)((char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v163 = sub_1DC87E988(&qword_1EAA9FEE8);
  uint64_t v147 = *(void *)(v163 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v163);
  uint64_t v146 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v159 = (char *)&v128 - v23;
  uint64_t v24 = sub_1DC87E988(&qword_1EAA9FEF0);
  uint64_t v164 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v128 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1DC87E988(&qword_1EAAAABC0);
  uint64_t v166 = *(void *)(v27 - 8);
  v167 = (void (*)(char *, uint64_t))v27;
  MEMORY[0x1F4188790](v27);
  v176 = (char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1DC87E988(&qword_1EAA9FEF8);
  uint64_t v168 = *(void *)(v29 - 8);
  uint64_t v169 = (void (*)(void, void, void))v29;
  MEMORY[0x1F4188790](v29);
  uint64_t v165 = (char *)&v128 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v33 = (char *)&v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1DCB86A18();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v38 = (char *)&v128 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)&v128 - v39;
  uint64_t v41 = sub_1DCB86BF8();
  uint64_t v179 = *(void *)(v41 - 8);
  uint64_t v180 = v41;
  MEMORY[0x1F4188790](v41);
  uint64_t v178 = (char *)&v128 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCB86BE8();
  sub_1DC90A3F8(a1, (uint64_t)v33);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v33, 1, v34) != 1)
  {
    v176 = (char *)a1;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v40, v33, v34);
    uint64_t v48 = v183;
    uint64_t v49 = sub_1DC969B7C();
    uint64_t v129 = v40;
    if (v48)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v129, v34);
      uint64_t v46 = v179;
      uint64_t v45 = v180;
      uint64_t v47 = v178;
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v45);
    }
    uint64_t v65 = v49;
    uint64_t v169 = (void (*)(void, void, void))v19;
    type metadata accessor for E5RTExecutionStream();
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v65;
    sub_1DCB868C8();
    sub_1DCB869C8();
    uint64_t v67 = v38;
    uint64_t v68 = *(void (**)(char *, uint64_t))(v35 + 8);
    v68(v67, v34);
    uint64_t v69 = sub_1DC969C30();
    uint64_t v168 = v66;
    type metadata accessor for E5RTExecutionStreamOperation();
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = v69;
    sub_1DC96BE9C(v70);
    v167 = v68;
    uint64_t v71 = v168;
    sub_1DC969E30(v70);
    uint64_t v72 = *(uint64_t (**)(long long *))v177;
    if (qword_1EAA9D208 != -1) {
      swift_once();
    }
    uint64_t v73 = sub_1DC910B80(v71, v70, qword_1EAAA3E28, v72);
    uint64_t v166 = v70;
    uint64_t v177 = v34;
    char v74 = v176[*(int *)(type metadata accessor for AOPClassificationDemo.Request() + 20)];
    uint64_t v183 = 0;
    uint64_t v165 = v73;
    if (v74)
    {
      uint64_t v75 = (void (*)(void, void))v130;
      sub_1DC90F7E4(12, 11, (uint64_t)v73, (uint64_t)v130);
      sub_1DC88CF34(&qword_1EAA9FF28, &qword_1EAA9FEE0);
      uint64_t v76 = v132;
      uint64_t v77 = sub_1DCB87468();
      v176 = (char *)sub_1DC87E988(&qword_1EAA9FF30);
      swift_allocObject();
      uint64_t v78 = sub_1DC9C5478(v77);
      (*(void (**)(void, void *))(v131 + 8))(v75, v76);
      unint64_t v181 = v78;
      uint64_t v80 = v171;
      uint64_t v79 = v172;
      uint64_t v81 = v169;
      (*(void (**)(void, void, void (*)(void, void)))(v171 + 104))(v169, *MEMORY[0x1E4F1A8F8], v172);
      v82 = v170;
      *(void *)v170 = sub_1DC90FAC8;
      *((void *)v82 + 1) = 0;
      uint64_t v84 = v173;
      uint64_t v83 = v174;
      (*(void (**)(void (*)(double *@<X0>, void *@<X8>), void, uint64_t))(v173 + 104))(v82, *MEMORY[0x1E4F1A920], v174);
      sub_1DC88CF34(&qword_1EAA9FF38, &qword_1EAA9FF30);
      v85 = v159;
      sub_1DCB87478();
      (*(void (**)(void (*)(double *@<X0>, void *@<X8>), uint64_t))(v84 + 8))(v82, v83);
      (*(void (**)(void (*)(void, void, void), void))(v80 + 8))(v81, v79);
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v146, v85, v163);
      v176 = (char *)sub_1DC88CF34(&qword_1EAA9FF40, &qword_1EAA9FEE8);
      uint64_t v86 = v144;
      sub_1DCB874A8();
      uint64_t v87 = sub_1DCB87CF8();
      *(void *)(v87 + 16) = 13;
      *(_OWORD *)(v87 + 32) = 0u;
      *(_OWORD *)(v87 + 48) = 0u;
      *(_OWORD *)(v87 + 64) = 0u;
      *(_OWORD *)(v87 + 80) = 0u;
      *(_OWORD *)(v87 + 96) = 0u;
      *(_OWORD *)(v87 + 112) = 0u;
      *(void *)(v87 + 128) = 0;
      unint64_t v181 = v87;
      uint64_t v88 = sub_1DC87E988(&qword_1EAAA10A0);
      uint64_t v173 = sub_1DC88CF34(&qword_1EAA9FF48, &qword_1EAA9FEC8);
      uint64_t v174 = sub_1DC88CF34(&qword_1EAA9FF50, &qword_1EAAA10A0);
      uint64_t v89 = v148;
      uint64_t v90 = v145;
      sub_1DCB874F8();
      swift_bridgeObjectRelease();
      uint64_t v91 = *(void (**)(void, void))(v158 + 8);
      v158 += 8;
      v172 = v91;
      v91(v86, v90);
      uint64_t v171 = sub_1DC88CF34(&qword_1EAA9FF58, &qword_1EAA9FED0);
      v170 = sub_1DC911944;
      uint64_t v92 = v149;
      uint64_t v93 = v133;
      uint64_t v94 = v88;
      uint64_t v128 = v88;
      uint64_t v95 = v89;
      sub_1DCB873D8();
      uint64_t v96 = v161;
      uint64_t v97 = *(void (**)(void, void, void))(v161 + 16);
      uint64_t v164 = v161 + 16;
      uint64_t v169 = v97;
      uint64_t v98 = (uint64_t)v134;
      uint64_t v99 = v150;
      v97(v134, v92, v150);
      uint64_t v100 = (int *)v135;
      *(void *)(v98 + *(int *)(v135 + 60)) = 14;
      *(void *)(v98 + v100[16]) = 1;
      *(void *)(v98 + v100[17]) = v94;
      uint64_t v101 = *(void **)(v96 + 8);
      uint64_t v161 = v96 + 8;
      v132 = v101;
      ((void (*)(char *, uint64_t))v101)(v92, v99);
      *(void *)(swift_allocObject() + 16) = 4;
      uint64_t v131 = sub_1DC88CF34(&qword_1EAA9FF60, &qword_1EAA9FEC0);
      sub_1DCB873D8();
      swift_release();
      sub_1DC901A64(v98, &qword_1EAA9FEC0);
      uint64_t v102 = *(uint64_t **)(v160 + 8);
      v160 += 8;
      v130 = v102;
      ((void (*)(char *, uint64_t))v102)(v95, v93);
      v103 = v144;
      sub_1DCB874A8();
      uint64_t v104 = sub_1DCB87CF8();
      *(void *)(v104 + 16) = 27;
      bzero((void *)(v104 + 32), 0xD8uLL);
      unint64_t v181 = v104;
      uint64_t v105 = v145;
      uint64_t v106 = v128;
      sub_1DCB874F8();
      swift_bridgeObjectRelease();
      v172(v103, v105);
      uint64_t v107 = v149;
      v108 = v148;
      sub_1DCB873D8();
      v109 = v107;
      uint64_t v110 = v107;
      uint64_t v111 = v150;
      v169(v98, v109, v150);
      *(void *)(v98 + v100[15]) = 28;
      *(void *)(v98 + v100[16]) = 1;
      *(void *)(v98 + v100[17]) = v106;
      ((void (*)(char *, uint64_t))v132)(v110, v111);
      *(void *)(swift_allocObject() + 16) = 9;
      sub_1DCB873D8();
      swift_release();
      sub_1DC901A64(v98, &qword_1EAA9FEC0);
      ((void (*)(char *, uint64_t))v130)(v108, v93);
      sub_1DC88CF34(&qword_1EAA9FF68, &qword_1EAA9FED8);
      v112 = v138;
      uint64_t v113 = v137;
      uint64_t v114 = v146;
      sub_1DCB873F8();
      sub_1DC87E988(&qword_1EAAA0190);
      sub_1DC88CF34(&qword_1EAA9FF70, &qword_1EAA9FEA8);
      uint64_t v115 = v139;
      uint64_t v116 = v142;
      sub_1DCB873D8();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v112, v116);
      sub_1DC88CF34(&qword_1EAA9FF78, &qword_1EAA9FEB0);
      uint64_t v117 = v143;
      uint64_t v118 = sub_1DCB873A8();
      (*(void (**)(char *, uint64_t))(v141 + 8))(v115, v117);
      uint64_t v119 = *(void (**)(char *, uint64_t))(v136 + 8);
      v119(v151, v113);
      v119(v162, v113);
      v120 = *(void (**)(char *, uint64_t))(v147 + 8);
      v121 = v114;
      uint64_t v122 = v118;
      uint64_t v123 = v163;
      v120(v121, v163);
      v120(v159, v123);
    }
    else
    {
      unint64_t v181 = (unint64_t)v73;
      sub_1DC87E988(&qword_1EAA9F2C8);
      sub_1DC88CF34(&qword_1EAA9F2D0, &qword_1EAA9F2C8);
      uint64_t v122 = sub_1DCB873A8();
    }
    uint64_t v63 = v175;
    unint64_t v181 = v122;
    swift_retain();
    sub_1DC87E988(&qword_1EAA9F2C8);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
    sub_1DC88CF34(&qword_1EAA9F2D0, &qword_1EAA9F2C8);
    v124 = v152;
    sub_1DCB873D8();
    swift_release();
    unint64_t v181 = 0;
    unint64_t v182 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v181 = 0xD00000000000001FLL;
    unint64_t v182 = 0x80000001DCB92620;
    sub_1DC913894(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v125 = v178;
    uint64_t v58 = v180;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    uint64_t v126 = v155;
    sub_1DCA25EAC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v153 + 8))(v124, v154);
    sub_1DC88CF34(&qword_1EAA9FF20, &qword_1EAA9FEA0);
    uint64_t v127 = v157;
    uint64_t v62 = sub_1DCB873A8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v156 + 8))(v126, v127);
    v167(v129, v177);
    uint64_t v57 = v125;
LABEL_7:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v179 + 8))(v57, v58);
    uint64_t *v63 = v62;
    return result;
  }
  uint64_t v43 = sub_1DC901A64((uint64_t)v33, qword_1EAA9CBC0);
  uint64_t v44 = v183;
  (*(void (**)(uint64_t))(v177 + 16))(v43);
  uint64_t v183 = v44;
  if (!v44)
  {
    uint64_t v50 = sub_1DC9E97AC();
    swift_release();
    unint64_t v181 = v50;
    sub_1DC87E988(&qword_1EAA9FF00);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
    sub_1DC88CF34(&qword_1EAA9FF08, &qword_1EAA9FF00);
    sub_1DCB873D8();
    swift_release();
    uint64_t v52 = v171;
    uint64_t v51 = v172;
    (*(void (**)(char *, void, void (*)(void, void)))(v171 + 104))(v19, *MEMORY[0x1E4F1A8F8], v172);
    uint64_t v53 = v19;
    uint64_t v54 = v170;
    *(void *)v170 = sub_1DC90FDA8;
    *((void *)v54 + 1) = 0;
    uint64_t v56 = v173;
    uint64_t v55 = v174;
    (*(void (**)(void (*)(double *@<X0>, void *@<X8>), void, uint64_t))(v173 + 104))(v54, *MEMORY[0x1E4F1A920], v174);
    sub_1DC88CF34(&qword_1EAA9FF10, &qword_1EAA9FEF0);
    sub_1DCB87478();
    (*(void (**)(void (*)(double *@<X0>, void *@<X8>), uint64_t))(v56 + 8))(v54, v55);
    (*(void (**)(char *, void))(v52 + 8))(v53, v51);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v26, v24);
    unint64_t v181 = 0;
    unint64_t v182 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v181 = 0xD00000000000001FLL;
    unint64_t v182 = 0x80000001DCB92620;
    sub_1DC913894(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v57 = v178;
    uint64_t v58 = v180;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    uint64_t v59 = v165;
    uint64_t v60 = v176;
    sub_1DCA25F8C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void))(v166 + 8))(v60, v167);
    sub_1DC88CF34(&qword_1EAA9FF18, &qword_1EAA9FEF8);
    uint64_t v61 = v169;
    uint64_t v62 = sub_1DCB873A8();
    (*(void (**)(char *, void (*)(void, void, void)))(v168 + 8))(v59, v61);
    uint64_t v63 = v175;
    goto LABEL_7;
  }
  uint64_t v46 = v179;
  uint64_t v45 = v180;
  uint64_t v47 = v178;
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v45);
}

uint64_t sub_1DC90F23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC88D0CC(a3);
  uint64_t v6 = sub_1DC9A805C(a1, a2);
  sub_1DC9139C0(a3);
  return v6;
}

uint64_t sub_1DC90F2C4()
{
  sub_1DC910B34();
  swift_allocError();
  *uint64_t v0 = 1;
  return swift_willThrow();
}

uint64_t sub_1DC90F314(uint64_t a1, uint64_t a2, const void *a3, uint64_t (*a4)(void *))
{
  uint64_t v39 = a2;
  uint64_t v36 = a1;
  uint64_t v33 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v7 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v31 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DCB870B8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAA9FFA0);
  uint64_t v28 = *(void *)(v16 - 8);
  uint64_t v29 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v32 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EAA9D208 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_1EAAA3E28;
  memcpy(__dst, a3, 0x41uLL);
  long long v38 = xmmword_1DCBBDDC0;
  sub_1DC882264((uint64_t)a3);
  uint64_t v18 = a4(__dst);
  sub_1DC88CABC((uint64_t)a3);
  if (!v4)
  {
    v26[1] = v18;
    __dst[0] = sub_1DC9A7A54();
    uint64_t v19 = *MEMORY[0x1E4F1A900];
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
    uint64_t v27 = v9;
    v20(v12, v19, v9);
    uint64_t v21 = v31;
    uint64_t v22 = v33;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v31, *MEMORY[0x1E4F1A918], v33);
    sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v22);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
    swift_release();
    sub_1DC87E988(&qword_1EAA9E860);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v23 = v32;
    uint64_t v24 = v35;
    sub_1DCB873D8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v24);
    uint64_t v7 = sub_1DC95CB94(v36, v39, v30);
    swift_release();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v29);
  }
  return v7;
}

uint64_t sub_1DC90F7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v19[0] = a4;
  uint64_t v7 = sub_1DC87E988(&qword_1EAA9FF80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DC87E988(&qword_1EAA9FF88);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = a3;
  sub_1DC87E988(&qword_1EAA9F2C8);
  sub_1DC87E988(&qword_1EAA9FF90);
  sub_1DC88CF34(&qword_1EAA9F2D0, &qword_1EAA9F2C8);
  sub_1DCB873D8();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = sub_1DC91199C;
  v14[4] = 0;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = sub_1DC913924;
  v15[3] = v14;
  v15[4] = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  uint64_t v16 = &v13[*(int *)(v11 + 52)];
  *(void *)uint64_t v16 = sub_1DC9F8560;
  *((void *)v16 + 1) = 0;
  uint64_t v17 = &v13[*(int *)(v11 + 56)];
  *(void *)uint64_t v17 = sub_1DC913968;
  *((void *)v17 + 1) = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1DC87E988(&qword_1EAAA0190);
  sub_1DC88CF34(&qword_1EAA9FF98, &qword_1EAA9FF88);
  sub_1DCB873B8();
  return sub_1DC901A64((uint64_t)v13, &qword_1EAA9FF88);
}

uint64_t sub_1DC90FAC8@<X0>(uint64_t *a1@<X8>)
{
  sub_1DC910B34();
  uint64_t result = swift_allocError();
  *a1 = result;
  *uint64_t v3 = 3;
  return result;
}

unint64_t sub_1DC90FB10@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC90FB28(a1, a2);
}

unint64_t sub_1DC90FB28@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t result = sub_1DC9637DC(0x636973756DLL, 0xE500000000000000), (v5 & 1) != 0))
  {
    *a2 = *(void *)(*(void *)(v3 + 56) + 8 * result);
  }
  else
  {
    sub_1DC910B34();
    swift_allocError();
    *uint64_t v6 = 4;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC90FBBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  swift_bridgeObjectRetain();
  sub_1DC8BF5A0(0x636973756DLL, 0xE500000000000000);
  sub_1DCA57ACC();
  return sub_1DCA57ACC();
}

id sub_1DC90FC50@<X0>(void *a1@<X8>)
{
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
  sub_1DC9618D8();
  id result = sub_1DC90FCAC();
  *a1 = result;
  return result;
}

id sub_1DC90FCAC()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v1 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithClassificationDictionary_, v1);

  return v2;
}

id sub_1DC90FD44@<X0>(void *a1@<X8>)
{
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
  type metadata accessor for AOPClassificationResult();
  sub_1DC9618D8();
  id result = sub_1DC90FCAC();
  *a1 = result;
  return result;
}

uint64_t sub_1DC90FDA8@<X0>(uint64_t *a1@<X8>)
{
  sub_1DC913974();
  uint64_t result = swift_allocError();
  *a1 = result;
  return result;
}

uint64_t run(_:)()
{
  sub_1DC8867A8();
  v0[14] = v1;
  v0[15] = v2;
  uint64_t v3 = type metadata accessor for RemoteRequest();
  v0[16] = v3;
  sub_1DC8BADF0(v3);
  v0[17] = swift_task_alloc();
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  sub_1DC8BADF0(v4);
  v0[18] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1DC8867A8();
  v0[10] = v1;
  v0[11] = type metadata accessor for RemoteRequest();
  v0[12] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1DC8867A8();
  v0[7] = v1;
  type metadata accessor for AccessibilitySoundActions.Session();
  v0[8] = swift_task_alloc();
  v0[9] = type metadata accessor for RemoteRequest();
  v0[10] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

{
  void *v0;
  const void *v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1DC8867A8();
  uint64_t v2 = v1;
  v0[34] = v3;
  uint64_t v4 = type metadata accessor for AccessibilitySoundRecognition.Session(0);
  sub_1DC8BADF0(v4);
  v0[35] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for RemoteRequest();
  v0[36] = v5;
  sub_1DC8BADF0(v5);
  v0[37] = swift_task_alloc();
  memcpy(v0 + 2, v2, 0xD1uLL);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC90FE9C()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  sub_1DC90A3F8(*(void *)(v0 + 120), v1);
  uint64_t v2 = sub_1DCB86A18();
  int v3 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v2);
  sub_1DC901A64(v1, qword_1EAA9CBC0);
  if (v3 == 1)
  {
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v5 = *(void *)(v0 + 120);
    *(void *)(v0 + 80) = &unk_1F37E2448;
    *(void *)(v0 + 88) = &off_1F37E2428;
    sub_1DC881A8C((void *)(v0 + 56), (uint64_t)&unk_1F37E2448);
    sub_1DC90B174(v5, v4);
    swift_storeEnumTagMultiPayload();
    uint64_t v6 = (void *)sub_1DC8BAA00();
    *(void *)(v0 + 152) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1DC910128;
    uint64_t v7 = *(void *)(v0 + 136);
    return v17(v0 + 96, v7);
  }
  else
  {
    if (qword_1EAA9D1C8 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)qword_1EAAFF880;
    if (byte_1EAAFF8A8)
    {
      *(void *)(v0 + 104) = qword_1EAAFF880;
      id v10 = v9;
      sub_1DC87E988(&qword_1EAA9DF60);
      swift_willThrowTypedImpl();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1DC8BA978();
    }
    else
    {
      uint64_t v12 = qword_1EAAFF888;
      char v11 = qword_1EAAFF890;
      uint64_t v13 = qword_1EAAFF898;
      uint64_t v14 = qword_1EAAFF8A0;
      uint64_t v15 = *(void *)(v0 + 120);
      *(void *)(v0 + 16) = qword_1EAAFF880;
      *(void *)(v0 + 24) = v12;
      *(unsigned char *)(v0 + 32) = v11 & 1;
      *(void *)(v0 + 40) = v13;
      *(void *)(v0 + 48) = v14;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1DC90B748(v15, &v18);
      swift_release();
      swift_release();
      swift_release();
      **(void **)(v0 + 112) = v18;
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1DC8BAB84();
    }
    return v16();
  }
}

uint64_t sub_1DC910128()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88678C();
  *int v3 = v2;
  *(void *)(v4 + 160) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DC910208()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void *)(v0 + 96);
  sub_1DC910328(*(void *)(v0 + 136), (void (*)(void))type metadata accessor for RemoteRequest);
  sub_1DC8818D0(v0 + 56);
  **(void **)(v0 + 112) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v2();
}

uint64_t sub_1DC91029C()
{
  sub_1DC8867A8();
  sub_1DC910328(*(void *)(v0 + 136), (void (*)(void))type metadata accessor for RemoteRequest);
  sub_1DC8818D0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC910328(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1DC88819C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t run(_:file:)()
{
  sub_1DC8867A8();
  v0[12] = v1;
  v0[13] = v2;
  v0[11] = v3;
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  sub_1DC8BADF0(v4);
  v0[14] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DC91040C()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[14];
  sub_1DC90A3F8(v0[12], v1);
  uint64_t v2 = sub_1DCB86A18();
  int v3 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v2);
  sub_1DC901A64(v1, qword_1EAA9CBC0);
  if (v3 == 1)
  {
    sub_1DC910B34();
    swift_allocError();
    unsigned char *v4 = 2;
    swift_willThrow();
    swift_task_dealloc();
    sub_1DC8BA978();
  }
  else
  {
    sub_1DC9106B8(v0[13], v19);
    uint64_t v18 = v0[12];
    uint64_t v5 = v19[0];
    uint64_t v17 = v19[1];
    uint64_t v6 = v19[2];
    uint64_t v7 = v19[3];
    uint64_t v9 = v19[4];
    uint64_t v8 = v19[5];
    uint64_t v10 = v19[6];
    uint64_t v11 = v19[7];
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v5;
    v12[3] = v17;
    v12[4] = v6;
    v12[5] = v7;
    v12[6] = v9;
    v12[7] = v8;
    v12[8] = v10;
    v12[9] = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1DC911C48;
    *(void *)(v13 + 24) = v12;
    v0[9] = &unk_1F37F2778;
    v0[10] = &off_1F37F2758;
    v0[2] = sub_1DC911C9C;
    v0[3] = v13;
    v0[4] = sub_1DC90F2C4;
    v0[5] = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC90D6C0(v18, (uint64_t)(v0 + 2), v19);
    uint64_t v16 = (void *)v0[11];
    sub_1DC901A64((uint64_t)(v0 + 2), &qword_1EAA9FDB8);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *uint64_t v16 = v19[0];
    swift_task_dealloc();
    sub_1DC8BAB84();
  }
  return v14();
}

id sub_1DC9106B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_1DC87E988(&qword_1EAA9FFB0);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1DC87E988(&qword_1EAA9FFB8);
  MEMORY[0x1F4188790](v39);
  uint64_t v34 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC87E988(&qword_1EAA9FFC0);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DCB86A18();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v16 = a1;
  v15((char *)&v34 - v13, a1, v8);
  id v17 = objc_allocWithZone(MEMORY[0x1E4F15390]);
  uint64_t v18 = v46;
  id result = sub_1DCABBC54((uint64_t)v14, 1, 0);
  if (!v18)
  {
    uint64_t v20 = result;
    uint64_t v46 = 0;
    id v21 = objc_msgSend(result, sel_processingFormat);

    v15(v12, v16, v8);
    unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v23 = (v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v24 + v22, v12, v8);
    *(void *)(v24 + v23) = v21;
    uint64_t v43 = sub_1DC8E6CB4;
    uint64_t v44 = v24;
    uint64_t v45 = 2048;
    sub_1DC913ACC();
    id v25 = v21;
    uint64_t v26 = v35;
    sub_1DCB87AE8();
    swift_release();
    uint64_t v28 = v37;
    uint64_t v27 = v38;
    uint64_t v29 = (uint64_t)v34;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v26, v38);
    uint64_t v30 = v39;
    uint64_t v31 = (void *)(v29 + *(int *)(v39 + 52));
    *uint64_t v31 = sub_1DC9EAB14;
    v31[1] = 0;
    uint64_t v32 = (void *)(v29 + *(int *)(v30 + 56));
    void *v32 = sub_1DCACBC38;
    v32[1] = 0;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    sub_1DC87E988(&qword_1EAA9DF60);
    sub_1DC88CF34(&qword_1EAA9FFD0, &qword_1EAA9FFB8);
    uint64_t v33 = v36;
    sub_1DCB87548();
    sub_1DC901A64(v29, &qword_1EAA9FFB8);
    sub_1DCA8ABA4(v25, v42);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v33, v41);
  }
  return result;
}

unint64_t sub_1DC910B34()
{
  unint64_t result = qword_1EAA9FDB0;
  if (!qword_1EAA9FDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9FDB0);
  }
  return result;
}

char *sub_1DC910B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(long long *))
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  uint64_t v6 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1DCB870B8();
  uint64_t v9 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAA9FFA0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v27 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v35 = xmmword_1DCBBDDC0;
  uint64_t v18 = a4(&v35);
  if (!v4)
  {
    uint64_t v25 = v16;
    uint64_t v26 = v15;
    v24[1] = v18;
    *(void *)&long long v35 = sub_1DC9A7A54();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F1A900], v36);
    uint64_t v20 = v28;
    uint64_t v19 = v29;
    (*(void (**)(char *, void, uint64_t))(v28 + 104))(v8, *MEMORY[0x1E4F1A918], v29);
    sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v36);
    swift_release();
    sub_1DC87E988(&qword_1EAA9E860);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    id v21 = v27;
    uint64_t v22 = v31;
    sub_1DCB873D8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v22);
    uint64_t v14 = (char *)sub_1DC95CB94(v32, v33, v34);
    swift_release();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
  }
  return v14;
}

uint64_t sub_1DC910FD4()
{
  return sub_1DC90A00C();
}

uint64_t sub_1DC910FF8()
{
  return sub_1DC909F78();
}

uint64_t sub_1DC91101C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC911038(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC911068()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC911070(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = a1;
  swift_bridgeObjectRetain();
  sub_1DC9110F4(&v4);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v4 + 16) > a2)
  {
    return swift_release();
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DC9110F4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1DC8AEB8C();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1DC911160(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1DC911160(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DCB88F88();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1DC911744(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1DCA07978(v3 / 2);
  v85 = a1;
  uint64_t v86 = result;
  uint64_t v90 = v6;
  uint64_t v88 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v28 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_90:
    if (v28 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v88 >= -1)
      {
        *(void *)(v86 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v78 = *v85;
    while (1)
    {
      unint64_t v79 = v28 - 2;
      if (v28 < 2) {
        break;
      }
      if (!v78) {
        goto LABEL_133;
      }
      uint64_t v80 = *(void *)(v9 + 32 + 16 * v79);
      uint64_t v81 = *(void *)(v9 + 32 + 16 * (v28 - 1) + 8);
      uint64_t result = sub_1DC91179C((char *)(v78 + 8 * v80), (char *)(v78 + 8 * *(void *)(v9 + 32 + 16 * (v28 - 1))), v78 + 8 * v81, v90);
      if (v1) {
        goto LABEL_86;
      }
      if (v81 < v80) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DC9756D8(v9);
        uint64_t v9 = result;
      }
      if (v79 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      v82 = (void *)(v9 + 32 + 16 * v79);
      void *v82 = v80;
      v82[1] = v81;
      unint64_t v83 = *(void *)(v9 + 16);
      if (v28 > v83) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v28 - 1)), (const void *)(v9 + 32 + 16 * v28), 16 * (v83 - v28));
      *(void *)(v9 + 16) = v83 - 1;
      unint64_t v28 = v83 - 1;
      if (v83 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v84 = *a1 - 8;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v87 = v5;
  uint64_t v89 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      double v11 = *(double *)(v8 + 8 * v7);
      double v12 = *(double *)(v8 + 8 * v10);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        double v13 = v11;
        while (1)
        {
          double v14 = v13;
          double v13 = *(double *)(v8 + 8 * v7);
          if (v11 < v12 == v13 >= v14) {
            break;
          }
          if (++v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v15 = (uint64_t *)(v84 + 8 * v7);
          uint64_t v16 = v7;
          uint64_t v17 = v10;
          uint64_t v18 = (uint64_t *)(v8 + 8 * v10);
          do
          {
            if (v17 != --v16)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v19 = *v18;
              *uint64_t v18 = *v15;
              *uint64_t v15 = v19;
            }
            ++v17;
            --v15;
            ++v18;
          }
          while (v17 < v16);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v20 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v20 >= v3) {
          uint64_t v20 = v3;
        }
        if (v20 < v10) {
          goto LABEL_128;
        }
        if (v7 != v20)
        {
          id v21 = (double *)(v84 + 8 * v7);
          do
          {
            double v22 = *(double *)(v8 + 8 * v7);
            uint64_t v23 = v10;
            uint64_t v24 = v21;
            do
            {
              double v25 = *v24;
              if (v22 >= *v24) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              *uint64_t v24 = v22;
              v24[1] = v25;
              --v24;
              ++v23;
            }
            while (v7 != v23);
            ++v7;
            ++v21;
          }
          while (v7 != v20);
          uint64_t v7 = v20;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DC9755E0(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v27 = *(void *)(v9 + 16);
    unint64_t v26 = *(void *)(v9 + 24);
    unint64_t v28 = v27 + 1;
    uint64_t v8 = v89;
    if (v27 >= v26 >> 1)
    {
      uint64_t result = (uint64_t)sub_1DC9755E0((char *)(v26 > 1), v27 + 1, 1, (char *)v9);
      uint64_t v8 = v89;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v28;
    uint64_t v29 = v9 + 32;
    uint64_t v30 = (uint64_t *)(v9 + 32 + 16 * v27);
    *uint64_t v30 = v10;
    v30[1] = v7;
    if (v27) {
      break;
    }
    unint64_t v28 = 1;
LABEL_81:
    uint64_t v5 = v87;
    uint64_t v3 = v88;
    if (v7 >= v88) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v31 = v28 - 1;
    if (v28 >= 4)
    {
      unint64_t v36 = v29 + 16 * v28;
      uint64_t v37 = *(void *)(v36 - 64);
      uint64_t v38 = *(void *)(v36 - 56);
      BOOL v42 = __OFSUB__(v38, v37);
      uint64_t v39 = v38 - v37;
      if (v42) {
        goto LABEL_107;
      }
      uint64_t v41 = *(void *)(v36 - 48);
      uint64_t v40 = *(void *)(v36 - 40);
      BOOL v42 = __OFSUB__(v40, v41);
      uint64_t v34 = v40 - v41;
      char v35 = v42;
      if (v42) {
        goto LABEL_108;
      }
      unint64_t v43 = v28 - 2;
      uint64_t v44 = (uint64_t *)(v29 + 16 * (v28 - 2));
      uint64_t v46 = *v44;
      uint64_t v45 = v44[1];
      BOOL v42 = __OFSUB__(v45, v46);
      uint64_t v47 = v45 - v46;
      if (v42) {
        goto LABEL_109;
      }
      BOOL v42 = __OFADD__(v34, v47);
      uint64_t v48 = v34 + v47;
      if (v42) {
        goto LABEL_111;
      }
      if (v48 >= v39)
      {
        uint64_t v66 = (uint64_t *)(v29 + 16 * v31);
        uint64_t v68 = *v66;
        uint64_t v67 = v66[1];
        BOOL v42 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v42) {
          goto LABEL_117;
        }
        BOOL v59 = v34 < v69;
        goto LABEL_70;
      }
    }
    else
    {
      if (v28 != 3)
      {
        uint64_t v60 = *(void *)(v9 + 32);
        uint64_t v61 = *(void *)(v9 + 40);
        BOOL v42 = __OFSUB__(v61, v60);
        uint64_t v53 = v61 - v60;
        char v54 = v42;
        goto LABEL_64;
      }
      uint64_t v33 = *(void *)(v9 + 32);
      uint64_t v32 = *(void *)(v9 + 40);
      BOOL v42 = __OFSUB__(v32, v33);
      uint64_t v34 = v32 - v33;
      char v35 = v42;
    }
    if (v35) {
      goto LABEL_110;
    }
    unint64_t v43 = v28 - 2;
    uint64_t v49 = (uint64_t *)(v29 + 16 * (v28 - 2));
    uint64_t v51 = *v49;
    uint64_t v50 = v49[1];
    BOOL v52 = __OFSUB__(v50, v51);
    uint64_t v53 = v50 - v51;
    char v54 = v52;
    if (v52) {
      goto LABEL_112;
    }
    uint64_t v55 = (uint64_t *)(v29 + 16 * v31);
    uint64_t v57 = *v55;
    uint64_t v56 = v55[1];
    BOOL v42 = __OFSUB__(v56, v57);
    uint64_t v58 = v56 - v57;
    if (v42) {
      goto LABEL_114;
    }
    if (__OFADD__(v53, v58)) {
      goto LABEL_116;
    }
    if (v53 + v58 >= v34)
    {
      BOOL v59 = v34 < v58;
LABEL_70:
      if (v59) {
        unint64_t v31 = v43;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v54) {
      goto LABEL_113;
    }
    uint64_t v62 = (uint64_t *)(v29 + 16 * v31);
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    BOOL v42 = __OFSUB__(v63, v64);
    uint64_t v65 = v63 - v64;
    if (v42) {
      goto LABEL_115;
    }
    if (v65 < v53) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v70 = v9;
    unint64_t v71 = v31 - 1;
    if (v31 - 1 >= v28)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    uint64_t v72 = (uint64_t *)(v29 + 16 * v71);
    uint64_t v73 = *v72;
    uint64_t v74 = v29;
    uint64_t v75 = (void *)(v29 + 16 * v31);
    uint64_t v76 = v75[1];
    uint64_t result = sub_1DC91179C((char *)(v8 + 8 * *v72), (char *)(v8 + 8 * *v75), v8 + 8 * v76, v90);
    if (v1) {
      break;
    }
    if (v76 < v73) {
      goto LABEL_104;
    }
    if (v31 > *(void *)(v70 + 16)) {
      goto LABEL_105;
    }
    *uint64_t v72 = v73;
    *(void *)(v74 + 16 * v71 + 8) = v76;
    unint64_t v77 = *(void *)(v70 + 16);
    if (v31 >= v77) {
      goto LABEL_106;
    }
    uint64_t v9 = v70;
    unint64_t v28 = v77 - 1;
    uint64_t result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v31));
    uint64_t v29 = v74;
    *(void *)(v70 + 16) = v77 - 1;
    uint64_t v8 = v89;
    if (v77 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v88 < -1) {
    goto LABEL_125;
  }
  *(void *)(v86 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC911744(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      double v6 = *(double *)(v4 + 8 * a3);
      uint64_t v7 = result;
      uint64_t v8 = (double *)v5;
      do
      {
        double v9 = *v8;
        if (v6 >= *v8) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        double *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1DC91179C(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  double v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 8;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_1DC8973E0(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    double v12 = &v4[8 * v11];
    if (v7 >= v6 || v10 < 8) {
      goto LABEL_39;
    }
    uint64_t v18 = (double *)(a3 - 8);
    while (1)
    {
      uint64_t v19 = (char *)(v18 + 1);
      double v20 = *((double *)v6 - 1);
      if (*((double *)v12 - 1) >= v20)
      {
        BOOL v22 = v19 != v12 || v18 >= (double *)v12;
        double v20 = *((double *)v12 - 1);
        v12 -= 8;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= (double *)v6;
        v6 -= 8;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *uint64_t v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_1DC8973E0(a1, (a2 - a1) / 8, a4);
  double v12 = &v4[8 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      double v14 = *(double *)v6;
      if (*(double *)v6 < *(double *)v4) {
        break;
      }
      double v14 = *(double *)v4;
      BOOL v15 = v7 == v4;
      v4 += 8;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      v7 += 8;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    BOOL v15 = v7 == v6;
    v6 += 8;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    *(double *)uint64_t v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  double v6 = v7;
LABEL_39:
  sub_1DC8973E0(v4, (v12 - v4) / 8, v6);
  return 1;
}

uint64_t sub_1DC911918@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_1DC911070(*a1, a2);
  *a3 = v5;
  return result;
}

void sub_1DC911944(double *a1@<X0>, void *a2@<X8>)
{
  sub_1DC945964(*a1);
  *a2 = v3;
}

uint64_t sub_1DC911970@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC91101C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC91199C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC911038(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1DC9119D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC911068();
  *a1 = result;
  return result;
}

uint64_t sub_1DC911A00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t *__return_ptr, void *, uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_1DC9C4C08(*a1, a1[1], a2, a3, a4, a5);
  *a6 = result;
  a6[1] = v8;
  return result;
}

void *sub_1DC911A44@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *(*a3)(uint64_t *__return_ptr, void *, void, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t result = sub_1DC9C4A54(*a1, a1[1], a2, a3, a4, a5);
  *a6 = result;
  a6[1] = v8;
  return result;
}

uint64_t sub_1DC911A84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAC4724(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC911AB8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC90A118(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC911AEC()
{
  return sub_1DC90A164();
}

uint64_t sub_1DC911B08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAC4784(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC911B38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC90A140();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DC911B68()
{
  return sub_1DC910FF8();
}

uint64_t sub_1DC911B84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC910FD4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DC911BB4(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  long long v3 = a3[1];
  v6[0] = *a3;
  v6[1] = v3;
  long long v4 = a3[3];
  uint64_t v6[2] = a3[2];
  _OWORD v6[3] = v4;
  return sub_1DC90F23C(a1, a2, (uint64_t)v6);
}

uint64_t sub_1DC911BE8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC911C48(uint64_t a1, uint64_t a2)
{
  return sub_1DC911BB4(a1, a2, (_OWORD *)(v2 + 16));
}

uint64_t sub_1DC911C64()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC911C9C(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1DC911CCC()
{
  return sub_1DC913894(&qword_1EAA9FDC0, (void (*)(uint64_t))type metadata accessor for AOPClassificationDemo.Request);
}

void type metadata accessor for AOPClassificationDemo()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for AOPClassificationDemo.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DCB86A18();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_1DC87E988(qword_1EAA9CBC0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for AOPClassificationDemo.Request(uint64_t a1)
{
  uint64_t v2 = sub_1DCB86A18();
  uint64_t result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v2);
  if (!result)
  {
    long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for AOPClassificationDemo.Request(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_1DC87E988(qword_1EAA9CBC0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for AOPClassificationDemo.Request(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  int v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_1DC87E988(qword_1EAA9CBC0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for AOPClassificationDemo.Request(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_1DC87E988(qword_1EAA9CBC0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for AOPClassificationDemo.Request(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86A18();
  int v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_1DC87E988(qword_1EAA9CBC0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for AOPClassificationDemo.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DC912354);
}

uint64_t sub_1DC912354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC87E988(qword_1EAA9CBC0);
  sub_1DC913CA0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for AOPClassificationDemo.Request(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DC912408);
}

void sub_1DC912408(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DC87E988(qword_1EAA9CBC0);
  sub_1DC913CA0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

void sub_1DC912494()
{
  sub_1DC912528();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DC912528()
{
  if (!qword_1EAA9FDE0[0])
  {
    sub_1DCB86A18();
    unint64_t v0 = sub_1DCB88718();
    if (!v1) {
      atomic_store(v0, qword_1EAA9FDE0);
    }
  }
}

void type metadata accessor for AOPClassificationDemo.Session()
{
}

uint64_t sub_1DC91258C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 72);
}

uint64_t sub_1DC912594()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DC91267C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  uint64_t v11 = *(void *)(v7 + 64) + 7;
  unsigned int v12 = v8 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v13 = (*(_DWORD *)(v5 + 80) | v8) & 0x100000;
  if (v12 > 7
    || v13 != 0
    || ((((((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    long long v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v6);
    uint64_t v19 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    double v20 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    BOOL v22 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = v23[1];
    *BOOL v22 = *v23;
    v22[1] = v24;
    unint64_t v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = *(void *)(v26 + 24);
    *(void *)(v25 + 24) = v27;
    *(void *)(v25 + 32) = *(void *)(v26 + 32);
    unint64_t v28 = **(void (***)(unint64_t, unint64_t, uint64_t))(v27 - 8);
    swift_retain();
    swift_retain();
    v28(v25, v26, v27);
  }
  return v4;
}

uint64_t sub_1DC9128B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  unint64_t v9 = (*(void *)(v7 + 56) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();

  return sub_1DC8818D0((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1DC91298C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  BOOL v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *BOOL v15 = *v16;
  v15[1] = v17;
  unint64_t v18 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = v19[1];
  *unint64_t v18 = *v19;
  v18[1] = v20;
  unint64_t v21 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)(v22 + 24);
  *(void *)(v21 + 24) = v23;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  uint64_t v24 = **(void (***)(unint64_t, unint64_t, uint64_t))(v23 - 8);
  swift_retain();
  swift_retain();
  v24(v21, v22, v23);
  return a1;
}

uint64_t sub_1DC912AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  BOOL v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *BOOL v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  unint64_t v18 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = v19[1];
  *unint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  sub_1DC912C14((uint64_t *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t *sub_1DC912C14(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1DC912E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  unint64_t v15 = v14 + v12;
  uint64_t v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  v15 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v15 = *v16;
  uint64_t v17 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (_OWORD *)((v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v18 = *v17;
  unint64_t v19 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v22 = *(_OWORD *)v20;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(_OWORD *)unint64_t v19 = v22;
  *(_OWORD *)(v19 + 16) = v21;
  return a1;
}

uint64_t sub_1DC912F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 23;
  *unint64_t v15 = *(_OWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v18 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 &= 0xFFFFFFFFFFFFFFF8;
  *unint64_t v18 = *(_OWORD *)v17;
  swift_release();
  unint64_t v19 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_1DC8818D0(v19);
  long long v21 = *(_OWORD *)v20;
  long long v22 = *(_OWORD *)(v20 + 16);
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  *(_OWORD *)unint64_t v19 = v21;
  *(_OWORD *)(v19 + 16) = v22;
  return a1;
}

uint64_t sub_1DC913054(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= v6) {
    unsigned int v9 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v9;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  if (v11 < a2)
  {
    unint64_t v14 = ((((((v13 + (v12 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 40;
    unsigned int v15 = a2 - v11;
    uint64_t v16 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = v15 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v14);
        if (!v20) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v20) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC913220);
      case 4:
        int v20 = *(int *)((char *)a1 + v14);
        if (!v20) {
          break;
        }
LABEL_25:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v11 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v6 == v11)
  {
    uint64_t v8 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
    uint64_t v4 = v5;
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v8, v4);
  }
  a1 = (int *)(((unint64_t)a1 + v12) & ~v10);
  if (v8 == v11) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v8, v4);
  }
  unint64_t v24 = *(void *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void sub_1DC913234(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  uint64_t v15 = v14 & ~v13;
  uint64_t v16 = *(void *)(*(void *)(v9 - 8) + 64) + 7;
  unint64_t v17 = ((((((v16 + v15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v12 >= a3)
  {
    int v21 = 0;
  }
  else
  {
    unsigned int v18 = a3 - v12;
    if (((((((v16 + v15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      unsigned int v19 = v18 + 1;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
  }
  if (a2 > v12)
  {
    if (((((((v16 + v15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v22 = a2 - v12;
    }
    else {
      int v22 = 1;
    }
    if (((((((v16 + v15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v23 = ~v12 + a2;
      bzero(a1, ((((((v16 + v15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 40);
      *unsigned int v6 = v23;
    }
    switch(v21)
    {
      case 1:
        *((unsigned char *)v6 + v17) = v22;
        return;
      case 2:
        *(_WORD *)((char *)v6 + v17) = v22;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)((char *)v6 + v17) = v22;
        return;
      default:
        return;
    }
  }
  switch(v21)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1DC91349CLL);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (!a2) {
        return;
      }
LABEL_34:
      if (v8 == v12) {
        goto LABEL_37;
      }
      a1 = (char *)((unint64_t)&a1[v14] & ~v13);
      if (v11 == v12)
      {
        uint64_t v8 = v11;
        uint64_t v7 = v9;
LABEL_37:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v8, v7);
      }
      else
      {
        unint64_t v24 = (void *)((unint64_t)&a1[v16] & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0)
        {
          uint64_t v25 = a2 ^ 0x80000000;
          v24[1] = 0;
        }
        else
        {
          uint64_t v25 = (a2 - 1);
        }
        *unint64_t v24 = v25;
      }
      return;
  }
}

uint64_t type metadata accessor for AOPClassificationDemo.DistilledEnvironment()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_1DC9134DC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9135A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for AOPClassificationDemo.DomainError()
{
}

unsigned char *storeEnumTagSinglePayload for AOPClassificationDemo.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9136A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AOPClassificationDemo.Request.CodingKeys()
{
  return &type metadata for AOPClassificationDemo.Request.CodingKeys;
}

unint64_t sub_1DC9136E4()
{
  unint64_t result = qword_1EAA9FE68;
  if (!qword_1EAA9FE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9FE68);
  }
  return result;
}

unint64_t sub_1DC913734()
{
  unint64_t result = qword_1EAA9FE70;
  if (!qword_1EAA9FE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9FE70);
  }
  return result;
}

unint64_t sub_1DC913784()
{
  unint64_t result = qword_1EAA9FE78;
  if (!qword_1EAA9FE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9FE78);
  }
  return result;
}

unint64_t sub_1DC9137D4()
{
  unint64_t result = qword_1EAA9FE80;
  if (!qword_1EAA9FE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAA9FE80);
  }
  return result;
}

unint64_t sub_1DC913820()
{
  unint64_t result = qword_1EAA9FE98;
  if (!qword_1EAA9FE98)
  {
    sub_1DC8863A8(&qword_1EAA9FE90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9FE98);
  }
  return result;
}

uint64_t sub_1DC913894(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC9138E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC911918(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DC9138EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC913924@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1DC911A00(a1, a2, a3, *(void *)(v4 + 16), *(void (**)(uint64_t *__return_ptr, void *, uint64_t))(v4 + 24), a4);
}

uint64_t sub_1DC913930()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_1DC913968@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1DC911A44(a1, a2, *(void *(**)(uint64_t *__return_ptr, void *, void, uint64_t))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a3);
}

unint64_t sub_1DC913974()
{
  unint64_t result = qword_1EAA9FFA8;
  if (!qword_1EAA9FFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9FFA8);
  }
  return result;
}

uint64_t sub_1DC9139C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC913A30()
{
  sub_1DCB86A18();
  sub_1DC88819C();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  return swift_deallocObject();
}

unint64_t sub_1DC913ACC()
{
  unint64_t result = qword_1EAA9FFC8;
  if (!qword_1EAA9FFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9FFC8);
  }
  return result;
}

uint64_t sub_1DC913B1C(void *a1)
{
  return sub_1DC90B974(a1);
}

uint64_t sub_1DC913B3C()
{
  return sub_1DC90BA14();
}

uint64_t sub_1DC913B5C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC913BAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC911B84(a1);
}

uint64_t sub_1DC913BD4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC911B08(a1, a2);
}

uint64_t sub_1DC913BF4()
{
  return sub_1DC911B68();
}

uint64_t sub_1DC913C10@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC911B38(a1);
}

uint64_t sub_1DC913C38()
{
  return sub_1DC911AEC();
}

uint64_t sub_1DC913C54@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC911AB8(a1, a2);
}

uint64_t sub_1DC913C7C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC911A84(a1, a2);
}

__n128 sub_1DC913CB8(uint64_t a1)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 32) = v3;
  *(void *)(a1 + 48) = *(void *)(v1 + 32);
  return result;
}

uint64_t sub_1DC913CCC()
{
  return v0;
}

uint64_t sub_1DC913CE0(uint64_t a1)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v1);
}

uint64_t sub_1DC913D00()
{
  sub_1DC881A8C(v0, v0[3]);
  return sub_1DCB866A8();
}

uint64_t sub_1DC913D44()
{
  sub_1DC881A8C(v0, v0[3]);
  return sub_1DC913DD0();
}

uint64_t sub_1DC913DD0()
{
  return sub_1DCB86698();
}

uint64_t sub_1DC913E28()
{
  return sub_1DC913D44();
}

uint64_t sub_1DC913E4C(uint64_t a1, uint64_t a2, uint64_t (*a3)())
{
  return a3();
}

uint64_t sub_1DC913F08(uint64_t a1, uint64_t a2)
{
  return sub_1DC913E4C(a1, a2, *(uint64_t (**)())(v2 + 48));
}

uint64_t sub_1DC913F30(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *sub_1DC913F88(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t sub_1DC913FB0(uint64_t a1, uint64_t a2)
{
  sub_1DC8818D0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_1DC913FEC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DC91402C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AnyAccelerateBuffer()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC91408C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      uint64_t v16 = a3;
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x1E01A7AE0](v6, a1);
LABEL_7:
        uint64_t v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_23;
        }
        uint64_t v10 = sub_1DCB2C678(v7);
        if (v11)
        {
          if (v10 == a2 && v11 == a3)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v13 = sub_1DCB89018();
            swift_bridgeObjectRelease();
            if ((v13 & 1) == 0)
            {

LABEL_18:
              a3 = v16;
              goto LABEL_19;
            }
          }
          sub_1DCB88B48();
          sub_1DCB88B78();
          sub_1DCB88B88();
          sub_1DCB88B58();
          goto LABEL_18;
        }

LABEL_19:
        ++v6;
        if (v9 == v5)
        {
          uint64_t v14 = v18;
          goto LABEL_26;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      uint64_t v5 = sub_1DCB88CC8();
      if (!v5) {
        goto LABEL_25;
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_7;
  }
LABEL_25:
  uint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1DC914230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC91424C);
}

uint64_t sub_1DC91424C()
{
  sub_1DC886900();
  uint64_t v2 = v0[12];
  uint64_t v1 = (void *)v0[13];
  uint64_t v3 = v0[11];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_1DC9142FC;
  uint64_t v4 = swift_continuation_init();
  sub_1DC914408(v4, v3, v2, v1);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DC9142FC()
{
  sub_1DC886900();
  sub_1DC9169D4();
  sub_1DC88679C();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  *uint64_t v2 = *v0;
  if (*(void *)(v4 + 48))
  {
    swift_willThrow();
    sub_1DC916A20();
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + 80);
    uint64_t v8 = *(uint64_t (**)(uint64_t))(v3 + 8);
    return v8(v7);
  }
}

void sub_1DC914408(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F5E118]), sel_init);
  sub_1DC916630(a2, a3, v8);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  v11[4] = sub_1DC916808;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  void v11[2] = sub_1DC914610;
  v11[3] = &unk_1F37FAE18;
  uint64_t v10 = _Block_copy(v11);
  swift_release();
  objc_msgSend(v8, sel_setCompletionHandler_, v10);
  _Block_release(v10);
  objc_msgSend(a4, sel_performQuery_, v8);
}

uint64_t sub_1DC914530(void *a1, void *a2, uint64_t a3)
{
  uint64_t result = sub_1DCB87F08();
  if ((result & 1) == 0)
  {
    if (a1)
    {
      **(void **)(*(void *)(a3 + 64) + 40) = a1;
      id v7 = a1;
      return swift_continuation_throwingResume();
    }
    else if (a2)
    {
      sub_1DC87E988(&qword_1EAA9DF60);
      swift_allocError();
      void *v8 = a2;
      id v9 = a2;
      return swift_continuation_throwingResumeWithError();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1DC914610(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1DC91469C(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC9146B4);
}

uint64_t sub_1DC9146B4()
{
  sub_1DC886900();
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 2;
  uint64_t v4 = v0 + 10;
  uint64_t v5 = v0 + 16;
  id v6 = (void *)v0[17];
  v1[2] = v2;
  v1[7] = v5;
  v1[3] = sub_1DC9147F8;
  uint64_t v7 = swift_continuation_init();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  v1[14] = sub_1DC9167BC;
  v1[15] = v8;
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 1107296256;
  v1[12] = sub_1DC9149E8;
  v1[13] = &unk_1F37FAC60;
  id v9 = _Block_copy(v4);
  swift_release();
  objc_msgSend(v6, sel_getIdentitiesWithCompletion_, v9);
  _Block_release(v9);
  return MEMORY[0x1F41881E8](v3);
}

uint64_t sub_1DC9147F8()
{
  sub_1DC886900();
  sub_1DC9169D4();
  sub_1DC88679C();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  *uint64_t v2 = *v0;
  if (*(void *)(v4 + 48))
  {
    swift_willThrow();
    sub_1DC916A20();
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + 128);
    uint64_t v8 = *(uint64_t (**)(uint64_t))(v3 + 8);
    return v8(v7);
  }
}

uint64_t sub_1DC914904(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result = sub_1DCB87F08();
  if ((result & 1) == 0)
  {
    if (a1)
    {
      **(void **)(*(void *)(a3 + 64) + 40) = a1;
      swift_bridgeObjectRetain();
      return swift_continuation_throwingResume();
    }
    else if (a2)
    {
      sub_1DC87E988(&qword_1EAA9DF60);
      swift_allocError();
      *uint64_t v7 = a2;
      id v8 = a2;
      return swift_continuation_throwingResumeWithError();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1DC9149E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1DC9167C4();
    uint64_t v4 = sub_1DCB87C38();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC914A7C()
{
  sub_1DC8867A8();
  uint64_t v2 = v1;
  v0[3] = v3;
  v0[4] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1DC914B10;
  return sub_1DC91469C(v2);
}

uint64_t sub_1DC914B10()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *id v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  void *v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 56) = v3;
    return MEMORY[0x1F4188298](sub_1DC914C30, 0, 0);
  }
}

uint64_t sub_1DC914C30()
{
  unint64_t v1 = v0[7];
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1DC91408C(v1, v3, v2);
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
    if (v6 == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1DCB88CC8();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_3;
      }
      swift_bridgeObjectRelease();
      __break(1u);
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6 == 1)
    {
LABEL_3:
      sub_1DC8A42E0(0, (v5 & 0xC000000000000001) == 0, v5);
      if ((v5 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1E01A7AE0](0, v5);
      }
      else {
        id v7 = *(id *)(v5 + 32);
      }
      id v8 = v7;
      swift_bridgeObjectRelease();
      uint64_t v9 = (uint64_t (*)(id))v0[1];
      return v9(v8);
    }
  }
  type metadata accessor for SNError();
  sub_1DCB88A98();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  v0[2] = v6;
  sub_1DCB88F98();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  unint64_t v12 = sub_1DC8F65D8();
  sub_1DCA14B2C(v12, v13, v14, v15, v16, 0x80000001DCB926B0);
  swift_bridgeObjectRelease();
  swift_willThrow();
  unint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1DC914EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  return sub_1DC8BA8F8((uint64_t)sub_1DC914EC0);
}

uint64_t sub_1DC914EC0()
{
  unint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_1DC914F94;
  uint64_t v2 = swift_continuation_init();
  sub_1DC9150A0(v2, v1);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DC914F94()
{
  sub_1DC886900();
  sub_1DC9169D4();
  sub_1DC88679C();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  *uint64_t v2 = *v0;
  if (*(void *)(v4 + 48))
  {
    swift_willThrow();
    sub_1DC916A20();
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + 80);
    uint64_t v8 = *(void *)(v1 + 88);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    return v9(v7, v8);
  }
}

void sub_1DC9150A0(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)sub_1DCB87908();
  unint64_t v5 = (void *)sub_1DCB87788();
  uint64_t v6 = (void *)sub_1DCB87908();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  v9[4] = sub_1DC916798;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1DC9152C4;
  v9[3] = &unk_1F37FA968;
  uint64_t v8 = _Block_copy(v9);
  swift_release();
  objc_msgSend(a2, sel_sendRequestID_request_destinationID_options_responseHandler_, v4, v5, v6, 0, v8);
  _Block_release(v8);
}

uint64_t sub_1DC9151EC(uint64_t result, uint64_t a2, void *a3, uint64_t a4)
{
  if (result)
  {
    if (a2)
    {
      uint64_t v4 = *(uint64_t **)(*(void *)(a4 + 64) + 40);
      uint64_t *v4 = result;
      v4[1] = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_continuation_throwingResume();
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  if (!a3) {
    goto LABEL_11;
  }
  sub_1DC87E988(&qword_1EAA9DF60);
  swift_allocError();
  *uint64_t v6 = a3;
  id v7 = a3;

  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1DC9152C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v7 = sub_1DCB877B8();
    if (!v5) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v7 = 0;
  if (a3) {
LABEL_3:
  }
    uint64_t v5 = sub_1DCB877B8();
LABEL_4:
  swift_retain();
  id v8 = a4;
  v6(v7, v5, a4);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_1DC9153A8(void *a1)
{
  uint64_t v2 = sub_1DC916688(a1, (SEL *)&selRef_identifier);
  if (!v3) {
    goto LABEL_13;
  }
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  uint64_t v6 = sub_1DCB2C684(a1);
  if (!v7)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    type metadata accessor for SNError();
    unint64_t v21 = sub_1DC8F65D8();
    sub_1DCA14B2C(v21, v22, v23, v24, v25, v26);
    return (id)swift_willThrow();
  }
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  uint64_t v10 = sub_1DC916688(a1, (SEL *)&selRef_model);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v12 = v11;
  uint64_t v28 = v10;
  uint64_t v13 = sub_1DC916688(a1, (SEL *)&selRef_name);
  if (v14) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = 0x6E776F6E6B6E753CLL;
  }
  if (v14) {
    unint64_t v16 = v14;
  }
  else {
    unint64_t v16 = 0xE90000000000003ELL;
  }
  unint64_t v17 = (objc_class *)type metadata accessor for SNFileServerInfo();
  uint64_t v18 = (char *)objc_allocWithZone(v17);
  unsigned int v19 = &v18[OBJC_IVAR___SNFileServerInfo_impl];
  *(void *)unsigned int v19 = v4;
  *((void *)v19 + 1) = v5;
  *((void *)v19 + 2) = v8;
  *((void *)v19 + 3) = v9;
  *((void *)v19 + 4) = v28;
  *((void *)v19 + 5) = v12;
  *((void *)v19 + 6) = v15;
  *((void *)v19 + 7) = v16;
  v27.uint64_t receiver = v18;
  v27.Class super_class = v17;
  return objc_msgSendSuper2(&v27, sel_init);
}

id sub_1DC915520(unint64_t a1, void *a2)
{
  uint64_t v5 = (char *)sub_1DC9153A8(a2);
  if (!v2)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 8];
    uint64_t v20 = *(void *)&v5[OBJC_IVAR___SNFileServerInfo_impl];
    uint64_t v8 = *(void *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 24];
    uint64_t v9 = *(void *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 40];
    uint64_t v17 = *(void *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 32];
    uint64_t v18 = *(void *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 16];
    uint64_t v11 = *(void *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 48];
    uint64_t v10 = *(void *)&v5[OBJC_IVAR___SNFileServerInfo_impl + 56];
    type metadata accessor for SNFileSharingUtils();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = sub_1DC915688(a1) & 1;
    uint64_t v13 = (objc_class *)type metadata accessor for SNFileServerDiscoveryResult();
    unint64_t v14 = (char *)objc_allocWithZone(v13);
    uint64_t v15 = &v14[OBJC_IVAR___SNFileServerDiscoveryResult_impl];
    *(void *)uint64_t v15 = v20;
    *((void *)v15 + 1) = v7;
    *((void *)v15 + 2) = v18;
    *((void *)v15 + 3) = v8;
    *((void *)v15 + 4) = v17;
    *((void *)v15 + 5) = v9;
    *((void *)v15 + 6) = v11;
    *((void *)v15 + 7) = v10;
    v15[64] = v12;
    v19.uint64_t receiver = v14;
    v19.Class super_class = v13;
    id v3 = objc_msgSendSuper2(&v19, sel_init);
  }
  return v3;
}

unint64_t sub_1DC915688(unint64_t result)
{
  if (result >= 2)
  {
    sub_1DC9166E8();
    swift_allocError();
    *uint64_t v1 = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC9156E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  uint64_t v4[20] = a2;
  return sub_1DC8BA8F8((uint64_t)sub_1DC915704);
}

uint64_t sub_1DC915704()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DCB877D8();
  v0[23] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[24] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC9157E0;
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[19];
  return sub_1DC914EA0(0xD000000000000012, 0x80000001DCB927B0, v1, v5, v3, v4);
}

uint64_t sub_1DC9157E0(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88679C();
  void *v8 = v7;
  *(void *)(v5 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v9 = sub_1DC915A1C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v5 + 208) = a1;
    uint64_t v9 = sub_1DC9158FC;
  }
  return MEMORY[0x1F4188298](v9, 0, 0);
}

uint64_t sub_1DC9158FC()
{
  sub_1DC886900();
  *(void *)(v0 + 120) = 0x6E6F6973726576;
  uint64_t v1 = *(void *)(v0 + 208);
  *(void *)(v0 + 128) = 0xE700000000000000;
  sub_1DCB88A38();
  sub_1DC9614B8(v1, (_OWORD *)(v0 + 88));
  uint64_t result = swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 112))
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1DC8A8EA0(v0 + 16);
  sub_1DC87E9CC((_OWORD *)(v0 + 88), (_OWORD *)(v0 + 56));
  swift_dynamicCast();
  uint64_t result = sub_1DC915A7C(*(void *)(v0 + 136), *(void *)(v0 + 144));
  if (v4)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v3.n128_u64[0] = result;
  uint64_t v5 = *(uint64_t (**)(__n128))(v0 + 8);
  return v5(v3);
}

uint64_t sub_1DC915A1C()
{
  sub_1DC8867A8();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DC915A7C(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1DCB88A88();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (uint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1DCB88B28();
      }
      char v6 = sub_1DC9165D0(v4, v5, (void (*)(uint64_t *__return_ptr))sub_1DC91682C);
      swift_bridgeObjectRelease();
    }
  }
  if (v6) {
    return 0;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC915C0C(uint64_t a1, uint64_t a2, double a3)
{
  *(void *)(v4 + 64) = v3;
  *(double *)(v4 + 56) = a3;
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a2;
  return sub_1DC8BA8F8((uint64_t)sub_1DC915C2C);
}

uint64_t sub_1DC915C2C()
{
  sub_1DC886900();
  uint64_t result = sub_1DC916688(*(void **)(v0 + 40), (SEL *)&selRef_identifier);
  *(void *)(v0 + 72) = v2;
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1DC915CF0;
    uint64_t v6 = *(void *)(v0 + 48);
    return sub_1DC9156E8(v3, v4, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC915CF0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v7;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v8 = sub_1DC9160A4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1DC915DE0;
  }
  return MEMORY[0x1F4188298](v8, 0, 0);
}

uint64_t sub_1DC915DE0()
{
  uint64_t v29 = v0;
  if (*(double *)(v0 + 88) >= *(double *)(v0 + 56))
  {
    uint64_t v8 = *(void **)(v0 + 96);
    id v9 = sub_1DC915520(0, *(void **)(v0 + 40));
    id v7 = v8;
    if (!v8) {
      goto LABEL_13;
    }
  }
  else
  {
    type metadata accessor for SNError();
    v28[0] = 0;
    v28[1] = 0xE000000000000000;
    sub_1DCB88A98();
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0xE000000000000000;
    sub_1DCB87A18();
    sub_1DCB87FB8();
    unint64_t v1 = *(void *)(v0 + 24);
    unint64_t v2 = sub_1DC8F65D8();
    id v7 = sub_1DCA14B2C(v2, v3, v4, v5, v6, v1);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void **)(v0 + 40);
  uint64_t v11 = sub_1DCB86FE8();
  sub_1DC89F57C(v11, (uint64_t)qword_1EAAFF810);
  id v12 = v10;
  uint64_t v13 = sub_1DCB86FC8();
  os_log_type_t v14 = sub_1DCB88448();
  BOOL v15 = os_log_type_enabled(v13, v14);
  unint64_t v16 = *(void **)(v0 + 40);
  if (v15)
  {
    id v27 = v7;
    uint64_t v17 = (_DWORD *)swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *uint64_t v17 = 136315138;
    uint64_t v18 = sub_1DC916688(v16, (SEL *)&selRef_identifier);
    if (v19)
    {
      unint64_t v20 = v19;
    }
    else
    {
      uint64_t v18 = 0x6E776F6E6B6E753CLL;
      unint64_t v20 = 0xE90000000000003ELL;
    }
    uint64_t v21 = sub_1DC9F8920(v18, v20, v28);
    sub_1DC9169FC(v21, (void *)(v0 + 32));
    swift_bridgeObjectRelease();

    sub_1DC916A30(&dword_1DC873000, v22, v23, "Failed to discover file server at %s; this may not be an issue, since not all devices are expected to host file se"
      "rvers compatible with this client");
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
    unint64_t v24 = v27;
  }
  else
  {

    unint64_t v24 = v7;
  }

  id v9 = 0;
LABEL_13:
  uint64_t v25 = *(uint64_t (**)(id))(v0 + 8);
  return v25(v9);
}

uint64_t sub_1DC9160A4()
{
  uint64_t v21 = v0;
  swift_bridgeObjectRelease();
  unint64_t v1 = (void *)v0[12];
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  unint64_t v2 = (void *)v0[5];
  uint64_t v3 = sub_1DCB86FE8();
  sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
  id v4 = v2;
  uint64_t v5 = sub_1DCB86FC8();
  os_log_type_t v6 = sub_1DCB88448();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[5];
  if (v7)
  {
    unint64_t v19 = v1;
    id v9 = (_DWORD *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *id v9 = 136315138;
    uint64_t v10 = sub_1DC916688(v8, (SEL *)&selRef_identifier);
    if (v11)
    {
      unint64_t v12 = v11;
    }
    else
    {
      uint64_t v10 = 0x6E776F6E6B6E753CLL;
      unint64_t v12 = 0xE90000000000003ELL;
    }
    uint64_t v13 = sub_1DC9F8920(v10, v12, &v20);
    sub_1DC9169FC(v13, v0 + 4);
    swift_bridgeObjectRelease();

    sub_1DC916A30(&dword_1DC873000, v14, v15, "Failed to discover file server at %s; this may not be an issue, since not all devices are expected to host file se"
      "rvers compatible with this client");
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
    unint64_t v16 = v19;
  }
  else
  {

    unint64_t v16 = v1;
  }

  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17(0);
}

uint64_t sub_1DC9162A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v4 - 8);
  os_log_type_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DCB86A18();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1DC916688(a1, (SEL *)&selRef_filename);
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v22 = v10;
    uint64_t v23 = a2;
    id v13 = objc_msgSend(a1, sel_itemURL);
    if (v13)
    {
      uint64_t v14 = v13;
      sub_1DCB869B8();

      uint64_t v15 = *(void (**)(void))(v8 + 32);
      sub_1DC9169EC();
      v15();
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v6, 0, 1, v7);
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v6, 1, v7) != 1)
      {
        sub_1DC9169EC();
        v15();
        id v16 = objc_msgSend(a1, sel_fileSize);
        type metadata accessor for FileCopyingResult(0);
        uint64_t v17 = v23;
        sub_1DC9169EC();
        uint64_t result = ((uint64_t (*)(void))v15)();
        *uint64_t v17 = v22;
        v17[1] = v12;
        v17[2] = (uint64_t)v16;
        return result;
      }
    }
    else
    {
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v6, 1, 1, v7);
    }
    swift_bridgeObjectRelease();
    sub_1DC916734((uint64_t)v6);
    sub_1DC9166E8();
    swift_allocError();
    char v20 = 1;
  }
  else
  {
    sub_1DC9166E8();
    swift_allocError();
    char v20 = 0;
  }
  *unint64_t v19 = v20;
  return swift_willThrow();
}

uint64_t sub_1DC916530()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNFileSharingUtils()
{
  return self;
}

unsigned char *sub_1DC916564@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1DC9165D0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void sub_1DC916630(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1DCB87908();
  objc_msgSend(a3, sel_setPath_, v4);
}

uint64_t sub_1DC916688(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1DCB87938();

  return v4;
}

unint64_t sub_1DC9166E8()
{
  unint64_t result = qword_1EAAA0060;
  if (!qword_1EAAA0060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAAA0060);
  }
  return result;
}

uint64_t sub_1DC916734(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(qword_1EAA9CBC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC916798(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1DC9151EC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1DC9167A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC9167B0()
{
  return swift_release();
}

uint64_t sub_1DC9167BC(uint64_t a1, void *a2)
{
  return sub_1DC914904(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1DC9167C4()
{
  unint64_t result = qword_1EAAA0080;
  if (!qword_1EAAA0080)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EAAA0080);
  }
  return result;
}

uint64_t sub_1DC916808(void *a1, void *a2)
{
  return sub_1DC914530(a1, a2, *(void *)(v2 + 16));
}

unsigned char *sub_1DC916810@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1DC916564(a1, a2);
}

void *sub_1DC91682C@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNFileSharingUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC91693CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNFileSharingUtils.DomainError()
{
  return &type metadata for SNFileSharingUtils.DomainError;
}

unint64_t sub_1DC916978()
{
  unint64_t result = qword_1EAAA00A0;
  if (!qword_1EAAA00A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA00A0);
  }
  return result;
}

uint64_t sub_1DC9169FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return sub_1DCB88778();
}

uint64_t sub_1DC916A20()
{
  return v0 + 8;
}

void sub_1DC916A30(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

double SNDirectionOfArrivalResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double SNDirectionOfArrivalResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

double (*SNDirectionOfArrivalResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNDirectionOfArrivalResult.timeRange.getter((uint64_t)v3);
  return sub_1DC916BD4;
}

double sub_1DC916BD4(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

float SNDirectionOfArrivalResult.azimuth.getter()
{
  return *(float *)(v0 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48);
}

void SNDirectionOfArrivalResult.azimuth.setter(float a1)
{
  *(float *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48) = a1;
}

float (*SNDirectionOfArrivalResult.azimuth.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 48);
  return sub_1DC877138;
}

float SNDirectionOfArrivalResult.elevation.getter()
{
  return *(float *)(v0 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 52);
}

void SNDirectionOfArrivalResult.elevation.setter(float a1)
{
  *(float *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 52) = a1;
}

float (*SNDirectionOfArrivalResult.elevation.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNDirectionOfArrivalResult_impl;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 52);
  return sub_1DC916D60;
}

float sub_1DC916D60(uint64_t a1)
{
  float result = *(float *)(a1 + 16);
  *(float *)(*(void *)a1 + *(void *)(a1 + 8) + 52) = result;
  return result;
}

uint64_t SNDirectionOfArrivalResult.spatialSpectrum.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DCB88B68();
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = v4 + 1;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v1 + 8 * v4 + 32));
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      uint64_t v4 = v5;
    }
    while (v2 != v5);
    uint64_t v3 = v7;
    swift_bridgeObjectRelease();
  }
  return v3;
}

void SNDirectionOfArrivalResult.spatialSpectrum.setter(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62)
  {
    uint64_t v4 = sub_1DCB88CC8();
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1DC89822C();
  if (v4 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v12;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1E01A7AE0](v5, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * v5 + 32);
    }
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_doubleValue);
    uint64_t v10 = v9;

    unint64_t v11 = *(void *)(v12 + 16);
    if (v11 >= *(void *)(v12 + 24) >> 1) {
      sub_1DC89822C();
    }
    ++v5;
    *(void *)(v12 + 16) = v11 + 1;
    *(void *)(v12 + 8 * v11 + 32) = v10;
  }
  while (v4 != v5);
  swift_bridgeObjectRelease();
LABEL_14:
  *(void *)(v2 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 56) = v6;

  swift_bridgeObjectRelease();
}

void sub_1DC9170C0()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  SNDirectionOfArrivalResult.spatialSpectrum.setter(v0);
}

void (*SNDirectionOfArrivalResult.spatialSpectrum.modify(uint64_t *a1))(unint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = SNDirectionOfArrivalResult.spatialSpectrum.getter();
  return sub_1DC917134;
}

void sub_1DC917134(unint64_t *a1, char a2)
{
  if (a2)
  {
    unint64_t v2 = swift_bridgeObjectRetain();
    SNDirectionOfArrivalResult.spatialSpectrum.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    SNDirectionOfArrivalResult.spatialSpectrum.setter(*a1);
  }
}

id sub_1DC91718C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x1E4F1FA20];
  uint64_t v3 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v4 = &v0[OBJC_IVAR___SNDirectionOfArrivalResult_impl];
  *(void *)uint64_t v4 = *MEMORY[0x1E4F1FA20];
  *((void *)v4 + 1) = *(void *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((void *)v4 + 4) = *(void *)(v2 + 32);
  *((void *)v4 + 5) = v3;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *((void *)v4 + 6) = 0;
  *((void *)v4 + 7) = v5;
  v7.uint64_t receiver = v0;
  v7.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1DC917230(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = &v3[OBJC_IVAR___SNDirectionOfArrivalResult_impl];
  *(void *)uint64_t v6 = *(void *)a1;
  *((void *)v6 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v6 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v6 + 4) = *(void *)(a1 + 32);
  *((void *)v6 + 5) = v4;
  *((void *)v6 + 6) = *(void *)(a1 + 48);
  *((void *)v6 + 7) = v5;
  v8.uint64_t receiver = v3;
  v8.Class super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SNDirectionOfArrivalResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 40);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 56);
  v7[0] = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
  v7[1] = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 8);
  long long v8 = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 16);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 32);
  uint64_t v10 = v4;
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48);
  uint64_t v12 = v5;
  swift_bridgeObjectRetain();
  id result = sub_1DC917230((uint64_t)v7);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNDirectionOfArrivalResult.hash.getter()
{
  sub_1DC917D04(v0 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
  return sub_1DC8D863C();
}

uint64_t SNDirectionOfArrivalResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v16);
  if (v17)
  {
    sub_1DC87E9CC(&v16, v15);
    sub_1DC87E9DC((uint64_t)v15, (uint64_t)v9);
    if (swift_dynamicCast() && (uint64_t v3 = v8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 40);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 56);
      v9[0] = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
      v9[1] = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 8);
      long long v10 = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 16);
      uint64_t v11 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 32);
      uint64_t v12 = v4;
      uint64_t v13 = *(void *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48);
      uint64_t v14 = v5;
      sub_1DC917D04((uint64_t)v8 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
      char v6 = sub_1DC8D8098((float *)v9, (float *)&v8);
    }
    else
    {
      char v6 = 0;
    }
    sub_1DC8818D0((uint64_t)v15);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

id SNDirectionOfArrivalResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNDirectionOfArrivalResult.init(coder:)(a1);
}

id SNDirectionOfArrivalResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87D52C();
  swift_getObjectType();

  id v4 = sub_1DC917230((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNDirectionOfArrivalResult.encode(with:)(NSCoder with)
{
  long long v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 16);
  v5[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl);
  v5[1] = v3;
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 48);
  _OWORD v5[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNDirectionOfArrivalResult_impl + 32);
  void v5[3] = v4;
  sub_1DC882890((uint64_t)v5);
  sub_1DC87B3A0((uint64_t)v5, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
  sub_1DC917B3C((uint64_t)v5);
}

uint64_t static SNDirectionOfArrivalResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNDirectionOfArrivalResult.description.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_1DCB88A98();
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  v13.uint64_t receiver = v0;
  v13.Class super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v13, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87FC8();
  sub_1DCB87A18();
  sub_1DCB87FC8();
  sub_1DCB87A18();
  uint64_t v3 = swift_bridgeObjectRetain();
  MEMORY[0x1E01A6C50](v3, MEMORY[0x1E4FBB3D0]);
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  SNDirectionOfArrivalResult.timeRange.getter((uint64_t)&v16);
  uint64_t v4 = v16;
  uint64_t v5 = v18;
  uint64_t v6 = v19;
  uint64_t v7 = v21;
  long long v8 = self;
  v12[0] = v4;
  v12[1] = v17;
  v12[2] = v5;
  v12[3] = v6;
  v12[4] = v20;
  v12[5] = v7;
  id v9 = objc_msgSend(v8, sel_valueWithCMTimeRange_, v12);
  id v10 = objc_msgSend(v9, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v14;
}

id SNDirectionOfArrivalResult.__deallocating_deinit()
{
  v2.uint64_t receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC917B3C(uint64_t a1)
{
  return a1;
}

double sub_1DC917B68@<D0>(uint64_t a1@<X8>)
{
  return SNDirectionOfArrivalResult.timeRange.getter(a1);
}

double sub_1DC917B8C(uint64_t a1)
{
  return SNDirectionOfArrivalResult.timeRange.setter(a1);
}

void sub_1DC917BB0(float *a1@<X8>)
{
  *a1 = SNDirectionOfArrivalResult.azimuth.getter();
}

void sub_1DC917BDC(float *a1)
{
}

void sub_1DC917C04(float *a1@<X8>)
{
  *a1 = SNDirectionOfArrivalResult.elevation.getter();
}

void sub_1DC917C30(float *a1)
{
}

uint64_t sub_1DC917C58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SNDirectionOfArrivalResult.spatialSpectrum.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for SNDirectionOfArrivalResult()
{
  return self;
}

uint64_t method lookup function for SNDirectionOfArrivalResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNDirectionOfArrivalResult);
}

unint64_t sub_1DC917CC4()
{
  unint64_t result = qword_1EAA9C7A0;
  if (!qword_1EAA9C7A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAA9C7A0);
  }
  return result;
}

double sub_1DC917D04@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 48);
}

ValueMetadata *type metadata accessor for FindMyBundle()
{
  return &type metadata for FindMyBundle;
}

uint64_t sub_1DC917D50(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC917DA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC917DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = a5 + *(int *)(type metadata accessor for Rational() + 36);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);

  return v9(v8, a2, a4);
}

uint64_t sub_1DC917E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1DC917DBC(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t sub_1DC917E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_1DC917EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t sub_1DC917EEC()
{
  return swift_getWitnessTable();
}

void sub_1DC917F40()
{
  sub_1DC89D9F8();
  uint64_t v58 = v0;
  uint64_t v59 = v1;
  uint64_t v45 = v2;
  uint64_t v46 = v3;
  uint64_t v50 = v4;
  uint64_t v51 = v5;
  uint64_t v54 = v6;
  v44[0] = v7;
  uint64_t v8 = *(void *)(v4 + 8);
  uint64_t v10 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v63 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC9198DC();
  uint64_t v49 = v14 - v15;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v16);
  sub_1DC91990C();
  uint64_t v48 = v17;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v18);
  sub_1DC91990C();
  uint64_t v60 = v19;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v20);
  sub_1DC91990C();
  uint64_t v57 = v21;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v22);
  sub_1DC91990C();
  uint64_t v55 = v23;
  sub_1DC9198D0();
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  id v27 = (char *)v44 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)v44 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)v44 - v31;
  uint64_t v56 = (char *)v44 - v31;
  uint64_t v33 = *(void (**)(void))(v8 + 32);
  uint64_t v62 = v10;
  sub_1DC9198EC();
  v33();
  uint64_t v61 = v8;
  sub_1DC9198EC();
  v33();
  BOOL v52 = v33;
  uint64_t v47 = *(void *)(v59 + 8);
  sub_1DC9EA86C((uint64_t)v30, v27, AssociatedTypeWitness, v45, *(void *)(v47 + 8), v32);
  uint64_t v34 = *(void (**)(void))(v63 + 8);
  v63 += 8;
  ((void (*)(char *, uint64_t))v34)(v27, AssociatedTypeWitness);
  uint64_t v53 = v30;
  ((void (*)(char *, uint64_t))v34)(v30, AssociatedTypeWitness);
  sub_1DC9198EC();
  v33();
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v58 + 8);
  char v35 = v56;
  v46(v27, v56, AssociatedTypeWitness);
  v44[1] = v27;
  ((void (*)(char *, uint64_t))v34)(v27, AssociatedTypeWitness);
  uint64_t v36 = v55;
  sub_1DC9198EC();
  v37();
  ((void (*)(uint64_t, char *, uint64_t, uint64_t))v46)(v36, v35, AssociatedTypeWitness, v58);
  ((void (*)(uint64_t, uint64_t))v34)(v36, AssociatedTypeWitness);
  uint64_t v38 = v57;
  uint64_t v39 = v62;
  sub_1DC9198EC();
  v40();
  sub_1DCB88058();
  ((void (*)(uint64_t, uint64_t))v34)(v38, AssociatedTypeWitness);
  uint64_t v41 = *(void (**)(uint64_t))(v61 + 24);
  uint64_t v42 = v48;
  v41(v39);
  sub_1DCB88058();
  ((void (*)(uint64_t, uint64_t))v34)(v42, AssociatedTypeWitness);
  ((void (*)(uint64_t, uint64_t))v41)(v39, v61);
  sub_1DCB88058();
  sub_1DC9198A0();
  v34();
  uint64_t v43 = v57;
  sub_1DCB88C88();
  sub_1DC9198A0();
  v34();
  sub_1DC9198A0();
  v34();
  sub_1DC9198A0();
  v34();
  sub_1DC9198A0();
  v34();
  sub_1DC9198A0();
  v34();
  (*(void (**)(uint64_t, uint64_t))(v50 + 16))(v43, v55);
  sub_1DC89DA54();
}

void sub_1DC9183DC()
{
  sub_1DC89D9F8();
  uint64_t v27 = v0;
  uint64_t v28 = v1;
  uint64_t v3 = v2;
  uint64_t v4 = sub_1DC91994C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v26 = (char *)&v25 - v5;
  uint64_t v6 = sub_1DC91994C();
  sub_1DC88D538();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC9198DC();
  uint64_t v12 = v10 - v11;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v25 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v25 - v17;
  sub_1DCB88CB8();
  uint64_t v19 = sub_1DC919918();
  v20(v19);
  sub_1DCB88C98();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v21(v12, v6);
  v21((uint64_t)v16, v6);
  uint64_t v22 = v26;
  uint64_t v23 = sub_1DC919918();
  v24(v23);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v18, v22, v3);
  sub_1DC89DA54();
}

void sub_1DC9185BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC89D9F8();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  sub_1DC88D538();
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC9183DC();
  sub_1DC917F40();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v23);
  sub_1DC89DA54();
}

void sub_1DC9186AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_1DC89D9F8();
  uint64_t v53 = v21;
  uint64_t v48 = v22;
  uint64_t v49 = v23;
  uint64_t v25 = v24;
  uint64_t v44 = v27;
  uint64_t v45 = v26;
  uint64_t v46 = a21;
  uint64_t v47 = v28;
  uint64_t v56 = *(void *)(a21 + 16);
  uint64_t v29 = *(void *)(v24 + 8);
  uint64_t v31 = v30;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v50 = (uint64_t)&v41 - v32;
  swift_checkMetadataState();
  sub_1DC88D538();
  uint64_t v43 = v33;
  MEMORY[0x1F4188790](v34);
  sub_1DC9198DC();
  uint64_t v36 = MEMORY[0x1F4188790](v35);
  MEMORY[0x1F4188790](v36);
  uint64_t v55 = v31;
  sub_1DC88D538();
  uint64_t v52 = v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v54 = (char *)&v41 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC9185BC(v44, v45, v31, v25, v47, v48, (uint64_t)v49, v46, v41, v42, v43, v44, v45, v46, v47, v48, (uint64_t)v49, v50, AssociatedTypeWitness,
    v52);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v29 + 24);
  uint64_t v47 = v29 + 24;
  v49(v31, v29);
  uint64_t v42 = v29;
  (*(void (**)(uint64_t, uint64_t))(v29 + 32))(v31, v29);
  sub_1DCB88058();
  uint64_t v40 = *(void (**)(void))(v43 + 8);
  sub_1DC919868();
  v40();
  sub_1DC919868();
  v40();
  swift_getAssociatedConformanceWitness();
  sub_1DC91992C();
  sub_1DC9198F8();
  sub_1DCB88FF8();
  LODWORD(v48) = sub_1DCB87868();
  sub_1DC919868();
  v40();
  sub_1DC919868();
  v40();
  v49(v55, v42);
  sub_1DC91992C();
  sub_1DC9198F8();
  sub_1DCB88FF8();
  sub_1DCB878C8();
  sub_1DC919868();
  v40();
  sub_1DC919868();
  v40();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v55);
  sub_1DC89DA54();
}

#error "1DC918A4C: call analysis failed (funcsize=12)"

#error "1DC918A7C: call analysis failed (funcsize=12)"

#error "1DC918AA4: call analysis failed (funcsize=10)"

#error "1DC918ACC: call analysis failed (funcsize=10)"

#error "1DC918AF4: call analysis failed (funcsize=10)"

uint64_t sub_1DC918B0C()
{
  return sub_1DCB87818();
}

uint64_t sub_1DC918B6C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC918BC4()
{
  return sub_1DC918BF4();
}

uint64_t sub_1DC918BDC()
{
  return sub_1DC918BF4();
}

uint64_t sub_1DC918BF4()
{
  sub_1DC9198B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  return v0(v3, v2, v1, WitnessTable, v4, v5, v6, v7, v8) & 1;
}

uint64_t sub_1DC918C88()
{
  return sub_1DC918CD0();
}

uint64_t sub_1DC918CA0()
{
  return sub_1DC918CD0();
}

uint64_t sub_1DC918CB8()
{
  return sub_1DC918CD0();
}

uint64_t sub_1DC918CD0()
{
  sub_1DC9198B0();
  uint64_t WitnessTable = swift_getWitnessTable();
  return v0(v3, v2, v1, WitnessTable) & 1;
}

uint64_t sub_1DC918D60()
{
  return sub_1DC918B6C();
}

uint64_t sub_1DC918D68()
{
  return sub_1DC918B0C();
}

uint64_t sub_1DC918D70()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC918DC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC918E18()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DC918EE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  int v11 = *(_DWORD *)(v5 + 80) | v8;
  uint64_t v12 = v11;
  int v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(void *)(v7 + 64) > 0x18)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v6);
  }
  return v4;
}

uint64_t sub_1DC919044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_1DC9190E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DC919190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DC919238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DC9192E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1DC919388(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_1DC919560(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          uint64_t v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1DC9197ECLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t type metadata accessor for Rational()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC91982C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_1DC919878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v24 = *(void *)(v21 + 16);
  uint64_t v25 = *(void *)(v21 + 24);
  sub_1DC9186AC(a1, a2, a3, a4, a6, a7, a8, v24, v25, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1DC9198F8()
{
  return v0;
}

uint64_t sub_1DC919918()
{
  return v0;
}

uint64_t sub_1DC91992C()
{
  return sub_1DCB89098();
}

uint64_t sub_1DC91994C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1DC91996C(void *a1)
{
  sub_1DC89F6D8();
  uint64_t v5 = v4;
  *(_DWORD *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 36) = 1;
  *(void *)(v1 + 40) = v6;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v5;
  swift_retain();
  id v8 = a1;
  uint64_t v9 = sub_1DC8A12D0();
  if (v2)
  {
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v10 = v9;

    swift_release();
    id v8 = *(id *)(v1 + 16);
    *(void *)(v1 + 16) = v10;
  }

  return v1;
}

id sub_1DC919A40(char *a1)
{
  v119[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = self;
  v119[0] = 0;
  id v6 = sub_1DCB6B73C(v5, (uint64_t)v119);
  if (!v6)
  {
    id v41 = v119[0];
    sub_1DCB86898();

    swift_willThrow();
    return v6;
  }
  id v7 = v119[0];
  id v8 = (void *)sub_1DC8E7CF0();
  sub_1DCB60B18((uint64_t)v6, v8);

  uint64_t v9 = (void *)sub_1DCB87908();
  uint64_t v10 = sub_1DC91A5D8();
  id v13 = sub_1DCB68494(v10, v11, v9, v12);

  if (!v13)
  {
    id v42 = v119[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_24;
  }
  id v14 = v119[0];
  sub_1DCB87908();
  uint64_t v15 = sub_1DC91A570();
  id v19 = sub_1DCB6A308(v15, v16, v17, v18);

  if (!v19)
  {
    id v43 = v119[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_24;
  }
  id v20 = v119[0];
  uint64_t v21 = (void *)sub_1DCB87908();
  uint64_t v22 = sub_1DC91A5D8();
  id v25 = sub_1DCB6A664(v22, v23, v21, v24);

  if (!v25)
  {
    id v44 = v119[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_13;
  }
  id v26 = v119[0];
  sub_1DC8E7CF0();
  uint64_t v27 = sub_1DC91A58C();
  id v31 = sub_1DCB6A308(v27, v28, v29, v30);

  id v32 = v119[0];
  if (!v31)
  {
    id v45 = v119[0];
    sub_1DC91A5A8();

    swift_willThrow();
    goto LABEL_24;
  }
  uint64_t v117 = v19;
  id v33 = v119[0];
  sub_1DCB87908();
  uint64_t v34 = sub_1DC91A58C();
  id v19 = sub_1DCB6A948(v34, v35, v36, v37);

  if (!v19)
  {
    id v46 = v119[0];
    sub_1DC91A5A8();

    swift_willThrow();
    goto LABEL_24;
  }
  uint64_t v115 = v25;
  uint64_t v116 = v31;
  uint64_t v39 = *(void *)&a1[OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_model];
  uint64_t v38 = *(void **)&a1[OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_model + 8];
  id v40 = v119[0];
  sub_1DCB2FB74(v19, v39, (uint64_t)v38);
  if (!v1)
  {
    sub_1DCB87908();
    uint64_t v47 = sub_1DC91A570();
    id v51 = sub_1DCB686FC(v47, v48, v49, v50);

    if (v51)
    {
      id v52 = v119[0];
      sub_1DC91A55C();
      sub_1DCB6BA88(v53, v54, 1, v55);
      uint64_t v56 = sub_1DC91A4F8();
      uint64_t v62 = v118;
      if (sub_1DC91A5C0(v56, v57, v13, v117, v58, v59, v60, v61)
        && (id v63 = v118,
            sub_1DC91A55C(),
            sub_1DCB6BB74(v64, v65, 400, 1, v66),
            uint64_t v67 = sub_1DC91A528(),
            uint64_t v62 = v118,
            sub_1DC91A5C0(v67, v68, v69, v115, v70, v71, v72, v73)))
      {
        id v74 = v118;
        sub_1DC91A55C();
        sub_1DCB6BB74(v75, v76, 64, 1, v77);
        uint64_t v78 = sub_1DC91A4F8();
        if (sub_1DC91A5C0(v78, v79, v115, v116, v80, v81, v82, v83))
        {
          if ((*(_DWORD *)&a1[OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames]
                            - 15361) < 0xFFFFC400)
          {
            sub_1DC91A33C();
            swift_allocError();
            *uint64_t v84 = 0;
            id v85 = v118;
            swift_willThrow();

            return v6;
          }
          id v90 = v118;
          sub_1DC91A5EC();
          sub_1DCB6BB74(v91, v92, 6144, 1, v93);
          uint64_t v94 = sub_1DC91A528();
          if (sub_1DC91A5C0(v94, v95, v96, v19, v97, v98, v99, v100))
          {
            id v101 = v118;
            sub_1DC9311DC();
            sub_1DC91A5EC();
            sub_1DCB6BB74(v102, v103, v104, 1, v105);
            uint64_t v106 = sub_1DC91A4F8();
            if (sub_1DC91A5C0(v106, v107, v19, v51, v108, v109, v110, v111))
            {
              id v112 = v118;
              sub_1DCB5EC24((uint64_t)v6);
              sub_1DCB5F1F8((uint64_t)v6);

              return v6;
            }
            id v114 = v118;
            sub_1DCB86898();

            swift_willThrow();
            goto LABEL_24;
          }
          id v113 = v118;
          sub_1DC91A5A8();

          swift_willThrow();
        }
        else
        {
          id v89 = v118;
          sub_1DCB86898();

          swift_willThrow();
        }
      }
      else
      {
        id v86 = v62;
        sub_1DC91A5A8();

        swift_willThrow();
      }

LABEL_24:
      return v6;
    }
    id v88 = v119[0];
    sub_1DC91A5A8();

    swift_willThrow();
LABEL_13:

    goto LABEL_24;
  }

  return v6;
}

id sub_1DC91A0AC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DC91A33C();
  swift_allocError();
  *uint64_t v3 = 1;
  return (id)swift_willThrow();
}

void sub_1DC91A110(int a1, double a2)
{
  sub_1DC89F6D8();
  uint64_t v7 = v6;
  if ((*(unsigned char *)(v2 + 36) & 1) != 0
    || (*(double *)(v2 + 24) == a2 ? (BOOL v8 = *(_DWORD *)(v2 + 32) == a1) : (BOOL v8 = 0), !v8))
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v2;
    *(void *)(v9 + 24) = v7;
    swift_retain();
    uint64_t v10 = sub_1DC8A12D0();
    swift_release();
    if (!v3)
    {
      uint64_t v11 = *(void **)(v2 + 16);
      *(void *)(v2 + 16) = v10;

      *(double *)(v2 + 24) = a2;
      *(_DWORD *)(v2 + 32) = a1;
      *(unsigned char *)(v2 + 36) = 0;
    }
  }
}

void sub_1DC91A1E0(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (char *)*(id *)(a1 + 40);
  id v5 = sub_1DC919A40(v4);

  if (!v2) {
    *a2 = v5;
  }
}

uint64_t sub_1DC91A238()
{
  return v0;
}

uint64_t sub_1DC91A260()
{
  sub_1DC91A238();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNLogMelBasedFeatureExtractor()
{
  return self;
}

void sub_1DC91A2B8(int a1, double a2)
{
}

id sub_1DC91A2D0()
{
  return sub_1DC91A0AC();
}

uint64_t sub_1DC91A2E8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DC91A320(void *a1@<X8>)
{
  sub_1DC91A1E0(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DC91A33C()
{
  unint64_t result = qword_1EAAA0138;
  if (!qword_1EAAA0138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0138);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNLogMelBasedFeatureExtractor.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC91A454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNLogMelBasedFeatureExtractor.DomainError()
{
  return &type metadata for SNLogMelBasedFeatureExtractor.DomainError;
}

unint64_t sub_1DC91A490()
{
  unint64_t result = qword_1EAAA0140;
  if (!qword_1EAAA0140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0140);
  }
  return result;
}

void sub_1DC91A4E0(void *a1@<X8>)
{
}

uint64_t sub_1DC91A4F8()
{
  return v0;
}

uint64_t sub_1DC91A528()
{
  return v0;
}

uint64_t sub_1DC91A55C()
{
  return v0;
}

uint64_t sub_1DC91A570()
{
  return v0;
}

uint64_t sub_1DC91A58C()
{
  return v0;
}

uint64_t sub_1DC91A5A8()
{
  return sub_1DCB86898();
}

uint64_t sub_1DC91A5C0(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8)
{
  return sub_1DCB6B83C(a1, a2, a3, a4, 0, 0, a7, a8);
}

uint64_t sub_1DC91A5D8()
{
  return v0;
}

uint64_t sub_1DC91A5EC()
{
  return v0;
}

id sub_1DC91A600()
{
  uint64_t v1 = sub_1DCB886E8();
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC89D988();
  sub_1DC91AC8C();
  swift_bridgeObjectRetain();
  id v5 = sub_1DC91A738();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, *MEMORY[0x1E4F280B8], v1);
  uint64_t v6 = sub_1DCB886D8();
  char v8 = v7;
  uint64_t v9 = sub_1DC91AD6C();
  v10(v9);
  if ((v8 & 1) != 0 || (objc_msgSend(v5, sel_isAtEnd) & 1) == 0)
  {

    return 0;
  }
  else
  {
    id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&v6);
  }
  return v11;
}

id sub_1DC91A738()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

id sub_1DC91A7AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), SEL *a4)
{
  uint64_t v6 = sub_1DCB886E8();
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC91AC8C();
  swift_bridgeObjectRetain();
  id v12 = sub_1DC91A738();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E4F280B8], v6);
  uint64_t v13 = a3(v11);
  char v15 = v14;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  if ((v15 & 1) != 0 || (objc_msgSend(v12, sel_isAtEnd) & 1) == 0)
  {

    return 0;
  }
  else
  {
    id v16 = objc_msgSend(objc_allocWithZone(NSNumber), *a4, v13);
  }
  return v16;
}

id sub_1DC91A908(uint64_t a1, uint64_t a2)
{
  id v4 = sub_1DC91A7AC(a1, a2, MEMORY[0x1E4F280B0], (SEL *)&selRef_initWithUnsignedLongLong_);
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
  }
  else
  {
    id v7 = sub_1DC91A7AC(a1, a2, MEMORY[0x1E4F280C0], (SEL *)&selRef_initWithLongLong_);
    if (!v7)
    {
      id v7 = sub_1DC91A600();
      if (!v7)
      {
        type metadata accessor for SNError();
        sub_1DCB88A98();
        swift_bridgeObjectRelease();
        sub_1DCB87A18();
        id v6 = (id)0x80000001DCB928E0;
        sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000026, 0x80000001DCB928E0);
        swift_bridgeObjectRelease();
        swift_willThrow();
        return v6;
      }
    }
    id v6 = v7;
  }
  id v8 = v5;

  return v6;
}

uint64_t sub_1DC91AA60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  id v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v4 = *(v2 - 1);
    uint64_t v5 = *v2;
    if (v4) {
      BOOL v6 = 0;
    }
    else {
      BOOL v6 = v5 == 0xE000000000000000;
    }
    if (!v6 && (sub_1DCB89018() & 1) == 0)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DC897B8C();
      }
      unint64_t v7 = *(void *)(v3 + 16);
      if (v7 >= *(void *)(v3 + 24) >> 1) {
        sub_1DC897B8C();
      }
      *(void *)(v3 + 16) = v7 + 1;
      uint64_t v8 = v3 + 16 * v7;
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v5;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1DC91AB88()
{
  sub_1DCB867B8();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DC89D988();
  sub_1DCB867A8();
  sub_1DC91ACCC();
  uint64_t v1 = sub_1DCB887B8();
  sub_1DC91AA60(v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1DC91AD6C();
  v3(v2);
  sub_1DC87E988(&qword_1EAA9E7F0);
  sub_1DC91AD18();
  uint64_t v4 = sub_1DCB87858();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1DC91AC8C()
{
  unint64_t result = qword_1EAAA0148;
  if (!qword_1EAAA0148)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAA0148);
  }
  return result;
}

unint64_t sub_1DC91ACCC()
{
  unint64_t result = qword_1EAA9C770;
  if (!qword_1EAA9C770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9C770);
  }
  return result;
}

unint64_t sub_1DC91AD18()
{
  unint64_t result = qword_1EAAA6A70;
  if (!qword_1EAAA6A70)
  {
    sub_1DC8863A8(&qword_1EAA9E7F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6A70);
  }
  return result;
}

uint64_t sub_1DC91AD6C()
{
  return v0;
}

ValueMetadata *type metadata accessor for EmptyAudioSourceConfiguration()
{
  return &type metadata for EmptyAudioSourceConfiguration;
}

uint64_t sub_1DC91AD94(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC91B76C(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13);
  sub_1DC91B790();
  uint64_t result = sub_1DC91AE28(v10);
  if (!v9) {
    uint64_t *v8 = result;
  }
  return result;
}

uint64_t sub_1DC91ADD4(void *a1)
{
  swift_retain();
  uint64_t v2 = sub_1DC91B018(a1);
  swift_release();
  return v2;
}

uint64_t sub_1DC91AE28(void *a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v2 = sub_1DC91B018(a1);
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1DC91AEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  char v14 = (char *)&v16 - v13;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 56))(a1, AssociatedTypeWitness, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
}

uint64_t sub_1DC91AFD0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC91B76C(a1, a2, a3, a4, a5, a6, a7, a8, v11, __src[0]);
  uint64_t result = sub_1DC91B018(__src);
  if (!v9) {
    uint64_t *v8 = result;
  }
  return result;
}

uint64_t sub_1DC91B018(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  sub_1DC882264((uint64_t)__src);
  uint64_t v2 = sub_1DCAC3404();
  sub_1DC88CABC((uint64_t)__src);
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1DC91B0EC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC91B76C(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13);
  sub_1DC91B790();
  uint64_t result = sub_1DC91ADD4(v10);
  if (!v9) {
    uint64_t *v8 = result;
  }
  return result;
}

void *sub_1DC91B12C(void *__src)
{
  memcpy(__dst, __src, 0x41uLL);
  return sub_1DC8B8EF4(__dst);
}

uint64_t sub_1DC91B174(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA0150);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC91B584();
  sub_1DCB892B8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_1DC91B25C(uint64_t a1)
{
  unint64_t v2 = sub_1DC91B584();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC91B298(uint64_t a1)
{
  unint64_t v2 = sub_1DC91B584();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC91B2D4(void *a1)
{
  return sub_1DC91B174(a1);
}

unint64_t sub_1DC91B2F0()
{
  unint64_t result = qword_1EAA9CFA0;
  if (!qword_1EAA9CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9CFA0);
  }
  return result;
}

uint64_t _s13SoundAnalysis6PubSubV14AnyCancellableV9toCombine0H0ADCyF_0()
{
  return swift_retain();
}

uint64_t sub_1DC91B344()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1DC91B34C()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1DC91B354()
{
  sub_1DC91B7D8();
  swift_getWitnessTable();
  _s21ServerEnvironmentImplVMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DC91B7B0(WitnessTable, v1, v2, v3);
}

uint64_t sub_1DC91B3DC()
{
  sub_1DC91B7D8();
  swift_getWitnessTable();
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DC91B7B0(WitnessTable, v1, v2, v3);
}

void *sub_1DC91B464@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(__dst, __src, 0x41uLL);
  unint64_t result = sub_1DC91B12C(__dst);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void *sub_1DC91B4C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC91B464(a1, a2);
}

uint64_t sub_1DC91B4EC@<X0>(void *__src@<X3>, uint64_t *a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, void *a5@<X8>)
{
  uint64_t v9 = *a2;
  memcpy(__dst, __src, 0x41uLL);
  uint64_t result = sub_1DCAC4554(v9, a3, a4, __dst);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

uint64_t sub_1DC91B564@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC91B4EC(*(void **)(v2 + 32), a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1DC91B584()
{
  unint64_t result = qword_1EAAA0158;
  if (!qword_1EAAA0158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0158);
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyAudioSourceConfiguration.CodingKeys()
{
  return &type metadata for EmptyAudioSourceConfiguration.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for StaticAudioSourceInstance(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for StaticAudioSourceInstance()
{
  return swift_release();
}

void *assignWithCopy for StaticAudioSourceInstance(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for StaticAudioSourceInstance(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for StaticAudioSourceInstance()
{
  return &type metadata for StaticAudioSourceInstance;
}

unint64_t sub_1DC91B6CC()
{
  unint64_t result = qword_1EAAA0160;
  if (!qword_1EAAA0160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0160);
  }
  return result;
}

unint64_t sub_1DC91B71C()
{
  unint64_t result = qword_1EAAA0168;
  if (!qword_1EAAA0168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0168);
  }
  return result;
}

void *sub_1DC91B76C(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x41uLL);
}

__n128 sub_1DC91B790()
{
  return *(__n128 *)v0;
}

uint64_t sub_1DC91B7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC91AEA8(v5, v4, v6, a4, a1);
}

void sub_1DC91B7EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1DC89845C();
    uint64_t v3 = sub_1DC9A4ACC(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        int v6 = v4;
        uint64_t v7 = a1 + 64;
        while ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v8 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
          uint64_t v9 = v8[1];
          uint64_t v15 = v1;
          uint64_t v16 = *v8;
          uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
          unint64_t v12 = *(void *)(v17 + 16);
          unint64_t v11 = *(void *)(v17 + 24);
          swift_bridgeObjectRetain();
          if (v12 >= v11 >> 1) {
            sub_1DC89845C();
          }
          *(void *)(v17 + 16) = v12 + 1;
          char v13 = (void *)(v17 + 24 * v12);
          v13[4] = v16;
          v13[5] = v9;
          v13[6] = v10;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v7 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v6 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v14 = sub_1DCB88948();
          uint64_t v1 = v15 - 1;
          if (v15 == 1) {
            return;
          }
          unint64_t v5 = v14;
          if ((v14 & 0x8000000000000000) == 0)
          {
            int v6 = *(_DWORD *)(a1 + 36);
            if (v14 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t AOPClassificationResult.hash(into:)()
{
  sub_1DCB86B98();
  sub_1DC92051C(&qword_1EAAA0170, MEMORY[0x1E4F27928]);
  sub_1DCB87818();
  type metadata accessor for AOPClassificationResult();
  sub_1DCB87818();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1DC9214CC();
  sub_1DC920218(v0, v1);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for AOPClassificationResult()
{
  uint64_t result = qword_1EAAA0208;
  if (!qword_1EAAA0208) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void static AOPClassificationResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (sub_1DCB86B68())
  {
    uint64_t v4 = type metadata accessor for AOPClassificationResult();
    if (sub_1DCB86B68())
    {
      uint64_t v5 = *(int *)(v4 + 24);
      uint64_t v6 = *(void *)(a1 + v5);
      uint64_t v7 = *(void *)(a2 + v5);
      sub_1DC91BE9C(v6, v7);
    }
  }
}

void sub_1DC91BB60(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  sub_1DC921460();
  if (!v6) {
    return;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v2 + 64;
  sub_1DC9213B4();
  while (1)
  {
    if (v5)
    {
      sub_1DC921448();
      goto LABEL_21;
    }
    uint64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v10 >= v4) {
      return;
    }
    ++v7;
    if (!*(void *)(v8 + 8 * v10))
    {
      uint64_t v7 = v10 + 1;
      if (v10 + 1 >= v4) {
        return;
      }
      if (!*(void *)(v8 + 8 * v7))
      {
        uint64_t v7 = v10 + 2;
        if (v10 + 2 >= v4) {
          return;
        }
        if (!*(void *)(v8 + 8 * v7)) {
          break;
        }
      }
    }
LABEL_20:
    sub_1DC921430();
LABEL_21:
    unint64_t v12 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v9);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = *(void *)(*(void *)(v2 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1DC9637DC(v13, v14);
    char v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0 || *(void *)(*(void *)(v3 + 56) + 8 * v16) != v15) {
      return;
    }
  }
  uint64_t v11 = v10 + 3;
  if (v11 >= v4) {
    return;
  }
  if (*(void *)(v8 + 8 * v11))
  {
    uint64_t v7 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v4) {
      return;
    }
    ++v11;
    if (*(void *)(v8 + 8 * v7)) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_1DC91BCA8(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  sub_1DC921460();
  if (!v24) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = v2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v2 + 64);
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v26) {
      return;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v26) {
        return;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v26) {
          return;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    char v17 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v10);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1DC9637DC(v15, v16);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    int v23 = (void *)(*(void *)(v3 + 56) + 16 * v20);
    BOOL v24 = *v23 == v19 && v23[1] == v18;
    if (v24)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0) {
        return;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v26) {
    return;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v26) {
      return;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
}

void sub_1DC91BE9C(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  sub_1DC921460();
  if (!v6) {
    return;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v2 + 64;
  sub_1DC9213B4();
  while (1)
  {
    if (v5)
    {
      sub_1DC921448();
      goto LABEL_21;
    }
    uint64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v10 >= v4) {
      return;
    }
    ++v7;
    if (!*(void *)(v8 + 8 * v10))
    {
      uint64_t v7 = v10 + 1;
      if (v10 + 1 >= v4) {
        return;
      }
      if (!*(void *)(v8 + 8 * v7))
      {
        uint64_t v7 = v10 + 2;
        if (v10 + 2 >= v4) {
          return;
        }
        if (!*(void *)(v8 + 8 * v7)) {
          break;
        }
      }
    }
LABEL_20:
    sub_1DC921430();
LABEL_21:
    unint64_t v12 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v9);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    double v15 = *(double *)(*(void *)(v2 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1DC9637DC(v13, v14);
    char v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0 || *(double *)(*(void *)(v3 + 56) + 8 * v16) != v15) {
      return;
    }
  }
  uint64_t v11 = v10 + 3;
  if (v11 >= v4) {
    return;
  }
  if (*(void *)(v8 + 8 * v11))
  {
    uint64_t v7 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v4) {
      return;
    }
    ++v11;
    if (*(void *)(v8 + 8 * v7)) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1DC91BFEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D617473656D6974 && a2 == 0xEE00747261745370;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D617473656D6974 && a2 == 0xEC000000646E4570;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6966697373616C63 && a2 == 0xEF736E6F69746163)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DC91C194(unsigned __int8 a1)
{
  uint64_t result = 0x6D617473656D6974;
  if (a1 >= 2u) {
    return 0x6966697373616C63;
  }
  return result;
}

uint64_t sub_1DC91C200()
{
  return sub_1DC91C194(*v0);
}

uint64_t sub_1DC91C208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC91BFEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC91C230(uint64_t a1)
{
  unint64_t v2 = sub_1DC920360();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC91C26C(uint64_t a1)
{
  unint64_t v2 = sub_1DC920360();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AOPClassificationResult.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA0178);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC920360();
  sub_1DCB892B8();
  sub_1DCB86B98();
  sub_1DC92051C(&qword_1EAAA0188, MEMORY[0x1E4F27928]);
  sub_1DC921500();
  if (!v1)
  {
    type metadata accessor for AOPClassificationResult();
    sub_1DC921500();
    sub_1DC87E988(&qword_1EAAA0190);
    sub_1DC9203AC(&qword_1EAAA0198);
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t AOPClassificationResult.hashValue.getter()
{
  sub_1DCB891A8();
  sub_1DCB86B98();
  sub_1DC92051C(&qword_1EAAA0170, MEMORY[0x1E4F27928]);
  sub_1DCB87818();
  uint64_t v1 = type metadata accessor for AOPClassificationResult();
  sub_1DCB87818();
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 24));
  swift_bridgeObjectRetain();
  sub_1DC920218((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_1DCB891F8();
}

uint64_t AOPClassificationResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_1DCB86B98();
  sub_1DC89D4E0();
  uint64_t v27 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v29 = (char *)&v24 - v10;
  uint64_t v30 = sub_1DC87E988(&qword_1EAAA01A0);
  sub_1DC89D4E0();
  uint64_t v28 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AOPClassificationResult();
  MEMORY[0x1F4188790](v15);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC920360();
  id v31 = v14;
  uint64_t v16 = (uint64_t)v32;
  sub_1DCB89298();
  if (v16) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  id v32 = a1;
  uint64_t v25 = v2;
  char v36 = 0;
  sub_1DC92051C(&qword_1EAAA01A8, MEMORY[0x1E4F27928]);
  sub_1DC9214A4();
  char v17 = v29;
  uint64_t v29 = *(char **)(v27 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v29)(v25, v17, v4);
  char v35 = 1;
  sub_1DC9214A4();
  uint64_t v18 = v15;
  uint64_t v19 = *(int *)(v15 + 20);
  uint64_t v20 = v25;
  ((void (*)(uint64_t, char *, uint64_t))v29)(v25 + v19, v9, v4);
  sub_1DC87E988(&qword_1EAAA0190);
  char v34 = 2;
  sub_1DC9203AC(&qword_1EAAA01B0);
  sub_1DCB88DF8();
  uint64_t v21 = sub_1DC921550();
  v22(v21);
  *(void *)(v20 + *(int *)(v18 + 24)) = v33;
  sub_1DC920414(v20, v26);
  sub_1DC8818D0((uint64_t)v32);
  return sub_1DC920478(v20);
}

uint64_t sub_1DC91C92C(uint64_t a1, uint64_t a2)
{
  sub_1DCB891A8();
  sub_1DCB86B98();
  sub_1DC92051C(&qword_1EAAA0170, MEMORY[0x1E4F27928]);
  sub_1DCB87818();
  sub_1DCB87818();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 24));
  swift_bridgeObjectRetain();
  sub_1DC920218((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_1DCB891F8();
}

uint64_t sub_1DC91CA08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AOPClassificationResult.init(from:)(a1, a2);
}

uint64_t sub_1DC91CA20(void *a1)
{
  return AOPClassificationResult.encode(to:)(a1);
}

uint64_t _SNClassification.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____SNClassification_impl);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _SNClassification.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____SNClassification_impl);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC91CB50(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return _SNClassification.identifier.setter(v1, v2);
}

uint64_t (*_SNClassification.identifier.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____SNClassification_impl + 8);
  *a1 = *(void *)(v1 + OBJC_IVAR____SNClassification_impl);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1DC91CBEC;
}

uint64_t sub_1DC91CBEC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return _SNClassification.identifier.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  _SNClassification.identifier.setter(v3, v2);

  return swift_bridgeObjectRelease();
}

double _SNClassification.confidence.getter()
{
  return *(double *)(v0 + OBJC_IVAR____SNClassification_impl + 16);
}

void _SNClassification.confidence.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR____SNClassification_impl + 16) = a1;
}

double (*_SNClassification.confidence.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____SNClassification_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 16);
  return sub_1DC91CD08;
}

double sub_1DC91CD08(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + *(void *)(a1 + 16) + 16) = *(void *)a1;
  return result;
}

void sub_1DC91CD1C()
{
}

id sub_1DC91CD88(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = &v3[OBJC_IVAR____SNClassification_impl];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *((double *)v8 + 2) = a3;
  v10.uint64_t receiver = v3;
  v10.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id _SNClassification.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = v1 + OBJC_IVAR____SNClassification_impl;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____SNClassification_impl);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____SNClassification_impl + 8);
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v8 = (char *)objc_allocWithZone(ObjectType);
  uint64_t v9 = &v8[OBJC_IVAR____SNClassification_impl];
  *(void *)uint64_t v9 = v6;
  *((void *)v9 + 1) = v5;
  *((void *)v9 + 2) = v7;
  v11.uint64_t receiver = v8;
  v11.Class super_class = ObjectType;
  swift_bridgeObjectRetain();
  id result = objc_msgSendSuper2(&v11, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t _SNClassification.hash.getter()
{
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  sub_1DCB891E8();
  uint64_t v0 = sub_1DCB891F8();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL _SNClassification.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v12);
  if (v13)
  {
    sub_1DC87E9CC(&v12, v11);
    sub_1DC87E9DC((uint64_t)v11, (uint64_t)v10);
    if (swift_dynamicCast() && v9)
    {
      double v3 = *(double *)(v1 + OBJC_IVAR____SNClassification_impl + 16);
      double v4 = *(double *)&v9[OBJC_IVAR____SNClassification_impl + 16];
      if (*(void *)(v1 + OBJC_IVAR____SNClassification_impl) == *(void *)&v9[OBJC_IVAR____SNClassification_impl]
        && *(void *)(v1 + OBJC_IVAR____SNClassification_impl + 8) == *(void *)&v9[OBJC_IVAR____SNClassification_impl
                                                                                    + 8])
      {
      }
      else
      {
        char v6 = sub_1DCB89018();

        BOOL v7 = 0;
        if ((v6 & 1) == 0) {
          goto LABEL_14;
        }
      }
      BOOL v7 = v3 == v4;
    }
    else
    {
      BOOL v7 = 0;
    }
LABEL_14:
    sub_1DC8818D0((uint64_t)v11);
    return v7;
  }
  return 0;
}

uint64_t _SNClassification.__allocating_init(coder:)()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_1DC8C213C();
  return _SNClassification.init(coder:)(v2);
}

uint64_t _SNClassification.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  id v4 = v2;
  uint64_t v5 = (void *)sub_1DC9214D8();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v5);

  sub_1DC89C89C(0, &qword_1EAAA01C8);
  uint64_t v6 = sub_1DCB88658();
  if (v6)
  {
    BOOL v7 = (void *)v6;
    uint64_t v9 = 0;
    sub_1DCB87928();
  }
  swift_bridgeObjectRelease();
  sub_1DC9214CC();
  swift_deallocPartialClassInstance();
  return 0;
}

Swift::Void __swiftcall _SNClassification.encode(with:)(NSCoder with)
{
  double v3 = *(double *)(v1 + OBJC_IVAR____SNClassification_impl + 16);
  id v4 = (void *)sub_1DC9214D8();
  [(objc_class *)with.super.isa encodeDouble:v4 forKey:v3];

  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v6 = (id)sub_1DCB87908();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];
}

uint64_t _SNClassification.description.getter()
{
  return 0;
}

void sub_1DC91D480()
{
  *(void *)&v0[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;

  sub_1DCB88C68();
  __break(1u);
}

uint64_t _SNClassificationResult.classificationDictionary.getter()
{
  sub_1DC9213DC();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1DC91F56C(v1);
  sub_1DC8C213C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _SNClassificationResult.classificationDictionary.setter(uint64_t a1)
{
  uint64_t v2 = sub_1DC91F770(a1);
  swift_bridgeObjectRelease();
  uint64_t v3 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  swift_beginAccess();
  *(void *)(v3 + 48) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC91D6E8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return _SNClassificationResult.classificationDictionary.setter(v0);
}

uint64_t (*_SNClassificationResult.classificationDictionary.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = _SNClassificationResult.classificationDictionary.getter();
  return sub_1DC91D75C;
}

uint64_t sub_1DC91D75C(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return _SNClassificationResult.classificationDictionary.setter(*a1);
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  _SNClassificationResult.classificationDictionary.setter(v2);

  return swift_bridgeObjectRelease();
}

double _SNClassificationResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1DC921418();
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = *(void *)(v3 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  double result = *(double *)(v3 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v4;
  return result;
}

double _SNClassificationResult.timeRange.setter(double *a1)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 5);
  uint64_t v7 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1DC921524();
  *(void *)uint64_t v7 = v3;
  *(double *)(v7 + 8) = a1[1];
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v5;
  double result = a1[4];
  *(double *)(v7 + 32) = result;
  *(void *)(v7 + 40) = v6;
  return result;
}

void (*_SNClassificationResult.timeRange.modify(void *a1))(uint64_t **a1)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[12] = v1;
  _SNClassificationResult.timeRange.getter((uint64_t)v3);
  return sub_1DC91D9A4;
}

void sub_1DC91D9A4(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  uint64_t v3 = (*a1)[2];
  uint64_t v4 = (*a1)[3];
  uint64_t v5 = (*a1)[5];
  uint64_t v6 = (void *)((*a1)[12] + OBJC_IVAR____SNClassificationResult_impl);
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = (*a1)[4];
  sub_1DC921524();
  *uint64_t v6 = v2;
  v6[1] = v7;
  uint64_t v6[2] = v3;
  _OWORD v6[3] = v4;
  _OWORD v6[4] = v8;
  v6[5] = v5;

  free(v1);
}

uint64_t _SNClassificationResult.classifierIdentifier.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1DC9213DC();
  uint64_t v2 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _SNClassificationResult.classifierIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1DC921524();
  *(void *)(v5 + 56) = a1;
  *(void *)(v5 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC91DBB8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return _SNClassificationResult.classifierIdentifier.setter(v1, v2);
}

void (*_SNClassificationResult.classifierIdentifier.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void v3[5] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1DC921418();
  uint64_t v5 = *(void *)(v4 + 64);
  v3[3] = *(void *)(v4 + 56);
  v3[4] = v5;
  swift_bridgeObjectRetain();
  return sub_1DC91DC78;
}

void sub_1DC91DC78(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    swift_bridgeObjectRetain();
    _SNClassificationResult.classifierIdentifier.setter(v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    _SNClassificationResult.classifierIdentifier.setter(*(void *)(*(void *)a1 + 24), v4);
  }

  free(v2);
}

id sub_1DC91DCF0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  uint64_t v4 = MEMORY[0x1E4F1FA20];
  uint64_t v5 = *MEMORY[0x1E4F1FA20];
  uint64_t v6 = *(void *)(MEMORY[0x1E4F1FA20] + 16);
  uint64_t v7 = *(void *)(MEMORY[0x1E4F1FA20] + 24);
  uint64_t v8 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v9 = v1;
  uint64_t v10 = sub_1DCB877D8();
  objc_super v11 = &v9[OBJC_IVAR____SNClassificationResult_impl];
  *(void *)objc_super v11 = v5;
  *((void *)v11 + 1) = *(void *)(v4 + 8);
  *((void *)v11 + 2) = v6;
  *((void *)v11 + 3) = v7;
  *((void *)v11 + 4) = *(void *)(v4 + 32);
  *((void *)v11 + 5) = v8;
  *((void *)v11 + 6) = v10;
  *((void *)v11 + 7) = 0;
  *((void *)v11 + 8) = 0;

  v14.uint64_t receiver = v9;
  v14.Class super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  return v12;
}

id sub_1DC91DE08()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  uint64_t v2 = MEMORY[0x1E4F1FA20];
  uint64_t v3 = *MEMORY[0x1E4F1FA20];
  uint64_t v4 = *(void *)(MEMORY[0x1E4F1FA20] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4F1FA20] + 24);
  uint64_t v6 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v7 = v0;
  uint64_t v8 = sub_1DC8C213C();
  uint64_t v9 = sub_1DC91F770(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = &v0[OBJC_IVAR____SNClassificationResult_impl];
  *(void *)uint64_t v10 = v3;
  *((void *)v10 + 1) = *(void *)(v2 + 8);
  *((void *)v10 + 2) = v4;
  *((void *)v10 + 3) = v5;
  *((void *)v10 + 4) = *(void *)(v2 + 32);
  *((void *)v10 + 5) = v6;
  *((void *)v10 + 6) = v9;
  *((void *)v10 + 7) = 0;
  *((void *)v10 + 8) = 0;

  v12.uint64_t receiver = v0;
  v12.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

id sub_1DC91DF38(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return sub_1DC91DF48(a1, a2);
  }
  else {
    return 0;
  }
}

id sub_1DC91DF48(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____SNClassificationResult_impl;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (v7 && (v8 = sub_1DC9214CC(), unint64_t v10 = sub_1DC9637DC(v8, v9), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(*(void *)(v6 + 56) + 8 * v10);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v13 = (objc_class *)type metadata accessor for _SNClassification();
    objc_super v14 = (char *)objc_allocWithZone(v13);
    uint64_t v15 = &v14[OBJC_IVAR____SNClassification_impl];
    *(void *)uint64_t v15 = a1;
    *((void *)v15 + 1) = a2;
    *((void *)v15 + 2) = v12;
    v17.uint64_t receiver = v14;
    v17.Class super_class = v13;
    swift_bridgeObjectRetain();
    return objc_msgSendSuper2(&v17, sel_init);
  }
  else
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1DC91E0B4()
{
  uint64_t v1 = OBJC_IVAR____SNClassificationResult_cachedClassifications;
  if (*(void *)(v0 + OBJC_IVAR____SNClassificationResult_cachedClassifications))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____SNClassificationResult_cachedClassifications);
  }
  else
  {
    sub_1DC9213DC();
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DC91E14C(v3);
    swift_bridgeObjectRelease();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1DC91E14C(uint64_t a1)
{
  sub_1DC91B7EC(a1);
  uint64_t v14 = v1;
  swift_bridgeObjectRetain();
  sub_1DC91F950(&v14);
  swift_bridgeObjectRelease();
  uint64_t v2 = v14;
  uint64_t v3 = *(void *)(v14 + 16);
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v4 = (objc_class *)type metadata accessor for _SNClassification();
    uint64_t v5 = (uint64_t *)(v2 + 48);
    do
    {
      uint64_t v7 = *(v5 - 2);
      uint64_t v6 = *(v5 - 1);
      uint64_t v8 = *v5;
      v5 += 3;
      uint64_t v9 = (char *)objc_allocWithZone(v4);
      unint64_t v10 = &v9[OBJC_IVAR____SNClassification_impl];
      *(void *)unint64_t v10 = v7;
      *((void *)v10 + 1) = v6;
      *((void *)v10 + 2) = v8;
      v13.uint64_t receiver = v9;
      v13.Class super_class = v4;
      swift_bridgeObjectRetain();
      objc_msgSendSuper2(&v13, sel_init);
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      --v3;
    }
    while (v3);
    uint64_t v11 = v14;
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v11;
}

id sub_1DC91E308(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC921564();
  *(void *)&v1[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____SNClassificationResult_impl];
  *(void *)uint64_t v3 = v4;
  *((void *)v3 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v3 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v3 + 4) = *(void *)(a1 + 32);
  *((void *)v3 + 5) = v5;
  *((void *)v3 + 6) = v6;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a1 + 56);
  v9.uint64_t receiver = v1;
  v9.Class super_class = v7;
  return objc_msgSendSuper2(&v9, sel_init);
}

id _SNClassificationResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1DC921418();
  uint64_t v5 = *(void *)(v4 + 40);
  uint64_t v6 = *(void *)(v4 + 48);
  uint64_t v7 = *(void *)(v4 + 56);
  uint64_t v8 = *(void *)(v4 + 64);
  v11[0] = *(void *)v4;
  v11[1] = *(void *)(v4 + 8);
  long long v12 = *(_OWORD *)(v4 + 16);
  uint64_t v13 = *(void *)(v4 + 32);
  uint64_t v14 = v5;
  uint64_t v15 = v6;
  uint64_t v16 = v7;
  uint64_t v17 = v8;
  id v9 = objc_allocWithZone(ObjectType);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id result = sub_1DC91E308((uint64_t)v11);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t sub_1DC91E460(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr))
{
  id v5 = a1;
  a4(v8);

  sub_1DC881A8C(v8, v8[3]);
  uint64_t v6 = sub_1DCB89008();
  sub_1DC8818D0((uint64_t)v8);
  return v6;
}

uint64_t _SNClassificationResult.hash.getter()
{
  return sub_1DCA18274();
}

uint64_t _SNClassificationResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v30);
  if (v31)
  {
    sub_1DC87E9CC(&v30, v29);
    sub_1DC87E9DC((uint64_t)v29, (uint64_t)v23);
    if (swift_dynamicCast() && (uint64_t v3 = (void *)v17[0]) != 0)
    {
      uint64_t v4 = v1 + OBJC_IVAR____SNClassificationResult_impl;
      sub_1DC9213DC();
      sub_1DC921564();
      v23[0] = v5;
      uint64_t v6 = *(void *)(v4 + 8);
      long long v24 = *(_OWORD *)(v4 + 16);
      uint64_t v7 = *(void *)(v4 + 32);
      v23[1] = v6;
      uint64_t v25 = v7;
      uint64_t v26 = v8;
      uint64_t v27 = v9;
      long long v10 = *(_OWORD *)(v4 + 56);
      uint64_t v11 = v17[0] + OBJC_IVAR____SNClassificationResult_impl;
      long long v28 = v10;
      sub_1DC9213DC();
      sub_1DC921564();
      v17[0] = v12;
      v17[1] = *(void *)(v11 + 8);
      long long v18 = *(_OWORD *)(v11 + 16);
      uint64_t v19 = *(void *)(v11 + 32);
      uint64_t v20 = v13;
      uint64_t v21 = v14;
      long long v22 = *(_OWORD *)(v11 + 56);
      char v15 = sub_1DCA1BC3C(v23, v17);
    }
    else
    {
      char v15 = 0;
    }
    sub_1DC8818D0((uint64_t)v29);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1DC91E6CC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_1DCB88808();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    id v7 = a1;
  }
  char v8 = a4(v10);

  sub_1DC881978((uint64_t)v10);
  return v8 & 1;
}

id _SNClassificationResult.__allocating_init(coder:)()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_1DC8C213C();
  return _SNClassificationResult.init(coder:)(v2);
}

id _SNClassificationResult.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
  uint64_t v5 = v2;
  uint64_t v6 = sub_1DCB88658();
  if (!v6)
  {
    sub_1DC884E74();
    uint64_t v9 = (void *)swift_allocError();
    *long long v10 = 0;
    swift_willThrow();

LABEL_9:
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v7 = (void *)v6;
  sub_1DC89C89C(0, &qword_1EAAA01C8);
  char v8 = (void *)sub_1DCB88658();
  if (v8)
  {
    uint64_t v27 = 0;
    sub_1DCB87928();
  }
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v11 = sub_1DCB88668();
  if (!v11
    || (uint64_t v26 = v11, sub_1DC87E988(&qword_1EAAA01E8), sub_1DC87E988(&qword_1EAAA01F0), (swift_dynamicCast() & 1) == 0))
  {
    sub_1DC884E74();
    uint64_t v9 = (void *)swift_allocError();
    *long long v22 = 0;
    swift_willThrow();

    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v12 = v32;
  objc_msgSend(v7, sel_CMTimeRangeValue);
  uint64_t v13 = v26;
  long long v24 = (objc_class *)ObjectType;
  uint64_t v15 = v28;
  uint64_t v14 = v29;
  uint64_t v16 = v31;
  uint64_t v17 = v27;
  uint64_t v18 = v30;
  uint64_t v19 = sub_1DC91F770(v12);
  swift_bridgeObjectRelease();

  uint64_t v20 = &v5[OBJC_IVAR____SNClassificationResult_impl];
  *(void *)uint64_t v20 = v13;
  *((void *)v20 + 1) = v17;
  *((void *)v20 + 2) = v15;
  *((void *)v20 + 3) = v14;
  *((void *)v20 + 4) = v18;
  *((void *)v20 + 5) = v16;
  *((void *)v20 + 6) = v19;
  *((void *)v20 + 7) = 0;
  *((void *)v20 + 8) = 0;

  v25.uint64_t receiver = v5;
  v25.Class super_class = v24;
  id v21 = objc_msgSendSuper2(&v25, sel_init);

  return v21;
}

Swift::Void __swiftcall _SNClassificationResult.encode(with:)(NSCoder with)
{
  _SNClassificationResult.timeRange.getter((uint64_t)v16);
  uint64_t v3 = v16[0];
  uint64_t v4 = v16[2];
  uint64_t v5 = v16[3];
  uint64_t v6 = v16[5];
  id v7 = self;
  v15[0] = v3;
  v15[1] = v16[1];
  _OWORD v15[2] = v4;
  v15[3] = v5;
  v15[4] = v16[4];
  v15[5] = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v15);
  uint64_t v9 = (void *)sub_1DCB87908();
  [(objc_class *)with.super.isa encodeObject:v8 forKey:v9];

  _SNClassificationResult.classificationDictionary.getter();
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  long long v10 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  sub_1DC8E7B68();
  uint64_t v11 = (void *)sub_1DCB87908();
  [(objc_class *)with.super.isa encodeObject:v10 forKey:v11];

  uint64_t v12 = v1 + OBJC_IVAR____SNClassificationResult_impl;
  sub_1DC921418();
  if (*(void *)(v12 + 64))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    sub_1DC8E7B68();
    uint64_t v14 = (void *)sub_1DCB87908();
    [(objc_class *)with.super.isa encodeObject:v13 forKey:v14];
  }
}

id sub_1DC91ECF8(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t _SNClassificationResult.description.getter()
{
  v14.uint64_t receiver = v0;
  v14.Class super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v14, sel_description);
  uint64_t v2 = sub_1DCB87938();
  uint64_t v4 = v3;

  uint64_t v15 = v2;
  uint64_t v16 = v4;
  sub_1DCB87A18();
  _SNClassificationResult.timeRange.getter((uint64_t)v17);
  uint64_t v5 = v17[0];
  uint64_t v6 = v17[2];
  uint64_t v7 = v17[3];
  uint64_t v8 = v17[5];
  uint64_t v9 = self;
  v13[0] = v5;
  v13[1] = v17[1];
  _OWORD v13[2] = v6;
  v13[3] = v7;
  v13[4] = v17[4];
  v13[5] = v8;
  id v10 = objc_msgSend(v9, sel_valueWithCMTimeRange_, v13);
  id v11 = objc_msgSend(v10, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DC9213DC();
  swift_bridgeObjectRetain();
  sub_1DCB877C8();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

id sub_1DC91EEF0()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = sub_1DC9214CC();
  return sub_1DC91EF30(v2, v3);
}

id sub_1DC91EF30(uint64_t a1, unint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____SNClassificationResult_cachedClassifications] = 0;
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAAA0230);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
  uint64_t v6 = v2;
  uint64_t v17 = (void *)sub_1DCB884B8();
  if (v17)
  {
    uint64_t v18 = (char *)sub_1DC91F190();

    uint64_t v19 = &v18[OBJC_IVAR____SNClassificationResult_impl];
    sub_1DC921418();
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *((void *)v19 + 2);
    uint64_t v22 = *((void *)v19 + 6);
    uint64_t v33 = *((void *)v19 + 5);
    uint64_t v23 = *((void *)v19 + 8);
    uint64_t v30 = *((void *)v19 + 3);
    uint64_t v31 = *((void *)v19 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = *((void *)v19 + 1);
    uint64_t v25 = *((void *)v19 + 4);

    uint64_t v26 = &v6[OBJC_IVAR____SNClassificationResult_impl];
    *(void *)uint64_t v26 = v20;
    *((void *)v26 + 1) = v24;
    *((void *)v26 + 2) = v21;
    *((void *)v26 + 3) = v30;
    *((void *)v26 + 4) = v25;
    *((void *)v26 + 5) = v33;
    *((void *)v26 + 6) = v22;
    *((void *)v26 + 7) = v31;
    *((void *)v26 + 8) = v23;
  }
  else
  {
    sub_1DC92109C();
    uint64_t v29 = (void *)swift_allocError();
    swift_willThrow();
    sub_1DC8E7B68();
    sub_1DCAC5F78(0xD000000000000047, v7);
    uint64_t v8 = MEMORY[0x1E4F1FA20];
    uint64_t v9 = *MEMORY[0x1E4F1FA20];
    uint64_t v10 = *(void *)(MEMORY[0x1E4F1FA20] + 16);
    uint64_t v11 = *(void *)(MEMORY[0x1E4F1FA20] + 24);
    uint64_t v32 = a1;
    unint64_t v12 = a2;
    uint64_t v13 = ObjectType;
    uint64_t v14 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
    uint64_t v15 = sub_1DCB877D8();

    uint64_t v16 = &v6[OBJC_IVAR____SNClassificationResult_impl];
    *(void *)uint64_t v16 = v9;
    *((void *)v16 + 1) = *(void *)(v8 + 8);
    *((void *)v16 + 2) = v10;
    *((void *)v16 + 3) = v11;
    *((void *)v16 + 4) = *(void *)(v8 + 32);
    *((void *)v16 + 5) = v14;
    *((void *)v16 + 6) = v15;
    uint64_t ObjectType = v13;
    a2 = v12;
    a1 = v32;
    *((void *)v16 + 7) = 0;
    *((void *)v16 + 8) = 0;
  }

  v34.uint64_t receiver = v6;
  v34.Class super_class = ObjectType;
  id v27 = objc_msgSendSuper2(&v34, sel_init);
  sub_1DC881920(a1, a2);
  return v27;
}

uint64_t sub_1DC91F190()
{
  id v1 = objc_msgSend(v0, sel_impl);
  sub_1DCB88808();
  swift_unknownObjectRelease();
  type metadata accessor for _SNClassificationResult();
  swift_dynamicCast();
  return v3;
}

uint64_t sub_1DC91F25C()
{
  v13[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t ObjectType = (void *)swift_getObjectType();
  uint64_t v2 = self;
  v13[3] = ObjectType;
  v13[0] = v0;
  id v3 = objc_allocWithZone((Class)SNClassificationResult);
  id v4 = v0;
  uint64_t v5 = (void *)sub_1DCA21A84(v13);
  v13[0] = 0;
  id v6 = objc_msgSend(v2, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v5, 1, v13);

  id v7 = v13[0];
  if (v6)
  {
    uint64_t v8 = sub_1DCB86AD8();
  }
  else
  {
    uint64_t v9 = v7;
    uint64_t v10 = (void *)sub_1DCB86898();

    swift_willThrow();
    sub_1DC8E7B68();
    sub_1DCAC5F78(0xD000000000000043, v11);

    return 0;
  }
  return v8;
}

id sub_1DC91F404()
{
  swift_bridgeObjectRelease();
  sub_1DC9214CC();
  id v1 = (void *)sub_1DCB86AB8();
  id v2 = objc_msgSend(v0, sel_initWithBinarySampleRepresentation_, v1);
  uint64_t v3 = sub_1DC9214CC();
  sub_1DC881920(v3, v4);

  return v2;
}

void *sub_1DC91F56C(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA0250);
  id result = (void *)sub_1DCB88CD8();
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = (char *)(result + 8);
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    double v19 = *(double *)(*(void *)(a1 + 56) + 8 * i);
    id v20 = objc_allocWithZone(NSNumber);
    swift_bridgeObjectRetain();
    id result = objc_msgSend(v20, sel_initWithDouble_, v19);
    *(void *)&v10[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    uint64_t v21 = (void *)(v3[6] + 16 * i);
    *uint64_t v21 = v18;
    v21[1] = v17;
    *(void *)(v3[7] + 8 * i) = result;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v3[2] = v24;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return v3;
      }
      unint64_t v14 = *(void *)(v25 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return v3;
        }
        unint64_t v14 = *(void *)(v25 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return v3;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1DC91F770(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA0248);
  id result = (void *)sub_1DCB88CD8();
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = (char *)(result + 8);
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    double v19 = *(void **)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id result = objc_msgSend(v19, sel_doubleValue);
    *(void *)&v10[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    id v20 = (void *)(v3[6] + 16 * i);
    *id v20 = v18;
    v20[1] = v17;
    *(void *)(v3[7] + 8 * i) = v21;
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v3[2] = v24;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return v3;
      }
      unint64_t v14 = *(void *)(v25 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return v3;
        }
        unint64_t v14 = *(void *)(v25 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return v3;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DC91F950(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1DC8AEBA0();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1DC91F9BC(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1DC91F9BC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DCB88F88();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1DC920000(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_125;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1DCA07984(v3 / 2);
  id v90 = a1;
  uint64_t v91 = result;
  uint64_t v93 = v3;
  uint64_t v94 = v6;
  if (v3 <= 0)
  {
    uint64_t v95 = MEMORY[0x1E4FBC860];
    unint64_t v29 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_91:
    if (v29 < 2)
    {
LABEL_102:
      uint64_t result = swift_bridgeObjectRelease();
      if (v93 >= -1)
      {
        *(void *)(v91 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_130;
    }
    uint64_t v83 = *v90;
    while (1)
    {
      unint64_t v84 = v29 - 2;
      if (v29 < 2) {
        break;
      }
      if (!v83) {
        goto LABEL_134;
      }
      uint64_t v85 = v95;
      uint64_t v86 = *(void *)(v95 + 32 + 16 * v84);
      uint64_t v87 = *(void *)(v95 + 32 + 16 * (v29 - 1) + 8);
      uint64_t result = sub_1DC92007C(v83 + 24 * v86, (long long *)(v83 + 24 * *(void *)(v95 + 32 + 16 * (v29 - 1))), v83 + 24 * v87, v94);
      if (v1) {
        goto LABEL_87;
      }
      if (v87 < v86) {
        goto LABEL_120;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DC9756D8(v95);
        uint64_t v85 = result;
      }
      if (v84 >= *(void *)(v85 + 16)) {
        goto LABEL_121;
      }
      id v88 = (void *)(v85 + 32 + 16 * v84);
      *id v88 = v86;
      v88[1] = v87;
      unint64_t v89 = *(void *)(v85 + 16);
      if (v29 > v89) {
        goto LABEL_122;
      }
      uint64_t result = (uint64_t)memmove((void *)(v85 + 32 + 16 * (v29 - 1)), (const void *)(v85 + 32 + 16 * v29), 16 * (v89 - v29));
      uint64_t v95 = v85;
      *(void *)(v85 + 16) = v89 - 1;
      unint64_t v29 = v89 - 1;
      if (v89 <= 2) {
        goto LABEL_102;
      }
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v95 = MEMORY[0x1E4FBC860];
  uint64_t v92 = v5;
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 < v3)
    {
      double v10 = *(double *)(v8 + 24 * v7 + 16);
      double v11 = *(double *)(v8 + 24 * v9 + 16);
      uint64_t v7 = v9 + 2;
      if (v9 + 2 < v3)
      {
        unint64_t v12 = (double *)(v8 + 64 + 24 * v9);
        double v13 = v10;
        while (1)
        {
          double v14 = v13;
          double v13 = *v12;
          if (v11 < v10 == v14 >= *v12) {
            break;
          }
          ++v7;
          v12 += 3;
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v10)
      {
        if (v7 < v9) {
          goto LABEL_127;
        }
        if (v9 < v7)
        {
          uint64_t v15 = 24 * v7;
          uint64_t v16 = 24 * v9;
          uint64_t v17 = v7;
          uint64_t v18 = v9;
          do
          {
            if (v18 != --v17)
            {
              if (!v8) {
                goto LABEL_133;
              }
              uint64_t v19 = v8 + v16;
              uint64_t v20 = v8 + v15;
              uint64_t v21 = *(void *)(v8 + v16);
              uint64_t v22 = *(void *)(v8 + v16 + 8);
              uint64_t v23 = *(void *)(v8 + v16 + 16);
              uint64_t v24 = *(void *)(v8 + v15 - 8);
              *(_OWORD *)uint64_t v19 = *(_OWORD *)(v8 + v15 - 24);
              *(void *)(v19 + 16) = v24;
              *(void *)(v20 - 24) = v21;
              *(void *)(v20 - 16) = v22;
              *(void *)(v20 - 8) = v23;
            }
            ++v18;
            v15 -= 24;
            v16 += 24;
          }
          while (v18 < v17);
        }
      }
    }
    if (v7 >= v3) {
      goto LABEL_26;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_124;
    }
    if (v7 - v9 >= v5) {
      goto LABEL_26;
    }
    uint64_t v25 = v9 + v5;
    if (__OFADD__(v9, v5)) {
      goto LABEL_128;
    }
    if (v25 >= v3) {
      uint64_t v25 = v3;
    }
    if (v25 < v9) {
      goto LABEL_129;
    }
    if (v7 == v25)
    {
LABEL_26:
      uint64_t v26 = v95;
    }
    else
    {
      uint64_t v77 = (double *)(v8 + 24 * v7);
      uint64_t v26 = v95;
      do
      {
        double v78 = *(double *)(v8 + 24 * v7 + 16);
        uint64_t v79 = v9;
        uint64_t v80 = v77;
        do
        {
          if (*(v80 - 1) >= v78) {
            break;
          }
          if (!v8) {
            goto LABEL_131;
          }
          double v81 = *v80;
          uint64_t v82 = *((void *)v80 + 1);
          *(_OWORD *)uint64_t v80 = *(_OWORD *)(v80 - 3);
          v80[2] = *(v80 - 1);
          *((void *)v80 - 2) = v82;
          *(v80 - 1) = v78;
          *(v80 - 3) = v81;
          v80 -= 3;
          ++v79;
        }
        while (v7 != v79);
        ++v7;
        v77 += 3;
      }
      while (v7 != v25);
      uint64_t v7 = v25;
    }
    if (v7 < v9) {
      goto LABEL_123;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DC9755E0(0, *(void *)(v26 + 16) + 1, 1, (char *)v26);
      uint64_t v26 = result;
    }
    unint64_t v28 = *(void *)(v26 + 16);
    unint64_t v27 = *(void *)(v26 + 24);
    unint64_t v29 = v28 + 1;
    if (v28 >= v27 >> 1)
    {
      uint64_t result = (uint64_t)sub_1DC9755E0((char *)(v27 > 1), v28 + 1, 1, (char *)v26);
      uint64_t v26 = result;
    }
    *(void *)(v26 + 16) = v29;
    uint64_t v30 = v26 + 32;
    uint64_t v31 = (uint64_t *)(v26 + 32 + 16 * v28);
    *uint64_t v31 = v9;
    v31[1] = v7;
    uint64_t v95 = v26;
    if (v28) {
      break;
    }
    unint64_t v29 = 1;
LABEL_75:
    uint64_t v5 = v92;
    uint64_t v3 = v93;
    if (v7 >= v93) {
      goto LABEL_91;
    }
  }
  while (1)
  {
    unint64_t v32 = v29 - 1;
    if (v29 >= 4)
    {
      unint64_t v37 = v30 + 16 * v29;
      uint64_t v38 = *(void *)(v37 - 64);
      uint64_t v39 = *(void *)(v37 - 56);
      BOOL v43 = __OFSUB__(v39, v38);
      uint64_t v40 = v39 - v38;
      if (v43) {
        goto LABEL_108;
      }
      uint64_t v42 = *(void *)(v37 - 48);
      uint64_t v41 = *(void *)(v37 - 40);
      BOOL v43 = __OFSUB__(v41, v42);
      uint64_t v35 = v41 - v42;
      char v36 = v43;
      if (v43) {
        goto LABEL_109;
      }
      unint64_t v44 = v29 - 2;
      id v45 = (uint64_t *)(v30 + 16 * (v29 - 2));
      uint64_t v47 = *v45;
      uint64_t v46 = v45[1];
      BOOL v43 = __OFSUB__(v46, v47);
      uint64_t v48 = v46 - v47;
      if (v43) {
        goto LABEL_110;
      }
      BOOL v43 = __OFADD__(v35, v48);
      uint64_t v49 = v35 + v48;
      if (v43) {
        goto LABEL_112;
      }
      if (v49 >= v40)
      {
        uint64_t v67 = (uint64_t *)(v30 + 16 * v32);
        uint64_t v69 = *v67;
        uint64_t v68 = v67[1];
        BOOL v43 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v43) {
          goto LABEL_118;
        }
        BOOL v60 = v35 < v70;
        goto LABEL_64;
      }
    }
    else
    {
      if (v29 != 3)
      {
        uint64_t v61 = *(void *)(v26 + 32);
        uint64_t v62 = *(void *)(v26 + 40);
        BOOL v43 = __OFSUB__(v62, v61);
        uint64_t v54 = v62 - v61;
        char v55 = v43;
        goto LABEL_58;
      }
      uint64_t v34 = *(void *)(v26 + 32);
      uint64_t v33 = *(void *)(v26 + 40);
      BOOL v43 = __OFSUB__(v33, v34);
      uint64_t v35 = v33 - v34;
      char v36 = v43;
    }
    if (v36) {
      goto LABEL_111;
    }
    unint64_t v44 = v29 - 2;
    uint64_t v50 = (uint64_t *)(v30 + 16 * (v29 - 2));
    uint64_t v52 = *v50;
    uint64_t v51 = v50[1];
    BOOL v53 = __OFSUB__(v51, v52);
    uint64_t v54 = v51 - v52;
    char v55 = v53;
    if (v53) {
      goto LABEL_113;
    }
    uint64_t v56 = (uint64_t *)(v30 + 16 * v32);
    uint64_t v58 = *v56;
    uint64_t v57 = v56[1];
    BOOL v43 = __OFSUB__(v57, v58);
    uint64_t v59 = v57 - v58;
    if (v43) {
      goto LABEL_115;
    }
    if (__OFADD__(v54, v59)) {
      goto LABEL_117;
    }
    if (v54 + v59 >= v35)
    {
      BOOL v60 = v35 < v59;
LABEL_64:
      if (v60) {
        unint64_t v32 = v44;
      }
      goto LABEL_66;
    }
LABEL_58:
    if (v55) {
      goto LABEL_114;
    }
    id v63 = (uint64_t *)(v30 + 16 * v32);
    uint64_t v65 = *v63;
    uint64_t v64 = v63[1];
    BOOL v43 = __OFSUB__(v64, v65);
    uint64_t v66 = v64 - v65;
    if (v43) {
      goto LABEL_116;
    }
    if (v66 < v54) {
      goto LABEL_75;
    }
LABEL_66:
    unint64_t v71 = v32 - 1;
    if (v32 - 1 >= v29)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v8) {
      goto LABEL_132;
    }
    uint64_t v72 = (uint64_t *)(v30 + 16 * v71);
    uint64_t v73 = *v72;
    id v74 = (void *)(v30 + 16 * v32);
    uint64_t v75 = v74[1];
    uint64_t result = sub_1DC92007C(v8 + 24 * *v72, (long long *)(v8 + 24 * *v74), v8 + 24 * v75, v94);
    if (v1) {
      break;
    }
    if (v75 < v73) {
      goto LABEL_105;
    }
    if (v32 > *(void *)(v95 + 16)) {
      goto LABEL_106;
    }
    *uint64_t v72 = v73;
    *(void *)(v30 + 16 * v71 + 8) = v75;
    unint64_t v76 = *(void *)(v95 + 16);
    if (v32 >= v76) {
      goto LABEL_107;
    }
    uint64_t v26 = v95;
    unint64_t v29 = v76 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v30 + 16 * v32), v74 + 2, 16 * (v76 - 1 - v32));
    *(void *)(v95 + 16) = v76 - 1;
    if (v76 <= 2) {
      goto LABEL_75;
    }
  }
LABEL_87:
  uint64_t result = swift_bridgeObjectRelease();
  if (v93 < -1) {
    goto LABEL_126;
  }
  *(void *)(v91 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC920000(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 24 * a3;
    while (2)
    {
      double v6 = *(double *)(v4 + 24 * a3 + 16);
      uint64_t v7 = result;
      uint64_t v8 = (double *)v5;
      do
      {
        if (*(v8 - 1) >= v6) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        double v9 = *v8;
        uint64_t v10 = *((void *)v8 + 1);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)(v8 - 3);
        v8[2] = *(v8 - 1);
        *((void *)v8 - 2) = v10;
        *(v8 - 1) = v6;
        *(v8 - 3) = v9;
        v8 -= 3;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 24;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1DC92007C(unint64_t a1, long long *a2, unint64_t a3, long long *a4)
{
  uint64_t v4 = a4;
  double v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (uint64_t)a2 - a1;
  uint64_t v9 = (uint64_t)((uint64_t)a2 - a1) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  if (v9 >= v11)
  {
    sub_1DC897380(a2, (uint64_t)(a3 - (void)a2) / 24, a4);
    unint64_t v12 = (unint64_t)v4 + 24 * v11;
    if (v7 >= (unint64_t)v6 || v10 < 24) {
      goto LABEL_45;
    }
    unint64_t v21 = a3 - 24;
    while (1)
    {
      uint64_t v22 = (long long *)(v21 + 24);
      if (*((double *)v6 - 1) >= *(double *)(v12 - 8))
      {
        uint64_t v23 = (long long *)(v12 - 24);
        BOOL v25 = v22 != (long long *)v12 || v21 >= v12;
        v12 -= 24;
        if (!v25) {
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v23 = (long long *)((char *)v6 - 24);
        BOOL v24 = v22 != v6 || v21 >= (unint64_t)v6;
        double v6 = (long long *)((char *)v6 - 24);
        if (!v24) {
          goto LABEL_41;
        }
      }
      long long v26 = *v23;
      *(void *)(v21 + 16) = *((void *)v23 + 2);
      *(_OWORD *)unint64_t v21 = v26;
LABEL_41:
      v21 -= 24;
      if ((unint64_t)v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_45;
      }
    }
  }
  sub_1DC897380(a1, (uint64_t)((uint64_t)a2 - a1) / 24, a4);
  unint64_t v12 = (unint64_t)v4 + 24 * v9;
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    do
    {
      if (*((double *)v4 + 2) >= *((double *)v6 + 2))
      {
        BOOL v14 = v7 == (void)v4;
        uint64_t v15 = v4;
        uint64_t v4 = (long long *)((char *)v4 + 24);
        if (v14 && v7 < (unint64_t)v4) {
          goto LABEL_18;
        }
      }
      else
      {
        BOOL v14 = v7 == (void)v6;
        uint64_t v15 = v6;
        double v6 = (long long *)((char *)v6 + 24);
        if (v14 && v7 < (unint64_t)v6) {
          goto LABEL_18;
        }
      }
      long long v18 = *v15;
      *(void *)(v7 + 16) = *((void *)v15 + 2);
      *(_OWORD *)unint64_t v7 = v18;
LABEL_18:
      v7 += 24;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  double v6 = (long long *)v7;
LABEL_45:
  sub_1DC897380(v4, (uint64_t)(v12 - (void)v4) / 24, v6);
  return 1;
}

uint64_t sub_1DC920218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 64;
  sub_1DC9213B4();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  if (!v3) {
    goto LABEL_3;
  }
LABEL_2:
  sub_1DC921448();
  while (1)
  {
    sub_1DC921540();
    sub_1DC921478();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    sub_1DCB891E8();
    uint64_t result = sub_1DCB891F8();
    v6 ^= result;
    if (v3) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v8 >= v2) {
      goto LABEL_17;
    }
    ++v7;
    if (!*(void *)(v4 + 8 * v8))
    {
      uint64_t v7 = v8 + 1;
      if (v8 + 1 >= v2) {
        goto LABEL_17;
      }
      if (!*(void *)(v4 + 8 * v7)) {
        break;
      }
    }
LABEL_14:
    sub_1DC921430();
  }
  uint64_t v9 = v8 + 2;
  if (v9 >= v2)
  {
LABEL_17:
    swift_release();
    return sub_1DCB891B8();
  }
  if (*(void *)(v4 + 8 * v9))
  {
    uint64_t v7 = v9;
    goto LABEL_14;
  }
  while (1)
  {
    uint64_t v7 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v7 >= v2) {
      goto LABEL_17;
    }
    ++v9;
    if (*(void *)(v4 + 8 * v7)) {
      goto LABEL_14;
    }
  }
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_1DC920360()
{
  unint64_t result = qword_1EAAA0180;
  if (!qword_1EAAA0180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0180);
  }
  return result;
}

uint64_t sub_1DC9203AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA0190);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC920414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AOPClassificationResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC920478(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AOPClassificationResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC9204D4()
{
  return sub_1DC92051C((unint64_t *)&unk_1EAAA01F8, (void (*)(uint64_t))type metadata accessor for AOPClassificationResult);
}

uint64_t sub_1DC92051C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC920564()
{
  sub_1DC89D5C0();
  uint64_t result = _SNClassification.identifier.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

void sub_1DC920590()
{
  sub_1DC89D5C0();
  *uint64_t v0 = _SNClassification.confidence.getter();
}

void sub_1DC9205B8(double *a1)
{
}

uint64_t sub_1DC9205E0()
{
  sub_1DC89D5C0();
  uint64_t result = _SNClassificationResult.classificationDictionary.getter();
  *uint64_t v0 = result;
  return result;
}

double sub_1DC92060C@<D0>(uint64_t a1@<X8>)
{
  return _SNClassificationResult.timeRange.getter(a1);
}

double sub_1DC920630(double *a1)
{
  return _SNClassificationResult.timeRange.setter(a1);
}

uint64_t sub_1DC920654()
{
  sub_1DC89D5C0();
  uint64_t result = _SNClassificationResult.classifierIdentifier.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AOPClassificationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DCB86B98();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AOPClassificationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86B98();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86B98();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86B98();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86B98();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86B98();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DC920AD8);
}

uint64_t sub_1DC920AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DCB86B98();
  sub_1DC913CA0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AOPClassificationResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DC920B78);
}

void sub_1DC920B78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DCB86B98();
  sub_1DC913CA0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

uint64_t sub_1DC920C00()
{
  uint64_t result = sub_1DCB86B98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for _SNClassification()
{
  return self;
}

uint64_t method lookup function for _SNClassification(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _SNClassification);
}

uint64_t dispatch thunk of _SNClassification.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for _SNClassificationResult()
{
  return self;
}

uint64_t method lookup function for _SNClassificationResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _SNClassificationResult);
}

uint64_t dispatch thunk of _SNClassificationResult.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for AOPClassificationResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC920E08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AOPClassificationResult.CodingKeys()
{
  return &type metadata for AOPClassificationResult.CodingKeys;
}

unint64_t sub_1DC920E44()
{
  unint64_t result = qword_1EAAA0218;
  if (!qword_1EAAA0218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0218);
  }
  return result;
}

unint64_t sub_1DC920E94()
{
  unint64_t result = qword_1EAAA0220;
  if (!qword_1EAAA0220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0220);
  }
  return result;
}

unint64_t sub_1DC920EE4()
{
  unint64_t result = qword_1EAAA0228;
  if (!qword_1EAAA0228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0228);
  }
  return result;
}

uint64_t sub_1DC920F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 64;
  sub_1DC9213F8();
  uint64_t v5 = v4 & v3;
  int64_t v7 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  for (v5 &= v5 - 1; ; uint64_t v5 = (v12 - 1) & v12)
  {
    sub_1DC921540();
    sub_1DC921478();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    sub_1DCB891B8();
    uint64_t result = sub_1DCB891F8();
    v9 ^= result;
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v11 >= v7) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v2 + 8 * v11);
    ++v10;
    if (!v12)
    {
      int64_t v10 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_17;
      }
      uint64_t v12 = *(void *)(v2 + 8 * v10);
      if (!v12) {
        break;
      }
    }
LABEL_14:
    ;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v7)
  {
LABEL_17:
    swift_release();
    return sub_1DCB891B8();
  }
  uint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v10 = v13;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v2 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_14;
    }
  }
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_1DC92109C()
{
  unint64_t result = qword_1EAAA0240;
  if (!qword_1EAAA0240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0240);
  }
  return result;
}

uint64_t sub_1DC9210E8(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = a2 + 64;
  sub_1DC9213F8();
  uint64_t v4 = v3 & v2;
  int64_t v6 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  for (v4 &= v4 - 1; ; uint64_t v4 = (v11 - 1) & v11)
  {
    sub_1DC921540();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DCB891F8();
    v8 ^= result;
    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v10 >= v6) {
      goto LABEL_17;
    }
    uint64_t v11 = *(void *)(v13 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_17;
      }
      uint64_t v11 = *(void *)(v13 + 8 * v9);
      if (!v11) {
        break;
      }
    }
LABEL_14:
    ;
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_17:
    swift_release();
    return sub_1DCB891B8();
  }
  uint64_t v11 = *(void *)(v13 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_17;
    }
    uint64_t v11 = *(void *)(v13 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_14;
    }
  }
LABEL_19:
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for _SNClassificationResult.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC92132CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for _SNClassificationResult.DomainError()
{
  return &type metadata for _SNClassificationResult.DomainError;
}

unint64_t sub_1DC921368()
{
  unint64_t result = qword_1EAAA0258;
  if (!qword_1EAAA0258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0258);
  }
  return result;
}

uint64_t sub_1DC9213DC()
{
  return swift_beginAccess();
}

uint64_t sub_1DC921418()
{
  return swift_beginAccess();
}

uint64_t sub_1DC921478()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC9214A4()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC9214CC()
{
  return v0;
}

uint64_t sub_1DC9214D8()
{
  return sub_1DCB87908();
}

uint64_t sub_1DC921500()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DC921524()
{
  return swift_beginAccess();
}

uint64_t sub_1DC921550()
{
  return *(void *)(v0 - 104);
}

uint64_t static MediaUtils.extractAudio(mediaAssetURL:outputURL:)()
{
  sub_1DC8867A8();
  v0[11] = v1;
  v0[12] = v2;
  uint64_t v3 = sub_1DCB86A18();
  v0[13] = v3;
  v0[14] = *(void *)(v3 - 8);
  v0[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DC92162C, 0, 0);
}

uint64_t sub_1DC92162C()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[11];
  sub_1DC921CA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  id v5 = sub_1DC921CE0(v1);
  v0[16] = v5;
  sub_1DCB87938();
  objc_allocWithZone(MEMORY[0x1E4F16360]);
  id v6 = v5;
  id v7 = sub_1DC921D80(v6);
  v0[17] = v7;
  if (v7)
  {
    uint64_t v8 = MEMORY[0x1E4F1FA48];
    uint64_t v9 = *MEMORY[0x1E4F1FA48];
    v0[25] = *(void *)(MEMORY[0x1E4F1FA48] + 8);
    uint64_t v10 = *(void *)(v8 + 16);
    v0[18] = v9;
    v0[19] = v10;
    sub_1DC87E988(qword_1EAAA0270);
    uint64_t v11 = sub_1DCB86C68();
    v0[20] = v11;
    int64_t v12 = (void *)swift_task_alloc();
    v0[21] = v12;
    *int64_t v12 = v0;
    v12[1] = sub_1DC921814;
    return MEMORY[0x1F4182DC0](v0 + 8, v11);
  }
  else
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v13 = 0;
    swift_willThrow();

    swift_task_dealloc();
    sub_1DC8BA978();
    return v14();
  }
}

uint64_t sub_1DC921814()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *id v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v7 = sub_1DC921B3C;
  }
  else
  {
    swift_release();
    id v7 = sub_1DC921900;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1DC921900()
{
  sub_1DC8867A8();
  uint64_t v1 = v0[19];
  uint64_t v2 = (void *)v0[17];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[9];
  v0[2] = v0[18];
  v0[3] = v0[25];
  v0[4] = v1;
  v0[5] = v3;
  v0[6] = v5;
  v0[7] = v4;
  objc_msgSend(v2, sel_setTimeRange_, v0 + 2);
  uint64_t v6 = *MEMORY[0x1E4F15A88];
  id v7 = (void *)swift_task_alloc();
  v0[23] = v7;
  *id v7 = v0;
  v7[1] = sub_1DC9219EC;
  uint64_t v8 = v0[12];
  return MEMORY[0x1F4182DB0](v8, v6, 0, 0);
}

uint64_t sub_1DC9219EC()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    id v7 = sub_1DC921BB0;
  }
  else {
    id v7 = sub_1DC921AD0;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1DC921AD0()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void **)(v0 + 136);

  swift_task_dealloc();
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DC921B3C()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void **)(v0 + 136);

  swift_release();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DC921BB0()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v3 = (void *)v0[16];
  uint64_t v2 = (void *)v0[17];
  type metadata accessor for SNError();
  uint64_t v4 = (void *)sub_1DCB86888();
  sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, v4, 0x662074726F707865, 0xED000064656C6961);

  swift_willThrow();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v5();
}

unint64_t sub_1DC921CA0()
{
  unint64_t result = qword_1EAAA0268;
  if (!qword_1EAAA0268)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAA0268);
  }
  return result;
}

id sub_1DC921CE0(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = (void *)sub_1DCB86948();
  id v4 = objc_msgSend(v2, sel_initWithURL_options_, v3, 0);

  uint64_t v5 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

id sub_1DC921D80(void *a1)
{
  uint64_t v3 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithAsset_presetName_, a1, v3);

  return v4;
}

ValueMetadata *type metadata accessor for MediaUtils()
{
  return &type metadata for MediaUtils;
}

uint64_t sub_1DC921DFC()
{
  uint64_t result = _s21ServerEnvironmentImplVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC921EA4()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DC921ECC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x444965736163 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DC921F4C()
{
  return 0x444965736163;
}

uint64_t sub_1DC921F60(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA03A0);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9232D8();
  sub_1DCB892B8();
  sub_1DCB88F08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_1DC922064()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9220AC(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA0390);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)sub_1DC881A8C(a1, a1[3]);
  sub_1DC9232D8();
  sub_1DCB89298();
  if (!v1)
  {
    uint64_t v9 = sub_1DCB88DE8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  sub_1DC8818D0((uint64_t)a1);
  return v9;
}

uint64_t sub_1DC9221D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC921ECC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC922204(uint64_t a1)
{
  unint64_t v2 = sub_1DC9232D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC922240(uint64_t a1)
{
  unint64_t v2 = sub_1DC9232D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC92227C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9220AC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9222A8(void *a1)
{
  return sub_1DC921F60(a1);
}

uint64_t sub_1DC9222C4()
{
  return sub_1DC922064();
}

uint64_t sub_1DC9222CC()
{
  return sub_1DC921EA4();
}

uint64_t sub_1DC9222D4()
{
  return sub_1DCB87368();
}

uint64_t sub_1DC922328()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = _s21ServerEnvironmentImplVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_1DC9223F4()
{
  sub_1DC922328();

  return swift_deallocClassInstance();
}

uint64_t _s17ServerEnvironmentCMa()
{
  return swift_getGenericMetadata();
}

uint64_t _s21ServerEnvironmentImplVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC92247C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 64);
}

uint64_t sub_1DC922484()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC922540(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  int v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  uint64_t v8 = *a2;
  *(void *)a1 = *a2;
  if (v5 > 7
    || v7 != 0
    || ((((((((v6 + ((v5 + 24) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v11 = v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16));
  }
  else
  {
    uint64_t v11 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v12 = (a1 + v5 + 24) & ~v5;
    uint64_t v13 = ((unint64_t)a2 + v5 + 24) & ~v5;
    BOOL v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    swift_retain();
    v14(v12, v13, v3);
    uint64_t v15 = (void *)((v6 + v12) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)((v6 + v13) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v15 = *v16;
    uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v17 = *v18;
    uint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    *(void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_1DC9226DC(uint64_t a1, uint64_t a2)
{
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DC922798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(void *)(v4 - 8) + 16;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v8 = (v7 + 24 + a1) & ~v7;
  uint64_t v9 = (v7 + 24 + a2) & ~v7;
  swift_retain();
  v5(v8, v9, v4);
  uint64_t v10 = *(void *)(v6 + 48) + 7;
  uint64_t v11 = (void *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  BOOL v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v13 = *v14;
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1DC92289C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 24) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 24) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = v11 + v10;
  unint64_t v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v12 = *(void *)(v13 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  uint64_t v15 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v15 = *(void *)v14;
  swift_retain();
  swift_release();
  uint64_t v16 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  swift_retain();
  swift_release();
  *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC9229D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 24 + a1) & ~v6;
  uint64_t v8 = (v6 + 24 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  uint64_t v10 = (void *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  unint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v14 = *v15;
  *(void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC922AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 + 24 + a1) & ~v8;
  uint64_t v10 = (v8 + 24 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  swift_release();
  unint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v14 = *v15;
  swift_release();
  uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  swift_release();
  *(void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1DC922BB4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v9 = ((((((((*(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 24) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v10 = a2 - v8;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC922D14);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if ((v6 & 0x80000000) != 0) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(((unint64_t)a1 + v7 + 24) & ~v7, v6, v4);
  }
  uint64_t v18 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

void sub_1DC922D28(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((((((((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v9 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((((((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v13 = v12 + 1;
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((((((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v16 = a2 - v9;
    else {
      int v16 = 1;
    }
    if (((((((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v17 = ~v9 + a2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v17;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DC922F20);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v10 + 24] & ~v10;
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v19, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
            *((void *)a1 + 2) = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_1DC922F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1 + *(void *)(**(void **)v1 + 112);
  uint64_t v4 = _s21ServerEnvironmentImplVMa();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1DC922FD4()
{
  return swift_retain();
}

uint64_t sub_1DC923004()
{
  return swift_retain();
}

uint64_t sub_1DC923010()
{
  return swift_retain();
}

uint64_t sub_1DC92301C()
{
  return swift_retain();
}

uint64_t sub_1DC923028()
{
  return swift_retain();
}

uint64_t sub_1DC923034@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC922FD4();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

uint64_t sub_1DC923064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

unint64_t sub_1DC9230A0()
{
  unint64_t result = qword_1EAAA0378;
  if (!qword_1EAAA0378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0378);
  }
  return result;
}

unint64_t sub_1DC9230F0()
{
  unint64_t result = qword_1EAAA53B0;
  if (!qword_1EAAA53B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA53B0);
  }
  return result;
}

unint64_t sub_1DC923140()
{
  unint64_t result = qword_1EAAA0380;
  if (!qword_1EAAA0380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0380);
  }
  return result;
}

_UNKNOWN **sub_1DC92318C()
{
  return &off_1F37EB158;
}

unint64_t sub_1DC92319C()
{
  unint64_t result = qword_1EAAA0388;
  if (!qword_1EAAA0388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0388);
  }
  return result;
}

uint64_t sub_1DC9231E8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC923224(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC923260(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC92329C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DC9232D8()
{
  unint64_t result = qword_1EAAA0398;
  if (!qword_1EAAA0398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0398);
  }
  return result;
}

unint64_t sub_1DC923324()
{
  unint64_t result = qword_1EAAA03B0;
  if (!qword_1EAAA03B0)
  {
    sub_1DC8863A8(&qword_1EAAA03A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA03B0);
  }
  return result;
}

unsigned char *_s28ICACAudioDeviceConfigurationV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC923414);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s28ICACAudioDeviceConfigurationV10CodingKeysOMa()
{
  return &_s28ICACAudioDeviceConfigurationV10CodingKeysON;
}

ValueMetadata *_s28ICACAudioDeviceConfigurationVMa()
{
  return &_s28ICACAudioDeviceConfigurationVN;
}

ValueMetadata *_s23ICACAudioDeviceInstanceVMa()
{
  return &_s23ICACAudioDeviceInstanceVN;
}

unint64_t sub_1DC923470()
{
  unint64_t result = qword_1EAAA03B8;
  if (!qword_1EAAA03B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA03B8);
  }
  return result;
}

unint64_t sub_1DC9234C0()
{
  unint64_t result = qword_1EAAA03C0;
  if (!qword_1EAAA03C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA03C0);
  }
  return result;
}

unint64_t sub_1DC923510()
{
  unint64_t result = qword_1EAAA03C8[0];
  if (!qword_1EAAA03C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA03C8);
  }
  return result;
}

uint64_t sub_1DC92355C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC9235A8()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DC9235D8()
{
  sub_1DC9235A8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for X.Session()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC923624()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC92366C()
{
  sub_1DC923698();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DC923698()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1DC92372C()
{
  sub_1DC92366C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for X.ProxySession()
{
  return sub_1DC8866E4();
}

ValueMetadata *type metadata accessor for X()
{
  return &type metadata for X;
}

objc_class *sub_1DC923788(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_bridgeObjectRelease();
  uint64_t v5 = OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_modelDescription;
  *(void *)&v1[OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_modelDescription] = a1;
  uint64_t v6 = v1;
  id v7 = a1;
  id v8 = sub_1DC9AD840(0x15u, 0);
  if (v2)
  {

    unsigned int v9 = *(void **)&v1[v5];
    swift_deallocPartialClassInstance();
  }
  else
  {
    id v10 = v8;
    type metadata accessor for SNMLModelAdapter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    unsigned int v12 = (uint64_t *)&v6[OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_model];
    *unsigned int v12 = v11;
    v12[1] = (uint64_t)&off_1F37FEC00;

    v14.uint64_t receiver = v6;
    v14.Class super_class = ObjectType;
    uint64_t ObjectType = (objc_class *)objc_msgSendSuper2(&v14, sel_init);
  }
  return ObjectType;
}

uint64_t sub_1DC923954(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(v2 + OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_modelDescription);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____SNVGGishFeatureEmbeddingCustomModel_model + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
  id v8 = (void *)v7(ObjectType, v5);
  uint64_t v9 = sub_1DC8CFD8C(v4, v8);

  if (!v9) {
    goto LABEL_6;
  }
  id v10 = (void *)v7(ObjectType, v5);
  uint64_t v11 = sub_1DC8CFD98(v4, v10);

  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000002CLL, 0x80000001DCB92CF0);
    swift_willThrow();
    return v5;
  }
  sub_1DC8CFF34(a1, v9);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v18)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24))(v13, a2, ObjectType, v5);
    sub_1DC8D0040(v15, v11);
    uint64_t v5 = v16;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return v5;
}

void sub_1DC923C14()
{
}

uint64_t type metadata accessor for SNVGGishFeatureEmbeddingCustomModel()
{
  return self;
}

uint64_t *destroy for XPCEncoded(uint64_t *result)
{
  uint64_t v1 = result;
  unint64_t v2 = result[1];
  if (v2 >> 60 != 15) {
    unint64_t result = (uint64_t *)sub_1DC881920(*result, v2);
  }
  if (v1[2])
  {
    swift_release();
    return (uint64_t *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for XPCEncoded(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_1DC8AF450(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  uint64_t v6 = a2[2];
  if (v6)
  {
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(void *)(a1 + 40) = v7;
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
  }
  return a1;
}

uint64_t *assignWithCopy for XPCEncoded(uint64_t *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v5 = *a2;
      sub_1DC8AF450(*a2, a2[1]);
      *a1 = v5;
      a1[1] = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_1DC923EFC((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v6 = *a2;
  sub_1DC8AF450(*a2, a2[1]);
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  *a1 = v6;
  a1[1] = v4;
  sub_1DC881920(v7, v8);
LABEL_8:
  uint64_t v9 = a1 + 2;
  uint64_t v11 = a2 + 2;
  uint64_t v10 = a2[2];
  if (a1[2])
  {
    if (v10)
    {
      uint64_t v12 = a2[3];
      a1[2] = v10;
      a1[3] = v12;
      swift_retain();
      swift_release();
      uint64_t v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1DC923F50((uint64_t)(a1 + 2));
      long long v17 = *((_OWORD *)a2 + 2);
      *uint64_t v9 = *v11;
      *((_OWORD *)a1 + 2) = v17;
    }
  }
  else if (v10)
  {
    uint64_t v14 = a2[3];
    a1[2] = v10;
    a1[3] = v14;
    uint64_t v15 = a2[4];
    uint64_t v16 = a2[5];
    a1[4] = v15;
    a1[5] = v16;
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v18 = *((_OWORD *)a2 + 2);
    *uint64_t v9 = *v11;
    *((_OWORD *)a1 + 2) = v18;
  }
  return a1;
}

uint64_t sub_1DC923EFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC923F50(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for XPCEncoded(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1DC923EFC(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_1DC881920(v6, v4);
LABEL_6:
  uint64_t v7 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
LABEL_10:
    long long v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    return a1;
  }
  if (!v7)
  {
    sub_1DC923F50(a1 + 16);
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCEncoded(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCEncoded(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCEncoded()
{
  return &type metadata for XPCEncoded;
}

uint64_t sub_1DC924128()
{
  uint64_t v2 = v1;
  sub_1DCAD2DD0();
  uint64_t v3 = *v0;
  unint64_t v4 = v0[1];
  swift_retain();
  sub_1DC9AF8E8(v3, v4);
  if (!v2)
  {
    swift_release();
    uint64_t v5 = v0[2];
    uint64_t v6 = v0[3];
    uint64_t v8 = v0[4];
    uint64_t v7 = v0[5];
    swift_retain();
    sub_1DC884B30(v5, v6, v8, v7);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1DC9241DC()
{
  return sub_1DC924128();
}

uint64_t sub_1DC9241F4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC924288;
  return sub_1DC977FC0();
}

uint64_t sub_1DC924288(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88679C();
  void *v8 = v7;
  swift_task_dealloc();
  if (v1)
  {
    long long v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1DC9243A8, 0, 0);
  }
}

uint64_t sub_1DC9243A8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (uint64_t *)v0[2];
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = *(void *)(v3 + 16);
  unint64_t v6 = *(void *)(v3 + 24);
  sub_1DC8B9C40(v5, v6);
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  uint64_t v9 = v4[4];
  uint64_t v10 = v4[5];
  swift_retain();
  sub_1DC884F60(v7);
  swift_release();
  swift_release();
  *uint64_t v2 = v5;
  v2[1] = v6;
  v2[2] = v7;
  void v2[3] = v8;
  v2[4] = v9;
  v2[5] = v10;
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1DC924480(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 72) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC924524;
  return sub_1DC9241F4(v1 + 16);
}

uint64_t sub_1DC924524()
{
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *unint64_t v6 = v5;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v7 = *(_OWORD **)(v3 + 64);
    long long v8 = *(_OWORD *)(v3 + 16);
    long long v9 = *(_OWORD *)(v3 + 48);
    v7[1] = *(_OWORD *)(v3 + 32);
    void v7[2] = v9;
    *uint64_t v7 = v8;
  }
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t sub_1DC924608()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC92469C()
{
  uint64_t v0 = swift_allocObject();
  sub_1DC9246DC();
  return v0;
}

uint64_t sub_1DC9246DC()
{
  sub_1DC8FB9A8();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 32))(v0 + *(void *)(v1 + 88));
  return v0;
}

uint64_t sub_1DC92474C()
{
  sub_1DC8FB9A8();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(v0 + *(void *)(v1 + 88));
  return v0;
}

uint64_t sub_1DC9247B8()
{
  sub_1DC92474C();
  sub_1DC89F6D8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WrapperRef()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC924808()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC92489C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)v2 + *(void *)(**(void **)v2 + 88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 80) - 8) + 16))(a2, v5);
}

uint64_t sub_1DC924934@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC92469C();
  *a1 = result;
  return result;
}

uint64_t sub_1DC92495C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v21[1] = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v9 = v8;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v21 - v14;
  uint64_t v16 = *(void (**)(uint64_t))(a4 + 16);
  uint64_t v17 = sub_1DC9259E8();
  v16(v17);
  uint64_t v18 = sub_1DC9259E8();
  v16(v18);
  LOBYTE(v16) = sub_1DCB878C8();
  unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, AssociatedTypeWitness);
  v19(v15, AssociatedTypeWitness);
  return v16 & 1;
}

uint64_t sub_1DC924AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_1DCB87818();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
}

uint64_t sub_1DC924BA8()
{
  sub_1DC9259B8();
  v1();
  uint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = v2(AssociatedTypeWitness, v0);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1DC924C38()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  swift_retain();
  uint64_t v4 = v3(ObjectType, v1);
  swift_release();
  return v4;
}

uint64_t sub_1DC924CAC()
{
  sub_1DC9259B8();
  v1();
  uint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = v2(AssociatedTypeWitness, v0);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1DC924D34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)(v2 + 16) + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24);
  swift_retain();
  uint64_t v8 = v7(a1, a2, ObjectType, v5);
  swift_release();
  return v8;
}

uint64_t sub_1DC924DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16))(&v13, a3, a5);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = v9(a1, a2, AssociatedTypeWitness, a6);
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1DC924EBC()
{
  sub_1DC89F6D8();
  uint64_t v2 = v1;
  uint64_t v6 = v0;
  sub_1DCB891A8();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1DC924AAC((uint64_t)v5, v2, WitnessTable);
  return sub_1DCB891F8();
}

uint64_t sub_1DC924F68()
{
  sub_1DC8FB9A8();
  sub_1DC8FB9A8();
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 80) - 8) + 16))();
}

uint64_t sub_1DC924FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DC92495C(a1, a2, v4, WitnessTable, v9, v7) & 1;
}

uint64_t sub_1DC925044()
{
  return sub_1DC924EBC();
}

uint64_t sub_1DC92506C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_1DC924AAC(a1, a2, WitnessTable);
}

uint64_t sub_1DC9250D4(uint64_t a1, uint64_t a2)
{
  sub_1DCB891A8();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DC924AAC((uint64_t)v5, a2, WitnessTable);
  return sub_1DCB891F8();
}

uint64_t sub_1DC925148()
{
  swift_getWitnessTable();

  return sub_1DC924BA8();
}

uint64_t sub_1DC9251D0()
{
  swift_getWitnessTable();

  return sub_1DC924CAC();
}

uint64_t sub_1DC925258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DC924DD8(a1, a2, v7, v10, WitnessTable, v8);
}

id sub_1DC9252F4(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_1DC925328(a1);
}

id sub_1DC925328(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC8FB9A8();
  sub_1DC8FB9A8();
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(void))(v6 + 16))();
  v9.uint64_t receiver = v1;
  v9.Class super_class = ObjectType;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return v7;
}

uint64_t sub_1DC925420(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v9 = v1;
  sub_1DC8FB9A8();
  v8[2] = *(void *)(v3 + 80);
  sub_1DC8FB9A8();
  return sub_1DC933F04((uint64_t)&v9, a1, (uint64_t)sub_1DC9259B0, (uint64_t)v8, v5, v6, *(void *)(*(void *)(v4 + 88) + 8)) & 1;
}

uint64_t sub_1DC9254C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(a2 - 8) + 16))(a3, *a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0x60), a2);
}

uint64_t sub_1DC925520(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1DCB88808();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    id v5 = a1;
  }
  char v6 = sub_1DC925420((uint64_t)v8);

  sub_1DC881978((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_1DC925598(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1DC9255CC();

  return v2;
}

uint64_t sub_1DC9255CC()
{
  uint64_t v1 = *MEMORY[0x1E4FBC8C8] & *(void *)v0;
  uint64_t v2 = *(void *)(v1 + 0x50);
  sub_1DC88D538();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v10 - v6;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)&v10 - v6, &v0[*(void *)(v1 + 96)], v2);
  uint64_t v8 = sub_1DCB87828();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  return v8;
}

id sub_1DC9256DC@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DC8FB9A8();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - v5;
  sub_1DC8FB9A8();
  (*(void (**)(char *, uint64_t))(v8 + 16))(v6, v1 + *(void *)(v7 + 96));
  id result = sub_1DC9252F4((uint64_t)v6);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t sub_1DC9257DC(void *a1)
{
  id v1 = a1;
  sub_1DC9256DC(v4);

  sub_1DC881A8C(v4, v4[3]);
  uint64_t v2 = sub_1DCB89008();
  sub_1DC8818D0((uint64_t)v4);
  return v2;
}

void sub_1DC92583C()
{
}

void sub_1DC92586C()
{
}

uint64_t sub_1DC92587C(char *a1)
{
  return (*(uint64_t (**)(char *))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x60)]);
}

uint64_t type metadata accessor for WrapperNSHashableShallowCopying()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC9258FC()
{
  return sub_1DC924F68();
}

id sub_1DC925920@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1DC9252F4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DC925948()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC925998(uint64_t a1, uint64_t a2)
{
  return sub_1DC924D34(a1, a2);
}

uint64_t sub_1DC9259B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9254C0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DC9259E8()
{
  return v0;
}

uint64_t sub_1DC9259FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC925A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v7[2] = a4;
  v7[3] = a5;
  v7[4] = a6;
  v7[5] = a2;
  v7[6] = a3;
  return sub_1DC925D38(a1, (void (*)(uint64_t, char *))sub_1DC92F28C, (uint64_t)v7, a4, a5, a6);
}

uint64_t sub_1DC925A5C@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  sub_1DC88D538();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  uint64_t v10 = *(void *)(v9 + 16);
  sub_1DC88D538();
  MEMORY[0x1F4188790](v11);
  sub_1DC8A22D0();
  uint64_t v14 = v13 - v12;
  sub_1DC88D538();
  MEMORY[0x1F4188790](v15);
  sub_1DC8A22D0();
  uint64_t v18 = v17 - v16;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v17 - v16, v20);
  uint64_t v21 = 1;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v18, 1, v10) != 1)
  {
    sub_1DC92F630();
    v22();
    a1(v14, v8);
    sub_1DC92F4D8();
    v23();
    if (v3)
    {
      sub_1DC92F47C();
      return v24();
    }
    uint64_t v21 = 0;
  }
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a3, v21, 1, a2);
}

uint64_t sub_1DC925C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a6 - 8);
  uint64_t v10 = MEMORY[0x1F4188790]();
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v13(v10);
  if (!v6)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, a6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v12, a6);
  }
  return result;
}

uint64_t sub_1DC925D38(uint64_t a1, void (*a2)(uint64_t, char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v68 = a2;
  uint64_t v69 = a3;
  uint64_t v70 = a1;
  swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v55 = v11;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v12);
  uint64_t v54 = (char *)&v53 - v13;
  uint64_t v61 = v14;
  uint64_t v15 = sub_1DCB88718();
  sub_1DC8BADF0(v15);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v53 - v17;
  sub_1DC88D538();
  uint64_t v58 = v19;
  MEMORY[0x1F4188790](v20);
  sub_1DC88D550();
  uint64_t v59 = v21;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v57 = v23;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v24);
  uint64_t v72 = (char *)&v53 - v25;
  sub_1DC88D538();
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v28);
  sub_1DC888120();
  uint64_t v62 = v29;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v30);
  uint64_t v73 = sub_1DCB87778();
  id v63 = v6;
  uint64_t AssociatedConformanceWitness = a4;
  uint64_t v60 = a6;
  uint64_t result = sub_1DCB87AD8();
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = sub_1DCB87D78();
    sub_1DC92F548();
    sub_1DCB87C98();
    uint64_t v33 = v27;
    uint64_t v56 = v27;
    uint64_t v34 = a5;
    uint64_t v71 = AssociatedTypeWitness;
    uint64_t v35 = v33 + 16;
    char v36 = *(void (**)(void))(v33 + 16);
    sub_1DC92F67C();
    v36();
    uint64_t v67 = v32;
    sub_1DCB87D48();
    uint64_t v70 = v34;
    uint64_t v65 = v36;
    uint64_t v66 = v35;
    sub_1DC92F67C();
    v36();
    (*(void (**)(uint64_t, void, uint64_t))(v58 + 16))(v59, v63, AssociatedConformanceWitness);
    sub_1DCB87AC8();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1DCB88758();
    uint64_t v37 = sub_1DC92F754();
    uint64_t v38 = v61;
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v37, v39, v61) == 1)
    {
LABEL_6:
      sub_1DC88D5C8();
      v47();
      sub_1DC88D5C8();
      v48();
      return v73;
    }
    else
    {
      uint64_t v40 = v54;
      id v63 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
      uint64_t v41 = v62;
      while (1)
      {
        v63(v40, v18, v38);
        v68(v41, v40);
        if (v7) {
          break;
        }
        sub_1DC8E7D10();
        v42();
        sub_1DCB87D48();
        uint64_t v43 = sub_1DC92F5E4();
        v44(v43);
        sub_1DCB88758();
        uint64_t v45 = sub_1DC92F754();
        if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v45, v46, v38) == 1) {
          goto LABEL_6;
        }
      }
      uint64_t v49 = sub_1DC92F5E4();
      v50(v49);
      sub_1DC88D5C8();
      v51();
      sub_1DC88D5C8();
      v52();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1DC926190()
{
  sub_1DC89D9F8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for ExclusiveReductionsSequence.Iterator();
  uint64_t v9 = v7 + *(int *)(v8 + 44);
  sub_1DC92F654(v9);
  sub_1DC92F6D0();
  swift_getAssociatedTypeWitness();
  sub_1DC8F0494();
  sub_1DC92F47C();
  v10();
  sub_1DCB88718();
  sub_1DC8F0494();
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v9, v5);
  uint64_t v12 = (void *)(v7 + *(int *)(v8 + 48));
  *uint64_t v12 = v3;
  v12[1] = v1;
  sub_1DC89DA54();
}

void sub_1DC926294()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v43 = v3;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v41 = *(void *)(v1 + 32);
  uint64_t v39 = v4;
  swift_getAssociatedTypeWitness();
  uint64_t v42 = sub_1DC92F5CC();
  sub_1DC88D538();
  uint64_t v40 = v5;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = *(void *)(v2 + 24);
  sub_1DC92F6D0();
  uint64_t v8 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1DC888120();
  uint64_t v38 = v12;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v35 - v14;
  sub_1DC88D538();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  sub_1DC8A22D0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = v0 + *(int *)(v2 + 44);
  sub_1DC8E7D10();
  v23();
  sub_1DC92F3B0((uint64_t)v15, 1, v7);
  if (v24)
  {
    uint64_t v25 = sub_1DC92F548();
    v26(v25);
    uint64_t v34 = 1;
  }
  else
  {
    uint64_t v37 = *(void *)(v17 + 32);
    sub_1DC92F670();
    v27();
    uint64_t v28 = v41;
    uint64_t v36 = v22;
    uint64_t v29 = v39;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v30 = sub_1DCB88758();
    uint64_t v35 = (uint64_t)&v35;
    MEMORY[0x1F4188790](v30);
    *(&v35 - 6) = v29;
    *(&v35 - 5) = v7;
    *(&v35 - 4) = v28;
    *(&v35 - 3) = v21;
    *(&v35 - 2) = v0;
    uint64_t v31 = v38;
    sub_1DC925A5C((void (*)(uint64_t, uint64_t))sub_1DC9295FC, v7, v38);
    sub_1DC88D5C8();
    v32();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v36, v31, v8);
    sub_1DC92F670();
    v33();
    uint64_t v34 = 0;
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v43, v34, 1, v7);
  sub_1DC89DA54();
}

uint64_t sub_1DC926598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(a5, a2, a4);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(a3
                                               + *(int *)(type metadata accessor for ExclusiveReductionsSequence.Iterator()
                                                        + 48));
  swift_retain();
  v8(a5, a1);
  return swift_release();
}

void sub_1DC926660()
{
  sub_1DC89D9F8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = sub_1DCB88718();
  sub_1DC8BADF0(v5);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v6);
  sub_1DC92F688();
  uint64_t v7 = *(void *)(v3 + 16);
  sub_1DC88D538();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC909E14();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC8BADF0(AssociatedTypeWitness);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v0, v0, v7);
  sub_1DCB87AC8();
  sub_1DC8F0494();
  (*(void (**)(uint64_t))(v13 + 16))(v1);
  sub_1DC92F748();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v14, v15, v16, v4);
  swift_retain();
  sub_1DC926190();
  sub_1DC89DA54();
}

uint64_t sub_1DC92680C(uint64_t a1, uint64_t a2)
{
  return sub_1DC92858C(a1, a2, sub_1DC926660);
}

uint64_t sub_1DC926830()
{
  return sub_1DCB87B28();
}

uint64_t sub_1DC926854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _s5IndexV14RepresentationOMa();
  sub_1DC8F0494();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);

  return v6(a2, a1, v4);
}

void sub_1DC9268BC()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v28 = v3;
  uint64_t v5 = v4;
  sub_1DC92F6DC();
  swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v27 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1DC888120();
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v8);
  sub_1DC888190();
  uint64_t v9 = _s5IndexV14RepresentationOMa();
  uint64_t v10 = sub_1DC92F3E8();
  sub_1DC8BADF0(v10);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v11);
  sub_1DC92F7DC();
  uint64_t v13 = v0 + v12;
  sub_1DC8F0494();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v15(v0, v5, v9);
  v15(v13, v28, v9);
  sub_1DC92F504();
  uint64_t v16 = sub_1DC92F3E8();
  uint64_t v17 = sub_1DC92F754();
  sub_1DC92F3B0(v17, v18, v16);
  if (!v20)
  {
    uint64_t v19 = *(int *)(v16 + 48);
    sub_1DC92F3B0(v13, 1, v16);
    if (!v20)
    {
      uint64_t v23 = *(void (**)(void))(v27 + 32);
      sub_1DC92F670();
      v23();
      sub_1DC92F670();
      v23();
      swift_getAssociatedConformanceWitness();
      sub_1DCB878C8();
      char v24 = *(void (**)(void))(v27 + 8);
      sub_1DC92F4D8();
      v24();
      sub_1DC92F4D8();
      v24();
      sub_1DC8F0494();
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v26(v13 + v19, v2);
      v26(v0 + v19, v2);
      goto LABEL_8;
    }
LABEL_7:
    sub_1DC8F0494();
    sub_1DC88D5C8();
    v21();
    sub_1DC88D5C8();
    v22();
    goto LABEL_8;
  }
  sub_1DC92F3B0(v13, 1, v16);
  if (!v20) {
    goto LABEL_7;
  }
LABEL_8:
  sub_1DC89DA54();
}

void sub_1DC926BD8()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v27 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1DC888120();
  uint64_t v26 = v6;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v7);
  sub_1DC888190();
  uint64_t v25 = v8;
  uint64_t v9 = _s5IndexV14RepresentationOMa();
  uint64_t v10 = sub_1DC92F3E8();
  sub_1DC8BADF0(v10);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v11);
  sub_1DC92F4F4();
  uint64_t v13 = v0 + *(int *)(v12 + 56);
  uint64_t v14 = *(void (**)(void))(*(void *)(v9 - 8) + 16);
  sub_1DC92F67C();
  v14();
  sub_1DC92F67C();
  v14();
  sub_1DC92F504();
  uint64_t v15 = sub_1DC92F3E8();
  sub_1DC92F3B0(v0, 1, v15);
  if (v17)
  {
    sub_1DC8881AC();
    v16();
  }
  else
  {
    sub_1DC92F3B0(v13, 1, v15);
    if (v17)
    {
      sub_1DC92F548();
      sub_1DC8881AC();
      v18();
    }
    else
    {
      uint64_t v19 = *(int *)(v15 + 48);
      uint64_t v28 = v0 + v19;
      uint64_t v24 = v13 + v19;
      char v20 = *(void (**)(void))(v27 + 32);
      sub_1DC92F7F0();
      v20();
      sub_1DC92F7F0();
      v20();
      swift_getAssociatedConformanceWitness();
      sub_1DCB87868();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v21(v26, AssociatedTypeWitness);
      v21(v25, AssociatedTypeWitness);
      sub_1DC8F0494();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v23(v24, v2);
      v23(v28, v2);
    }
  }
  sub_1DC89DA54();
}

void sub_1DC926EB8()
{
}

void sub_1DC926ED4()
{
}

void sub_1DC926EE4()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v3 = _s5IndexV14RepresentationOMa();
  sub_1DC8BADF0(v3);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v4);
  sub_1DC92F4E4();
  sub_1DC92F7FC();
  uint64_t v5 = sub_1DC92F3E8();
  uint64_t v6 = v0 + *(int *)(v5 + 48);
  sub_1DCB880B8();
  sub_1DC8F0494();
  (*(void (**)(uint64_t))(v7 + 16))(v6);
  sub_1DC92F748();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v8, v9, v10, v5);
  sub_1DC926854(v0, v2);
  sub_1DC89DA54();
}

uint64_t sub_1DC927000@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = _s5IndexV14RepresentationOMa();
  sub_1DC8BADF0(v3);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v4);
  sub_1DC92F4F4();
  sub_1DC92F7FC();
  uint64_t v5 = sub_1DC92F3E8();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 1, 1, v5);
  return sub_1DC926854(v1, a1);
}

uint64_t sub_1DC9270CC(uint64_t a1)
{
  _s5IndexV14RepresentationOMa();
  sub_1DC88D538();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v11 - v3;
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v11 - v3, a1);
  swift_getAssociatedTypeWitness();
  sub_1DC92F6D0();
  uint64_t v6 = sub_1DC92F3E8();
  sub_1DC92F3B0((uint64_t)v4, 1, v6);
  if (v7)
  {
    sub_1DC92F714();
    uint64_t v11 = 279;
    sub_1DC8CD988();
    sub_1DC92F708();
    sub_1DC92F4BC();
    sub_1DC92F6FC();
  }
  sub_1DC8F0494();
  sub_1DC92F47C();
  v8();
  sub_1DC8F0494();
  sub_1DC88D5C8();
  return v9();
}

void sub_1DC927254()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v68 = v7;
  uint64_t v8 = *(void *)(v3 + 16);
  sub_1DC88D538();
  uint64_t v64 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  uint64_t v62 = v11;
  swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v60 = v13;
  uint64_t v61 = v12;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v14);
  uint64_t v58 = (char *)v57 - v15;
  uint64_t v59 = (char *)v4;
  uint64_t v16 = *(void *)(v4 + 24);
  sub_1DC88D538();
  uint64_t v71 = v17;
  MEMORY[0x1F4188790](v18);
  sub_1DC88D550();
  uint64_t v69 = v19;
  sub_1DC92F6D0();
  swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v23);
  sub_1DC92F6DC();
  uint64_t v24 = v2;
  _s5IndexV14RepresentationOMa();
  sub_1DC88D538();
  MEMORY[0x1F4188790](v25);
  uint64_t v67 = (uint64_t)v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)v57 - v28;
  (*(void (**)(char *, uint64_t))(v30 + 16))((char *)v57 - v28, v6);
  uint64_t v70 = v16;
  uint64_t v31 = sub_1DC92F3E8();
  sub_1DC92F3B0((uint64_t)v29, 1, v31);
  if (v32)
  {
    sub_1DC92F714();
    v57[0] = 291;
    sub_1DC8CD988();
    sub_1DC92F708();
    sub_1DC92F4BC();
    sub_1DC92F6FC();
  }
  uint64_t v65 = &v29[*(int *)(v31 + 48)];
  uint64_t v66 = v31;
  sub_1DC8E7D10();
  v33();
  uint64_t v63 = v0;
  sub_1DCB88118();
  swift_getAssociatedConformanceWitness();
  char v34 = sub_1DCB878C8();
  uint64_t v35 = *(void (**)(void))(v21 + 8);
  sub_1DC92F4D8();
  v35();
  sub_1DC92F4D8();
  v35();
  if (v34)
  {
    uint64_t v36 = v67;
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v67, 1, 1, v66);
    sub_1DC926854(v36, v68);
    sub_1DC88D5C8();
    v37();
    sub_1DC92F4D8();
    v35();
  }
  else
  {
    sub_1DC92F670();
    v38();
    uint64_t v39 = *(void *)(v71 + 32);
    v71 += 32;
    v57[2] = v39;
    sub_1DC92F47C();
    v40();
    uint64_t v41 = (char **)(v63 + *((int *)v59 + 12));
    uint64_t v43 = *v41;
    uint64_t v42 = v41[1];
    uint64_t v65 = v43;
    uint64_t v59 = v42;
    v57[1] = v24;
    unint64_t v44 = (void (*)(uint64_t *, void))sub_1DCB88218();
    uint64_t v45 = v58;
    sub_1DC8E7D10();
    v46();
    v44(&v72, 0);
    ((void (*)(uint64_t, char *))v65)(v69, v45);
    sub_1DC8881AC();
    v47();
    uint64_t v49 = v66;
    uint64_t v48 = v67;
    uint64_t v65 = (char *)(v67 + *(int *)(v66 + 48));
    uint64_t v50 = v64;
    uint64_t v51 = v62;
    sub_1DC8E7D10();
    v52();
    sub_1DCB880D8();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v8);
    sub_1DC92F4D8();
    v35();
    sub_1DC92F47C();
    v53();
    sub_1DC92F748();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v54, v55, v56, v49);
    sub_1DC926854(v48, v68);
  }
  sub_1DC89DA54();
}

void sub_1DC927788()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v32 = v3;
  uint64_t v33 = v4;
  sub_1DC92F504();
  swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v8);
  sub_1DC888190();
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = _s5IndexV14RepresentationOMa();
  sub_1DC92F504();
  uint64_t v11 = sub_1DC92F3E8();
  sub_1DC8BADF0(v11);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v12);
  sub_1DC92F7DC();
  uint64_t v14 = v0 + v13;
  sub_1DC8F0494();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v16(v0, v32, v10);
  v16(v14, v33, v10);
  sub_1DC92F6DC();
  uint64_t v17 = sub_1DC92F3E8();
  uint64_t v18 = sub_1DC92F754();
  sub_1DC92F3B0(v18, v19, v17);
  if (v22)
  {
    sub_1DC92F3B0(v14, 1, v17);
    if (v22) {
      goto LABEL_12;
    }
    sub_1DC92F780();
    sub_1DC92F630();
    v25();
    sub_1DC92F60C();
    sub_1DCB88108();
    uint64_t v26 = sub_1DC92F400();
    ((void (*)(uint64_t))v16)(v26);
    sub_1DC92F41C();
    ((void (*)(void))v16)();
    if (!__OFSUB__(v17, 1)) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v20 = *(int *)(v17 + 48);
    uint64_t v21 = (void (*)(void))(v0 + v20);
    sub_1DC92F3B0(v14, 1, v17);
    if (!v22)
    {
      uint64_t v28 = *(void (**)(void))(v6 + 32);
      sub_1DC92F7F0();
      v28();
      sub_1DC92F7F0();
      v28();
      sub_1DC92F548();
      sub_1DCB88108();
      uint64_t v29 = sub_1DC92F400();
      ((void (*)(uint64_t))(v6 + 32))(v29);
      sub_1DC92F41C();
      ((void (*)(void))(v6 + 32))();
      sub_1DC8F0494();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v31(v14 + v20, v9);
      v31(v0 + v20, v9);
LABEL_12:
      sub_1DC89DA54();
      return;
    }
    sub_1DC92F780();
    sub_1DC92F630();
    v23();
    sub_1DC92F60C();
    sub_1DC92F548();
    sub_1DCB88108();
    uint64_t v24 = sub_1DC92F400();
    ((void (*)(uint64_t))v21)(v24);
    sub_1DC92F41C();
    v21();
    if (!__OFADD__(v17, 1))
    {
      sub_1DC8F0494();
LABEL_11:
      sub_1DC88D5C8();
      v27();
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1DC927AD8()
{
}

uint64_t sub_1DC927AE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC927000(a1);
}

void (*sub_1DC927AFC(void *a1, uint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  _OWORD v6[4] = sub_1DC927B74(v6, a2, a3);
  return sub_1DC899A50;
}

uint64_t (*sub_1DC927B74(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v4 = *(void *)(a3 + 24);
  *a1 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  a1[1] = v5;
  a1[2] = malloc(*(void *)(v5 + 64));
  sub_1DC9270CC(a2);
  return sub_1DC927C34;
}

uint64_t sub_1DC927C4C()
{
  _s5IndexVMa();
  sub_1DC92F5CC();
  uint64_t v0 = sub_1DC92F7BC();

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, v1, v2, v3);
}

void sub_1DC927CA0()
{
}

void sub_1DC927CB4()
{
}

uint64_t sub_1DC927CBC(uint64_t a1)
{
  uint64_t v2 = _s5IndexVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1DC927254();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

void sub_1DC927DD0()
{
  sub_1DC89D9F8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v7 = v6;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v8);
  sub_1DC92F4F4();
  uint64_t v9 = *(void *)(v3 + 24);
  _s5IndexV14RepresentationOMa();
  sub_1DC88D538();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v10);
  sub_1DC92F4E4();
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v4, v0);
  uint64_t v12 = sub_1DC92F3E8();
  sub_1DC92F3B0(v4, 1, v12);
  if (!v13)
  {
    uint64_t v14 = v4 + *(int *)(v12 + 48);
    sub_1DC92F548();
    sub_1DC92F630();
    v15();
    sub_1DCB87818();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, AssociatedTypeWitness);
    sub_1DC8F0494();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v9);
  }
  sub_1DC89DA54();
}

uint64_t sub_1DC927F80(uint64_t a1, uint64_t a2)
{
  return sub_1DC929334(a1, *(void *)(a2 - 8), (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DC927DD0);
}

void sub_1DC927FB0()
{
}

uint64_t sub_1DC927FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9293E4(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DC927DD0);
}

void sub_1DC927FD0()
{
  sub_1DC89D9F8();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for InclusiveReductionsSequence.Iterator();
  uint64_t v7 = v5 + *(int *)(v6 + 36);
  uint64_t v8 = sub_1DC92F6B0();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v7, 1, 1, v8);
  sub_1DC92F6B0();
  sub_1DC8F0494();
  sub_1DC92F47C();
  v9();
  uint64_t v10 = (void *)(v5 + *(int *)(v6 + 40));
  *uint64_t v10 = v3;
  v10[1] = v1;
  sub_1DC89DA54();
}

void sub_1DC92809C()
{
  sub_1DC89D9F8();
  uint64_t v3 = v2;
  uint64_t v46 = v4;
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v44 = *(void *)(v2 + 16);
  uint64_t v45 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v11);
  uint64_t v42 = (char *)&v36 - v12;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v36 - v14;
  sub_1DC88D538();
  uint64_t v43 = v16;
  MEMORY[0x1F4188790](v17);
  sub_1DC888120();
  uint64_t v40 = v18;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v36 - v20;
  uint64_t v41 = v3;
  uint64_t v22 = v0 + *(int *)(v3 + 36);
  uint64_t v23 = *(void (**)(void))(v9 + 16);
  sub_1DC92F734();
  v23();
  sub_1DC92F3B0((uint64_t)v15, 1, AssociatedTypeWitness);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v7);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1DCB88758();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v22, v1, v7);
    sub_1DC92F734();
    v23();
  }
  else
  {
    uint64_t v36 = v22;
    uint64_t v37 = v23;
    uint64_t v38 = v9;
    uint64_t v39 = v7;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v24(v21, v15, AssociatedTypeWitness);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v25 = (uint64_t)v42;
    sub_1DCB88758();
    sub_1DC92F3B0(v25, 1, AssociatedTypeWitness);
    if (v26)
    {
      sub_1DC88D5C8();
      v27();
      sub_1DC88D5C8();
      v28();
      sub_1DC92F654(v46);
    }
    else
    {
      uint64_t v29 = v40;
      v24(v40, (char *)v25, AssociatedTypeWitness);
      (*(void (**)(char *, char *))(v0 + *(int *)(v41 + 40)))(v21, v29);
      uint64_t v30 = *(void (**)(void))(v43 + 8);
      sub_1DC8881AC();
      v30();
      sub_1DC8881AC();
      v30();
      sub_1DC92F748();
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v31, v32, v33, AssociatedTypeWitness);
      uint64_t v34 = v39;
      uint64_t v35 = v36;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 40))(v36, v1, v39);
      ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v46, v35, v34);
    }
  }
  sub_1DC89DA54();
}

uint64_t sub_1DC928450(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1DC88D538();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC909E14();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC8BADF0(AssociatedTypeWitness);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v7);
  sub_1DC92F4E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v1, v2);
  sub_1DCB87AC8();
  sub_1DC927FD0();
  return swift_retain();
}

uint64_t sub_1DC928574(uint64_t a1, uint64_t a2)
{
  return sub_1DC92858C(a1, a2, (void (*)(void))sub_1DC928450);
}

uint64_t sub_1DC92858C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_1DC8F0494();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);

  return v6(v3, a1);
}

uint64_t sub_1DC9285EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1DC92F504();
  swift_getAssociatedTypeWitness();
  sub_1DC8F0494();
  sub_1DC92F47C();
  v4();
  sub_1DC92F6DC();
  uint64_t v5 = a2 + *(int *)(_s5IndexVMa_0() + 36);
  swift_getAssociatedTypeWitness();
  sub_1DC92F5CC();
  sub_1DC8F0494();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);

  return v8(v5, a1, v6);
}

uint64_t sub_1DC9286E4()
{
  return sub_1DCB87868() & 1;
}

uint64_t sub_1DC928754()
{
  return sub_1DCB878C8() & 1;
}

uint64_t sub_1DC9287C4()
{
  return sub_1DC9286E4();
}

uint64_t sub_1DC9287D0()
{
  return sub_1DC928754();
}

uint64_t sub_1DC9287DC()
{
  sub_1DC92F7A8();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1DC92F5CC();
  sub_1DC8BADF0(v2);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v3);
  sub_1DC92F4F4();
  uint64_t v4 = sub_1DC92F7FC();
  sub_1DC8BADF0(v4);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v5);
  sub_1DC92F688();
  sub_1DCB880B8();
  sub_1DCB88198();
  return sub_1DC9285EC(v1, v0);
}

uint64_t sub_1DC9288D0()
{
  sub_1DC92F7A8();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1DCB88718();
  sub_1DC8BADF0(v2);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v3);
  sub_1DC92F688();
  uint64_t v4 = sub_1DC92F7FC();
  sub_1DC8BADF0(v4);
  sub_1DC88D668();
  MEMORY[0x1F4188790](v5);
  sub_1DC92F4E4();
  sub_1DCB88118();
  sub_1DC92F654(v1);
  return sub_1DC9285EC(v1, v0);
}

uint64_t sub_1DC9289D0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC92F504();
  uint64_t v1 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v3 = v2;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - v5;
  _s5IndexVMa_0();
  sub_1DC8E7D10();
  v7();
  sub_1DC92F3B0((uint64_t)v6, 1, AssociatedTypeWitness);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
    sub_1DC92F714();
    uint64_t v11 = 478;
    sub_1DC8CD988();
    sub_1DC92F708();
    sub_1DC92F4BC();
    sub_1DC92F6FC();
  }
  sub_1DC8F0494();
  sub_1DC92F47C();
  return v9();
}

void sub_1DC928B4C()
{
  sub_1DC89D9F8();
  uint64_t v54 = v0;
  uint64_t v2 = v1;
  uint64_t v58 = v3;
  uint64_t v51 = v4;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v60 = v7;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  sub_1DC888190();
  uint64_t v52 = v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1DC888120();
  uint64_t v55 = v18;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v19);
  uint64_t v53 = (char *)&v49 - v20;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v49 - v22;
  sub_1DC88D538();
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v26);
  sub_1DC888120();
  uint64_t v50 = v27;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v28);
  sub_1DC888190();
  uint64_t v59 = v29;
  uint64_t v30 = v2 + *(int *)(_s5IndexVMa_0() + 36);
  uint64_t v56 = v16;
  uint64_t v57 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v23, v30, v14);
  sub_1DC92F3B0((uint64_t)v23, 1, v13);
  if (v31)
  {
    sub_1DC88D5C8();
    v48();
    sub_1DC92F714();
    uint64_t v49 = 486;
    sub_1DC8CD988();
    sub_1DC92F708();
    sub_1DC92F4BC();
    sub_1DC92F6FC();
  }
  sub_1DC92F630();
  v32();
  uint64_t v33 = v54;
  sub_1DCB880D8();
  sub_1DCB88118();
  swift_getAssociatedConformanceWitness();
  char v34 = sub_1DCB878C8();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, AssociatedTypeWitness);
  if (v34)
  {
    sub_1DC92F5FC();
    v35();
    uint64_t v36 = 1;
    uint64_t v37 = (uint64_t)v53;
  }
  else
  {
    uint64_t v38 = (uint64_t *)(v33 + *(int *)(v51 + 36));
    uint64_t v40 = *v38;
    uint64_t v39 = v38[1];
    uint64_t v51 = v40;
    uint64_t v49 = v39;
    uint64_t v41 = (void (*)(uint64_t *, void))sub_1DCB88218();
    uint64_t v54 = v5;
    uint64_t v42 = v50;
    sub_1DC8E7D10();
    v43();
    v41(&v61, 0);
    uint64_t v37 = (uint64_t)v53;
    ((void (*)(uint64_t, uint64_t))v51)(v59, v42);
    uint64_t v44 = *(void (**)(void))(v25 + 8);
    sub_1DC92F5FC();
    v44();
    sub_1DC92F5FC();
    v44();
    uint64_t v36 = 0;
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v37, v36, 1, v13);
  sub_1DC92F47C();
  v45();
  uint64_t v46 = v55;
  sub_1DC92F47C();
  v47();
  sub_1DC9285EC(v46, v58);
  sub_1DC89DA54();
}

uint64_t sub_1DC928FAC()
{
  return sub_1DCB88108();
}

uint64_t sub_1DC928FB4()
{
  return sub_1DC9287DC();
}

uint64_t sub_1DC928FBC()
{
  return sub_1DC9288D0();
}

void (*sub_1DC928FC4(uint64_t **a1))(void *)
{
  uint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1DC92903C(v2);
  return sub_1DC899A50;
}

uint64_t (*sub_1DC92903C(uint64_t *a1))()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *a1 = AssociatedTypeWitness;
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(void *)(v3 + 64));
  sub_1DC9289D0();
  return sub_1DC927C34;
}

void sub_1DC929118(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_1DC929168()
{
  _s5IndexVMa_0();
  sub_1DC92F5CC();
  uint64_t v0 = sub_1DC92F7BC();

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, v1, v2, v3);
}

uint64_t sub_1DC9291B0()
{
  return sub_1DC928FAC();
}

void sub_1DC9291B8()
{
}

uint64_t sub_1DC9291C0(uint64_t a1)
{
  uint64_t v2 = _s5IndexVMa_0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1DC928B4C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_1DC9292CC()
{
  swift_getAssociatedTypeWitness();

  return sub_1DCB87818();
}

uint64_t sub_1DC929334(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t))
{
  sub_1DCB891A8();
  a3(v7, a1, a2);
  return sub_1DCB891F8();
}

uint64_t sub_1DC929394(uint64_t a1, uint64_t a2)
{
  return sub_1DC929334(a1, *(void *)(a2 - 8), (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DC9292CC);
}

uint64_t sub_1DC9293C4()
{
  return sub_1DC9292CC();
}

uint64_t sub_1DC9293CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9293E4(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DC9292CC);
}

uint64_t sub_1DC9293E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a3 - 8);
  sub_1DCB891A8();
  a4(v8, a2, v6);
  return sub_1DCB891F8();
}

uint64_t sub_1DC929440()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC92945C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9294A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9294BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9294D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9294F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC929510()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC92952C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC929548()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC929564()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9295A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9295C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9295E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9295FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC926598(a1, v2[5], v2[6], v2[3], a2);
}

uint64_t type metadata accessor for ExclusiveReductionsSequence.Iterator()
{
  return sub_1DC8866E4();
}

uint64_t _s5IndexV14RepresentationOMa()
{
  return sub_1DC8866E4();
}

uint64_t _s5IndexVMa()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for InclusiveReductionsSequence.Iterator()
{
  return sub_1DC8866E4();
}

uint64_t _s5IndexVMa_0()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC92969C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSinglePayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DC9297A0(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  uint64_t v8 = *(unsigned int *)(v6 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v9;
  uint64_t v11 = *(void *)(v6 + 64);
  if (v8 | v7)
  {
    if (v7 >= v8)
    {
      uint64_t v15 = AssociatedTypeWitness;
      uint64_t v12 = (uint64_t)a1;
      uint64_t v5 = v15;
    }
    else
    {
      uint64_t v12 = ((unint64_t)a1 + v10) & ~v9;
      uint64_t v7 = v8;
    }
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v12, v7, v5);
  }
  else
  {
    uint64_t v13 = (v10 & ~v9) + v11;
    if (*((unsigned char *)a1 + v13))
    {
      int v14 = (*((unsigned __int8 *)a1 + v13) - 1) << (8 * v13);
      if (v13 > 3) {
        int v14 = 0;
      }
      if (v13)
      {
        if (v13 > 3) {
          LODWORD(v13) = 4;
        }
        switch((int)v13)
        {
          case 2:
            LODWORD(v13) = *a1;
            break;
          case 3:
            LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v13) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v13) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return (v13 | v14) + 1;
    }
    else
    {
      return 0;
    }
  }
}

void sub_1DC929964(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = ((v12 + v13) & ~v13) + *(void *)(v9 + 64);
  if (v11 >= a2)
  {
    uint64_t v17 = AssociatedTypeWitness;
    if (v11)
    {
      if (!a2) {
        return;
      }
    }
    else
    {
      a1[v14] = 0;
      if (!a2) {
        return;
      }
    }
    if (v7 >= v10)
    {
      uint64_t v19 = (uint64_t)a1;
      uint64_t v20 = a2;
      uint64_t v8 = v17;
    }
    else
    {
      uint64_t v19 = (unint64_t)&a1[v12 + v13] & ~v13;
      uint64_t v20 = a2;
      uint64_t v7 = v10;
    }
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v19, v20, v7, v8);
    return;
  }
  unsigned int v15 = ~v11 + a2;
  if (v14 >= 4)
  {
    bzero(a1, ((v12 + v13) & ~v13) + *(void *)(v9 + 64));
    *(_DWORD *)a1 = v15;
    LOBYTE(v16) = 1;
    if (v11) {
      return;
    }
    goto LABEL_25;
  }
  int v16 = (v15 >> (8 * v14)) + 1;
  if (!v14)
  {
LABEL_24:
    if (v11) {
      return;
    }
    goto LABEL_25;
  }
  int v18 = v15 & ~(-1 << (8 * v14));
  bzero(a1, ((v12 + v13) & ~v13) + *(void *)(v9 + 64));
  if (v14 == 3)
  {
    *(_WORD *)a1 = v18;
    a1[2] = BYTE2(v18);
    goto LABEL_24;
  }
  if (v14 == 2)
  {
    *(_WORD *)a1 = v18;
    if (v11) {
      return;
    }
    goto LABEL_25;
  }
  *a1 = v18;
  if (!v11) {
LABEL_25:
  }
    a1[v14] = v16;
}

uint64_t sub_1DC929B64()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DCB88718();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DC929C54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v7 + 64) + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v13 = *(void *)(v9 + 64);
  }
  else {
    size_t v13 = *(void *)(v9 + 64) + 1;
  }
  unsigned int v14 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  int v15 = (*(_DWORD *)(v7 + 80) | v10) & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v13 + (v12 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
  }
  else
  {
    uint64_t v19 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v20 = (const void *)(((unint64_t)a2 + v12) & v19);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v20, 1, v8))
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v19), v20, v13);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v19, v20, v8);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)a1 + v12) & v19, 0, 1, v8);
    }
    uint64_t v22 = (void *)(((unint64_t)v20 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = v22[1];
    uint64_t v24 = (void *)(((((unint64_t)a1 + v12) & v19) + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v24 = *v22;
    v24[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1DC929E58(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v6 + a1 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v9, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, v7);
  }

  return swift_release();
}

uint64_t sub_1DC929F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  size_t v13 = (void *)((v12 + a1) & ~v11);
  unsigned int v14 = (const void *)((v12 + a2) & ~v11);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v9))
  {
    int v15 = *(_DWORD *)(v10 + 84);
    size_t v16 = *(void *)(v10 + 64);
    if (v15) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v16 + 1;
    }
    memcpy(v13, v14, v17);
  }
  else
  {
    uint64_t v19 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
    uint64_t v18 = v10 + 16;
    v19(v13, v14, v9);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, v9);
    int v15 = *(_DWORD *)(v18 + 68);
    size_t v16 = *(void *)(v18 + 48);
  }
  if (v15) {
    size_t v20 = v16;
  }
  else {
    size_t v20 = v16 + 1;
  }
  uint64_t v21 = (uint64_t)v13 + v20 + 7;
  uint64_t v22 = (uint64_t *)(((unint64_t)v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v25 = (void *)(v21 & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = v24;
  v25[1] = v23;
  swift_retain();
  return a1;
}

uint64_t sub_1DC92A0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v7 + 40) + v10;
  uint64_t v12 = (void *)((v11 + a1) & ~v10);
  size_t v13 = (const void *)((v11 + a2) & ~v10);
  int v14 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v12, 1, v8);
  int v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v8);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v8);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v12, v13, v18);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v19 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v9 + 64) + 1;
  }
  size_t v20 = (void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *size_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC92A2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  size_t v13 = (void *)((v12 + a1) & ~v11);
  int v14 = (const void *)((v12 + a2) & ~v11);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, v9))
  {
    int v15 = *(_DWORD *)(v10 + 84);
    size_t v16 = *(void *)(v10 + 64);
    if (v15) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v16 + 1;
    }
    memcpy(v13, v14, v17);
  }
  else
  {
    uint64_t v19 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    uint64_t v18 = v10 + 32;
    v19(v13, v14, v9);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, v9);
    int v15 = *(_DWORD *)(v18 + 52);
    size_t v16 = *(void *)(v18 + 32);
  }
  if (v15) {
    size_t v20 = v16;
  }
  else {
    size_t v20 = v16 + 1;
  }
  *(_OWORD *)(((unint64_t)v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC92A448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v7 + 24) + v10;
  uint64_t v12 = (void *)((v11 + a1) & ~v10);
  size_t v13 = (const void *)((v11 + a2) & ~v10);
  int v14 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v12, 1, v8);
  int v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v8);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v8);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    int v16 = *(_DWORD *)(v9 + 84);
    size_t v17 = *(void *)(v9 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v12, v13, v18);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v19 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v9 + 64) + 1;
  }
  *(_OWORD *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1DC92A62C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  else {
    unsigned int v11 = v10;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  if (!v9) {
    ++v13;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v12;
  uint64_t v15 = v13 + 7;
  if (v11 < a2)
  {
    unint64_t v16 = ((v15 + (v14 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v16 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v11 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v16);
        if (!*((unsigned char *)a1 + v16)) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v16);
        if (*(_WORD *)((char *)a1 + v16)) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC92A87CLL);
      case 4:
        int v20 = *(_DWORD *)((char *)a1 + v16);
        if (!v20) {
          break;
        }
LABEL_28:
        int v21 = v20 - 1;
        if ((v16 & 0xFFFFFFF8) != 0)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v11 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v7 == v11)
  {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v7, AssociatedTypeWitness);
  }
  uint64_t v24 = ((unint64_t)a1 + v14) & ~v12;
  if (v10 == v11)
  {
    if (v9 >= 2)
    {
      unsigned int v26 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v24, v9, *(void *)(a3 + 24));
      if (v26 >= 2) {
        return v26 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v25 = *(void *)((v15 + v24) & 0xFFFFFFFFFFFFFFF8);
  if (v25 >= 0xFFFFFFFF) {
    LODWORD(v25) = -1;
  }
  return (v25 + 1);
}

void sub_1DC92A890(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  uint64_t v10 = *(void *)(a4 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12) {
    unsigned int v13 = v12 - 1;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v13 <= v9) {
    unsigned int v14 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  else {
    unsigned int v14 = v13;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + v15;
  uint64_t v17 = v16 & ~v15;
  uint64_t v18 = *(void *)(v11 + 64);
  if (!v12) {
    ++v18;
  }
  uint64_t v19 = v18 + 7;
  unint64_t v20 = ((v19 + v17) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v19 + v17) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v21 = a3 - v14 + 1;
  }
  else {
    unsigned int v21 = 2;
  }
  if (v21 >= 0x10000) {
    int v22 = 4;
  }
  else {
    int v22 = 2;
  }
  if (v21 < 0x100) {
    int v22 = 1;
  }
  if (v21 >= 2) {
    unsigned int v23 = v22;
  }
  else {
    unsigned int v23 = 0;
  }
  if (v14 < a3) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 0;
  }
  if (a2 > v14)
  {
    if (((v19 + v17) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v25 = a2 - v14;
    }
    else {
      int v25 = 1;
    }
    if (((v19 + v17) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v26 = ~v14 + a2;
      bzero(a1, ((v19 + v17) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v26;
    }
    switch(v24)
    {
      case 1:
        *((unsigned char *)a1 + v20) = v25;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v20) = v25;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)((char *)a1 + v20) = v25;
        return;
      default:
        return;
    }
  }
  switch(v24)
  {
    case 1:
      *((unsigned char *)a1 + v20) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)((char *)a1 + v20) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x1DC92AB1CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v20) = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (!a2) {
        return;
      }
LABEL_40:
      if (v9 == v14)
      {
        uint64_t v27 = (uint64_t)a1;
        uint64_t v28 = a2;
        uint64_t v12 = v9;
        uint64_t v10 = AssociatedTypeWitness;
      }
      else
      {
        uint64_t v27 = ((unint64_t)a1 + v16) & ~v15;
        if (v13 != v14)
        {
          uint64_t v29 = (void *)((v19 + v27) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v30 = a2 ^ 0x80000000;
            v29[1] = 0;
          }
          else
          {
            uint64_t v30 = (a2 - 1);
          }
          *uint64_t v29 = v30;
          return;
        }
        uint64_t v28 = (a2 + 1);
      }
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v27, v28, v12, v10);
      return;
  }
}

uint64_t sub_1DC92AB44()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DC92AC20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  uint64_t v11 = *(void *)(v7 + 64) + 7;
  unsigned int v12 = v8 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v13 = (*(_DWORD *)(v5 + 80) | v8) & 0x100000;
  if (v12 > 7 || v13 != 0 || ((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v6);
    uint64_t v19 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = v19[1];
    unsigned int v21 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v21 = *v19;
    v21[1] = v20;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DC92ADB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((*(void *)(v4 + 56)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_release();
}

uint64_t sub_1DC92AE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  return a1;
}

uint64_t sub_1DC92AF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC92B02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(_OWORD *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC92B0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(_OWORD *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1DC92B1D4(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= v6) {
    unsigned int v9 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v9;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  if (v11 < a2)
  {
    unint64_t v14 = ((v13 + (v12 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v15 = a2 - v11;
    uint64_t v16 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = v15 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v14);
        if (!v20) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v20) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC92B390);
      case 4:
        int v20 = *(int *)((char *)a1 + v14);
        if (!v20) {
          break;
        }
LABEL_25:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v11 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v6 == v11)
  {
    uint64_t v8 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
    uint64_t v4 = v5;
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v8, v4);
  }
  a1 = (int *)(((unint64_t)a1 + v12) & ~v10);
  if (v8 == v11) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v8, v4);
  }
  unint64_t v24 = *(void *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void sub_1DC92B3A4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  uint64_t v15 = v14 & ~v13;
  uint64_t v16 = *(void *)(*(void *)(v9 - 8) + 64) + 7;
  unint64_t v17 = ((v16 + v15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 >= a3)
  {
    int v21 = 0;
  }
  else
  {
    unsigned int v18 = a3 - v12;
    if (((v16 + v15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v19 = v18 + 1;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
  }
  if (a2 > v12)
  {
    if (((v16 + v15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v22 = a2 - v12;
    }
    else {
      int v22 = 1;
    }
    if (((v16 + v15) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v23 = ~v12 + a2;
      bzero(a1, ((v16 + v15) & 0xFFFFFFFFFFFFFFF8) + 16);
      *unsigned int v6 = v23;
    }
    switch(v21)
    {
      case 1:
        *((unsigned char *)v6 + v17) = v22;
        return;
      case 2:
        *(_WORD *)((char *)v6 + v17) = v22;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)((char *)v6 + v17) = v22;
        return;
      default:
        return;
    }
  }
  switch(v21)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1DC92B5FCLL);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (!a2) {
        return;
      }
LABEL_34:
      if (v8 == v12) {
        goto LABEL_37;
      }
      a1 = (char *)((unint64_t)&a1[v14] & ~v13);
      if (v11 == v12)
      {
        uint64_t v8 = v11;
        uint64_t v7 = v9;
LABEL_37:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v8, v7);
      }
      else
      {
        unint64_t v24 = (void *)((unint64_t)&a1[v16] & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0)
        {
          uint64_t v25 = a2 ^ 0x80000000;
          v24[1] = 0;
        }
        else
        {
          uint64_t v25 = (a2 - 1);
        }
        *unint64_t v24 = v25;
      }
      return;
  }
}

uint64_t type metadata accessor for ExclusiveReductionsSequence()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC92B63C()
{
  uint64_t result = _s5IndexV14RepresentationOMa();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC92B6D0()
{
  sub_1DC92F370();
  swift_getAssociatedTypeWitness();
  sub_1DC92F2B8();
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v6 = *(void *)(*(void *)(v2 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  int v9 = *(_DWORD *)(v6 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9) & ~(unint64_t)v9;
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = v10 + v11;
  int v13 = v7 | v5;
  if (v7 | v5) {
    size_t v14 = v10 + v11;
  }
  else {
    size_t v14 = v12 + 1;
  }
  uint64_t v15 = (*(unsigned char *)(v4 + 80) | v9);
  if (v15 > 7 || ((*(_DWORD *)(v4 + 80) | v9) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *v1;
    *uint64_t v0 = *v1;
    uint64_t v0 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v19 = v3;
    if (v13)
    {
      if (v5 >= v7)
      {
        uint64_t v20 = (uint64_t)v1;
        uint64_t v21 = v19;
      }
      else
      {
        sub_1DC92F760();
      }
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v20, v5, v21))
      {
LABEL_26:
        memcpy(v0, v1, v14);
        return v0;
      }
    }
    else if (*((unsigned char *)v1 + v12))
    {
      unsigned int v22 = (*((unsigned __int8 *)v1 + v12) - 1) << (8 * v12);
      if (v12 > 3) {
        unsigned int v22 = 0;
      }
      if (v12)
      {
        if (v12 <= 3) {
          int v23 = v12;
        }
        else {
          int v23 = 4;
        }
        switch(v23)
        {
          case 3:
            sub_1DC92F3A0();
            break;
          default:
            break;
        }
      }
      if (sub_1DC92F4B0(v22)) {
        goto LABEL_26;
      }
    }
    uint64_t v24 = sub_1DC92F510();
    v25(v24);
    sub_1DC92F67C();
    v26();
    if (!v13) {
      *((unsigned char *)v0 + v12) = 0;
    }
  }
  return v0;
}

uint64_t sub_1DC92B90C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC92F2B8();
  uint64_t v6 = v5;
  sub_1DC92F350();
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = ~v12;
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = v11 + v12;
  uint64_t v23 = v8;
  if (v9 | v7)
  {
    if (v7 >= v9)
    {
      uint64_t v17 = a1;
      uint64_t v18 = AssociatedTypeWitness;
    }
    else
    {
      sub_1DC92F760();
    }
    uint64_t result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v17, v7, v18);
    if (result) {
      return result;
    }
LABEL_12:
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
    unsigned int v22 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    return v22((v16 + a1) & v13, a2);
  }
  uint64_t v19 = (v16 & ~v12) + v15;
  if (!*(unsigned char *)(a1 + v19)) {
    goto LABEL_12;
  }
  unsigned int v20 = (*(unsigned __int8 *)(a1 + v19) - 1) << (8 * v19);
  if (v19 > 3) {
    unsigned int v20 = 0;
  }
  uint64_t result = sub_1DC92F4B0(v20);
  if (!result) {
    goto LABEL_12;
  }
  return result;
}

void sub_1DC92BAE0()
{
  sub_1DC89D9F8();
  sub_1DC92F370();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC92F2B8();
  sub_1DC92F350();
  uint64_t v4 = v3;
  sub_1DC92F570();
  size_t v9 = v8 + *(void *)(v7 + 64);
  int v10 = v6 | v5;
  if (v6 | v5)
  {
    if (v5 >= v6)
    {
      uint64_t v11 = v1;
      uint64_t v12 = AssociatedTypeWitness;
    }
    else
    {
      sub_1DC92F760();
    }
    uint64_t v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v11, v5, v12);
    if (v15)
    {
LABEL_12:
      if (v10) {
        size_t v17 = v9;
      }
      else {
        size_t v17 = v9 + 1;
      }
      sub_1DC92F834(v15, v16, v17);
      goto LABEL_21;
    }
  }
  else if (*(unsigned char *)(v1 + v9))
  {
    sub_1DC92F63C();
    if (v9)
    {
      if (v9 <= 3) {
        int v14 = v9;
      }
      else {
        int v14 = 4;
      }
      switch(v14)
      {
        case 3:
          sub_1DC92F3A0();
          break;
        default:
          break;
      }
    }
    uint64_t v15 = sub_1DC92F4B0(v13);
    if (v15) {
      goto LABEL_12;
    }
  }
  uint64_t v18 = sub_1DC92F510();
  v19(v18);
  uint64_t v20 = sub_1DC92F720();
  (*(void (**)(uint64_t))(v4 + 16))(v20);
  if (!v10) {
    *(unsigned char *)(v0 + v9) = 0;
  }
LABEL_21:
  sub_1DC89DA54();
}

unsigned __int16 *sub_1DC92BC58()
{
  sub_1DC92F370();
  swift_getAssociatedTypeWitness();
  sub_1DC92F3C8();
  unsigned int v3 = *(_DWORD *)(v2 + 84);
  sub_1DC92F2B8();
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  sub_1DC92F554();
  size_t v8 = v7 + *(void *)(v6 + 64);
  int v9 = v5 | v3;
  uint64_t v60 = v11;
  uint64_t v61 = v10;
  if (!(v5 | v3))
  {
    if (*((unsigned char *)v0 + v8))
    {
      sub_1DC92F76C();
      if (v8)
      {
        int v16 = v8 <= 3 ? v8 : 4;
        switch(v16)
        {
          case 2:
            int v17 = *v0;
            break;
          case 3:
            int v17 = *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
            break;
          case 4:
            int v17 = *(_DWORD *)v0;
            break;
          default:
            int v17 = *(unsigned __int8 *)v0;
            break;
        }
      }
      else
      {
        int v17 = 0;
      }
      if ((v17 | v15) != 0xFFFFFFFF)
      {
        if (!*(unsigned char *)(v1 + v8)) {
          goto LABEL_45;
        }
        sub_1DC92F488();
        if (v8)
        {
          if (v8 <= 3) {
            int v19 = v8;
          }
          else {
            int v19 = 4;
          }
          switch(v19)
          {
            case 3:
              sub_1DC92F3A0();
              break;
            default:
              break;
          }
        }
        uint64_t v12 = sub_1DC92F4B0(v18);
        if (!v12) {
          goto LABEL_45;
        }
        goto LABEL_38;
      }
    }
    if (!*(unsigned char *)(v1 + v8)) {
      goto LABEL_42;
    }
    sub_1DC92F488();
    if (v8)
    {
      if (v8 <= 3) {
        int v21 = v8;
      }
      else {
        int v21 = 4;
      }
      switch(v21)
      {
        case 3:
          sub_1DC92F3A0();
          break;
        default:
          break;
      }
    }
    if (!sub_1DC92F4B0(v20))
    {
LABEL_42:
      uint64_t v35 = sub_1DC92F49C();
      uint64_t v37 = v36(v35);
      sub_1DC92F388(v37, v38, v39, v40, v41, v42, v43, v44, v58, v59, v60, v61);
      sub_1DC92F7D0();
      v45();
      return v0;
    }
LABEL_37:
    uint64_t v22 = sub_1DC92F698();
    uint64_t v24 = v23(v22);
    uint64_t v32 = sub_1DC92F52C(v24, v25, v26, v27, v28, v29, v30, v31, v58, v59, v60, v61);
    uint64_t v12 = v33(v32);
    goto LABEL_38;
  }
  if (v3 < v5)
  {
    uint64_t v12 = sub_1DC92F2D0();
    if (v14) {
      goto LABEL_4;
    }
LABEL_14:
    if (!v12) {
      goto LABEL_42;
    }
    goto LABEL_37;
  }
  uint64_t v12 = sub_1DC92F58C();
  if (!v5) {
    goto LABEL_14;
  }
LABEL_4:
  if (!v12)
  {
LABEL_45:
    uint64_t v46 = sub_1DC92F49C();
    uint64_t v48 = v47(v46);
    sub_1DC92F388(v48, v49, v50, v51, v52, v53, v54, v55, v58, v59, v60, v61);
    sub_1DC92F7D0();
    v56();
    if (!v9) {
      *((unsigned char *)v0 + v8) = 0;
    }
    return v0;
  }
LABEL_38:
  if (v9) {
    size_t v34 = v8;
  }
  else {
    size_t v34 = v8 + 1;
  }
  sub_1DC92F834(v12, v13, v34);
  return v0;
}

void sub_1DC92BF34()
{
  sub_1DC89D9F8();
  sub_1DC92F370();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC92F2B8();
  uint64_t v4 = v3;
  sub_1DC92F350();
  uint64_t v6 = v5;
  sub_1DC92F570();
  size_t v11 = v10 + *(void *)(v9 + 64);
  int v12 = v8 | v7;
  if (v8 | v7)
  {
    if (v7 >= v8)
    {
      uint64_t v13 = v1;
      uint64_t v14 = AssociatedTypeWitness;
    }
    else
    {
      sub_1DC92F760();
    }
    uint64_t v17 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v13, v7, v14);
    if (v17)
    {
LABEL_12:
      if (v12) {
        size_t v19 = v11;
      }
      else {
        size_t v19 = v11 + 1;
      }
      sub_1DC92F834(v17, v18, v19);
      goto LABEL_21;
    }
  }
  else if (*(unsigned char *)(v1 + v11))
  {
    sub_1DC92F63C();
    if (v11)
    {
      if (v11 <= 3) {
        int v16 = v11;
      }
      else {
        int v16 = 4;
      }
      switch(v16)
      {
        case 3:
          sub_1DC92F3A0();
          break;
        default:
          break;
      }
    }
    uint64_t v17 = sub_1DC92F4B0(v15);
    if (v17) {
      goto LABEL_12;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v0, v1, AssociatedTypeWitness);
  uint64_t v20 = sub_1DC92F720();
  (*(void (**)(uint64_t))(v6 + 32))(v20);
  if (!v12) {
    *(unsigned char *)(v0 + v11) = 0;
  }
LABEL_21:
  sub_1DC89DA54();
}

unsigned __int16 *sub_1DC92C0C0()
{
  sub_1DC92F370();
  swift_getAssociatedTypeWitness();
  sub_1DC92F3C8();
  unsigned int v3 = *(_DWORD *)(v2 + 84);
  sub_1DC92F2B8();
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  sub_1DC92F554();
  size_t v8 = v7 + *(void *)(v6 + 64);
  int v9 = v5 | v3;
  uint64_t v60 = v11;
  uint64_t v61 = v10;
  if (!(v5 | v3))
  {
    if (*((unsigned char *)v0 + v8))
    {
      sub_1DC92F76C();
      if (v8)
      {
        int v16 = v8 <= 3 ? v8 : 4;
        switch(v16)
        {
          case 2:
            int v17 = *v0;
            break;
          case 3:
            int v17 = *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
            break;
          case 4:
            int v17 = *(_DWORD *)v0;
            break;
          default:
            int v17 = *(unsigned __int8 *)v0;
            break;
        }
      }
      else
      {
        int v17 = 0;
      }
      if ((v17 | v15) != 0xFFFFFFFF)
      {
        if (!*(unsigned char *)(v1 + v8)) {
          goto LABEL_45;
        }
        sub_1DC92F488();
        if (v8)
        {
          if (v8 <= 3) {
            int v19 = v8;
          }
          else {
            int v19 = 4;
          }
          switch(v19)
          {
            case 3:
              sub_1DC92F3A0();
              break;
            default:
              break;
          }
        }
        uint64_t v12 = sub_1DC92F4B0(v18);
        if (!v12) {
          goto LABEL_45;
        }
        goto LABEL_38;
      }
    }
    if (!*(unsigned char *)(v1 + v8)) {
      goto LABEL_42;
    }
    sub_1DC92F488();
    if (v8)
    {
      if (v8 <= 3) {
        int v21 = v8;
      }
      else {
        int v21 = 4;
      }
      switch(v21)
      {
        case 3:
          sub_1DC92F3A0();
          break;
        default:
          break;
      }
    }
    if (!sub_1DC92F4B0(v20))
    {
LABEL_42:
      uint64_t v35 = sub_1DC92F49C();
      uint64_t v37 = v36(v35);
      sub_1DC92F388(v37, v38, v39, v40, v41, v42, v43, v44, v58, v59, v60, v61);
      sub_1DC92F7D0();
      v45();
      return v0;
    }
LABEL_37:
    uint64_t v22 = sub_1DC92F698();
    uint64_t v24 = v23(v22);
    uint64_t v32 = sub_1DC92F52C(v24, v25, v26, v27, v28, v29, v30, v31, v58, v59, v60, v61);
    uint64_t v12 = v33(v32);
    goto LABEL_38;
  }
  if (v3 < v5)
  {
    uint64_t v12 = sub_1DC92F2D0();
    if (v14) {
      goto LABEL_4;
    }
LABEL_14:
    if (!v12) {
      goto LABEL_42;
    }
    goto LABEL_37;
  }
  uint64_t v12 = sub_1DC92F58C();
  if (!v5) {
    goto LABEL_14;
  }
LABEL_4:
  if (!v12)
  {
LABEL_45:
    uint64_t v46 = sub_1DC92F49C();
    uint64_t v48 = v47(v46);
    sub_1DC92F388(v48, v49, v50, v51, v52, v53, v54, v55, v58, v59, v60, v61);
    sub_1DC92F7D0();
    v56();
    if (!v9) {
      *((unsigned char *)v0 + v8) = 0;
    }
    return v0;
  }
LABEL_38:
  if (v9) {
    size_t v34 = v8;
  }
  else {
    size_t v34 = v8 + 1;
  }
  sub_1DC92F834(v12, v13, v34);
  return v0;
}

uint64_t sub_1DC92C39C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  sub_1DC92F42C();
  sub_1DC92F464(*(void *)(a3 + 24));
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v6) {
    unsigned int v13 = v6;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  uint64_t v15 = *(void *)(v9 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = *(void *)(v10 + 64);
  if (v13) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v17 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v15 + v16;
  if (a2 > v14)
  {
    uint64_t v20 = v18 + (v19 & ~v16);
    char v21 = 8 * v20;
    if (v20 > 3) {
      goto LABEL_12;
    }
    unsigned int v23 = ((a2 - v14 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v23))
    {
      int v22 = *(_DWORD *)((char *)a1 + v20);
      if (v22) {
        goto LABEL_19;
      }
    }
    else
    {
      if (v23 <= 0xFF)
      {
        if (v23 < 2) {
          goto LABEL_29;
        }
LABEL_12:
        int v22 = *((unsigned __int8 *)a1 + v20);
        if (!*((unsigned char *)a1 + v20)) {
          goto LABEL_29;
        }
LABEL_19:
        int v24 = (v22 - 1) << v21;
        if (v20 > 3) {
          int v24 = 0;
        }
        if (v20)
        {
          if (v20 <= 3) {
            int v25 = v20;
          }
          else {
            int v25 = 4;
          }
          switch(v25)
          {
            case 2:
              int v26 = *a1;
              break;
            case 3:
              int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v26 = *(_DWORD *)a1;
              break;
            default:
              int v26 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v26 = 0;
        }
        return v14 + (v26 | v24) + 1;
      }
      int v22 = *(unsigned __int16 *)((char *)a1 + v20);
      if (*(unsigned __int16 *)((char *)a1 + v20)) {
        goto LABEL_19;
      }
    }
  }
LABEL_29:
  if (v13 < 2) {
    return 0;
  }
  if (v6 >= v12)
  {
    uint64_t v28 = (uint64_t)a1;
    uint64_t v7 = v8;
  }
  else
  {
    uint64_t v28 = ((unint64_t)a1 + v19) & ~v16;
    uint64_t v6 = v12;
  }
  unsigned int v29 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v28, v6, v7);
  if (v29 >= 2) {
    return v29 - 1;
  }
  else {
    return 0;
  }
}

void sub_1DC92C598(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  swift_getAssociatedTypeWitness();
  int v8 = 0;
  sub_1DC92F42C();
  sub_1DC92F464(*(void *)(a4 + 24));
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  if (v15 <= v9) {
    unsigned int v16 = v9;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  unsigned int v17 = v16 - 1;
  if (!v16) {
    unsigned int v17 = 0;
  }
  uint64_t v18 = *(void *)(v12 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v20 = v18 + v19;
  uint64_t v21 = (v18 + v19) & ~v19;
  uint64_t v22 = *(void *)(v13 + 64);
  size_t v23 = v21 + v22;
  if (v16) {
    size_t v24 = v21 + v22;
  }
  else {
    size_t v24 = v23 + 1;
  }
  char v25 = 8 * v24;
  if (a3 > v17)
  {
    if (v24 <= 3)
    {
      unsigned int v26 = ((a3 - v17 + ~(-1 << v25)) >> v25) + 1;
      if (HIWORD(v26))
      {
        int v8 = 4;
      }
      else if (v26 >= 0x100)
      {
        int v8 = 2;
      }
      else
      {
        int v8 = v26 > 1;
      }
    }
    else
    {
      int v8 = 1;
    }
  }
  if (v17 < a2)
  {
    unsigned int v27 = ~v17 + a2;
    if (v24 < 4)
    {
      int v28 = (v27 >> v25) + 1;
      if (v24)
      {
        int v29 = v27 & ~(-1 << v25);
        bzero(a1, v24);
        if (v24 == 3)
        {
          *(_WORD *)a1 = v29;
          a1[2] = BYTE2(v29);
        }
        else if (v24 == 2)
        {
          *(_WORD *)a1 = v29;
        }
        else
        {
          *a1 = v29;
        }
      }
    }
    else
    {
      bzero(a1, v24);
      *(_DWORD *)a1 = v27;
      int v28 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v24] = v28;
        return;
      case 2:
        *(_WORD *)&a1[v24] = v28;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v24] = v28;
        return;
      default:
        return;
    }
  }
  switch(v8)
  {
    case 1:
      a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x1DC92C8A8);
    case 4:
      *(_DWORD *)&a1[v24] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if (v16 >= 2)
        {
          if (a2 + 1 <= v16)
          {
            if (a2 != -1)
            {
              if (v9 >= v15)
              {
                uint64_t v33 = (uint64_t)a1;
                uint64_t v34 = a2 + 1;
                uint64_t v10 = v11;
              }
              else
              {
                uint64_t v33 = (unint64_t)&a1[v20] & ~v19;
                uint64_t v34 = a2 + 1;
                uint64_t v9 = v15;
              }
              _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v33, v34, v9, v10);
            }
          }
          else
          {
            if (v23 <= 3) {
              int v30 = ~(-1 << (8 * v23));
            }
            else {
              int v30 = -1;
            }
            if (v23)
            {
              int v31 = v30 & (a2 - v16);
              if (v23 <= 3) {
                int v32 = v23;
              }
              else {
                int v32 = 4;
              }
              bzero(a1, v23);
              switch(v32)
              {
                case 2:
                  *(_WORD *)a1 = v31;
                  break;
                case 3:
                  *(_WORD *)a1 = v31;
                  a1[2] = BYTE2(v31);
                  break;
                case 4:
                  *(_DWORD *)a1 = v31;
                  break;
                default:
                  *a1 = v31;
                  break;
              }
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_1DC92C8E0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_1DCB88718();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DC92C9FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(v8 + 64);
  }
  else {
    size_t v12 = *(void *)(v8 + 64) + 1;
  }
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v14 = (*(_DWORD *)(v5 + 80) | v9) & 0x100000;
  if (v13 > 7 || v14 != 0 || ((v12 + (v11 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v18 = v7;
    uint64_t v19 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v20 = (const void *)(((unint64_t)a2 + v11) & v19);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v20, 1, v18))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v19), v20, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v19, v20, v18);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)a1 + v11) & v19, 0, 1, v18);
    }
    uint64_t v22 = (void *)(((unint64_t)v20 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = v22[1];
    size_t v24 = (void *)(((((unint64_t)a1 + v11) & v19) + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
    *size_t v24 = *v22;
    v24[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1DC92CC2C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v7, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  }

  return swift_release();
}

uint64_t sub_1DC92CD74(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    unsigned int v16 = *(void (**)(void *, const void *, uint64_t))(v8 + 16);
    uint64_t v15 = v8 + 16;
    v16(v10, v11, v7);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 68);
    size_t v13 = *(void *)(v15 + 48);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  uint64_t v18 = (uint64_t)v10 + v17 + 7;
  uint64_t v19 = (uint64_t *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t v22 = (void *)(v18 & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v22 = v21;
  v22[1] = v20;
  swift_retain();
  return a1;
}

uint64_t sub_1DC92CF08(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v7);
  int v12 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7);
  if (v6)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  if (v13) {
    size_t v15 = v14;
  }
  else {
    size_t v15 = v14 + 1;
  }
  memcpy(v10, v11, v15);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v16 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v8 + 64) + 1;
  }
  size_t v17 = (void *)(((unint64_t)v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = v18[1];
  *size_t v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC92D114(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    uint64_t v16 = *(void (**)(void *, const void *, uint64_t))(v8 + 32);
    uint64_t v15 = v8 + 32;
    v16(v10, v11, v7);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 52);
    size_t v13 = *(void *)(v15 + 32);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  *(_OWORD *)(((unint64_t)v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC92D2A4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v7);
  int v12 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7);
  if (v6)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  if (v13) {
    size_t v15 = v14;
  }
  else {
    size_t v15 = v14 + 1;
  }
  memcpy(v10, v11, v15);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v16 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v8 + 64) + 1;
  }
  *(_OWORD *)(((unint64_t)v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1DC92D4A8(int *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = v10;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v13;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v7;
  uint64_t v15 = *(void *)(v5 + 64) + v12;
  uint64_t v16 = v13 + 7;
  if (v11 < a2)
  {
    unint64_t v17 = ((v16 + (v15 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v18 = v17 & 0xFFFFFFF8;
    if ((v17 & 0xFFFFFFF8) != 0) {
      unsigned int v19 = 2;
    }
    else {
      unsigned int v19 = a2 - v11 + 1;
    }
    if (v19 >= 0x10000) {
      LODWORD(v20) = 4;
    }
    else {
      LODWORD(v20) = 2;
    }
    if (v19 < 0x100) {
      LODWORD(v20) = 1;
    }
    if (v19 >= 2) {
      uint64_t v20 = v20;
    }
    else {
      uint64_t v20 = 0;
    }
    switch(v20)
    {
      case 1:
        int v21 = *((unsigned __int8 *)a1 + v17);
        if (!v21) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v21 = *(unsigned __int16 *)((char *)a1 + v17);
        if (v21) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC92D73CLL);
      case 4:
        int v21 = *(int *)((char *)a1 + v17);
        if (!v21) {
          break;
        }
LABEL_28:
        int v22 = v21 - 1;
        if (v18)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v11 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v6 == v11)
  {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v6, AssociatedTypeWitness);
  }
  uint64_t v25 = ((unint64_t)a1 + v15) & ~v12;
  if (v10 == v11)
  {
    if (v9 >= 2)
    {
      unsigned int v27 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v25, v9, v14);
      if (v27 >= 2) {
        return v27 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v26 = *(void *)((v16 + v25) & 0xFFFFFFFFFFFFFFF8);
  if (v26 >= 0xFFFFFFFF) {
    LODWORD(v26) = -1;
  }
  return (v26 + 1);
}

void sub_1DC92D750(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= v8) {
    unsigned int v13 = v8;
  }
  else {
    unsigned int v13 = v12;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v7 + 64) + v14;
  uint64_t v16 = *(void *)(*(void *)(v9 - 8) + 64);
  if (!v11) {
    ++v16;
  }
  uint64_t v17 = v16 + 7;
  size_t v18 = ((v17 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v17 + (v15 & ~v14)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v19 = a3 - v13 + 1;
  }
  else {
    unsigned int v19 = 2;
  }
  if (v19 >= 0x10000) {
    int v20 = 4;
  }
  else {
    int v20 = 2;
  }
  if (v19 < 0x100) {
    int v20 = 1;
  }
  if (v19 >= 2) {
    unsigned int v21 = v20;
  }
  else {
    unsigned int v21 = 0;
  }
  if (v13 < a3) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  if (a2 > v13)
  {
    if (((v17 + (v15 & ~v14)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v23 = a2 - v13;
    }
    else {
      int v23 = 1;
    }
    if (((v17 + (v15 & ~v14)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v24 = ~v13 + a2;
      bzero(a1, v18);
      *a1 = v24;
    }
    switch(v22)
    {
      case 1:
        *((unsigned char *)a1 + v18) = v23;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v18) = v23;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)((char *)a1 + v18) = v23;
        return;
      default:
        return;
    }
  }
  uint64_t v25 = ~v14;
  uint64_t v26 = v9;
  switch(v22)
  {
    case 1:
      *((unsigned char *)a1 + v18) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)((char *)a1 + v18) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x1DC92DA14);
    case 4:
      *(_DWORD *)((char *)a1 + v18) = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (!a2) {
        return;
      }
LABEL_40:
      if (v8 == v13)
      {
        uint64_t v27 = (uint64_t)a1;
        uint64_t v28 = a2;
        uint64_t v11 = v8;
        uint64_t v26 = AssociatedTypeWitness;
      }
      else
      {
        uint64_t v27 = ((unint64_t)a1 + v15) & v25;
        if (v12 != v13)
        {
          int v29 = (void *)((v17 + v27) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v30 = a2 ^ 0x80000000;
            v29[1] = 0;
          }
          else
          {
            uint64_t v30 = (a2 - 1);
          }
          *int v29 = v30;
          return;
        }
        uint64_t v28 = (a2 + 1);
      }
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v27, v28, v11, v26);
      return;
  }
}

uint64_t sub_1DC92DA3C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC92DAD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    unsigned int v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DC92DBD0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

uint64_t sub_1DC92DC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_1DC92DCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC92DD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC92DDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1DC92DE4C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC92DF88);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DC92DF9C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1DC92E16CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for InclusiveReductionsSequence()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC92E1AC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_1DCB88718();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DC92E2BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(v8 + 64);
  }
  else {
    size_t v12 = *(void *)(v8 + 64) + 1;
  }
  int v13 = *(_DWORD *)(v5 + 80) | v9;
  uint64_t v14 = v13;
  int v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v11 & ~v10) + v12 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v19 = v7;
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unsigned int v21 = (const void *)(((unint64_t)a2 + v11) & v20);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v21, 1, v19))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v20), v21, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)a1 + v11) & v20, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_1DC92E4B8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v5 - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v5);
  }
  return result;
}

uint64_t sub_1DC92E5F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v12 = *(void *)(v8 + 64);
    }
    else {
      size_t v12 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1DC92E750(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v7);
  int v12 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7);
  if (v6)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
      return a1;
    }
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, v7);
      return a1;
    }
    int v16 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v15 = v8 + 8;
    v16(v10, v7);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v10, v11, v17);
  return a1;
}

uint64_t sub_1DC92E910(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v12 = *(void *)(v8 + 64);
    }
    else {
      size_t v12 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1DC92EA70(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v7);
  int v12 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v11, 1, v7);
  if (v6)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v7);
      return a1;
    }
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, v7);
      return a1;
    }
    int v16 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v15 = v8 + 8;
    v16(v10, v7);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v10, v11, v17);
  return a1;
}

uint64_t sub_1DC92EC30(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v9) {
    uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = *(void *)(v5 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_30;
  }
  uint64_t v15 = v13 + (v14 & ~v12);
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_30:
      if (v11)
      {
        if (v6 >= v10)
        {
          return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v6, AssociatedTypeWitness);
        }
        else
        {
          unsigned int v22 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(((unint64_t)a1 + v14) & ~v12, v9, v7);
          if (v22 >= 2) {
            return v22 - 1;
          }
          else {
            return 0;
          }
        }
      }
      return 0;
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_30;
  }
LABEL_20:
  int v19 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v19 = 0;
  }
  if (v15)
  {
    if (v15 <= 3) {
      int v20 = v15;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v11 + (v21 | v19) + 1;
}

void sub_1DC92EEC8(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  int v10 = 0;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v13 <= v8) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = *(void *)(v7 + 64) + v15;
  uint64_t v17 = v16 & ~v15;
  if (v12) {
    size_t v18 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    size_t v18 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  size_t v19 = v17 + v18;
  char v20 = 8 * (v17 + v18);
  if (a3 > v14)
  {
    if (v19 <= 3)
    {
      unsigned int v21 = ((a3 - v14 + ~(-1 << v20)) >> v20) + 1;
      if (HIWORD(v21))
      {
        int v10 = 4;
      }
      else if (v21 >= 0x100)
      {
        int v10 = 2;
      }
      else
      {
        int v10 = v21 > 1;
      }
    }
    else
    {
      int v10 = 1;
    }
  }
  if (v14 < a2)
  {
    unsigned int v22 = ~v14 + a2;
    if (v19 < 4)
    {
      int v23 = (v22 >> v20) + 1;
      if (v19)
      {
        int v24 = v22 & ~(-1 << v20);
        bzero(a1, v19);
        if (v19 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if (v19 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v19);
      *(_DWORD *)a1 = v22;
      int v23 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v19] = v23;
        return;
      case 2:
        *(_WORD *)&a1[v19] = v23;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v19] = v23;
        return;
      default:
        return;
    }
  }
  switch(v10)
  {
    case 1:
      a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x1DC92F254);
    case 4:
      *(_DWORD *)&a1[v19] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v8 >= v13)
      {
        uint64_t v29 = (uint64_t)a1;
        uint64_t v30 = a2;
        uint64_t v12 = v8;
        uint64_t v9 = AssociatedTypeWitness;
      }
      else
      {
        uint64_t v25 = (unsigned char *)((unint64_t)&a1[v16] & ~v15);
        if (v13 < a2)
        {
          if (v18 <= 3) {
            int v26 = ~(-1 << (8 * v18));
          }
          else {
            int v26 = -1;
          }
          if (v18)
          {
            int v27 = v26 & (~v13 + a2);
            if (v18 <= 3) {
              int v28 = v18;
            }
            else {
              int v28 = 4;
            }
            bzero(v25, v18);
            switch(v28)
            {
              case 2:
                *(_WORD *)uint64_t v25 = v27;
                break;
              case 3:
                *(_WORD *)uint64_t v25 = v27;
                v25[2] = BYTE2(v27);
                break;
              case 4:
                *(_DWORD *)uint64_t v25 = v27;
                break;
              default:
                *uint64_t v25 = v27;
                break;
            }
          }
          return;
        }
        uint64_t v30 = (a2 + 1);
        uint64_t v29 = (uint64_t)v25;
      }
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v29, v30, v12, v9);
      return;
  }
}

uint64_t sub_1DC92F28C(uint64_t a1, uint64_t a2)
{
  return sub_1DC925C40(a1, a2, v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_1DC92F2D0()
{
  uint64_t v6 = v4;
  uint64_t v7 = v4;
  uint64_t v8 = v0;
  uint64_t v9 = v1;
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((v1 + v2) & v0, v5, v6);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((v9 + v3) & v8, v5, v7);
}

uint64_t sub_1DC92F388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (a11 + v12) & a12;
}

uint64_t sub_1DC92F3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, a3);
}

uint64_t sub_1DC92F3E8()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_1DC92F400()
{
  return v0;
}

uint64_t sub_1DC92F464(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_1DC92F49C()
{
  return v0;
}

uint64_t sub_1DC92F4B0@<X0>(unsigned int a1@<W8>)
{
  return (v1 | a1) + 1;
}

uint64_t sub_1DC92F4BC()
{
  return sub_1DCB88C68();
}

uint64_t sub_1DC92F504()
{
  return 0;
}

uint64_t sub_1DC92F510()
{
  return v0;
}

uint64_t sub_1DC92F52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (a11 + v12) & a12;
}

uint64_t sub_1DC92F548()
{
  return v0;
}

uint64_t sub_1DC92F58C()
{
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, v3, v2);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, v3, v2);
}

uint64_t sub_1DC92F5CC()
{
  return sub_1DCB88718();
}

uint64_t sub_1DC92F5E4()
{
  return v0;
}

uint64_t sub_1DC92F60C()
{
  return sub_1DCB88118();
}

uint64_t sub_1DC92F654(uint64_t a1)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, 1, 1, v1);
}

uint64_t sub_1DC92F698()
{
  return v0;
}

uint64_t sub_1DC92F6B0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1DC92F6D0()
{
  return 0;
}

uint64_t sub_1DC92F6DC()
{
  return 0;
}

void sub_1DC92F6FC()
{
}

uint64_t sub_1DC92F720()
{
  return (v2 + v0) & v1;
}

uint64_t sub_1DC92F754()
{
  return v0;
}

uint64_t sub_1DC92F780()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_1DC92F794()
{
  return v0;
}

uint64_t sub_1DC92F7BC()
{
  return v0;
}

uint64_t sub_1DC92F7FC()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1DC92F814()
{
  return swift_getAssociatedConformanceWitness();
}

void *sub_1DC92F834(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_1DC92F84C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v6 = v5;
  unsigned int v8 = a1;
  unint64_t v9 = HIDWORD(a1);
  if (HIDWORD(a1) < a1) {
    uint64_t v10 = -(uint64_t)(a1 - HIDWORD(a1));
  }
  else {
    uint64_t v10 = (HIDWORD(a1) - a1);
  }
  if (v10)
  {
    char v20 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v11 = &v20;
    uint64_t result = sub_1DCB88B68();
    if ((v10 & 0x8000000000000000) == 0)
    {
      unsigned int v13 = v8;
      while (1)
      {
        unsigned int v18 = v13;
        sub_1DC93027C(&v18, a2, a3, a4, a5, &v17, &v19);
        if (v6)
        {
          swift_release();

          swift_release();
          return (uint64_t)v11;
        }
        uint64_t v6 = 0;
        sub_1DCB88B48();
        sub_1DCB88B78();
        sub_1DCB88B88();
        uint64_t v11 = &v20;
        uint64_t result = sub_1DCB88B58();
        if (v9 < v8) {
          break;
        }
        if (v13 >= v9) {
          goto LABEL_17;
        }
        ++v13;
        if (!--v10)
        {
          uint64_t v11 = v20;

          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
    }
    __break(1u);
  }
  else
  {

    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_13:
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

double sub_1DC92F9E0()
{
  return *(double *)(v0 + OBJC_IVAR___SNCorrelateAudioRequest_impl + 8);
}

void sub_1DC92FA4C(double a1)
{
}

void sub_1DC92FA9C(double a1)
{
  double v2 = *(double *)(v1 + OBJC_IVAR___SNCorrelateAudioRequest_impl + 8);
  if (v2 >= 0.0 && v2 < 1.0)
  {
    *(double *)(v1 + OBJC_IVAR___SNCorrelateAudioRequest_impl + 8) = a1;
  }
  else
  {
    sub_1DC930FA4();
    sub_1DC883884();
    swift_willThrow();
  }
}

uint64_t sub_1DC92FB08()
{
  if (qword_1EAA9C6D0 != -1) {
    swift_once();
  }
  if (byte_1EAA9C6C8)
  {
    uint64_t v1 = *(void **)(v0 + OBJC_IVAR___SNCorrelateAudioRequest_impl);
    double v2 = *(double *)(v0 + OBJC_IVAR___SNCorrelateAudioRequest_impl + 8);
    type metadata accessor for SNAudioCorrelator();
    uint64_t v3 = swift_allocObject();
    sub_1DC92FE40(v1, v2);
  }
  else
  {
    uint64_t v3 = type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001ALL, 0x80000001DCB91A50);
    swift_willThrow();
  }
  return v3;
}

id sub_1DC92FC14(uint64_t a1, double a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = (double *)&v2[OBJC_IVAR___SNCorrelateAudioRequest_impl];
  *(void *)uint64_t v6 = a1;
  v6[1] = a2;
  v8.uint64_t receiver = v2;
  v8.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_1DC92FCB0(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR___SNCorrelateAudioRequest_impl];
  *(void *)uint64_t v4 = a1;
  *((void *)v4 + 1) = 0x3FE0000000000000;
  v6.uint64_t receiver = v1;
  v6.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id SNCorrelateAudioRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNCorrelateAudioRequest.init()()
{
}

id SNCorrelateAudioRequest.__deallocating_deinit()
{
  v2.uint64_t receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC92FDEC()
{
  return sub_1DC92FB08();
}

uint64_t type metadata accessor for SNCorrelateAudioRequest()
{
  return self;
}

uint64_t method lookup function for SNCorrelateAudioRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNCorrelateAudioRequest);
}

uint64_t sub_1DC92FE40(void *a1, double a2)
{
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_processingFormat);
  objc_msgSend(v5, sel_sampleRate);
  uint64_t v7 = v6;

  *(void *)(v2 + 32) = v7;
  *(void *)(v2 + 40) = 1;
  *(double *)(v2 + 48) = a2;
  return v2;
}

char *sub_1DC92FEC0(void *a1, double a2, float a3)
{
  uint64_t v7 = (char *)objc_msgSend(a1, sel_length);
  uint64_t result = (char *)objc_msgSend(a1, sel_length);
  float v9 = (float)(uint64_t)result * a3;
  if ((~LODWORD(v9) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9 <= -9.2234e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v9 >= 9.2234e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = &v7[-(uint64_t)v9];
  if (__OFSUB__(v7, (uint64_t)v9))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v10 = sub_1DC930A84(a2);
  uint64_t v12 = (void *)sub_1DC930C38(v10, v11);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return (char *)v12;
  }
  swift_bridgeObjectRelease();
  sub_1DC93003C(v12, a1, a3);
  uint64_t result = (char *)objc_msgSend(a1, sel_length);
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0) {
    goto LABEL_16;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a2 < 9.22337204e18)
  {
    sub_1DCB5EC24((uint64_t)v12);
    sub_1DCB5F1F8((uint64_t)v12);
    return (char *)v12;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_1DC93003C(void *a1, void *a2, float a3)
{
  uint64_t v6 = (void *)sub_1DC931174();
  id v7 = sub_1DCB60550(a1, v6);

  sub_1DC930824(v7, a2, a3);
}

uint64_t sub_1DC9300CC(void *a1, unint64_t a2, void (*a3)(void))
{
  if ((a2 & 0x8000000000000000) == 0 && !HIDWORD(a2))
  {
    int v6 = *(_DWORD *)(v3 + 44);
    unsigned int v7 = v6 + a2;
    if (__CFADD__(v6, a2))
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = v4;
      *(_DWORD *)(v3 + 44) = v7;
      if ((uint64_t)objc_msgSend(*(id *)(v3 + 24), sel_length) > v7) {
        return MEMORY[0x1E4FBC860];
      }
      unint64_t v11 = (unint64_t)*(unsigned int *)(v3 + 40) << 32;
      id v12 = a1;
      swift_retain();
      unint64_t v13 = sub_1DC92F84C(v11, v12, a2, v3, a3);
      if (v8) {
        return v3;
      }
      unint64_t v14 = v13;
      if (!(v13 >> 62))
      {
        swift_bridgeObjectRetain();
        sub_1DCB89078();
        uint64_t v3 = v14;
LABEL_9:
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    swift_bridgeObjectRetain();
    sub_1DC87E988(&qword_1EAA9E960);
    uint64_t v3 = sub_1DCB88C78();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1DC8AF148();
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

void sub_1DC93027C(unsigned int *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void)@<X4>, uint64_t *a6@<X6>, void *a7@<X8>)
{
  uint64_t v9 = v7;
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  uint64_t v14 = *a1;
  uint64_t v15 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNAudioCorrelationResult()), sel_init);
  uint64_t v16 = (double *)&v15[OBJC_IVAR___SNAudioCorrelationResult_impl];
  *(void *)&v15[OBJC_IVAR___SNAudioCorrelationResult_impl + 80] = v14;
  sub_1DCB2FD9C((uint64_t)a2, 0, 4, v14);
  if (v7)
  {

    unsigned int v18 = a6;
LABEL_10:
    *unsigned int v18 = v9;
    return;
  }
  uint64_t v44 = v16;
  uint64_t v45 = v14;
  void v16[6] = v17;
  uint64_t v19 = self;
  v48.start.CMTimeValue value = 0;
  uint64_t v46 = (uint64_t)a2;
  id v20 = sub_1DCB6C41C(v19, a2, (uint64_t)&v48);
  if (!v20)
  {
    id v38 = (id)v48.start.value;
    uint64_t v9 = sub_1DCB86898();

    swift_willThrow();
    unsigned int v18 = a6;
    goto LABEL_10;
  }
  unsigned int v21 = v20;
  id v22 = (id)v48.start.value;
  uint64_t v23 = sub_1DCB88038();

  uint64_t v24 = v23 + a3;
  if (__OFADD__(v23, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v25 = *(void **)(a4 + 24);
  id v26 = objc_msgSend(v25, sel_length);
  BOOL v27 = __OFSUB__(v24, v26);
  int64_t v28 = v24 - (void)v26;
  if (v27)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v43 = v23;
  int32_t v29 = sub_1DCB5C99C(v46);
  if (v29 < 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  CMTimeMake(&v48.start, v28, v29);
  CMTimeValue value = v48.start.value;
  uint64_t v31 = *(void *)&v48.start.timescale;
  CMTimeEpoch epoch = v48.start.epoch;
  id v33 = objc_msgSend(v25, sel_length);
  int32_t v34 = sub_1DCB5C99C(v46);
  if (v34 < 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  CMTimeMake(&v48.start, (int64_t)v33, v34);
  CMTime duration = v48.start;
  start.CMTimeValue value = value;
  *(void *)&start.timescale = v31;
  start.CMTimeEpoch epoch = epoch;
  CMTimeRangeMake(&v48, &start, &duration);
  CMTimeRange v56 = v48;
  a5();
  uint64_t v35 = sub_1DCB883C8();
  ((void (*)(uint64_t))a5)(v35);
  sub_1DCB883D8();
  uint64_t v36 = v55;
  *(void *)uint64_t v44 = v51;
  *((void *)v44 + 1) = v52;
  *((_OWORD *)v44 + 1) = v53;
  *((void *)v44 + 4) = v54;
  *((void *)v44 + 5) = v36;
  sub_1DCB2FD9C(v46, 1, 4, v45);
  if ((~LODWORD(v37) & 0x7F800000) == 0) {
    goto LABEL_21;
  }
  if (v37 <= -9.2234e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v37 >= 9.2234e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (__OFADD__(v43, (uint64_t)v37))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  if ((sub_1DCB5C99C(v46) & 0x80000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v39 = sub_1DCB88628();
  *((void *)v44 + 7) = ((uint64_t (*)(uint64_t))a5)(v39);
  *((_DWORD *)v44 + 16) = v40;
  *((_DWORD *)v44 + 17) = v41;
  *((void *)v44 + 9) = v42;
  *a7 = v15;
}

id sub_1DC930668()
{
  id v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DC930F04();
  sub_1DC883884();
  return (id)swift_willThrow();
}

void sub_1DC9306BC(int a1)
{
  uint64_t v3 = *v1;
  *((_DWORD *)v1 + 10) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  uint64_t v5 = sub_1DC8A12D0();
  swift_release();
  if (!v2)
  {
    int v6 = (void *)v1[2];
    v1[2] = v5;
  }
}

char *sub_1DC930778@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  float v4 = *(double *)(a1 + 48);
  uint64_t result = sub_1DC92FEC0(*(void **)(a1 + 24), *(double *)(a1 + 32), v4);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

id sub_1DC9307C0()
{
  id result = sub_1DC930668();
  if (!v0)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)sub_1DC931174();
    id v4 = sub_1DCB60550(v2, v3);

    return v4;
  }
  return result;
}

void sub_1DC930824(void *a1, id a2, float a3)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  id v6 = objc_msgSend(a2, sel_processingFormat);
  unint64_t v7 = (unint64_t)objc_msgSend(a2, sel_length);
  if ((v7 & 0x8000000000000000) != 0 || HIDWORD(v7))
  {
    sub_1DC8AF148();
    sub_1DCB88C58();
    __break(1u);
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, v6, v7);

    if (v8)
    {
      objc_msgSend(a2, sel_setFramePosition_, 0);
      v15[0] = 0;
      unsigned __int8 v9 = objc_msgSend(a2, sel_readIntoBuffer_error_, v8, v15);
      id v10 = v15[0];
      if (v9)
      {
        uint64_t v11 = self;
        v15[0] = 0;
        id v12 = v10;
        sub_1DCB6AD58(a3, v11, a1, v8);
      }
      id v14 = v15[0];
      sub_1DCB86898();

      swift_willThrow();
    }
    else
    {
      sub_1DC884E74();
      sub_1DC883884();
      *unint64_t v13 = 0;
      swift_willThrow();
    }
  }
}

uint64_t sub_1DC930A84(double a1)
{
  sub_1DCB88A98();
  uint64_t result = sub_1DC9311A4();
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a1 < 9.22337204e18)
  {
    sub_1DC9311C0();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DC9311A4();
    sub_1DC9311C0();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DC9311A4();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DC9311C0();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DC9311A4();
    return 0;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC930C38(uint64_t a1, uint64_t a2)
{
  sub_1DC87E988(&qword_1EAAA0900);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  *(void *)(inited + 32) = 1954047316;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  sub_1DCB877D8();
  id v5 = objc_allocWithZone((Class)type metadata accessor for SNDSPGraphInfo());
  id v6 = sub_1DC9B1F8C();
  uint64_t v7 = type metadata accessor for SNDSPGraphLoader();
  id v8 = sub_1DC9B1A24((uint64_t)v6);
  if (v8)
  {
    uint64_t v7 = (uint64_t)v8;
  }
  else
  {
    sub_1DC884E74();
    sub_1DC883884();
    *unsigned __int8 v9 = 0;
    swift_willThrow();
  }

  return v7;
}

uint64_t sub_1DC930D5C()
{
  return v0;
}

uint64_t sub_1DC930D84()
{
  sub_1DC930D5C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNAudioCorrelator()
{
  return self;
}

void *sub_1DC930DDC(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t sub_1DC930E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t sub_1DC930E58(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

void type metadata accessor for CorrelateAudioRequest()
{
}

uint64_t sub_1DC930EA4(void *a1, unint64_t a2, void (*a3)(void))
{
  return sub_1DC9300CC(a1, a2, a3);
}

id sub_1DC930EBC()
{
  return sub_1DC9307C0();
}

void sub_1DC930ED4(int a1)
{
}

id sub_1DC930EEC()
{
  return sub_1DC930668();
}

unint64_t sub_1DC930F04()
{
  unint64_t result = qword_1EAAA08F8;
  if (!qword_1EAAA08F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA08F8);
  }
  return result;
}

uint64_t sub_1DC930F50()
{
  swift_release();

  return swift_deallocObject();
}

char *sub_1DC930F88@<X0>(char **a1@<X8>)
{
  return sub_1DC930778(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DC930FA4()
{
  unint64_t result = qword_1EAAA0908;
  if (!qword_1EAAA0908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0908);
  }
  return result;
}

void type metadata accessor for SNCorrelateAudioRequest.DomainError()
{
}

unsigned char *sub_1DC931000(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC93109CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SNAudioCorrelator.DomainError()
{
}

unint64_t sub_1DC9310D4()
{
  unint64_t result = qword_1EAAA0910;
  if (!qword_1EAAA0910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0910);
  }
  return result;
}

unint64_t sub_1DC931124()
{
  unint64_t result = qword_1EAAA0918;
  if (!qword_1EAAA0918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0918);
  }
  return result;
}

uint64_t sub_1DC931174()
{
  return sub_1DCB87908();
}

uint64_t sub_1DC9311A4()
{
  return sub_1DCB87A18();
}

uint64_t sub_1DC9311C0()
{
  return sub_1DCB88F98();
}

uint64_t sub_1DC9311DC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_model + 8);
  type metadata accessor for SNUtils();
  uint64_t ObjectType = swift_getObjectType();
  int v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
  unint64_t v4 = sub_1DCB218A8(v3);

  uint64_t v5 = sub_1DCB2395C(v4, 1u);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DC93126C()
{
  return *(unsigned int *)(v0
                         + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames);
}

void sub_1DC93127C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  unint64_t v4 = (void *)v47(ObjectType, a2);
  id v5 = objc_msgSend(v4, sel_inputDescriptionsByName);

  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v6 = sub_1DCB877B8();

  if (*(void *)(v6 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_1DC9A4508(v6);
  uint64_t v8 = v7;
  id v10 = v9;
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_6:
    type metadata accessor for SNError();
    sub_1DC931D18(0x80000001DCB90E90, 0xD000000000000040, (uint64_t)"SNLogMelBasedFeatureExtractor models must have one input feature");
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRelease();
  id v46 = v10;
  id v11 = objc_msgSend(v10, sel_multiArrayConstraint);
  if (v11)
  {
    id v12 = v11;
    id v13 = objc_msgSend(v11, sel_shape);

    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    uint64_t v14 = sub_1DCB87C38();
  }
  else
  {
    uint64_t v14 = 0;
  }
  type metadata accessor for SNUtils();
  sub_1DCB22EA4();
  if (v14)
  {
    swift_bridgeObjectRetain();
    char v15 = sub_1DC8DD0D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v16 = (void *)v47(ObjectType, a2);
      id v17 = objc_msgSend(v16, sel_outputDescriptionsByName);

      uint64_t v18 = sub_1DCB877B8();
      if (*(void *)(v18 + 16) == 1)
      {
        sub_1DC9A4508(v18);
        uint64_t v20 = v19;
        id v22 = v21;
        swift_bridgeObjectRelease();
        if (v20)
        {
          swift_bridgeObjectRelease();
          id v23 = objc_msgSend(v22, sel_multiArrayConstraint);
          if (!v23) {
            goto LABEL_23;
          }
          uint64_t v24 = v23;
          id v25 = objc_msgSend(v23, sel_shape);

          sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
          unint64_t v26 = sub_1DCB87C38();

          if (v26 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v27 = sub_1DCB88CC8();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          if (v27 == 1)
          {
          }
          else
          {
LABEL_23:
            sub_1DCB88A98();
            sub_1DC931D58();
            id v38 = objc_msgSend(v22, sel_multiArrayConstraint);
            uint64_t v39 = v38;
            if (v38)
            {
              id v40 = objc_msgSend(v38, sel_shape);

              sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
              sub_1DCB87C38();
            }
            type metadata accessor for SNError();
            sub_1DC87E988(&qword_1EAAA0930);
            sub_1DCB87988();
            sub_1DCB87A18();
            swift_bridgeObjectRelease();
            sub_1DC931D58();
            unint64_t v41 = sub_1DC931CFC();
            sub_1DCA14B2C(v41, v42, v43, v44, v45, 0xE000000000000000);
            swift_bridgeObjectRelease();
            swift_willThrow();
          }
          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      type metadata accessor for SNError();
      sub_1DC931D18(0x80000001DCB90E90, 0xD000000000000041, (uint64_t)"SNLogMelBasedFeatureExtractor models must have one output feature");
      swift_willThrow();

      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1DCB88A98();
  sub_1DC931D58();
  id v28 = objc_msgSend(v46, sel_multiArrayConstraint);
  int32_t v29 = v28;
  if (v28)
  {
    id v30 = objc_msgSend(v28, sel_shape);

    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    sub_1DCB87C38();
  }
  type metadata accessor for SNError();
  sub_1DC87E988(&qword_1EAAA0930);
  sub_1DCB87988();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  uint64_t v31 = sub_1DCB22EA4();
  uint64_t v32 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  MEMORY[0x1E01A6C50](v31, v32);
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v33 = sub_1DC931CFC();
  sub_1DCA14B2C(v33, v34, v35, v36, v37, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_willThrow();
}

id sub_1DC9318EC(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unsigned __int8 v9 = v4;
  sub_1DC93127C(a1, a2);
  id v10 = (uint64_t *)&v9[OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_model];
  *id v10 = a1;
  v10[1] = a2;
  *(_DWORD *)&v9[OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames] = a3;
  swift_unknownObjectRetain();

  v13.uint64_t receiver = v9;
  v13.Class super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v13, sel_init);
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1DC931A08()
{
  swift_getObjectType();
  sub_1DC931D40();
  v0();
  uint64_t v1 = sub_1DCB87A98();
  swift_bridgeObjectRelease();
  return sub_1DCB89278() ^ v1;
}

BOOL sub_1DC931A78(uint64_t a1)
{
  sub_1DC87E920(a1, (uint64_t)v15);
  if (!v16)
  {
    sub_1DC881978((uint64_t)v15);
    return 0;
  }
  type metadata accessor for SNSoundPrintFeatureExtractorConfiguration();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  swift_getObjectType();
  sub_1DC931D40();
  uint64_t v3 = v2();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)&v14[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_model + 8];
  uint64_t ObjectType = swift_getObjectType();
  if (v3 == (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6) && v5 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {

      return 0;
    }
  }
  int v12 = *(_DWORD *)(v1 + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames);
  int v13 = *(_DWORD *)&v14[OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames];

  return v12 == v13;
}

void sub_1DC931C50()
{
}

uint64_t type metadata accessor for SNLogMelBasedFeatureExtractorConfiguration()
{
  return self;
}

double sub_1DC931CC4()
{
  return 16000.0;
}

uint64_t sub_1DC931CD0()
{
  return 15360;
}

uint64_t sub_1DC931CD8()
{
  return sub_1DC93126C();
}

unint64_t sub_1DC931CFC()
{
  return 0xD000000000000017;
}

id sub_1DC931D18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_1DCA14B2C(0xD000000000000017, a1, 1, 0, a2, (a3 - 32) | 0x8000000000000000);
}

uint64_t sub_1DC931D58()
{
  return sub_1DCB87A18();
}

uint64_t sub_1DC931D74()
{
  if (qword_1EAA9D1B0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAAFF858;
  char v1 = byte_1EAAFF860;
  if (byte_1EAAFF860)
  {
    id v2 = (id)qword_1EAAFF858;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    uint64_t v3 = 0;
    uint64_t result = 0;
    uint64_t v5 = (void (*)(uint64_t@<X8>))v0;
    uint64_t v0 = 0;
  }
  else
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA37B0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = self;
    swift_retain();
    *(void *)(v6 + 16) = objc_msgSend(v7, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1DC87E988(&qword_1EAAA0990);
    sub_1DC886810();
    uint64_t result = sub_1DC9AE954(v6);
    uint64_t v5 = sub_1DC931EC8;
    uint64_t v3 = 1;
  }
  qword_1EAAFF880 = (uint64_t)v5;
  qword_1EAAFF888 = 0;
  qword_1EAAFF890 = v3;
  qword_1EAAFF898 = result;
  qword_1EAAFF8A0 = v0;
  byte_1EAAFF8A8 = v1;
  return result;
}

void sub_1DC931EC8(uint64_t a1@<X8>)
{
}

uint64_t sub_1DC931F20(void *a1, void *a2)
{
  sub_1DC881A8C(a1, a1[3]);
  if (sub_1DC933AF4())
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1DCB86FE8();
    sub_1DC89F57C(v4, (uint64_t)qword_1EAAFF810);
    uint64_t v5 = sub_1DCB86FC8();
    os_log_type_t v6 = sub_1DCB88468();
    if (!os_log_type_enabled(v5, v6))
    {
      char v10 = 0;
      goto LABEL_14;
    }
    uint64_t v7 = (_WORD *)swift_slowAlloc();
    *uint64_t v7 = 0;
    sub_1DC933DC8(&dword_1DC873000, v8, v9, "SoundAnalysis is defanged; refusing to launch daemon");
    char v10 = 0;
LABEL_6:
    MEMORY[0x1E01A99C0](v7, -1, -1);
LABEL_14:

    sub_1DC933BE8();
    swift_allocError();
    *uint64_t v16 = v10;
    return swift_willThrow();
  }
  uint64_t result = sub_1DCA96424(a2, 0xD000000000000025, 0x80000001DCB932F0);
  if (!v2 && (result & 1) == 0)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1DCB86FE8();
    sub_1DC89F57C(v12, (uint64_t)qword_1EAAFF810);
    uint64_t v5 = sub_1DCB86FC8();
    os_log_type_t v13 = sub_1DCB88468();
    if (!os_log_type_enabled(v5, v13))
    {
      char v10 = 1;
      goto LABEL_14;
    }
    uint64_t v7 = (_WORD *)swift_slowAlloc();
    *uint64_t v7 = 0;
    sub_1DC933DC8(&dword_1DC873000, v14, v15, "inadequate entitlements to host daemon");
    char v10 = 1;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1DC93210C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_1DC8BA8F8((uint64_t)sub_1DC932124);
}

uint64_t sub_1DC932124()
{
  sub_1DC886900();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  id v3 = objc_allocWithZone((Class)type metadata accessor for SNFileServer());
  swift_bridgeObjectRetain();
  v0[4] = sub_1DCA08A20(v1, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  void *v4 = v0;
  v4[1] = sub_1DC9321E8;
  return sub_1DCA0AEC8();
}

uint64_t sub_1DC9321E8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v6, v7, v8);
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v3 + 56) = v9;
    *uint64_t v9 = v4;
    v9[1] = sub_1DC932320;
    return static AsyncUtils.sleepUntilCancelled()();
  }
}

uint64_t sub_1DC932320()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC9323E8()
{
  sub_1DC8867A8();

  sub_1DC8BAB84();
  return v1();
}

uint64_t sub_1DC932440()
{
  sub_1DC8867A8();

  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC93249C()
{
  sub_1DC8867A8();
  *(unsigned char *)(v0 + 128) = v1;
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = v3;
  sub_1DC87E988(&qword_1EAAA2180);
  *(void *)(v0 + 80) = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DC93252C()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  char v3 = *((unsigned char *)v0 + 128);
  uint64_t v4 = v0[8];
  sub_1DCB87E48();
  sub_1DC933D94();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = v3;
  v0[11] = sub_1DCB294C4(v1, (uint64_t)&unk_1EAAA0958, v5);
  sub_1DC933D94();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  _OWORD v6[3] = 0;
  _OWORD v6[4] = v4;
  v6[5] = v2;
  swift_bridgeObjectRetain();
  v0[12] = sub_1DCB294C4(v1, (uint64_t)&unk_1EAAA0968, (uint64_t)v6);
  if (qword_1EAA9D218 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EAAFF940;
  uint64_t v8 = (void *)sub_1DCB87908();
  uint64_t v9 = sub_1DC886810();
  *(void *)(v9 + 16) = sub_1DC932F68;
  *(void *)(v9 + 24) = 0;
  v0[6] = sub_1DC8C1B5C;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1DC8A191C;
  v0[5] = &unk_1F37FADF0;
  char v10 = _Block_copy(v0 + 2);
  swift_release();
  v0[13] = sub_1DCB6CFC8((uint64_t)v7, v8, v10);

  _Block_release(v10);
  sub_1DC933D94();
  uint64_t v11 = sub_1DC886810();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  v0[14] = sub_1DCA97644();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1DC9327CC;
  return static AsyncUtils.sleepUntilCancelled()();
}

uint64_t sub_1DC9327CC()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC932894()
{
  uint64_t v1 = *(const void **)(v0 + 104);
  sub_1DC87E988(&qword_1EAA9DF60);
  sub_1DCB87EE8();
  sub_1DCB87EE8();
  sub_1DCB87EE8();
  _Block_release(v1);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v2();
}

uint64_t sub_1DC93299C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 40) = a4;
  return MEMORY[0x1F4188298](sub_1DC9329BC, 0, 0);
}

uint64_t sub_1DC9329BC()
{
  sub_1DC8867A8();
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    uint64_t v1 = sub_1DCAA3CE8();
    uint64_t v3 = v2;
    *(void *)(v0 + 16) = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 24) = v4;
    void *v4 = v0;
    v4[1] = sub_1DC932A94;
    return sub_1DC93210C(v1, v3);
  }
  else
  {
    sub_1DC8BAB84();
    return v6();
  }
}

uint64_t sub_1DC932A94()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v3 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v6, v7, v8);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DC8BA978();
    return v9();
  }
}

uint64_t sub_1DC932B98()
{
  sub_1DC8867A8();
  swift_bridgeObjectRelease();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC932BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return MEMORY[0x1F4188298](sub_1DC932C14, 0, 0);
}

uint64_t sub_1DC932C14()
{
  sub_1DC886900();
  uint64_t v1 = qword_1EAA9D1B0;
  swift_bridgeObjectRetain_n();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EAAFF858;
  v0[5] = qword_1EAAFF858;
  if (byte_1EAAFF860)
  {
    id v3 = v2;
    swift_bridgeObjectRelease();
    v0[2] = v2;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    swift_bridgeObjectRelease();
    sub_1DC8BA978();
    return v4();
  }
  else
  {
    id v6 = objc_allocWithZone(MEMORY[0x1E4F29290]);
    swift_retain();
    uint64_t v7 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v6, sel_initWithMachServiceName_, v7);

    uint64_t v9 = sub_1DC886810();
    *(void *)(v9 + 16) = sub_1DC933AD0;
    *(void *)(v9 + 24) = v2;
    swift_retain();
    char v10 = sub_1DC9C8974(v8, (uint64_t)sub_1DC933AEC, v9);
    uint64_t v12 = v11;
    swift_release();

    v0[6] = v10;
    v0[7] = v12;
    os_log_type_t v13 = (void *)swift_task_alloc();
    v0[8] = v13;
    *os_log_type_t v13 = v0;
    v13[1] = sub_1DC932E24;
    return static AsyncUtils.sleepUntilCancelled()();
  }
}

uint64_t sub_1DC932E24()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DC932EEC()
{
  sub_1DC886900();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DC8BAB84();
  return v1();
}

uint64_t sub_1DC932F68()
{
  return sub_1DCB877D8();
}

uint64_t sub_1DC932FB4()
{
  return sub_1DC933AC8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1DC932FE8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(unsigned char *)(v4 + 137) = a4;
  *(unsigned char *)(v4 + 136) = a3;
  *(void *)(v4 + 104) = a1;
  *(void *)(v4 + 112) = a2;
  return sub_1DC8BA8F8((uint64_t)sub_1DC933008);
}

uint64_t sub_1DC933008()
{
  uint64_t v15 = v0;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DCB86FE8();
  sub_1DC89F57C(v1, (uint64_t)qword_1EAAFF810);
  uint64_t v2 = sub_1DCB86FC8();
  os_log_type_t v3 = sub_1DCB88488();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1DC873000, v2, v3, "Checking if it's OK to run...", v4, 2u);
    sub_1DC8E7728();
  }

  *(void *)(v0 + 40) = &type metadata for SystemBootArgsReader;
  *(void *)(v0 + 48) = &off_1F37EB8C8;
  *(void *)(v0 + 80) = &unk_1F37F2778;
  *(void *)(v0 + 88) = &off_1F37F2758;
  sub_1DC931F20((void *)(v0 + 16), (void *)(v0 + 56));
  sub_1DC8818D0(v0 + 56);
  sub_1DC8818D0(v0 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1DCB86FC8();
  os_log_type_t v6 = sub_1DCB88488();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void *)(v0 + 104);
    int v13 = *(unsigned __int8 *)(v0 + 137);
    int v12 = *(unsigned __int8 *)(v0 + 136);
    unint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 96) = sub_1DC9F8920(v7, v8, &v14);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 1024;
    *(_DWORD *)(v0 + 128) = v12;
    sub_1DCB88778();
    *(_WORD *)(v9 + 18) = 1024;
    *(_DWORD *)(v0 + 132) = v13;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v5, v6, "Running with service name %s; file server? %{BOOL}d; biome donation? %{BOOL}d.",
      (uint8_t *)v9,
      0x18u);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v10;
  *char v10 = v0;
  v10[1] = sub_1DC933390;
  return sub_1DC93249C();
}

uint64_t sub_1DC933390()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC8BA978();
  return v3();
}

uint64_t static SNDaemon.soundanalysisdLaunch()()
{
  return sub_1DC8BA8F8((uint64_t)sub_1DC933464);
}

uint64_t sub_1DC933464()
{
  sub_1DC8867A8();
  if (sub_1DCAA3C04())
  {
    if (qword_1EAA9CB50 != -1) {
      swift_once();
    }
    char v1 = byte_1EAAFF828;
  }
  else
  {
    char v1 = 0;
  }
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC8D6930;
  return sub_1DC932FE8(0xD000000000000018, 0x80000001DCB93290, v1, 1);
}

uint64_t (*static SNSystemService.audiomxdLaunch()())(void)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DCB86FE8();
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF810);
  char v1 = sub_1DCB86FC8();
  os_log_type_t v2 = sub_1DCB88488();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl(&dword_1DC873000, v1, v2, "Not launching SoundAnalysis in audiomxd.", v3, 2u);
    sub_1DC8E7728();
  }

  return nullsub_1;
}

id SNSystemService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id SNSystemService.init()()
{
  v2.uint64_t receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SNSystemService.__deallocating_deinit()
{
  v2.uint64_t receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

ValueMetadata *type metadata accessor for SNDaemon()
{
  return &type metadata for SNDaemon;
}

uint64_t type metadata accessor for SNSystemService()
{
  return self;
}

uint64_t sub_1DC9337E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC9337F0()
{
  return swift_release();
}

uint64_t sub_1DC9337F8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC933830()
{
  sub_1DC886900();
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  os_log_type_t v3 = (void *)sub_1DC886800(v2);
  *os_log_type_t v3 = v4;
  v3[1] = sub_1DC8D78C0;
  uint64_t v5 = sub_1DC933DB4();
  return sub_1DC93299C(v5, v6, v7, v1);
}

uint64_t sub_1DC9338CC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC93390C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1DC886800(v3);
  void *v4 = v5;
  v4[1] = sub_1DC8D6930;
  uint64_t v6 = sub_1DC933DB4();
  return sub_1DC932BF4(v6, v7, v8, v2, v1);
}

uint64_t sub_1DC9339B8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9339F0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC933A28()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D6930;
  return sub_1DC932FB4();
}

uint64_t sub_1DC933AC8(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_1DC933AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9C929C(a1, a2, a3, v3);
}

uint64_t sub_1DC933AEC(uint64_t a1, void *a2)
{
  return sub_1DC9C8A1C(a1, a2, *(uint64_t (**)(void *, void *, uint64_t))(v2 + 16));
}

uint64_t sub_1DC933AF4()
{
  uint64_t v0 = sub_1DCB2F0E0();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    for (unint64_t i = (void *)(v0 + 40); ; i += 4)
    {
      BOOL v3 = *(i - 1) == 0x6E616665645F6E73 && *i == 0xE900000000000067;
      if (v3 || (sub_1DCB89018() & 1) != 0) {
        break;
      }
      if (!--v1)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

unint64_t sub_1DC933BE8()
{
  unint64_t result = qword_1EAAA0988;
  if (!qword_1EAAA0988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0988);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNDaemon.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC933D00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNDaemon.DomainError()
{
  return &type metadata for SNDaemon.DomainError;
}

unint64_t sub_1DC933D3C()
{
  unint64_t result = qword_1EAAA0998;
  if (!qword_1EAAA0998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0998);
  }
  return result;
}

uint64_t sub_1DC933D94()
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, 1, 1, v1);
}

uint64_t sub_1DC933DB4()
{
  return v0;
}

void sub_1DC933DC8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

uint64_t sub_1DC933DE8()
{
  uint64_t v1 = sub_1DCB88F98();
  sub_1DCB87A18();
  sub_1DCB88F98();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DC933E74()
{
  uint64_t v0 = sub_1DC933DE8();
  sub_1DCB883C8();
  sub_1DC933DE8();
  sub_1DCB87A18();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC933F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1DC87E920(a2, (uint64_t)&v15);
  if (!v16) {
    return 0;
  }
  sub_1DC87E9CC(&v15, v14);
  sub_1DC934170((uint64_t)v14, a1, a3, a4, a5, a6, a7, &v17);
  sub_1DC8818D0((uint64_t)v14);
  return v17 & 1;
}

uint64_t sub_1DC933FB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, unsigned char *), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v22[-v13];
  sub_1DC88D538();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = &v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC87E9DC(a2, (uint64_t)v22);
  if (swift_dynamicCast())
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v14, 0, 1, a5);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v19, v14, a5);
    char v20 = a3(a1, v19);
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v19, a5);
  }
  else
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v14, 1, 1, a5);
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v14, v9);
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1DC934170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned char *a8@<X8>)
{
  _OWORD v10[2] = a5;
  v10[3] = a6;
  v10[4] = a7;
  v10[5] = a3;
  v10[6] = a4;
  uint64_t result = sub_1DC933FB4(a2, a1, (uint64_t (*)(uint64_t, unsigned char *))sub_1DC93431C, (uint64_t)v10, a5);
  *a8 = result & 1;
  return result;
}

uint64_t sub_1DC9341DC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a6 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v20 - v14;
  v16(v13);
  a3(a2);
  char v17 = sub_1DCB878C8();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, a6);
  v18(v15, a6);
  return v17 & 1;
}

uint64_t sub_1DC93431C(uint64_t a1, uint64_t a2)
{
  return sub_1DC9341DC(a1, a2, *(void (**)(uint64_t))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

ValueMetadata *type metadata accessor for HashableUtilsError()
{
  return &type metadata for HashableUtilsError;
}

uint64_t sub_1DC93433C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB93360)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1DC9343C4()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC9343E0(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA09D0);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC935388();
  sub_1DCB892B8();
  sub_1DCB88F08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_1DC9344E4(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA09C0);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)sub_1DC881A8C(a1, a1[3]);
  sub_1DC935388();
  sub_1DCB89298();
  if (!v1)
  {
    uint64_t v9 = sub_1DCB88DE8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  sub_1DC8818D0((uint64_t)a1);
  return v9;
}

uint64_t sub_1DC934610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC93433C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC93463C(uint64_t a1)
{
  unint64_t v2 = sub_1DC935388();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC934678(uint64_t a1)
{
  unint64_t v2 = sub_1DC935388();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9346B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9344E4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9346E0(void *a1)
{
  return sub_1DC9343E0(a1);
}

uint64_t sub_1DC934720()
{
  return *(void *)(v0 + OBJC_IVAR___SNExceptionRequest_impl);
}

uint64_t sub_1DC934758(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNExceptionRequest_impl) = result;
  return result;
}

uint64_t sub_1DC934768()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNExceptionRequest_impl);
  type metadata accessor for SNExceptionDetector();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = v1;
  return result;
}

id sub_1DC9347B4(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR___SNExceptionRequest_impl] = a1;
  v5.uint64_t receiver = v1;
  v5.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1DC93482C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR___SNExceptionRequest_impl] = 0;
  v3.uint64_t receiver = v0;
  v3.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id SNExceptionRequest.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNExceptionRequest_impl);
  objc_super v5 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v5[OBJC_IVAR___SNExceptionRequest_impl] = v4;
  v7.uint64_t receiver = v5;
  v7.Class super_class = ObjectType;
  id result = objc_msgSendSuper2(&v7, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNExceptionRequest.hash.getter()
{
  return sub_1DCB891F8();
}

BOOL SNExceptionRequest.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v10);
  if (!v11) {
    return 0;
  }
  sub_1DC87E9CC(&v10, v9);
  sub_1DC87E9DC((uint64_t)v9, (uint64_t)v8);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNExceptionRequest_impl);
    uint64_t v4 = *(void *)&v7[OBJC_IVAR___SNExceptionRequest_impl];

    BOOL v5 = v3 == v4;
  }
  else
  {
    BOOL v5 = 0;
  }
  sub_1DC8818D0((uint64_t)v9);
  return v5;
}

id SNExceptionRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNExceptionRequest.init(coder:)(a1);
}

id SNExceptionRequest.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  id v6 = sub_1DC87D628();

  objc_super v7 = (char *)objc_allocWithZone(ObjectType);
  *(void *)&v7[OBJC_IVAR___SNExceptionRequest_impl] = v6;
  v10.uint64_t receiver = v7;
  v10.Class super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, sel_init);

  swift_getObjectType();
  sub_1DC9355FC();
  return v8;
}

Swift::Void __swiftcall SNExceptionRequest.encode(with:)(NSCoder with)
{
  sub_1DC87B424(*(void *)(v1 + OBJC_IVAR___SNExceptionRequest_impl), 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNExceptionRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNExceptionRequest.__deallocating_deinit()
{
  v2.uint64_t receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1DC934DA0()
{
  id result = (_UNKNOWN **)sub_1DC934768();
  if (v0) {
    return &off_1F37EA7A0;
  }
  return result;
}

id sub_1DC934DCC(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = self;
  *(void *)&long long v18 = 0;
  id v3 = sub_1DCB6B73C(v2, (uint64_t)&v18);
  if (!v3)
  {
    id v12 = (id)v18;
    sub_1DCB86898();

    swift_willThrow();
    return v3;
  }
  id v4 = (id)v18;
  id v5 = (void *)sub_1DCB87908();
  *(void *)&long long v18 = 0;
  id v6 = sub_1DCB68494(v2, v3, v5, (uint64_t)&v18);

  if (!v6)
  {
    id v13 = (id)v18;
    sub_1DCB86898();

    swift_willThrow();
LABEL_10:

    return v3;
  }
  id v7 = (id)v18;
  id v8 = (void *)sub_1DCB87908();
  *(void *)&long long v18 = 0;
  id v9 = sub_1DCB68C3C(v2, v3, v8, a1, (uint64_t)&v18);

  if (!v9)
  {
    id v14 = (id)v18;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_10;
  }
  id v10 = (id)v18;
  sub_1DCB6BA88(0x3E80u, 512, 1, (uint64_t)&v18);
  id v17 = 0;
  if ((sub_1DCB6B83C(v2, v3, v6, v9, 0, 0, &v18, (uint64_t)&v17) & 1) == 0)
  {
    id v15 = v17;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_10;
  }
  id v11 = v17;
  sub_1DCB5EC24((uint64_t)v3);
  sub_1DCB5F1F8((uint64_t)v3);

  return v3;
}

id sub_1DC935034()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DC9352E8();
  swift_allocError();
  return (id)swift_willThrow();
}

void sub_1DC935090()
{
  uint64_t v2 = *v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  *(void *)(v3 + 24) = v2;
  swift_retain();
  uint64_t v4 = sub_1DC8A12D0();
  swift_release();
  if (!v1)
  {
    id v5 = (void *)v0[2];
    v0[2] = v4;
  }
}

id sub_1DC935148@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1DC934DCC(*(void *)(a1 + 24));
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1DC935178()
{
  uint64_t v1 = sub_1DC935034();
  if (!v0)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1DCB61370(v1);

    if (!v3) {
      __break(1u);
    }
  }
}

uint64_t sub_1DC9351D4()
{
  return MEMORY[0x1E4FBC860];
}

void sub_1DC9351E0()
{
}

void sub_1DC9351F8()
{
}

id sub_1DC935210()
{
  return sub_1DC935034();
}

uint64_t type metadata accessor for SNExceptionRequest()
{
  return self;
}

uint64_t method lookup function for SNExceptionRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNExceptionRequest);
}

uint64_t type metadata accessor for SNExceptionDetector()
{
  return self;
}

ValueMetadata *type metadata accessor for ExceptionRequest()
{
  return &type metadata for ExceptionRequest;
}

unint64_t sub_1DC93529C()
{
  unint64_t result = qword_1EAAA09B0;
  if (!qword_1EAAA09B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA09B0);
  }
  return result;
}

unint64_t sub_1DC9352E8()
{
  unint64_t result = qword_1EAAA09B8;
  if (!qword_1EAAA09B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA09B8);
  }
  return result;
}

uint64_t sub_1DC935334()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1DC93536C@<X0>(void *a1@<X8>)
{
  return sub_1DC935148(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DC935388()
{
  unint64_t result = qword_1EAAA09C8;
  if (!qword_1EAAA09C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA09C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExceptionRequest.CodingKeys()
{
  return &type metadata for ExceptionRequest.CodingKeys;
}

unsigned char *_s13SoundAnalysis16ExceptionRequestV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC935484);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNExceptionDetector.DomainError()
{
  return &type metadata for SNExceptionDetector.DomainError;
}

unint64_t sub_1DC9354C0()
{
  unint64_t result = qword_1EAAA09D8;
  if (!qword_1EAAA09D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA09D8);
  }
  return result;
}

unint64_t sub_1DC935510()
{
  unint64_t result = qword_1EAAA09E0;
  if (!qword_1EAAA09E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA09E0);
  }
  return result;
}

unint64_t sub_1DC935560()
{
  unint64_t result = qword_1EAAA09E8;
  if (!qword_1EAAA09E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA09E8);
  }
  return result;
}

unint64_t sub_1DC9355B0()
{
  unint64_t result = qword_1EAAA09F0;
  if (!qword_1EAAA09F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA09F0);
  }
  return result;
}

uint64_t sub_1DC9355FC()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1DC93561C(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    sub_1DC88CCDC();
    sub_1DC883884();
    *id v6 = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    return v1;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DCB88CC8();
  if (!v3) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t v4 = a1 & 0xC000000000000001;
  sub_1DC8A42E0(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v1 = MEMORY[0x1E01A7AE0](0, a1);
  }
  else
  {
    uint64_t v1 = *(void *)(a1 + 32);
    swift_retain();
  }
  if (v3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DC8A42E0(1, v4 == 0, a1);
    if (v4)
    {
      MEMORY[0x1E01A7AE0](1, a1);
      swift_unknownObjectRelease();
    }
    sub_1DC88CCDC();
    sub_1DC883884();
    *uint64_t v5 = 2;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v1;
}

uint64_t sub_1DC935778(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 1) {
    return *(void *)(a1 + 32);
  }
  sub_1DC937A9C();
  uint64_t v1 = sub_1DC883884();
  return sub_1DC8A22A4(v1, v2);
}

uint64_t sub_1DC9357C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  id v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = sub_1DCB86A18();
  uint64_t v12 = v11;
  if (!v10)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 1, 1, v11);
    goto LABEL_6;
  }
  uint64_t v19 = a2;
  uint64_t v20 = *(void *)(v11 - 8);
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  id v14 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v14(v9, v13, v11);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 0, 1, v12);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v9, 1, v12) == 1)
  {
LABEL_6:
    swift_bridgeObjectRetain();
    sub_1DC8A8F50((uint64_t)v9, qword_1EAA9CBC0);
    sub_1DC88CCDC();
    swift_allocError();
    *id v15 = 1;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v19, v9, v12);
  if (v10 != 1)
  {
    v14(v7, v13 + *(void *)(v20 + 72), v12);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v7, 0, 1, v12);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v7, 1, v12) == 1) {
      return sub_1DC8A8F50((uint64_t)v7, qword_1EAA9CBC0);
    }
    swift_bridgeObjectRetain();
    sub_1DC8A8F50((uint64_t)v7, qword_1EAA9CBC0);
    sub_1DC88CCDC();
    swift_allocError();
    *id v17 = 2;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v12);
    return swift_bridgeObjectRelease();
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v7, 1, 1, v12);
  return sub_1DC8A8F50((uint64_t)v7, qword_1EAA9CBC0);
}

uint64_t sub_1DC935AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16) == 1)
  {
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v6 = *(void *)(a1 + 64);
    char v8 = *(unsigned char *)(a1 + 48);
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 40);
    unsigned __int8 v11 = *(unsigned char *)(a1 + 72);
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DC937878(v7, v6, v11);
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v9;
    *(unsigned char *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v7;
    *(void *)(a2 + 32) = v6;
    *(unsigned char *)(a2 + 40) = v11;
  }
  else
  {
    sub_1DC937A9C();
    uint64_t v3 = sub_1DC883884();
    return sub_1DC8A22A4(v3, v4);
  }
  return result;
}

uint64_t sub_1DC935B48(uint64_t a1)
{
  uint64_t v1 = a1 + 56;
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  if (!v5)
  {
    unsigned int v9 = v2 & 0x3F;
    if (v9 > 6)
    {
      unint64_t v10 = *(void *)(a1 + 64);
      if (v10)
      {
        uint64_t v6 = 1;
        goto LABEL_9;
      }
      if (v9 >= 8)
      {
        unint64_t v10 = *(void *)(a1 + 72);
        if (v10)
        {
          uint64_t v6 = 2;
          goto LABEL_9;
        }
        unint64_t v10 = *(void *)(a1 + 80);
        if (v10)
        {
          uint64_t v6 = 3;
          goto LABEL_9;
        }
        if (v9 >= 9)
        {
          unint64_t v10 = *(void *)(a1 + 88);
          if (v10)
          {
            uint64_t v6 = 4;
            goto LABEL_9;
          }
          unint64_t v10 = *(void *)(a1 + 96);
          if (v10)
          {
            uint64_t v6 = 5;
LABEL_9:
            uint64_t v11 = (v10 - 1) & v10;
            unint64_t v7 = __clz(__rbit64(v10)) + (v6 << 6);
            if (v11) {
              goto LABEL_5;
            }
            goto LABEL_10;
          }
          uint64_t v16 = 13;
          while (v16 - 7 < (unint64_t)(v3 + 63) >> 6)
          {
            unint64_t v10 = *(void *)(a1 + 8 * v16++);
            if (v10)
            {
              uint64_t v6 = v16 - 8;
              goto LABEL_9;
            }
          }
        }
      }
    }
    char v8 = 1;
    goto LABEL_40;
  }
  uint64_t v6 = 0;
  unint64_t v7 = __clz(__rbit64(v5));
  if (((v5 - 1) & v5) != 0)
  {
LABEL_5:
    char v8 = 2;
LABEL_40:
    sub_1DC88CCDC();
    uint64_t v17 = sub_1DC883884();
    *uint64_t v18 = v8;
    uint64_t v12 = v17;
    swift_willThrow();
    return v12;
  }
LABEL_10:
  uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 16 * v7);
  unint64_t v13 = v3 + 63;
  if (v6 + 1 < (uint64_t)(v13 >> 6))
  {
    if (*(void *)(v1 + 8 * (v6 + 1))) {
      goto LABEL_5;
    }
    int64_t v14 = v13 >> 6;
    if (v6 + 2 < v14)
    {
      if (*(void *)(v1 + 8 * (v6 + 2))) {
        goto LABEL_5;
      }
      if (v6 + 3 < v14)
      {
        if (*(void *)(v1 + 8 * (v6 + 3))) {
          goto LABEL_5;
        }
        if (v6 + 4 < v14)
        {
          if (*(void *)(v1 + 8 * (v6 + 4))) {
            goto LABEL_5;
          }
          if (v6 + 5 < v14)
          {
            if (*(void *)(v1 + 8 * (v6 + 5))) {
              goto LABEL_5;
            }
            char v8 = 2;
            while (v6 + 6 < (unint64_t)v14)
            {
              if (*(void *)(a1 + 104 + 8 * v6++)) {
                goto LABEL_40;
              }
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRetain();
  return v12;
}

uint64_t sub_1DC935D44(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 1)
  {
    uint64_t v1 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1DC937A9C();
    uint64_t v2 = sub_1DC883884();
    sub_1DC8A22A4(v2, v3);
  }
  return v1;
}

uint64_t sub_1DC935DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_1DCB88A38();
  sub_1DC9614B8(a3, &v8);
  sub_1DC8A8EA0((uint64_t)v7);
  if (v9)
  {
    sub_1DC87E988(&qword_1EAA9E7F8);
    if (swift_dynamicCast()) {
      return a1;
    }
  }
  else
  {
    sub_1DC8A8F50((uint64_t)&v8, &qword_1EAA9CAB0);
  }
  sub_1DC9378D8();
  sub_1DC883884();
  *unint64_t v5 = 0;
  return swift_willThrow();
}

uint64_t sub_1DC935E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1DC935DA4(a1, a2, a5);
  if (!v5)
  {
    uint64_t v9 = result;
    *(void *)&long long v12 = a3;
    *((void *)&v12 + 1) = a4;
    swift_bridgeObjectRetain();
    sub_1DCB88A38();
    sub_1DC9614B8(v9, &v12);
    swift_bridgeObjectRelease();
    sub_1DC8A8EA0((uint64_t)v13);
    sub_1DC87E988(&qword_1EAA9CAB0);
    if (swift_dynamicCast())
    {
      return v11;
    }
    else
    {
      sub_1DC9378D8();
      swift_allocError();
      *unint64_t v10 = 1;
      return swift_willThrow();
    }
  }
  return result;
}

void sub_1DC935F80()
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (sub_1DCB868B8())
  {
    char v12 = 0;
    uint64_t v0 = self;
    id v1 = objc_msgSend(v0, sel_defaultManager);
    sub_1DCB869C8();
    uint64_t v2 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    unsigned int v3 = objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v12);

    if (!v3)
    {
      id v6 = objc_msgSend(v0, sel_defaultManager);
      unint64_t v7 = (void *)sub_1DCB86948();
      id v11 = 0;
      unsigned int v8 = objc_msgSend(v6, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, 1, 0, &v11);

      if (v8)
      {
        id v9 = v11;
        return;
      }
      id v10 = v11;
      sub_1DCB86898();

      goto LABEL_7;
    }
    if (v12) {
      return;
    }
    sub_1DC9378D8();
    sub_1DC883884();
    char v5 = 3;
  }
  else
  {
    sub_1DC9378D8();
    sub_1DC883884();
    char v5 = 2;
  }
  char *v4 = v5;
LABEL_7:
  swift_willThrow();
}

uint64_t sub_1DC93613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1DC937A88();
  uint64_t result = sub_1DC935E88(v17, v18, v19, v20, v21);
  if (!v11)
  {
    uint64_t v26 = result;
    uint64_t v27 = v23;
    swift_bridgeObjectRetain();
    sub_1DCB87A18();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
    *(void *)(inited + 32) = v26;
    *(void *)(inited + 40) = v27;
    sub_1DCA6CC8C(a1, a2, a3, inited, a11, a10, a4, a5, a6, a7);
    swift_setDeallocating();
    return sub_1DC937770();
  }
  return result;
}

uint64_t sub_1DC936270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  sub_1DCB86B18();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v14);
  sub_1DC8A22D0();
  uint64_t v15 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  sub_1DC8A22D0();
  uint64_t v21 = v20 - v19;
  sub_1DC937A88();
  uint64_t result = sub_1DC935E88(v22, v23, v24, v25, a12);
  if (!v12)
  {
    uint64_t v57 = result;
    uint64_t v59 = v17;
    uint64_t v60 = v27;
    uint64_t v58 = v15;
    type metadata accessor for SNFileUtils();
    sub_1DCB3B5DC(a10, 0x6966697265766E75, 0xEB000000002D6465);
    sub_1DCA92B94();
    uint64_t v28 = sub_1DC93613C(a1, a2, a3, a4, a5, a6, a7, a8, a9, v21, a11);
    int32_t v29 = (void *)MEMORY[0x1E01A8D20](v28);
    uint64_t v30 = sub_1DCB86A58();
    unint64_t v32 = v31;
    uint64_t v65 = v21;
    uint64_t v33 = sub_1DCA6F970();
    unint64_t v35 = v34;
    sub_1DC881920(v30, v32);
    uint64_t v36 = sub_1DC937AF4();
    sub_1DC8AF450(v36, v37);
    sub_1DC937AF4();
    sub_1DCB86A78();
    uint64_t v38 = sub_1DC937AF4();
    sub_1DC881920(v38, v39);
    sub_1DC937890((unint64_t *)&qword_1EAAA0A00, MEMORY[0x1E4F27788]);
    sub_1DCB88758();
    if ((v71 & 1) == 0)
    {
      uint64_t v40 = MEMORY[0x1E4FBC358];
      uint64_t v41 = MEMORY[0x1E4FBC3B0];
      do
      {
        sub_1DC87E988((uint64_t *)&unk_1EAA9CBB0);
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1DCBB93B0;
        *(void *)(v42 + 56) = v40;
        *(void *)(v42 + 64) = v41;
        sub_1DC937B00(v42);
        id v69 = 0;
        unint64_t v70 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1DCB87A18();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCB88758();
      }
      while (v71 != 1);
    }
    sub_1DC937AF4();
    sub_1DC88D5C8();
    v43();
    sub_1DC881920(v33, v35);
    if (v57) {
      BOOL v44 = 0;
    }
    else {
      BOOL v44 = v60 == 0xE000000000000000;
    }
    if (v44 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v45 = objc_msgSend(self, sel_defaultManager);
      id v46 = (void *)sub_1DCB86948();
      uint64_t v47 = (void *)sub_1DCB86948();
      id v69 = 0;
      unsigned __int8 v48 = objc_msgSend(v45, sel_moveItemAtURL_toURL_error_, v46, v47, &v69);

      if (v48)
      {
        id v49 = v69;
        sub_1DC936840();
        sub_1DC88D5C8();
        return v50();
      }
      id v51 = v69;
      sub_1DCB86898();
    }
    else
    {
      type metadata accessor for SNError();
      id v69 = 0;
      unint64_t v70 = 0xE000000000000000;
      sub_1DCB88A98();
      sub_1DCB87A18();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      unint64_t v52 = sub_1DC931CFC();
      sub_1DCA14B2C(v52, v53, v54, v55, v56, 0xE000000000000000);
      swift_bridgeObjectRelease();
    }
    swift_willThrow();
    sub_1DC936840();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8))(v65, v58);
  }
  return result;
}

void sub_1DC936840()
{
}

void static SNACITestAssets.uploadTestAsset(s3Endpoint:bucket:aciID:aciSecretKey:testAsset:url:timeoutTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1DCB86B18();
  sub_1DC89D4E0();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1DC8C1FC4();
  uint64_t v16 = (void *)MEMORY[0x1E01A8D20]();
  uint64_t v17 = sub_1DCB86A58();
  if (v11)
  {
  }
  else
  {
    uint64_t v19 = v17;
    unint64_t v20 = v18;
    uint64_t v29 = v14;
    uint64_t v21 = sub_1DCA6F970();
    unint64_t v23 = v22;
    sub_1DC881920(v19, v20);
    sub_1DC8AF450(v21, v23);
    sub_1DCB86A78();
    sub_1DC881920(v21, v23);
    sub_1DC937890((unint64_t *)&qword_1EAAA0A00, MEMORY[0x1E4F27788]);
    sub_1DC937AD4();
    if ((v37 & 1) == 0)
    {
      uint64_t v24 = MEMORY[0x1E4FBC3B0];
      do
      {
        sub_1DC87E988((uint64_t *)&unk_1EAA9CBB0);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1DCBB93B0;
        *(void *)(v25 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v25 + 64) = v24;
        sub_1DC937B00(v25);
        swift_bridgeObjectRetain();
        sub_1DCB87A18();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DC937AD4();
      }
      while (v37 != 1);
    }
    sub_1DC88D5C8();
    v26();
    sub_1DC881920(v21, v23);
    swift_bridgeObjectRetain();
    sub_1DCB87A18();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0xE000000000000000;
    sub_1DCA6CE60(a10, a1, a2, a3, inited, a11, a4, a5, a6, a7, v28, v23, v21, a9, v29, a11, a10, a1, 0, a8, a2, a7);
    swift_setDeallocating();
    sub_1DC937770();
  }
}

void sub_1DC936C18(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v17 = sub_1DCB868D8();
  sub_1DC89D4E0();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  sub_1DC8C1FC4();
  sub_1DC937A88();
  sub_1DC935E88(v21, v22, v23, v24, a13);
  if (!v14)
  {
    swift_bridgeObjectRetain();
    sub_1DCB87A18();
    uint64_t v36 = a8;
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v15, *MEMORY[0x1E4F276C0], v17);
    sub_1DC91ACCC();
    uint64_t v25 = a9;
    sub_1DCB86A08();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v15, v17);
    swift_bridgeObjectRelease();
    if (sub_1DCB868B8())
    {
      id v26 = objc_msgSend(self, sel_defaultManager);
      sub_1DCB869C8();
      uint64_t v27 = (void *)sub_1DCB87908();
      swift_bridgeObjectRelease();
      unsigned __int8 v28 = objc_msgSend(v26, sel_fileExistsAtPath_, v27);

      if (v28) {
        return;
      }
      sub_1DC935F80();
      if (__OFADD__(a14, 1))
      {
        __break(1u);
      }
      else if (((a14 + 1) & 0x8000000000000000) == 0)
      {
        if (a14 != -1)
        {
          sub_1DC936270(a1, a2, a3, a4, a5, a6, a7, v36, a10, a9, a12, a13);
          return;
        }
        sub_1DC9378D8();
        sub_1DC883884();
        *unint64_t v35 = 4;
        swift_willThrow();
        uint64_t v29 = sub_1DCB86A18();
        uint64_t v25 = a9;
        goto LABEL_6;
      }
      __break(1u);
      return;
    }
    type metadata accessor for SNError();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1DCB86A18();
    sub_1DC937890((unint64_t *)&qword_1EAAA0A28, MEMORY[0x1E4F276F0]);
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v30 = sub_1DC931CFC();
    sub_1DCA14B2C(v30, v31, v32, v33, v34, 0x80000001DCB933B0);
    swift_bridgeObjectRelease();
    swift_willThrow();
LABEL_6:
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v25, v29);
  }
}

void static SNACITestAssets.url(s3Endpoint:bucket:aciID:aciSecretKey:timeoutSeconds:testAsset:testAssetsDatabase:assetDirectoryURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  sub_1DC8E79D0();
  uint64_t v47 = v23;
  uint64_t v45 = v24;
  uint64_t v46 = v25;
  uint64_t v43 = v26;
  uint64_t v44 = v27;
  uint64_t v42 = v28;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v35 = sub_1DCB86B98();
  sub_1DC89D4E0();
  uint64_t v37 = v36;
  MEMORY[0x1F4188790](v38);
  sub_1DC8A22D0();
  uint64_t v41 = v40 - v39;
  sub_1DCB86B38();
  sub_1DC936C18(v32, v30, v42, v43, v44, v45, v46, v47, v34, a21, a23, v41, a22, 3);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v35);
  sub_1DC8E7A74();
}

void sub_1DC937128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  sub_1DC8E79D0();
  uint64_t v78 = v24;
  uint64_t v79 = v23;
  uint64_t v76 = v25;
  uint64_t v77 = v26;
  uint64_t v74 = v27;
  uint64_t v75 = v28;
  uint64_t v72 = v29;
  uint64_t v73 = v30;
  uint64_t v32 = v31;
  uint64_t v71 = v33;
  v80[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1DCB86B98();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v34);
  sub_1DC8A22D0();
  uint64_t v37 = v36 - v35;
  sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v69 = v39;
  uint64_t v70 = v38;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v42 = (char *)&v68 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v44 = (char *)&v68 - v43;
  sub_1DCB86B38();
  uint64_t v45 = v79;
  sub_1DC936C18(v32, v72, v73, v74, v75, v76, v77, v78, (uint64_t)v42, a21, a23, v37, a22, 3);
  if (v45)
  {
    uint64_t v46 = sub_1DC937ABC();
    v47(v46);
  }
  else
  {
    uint64_t v48 = sub_1DC937ABC();
    v49(v48);
    uint64_t v50 = v69;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v44, v42, v70);
    sub_1DCB86978();
    id v51 = self;
    id v52 = objc_msgSend(v51, sel_defaultManager);
    sub_1DCB869D8();
    uint64_t v53 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    unsigned __int8 v54 = objc_msgSend(v52, sel_fileExistsAtPath_, v53);

    if (v54)
    {
      sub_1DC937A78();
      v55();
    }
    else
    {
      id v56 = objc_msgSend(v51, sel_defaultManager);
      uint64_t v57 = (void *)sub_1DCB86948();
      v80[0] = 0;
      unsigned int v58 = objc_msgSend(v56, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v57, 0, 0, v80);

      if (v58)
      {
        id v59 = v80[0];
        uint64_t v60 = sub_1DCB869C8();
        uint64_t v62 = v61;
        uint64_t v63 = sub_1DCB869D8();
        sub_1DCA15668(v60, v62, v63, v64);
        sub_1DC937A78();
        v67();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v65 = v80[0];
        sub_1DCB86898();

        swift_willThrow();
        sub_1DCA92B94();
        swift_willThrow();
        uint64_t v66 = *(void (**)(void))(v50 + 8);
        sub_1DC937A78();
        v66();
        sub_1DC937A78();
        v66();
      }
    }
  }
  sub_1DC8E7A74();
}

#error "1DC9375C4: call analysis failed (funcsize=133)"

uint64_t sub_1DC937700()
{
  return sub_1DC9377D8((uint64_t *)&unk_1EAAA0A10);
}

uint64_t sub_1DC93770C()
{
  return sub_1DC9377D8((uint64_t *)&unk_1EAA9C6E0);
}

uint64_t sub_1DC937718()
{
  return sub_1DC9377D8((uint64_t *)&unk_1EAA9CB70);
}

uint64_t sub_1DC937724()
{
  return sub_1DC9377D8(&qword_1EAAA6A20);
}

uint64_t sub_1DC937730()
{
  swift_arrayDestroy();
  sub_1DC8BADE0();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC937770()
{
  swift_arrayDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC9377B4()
{
  return sub_1DC9377D8(&qword_1EAAA41B0);
}

uint64_t sub_1DC9377C0()
{
  return sub_1DC9377D8((uint64_t *)&unk_1EAAAA7E0);
}

uint64_t sub_1DC9377CC()
{
  return sub_1DC9377D8(&qword_1EAAA0A20);
}

uint64_t sub_1DC9377D8(uint64_t *a1)
{
  sub_1DC87E988(a1);
  swift_arrayDestroy();
  sub_1DC8BADE0();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC93782C()
{
  swift_arrayDestroy();
  sub_1DC8BADE0();

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for SNACITestAssets()
{
  return &type metadata for SNACITestAssets;
}

uint64_t sub_1DC937878(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DC937890(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC9378D8()
{
  unint64_t result = qword_1EAAA0A30;
  if (!qword_1EAAA0A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0A30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNACITestAssets.Err(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9379F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNACITestAssets.Err()
{
  return &type metadata for SNACITestAssets.Err;
}

unint64_t sub_1DC937A2C()
{
  unint64_t result = qword_1EAAA0A40[0];
  if (!qword_1EAAA0A40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA0A40);
  }
  return result;
}

unint64_t sub_1DC937A9C()
{
  return sub_1DC88CCDC();
}

uint64_t sub_1DC937ABC()
{
  return v0;
}

uint64_t sub_1DC937AD4()
{
  return sub_1DCB88758();
}

uint64_t sub_1DC937AF4()
{
  return v0;
}

uint64_t sub_1DC937B00(uint64_t a1)
{
  *(unsigned char *)(a1 + 32) = v1;
  return sub_1DCB87958();
}

uint64_t sub_1DC937B20(void (*a1)(uint64_t), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  if (a1) {
    a1(a7);
  }
  uint64_t result = a5(a7);
  if (a3) {
    return a3(a7);
  }
  return result;
}

ValueMetadata *type metadata accessor for HookUtils()
{
  return &type metadata for HookUtils;
}

uint64_t sub_1DC937BBC()
{
  uint64_t result = sub_1DCB88718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC937C4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = ~(unint64_t)v8;
  size_t v11 = v7 + v8;
  int v12 = v8 & 0x100000;
  if (v9 > 7 || v12 != 0 || (v11 & ~v9) + v7 > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
    }
    uint64_t v17 = (const void *)(((unint64_t)a2 + v11) & v10);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v17, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v10), v17, v7);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v6 + 16))(((unint64_t)a1 + v11) & v10, v17, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(((unint64_t)a1 + v11) & v10, 0, 1, v5);
    }
  }
  return a1;
}

uint64_t sub_1DC937DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  int v4 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v3);
  uint64_t v5 = *(void *)(v3 - 8);
  if (!v4) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  }
  uint64_t v6 = *(void *)(v5 + 64) + a1;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v6;
  }
  unint64_t v7 = (v6 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v7, 1, v3);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(unint64_t, uint64_t))(v5 + 8);
    return v9(v7, v3);
  }
  return result;
}

void *sub_1DC937F10(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = v7;
  if (v6)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v9 = *(void *)(v7 + 64);
    }
    else {
      size_t v9 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  if (*(_DWORD *)(v8 + 84)) {
    size_t v10 = *(void *)(v8 + 64);
  }
  else {
    size_t v10 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  int v12 = (void *)(((unint64_t)a1 + v10 + v11) & ~v11);
  uint64_t v13 = (const void *)(((unint64_t)a2 + v10 + v11) & ~v11);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v5))
  {
    memcpy(v12, v13, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v12, v13, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v5);
  }
  return a1;
}

void *sub_1DC938060(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v5);
  int v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8;
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v8 + 84);
    size_t v11 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v9 + 84);
    size_t v11 = *(void *)(v9 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    size_t v13 = *(void *)(v9 + 64);
  }
  else {
    size_t v13 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = (void *)(((unint64_t)a1 + v13 + v14) & ~v14);
  uint64_t v16 = (const void *)(((unint64_t)a2 + v13 + v14) & ~v14);
  int v17 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v15, 1, v5);
  int v18 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v16, 1, v5);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(v15, v16, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v15, v5);
    goto LABEL_20;
  }
  if (v18)
  {
LABEL_20:
    memcpy(v15, v16, v13);
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v15, v16, v5);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v15, 0, 1, v5);
  return a1;
}

void *sub_1DC938270(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = v7;
  if (v6)
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v9 = *(void *)(v7 + 64);
    }
    else {
      size_t v9 = *(void *)(v7 + 64) + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  if (*(_DWORD *)(v8 + 84)) {
    size_t v10 = *(void *)(v8 + 64);
  }
  else {
    size_t v10 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  size_t v12 = (void *)(((unint64_t)a1 + v10 + v11) & ~v11);
  size_t v13 = (const void *)(((unint64_t)a2 + v10 + v11) & ~v11);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v5))
  {
    memcpy(v12, v13, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v12, v13, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v5);
  }
  return a1;
}

void *sub_1DC9383C0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v5);
  int v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = v8;
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v8 + 84);
    size_t v11 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v9 + 84);
    size_t v11 = *(void *)(v9 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    size_t v13 = *(void *)(v9 + 64);
  }
  else {
    size_t v13 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = (void *)(((unint64_t)a1 + v13 + v14) & ~v14);
  uint64_t v16 = (const void *)(((unint64_t)a2 + v13 + v14) & ~v14);
  int v17 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v15, 1, v5);
  int v18 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v16, 1, v5);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v15, v16, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v15, v5);
    goto LABEL_20;
  }
  if (v18)
  {
LABEL_20:
    memcpy(v15, v16, v13);
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v15, v16, v5);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v15, 0, 1, v5);
  return a1;
}

uint64_t sub_1DC9385D0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (v6)
  {
    uint64_t v8 = *(void *)(v5 + 64);
  }
  else
  {
    unsigned int v7 = 0;
    uint64_t v8 = *(void *)(v5 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v9 = a2 - v7;
  if (a2 > v7)
  {
    unint64_t v10 = ((v8 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v8;
    char v11 = 8 * v10;
    if (v10 > 3) {
      goto LABEL_7;
    }
    unsigned int v13 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (v12) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v13 <= 0xFF)
      {
        if (v13 < 2) {
          goto LABEL_22;
        }
LABEL_7:
        int v12 = *((unsigned __int8 *)a1 + v10);
        if (!*((unsigned char *)a1 + v10)) {
          goto LABEL_22;
        }
LABEL_14:
        int v14 = (v12 - 1) << v11;
        if (v10 > 3) {
          int v14 = 0;
        }
        if (v10)
        {
          if (v10 > 3) {
            LODWORD(v10) = 4;
          }
          switch((int)v10)
          {
            case 2:
              LODWORD(v10) = *a1;
              break;
            case 3:
              LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v10) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v10) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v7 + (v10 | v14) + 1;
      }
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_14;
      }
    }
  }
LABEL_22:
  if (v6 < 2) {
    return 0;
  }
  unsigned int v16 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v6, v4);
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1DC938764(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  uint64_t v11 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v11;
  }
  size_t v12 = ((v11 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v11;
  char v13 = 8 * v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 != 0 && v14)
  {
    if (v12 <= 3)
    {
      unsigned int v16 = ((v15 + ~(-1 << v13)) >> v13) + 1;
      if (HIWORD(v16))
      {
        int v6 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v16 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v12 < 4)
    {
      int v18 = (v17 >> v13) + 1;
      if (v12)
      {
        int v19 = v17 & ~(-1 << v13);
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v12] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v18;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v12] = v18;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1DC938994);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 >= 2)
        {
          uint64_t v20 = a2 + 1;
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, v20, v9, v7);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for HookUtils.PrePostHook()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC9389D4()
{
  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeSamplerNode()
{
  return self;
}

uint64_t sub_1DC938A54(id a1, char a2)
{
  if (!a2) {
    return a1 & 1;
  }
  if (a2 != 1) {
    return 128;
  }
  id v3 = a1;
  sub_1DC87E988(&qword_1EAA9DF60);
  if (swift_dynamicCast())
  {
    sub_1DC938C60(a1, 1);
    return v5 | 0x40u;
  }
  else
  {
    sub_1DC938C60(a1, 1);
    return 64;
  }
}

uint64_t sub_1DC938AFC(unsigned __int8 a1)
{
  if (!(a1 >> 6)) {
    return a1 & 1;
  }
  if (a1 >> 6 != 1) {
    return 0;
  }
  char v1 = a1 & 0x3F;
  sub_1DC938C14();
  uint64_t result = swift_allocError();
  *id v3 = v1;
  return result;
}

uint64_t sub_1DC938B60@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DC938A54(*(id *)a1, *(unsigned char *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1DC938B94@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DC938AFC(*v1);
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

unint64_t sub_1DC938BC8()
{
  unint64_t result = qword_1EAAA0AD0;
  if (!qword_1EAAA0AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0AD0);
  }
  return result;
}

unint64_t sub_1DC938C14()
{
  unint64_t result = qword_1EAAA0AD8;
  if (!qword_1EAAA0AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0AD8);
  }
  return result;
}

void sub_1DC938C60(id a1, char a2)
{
  if (a2 == 1) {
}
  }

uint64_t sub_1DC938C74()
{
  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeSoundPrintNode()
{
  return self;
}

char *sub_1DC938CF4(char *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void *)a2;
        uint64_t v8 = *(void *)(a2 + 8);
        char v9 = *(unsigned char *)(a2 + 16);
        sub_1DC88244C(*(void *)a2, v8, v9);
        *(void *)a1 = v7;
        *((void *)a1 + 1) = v8;
        a1[16] = v9;
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        uint64_t v10 = *(void *)(a2 + 48);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = v10;
        uint64_t v11 = *(void *)(a2 + 56);
        uint64_t v12 = *(void *)(a2 + 64);
        uint64_t v13 = *(void *)(a2 + 72);
        uint64_t v14 = *(void *)(a2 + 80);
        uint64_t v15 = *(void *)(a2 + 88);
        uint64_t v16 = *(void *)(a2 + 96);
        char v17 = *(unsigned char *)(a2 + 104);
        sub_1DC88245C(v11, v12, v13, v14, v15, v16, v17);
        *((void *)a1 + 7) = v11;
        *((void *)a1 + 8) = v12;
        *((void *)a1 + 9) = v13;
        *((void *)a1 + 10) = v14;
        *((void *)a1 + 11) = v15;
        *((void *)a1 + 12) = v16;
        a1[104] = v17;
        uint64_t v18 = *(void *)(a2 + 120);
        *((void *)a1 + 14) = *(void *)(a2 + 112);
        *((void *)a1 + 15) = v18;
        uint64_t v19 = *(void *)(a2 + 136);
        *((void *)a1 + 16) = *(void *)(a2 + 128);
        *((void *)a1 + 17) = v19;
        uint64_t v20 = *(void *)(a2 + 152);
        *((void *)a1 + 18) = *(void *)(a2 + 144);
        *((void *)a1 + 19) = v20;
        *((void *)a1 + 20) = *(void *)(a2 + 160);
        *((_DWORD *)a1 + 42) = *(_DWORD *)(a2 + 168);
        *((_WORD *)a1 + 86) = *(_WORD *)(a2 + 172);
        *((void *)a1 + 22) = *(void *)(a2 + 176);
        a1[184] = *(unsigned char *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v22 = *(void *)(a2 + 24);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = v22;
        uint64_t v23 = *(void *)(a2 + 40);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = v23;
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((_DWORD *)a1 + 14) = *(_DWORD *)(a2 + 56);
        *((_WORD *)a1 + 30) = *(_WORD *)(a2 + 60);
        uint64_t v24 = *(void *)(a2 + 64);
        a1[72] = *(unsigned char *)(a2 + 72);
        *((void *)a1 + 8) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 2u:
      case 3u:
        uint64_t v25 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v25;
        uint64_t v26 = *(void *)(a2 + 24);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = v26;
        uint64_t v27 = *(void *)(a2 + 40);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = v27;
        *((_DWORD *)a1 + 12) = *(_DWORD *)(a2 + 48);
        *((_WORD *)a1 + 26) = *(_WORD *)(a2 + 52);
        uint64_t v28 = *(void *)(a2 + 56);
        a1[64] = *(unsigned char *)(a2 + 64);
        *((void *)a1 + 7) = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 4u:
        long long v29 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v29;
        *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
        uint64_t v30 = *(void *)(a2 + 56);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = v30;
        uint64_t v31 = *(void *)(a2 + 72);
        *((void *)a1 + 8) = *(void *)(a2 + 64);
        *((void *)a1 + 9) = v31;
        uint64_t v32 = *(void *)(a2 + 88);
        *((void *)a1 + 10) = *(void *)(a2 + 80);
        *((void *)a1 + 11) = v32;
        *((void *)a1 + 12) = *(void *)(a2 + 96);
        *((_DWORD *)a1 + 26) = *(_DWORD *)(a2 + 104);
        *((_WORD *)a1 + 54) = *(_WORD *)(a2 + 108);
        *((void *)a1 + 14) = *(void *)(a2 + 112);
        a1[120] = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 5u:
        uint64_t v33 = *(void *)a2;
        uint64_t v34 = *(void *)(a2 + 8);
        char v35 = *(unsigned char *)(a2 + 16);
        sub_1DC882C30(*(void *)a2, v34, v35);
        *(void *)a1 = v33;
        *((void *)a1 + 1) = v34;
        a1[16] = v35;
        uint64_t v36 = *(void *)(a2 + 32);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = v36;
        a1[40] = *(unsigned char *)(a2 + 40);
        uint64_t v37 = *(void *)(a2 + 56);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = v37;
        uint64_t v38 = *(void *)(a2 + 72);
        *((void *)a1 + 8) = *(void *)(a2 + 64);
        *((void *)a1 + 9) = v38;
        uint64_t v39 = *(void *)(a2 + 88);
        *((void *)a1 + 10) = *(void *)(a2 + 80);
        *((void *)a1 + 11) = v39;
        *((_DWORD *)a1 + 24) = *(_DWORD *)(a2 + 96);
        *((_WORD *)a1 + 50) = *(_WORD *)(a2 + 100);
        *((void *)a1 + 13) = *(void *)(a2 + 104);
        a1[112] = *(unsigned char *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 6u:
        uint64_t v40 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v40;
        uint64_t v41 = *(void *)(a2 + 24);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = v41;
        uint64_t v42 = *(void *)(a2 + 40);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = v42;
        uint64_t v43 = *(void *)(a2 + 56);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = v43;
        *((_DWORD *)a1 + 16) = *(_DWORD *)(a2 + 64);
        a1[68] = *(unsigned char *)(a2 + 68);
        a1[69] = *(unsigned char *)(a2 + 69);
        *((void *)a1 + 9) = *(void *)(a2 + 72);
        a1[80] = *(unsigned char *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 7u:
        uint64_t v56 = *(void *)(a2 + 64);
        uint64_t v57 = *(void *)(a2 + 72);
        uint64_t v58 = *(void *)(a2 + 80);
        uint64_t v59 = *(void *)(a2 + 88);
        uint64_t v60 = *(void *)(a2 + 96);
        uint64_t v61 = *(void *)(a2 + 104);
        uint64_t v62 = *(void *)(a2 + 112);
        uint64_t v63 = *(void *)(a2 + 120);
        uint64_t v64 = *(void *)(a2 + 128);
        uint64_t v65 = *(void *)(a2 + 136);
        uint64_t v66 = *(void *)(a2 + 144);
        uint64_t v67 = *(void *)(a2 + 152);
        uint64_t v68 = *(void *)(a2 + 160);
        uint64_t v69 = *(void *)(a2 + 168);
        uint64_t v70 = *(void *)(a2 + 176);
        uint64_t v71 = *(void *)(a2 + 184);
        uint64_t v72 = *(void *)(a2 + 192);
        uint64_t v73 = *(void *)(a2 + 200);
        char v74 = *(unsigned char *)(a2 + 208);
        uint64_t v44 = *(void *)a2;
        uint64_t v45 = *(void *)(a2 + 8);
        uint64_t v46 = *(void *)(a2 + 16);
        uint64_t v47 = *(void *)(a2 + 24);
        uint64_t v48 = *(void *)(a2 + 32);
        uint64_t v49 = *(void *)(a2 + 40);
        uint64_t v50 = *(void *)(a2 + 48);
        uint64_t v51 = *(void *)(a2 + 56);
        sub_1DC9393A4(v44, v45, v46, v47, v48, v49, v50, v51, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
          v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74);
        *(void *)a1 = v44;
        *((void *)a1 + 1) = v45;
        *((void *)a1 + 2) = v46;
        *((void *)a1 + 3) = v47;
        *((void *)a1 + 4) = v48;
        *((void *)a1 + 5) = v49;
        *((void *)a1 + 6) = v50;
        *((void *)a1 + 7) = v51;
        *((void *)a1 + 8) = v56;
        *((void *)a1 + 9) = v57;
        *((void *)a1 + 10) = v58;
        *((void *)a1 + 11) = v59;
        *((void *)a1 + 12) = v60;
        *((void *)a1 + 13) = v61;
        *((void *)a1 + 14) = v62;
        *((void *)a1 + 15) = v63;
        *((void *)a1 + 16) = v64;
        *((void *)a1 + 17) = v65;
        *((void *)a1 + 18) = v66;
        *((void *)a1 + 19) = v67;
        *((void *)a1 + 20) = v68;
        *((void *)a1 + 21) = v69;
        *((void *)a1 + 22) = v70;
        *((void *)a1 + 23) = v71;
        *((void *)a1 + 24) = v72;
        *((void *)a1 + 25) = v73;
        a1[208] = v74;
        goto LABEL_16;
      case 8u:
        uint64_t v52 = sub_1DCB86A18();
        if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a2, 1, v52))
        {
          uint64_t v53 = sub_1DC87E988(qword_1EAA9CBC0);
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v52);
        }
        uint64_t v54 = type metadata accessor for AOPClassificationDemo.Request();
        a1[*(int *)(v54 + 20)] = *(unsigned char *)(a2 + *(int *)(v54 + 20));
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1DC9393A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (a27)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DC939564(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      sub_1DC8823A0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
      sub_1DC8823B0(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 1:
    case 2:
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 5:
      sub_1DC882BC4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 7:
      uint64_t result = sub_1DC939784(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
                 *(void *)(a1 + 152),
                 *(void *)(a1 + 160),
                 *(void *)(a1 + 168),
                 *(void *)(a1 + 176),
                 *(void *)(a1 + 184),
                 *(void *)(a1 + 192),
                 *(void *)(a1 + 200),
                 *(unsigned char *)(a1 + 208));
      break;
    case 8:
      uint64_t v3 = sub_1DCB86A18();
      uint64_t result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v3);
      if (!result)
      {
        char v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
        uint64_t result = v4(a1, v3);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DC939784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (a27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1DC939944(char *a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void *)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      char v8 = *(unsigned char *)(a2 + 16);
      sub_1DC88244C(*(void *)a2, v7, v8);
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v7;
      a1[16] = v8;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      uint64_t v9 = *(void *)(a2 + 48);
      *((void *)a1 + 5) = *(void *)(a2 + 40);
      *((void *)a1 + 6) = v9;
      uint64_t v10 = *(void *)(a2 + 56);
      uint64_t v11 = *(void *)(a2 + 64);
      uint64_t v12 = *(void *)(a2 + 72);
      uint64_t v13 = *(void *)(a2 + 80);
      uint64_t v14 = *(void *)(a2 + 88);
      uint64_t v15 = *(void *)(a2 + 96);
      char v16 = *(unsigned char *)(a2 + 104);
      sub_1DC88245C(v10, v11, v12, v13, v14, v15, v16);
      *((void *)a1 + 7) = v10;
      *((void *)a1 + 8) = v11;
      *((void *)a1 + 9) = v12;
      *((void *)a1 + 10) = v13;
      *((void *)a1 + 11) = v14;
      *((void *)a1 + 12) = v15;
      a1[104] = v16;
      uint64_t v17 = *(void *)(a2 + 120);
      *((void *)a1 + 14) = *(void *)(a2 + 112);
      *((void *)a1 + 15) = v17;
      uint64_t v18 = *(void *)(a2 + 136);
      *((void *)a1 + 16) = *(void *)(a2 + 128);
      *((void *)a1 + 17) = v18;
      uint64_t v19 = *(void *)(a2 + 152);
      *((void *)a1 + 18) = *(void *)(a2 + 144);
      *((void *)a1 + 19) = v19;
      *((void *)a1 + 20) = *(void *)(a2 + 160);
      *((_DWORD *)a1 + 42) = *(_DWORD *)(a2 + 168);
      *((_WORD *)a1 + 86) = *(_WORD *)(a2 + 172);
      *((void *)a1 + 22) = *(void *)(a2 + 176);
      a1[184] = *(unsigned char *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 1u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v20 = *(void *)(a2 + 24);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((void *)a1 + 3) = v20;
      uint64_t v21 = *(void *)(a2 + 40);
      *((void *)a1 + 4) = *(void *)(a2 + 32);
      *((void *)a1 + 5) = v21;
      *((void *)a1 + 6) = *(void *)(a2 + 48);
      *((_DWORD *)a1 + 14) = *(_DWORD *)(a2 + 56);
      *((_WORD *)a1 + 30) = *(_WORD *)(a2 + 60);
      uint64_t v22 = *(void *)(a2 + 64);
      a1[72] = *(unsigned char *)(a2 + 72);
      *((void *)a1 + 8) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 2u:
    case 3u:
      uint64_t v23 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v23;
      uint64_t v24 = *(void *)(a2 + 24);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((void *)a1 + 3) = v24;
      uint64_t v25 = *(void *)(a2 + 40);
      *((void *)a1 + 4) = *(void *)(a2 + 32);
      *((void *)a1 + 5) = v25;
      *((_DWORD *)a1 + 12) = *(_DWORD *)(a2 + 48);
      *((_WORD *)a1 + 26) = *(_WORD *)(a2 + 52);
      uint64_t v26 = *(void *)(a2 + 56);
      a1[64] = *(unsigned char *)(a2 + 64);
      *((void *)a1 + 7) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 4u:
      long long v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v27;
      *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
      uint64_t v28 = *(void *)(a2 + 56);
      *((void *)a1 + 6) = *(void *)(a2 + 48);
      *((void *)a1 + 7) = v28;
      uint64_t v29 = *(void *)(a2 + 72);
      *((void *)a1 + 8) = *(void *)(a2 + 64);
      *((void *)a1 + 9) = v29;
      uint64_t v30 = *(void *)(a2 + 88);
      *((void *)a1 + 10) = *(void *)(a2 + 80);
      *((void *)a1 + 11) = v30;
      *((void *)a1 + 12) = *(void *)(a2 + 96);
      *((_DWORD *)a1 + 26) = *(_DWORD *)(a2 + 104);
      *((_WORD *)a1 + 54) = *(_WORD *)(a2 + 108);
      *((void *)a1 + 14) = *(void *)(a2 + 112);
      a1[120] = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 5u:
      uint64_t v31 = *(void *)a2;
      uint64_t v32 = *(void *)(a2 + 8);
      char v33 = *(unsigned char *)(a2 + 16);
      sub_1DC882C30(*(void *)a2, v32, v33);
      *(void *)a1 = v31;
      *((void *)a1 + 1) = v32;
      a1[16] = v33;
      uint64_t v34 = *(void *)(a2 + 32);
      *((void *)a1 + 3) = *(void *)(a2 + 24);
      *((void *)a1 + 4) = v34;
      a1[40] = *(unsigned char *)(a2 + 40);
      uint64_t v35 = *(void *)(a2 + 56);
      *((void *)a1 + 6) = *(void *)(a2 + 48);
      *((void *)a1 + 7) = v35;
      uint64_t v36 = *(void *)(a2 + 72);
      *((void *)a1 + 8) = *(void *)(a2 + 64);
      *((void *)a1 + 9) = v36;
      uint64_t v37 = *(void *)(a2 + 88);
      *((void *)a1 + 10) = *(void *)(a2 + 80);
      *((void *)a1 + 11) = v37;
      *((_DWORD *)a1 + 24) = *(_DWORD *)(a2 + 96);
      *((_WORD *)a1 + 50) = *(_WORD *)(a2 + 100);
      *((void *)a1 + 13) = *(void *)(a2 + 104);
      a1[112] = *(unsigned char *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 6u:
      uint64_t v38 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v38;
      uint64_t v39 = *(void *)(a2 + 24);
      *((void *)a1 + 2) = *(void *)(a2 + 16);
      *((void *)a1 + 3) = v39;
      uint64_t v40 = *(void *)(a2 + 40);
      *((void *)a1 + 4) = *(void *)(a2 + 32);
      *((void *)a1 + 5) = v40;
      uint64_t v41 = *(void *)(a2 + 56);
      *((void *)a1 + 6) = *(void *)(a2 + 48);
      *((void *)a1 + 7) = v41;
      *((_DWORD *)a1 + 16) = *(_DWORD *)(a2 + 64);
      a1[68] = *(unsigned char *)(a2 + 68);
      a1[69] = *(unsigned char *)(a2 + 69);
      *((void *)a1 + 9) = *(void *)(a2 + 72);
      a1[80] = *(unsigned char *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 7u:
      uint64_t v54 = *(void *)(a2 + 64);
      uint64_t v55 = *(void *)(a2 + 72);
      uint64_t v56 = *(void *)(a2 + 80);
      uint64_t v57 = *(void *)(a2 + 88);
      uint64_t v58 = *(void *)(a2 + 96);
      uint64_t v59 = *(void *)(a2 + 104);
      uint64_t v60 = *(void *)(a2 + 112);
      uint64_t v61 = *(void *)(a2 + 120);
      uint64_t v62 = *(void *)(a2 + 128);
      uint64_t v63 = *(void *)(a2 + 136);
      uint64_t v64 = *(void *)(a2 + 144);
      uint64_t v65 = *(void *)(a2 + 152);
      uint64_t v66 = *(void *)(a2 + 160);
      uint64_t v67 = *(void *)(a2 + 168);
      uint64_t v68 = *(void *)(a2 + 176);
      uint64_t v69 = *(void *)(a2 + 184);
      uint64_t v70 = *(void *)(a2 + 192);
      uint64_t v71 = *(void *)(a2 + 200);
      char v72 = *(unsigned char *)(a2 + 208);
      uint64_t v42 = *(void *)a2;
      uint64_t v43 = *(void *)(a2 + 8);
      uint64_t v44 = *(void *)(a2 + 16);
      uint64_t v45 = *(void *)(a2 + 24);
      uint64_t v46 = *(void *)(a2 + 32);
      uint64_t v47 = *(void *)(a2 + 40);
      uint64_t v48 = *(void *)(a2 + 48);
      uint64_t v49 = *(void *)(a2 + 56);
      sub_1DC9393A4(v42, v43, v44, v45, v46, v47, v48, v49, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72);
      *(void *)a1 = v42;
      *((void *)a1 + 1) = v43;
      *((void *)a1 + 2) = v44;
      *((void *)a1 + 3) = v45;
      *((void *)a1 + 4) = v46;
      *((void *)a1 + 5) = v47;
      *((void *)a1 + 6) = v48;
      *((void *)a1 + 7) = v49;
      *((void *)a1 + 8) = v54;
      *((void *)a1 + 9) = v55;
      *((void *)a1 + 10) = v56;
      *((void *)a1 + 11) = v57;
      *((void *)a1 + 12) = v58;
      *((void *)a1 + 13) = v59;
      *((void *)a1 + 14) = v60;
      *((void *)a1 + 15) = v61;
      *((void *)a1 + 16) = v62;
      *((void *)a1 + 17) = v63;
      *((void *)a1 + 18) = v64;
      *((void *)a1 + 19) = v65;
      *((void *)a1 + 20) = v66;
      *((void *)a1 + 21) = v67;
      *((void *)a1 + 22) = v68;
      *((void *)a1 + 23) = v69;
      *((void *)a1 + 24) = v70;
      *((void *)a1 + 25) = v71;
      a1[208] = v72;
      goto LABEL_14;
    case 8u:
      uint64_t v50 = sub_1DCB86A18();
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a2, 1, v50))
      {
        uint64_t v51 = sub_1DC87E988(qword_1EAA9CBC0);
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v50);
      }
      uint64_t v52 = type metadata accessor for AOPClassificationDemo.Request();
      a1[*(int *)(v52 + 20)] = *(unsigned char *)(a2 + *(int *)(v52 + 20));
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1DC939FB0(char *a1, uint64_t a2, uint64_t a3)
{
  if (a1 != (char *)a2)
  {
    sub_1DC957E74((uint64_t)a1, (void (*)(void))type metadata accessor for RemoteRequest);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *(void *)a2;
        uint64_t v7 = *(void *)(a2 + 8);
        char v8 = *(unsigned char *)(a2 + 16);
        sub_1DC88244C(*(void *)a2, v7, v8);
        *(void *)a1 = v6;
        *((void *)a1 + 1) = v7;
        a1[16] = v8;
        long long v9 = *(_OWORD *)(a2 + 24);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *(_OWORD *)(a1 + 24) = v9;
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        uint64_t v10 = *(void *)(a2 + 56);
        uint64_t v11 = *(void *)(a2 + 64);
        uint64_t v12 = *(void *)(a2 + 72);
        uint64_t v13 = *(void *)(a2 + 80);
        uint64_t v14 = *(void *)(a2 + 88);
        uint64_t v15 = *(void *)(a2 + 96);
        char v16 = *(unsigned char *)(a2 + 104);
        sub_1DC88245C(v10, v11, v12, v13, v14, v15, v16);
        *((void *)a1 + 7) = v10;
        *((void *)a1 + 8) = v11;
        *((void *)a1 + 9) = v12;
        *((void *)a1 + 10) = v13;
        *((void *)a1 + 11) = v14;
        *((void *)a1 + 12) = v15;
        a1[104] = v16;
        *((void *)a1 + 14) = *(void *)(a2 + 112);
        *((void *)a1 + 15) = *(void *)(a2 + 120);
        *((void *)a1 + 16) = *(void *)(a2 + 128);
        *((void *)a1 + 17) = *(void *)(a2 + 136);
        *((void *)a1 + 18) = *(void *)(a2 + 144);
        *((void *)a1 + 19) = *(void *)(a2 + 152);
        *((void *)a1 + 20) = *(void *)(a2 + 160);
        a1[168] = *(unsigned char *)(a2 + 168);
        a1[169] = *(unsigned char *)(a2 + 169);
        a1[170] = *(unsigned char *)(a2 + 170);
        a1[171] = *(unsigned char *)(a2 + 171);
        a1[172] = *(unsigned char *)(a2 + 172);
        a1[173] = *(unsigned char *)(a2 + 173);
        uint64_t v17 = *(void *)(a2 + 176);
        a1[184] = *(unsigned char *)(a2 + 184);
        *((void *)a1 + 22) = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        a1[56] = *(unsigned char *)(a2 + 56);
        a1[57] = *(unsigned char *)(a2 + 57);
        a1[58] = *(unsigned char *)(a2 + 58);
        a1[59] = *(unsigned char *)(a2 + 59);
        a1[60] = *(unsigned char *)(a2 + 60);
        a1[61] = *(unsigned char *)(a2 + 61);
        uint64_t v18 = *(void *)(a2 + 64);
        a1[72] = *(unsigned char *)(a2 + 72);
        *((void *)a1 + 8) = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 2u:
      case 3u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        a1[48] = *(unsigned char *)(a2 + 48);
        a1[49] = *(unsigned char *)(a2 + 49);
        a1[50] = *(unsigned char *)(a2 + 50);
        a1[51] = *(unsigned char *)(a2 + 51);
        a1[52] = *(unsigned char *)(a2 + 52);
        a1[53] = *(unsigned char *)(a2 + 53);
        uint64_t v19 = *(void *)(a2 + 56);
        a1[64] = *(unsigned char *)(a2 + 64);
        *((void *)a1 + 7) = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 4u:
        long long v20 = *(_OWORD *)a2;
        long long v21 = *(_OWORD *)(a2 + 16);
        long long v22 = *(_OWORD *)(a2 + 32);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((_OWORD *)a1 + 1) = v21;
        *((_OWORD *)a1 + 2) = v22;
        *(_OWORD *)a1 = v20;
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        *((void *)a1 + 8) = *(void *)(a2 + 64);
        *((void *)a1 + 9) = *(void *)(a2 + 72);
        *((void *)a1 + 10) = *(void *)(a2 + 80);
        *((void *)a1 + 11) = *(void *)(a2 + 88);
        *((void *)a1 + 12) = *(void *)(a2 + 96);
        a1[104] = *(unsigned char *)(a2 + 104);
        a1[105] = *(unsigned char *)(a2 + 105);
        a1[106] = *(unsigned char *)(a2 + 106);
        a1[107] = *(unsigned char *)(a2 + 107);
        a1[108] = *(unsigned char *)(a2 + 108);
        a1[109] = *(unsigned char *)(a2 + 109);
        uint64_t v23 = *(void *)(a2 + 112);
        a1[120] = *(unsigned char *)(a2 + 120);
        *((void *)a1 + 14) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 5u:
        uint64_t v24 = *(void *)a2;
        uint64_t v25 = *(void *)(a2 + 8);
        char v26 = *(unsigned char *)(a2 + 16);
        sub_1DC882C30(*(void *)a2, v25, v26);
        *(void *)a1 = v24;
        *((void *)a1 + 1) = v25;
        a1[16] = v26;
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        a1[40] = *(unsigned char *)(a2 + 40);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        *((void *)a1 + 8) = *(void *)(a2 + 64);
        *((void *)a1 + 9) = *(void *)(a2 + 72);
        *((void *)a1 + 10) = *(void *)(a2 + 80);
        *((void *)a1 + 11) = *(void *)(a2 + 88);
        a1[96] = *(unsigned char *)(a2 + 96);
        a1[97] = *(unsigned char *)(a2 + 97);
        a1[98] = *(unsigned char *)(a2 + 98);
        a1[99] = *(unsigned char *)(a2 + 99);
        a1[100] = *(unsigned char *)(a2 + 100);
        a1[101] = *(unsigned char *)(a2 + 101);
        uint64_t v27 = *(void *)(a2 + 104);
        a1[112] = *(unsigned char *)(a2 + 112);
        *((void *)a1 + 13) = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *(void *)(a2 + 8);
        *((void *)a1 + 2) = *(void *)(a2 + 16);
        *((void *)a1 + 3) = *(void *)(a2 + 24);
        *((void *)a1 + 4) = *(void *)(a2 + 32);
        *((void *)a1 + 5) = *(void *)(a2 + 40);
        *((void *)a1 + 6) = *(void *)(a2 + 48);
        *((void *)a1 + 7) = *(void *)(a2 + 56);
        a1[64] = *(unsigned char *)(a2 + 64);
        a1[65] = *(unsigned char *)(a2 + 65);
        a1[66] = *(unsigned char *)(a2 + 66);
        a1[67] = *(unsigned char *)(a2 + 67);
        a1[68] = *(unsigned char *)(a2 + 68);
        a1[69] = *(unsigned char *)(a2 + 69);
        uint64_t v28 = *(void *)(a2 + 72);
        a1[80] = *(unsigned char *)(a2 + 80);
        *((void *)a1 + 9) = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 7u:
        uint64_t v41 = *(void *)(a2 + 64);
        uint64_t v42 = *(void *)(a2 + 72);
        uint64_t v43 = *(void *)(a2 + 80);
        uint64_t v44 = *(void *)(a2 + 88);
        uint64_t v45 = *(void *)(a2 + 96);
        uint64_t v46 = *(void *)(a2 + 104);
        uint64_t v47 = *(void *)(a2 + 112);
        uint64_t v48 = *(void *)(a2 + 120);
        uint64_t v49 = *(void *)(a2 + 128);
        uint64_t v50 = *(void *)(a2 + 136);
        uint64_t v51 = *(void *)(a2 + 144);
        uint64_t v52 = *(void *)(a2 + 152);
        uint64_t v53 = *(void *)(a2 + 160);
        uint64_t v54 = *(void *)(a2 + 168);
        uint64_t v55 = *(void *)(a2 + 176);
        uint64_t v56 = *(void *)(a2 + 184);
        uint64_t v57 = *(void *)(a2 + 192);
        uint64_t v58 = *(void *)(a2 + 200);
        char v59 = *(unsigned char *)(a2 + 208);
        uint64_t v29 = *(void *)a2;
        uint64_t v30 = *(void *)(a2 + 8);
        uint64_t v31 = *(void *)(a2 + 16);
        uint64_t v32 = *(void *)(a2 + 24);
        uint64_t v33 = *(void *)(a2 + 32);
        uint64_t v34 = *(void *)(a2 + 40);
        uint64_t v35 = *(void *)(a2 + 48);
        uint64_t v36 = *(void *)(a2 + 56);
        sub_1DC9393A4(v29, v30, v31, v32, v33, v34, v35, v36, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
          v52,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59);
        *(void *)a1 = v29;
        *((void *)a1 + 1) = v30;
        *((void *)a1 + 2) = v31;
        *((void *)a1 + 3) = v32;
        *((void *)a1 + 4) = v33;
        *((void *)a1 + 5) = v34;
        *((void *)a1 + 6) = v35;
        *((void *)a1 + 7) = v36;
        *((void *)a1 + 8) = v41;
        *((void *)a1 + 9) = v42;
        *((void *)a1 + 10) = v43;
        *((void *)a1 + 11) = v44;
        *((void *)a1 + 12) = v45;
        *((void *)a1 + 13) = v46;
        *((void *)a1 + 14) = v47;
        *((void *)a1 + 15) = v48;
        *((void *)a1 + 16) = v49;
        *((void *)a1 + 17) = v50;
        *((void *)a1 + 18) = v51;
        *((void *)a1 + 19) = v52;
        *((void *)a1 + 20) = v53;
        *((void *)a1 + 21) = v54;
        *((void *)a1 + 22) = v55;
        *((void *)a1 + 23) = v56;
        *((void *)a1 + 24) = v57;
        *((void *)a1 + 25) = v58;
        a1[208] = v59;
        goto LABEL_15;
      case 8u:
        uint64_t v37 = sub_1DCB86A18();
        if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a2, 1, v37))
        {
          uint64_t v38 = sub_1DC87E988(qword_1EAA9CBC0);
          memcpy(a1, (const void *)a2, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v37);
        }
        uint64_t v39 = type metadata accessor for AOPClassificationDemo.Request();
        a1[*(int *)(v39 + 20)] = *(unsigned char *)(a2 + *(int *)(v39 + 20));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for RemoteRequest()
{
  uint64_t result = qword_1EAAA0AE8;
  if (!qword_1EAAA0AE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1DC93A820(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 8)
  {
    uint64_t v6 = sub_1DCB86A18();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_1DC87E988(qword_1EAA9CBC0);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
    }
    uint64_t v8 = type metadata accessor for AOPClassificationDemo.Request();
    *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1DC93A948(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DC957E74((uint64_t)a1, (void (*)(void))type metadata accessor for RemoteRequest);
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      uint64_t v6 = sub_1DCB86A18();
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_1DC87E988(qword_1EAA9CBC0);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v8 = type metadata accessor for AOPClassificationDemo.Request();
      *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DC93AAA0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC93AAB0()
{
  uint64_t result = type metadata accessor for AOPClassificationDemo.Request();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1DC93AB80()
{
  sub_1DC8867A8();
  v1[178] = v0;
  v1[177] = v2;
  v1[176] = v3;
  uint64_t v4 = type metadata accessor for AOPClassificationDemo.Request();
  sub_1DC8BADF0(v4);
  v1[179] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for RemoteRequest();
  v1[180] = v5;
  sub_1DC8BADF0(v5);
  v1[181] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DC93AC3C, 0, 0);
}

void sub_1DC93AC3C()
{
  uint64_t v1 = v0 + 896;
  uint64_t v56 = (_OWORD *)(v0 + 1128);
  uint64_t v2 = *(void *)(v0 + 1448);
  uint64_t v3 = *(void *)(v0 + 1440);
  sub_1DC8EF710(*(void *)(v0 + 1424), v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DC95AF88();
      memcpy((void *)(v0 + 672), v4, 0x49uLL);
      sub_1DC95AF48();
      sub_1DC93E790(v5, v6);
      if (v2)
      {
        sub_1DC957494(v0 + 672);
LABEL_17:
        sub_1DC95AEC8();
        swift_task_dealloc();
        sub_1DC8BA978();
        goto LABEL_29;
      }
      sub_1DC95AE3C();
      sub_1DC957494(v0 + 672);
      *(void *)(v0 + 1352) = &unk_1F37EBFC8;
      *(void *)(v0 + 1360) = &off_1F37EBFA8;
      *(void *)(v0 + 1328) = v1;
      uint64_t v48 = (long long *)(v0 + 1328);
      break;
    case 2u:
      uint64_t v7 = *(void *)(v0 + 1416);
      memcpy((void *)(v0 + 896), *(const void **)(v0 + 1448), 0x41uLL);
      uint64_t v49 = sub_1DC93EAC0((const void *)(v0 + 896), v7, (uint64_t (*)(void *, void *))sub_1DCB38994, (uint64_t (*)(void *, void *))sub_1DCB38B88);
      uint64_t v3 = *(void *)(v0 + 1408);
      sub_1DC88CABC(v0 + 896);
      *(void *)(v0 + 1312) = &unk_1F37EF500;
      *(void *)(v0 + 1320) = &off_1F37EF4E0;
      *(void *)(v0 + 1288) = v49;
      uint64_t v48 = (long long *)(v0 + 1288);
      break;
    case 3u:
      sub_1DC95AF88();
      memcpy((void *)(v0 + 824), v8, 0x41uLL);
      sub_1DC95AF48();
      sub_1DC93EAC0(v9, v10, v11, v12);
      if (v2)
      {
        sub_1DC88CABC(v0 + 824);
        goto LABEL_17;
      }
      sub_1DC95AE3C();
      sub_1DC88CABC(v0 + 824);
      *(void *)(v0 + 1272) = &unk_1F37E2F18;
      *(void *)(v0 + 1280) = &off_1F37E2EF8;
      *(void *)(v0 + 1248) = v1;
      uint64_t v48 = (long long *)(v0 + 1248);
      break;
    case 4u:
      sub_1DC95AF88();
      memcpy((void *)(v0 + 424), v13, 0x79uLL);
      sub_1DC95AF48();
      sub_1DC93EC40(v14, v15);
      if (v2)
      {
        sub_1DC957448(v0 + 424);
        goto LABEL_17;
      }
      sub_1DC95AE3C();
      sub_1DC957448(v0 + 424);
      *(void *)(v0 + 1232) = &unk_1F37F0C40;
      *(void *)(v0 + 1240) = &off_1F37F0C20;
      *(void *)(v0 + 1208) = v1;
      uint64_t v48 = (long long *)(v0 + 1208);
      break;
    case 5u:
      sub_1DC95AF88();
      memcpy((void *)(v0 + 552), v16, 0x71uLL);
      sub_1DC95AF48();
      sub_1DC93BBEC(v17, v18);
      if (v2)
      {
        sub_1DC9573D4(v0 + 552);
        goto LABEL_17;
      }
      sub_1DC95AE3C();
      *(void *)(v0 + 1192) = &unk_1F37E22C0;
      *(void *)(v0 + 1200) = &off_1F37E22A0;
      sub_1DC9573D4(v0 + 552);
      *(void *)(v0 + 1168) = v1;
      uint64_t v48 = (long long *)(v0 + 1168);
      break;
    case 6u:
      uint64_t v19 = *(void *)(v0 + 1448);
      long long v20 = *(long long **)(v0 + 1416);
      uint64_t v21 = *(void *)(v19 + 8);
      __dst = *(void **)v19;
      uint64_t v22 = *(void *)(v19 + 16);
      uint64_t v23 = *(void *)(v19 + 24);
      uint64_t v24 = *(void *)(v19 + 32);
      uint64_t v25 = *(void *)(v19 + 40);
      uint64_t v26 = *(void *)(v19 + 48);
      uint64_t v27 = *(void *)(v19 + 56);
      char v28 = *(unsigned char *)(v19 + 64);
      char v29 = *(unsigned char *)(v19 + 65);
      char v30 = *(unsigned char *)(v19 + 66);
      char v31 = *(unsigned char *)(v19 + 67);
      char v32 = *(unsigned char *)(v19 + 68);
      char v33 = *(unsigned char *)(v19 + 69);
      uint64_t v34 = *(void *)(v19 + 72);
      LOBYTE(v19) = *(unsigned char *)(v19 + 80);
      *(void *)(v0 + 752) = v22;
      *(void *)(v0 + 760) = v23;
      *(void *)(v0 + 768) = v24;
      *(void *)(v0 + 776) = v25;
      *(void *)(v0 + 784) = v26;
      *(void *)(v0 + 792) = v27;
      *(unsigned char *)(v0 + 800) = v28;
      *(unsigned char *)(v0 + 801) = v29;
      *(unsigned char *)(v0 + 802) = v30;
      *(unsigned char *)(v0 + 803) = v31;
      *(unsigned char *)(v0 + 804) = v32;
      *(unsigned char *)(v0 + 805) = v33;
      *(void *)(v0 + 808) = v34;
      *(unsigned char *)(v0 + 816) = v19;
      long long v35 = *v20;
      long long v36 = v20[1];
      *(void *)(v0 + 1160) = *((void *)v20 + 4);
      *uint64_t v56 = v35;
      *(_OWORD *)(v0 + 1144) = v36;
      uint64_t v37 = swift_task_alloc();
      *(void *)(v37 + 16) = v56;
      *(void *)(v37 + 24) = v0 + 752;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1DC8D93EC((void (*)(void, uint64_t))sub_1DC9573B8, v37, (uint64_t)__dst, v21);
      uint64_t v57 = *(void *)(v0 + 1408);
      uint64_t v52 = v38;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1112) = &unk_1F37E9EB8;
      *(void *)(v0 + 1120) = &off_1F37E9E98;
      *(void *)(v0 + 1088) = v52;
      uint64_t v48 = (long long *)(v0 + 1088);
      uint64_t v53 = v57;
      goto LABEL_27;
    case 7u:
      memcpy((void *)(v0 + 16), *(const void **)(v0 + 1448), 0xD1uLL);
      *(void *)(v0 + 1072) = type metadata accessor for AccessibilitySoundRecognition.Session(0);
      *(void *)(v0 + 1080) = &off_1F37E04D0;
      sub_1DC8EF6AC((uint64_t *)(v0 + 1048));
      uint64_t v39 = (void *)sub_1DC95AEE0();
      *(void *)(v0 + 1456) = v39;
      *uint64_t v39 = v0;
      v39[1] = sub_1DC93B44C;
      sub_1DC95AE08();
      __asm { BR              X2 }
      return;
    case 8u:
      uint64_t v42 = *(void *)(v0 + 1432);
      sub_1DC959498(*(void *)(v0 + 1448), v42, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
      *(void *)(v0 + 992) = &type metadata for AOPClassificationDemo.Session;
      *(void *)(v0 + 1000) = &off_1F37EBB30;
      sub_1DC90B748(v42, (void *)(v0 + 968));
      uint64_t v54 = *(void *)(v0 + 1408);
      sub_1DC957E74(*(void *)(v0 + 1432), (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
      uint64_t v48 = (long long *)(v0 + 968);
      uint64_t v53 = v54;
      goto LABEL_27;
    case 9u:
      uint64_t v43 = *(void **)(v0 + 1408);
      v43[3] = &type metadata for ExampleRemoteWorkload.Session;
      v43[4] = &off_1F37EC1D8;
      unint64_t v44 = sub_1DC956DCC(0xFFFFFFFFFFFFFFFFLL);
      *uint64_t v43 = &unk_1EAAA3528;
      v43[1] = 0;
      v43[2] = v44 ^ 0x8000000000000000;
      goto LABEL_28;
    case 0xAu:
      *(void *)(v0 + 1032) = type metadata accessor for AccessibilitySoundActions.Session();
      *(void *)(v0 + 1040) = &off_1F37E09B0;
      sub_1DC8EF6AC((uint64_t *)(v0 + 1008));
      uint64_t v45 = (void *)sub_1DC95AEE0();
      *(void *)(v0 + 1472) = v45;
      *uint64_t v45 = v0;
      v45[1] = sub_1DC93B5A0;
      sub_1DC95AE08();
      __asm { BR              X2 }
      return;
    default:
      uint64_t v3 = *(void *)(v0 + 1416);
      memcpy((void *)(v0 + 232), *(const void **)(v0 + 1448), 0xB9uLL);
      sub_1DC93E96C(v0 + 232, v3);
      sub_1DC95AE3C();
      *(void *)(v0 + 1392) = &unk_1F37E1E60;
      *(void *)(v0 + 1400) = &off_1F37E1E40;
      sub_1DC9574E0(v0 + 232);
      *(void *)(v0 + 1368) = v1;
      uint64_t v48 = (long long *)(v0 + 1368);
      break;
  }
  uint64_t v53 = v3;
LABEL_27:
  sub_1DC8BA1CC(v48, v53);
LABEL_28:
  sub_1DC95AEC8();
  swift_task_dealloc();
  sub_1DC8BAB84();
LABEL_29:
  sub_1DC95AE08();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1DC93B44C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 1464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = sub_1DC93B6EC;
  }
  else
  {
    sub_1DC943A04(v3 + 16);
    uint64_t v7 = sub_1DC93B538;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1DC93B538()
{
  sub_1DC8867A8();
  sub_1DC8BA1CC((long long *)(v0 + 1048), *(void *)(v0 + 1408));
  sub_1DC95AEC8();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v1();
}

uint64_t sub_1DC93B5A0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 1480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_1DC93B768;
  }
  else {
    uint64_t v7 = sub_1DC93B684;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1DC93B684()
{
  sub_1DC8867A8();
  sub_1DC8BA1CC((long long *)(v0 + 1008), *(void *)(v0 + 1408));
  sub_1DC95AEC8();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v1();
}

uint64_t sub_1DC93B6EC()
{
  sub_1DC8867A8();
  sub_1DC943A04(v0 + 16);
  sub_1DC8E6BC8(v0 + 1048);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC93B768()
{
  sub_1DC8867A8();
  sub_1DC8E6BC8(v0 + 1008);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC93B7D8(void (*a1)(uint64_t *__return_ptr, uint64_t *))
{
  a1(&v3, &v2);
  return v3;
}

uint64_t sub_1DC93B838(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  sub_1DC882264((uint64_t)__src);
  uint64_t v2 = sub_1DCAC34F4();
  sub_1DC88CABC((uint64_t)__src);
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1DC93B90C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = v2[1];
  v5[1] = *v2;
  _OWORD v5[2] = v6;
  long long v7 = v2[3];
  void v5[3] = v2[2];
  _OWORD v5[4] = v7;
  v11[0] = a1;
  v11[1] = a2;
  _OWORD v10[2] = sub_1DC959A30;
  v10[3] = v5;
  v10[4] = v11;
  swift_retain();
  sub_1DC88D0CC((uint64_t)v2);
  uint64_t v8 = sub_1DCAC36D8(a1, a2, (void (*)(uint64_t *__return_ptr, id *))sub_1DC959A4C, (uint64_t)v10);
  swift_release();
  swift_release();
  return v8;
}

void sub_1DC93B9F4(void *a1)
{
}

uint64_t sub_1DC93BA38(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  sub_1DC882264((uint64_t)__src);
  sub_1DCAC349C();
  uint64_t v3 = v2;
  sub_1DC88CABC((uint64_t)__src);
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1DC93BB0C()
{
  uint64_t v1 = (_OWORD *)swift_allocObject();
  long long v2 = v0[1];
  v1[1] = *v0;
  v1[2] = v2;
  long long v3 = v0[3];
  v1[3] = v0[2];
  v1[4] = v3;
  swift_retain();
  sub_1DC88D0CC((uint64_t)v0);
  uint64_t v4 = sub_1DCAC37A0();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1DC93BBEC(long long *a1, uint64_t a2)
{
  v17[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  v17[4] = sub_1DC9575A0();
  char v5 = sub_1DCB86C78();
  sub_1DC8818D0((uint64_t)v17);
  if (v5)
  {
    long long v6 = a1[1];
    long long v19 = *a1;
    v20[0] = v6;
    *(_OWORD *)((char *)v20 + 9) = *(long long *)((char *)a1 + 25);
    memcpy(__dst, a1 + 3, 0x41uLL);
    uint64_t v7 = type metadata accessor for SNDetectSoundRequest();
    uint64_t v8 = (void *)a2;
    uint64_t v9 = v7;
    uint64_t v10 = sub_1DC93BD44(&v19, __dst, v8);
    if (!v2) {
      return v10;
    }
  }
  else
  {
    memcpy(v17, a1, 0x71uLL);
    v16[3] = &unk_1F37E2540;
    v16[4] = &off_1F37E2520;
    uint64_t v11 = swift_allocObject();
    v16[0] = v11;
    uint64_t v12 = *(void *)(a2 + 32);
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v11 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v11 + 32) = v13;
    *(void *)(v11 + 48) = v12;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC8C6C30();
    uint64_t v9 = v14;
    sub_1DC8818D0((uint64_t)v16);
  }
  return v9;
}

uint64_t sub_1DC93BD44(long long *a1, unint64_t *a2, void *a3)
{
  uint64_t v174 = a3;
  unint64_t v163 = *a2;
  unint64_t v162 = a2[1];
  unint64_t v161 = a2[2];
  unint64_t v160 = a2[3];
  unint64_t v159 = a2[4];
  unint64_t v158 = a2[5];
  v4.i32[0] = *((_DWORD *)a2 + 12);
  int v157 = *((unsigned __int8 *)a2 + 52);
  int v156 = *((unsigned __int8 *)a2 + 53);
  uint64_t v165 = a2[7];
  LODWORD(v164) = *((unsigned __int8 *)a2 + 64);
  uint64_t v147 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v144 = *(void *)(v147 - 8);
  MEMORY[0x1F4188790](v147);
  uint64_t v140 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1DC87E988((uint64_t *)&unk_1EAAA0BE0);
  uint64_t v146 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v142 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_1DC87E988(&qword_1EAA9FFA0);
  uint64_t v145 = *(void *)(v149 - 8);
  MEMORY[0x1F4188790](v149);
  uint64_t v141 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_1DC87E988(&qword_1EAAA0BF0);
  MEMORY[0x1F4188790](v152);
  uint64_t v148 = (char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1DC87E988(&qword_1EAAA0BF8);
  uint64_t v153 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143);
  uint64_t v151 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_1DC87E988(&qword_1EAAA0C00);
  uint64_t v170 = *(void *)(v171 - 8);
  MEMORY[0x1F4188790](v171);
  uint64_t v154 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_1DC87E988(&qword_1EAAA0C08);
  MEMORY[0x1F4188790](v139);
  v172 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v169 = *(void *)(v166 - 8);
  MEMORY[0x1F4188790](v166);
  v167 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = sub_1DCB870B8();
  uint64_t v168 = *(void *)(v173 - 8);
  MEMORY[0x1F4188790](v173);
  char v16 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DC87E988(&qword_1EAAA0C10);
  uint64_t v155 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  long long v19 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DC87E988((uint64_t *)&unk_1EAAA0C18);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v24 = a1[1];
  long long v175 = *a1;
  *(_OWORD *)v176 = v24;
  *(_OWORD *)&v176[9] = *(long long *)((char *)a1 + 25);
  uint64_t v25 = v190;
  sub_1DC8C7990((uint64_t)&v175, v179);
  if (v25) {
    return (uint64_t)v3;
  }
  uint64_t v134 = v19;
  uint64_t v135 = v23;
  uint64_t v133 = v17;
  uint64_t v136 = v21;
  uint64_t v137 = v20;
  v190 = v16;
  uint64_t v138 = a2;
  type metadata accessor for SNSoundDetector();
  long long v26 = v179[0];
  sub_1DC8C91CC(*(uint64_t *)&v179[0], *((uint64_t *)&v179[0] + 1));
  uint64_t v132 = 0;
  type metadata accessor for SNUtils();
  uint64_t ObjectType = swift_getObjectType();
  char v29 = *(uint64_t (**)(uint64_t, void))(*((void *)&v26 + 1) + 16);
  char v30 = (void *)v29(ObjectType, *((void *)&v26 + 1));
  sub_1DCB23C1C(v30, 0);
  char v32 = v31;

  if (v32[2])
  {
    unint64_t v33 = v32[5];
    unint64_t v128 = v32[4];
    unint64_t v131 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v34 = (void *)v29(ObjectType, *((void *)&v26 + 1));
    sub_1DCB23C1C(v34, 1);
    long long v36 = v35;

    uint64_t v37 = v36[2];
    if (v37 == 1)
    {
      unint64_t v38 = v36[5];
      v126[1] = v36[4];
      unint64_t v130 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v126[0] = 0;
      unint64_t v129 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v37 != 2)
      {
        swift_bridgeObjectRelease();
        long long v3 = (void *)type metadata accessor for SNError();
        sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001DLL, 0x80000001DCB917B0);
        swift_willThrow();
        goto LABEL_3;
      }
      unint64_t v130 = 0xEA00000000006563;
      unint64_t v129 = 0xE800000000000000;
      qmemcpy(v126, "DetectedConfiden", sizeof(v126));
    }
    uint64_t v39 = *((void *)&v181 + 1);
    uint64_t v127 = *((void *)&v26 + 1);
    if ((~*((void *)&v181 + 1) & 0xF000000000000007) != 0)
    {
      id v62 = (id)(*((void *)&v181 + 1) & 0x7FFFFFFFFFFFFFFFLL);
      swift_bridgeObjectRelease();
      if (v39 < 0)
      {
        id v66 = v62;
        uint64_t v64 = v132;
        sub_1DC9475B4((uint64_t)v66, (uint64_t)v138, (uint64_t *)&v175, v67);
      }
      else
      {
        id v63 = (id)v39;
        uint64_t v64 = v132;
        sub_1DC947128((uint64_t)v63, (uint64_t)v138, (uint64_t *)&v175);
      }
      long long v3 = (void *)v130;
      uint64_t v132 = v64;
      if (v64)
      {
        sub_1DC8CB784(v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DC8CB784(v39);
        goto LABEL_3;
      }
      uint64_t v125 = v26;
      uint64_t v165 = *((void *)&v175 + 1);
      uint64_t v68 = v175;
      unint64_t v131 = *(unsigned int *)v176;
      unint64_t v164 = *(unsigned int *)&v176[4];
      uint64_t v124 = *(void *)&v176[8];
      uint64_t v123 = *(void *)&v176[16];
      unint64_t v128 = *(unsigned int *)&v176[24];
      unint64_t v163 = v177;
      uint64_t v122 = v178;
      uint64_t v69 = v166;
      uint64_t v70 = v169;
      uint64_t v169 = v175;
      sub_1DC8CB784(v39);
      *(void *)&long long v175 = v68;
      uint64_t v71 = *MEMORY[0x1E4F1A8F8];
      uint64_t v72 = v168;
      uint64_t v73 = *(void (**)(char *, uint64_t, void))(v168 + 104);
      uint64_t v173 = v39;
      char v74 = v190;
      v73(v190, v71, *((void *)&v26 + 1));
      uint64_t v75 = v167;
      char *v167 = sub_1DC8CD5BC;
      v75[1] = 0;
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v70 + 104))(v75, *MEMORY[0x1E4F1A920], v69);
      sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
      uint64_t v76 = v134;
      sub_1DCB87478();
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v70 + 8))(v75, v69);
      (*(void (**)(char *, void))(v72 + 8))(v74, *((void *)&v26 + 1));
      sub_1DC87E988(&qword_1EAAA0BC0);
      sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
      uint64_t v77 = v135;
      uint64_t v78 = v133;
      sub_1DCB873D8();
      (*(void (**)(char *, uint64_t))(v155 + 8))(v76, v78);
      sub_1DC88CF34(&qword_1EAAA0C58, (uint64_t *)&unk_1EAAA0C18);
      uint64_t v79 = v137;
      sub_1DCB873A8();
      swift_release();
      sub_1DC8CB784(v173);
      (*(void (**)(char *, uint64_t))(v136 + 8))(v77, v79);
      uint64_t v80 = v170;
      unint64_t v81 = v130;
      goto LABEL_29;
    }
    uint64_t v125 = v26;
    uint64_t v40 = (void *)v29(ObjectType, *((void *)&v26 + 1));
    id v41 = objc_msgSend(v40, sel_inputDescriptionsByName);

    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
    uint64_t v42 = sub_1DCB877B8();

    long long v3 = sub_1DC9612B8(v128, v131, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v3
      || (id v43 = objc_msgSend(v3, sel_multiArrayConstraint), v3, !v43))
    {
      sub_1DC884E74();
      swift_allocError();
      *uint64_t v65 = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    id v44 = objc_msgSend(v43, sel_shape);

    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    unint64_t v45 = sub_1DCB87C38();

    uint64_t v46 = sub_1DCB212CC(v45);
    swift_bridgeObjectRelease();
    id v47 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, v46);
    sub_1DCB22DE0(v47);
    unsigned int v49 = v48;

    double v50 = *((double *)&v180 + 1);
    if ((~*((void *)&v180 + 1) & 0x7FF0000000000000) != 0)
    {
      if (*((double *)&v180 + 1) > -2147483650.0)
      {
        if (*((double *)&v180 + 1) < 2147483650.0)
        {
          uint64_t v51 = sub_1DCB88628();
          unint64_t v131 = v52;
          uint64_t v54 = v53;
          uint64_t v55 = DWORD1(v181);
          uint64_t v56 = sub_1DCB88628();
          unint64_t v128 = v58;
          if (v50 > -9.22337204e18)
          {
            uint64_t v137 = v55;
            uint64_t v155 = v49;
            uint64_t v122 = v57;
            uint64_t v123 = v56;
            uint64_t v124 = v54;
            if (v50 < 9.22337204e18)
            {
              int16x8_t v59 = (int16x8_t)vmovl_u8(v4);
              v59.i64[0] &= 0xFF01FF01FF01FF01;
              long long v3 = (void *)v174[4];
              __src[0] = v163;
              __src[1] = v162;
              __src[2] = v161;
              __src[3] = v160;
              __src[4] = v159;
              __src[5] = v158;
              unsigned __int32 v183 = vmovn_s16(v59).u32[0];
              char v184 = v157 & 1;
              char v185 = v156 & 1;
              uint64_t v186 = v165;
              char v187 = v164 & 1;
              uint64_t v188 = 1;
              uint64_t v189 = (uint64_t)v50;
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v60 = v138;
              sub_1DC882264((uint64_t)v138);
              uint64_t v61 = v132;
              sub_1DC9A7F88(__src);
              sub_1DC88CABC((uint64_t)v60);
              uint64_t v132 = v61;
              if (v61)
              {
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
LABEL_3:
                sub_1DC8CB730((uint64_t)v179);
                return (uint64_t)v3;
              }
              uint64_t v165 = v51;
              unint64_t v164 = HIDWORD(v131);
              unint64_t v163 = HIDWORD(v128);
              swift_release();
              swift_release();
              swift_release();
              uint64_t v82 = sub_1DC9A7A54();
              swift_release();
              *(void *)&long long v175 = v82;
              uint64_t v83 = v168;
              unint64_t v84 = v190;
              uint64_t v85 = v173;
              (*(void (**)(char *, void, uint64_t))(v168 + 104))(v190, *MEMORY[0x1E4F1A8F8], v173);
              uint64_t v86 = v167;
              char *v167 = sub_1DC8C94E8;
              v86[1] = 0;
              uint64_t v87 = v169;
              uint64_t v88 = v166;
              (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v169 + 104))(v86, *MEMORY[0x1E4F1A920], v166);
              sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
              sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
              unint64_t v89 = v140;
              sub_1DCB87478();
              (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v87 + 8))(v86, v88);
              (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
              swift_release();
              sub_1DC87E988(&qword_1EAA9F268);
              sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
              id v90 = v142;
              uint64_t v91 = v147;
              sub_1DCB873D8();
              (*(void (**)(char *, uint64_t))(v144 + 8))(v89, v91);
              uint64_t v92 = sub_1DC87E988(&qword_1EAA9E860);
              uint64_t v93 = v141;
              uint64_t v94 = v150;
              sub_1DCB870D8();
              (*(void (**)(char *, uint64_t))(v146 + 8))(v90, v94);
              uint64_t v95 = v145;
              uint64_t v96 = (uint64_t)v148;
              uint64_t v97 = v149;
              (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v148, v93, v149);
              uint64_t v98 = v152;
              *(void *)(v96 + *(int *)(v152 + 60)) = v155;
              *(void *)(v96 + *(int *)(v98 + 64)) = v137;
              *(void *)(v96 + *(int *)(v98 + 68)) = v92;
              (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v97);
              sub_1DC87E988(&qword_1EAAA0BC0);
              sub_1DC88CF34(&qword_1EAAA0C28, &qword_1EAAA0BF0);
              uint64_t v99 = v151;
              sub_1DCB873D8();
              sub_1DC88CC04(v96, &qword_1EAAA0BF0);
              sub_1DC88CF34(&qword_1EAAA0C30, &qword_1EAAA0BF8);
              uint64_t v100 = v143;
              sub_1DCB873A8();
              (*(void (**)(char *, uint64_t))(v153 + 8))(v99, v100);
              unint64_t v81 = v130;
              uint64_t v80 = v170;
LABEL_29:
              long long v3 = v174;
              uint64_t v101 = v132;
              sub_1DC9F39B0(v138);
              uint64_t v103 = (uint64_t)v172;
              uint64_t v104 = v171;
              if (v101)
              {
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                sub_1DC8CB730((uint64_t)v179);
              }
              else
              {
                uint64_t v105 = v102;
                uint64_t v106 = swift_allocObject();
                *(void *)(v106 + 16) = v105;
                type metadata accessor for RecursiveMLModel();
                swift_allocObject();
                swift_retain();
                uint64_t v107 = swift_unknownObjectRetain();
                uint64_t v108 = sub_1DCA8817C(v107, v127);
                uint64_t v109 = v154;
                sub_1DC99C440((uint64_t)v108, (uint64_t)&off_1F38033C8);
                swift_release();
                swift_release();
                uint64_t v110 = swift_allocObject();
                *(void *)(v110 + 16) = v123;
                int v111 = v163;
                *(_DWORD *)(v110 + 24) = v128;
                *(_DWORD *)(v110 + 28) = v111;
                uint64_t v112 = v126[1];
                *(void *)(v110 + 32) = v122;
                *(void *)(v110 + 40) = v112;
                uint64_t v113 = v126[0];
                *(void *)(v110 + 48) = v81;
                *(void *)(v110 + 56) = v113;
                uint64_t v114 = v165;
                *(void *)(v110 + 64) = v129;
                *(void *)(v110 + 72) = v114;
                LODWORD(v114) = v164;
                *(_DWORD *)(v110 + 80) = v131;
                *(_DWORD *)(v110 + 84) = v114;
                *(void *)(v110 + 88) = v124;
                *(void *)(v110 + 96) = sub_1DC957704;
                *(void *)(v110 + 104) = v106;
                long long v115 = v179[0];
                long long v116 = v179[1];
                long long v117 = v181;
                *(_OWORD *)(v110 + 144) = v180;
                *(_OWORD *)(v110 + 160) = v117;
                *(_OWORD *)(v110 + 112) = v115;
                *(_OWORD *)(v110 + 128) = v116;
                (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v103, v109, v104);
                uint64_t v118 = v139;
                uint64_t v119 = (double (**)@<D0>(uint64_t@<X8>))(v103 + *(int *)(v139 + 52));
                *uint64_t v119 = sub_1DC8C9A5C;
                v119[1] = 0;
                v120 = (void (**)(void **@<X0>, uint64_t *@<X1>, uint64_t@<X8>))(v103 + *(int *)(v118 + 56));
                char *v120 = sub_1DC957724;
                v120[1] = (void (*)(void **@<X0>, uint64_t *@<X1>, uint64_t@<X8>))v110;
                swift_retain();
                sub_1DC8CB6DC((uint64_t)v179);
                (*(void (**)(char *, uint64_t))(v80 + 8))(v109, v104);
                sub_1DC88CF34(&qword_1EAAA0C38, &qword_1EAAA0C08);
                long long v3 = (void *)sub_1DCB873A8();
                sub_1DC8CB730((uint64_t)v179);
                swift_release();
                swift_release();
                sub_1DC88CC04(v103, &qword_1EAAA0C08);
              }
              return (uint64_t)v3;
            }
            goto LABEL_36;
          }
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_37:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1DC93D458(long long *a1, uint64_t a2, long long *a3)
{
  char v184 = a3;
  uint64_t v183 = a2;
  uint64_t v169 = sub_1DC87E988(&qword_1EAA9EFF0);
  sub_1DC89D4E0();
  uint64_t v165 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  sub_1DC888164(v10);
  uint64_t v172 = sub_1DC87E988((uint64_t *)&unk_1EAAA0BE0);
  sub_1DC89D4E0();
  uint64_t v167 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC888164((uint64_t)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v171 = sub_1DC87E988(&qword_1EAA9FFA0);
  sub_1DC89D4E0();
  uint64_t v166 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1DC88D550();
  sub_1DC888164(v16);
  uint64_t v168 = sub_1DC87E988(&qword_1EAAA0BF0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v17);
  sub_1DC888164((uint64_t)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v174 = sub_1DC87E988(&qword_1EAAA0BF8);
  sub_1DC89D4E0();
  uint64_t v173 = v19;
  MEMORY[0x1F4188790](v20);
  sub_1DC888164((uint64_t)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v162 = sub_1DC87E988(&qword_1EAAA0C00);
  sub_1DC89D4E0();
  uint64_t v179 = v22;
  MEMORY[0x1F4188790](v23);
  sub_1DC88D550();
  sub_1DC888164(v24);
  uint64_t v176 = sub_1DC87E988(&qword_1EAAA0C08);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v25);
  sub_1DC88D550();
  sub_1DC888164(v26);
  uint64_t v182 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v177 = v27;
  MEMORY[0x1F4188790](v28);
  long long v180 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v181 = v31;
  MEMORY[0x1F4188790](v32);
  sub_1DC8C1FC4();
  uint64_t v33 = sub_1DC87E988(&qword_1EAAA0C10);
  sub_1DC89D4E0();
  uint64_t v175 = v34;
  MEMORY[0x1F4188790](v35);
  sub_1DC89D9B8();
  uint64_t v36 = sub_1DC87E988((uint64_t *)&unk_1EAAA0C18);
  sub_1DC89D4E0();
  uint64_t v38 = v37;
  MEMORY[0x1F4188790](v39);
  sub_1DC8CD750();
  long long v40 = a1[1];
  long long v186 = *a1;
  *(_OWORD *)char v187 = v40;
  *(_OWORD *)&v187[9] = *(long long *)((char *)a1 + 25);
  uint64_t v41 = v185;
  sub_1DC8C7990((uint64_t)&v186, v190);
  if (v41) {
    return (uint64_t)v4;
  }
  uint64_t v157 = v6;
  uint64_t v158 = v3;
  uint64_t v156 = v33;
  uint64_t v159 = v38;
  uint64_t v160 = v36;
  uint64_t v185 = v5;
  uint64_t v161 = v30;
  uint64_t v42 = v184;
  type metadata accessor for SNSoundDetector();
  long long v43 = v190[0];
  sub_1DC8C91CC(*(uint64_t *)&v190[0], *((uint64_t *)&v190[0] + 1));
  uint64_t v155 = 0;
  uint64_t v45 = type metadata accessor for SNUtils();
  uint64_t ObjectType = swift_getObjectType();
  id v47 = *(uint64_t (**)(uint64_t, void))(*((void *)&v43 + 1) + 16);
  unsigned int v48 = (void *)v47(ObjectType, *((void *)&v43 + 1));
  sub_1DCB23C1C(v48, 0);
  double v50 = v49;

  if (v50[2])
  {
    uint64_t v51 = v50[5];
    unint64_t v151 = v50[4];
    uint64_t v154 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v152 = *((void *)&v43 + 1);
    unint64_t v52 = (void *)v47(ObjectType, *((void *)&v43 + 1));
    sub_1DCB23C1C(v52, 1);
    uint64_t v54 = v53;

    uint64_t v55 = v54[2];
    if (v55 == 1)
    {
      unint64_t v150 = v45;
      unint64_t v56 = v54[5];
      v149[1] = v54[4];
      unint64_t v153 = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v149[0] = 0;
      unint64_t v57 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v55 != 2)
      {
        sub_1DC95ADE4();
        uint8x8_t v4 = (void *)type metadata accessor for SNError();
        sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001DLL, 0x80000001DCB917B0);
        swift_willThrow();
        goto LABEL_3;
      }
      unint64_t v150 = v45;
      unint64_t v153 = 0xEA00000000006563;
      unint64_t v57 = 0xE800000000000000;
      qmemcpy(v149, "DetectedConfiden", sizeof(v149));
    }
    uint64_t v58 = *((void *)&v192 + 1);
    if ((~*((void *)&v192 + 1) & 0xF000000000000007) != 0)
    {
      id v82 = (id)(*((void *)&v192 + 1) & 0x7FFFFFFFFFFFFFFFLL);
      sub_1DC95ADE4();
      if (v58 < 0)
      {
        id v87 = v82;
        sub_1DC95AD18();
        sub_1DC947850(v88, v89, v90);
      }
      else
      {
        id v83 = (id)v58;
        sub_1DC95AD18();
        sub_1DC9473EC(v84, v85);
      }
      uint64_t v155 = 0;
      uint64_t v154 = v57;
      uint64_t v145 = *((void *)&v186 + 1);
      uint64_t v91 = v186;
      unint64_t v151 = *(unsigned int *)v187;
      unint64_t v144 = *(unsigned int *)&v187[4];
      uint64_t v148 = *(void *)&v187[8];
      uint64_t v147 = *(void *)&v187[16];
      unint64_t v150 = *(unsigned int *)&v187[24];
      unint64_t v143 = v188;
      uint64_t v146 = v189;
      uint64_t v177 = v186;
      sub_1DC8CB784(v58);
      *(void *)&long long v186 = v91;
      uint64_t v92 = v181;
      uint64_t v174 = v58;
      uint64_t v93 = v185;
      uint64_t v94 = v161;
      sub_1DC8BAE70();
      v95();
      uint64_t v96 = v180;
      *long long v180 = sub_1DC8CD5BC;
      v96[1] = 0;
      sub_1DC8BAE70();
      v97();
      sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
      sub_1DCB87478();
      sub_1DC95AD00();
      v98();
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v94);
      sub_1DC87E988(&qword_1EAAA0BC0);
      sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
      sub_1DCB873D8();
      sub_1DC88D5C8();
      v99();
      sub_1DC88CF34(&qword_1EAAA0C58, (uint64_t *)&unk_1EAAA0C18);
      sub_1DC95AF7C((uint64_t)&v187[8]);
      sub_1DCB873A8();
      swift_release();
      sub_1DC8CB784(v174);
      sub_1DC88D5C8();
      v100();
      uint64_t v101 = v179;
      uint64_t v102 = v176;
      uint64_t v103 = v178;
      goto LABEL_27;
    }
    uint64_t v175 = v43;
    int16x8_t v59 = (void *)(*((uint64_t (**)(uint64_t, uint64_t))&v43 + 1))(ObjectType, v152);
    id v60 = objc_msgSend(v59, sel_inputDescriptionsByName);

    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
    uint64_t v61 = sub_1DCB877B8();

    uint8x8_t v4 = sub_1DC9612B8(v151, v154, v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4)
    {
      id v62 = objc_msgSend(v4, sel_multiArrayConstraint);

      if (v62)
      {
        uint64_t v154 = v57;
        id v63 = objc_msgSend(v62, sel_shape);

        sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
        unint64_t v64 = sub_1DCB87C38();

        uint64_t v65 = sub_1DCB212CC(v64);
        swift_bridgeObjectRelease();
        id v66 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, v65);
        sub_1DCB22DE0(v66);
        unsigned int v68 = v67;

        double v69 = *((double *)&v191 + 1);
        if ((~*((void *)&v191 + 1) & 0x7FF0000000000000) != 0)
        {
          uint64_t v70 = v180;
          if (*((double *)&v191 + 1) > -2147483650.0)
          {
            if (*((double *)&v191 + 1) < 2147483650.0)
            {
              uint64_t v71 = v68;
              uint64_t v72 = sub_1DCB88628();
              unint64_t v151 = v73;
              uint64_t v75 = v74;
              uint64_t v160 = DWORD1(v192);
              uint64_t v76 = sub_1DCB88628();
              unint64_t v150 = v78;
              if (v69 > -9.22337204e18)
              {
                uint64_t v146 = v77;
                uint64_t v147 = v76;
                uint64_t v148 = v75;
                if (v69 < 9.22337204e18)
                {
                  long long v79 = v42[1];
                  long long v193 = *v42;
                  long long v194 = v79;
                  long long v80 = v42[3];
                  long long v195 = v42[2];
                  long long v196 = v80;
                  sub_1DC88D0CC((uint64_t)v42);
                  uint64_t v81 = v155;
                  uint8x8_t v4 = (void *)sub_1DC9A805C(1, (uint64_t)v69);
                  sub_1DC9139C0((uint64_t)v42);
                  uint64_t v155 = v81;
                  if (v81)
                  {
                    sub_1DC95ADCC();
                    sub_1DC95ADE4();
                    sub_1DC8CB730((uint64_t)v190);
                    return (uint64_t)v4;
                  }
                  uint64_t v145 = v72;
                  unint64_t v144 = HIDWORD(v151);
                  unint64_t v143 = HIDWORD(v150);
                  uint64_t v104 = sub_1DC9A7A54();
                  swift_release();
                  *(void *)&long long v186 = v104;
                  sub_1DC8BAE70();
                  v105();
                  *uint64_t v70 = sub_1DC8C94E8;
                  v70[1] = 0;
                  uint64_t v106 = v177;
                  uint64_t v107 = v182;
                  sub_1DC8BAE70();
                  v108();
                  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
                  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
                  uint64_t v159 = v71;
                  sub_1DCB87478();
                  (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v106 + 8))(v70, v107);
                  sub_1DC95AD00();
                  v109();
                  swift_release();
                  sub_1DC87E988(&qword_1EAA9F268);
                  sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
                  sub_1DCB873D8();
                  sub_1DC88D5C8();
                  v110();
                  uint64_t v111 = sub_1DC87E988(&qword_1EAA9E860);
                  uint64_t v112 = v164;
                  sub_1DCB870D8();
                  sub_1DC88D5C8();
                  v113();
                  uint64_t v114 = v166;
                  uint64_t v115 = v170;
                  sub_1DC89DCDC();
                  uint64_t v116 = v171;
                  sub_1DC8E7D10();
                  v117();
                  uint64_t v118 = v168;
                  *(void *)(v115 + *(int *)(v168 + 60)) = v159;
                  *(void *)(v115 + *(int *)(v118 + 64)) = v160;
                  *(void *)(v115 + *(int *)(v118 + 68)) = v111;
                  (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v112, v116);
                  sub_1DC87E988(&qword_1EAAA0BC0);
                  sub_1DC88CF34(&qword_1EAAA0C28, &qword_1EAAA0BF0);
                  sub_1DCB873D8();
                  uint64_t v119 = sub_1DC89DCDC();
                  sub_1DC88CC04(v119, v120);
                  sub_1DC88CF34(&qword_1EAAA0C30, &qword_1EAAA0BF8);
                  sub_1DCB873A8();
                  sub_1DC88D5C8();
                  v121();
                  uint64_t v103 = v178;
                  uint64_t v102 = v176;
                  uint64_t v101 = v179;
LABEL_27:
                  uint8x8_t v4 = v184;
                  uint64_t v122 = v155;
                  sub_1DC9F3A40();
                  if (v122)
                  {
                    sub_1DC95ADCC();
                    swift_release();
                    sub_1DC95ADE4();
                    sub_1DC8CB730((uint64_t)v190);
                  }
                  else
                  {
                    uint64_t v124 = v123;
                    uint64_t v125 = swift_allocObject();
                    *(void *)(v125 + 16) = v124;
                    type metadata accessor for RecursiveMLModel();
                    swift_allocObject();
                    swift_retain();
                    uint64_t v126 = swift_unknownObjectRetain();
                    uint64_t v127 = sub_1DCA8817C(v126, v152);
                    sub_1DC99C440((uint64_t)v127, (uint64_t)&off_1F38033C8);
                    swift_release();
                    swift_release();
                    uint64_t v128 = swift_allocObject();
                    *(void *)(v128 + 16) = v147;
                    int v129 = v143;
                    *(_DWORD *)(v128 + 24) = v150;
                    *(_DWORD *)(v128 + 28) = v129;
                    uint64_t v130 = v149[1];
                    *(void *)(v128 + 32) = v146;
                    *(void *)(v128 + 40) = v130;
                    uint64_t v131 = v149[0];
                    *(void *)(v128 + 48) = v153;
                    *(void *)(v128 + 56) = v131;
                    uint64_t v132 = v145;
                    *(void *)(v128 + 64) = v154;
                    *(void *)(v128 + 72) = v132;
                    LODWORD(v132) = v144;
                    *(_DWORD *)(v128 + 80) = v151;
                    *(_DWORD *)(v128 + 84) = v132;
                    *(void *)(v128 + 88) = v148;
                    *(void *)(v128 + 96) = sub_1DC95A8E0;
                    *(void *)(v128 + 104) = v125;
                    long long v133 = v190[0];
                    long long v134 = v190[1];
                    long long v135 = v192;
                    *(_OWORD *)(v128 + 144) = v191;
                    *(_OWORD *)(v128 + 160) = v135;
                    *(_OWORD *)(v128 + 112) = v133;
                    *(_OWORD *)(v128 + 128) = v134;
                    uint64_t v136 = v163;
                    uint64_t v137 = v103;
                    uint64_t v138 = v162;
                    sub_1DC8E7D10();
                    v139();
                    uint64_t v140 = (double (**)@<D0>(uint64_t@<X8>))(v136 + *(int *)(v102 + 52));
                    *uint64_t v140 = sub_1DC8C9A5C;
                    v140[1] = 0;
                    uint64_t v141 = (void (**)(void **@<X0>, uint64_t *@<X1>, uint64_t@<X8>))(v136 + *(int *)(v102 + 56));
                    *uint64_t v141 = sub_1DC957724;
                    v141[1] = (void (*)(void **@<X0>, uint64_t *@<X1>, uint64_t@<X8>))v128;
                    swift_retain();
                    sub_1DC8CB6DC((uint64_t)v190);
                    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v137, v138);
                    sub_1DC88CF34(&qword_1EAAA0C38, &qword_1EAAA0C08);
                    uint8x8_t v4 = (void *)sub_1DCB873A8();
                    sub_1DC8CB730((uint64_t)v190);
                    swift_release();
                    swift_release();
                    sub_1DC88CC04(v136, &qword_1EAAA0C08);
                  }
                  return (uint64_t)v4;
                }
                goto LABEL_34;
              }
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
              goto LABEL_35;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_32;
      }
    }
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v86 = 0;
    swift_willThrow();
    sub_1DC95ADCC();
    swift_bridgeObjectRelease();
LABEL_3:
    sub_1DC8CB730((uint64_t)v190);
    return (uint64_t)v4;
  }
LABEL_35:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1DC93E790(const void *a1, uint64_t a2)
{
  __dst[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  long long __dst[4] = sub_1DC9575A0();
  char v4 = sub_1DCB86C78();
  sub_1DC8818D0((uint64_t)__dst);
  if (v4)
  {
    memcpy(__dst, a1, 0x49uLL);
    uint64_t v15 = &unk_1F37E2540;
    uint64_t v16 = &off_1F37E2468;
    uint64_t v5 = swift_allocObject();
    v14[0] = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v5 + 32) = v7;
    *(void *)(v5 + 48) = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC8D296C();
  }
  else
  {
    memcpy(__dst, a1, 0x49uLL);
    uint64_t v15 = &unk_1F37E2540;
    uint64_t v16 = &off_1F37E2520;
    uint64_t v9 = swift_allocObject();
    v14[0] = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v9 + 32) = v11;
    *(void *)(v9 + 48) = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC8D2B6C();
  }
  uint64_t v12 = v8;
  sub_1DC8818D0((uint64_t)v14);
  return v12;
}

void *sub_1DC93E8F8(void *a1)
{
  return sub_1DC905DD0(a1);
}

void sub_1DC93E91C()
{
}

uint64_t sub_1DC93E96C(uint64_t a1, uint64_t a2)
{
  v16[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  v16[4] = sub_1DC9575A0();
  char v5 = sub_1DCB86C78();
  sub_1DC8818D0((uint64_t)v16);
  if (v5)
  {
    uint64_t v6 = type metadata accessor for _SNClassifySoundRequest();
    memcpy(__dst, (const void *)a1, sizeof(__dst));
    memcpy(v17, (const void *)(a1 + 120), 0x41uLL);
    uint64_t v7 = a2;
    uint64_t v8 = v6;
    uint64_t v9 = sub_1DC949234((uint64_t)__dst, (uint64_t)v17, v7);
    if (!v2) {
      return v9;
    }
  }
  else
  {
    memcpy(v16, (const void *)a1, 0xB9uLL);
    v15[3] = &unk_1F37E2540;
    v15[4] = &off_1F37E2520;
    uint64_t v10 = swift_allocObject();
    v15[0] = v10;
    uint64_t v11 = *(void *)(a2 + 32);
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v10 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v10 + 32) = v12;
    *(void *)(v10 + 48) = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DCA1C9F0();
    uint64_t v8 = v13;
    sub_1DC8818D0((uint64_t)v15);
  }
  return v8;
}

uint64_t sub_1DC93EAC0(const void *a1, uint64_t a2, uint64_t (*a3)(void *, void *), uint64_t (*a4)(void *, void *))
{
  __dst[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  long long __dst[4] = sub_1DC9575A0();
  char v8 = sub_1DCB86C78();
  sub_1DC8818D0((uint64_t)__dst);
  if (v8)
  {
    memcpy(__dst, a1, 0x41uLL);
    uint64_t v19 = &unk_1F37E2540;
    uint64_t v20 = &off_1F37E2468;
    uint64_t v9 = swift_allocObject();
    v18[0] = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v9 + 32) = v11;
    *(void *)(v9 + 48) = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v12 = a3(__dst, v18);
  }
  else
  {
    memcpy(__dst, a1, 0x41uLL);
    uint64_t v19 = &unk_1F37E2540;
    uint64_t v20 = &off_1F37E2520;
    uint64_t v13 = swift_allocObject();
    v18[0] = v13;
    uint64_t v14 = *(void *)(a2 + 32);
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v13 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v13 + 32) = v15;
    *(void *)(v13 + 48) = v14;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v12 = a4(__dst, v18);
  }
  uint64_t v16 = v12;
  sub_1DC8818D0((uint64_t)v18);
  return v16;
}

uint64_t sub_1DC93EC40(const void *a1, uint64_t a2)
{
  __dst[3] = &type metadata for RuntimeFeatureFlags.SoundAnalysis;
  long long __dst[4] = sub_1DC9575A0();
  char v4 = sub_1DCB86C78();
  sub_1DC8818D0((uint64_t)__dst);
  if (v4)
  {
    memcpy(__dst, a1, 0x79uLL);
    long long v15 = &unk_1F37E2540;
    uint64_t v16 = &off_1F37E2468;
    uint64_t v5 = swift_allocObject();
    v14[0] = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v5 + 32) = v7;
    *(void *)(v5 + 48) = v6;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v8 = sub_1DCA7F8D4(__dst, v14);
  }
  else
  {
    memcpy(__dst, a1, 0x79uLL);
    long long v15 = &unk_1F37E2540;
    uint64_t v16 = &off_1F37E2520;
    uint64_t v9 = swift_allocObject();
    v14[0] = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v9 + 32) = v11;
    *(void *)(v9 + 48) = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v8 = sub_1DCA7FAF8(__dst, (uint64_t)v14);
  }
  uint64_t v12 = v8;
  sub_1DC8818D0((uint64_t)v14);
  return v12;
}

uint64_t sub_1DC93EDA8(uint64_t a1, uint64_t a2)
{
  v3[143] = v2;
  v3[142] = a2;
  v3[141] = a1;
  return MEMORY[0x1F4188298](sub_1DC93EDD0, 0, 0);
}

uint64_t sub_1DC93EDD0()
{
  if (sub_1DCA46698())
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();

    sub_1DC95AD50();
    if (v1)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      char v4 = v2;
      swift_bridgeObjectRelease();
      if ((v4 & 1) == 0)
      {
LABEL_9:
        sub_1DC957B28(v0[143], (uint64_t)(v0 + 29));
        sub_1DC957B28((uint64_t)(v0 + 29), (uint64_t)(v0 + 2));
        if (sub_1DC957B84((uint64_t)(v0 + 2)) == 1)
        {
          uint64_t v6 = (void *)nullsub_1(v0 + 2);
          uint64_t v7 = v6[1];
          v0[109] = *v6;
          v0[110] = v7;
          memcpy(v0 + 111, v6 + 2, 0xC0uLL);
          memcpy(v0 + 83, v0 + 109, 0xD0uLL);
          sub_1DC957B28((uint64_t)(v0 + 29), (uint64_t)(v0 + 56));
          uint64_t v8 = nullsub_1(v0 + 56);
          sub_1DC957B8C(v8);
          sub_1DCA46AC4();
          uint64_t v9 = v0[142];
          v0[138] = &unk_1F37E2540;
          v0[139] = &off_1F37E24B0;
          v0[140] = &off_1F37E2490;
          uint64_t v10 = swift_allocObject();
          v0[135] = v10;
          uint64_t v11 = *(void *)(v9 + 32);
          long long v12 = *(_OWORD *)(v9 + 16);
          *(_OWORD *)(v10 + 16) = *(_OWORD *)v9;
          *(_OWORD *)(v10 + 32) = v12;
          *(void *)(v10 + 48) = v11;
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1DCA4D27C();
          sub_1DC957D00((uint64_t)(v0 + 109));
          sub_1DC8818D0((uint64_t)(v0 + 135));
        }
        else
        {
          char v16 = *(unsigned char *)nullsub_1(v0 + 2);
          char v17 = sub_1DCA46AC4();
          uint64_t v18 = (long long *)v0[142];
          uint64_t v19 = v0[141];
          if (v17) {
            sub_1DC950444((uint64_t)v18, v16, v19);
          }
          else {
            sub_1DC9507C0(v18, v16, v19);
          }
        }
        sub_1DC8BAB84();
        goto LABEL_13;
      }
    }
    uint64_t v5 = MGGetProductType();
    if (sub_1DC983400(v5)) {
      goto LABEL_9;
    }
    sub_1DC957ADC();
    swift_allocError();
    *uint64_t v13 = 7;
  }
  else
  {
    sub_1DC957ADC();
    swift_allocError();
    *uint64_t v3 = 0;
  }
  swift_willThrow();
  sub_1DC8BA978();
LABEL_13:
  return v14();
}

uint64_t sub_1DC93F104(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return MEMORY[0x1F4188298](sub_1DC93F124, 0, 0);
}

uint64_t sub_1DC93F124()
{
  if (sub_1DC9D96B0())
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();

    sub_1DC95AD50();
    if (v1)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      char v4 = v2;
      swift_bridgeObjectRelease();
      if ((v4 & 1) == 0)
      {
LABEL_9:
        char v6 = sub_1DC9D9968();
        uint64_t v7 = *(void *)(v0 + 72);
        if (v6)
        {
          *(void *)(v0 + 40) = &unk_1F37E2540;
          *(void *)(v0 + 48) = &off_1F37E24B0;
          *(void *)(v0 + 56) = &off_1F37E2490;
          uint64_t v8 = swift_allocObject();
          *(void *)(v0 + 16) = v8;
          uint64_t v9 = *(void *)(v7 + 32);
          long long v10 = *(_OWORD *)(v7 + 16);
          *(_OWORD *)(v8 + 16) = *(_OWORD *)v7;
          *(_OWORD *)(v8 + 32) = v10;
          *(void *)(v8 + 48) = v9;
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1DC9DB918();
          sub_1DC8818D0(v0 + 16);
        }
        else
        {
          sub_1DC945A04(*(long long **)(v0 + 72), *(char **)(v0 + 64));
        }
        sub_1DC8BAB84();
        goto LABEL_13;
      }
    }
    uint64_t v5 = MGGetProductType();
    if (sub_1DC983400(v5)) {
      goto LABEL_9;
    }
    char v3 = 5;
  }
  else
  {
    char v3 = 0;
  }
  sub_1DC958C74();
  swift_allocError();
  *uint64_t v11 = v3;
  swift_willThrow();
  sub_1DC8BA978();
LABEL_13:
  return v12();
}

void sub_1DC93F348()
{
  sub_1DC89D9F8();
  uint64_t v4 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  uint64_t v8 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v9 = sub_1DC8BADF0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1DC95AD34();
  uint64_t v10 = type metadata accessor for AOPClassificationDemo.Request();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v11);
  sub_1DC8C1FC4();
  char v12 = type metadata accessor for RemoteRequest();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v13);
  sub_1DC909E14();
  sub_1DC8EF710((uint64_t)v0, (uint64_t)v0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v68 = v0[1];
      uint64_t v21 = v0[2];
      uint64_t v22 = v0[3];
      uint64_t v23 = v0[4];
      uint64_t v24 = v0[5];
      uint64_t v25 = v0[6];
      char v26 = *((unsigned char *)v0 + 56);
      char v64 = *((unsigned char *)v0 + 57);
      sub_1DC95ACE8();
      sub_1DCB891B8();
      v72[0] = v68;
      v72[1] = v21;
      v72[2] = v22;
      v72[3] = v23;
      v72[4] = v24;
      v72[5] = v25;
      LOBYTE(v72[6]) = v26;
      BYTE1(v72[6]) = v64;
      sub_1DC95AB5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 2u:
    case 3u:
      sub_1DC95AAF0();
      sub_1DC95ACE8();
      v72[0] = v62;
      v72[1] = v4;
      v72[2] = v2;
      v72[3] = v1;
      v72[4] = v3;
      v72[5] = v10;
      LOBYTE(v72[6]) = (_BYTE)v0;
      BYTE1(v72[6]) = v12;
      sub_1DC95AB5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4u:
      memcpy(v72, v0, 0x79uLL);
      sub_1DC95ACE8();
      memcpy(v71, v72, 0x79uLL);
      sub_1DCA7DF24();
      sub_1DC957448((uint64_t)v72);
      break;
    case 5u:
      uint64_t v27 = *v0;
      uint64_t v28 = v0[1];
      uint64_t v65 = v0[3];
      uint64_t v69 = v0[4];
      char v60 = *((unsigned char *)v0 + 40);
      uint64_t v29 = v0[7];
      uint64_t v30 = v0[9];
      uint64_t v54 = v0[8];
      uint64_t v57 = v0[6];
      uint64_t v31 = v0[11];
      uint64_t v51 = v0[10];
      char v49 = *((unsigned char *)v0 + 96);
      char v45 = *((unsigned char *)v0 + 98);
      char v47 = *((unsigned char *)v0 + 97);
      char v43 = *((unsigned char *)v0 + 100);
      char v44 = *((unsigned char *)v0 + 99);
      char v42 = *((unsigned char *)v0 + 101);
      uint64_t v41 = v0[13];
      char v40 = *((unsigned char *)v0 + 112);
      char v32 = *((unsigned char *)v0 + 16);
      sub_1DC95ACE8();
      v72[0] = v27;
      v72[1] = v28;
      LOBYTE(v72[2]) = v32;
      v72[3] = v65;
      v72[4] = v69;
      LOBYTE(v72[5]) = v60;
      v72[6] = v57;
      v72[7] = v29;
      v72[8] = v54;
      v72[9] = v30;
      v72[10] = v51;
      v72[11] = v31;
      LOBYTE(v72[12]) = v49;
      BYTE1(v72[12]) = v47;
      BYTE2(v72[12]) = v45;
      BYTE3(v72[12]) = v44;
      BYTE4(v72[12]) = v43;
      BYTE5(v72[12]) = v42;
      v72[13] = v41;
      LOBYTE(v72[14]) = v40;
      sub_1DC8C551C();
      sub_1DC882BC4(v27, v28, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 6u:
      uint64_t v33 = v0[3];
      uint64_t v70 = v0[2];
      uint64_t v35 = v0[4];
      uint64_t v34 = v0[5];
      uint64_t v37 = v0[6];
      uint64_t v36 = v0[7];
      char v66 = *((unsigned char *)v0 + 64);
      char v61 = *((unsigned char *)v0 + 65);
      char v58 = *((unsigned char *)v0 + 66);
      char v55 = *((unsigned char *)v0 + 67);
      char v52 = *((unsigned char *)v0 + 68);
      char v50 = *((unsigned char *)v0 + 69);
      uint64_t v48 = v0[9];
      char v46 = *((unsigned char *)v0 + 80);
      sub_1DC95ACE8();
      swift_bridgeObjectRetain();
      sub_1DCB879B8();
      swift_bridgeObjectRelease();
      v72[0] = v70;
      v72[1] = v33;
      v72[2] = v35;
      v72[3] = v34;
      v72[4] = v37;
      v72[5] = v36;
      LOBYTE(v72[6]) = v66;
      BYTE1(v72[6]) = v61;
      BYTE2(v72[6]) = v58;
      BYTE3(v72[6]) = v55;
      BYTE4(v72[6]) = v52;
      BYTE5(v72[6]) = v50;
      v72[7] = v48;
      LOBYTE(v72[8]) = v46;
      AudioConfiguration.hash(into:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      break;
    case 7u:
      memcpy(v71, v0, 0xD1uLL);
      sub_1DC95ACE8();
      sub_1DC957B28((uint64_t)v71, (uint64_t)v72);
      int v38 = sub_1DC957B84((uint64_t)v72);
      uint64_t v39 = nullsub_1(v72);
      if (v38 == 1)
      {
        memcpy(v73, (const void *)(v39 + 16), sizeof(v73));
        sub_1DCB891B8();
        sub_1DCB879B8();
        sub_1DCA4F660();
      }
      else
      {
        sub_1DCB891B8();
        sub_1DCB891B8();
      }
      sub_1DC943A04((uint64_t)v71);
      break;
    case 8u:
      sub_1DC959498((uint64_t)v0, v2, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
      sub_1DCB891B8();
      sub_1DC8B9F3C(v2, v3, qword_1EAA9CBC0);
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v3, 1, v4) == 1)
      {
        sub_1DCB891C8();
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v3, v4);
        sub_1DCB891C8();
        sub_1DC959450((unint64_t *)&qword_1EAAABA60, MEMORY[0x1E4F276F0]);
        sub_1DCB87818();
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
      }
      sub_1DCB891C8();
      sub_1DC957E74(v2, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
      break;
    case 9u:
    case 0xAu:
      sub_1DCB891B8();
      break;
    default:
      memcpy(v72, v0, 0xB9uLL);
      sub_1DC95ACE8();
      long long v63 = *(_OWORD *)&v72[17];
      long long v67 = *(_OWORD *)&v72[15];
      uint64_t v14 = v72[20];
      char v15 = v72[21];
      char v16 = BYTE1(v72[21]);
      char v17 = BYTE2(v72[21]);
      char v18 = BYTE3(v72[21]);
      char v19 = BYTE4(v72[21]);
      char v20 = BYTE5(v72[21]);
      uint64_t v56 = v72[22];
      uint64_t v59 = v72[19];
      char v53 = v72[23];
      WORD3(v71[3]) = HIWORD(v72[6]);
      *(void *)&v71[4] = v72[8];
      *(_OWORD *)((char *)&v71[4] + 8) = *(_OWORD *)&v72[9];
      *(_OWORD *)((char *)&v71[5] + 8) = *(_OWORD *)&v72[11];
      BYTE8(v71[6]) = v72[13];
      *(void *)&v71[7] = v72[14];
      sub_1DCA19528();
      v71[0] = v67;
      v71[1] = v63;
      *(void *)&v71[2] = v59;
      *((void *)&v71[2] + 1) = v14;
      LOBYTE(v71[3]) = v15;
      BYTE1(v71[3]) = v16;
      BYTE2(v71[3]) = v17;
      BYTE3(v71[3]) = v18;
      BYTE4(v71[3]) = v19;
      BYTE5(v71[3]) = v20;
      *((void *)&v71[3] + 1) = v56;
      LOBYTE(v71[4]) = v53;
      AudioConfiguration.hash(into:)();
      sub_1DC9574E0((uint64_t)v72);
      break;
  }
  sub_1DC89DA54();
}

void sub_1DC93FAE8()
{
  sub_1DC89D9F8();
  uint64_t v196 = v3;
  uint64_t v197 = v4;
  uint64_t v5 = type metadata accessor for AOPClassificationDemo.Request();
  uint64_t v6 = sub_1DC8BADF0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v192 = v7;
  uint64_t v8 = (void *)type metadata accessor for RemoteRequest();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v9);
  sub_1DC888120();
  uint64_t v195 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC91990C();
  long long v194 = (const void *)v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC95AF68();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v168 - v16;
  MEMORY[0x1F4188790](v15);
  sub_1DC91990C();
  long long v193 = (const void *)v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC95AF54();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v168 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  char v26 = (char *)&v168 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v168 - v27;
  uint64_t v29 = sub_1DC87E988(&qword_1EAAA13E0);
  uint64_t v30 = sub_1DC8BADF0(v29);
  MEMORY[0x1F4188790](v30);
  sub_1DC909E14();
  uint64_t v32 = v0 + *(int *)(v31 + 56);
  sub_1DC8EF710(v196, v0);
  uint64_t v33 = v197;
  uint64_t v197 = v32;
  sub_1DC8EF710(v33, v32);
  v198 = (char *)v0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DC8EF710((uint64_t)v198, (uint64_t)v26);
      uint64_t v35 = *((void *)v26 + 1);
      uint64_t v36 = *((void *)v26 + 2);
      uint64_t v37 = *((void *)v26 + 4);
      long long v193 = (const void *)*((void *)v26 + 3);
      long long v194 = (const void *)*((void *)v26 + 5);
      uint64_t v195 = v35;
      uint64_t v196 = *((void *)v26 + 6);
      LODWORD(v192) = v26[56];
      LODWORD(v191) = v26[57];
      LODWORD(v190) = v26[58];
      char v38 = v26[59];
      char v39 = v26[60];
      char v40 = v26[61];
      uint64_t v41 = *((void *)v26 + 8);
      char v42 = v26[72];
      if (sub_1DC95AE24() != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      char v43 = v39;
      uint64_t v44 = *(void *)v26;
      uint64_t v45 = v8[2];
      uint64_t v46 = v8[4];
      uint64_t v47 = v8[6];
      if (v44 == *v8)
      {
        char v48 = v40;
        char v49 = v38;
        LODWORD(v189) = *((unsigned __int8 *)v8 + 72);
        uint64_t v188 = v8[8];
        char v50 = *((unsigned char *)v8 + 61);
        char v51 = *((unsigned char *)v8 + 60);
        char v52 = *((unsigned char *)v8 + 59);
        char v53 = *((unsigned char *)v8 + 58);
        char v54 = *((unsigned char *)v8 + 57);
        char v55 = *((unsigned char *)v8 + 56);
        uint64_t v56 = v8[5];
        uint64_t v57 = v8[3];
        uint64_t v58 = v8[1];
        *(void *)&v218[0] = v195;
        *((void *)&v218[0] + 1) = v36;
        *(void *)&v218[1] = v193;
        *((void *)&v218[1] + 1) = v37;
        *(void *)&v218[2] = v194;
        *((void *)&v218[2] + 1) = v196;
        LOBYTE(v218[3]) = v192;
        BYTE1(v218[3]) = v191;
        BYTE2(v218[3]) = v190;
        BYTE3(v218[3]) = v49;
        BYTE4(v218[3]) = v43;
        BYTE5(v218[3]) = v48;
        *((void *)&v218[3] + 1) = v41;
        LOBYTE(v218[4]) = v42;
        *(void *)&v217[0] = v58;
        *((void *)&v217[0] + 1) = v45;
        *(void *)&v217[1] = v57;
        *((void *)&v217[1] + 1) = v46;
        *(void *)&v217[2] = v56;
        *((void *)&v217[2] + 1) = v47;
        LOBYTE(v217[3]) = v55;
        BYTE1(v217[3]) = v54;
        BYTE2(v217[3]) = v53;
        BYTE3(v217[3]) = v52;
        BYTE4(v217[3]) = v51;
        BYTE5(v217[3]) = v50;
        *((void *)&v217[3] + 1) = v188;
        LOBYTE(v217[4]) = v189;
        char v59 = static AudioConfiguration.== infix(_:_:)((uint64_t)v218, (uint64_t)v217);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_57;
    case 2u:
      uint64_t v60 = sub_1DC95AD0C();
      sub_1DC8EF710(v60, (uint64_t)v23);
      uint64_t v61 = *((void *)v23 + 1);
      uint64_t v62 = *((void *)v23 + 3);
      if (sub_1DC95AE24() != 2) {
        goto LABEL_40;
      }
      char v63 = v23[64];
      uint64_t v64 = *((void *)v23 + 4);
      uint64_t v65 = *((void *)v23 + 2);
      uint64_t v66 = *(void *)v23;
      uint64_t v67 = *v8;
      uint64_t v68 = v8[2];
      uint64_t v69 = v8[4];
      uint64_t v70 = v8[5];
      char v71 = *((unsigned char *)v8 + 52);
      char v72 = *((unsigned char *)v8 + 53);
      *(void *)&v218[0] = v66;
      *((void *)&v218[0] + 1) = v61;
      *(void *)&v218[1] = v65;
      *((void *)&v218[1] + 1) = v62;
      *(void *)&v218[2] = v64;
      sub_1DC95AC38(v67, v68, v69, v63);
      *((void *)&v217[2] + 1) = v70;
      LOBYTE(v217[3]) = v73;
      BYTE1(v217[3]) = v74;
      BYTE2(v217[3]) = v75;
      BYTE3(v217[3]) = v76;
      BYTE4(v217[3]) = v71;
      BYTE5(v217[3]) = v72;
      *((void *)&v217[3] + 1) = v77;
      sub_1DC95AE88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 3u:
      uint64_t v78 = sub_1DC95AD0C();
      sub_1DC8EF710(v78, v1);
      uint64_t v79 = *(void *)(v1 + 8);
      uint64_t v80 = *(void *)(v1 + 24);
      if (sub_1DC95AE24() != 3)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      char v81 = *(unsigned char *)(v1 + 64);
      uint64_t v82 = *(void *)(v1 + 32);
      uint64_t v83 = *(void *)(v1 + 16);
      uint64_t v84 = *(void *)v1;
      uint64_t v85 = *v8;
      uint64_t v86 = v8[2];
      uint64_t v87 = v8[4];
      uint64_t v88 = v8[5];
      char v89 = *((unsigned char *)v8 + 52);
      char v90 = *((unsigned char *)v8 + 53);
      *(void *)&v218[0] = v84;
      *((void *)&v218[0] + 1) = v79;
      *(void *)&v218[1] = v83;
      *((void *)&v218[1] + 1) = v80;
      *(void *)&v218[2] = v82;
      sub_1DC95AC38(v85, v86, v87, v81);
      *((void *)&v217[2] + 1) = v88;
      LOBYTE(v217[3]) = v91;
      BYTE1(v217[3]) = v92;
      BYTE2(v217[3]) = v93;
      BYTE3(v217[3]) = v94;
      BYTE4(v217[3]) = v89;
      BYTE5(v217[3]) = v90;
      *((void *)&v217[3] + 1) = v95;
      sub_1DC95AE88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v96 = (uint64_t)v198;
      goto LABEL_59;
    case 4u:
      uint64_t v97 = sub_1DC95AD0C();
      uint64_t v98 = v193;
      sub_1DC8EF710(v97, (uint64_t)v193);
      memcpy(v218, v98, 0x79uLL);
      if (sub_1DC95ACCC() != 4)
      {
        sub_1DC957448((uint64_t)v218);
        goto LABEL_47;
      }
      memcpy(v217, v98, 0x79uLL);
      long long v208 = v218[0];
      long long v209 = v218[1];
      long long v210 = v218[2];
      uint64_t v211 = *(void *)&v218[3];
      long long v199 = v217[0];
      long long v200 = v217[1];
      long long v201 = v217[2];
      uint64_t v202 = *(void *)&v217[3];
      if (sub_1DCA7D81C((uint64_t)&v208, (uint64_t)&v199))
      {
        long long v208 = *(long long *)((char *)&v218[3] + 8);
        long long v209 = *(long long *)((char *)&v218[4] + 8);
        long long v210 = *(long long *)((char *)&v218[5] + 8);
        LODWORD(v211) = DWORD2(v218[6]);
        WORD2(v211) = WORD6(v218[6]);
        *(void *)&long long v212 = *(void *)&v218[7];
        BYTE8(v212) = BYTE8(v218[7]);
        long long v199 = *(long long *)((char *)&v217[3] + 8);
        long long v200 = *(long long *)((char *)&v217[4] + 8);
        char v99 = sub_1DC95ABF0(*(__n128 *)((char *)&v217[5] + 8), *((uint64_t *)&v217[4] + 1), *(uint64_t *)&v217[5], BYTE8(v217[6]), BYTE9(v217[6]), BYTE10(v217[6]), BYTE11(v217[6]), BYTE12(v217[6]), BYTE13(v217[6]));
        sub_1DC957448((uint64_t)v217);
        sub_1DC957448((uint64_t)v218);
        if (v99) {
          goto LABEL_38;
        }
      }
      else
      {
        sub_1DC957448((uint64_t)v217);
        sub_1DC957448((uint64_t)v218);
      }
      goto LABEL_55;
    case 5u:
      sub_1DC8EF710((uint64_t)v198, (uint64_t)v17);
      uint64_t v100 = *(void *)v17;
      uint64_t v101 = *((void *)v17 + 1);
      LODWORD(v192) = v17[16];
      uint64_t v102 = *((void *)v17 + 4);
      uint64_t v195 = v101;
      uint64_t v196 = v102;
      uint64_t v190 = *((void *)v17 + 6);
      uint64_t v191 = v100;
      uint64_t v103 = *((void *)v17 + 7);
      uint64_t v104 = *((void *)v17 + 8);
      uint64_t v105 = *((void *)v17 + 9);
      uint64_t v188 = *((void *)v17 + 10);
      uint64_t v189 = v104;
      uint64_t v106 = *((void *)v17 + 11);
      long long v193 = (const void *)v103;
      long long v194 = (const void *)v106;
      LODWORD(v187) = v17[96];
      LODWORD(v186) = v17[97];
      int v107 = v17[98];
      int v108 = v17[99];
      int v109 = v17[100];
      int v110 = v17[101];
      uint64_t v111 = *((void *)v17 + 13);
      int v112 = v17[112];
      if (sub_1DC95AE24() != 5)
      {
        sub_1DC882BC4(v191, v195, v192);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      LODWORD(v177) = v112;
      uint64_t v178 = v111;
      int v179 = v110;
      int v180 = v109;
      int v181 = v108;
      int v182 = v107;
      char v113 = v17[40];
      uint64_t v114 = *((void *)v17 + 3);
      uint64_t v115 = *v8;
      uint64_t v116 = v8[1];
      char v117 = *((unsigned char *)v8 + 16);
      uint64_t v118 = v8[3];
      uint64_t v119 = v8[4];
      char v120 = *((unsigned char *)v8 + 40);
      uint64_t v121 = v8[6];
      uint64_t v184 = v8[7];
      uint64_t v185 = v105;
      uint64_t v122 = v8[8];
      uint64_t v183 = v8[9];
      uint64_t v123 = v8[11];
      uint64_t v175 = v8[10];
      uint64_t v176 = v122;
      LODWORD(v122) = *((unsigned __int8 *)v8 + 96);
      int v173 = *((unsigned __int8 *)v8 + 97);
      int v174 = v122;
      LODWORD(v122) = *((unsigned __int8 *)v8 + 98);
      int v171 = *((unsigned __int8 *)v8 + 99);
      int v172 = v122;
      LODWORD(v122) = *((unsigned __int8 *)v8 + 100);
      int v169 = *((unsigned __int8 *)v8 + 101);
      int v170 = v122;
      uint64_t v168 = v8[13];
      uint64_t v124 = v191;
      *(void *)&v218[0] = v191;
      *((void *)&v218[0] + 1) = v195;
      char v125 = v192;
      LOBYTE(v218[1]) = v192;
      *((void *)&v218[1] + 1) = v114;
      *(void *)&v218[2] = v196;
      BYTE8(v218[2]) = v113;
      *(void *)&v217[0] = v115;
      *((void *)&v217[0] + 1) = v116;
      LOBYTE(v217[1]) = v117;
      *((void *)&v217[1] + 1) = v118;
      *(void *)&v217[2] = v119;
      BYTE8(v217[2]) = v120;
      if (sub_1DC8C4BE0(v218, v217))
      {
        *(void *)&v218[0] = v190;
        uint64_t v197 = v119;
        *((void *)&v218[0] + 1) = v193;
        *(void *)&v218[1] = v189;
        *((void *)&v218[1] + 1) = v185;
        *(void *)&v218[2] = v188;
        *((void *)&v218[2] + 1) = v194;
        LOBYTE(v218[3]) = v187;
        BYTE1(v218[3]) = v186;
        BYTE2(v218[3]) = v182;
        BYTE3(v218[3]) = v181;
        BYTE4(v218[3]) = v180;
        BYTE5(v218[3]) = v179;
        *((void *)&v218[3] + 1) = v178;
        LOBYTE(v218[4]) = v177;
        *(void *)&v217[0] = v121;
        *((void *)&v217[0] + 1) = v184;
        *(void *)&v217[1] = v176;
        *((void *)&v217[1] + 1) = v183;
        *(void *)&v217[2] = v175;
        *((void *)&v217[2] + 1) = v123;
        LOBYTE(v217[3]) = v174;
        BYTE1(v217[3]) = v173;
        BYTE2(v217[3]) = v172;
        BYTE3(v217[3]) = v171;
        BYTE4(v217[3]) = v170;
        BYTE5(v217[3]) = v169;
        *((void *)&v217[3] + 1) = v168;
        char v59 = sub_1DC95AE88();
        sub_1DC882BC4(v115, v116, v117);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DC882BC4(v124, v195, v125);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      sub_1DC882BC4(v115, v116, v117);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC882BC4(v124, v195, v125);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_57;
    case 6u:
      sub_1DC8EF710((uint64_t)v198, v2);
      uint64_t v129 = *(void *)v2;
      uint64_t v130 = *(void *)(v2 + 8);
      uint64_t v132 = *(void *)(v2 + 24);
      uint64_t v131 = *(void *)(v2 + 32);
      uint64_t v191 = *(void *)(v2 + 16);
      uint64_t v192 = v131;
      uint64_t v133 = *(void *)(v2 + 40);
      long long v193 = *(const void **)(v2 + 48);
      long long v194 = (const void *)v129;
      uint64_t v195 = *(void *)(v2 + 56);
      uint64_t v196 = v130;
      LODWORD(v190) = *(unsigned __int8 *)(v2 + 64);
      LODWORD(v189) = *(unsigned __int8 *)(v2 + 65);
      int v134 = *(unsigned __int8 *)(v2 + 66);
      int v135 = *(unsigned __int8 *)(v2 + 67);
      int v136 = *(unsigned __int8 *)(v2 + 68);
      int v137 = *(unsigned __int8 *)(v2 + 69);
      uint64_t v138 = *(void *)(v2 + 72);
      LODWORD(v2) = *(unsigned __int8 *)(v2 + 80);
      if (sub_1DC95AE24() != 6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_45:
        swift_bridgeObjectRelease();
        char v26 = v198;
        goto LABEL_47;
      }
      uint64_t v178 = v138;
      int v179 = v137;
      int v180 = v136;
      int v181 = v135;
      int v182 = v134;
      uint64_t v184 = v133;
      uint64_t v185 = v132;
      uint64_t v139 = (const void *)*v8;
      uint64_t v140 = v8[1];
      uint64_t v141 = v8[2];
      uint64_t v142 = v8[3];
      uint64_t v143 = v8[4];
      uint64_t v183 = v8[5];
      uint64_t v145 = v8[6];
      uint64_t v144 = v8[7];
      uint64_t v186 = v142;
      uint64_t v187 = v144;
      char v146 = *((unsigned char *)v8 + 64);
      char v147 = *((unsigned char *)v8 + 65);
      char v148 = *((unsigned char *)v8 + 66);
      char v149 = *((unsigned char *)v8 + 67);
      char v150 = *((unsigned char *)v8 + 68);
      char v151 = *((unsigned char *)v8 + 69);
      uint64_t v152 = v8[9];
      uint64_t v188 = v140;
      BOOL v153 = v194 == v139 && v196 == v140;
      char v154 = *((unsigned char *)v8 + 80);
      if (v153) {
        goto LABEL_28;
      }
      long long v194 = (const void *)v141;
      uint64_t v177 = v143;
      uint64_t v155 = v145;
      char v156 = v146;
      char v157 = v147;
      char v158 = v148;
      char v159 = v149;
      char v160 = v150;
      char v161 = v151;
      LODWORD(v197) = v2;
      uint64_t v2 = v152;
      char v162 = v154;
      char v163 = sub_1DCB89018();
      uint64_t v143 = v177;
      uint64_t v141 = (uint64_t)v194;
      char v154 = v162;
      uint64_t v152 = v2;
      LOBYTE(v2) = v197;
      char v151 = v161;
      char v150 = v160;
      char v149 = v159;
      char v148 = v158;
      char v147 = v157;
      char v146 = v156;
      uint64_t v145 = v155;
      if (v163)
      {
LABEL_28:
        *(void *)&v218[0] = v191;
        *((void *)&v218[0] + 1) = v185;
        *(void *)&v218[1] = v192;
        *((void *)&v218[1] + 1) = v184;
        *(void *)&v218[2] = v193;
        *((void *)&v218[2] + 1) = v195;
        LOBYTE(v218[3]) = v190;
        BYTE1(v218[3]) = v189;
        BYTE2(v218[3]) = v182;
        BYTE3(v218[3]) = v181;
        BYTE4(v218[3]) = v180;
        BYTE5(v218[3]) = v179;
        *((void *)&v218[3] + 1) = v178;
        LOBYTE(v218[4]) = v2;
        *(void *)&v217[0] = v141;
        *((void *)&v217[0] + 1) = v186;
        *(void *)&v217[1] = v143;
        *((void *)&v217[1] + 1) = v183;
        *(void *)&v217[2] = v145;
        *((void *)&v217[2] + 1) = v187;
        LOBYTE(v217[3]) = v146;
        BYTE1(v217[3]) = v147;
        BYTE2(v217[3]) = v148;
        BYTE3(v217[3]) = v149;
        BYTE4(v217[3]) = v150;
        BYTE5(v217[3]) = v151;
        *((void *)&v217[3] + 1) = v152;
        LOBYTE(v217[4]) = v154;
        char v59 = static AudioConfiguration.== infix(_:_:)((uint64_t)v218, (uint64_t)v217);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_29:
        swift_bridgeObjectRelease();
LABEL_30:
        swift_bridgeObjectRelease();
        if (v59)
        {
          uint64_t v96 = (uint64_t)v198;
          goto LABEL_59;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_57:
        swift_bridgeObjectRelease();
      }
      uint64_t v96 = (uint64_t)v198;
      goto LABEL_59;
    case 7u:
      uint64_t v126 = sub_1DC95AD0C();
      uint64_t v127 = v194;
      sub_1DC8EF710(v126, (uint64_t)v194);
      memcpy(v218, v127, 0xD1uLL);
      if (sub_1DC95ACCC() == 7)
      {
        memcpy(v217, v127, 0xD1uLL);
        sub_1DC957B28((uint64_t)v218, (uint64_t)&v208);
        sub_1DC957B28((uint64_t)v217, (uint64_t)&v199);
        sub_1DCA49CB8((uint64_t)&v208, (uint64_t)&v199);
        sub_1DC943A04((uint64_t)v217);
        sub_1DC943A04((uint64_t)v218);
        goto LABEL_34;
      }
      sub_1DC943A04((uint64_t)v218);
      goto LABEL_47;
    case 8u:
      uint64_t v164 = sub_1DC95AD0C();
      uint64_t v165 = v195;
      sub_1DC8EF710(v164, v195);
      if (sub_1DC95ACCC() != 8)
      {
        sub_1DC957E74(v165, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
        goto LABEL_47;
      }
      uint64_t v166 = v192;
      sub_1DC959498((uint64_t)v8, v192, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
      static AOPClassificationDemo.Request.== infix(_:_:)(v165, v166);
      sub_1DC957E74(v166, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
      sub_1DC957E74(v165, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
LABEL_34:
      uint64_t v96 = (uint64_t)v26;
      goto LABEL_59;
    case 9u:
      BOOL v128 = swift_getEnumCaseMultiPayload() == 9;
      goto LABEL_36;
    case 0xAu:
      BOOL v128 = swift_getEnumCaseMultiPayload() == 10;
LABEL_36:
      char v26 = v198;
      if (!v128) {
        goto LABEL_47;
      }
      goto LABEL_38;
    default:
      uint64_t v34 = sub_1DC95AD0C();
      sub_1DC8EF710(v34, (uint64_t)v28);
      memcpy(v218, v28, 0xB9uLL);
      if (!sub_1DC95ACCC())
      {
        memcpy(v217, v8, 0xB9uLL);
        long long v208 = v218[0];
        LOBYTE(v209) = v218[1];
        *((void *)&v209 + 1) = *((void *)&v218[1] + 1);
        long long v210 = v218[2];
        uint64_t v211 = *(void *)&v218[3];
        long long v212 = *(long long *)((char *)&v218[3] + 8);
        long long v213 = *(long long *)((char *)&v218[4] + 8);
        long long v214 = *(long long *)((char *)&v218[5] + 8);
        char v215 = BYTE8(v218[6]);
        uint64_t v216 = *(void *)&v218[7];
        long long v199 = v217[0];
        LOBYTE(v200) = v217[1];
        *((void *)&v200 + 1) = *((void *)&v217[1] + 1);
        long long v201 = v217[2];
        uint64_t v202 = *(void *)&v217[3];
        long long v203 = *(long long *)((char *)&v217[3] + 8);
        long long v204 = *(long long *)((char *)&v217[4] + 8);
        long long v205 = *(long long *)((char *)&v217[5] + 8);
        char v206 = BYTE8(v217[6]);
        uint64_t v207 = *(void *)&v217[7];
        if (sub_1DCA184B4((uint64_t)&v208, (uint64_t)&v199))
        {
          long long v208 = *(long long *)((char *)&v218[7] + 8);
          long long v209 = *(long long *)((char *)&v218[8] + 8);
          long long v210 = *(long long *)((char *)&v218[9] + 8);
          LODWORD(v211) = DWORD2(v218[10]);
          WORD2(v211) = WORD6(v218[10]);
          *(void *)&long long v212 = *(void *)&v218[11];
          BYTE8(v212) = BYTE8(v218[11]);
          long long v199 = *(long long *)((char *)&v217[7] + 8);
          long long v200 = *(long long *)((char *)&v217[8] + 8);
          char v167 = sub_1DC95ABF0(*(__n128 *)((char *)&v217[9] + 8), *((uint64_t *)&v217[8] + 1), *(uint64_t *)&v217[9], BYTE8(v217[10]), BYTE9(v217[10]), BYTE10(v217[10]), BYTE11(v217[10]), BYTE12(v217[10]), BYTE13(v217[10]));
          sub_1DC9574E0((uint64_t)v217);
          sub_1DC9574E0((uint64_t)v218);
          if (v167)
          {
LABEL_38:
            uint64_t v96 = (uint64_t)v26;
LABEL_59:
            sub_1DC957E74(v96, (void (*)(void))type metadata accessor for RemoteRequest);
            goto LABEL_60;
          }
        }
        else
        {
          sub_1DC9574E0((uint64_t)v217);
          sub_1DC9574E0((uint64_t)v218);
        }
LABEL_55:
        uint64_t v96 = (uint64_t)v26;
        goto LABEL_59;
      }
      sub_1DC9574E0((uint64_t)v218);
LABEL_47:
      sub_1DC88CC04((uint64_t)v26, &qword_1EAAA13E0);
LABEL_60:
      sub_1DC89DA54();
      return;
  }
}

uint64_t sub_1DC940C60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C706D617865 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB935A0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x7455686365657073 && a2 == 0xEF65636E61726574;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6D45686365657073 && a2 == 0xED00006E6F69746FLL;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x76654C6F69647561 && a2 == 0xEA00000000006C65;
        if (v8 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6D617A616873 && a2 == 0xE600000000000000;
          if (v9 || (sub_1DCB89018() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x746544646E756F73 && a2 == 0xEE006E6F69746365;
            if (v10 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001DCB935C0 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DCB935E0 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000019 && a2 == 0x80000001DCB93600 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB93620)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              char v11 = sub_1DCB89018();
              swift_bridgeObjectRelease();
              if (v11) {
                return 10;
              }
              else {
                return 11;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1DC941100()
{
  return 11;
}

unint64_t sub_1DC941108(char a1)
{
  unint64_t result = 0x656C706D617865;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x7455686365657073;
      break;
    case 3:
      unint64_t result = 0x6D45686365657073;
      break;
    case 4:
      unint64_t result = 0x76654C6F69647561;
      break;
    case 5:
      unint64_t result = 0x6D617A616873;
      break;
    case 6:
      unint64_t result = 0x746544646E756F73;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DC941290(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA13E8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC88D550();
  type metadata accessor for AOPClassificationDemo.Request();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v89 = v7;
  sub_1DC87E988(&qword_1EAAA13F0);
  sub_1DC89D4E0();
  uint64_t v78 = v9;
  uint64_t v82 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  uint64_t v65 = v10;
  sub_1DC87E988(&qword_1EAAA13F8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA1400);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA1408);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA1410);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v14);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA1418);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v15);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA1420);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v16);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA1428);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v17);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA1430);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v18);
  sub_1DC88D550();
  uint64_t v19 = sub_1DC87E988(&qword_1EAAA1438);
  sub_1DC89D4E0();
  uint64_t v59 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1DC95AE60();
  uint64_t v22 = type metadata accessor for RemoteRequest();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v23);
  sub_1DC89D9B8();
  uint64_t v105 = sub_1DC87E988(&qword_1EAAA1440);
  sub_1DC89D4E0();
  uint64_t v99 = v24;
  MEMORY[0x1F4188790](v25);
  sub_1DC8C1FC4();
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v27 = (void *)sub_1DC89DCDC();
  sub_1DC881A8C(v27, v28);
  sub_1DC958DC8();
  sub_1DCB892B8();
  sub_1DC8EF710(v100, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v32 = *(void *)(v3 + 16);
      uint64_t v94 = *(void *)(v3 + 8);
      uint64_t v96 = *(void *)v3;
      uint64_t v33 = *(void *)(v3 + 32);
      uint64_t v34 = *(void *)(v3 + 48);
      uint64_t v90 = *(void *)(v3 + 40);
      uint64_t v92 = *(void *)(v3 + 24);
      char v86 = *(unsigned char *)(v3 + 56);
      char v83 = *(unsigned char *)(v3 + 57);
      char v79 = *(unsigned char *)(v3 + 58);
      char v75 = *(unsigned char *)(v3 + 59);
      char v72 = *(unsigned char *)(v3 + 60);
      char v70 = *(unsigned char *)(v3 + 61);
      uint64_t v68 = *(void *)(v3 + 64);
      char v35 = *(unsigned char *)(v3 + 72);
      sub_1DC959288();
      sub_1DC95A9DC();
      v104[0] = v96;
      v104[1] = v94;
      v104[2] = v32;
      v104[3] = v92;
      v104[4] = v33;
      v104[5] = v90;
      v104[6] = v34;
      LOBYTE(v104[7]) = v86;
      BYTE1(v104[7]) = v83;
      BYTE2(v104[7]) = v79;
      BYTE3(v104[7]) = v75;
      BYTE4(v104[7]) = v72;
      BYTE5(v104[7]) = v70;
      v104[8] = v68;
      LOBYTE(v104[9]) = v35;
      sub_1DC9592D4();
      sub_1DC95AC74();
      sub_1DC88D5C8();
      v36();
      sub_1DC88D5C8();
      v37();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 2u:
      sub_1DC95AA90();
      LOBYTE(v104[0]) = 3;
      sub_1DC9591F0();
      sub_1DC95AC90();
      sub_1DC95AA04();
      sub_1DC95923C();
      sub_1DC95ADB0();
      goto LABEL_6;
    case 3u:
      sub_1DC95AA90();
      LOBYTE(v104[0]) = 4;
      sub_1DC959158();
      sub_1DC95AC90();
      sub_1DC95AA04();
      sub_1DC9591A4();
      sub_1DC95ADB0();
LABEL_6:
      sub_1DC88D5C8();
      v38();
      sub_1DC88D5C8();
      v39();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 4u:
      memcpy(v104, (const void *)v3, 0x79uLL);
      sub_1DC9590C0();
      sub_1DC95A9DC();
      memcpy(v103, v104, 0x79uLL);
      sub_1DC95910C();
      sub_1DC95AC74();
      sub_1DC88D5C8();
      v40();
      sub_1DC88D5C8();
      v41();
      return sub_1DC957448((uint64_t)v104);
    case 5u:
      uint64_t v42 = *(void *)v3;
      char v43 = *(unsigned char *)(v3 + 16);
      uint64_t v44 = *(void *)(v3 + 32);
      uint64_t v101 = *(void *)(v3 + 24);
      char v97 = *(unsigned char *)(v3 + 40);
      uint64_t v45 = *(void *)(v3 + 56);
      uint64_t v95 = *(void *)(v3 + 48);
      uint64_t v84 = *(void *)(v3 + 64);
      uint64_t v87 = *(void *)(v3 + 8);
      uint64_t v60 = *(void *)(v3 + 72);
      uint64_t v46 = *(void *)(v3 + 88);
      uint64_t v80 = *(void *)(v3 + 80);
      char v76 = *(unsigned char *)(v3 + 96);
      char v73 = *(unsigned char *)(v3 + 97);
      char v71 = *(unsigned char *)(v3 + 98);
      char v69 = *(unsigned char *)(v3 + 99);
      char v66 = *(unsigned char *)(v3 + 100);
      char v63 = *(unsigned char *)(v3 + 101);
      uint64_t v62 = *(void *)(v3 + 104);
      char v61 = *(unsigned char *)(v3 + 112);
      sub_1DC959028();
      sub_1DCB88E88();
      v104[0] = v42;
      v104[1] = v87;
      LOBYTE(v104[2]) = v43;
      v104[3] = v101;
      v104[4] = v44;
      LOBYTE(v104[5]) = v97;
      v104[6] = v95;
      v104[7] = v45;
      v104[8] = v84;
      v104[9] = v60;
      v104[10] = v80;
      v104[11] = v46;
      LOBYTE(v104[12]) = v76;
      BYTE1(v104[12]) = v73;
      BYTE2(v104[12]) = v71;
      BYTE3(v104[12]) = v69;
      BYTE4(v104[12]) = v66;
      BYTE5(v104[12]) = v63;
      v104[13] = v62;
      LOBYTE(v104[14]) = v61;
      sub_1DC959074();
      sub_1DC95AC74();
      sub_1DC88D5C8();
      v47();
      sub_1DC88D5C8();
      v48();
      sub_1DC882BC4(v42, v87, v43);
      goto LABEL_10;
    case 6u:
      uint64_t v49 = *(void *)(v3 + 8);
      uint64_t v102 = *(void *)v3;
      uint64_t v50 = *(void *)(v3 + 24);
      uint64_t v98 = *(void *)(v3 + 16);
      uint64_t v51 = *(void *)(v3 + 40);
      uint64_t v52 = *(void *)(v3 + 56);
      uint64_t v91 = *(void *)(v3 + 48);
      uint64_t v93 = *(void *)(v3 + 32);
      char v88 = *(unsigned char *)(v3 + 64);
      char v85 = *(unsigned char *)(v3 + 65);
      char v81 = *(unsigned char *)(v3 + 66);
      char v77 = *(unsigned char *)(v3 + 67);
      char v74 = *(unsigned char *)(v3 + 68);
      char v67 = *(unsigned char *)(v3 + 69);
      uint64_t v64 = *(void *)(v3 + 72);
      char v53 = *(unsigned char *)(v3 + 80);
      sub_1DC958F90();
      sub_1DC95AC90();
      v104[0] = v102;
      v104[1] = v49;
      v104[2] = v98;
      v104[3] = v50;
      v104[4] = v93;
      v104[5] = v51;
      v104[6] = v91;
      v104[7] = v52;
      LOBYTE(v104[8]) = v88;
      BYTE1(v104[8]) = v85;
      BYTE2(v104[8]) = v81;
      BYTE3(v104[8]) = v77;
      BYTE4(v104[8]) = v74;
      BYTE5(v104[8]) = v67;
      v104[9] = v64;
      LOBYTE(v104[10]) = v53;
      sub_1DC958FDC();
      sub_1DC95ADB0();
      sub_1DC88D5C8();
      v54();
      sub_1DC88D5C8();
      v55();
LABEL_10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 7u:
      memcpy(v104, (const void *)v3, 0xD1uLL);
      sub_1DC958EF8();
      sub_1DC95A9DC();
      memcpy(v103, v104, sizeof(v103));
      sub_1DC958F44();
      sub_1DC95AC74();
      sub_1DC88D5C8();
      v56();
      sub_1DC88D5C8();
      v57();
      return sub_1DC943A04((uint64_t)v104);
    case 8u:
      sub_1DC959498(v3, v89, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
      LOBYTE(v104[0]) = 10;
      sub_1DC958E14();
      sub_1DC95A9DC();
      sub_1DC959450(&qword_1EAAA1458, (void (*)(uint64_t))type metadata accessor for AOPClassificationDemo.Request);
      sub_1DCB88F18();
      sub_1DC88D5C8();
      v58();
      sub_1DC957E74(v89, (void (*)(void))type metadata accessor for AOPClassificationDemo.Request);
      goto LABEL_17;
    case 9u:
      LOBYTE(v104[0]) = 0;
      sub_1DC9593B8();
      uint64_t v26 = v105;
      uint64_t v22 = v1;
      sub_1DCB88E88();
      sub_1DC959404();
      sub_1DCB88F18();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v2, v19);
      goto LABEL_17;
    case 0xAu:
      LOBYTE(v104[0]) = 9;
      sub_1DC958E60();
      sub_1DC95A9DC();
      sub_1DC958EAC();
      sub_1DCB88F18();
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v65, v82);
LABEL_17:
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 8))(v22, v26);
      break;
    default:
      memcpy(v104, (const void *)v3, 0xB9uLL);
      sub_1DC959320();
      sub_1DC95A9DC();
      memcpy(v103, v104, 0xB9uLL);
      sub_1DC95936C();
      sub_1DC95AC74();
      sub_1DC88D5C8();
      v29();
      sub_1DC88D5C8();
      v30();
      uint64_t result = sub_1DC9574E0((uint64_t)v104);
      break;
  }
  return result;
}

uint64_t sub_1DC942044()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC942084@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v211 = a2;
  uint64_t v201 = sub_1DC87E988(&qword_1EAAA1500);
  sub_1DC89D4E0();
  uint64_t v214 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1DC88D550();
  sub_1DC888164(v8);
  uint64_t v200 = sub_1DC87E988(&qword_1EAAA1508);
  sub_1DC89D4E0();
  uint64_t v207 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1DC888164((uint64_t)v180 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v199 = sub_1DC87E988(&qword_1EAAA1510);
  sub_1DC89D4E0();
  uint64_t v213 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  sub_1DC888164(v14);
  uint64_t v198 = sub_1DC87E988(&qword_1EAAA1518);
  sub_1DC89D4E0();
  uint64_t v206 = v15;
  MEMORY[0x1F4188790](v16);
  sub_1DC88D550();
  sub_1DC888164(v17);
  uint64_t v197 = sub_1DC87E988(&qword_1EAAA1520);
  sub_1DC89D4E0();
  uint64_t v205 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC888164((uint64_t)v180 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v196 = sub_1DC87E988(&qword_1EAAA1528);
  sub_1DC89D4E0();
  uint64_t v195 = v21;
  MEMORY[0x1F4188790](v22);
  sub_1DC88D550();
  sub_1DC888164(v23);
  uint64_t v194 = sub_1DC87E988(&qword_1EAAA1530);
  sub_1DC89D4E0();
  uint64_t v204 = v24;
  MEMORY[0x1F4188790](v25);
  sub_1DC88D550();
  sub_1DC888164(v26);
  uint64_t v193 = sub_1DC87E988(&qword_1EAAA1538);
  sub_1DC89D4E0();
  uint64_t v203 = v27;
  MEMORY[0x1F4188790](v28);
  sub_1DC88D550();
  sub_1DC888164(v29);
  uint64_t v190 = sub_1DC87E988(&qword_1EAAA1540);
  sub_1DC89D4E0();
  uint64_t v212 = v30;
  MEMORY[0x1F4188790](v31);
  sub_1DC88D550();
  sub_1DC888164(v32);
  uint64_t v192 = sub_1DC87E988(&qword_1EAAA1548);
  sub_1DC89D4E0();
  uint64_t v191 = v33;
  MEMORY[0x1F4188790](v34);
  sub_1DC88D550();
  sub_1DC888164(v35);
  uint64_t v217 = sub_1DC87E988(&qword_1EAAA1550);
  sub_1DC89D4E0();
  uint64_t v202 = v36;
  MEMORY[0x1F4188790](v37);
  sub_1DC888164((uint64_t)v180 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v218 = sub_1DC87E988((uint64_t *)&unk_1EAAA1558);
  sub_1DC89D4E0();
  uint64_t v216 = v39;
  MEMORY[0x1F4188790](v40);
  sub_1DC95AD34();
  uint64_t v215 = type metadata accessor for RemoteRequest();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v41);
  sub_1DC888120();
  sub_1DC888134();
  MEMORY[0x1F4188790](v42);
  sub_1DC91990C();
  sub_1DC888134();
  MEMORY[0x1F4188790](v43);
  sub_1DC91990C();
  sub_1DC888134();
  MEMORY[0x1F4188790](v44);
  sub_1DC91990C();
  sub_1DC888134();
  MEMORY[0x1F4188790](v45);
  sub_1DC91990C();
  sub_1DC888134();
  MEMORY[0x1F4188790](v46);
  sub_1DC91990C();
  sub_1DC888134();
  MEMORY[0x1F4188790](v47);
  sub_1DC91990C();
  sub_1DC888134();
  MEMORY[0x1F4188790](v48);
  sub_1DC95AF68();
  uint64_t v50 = MEMORY[0x1F4188790](v49);
  uint64_t v52 = (char *)v180 - v51;
  uint64_t v53 = MEMORY[0x1F4188790](v50);
  char v55 = (char *)v180 - v54;
  MEMORY[0x1F4188790](v53);
  sub_1DC95AF54();
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (char *)v180 - v57;
  uint64_t v59 = a1[3];
  v220 = a1;
  sub_1DC881A8C(a1, v59);
  sub_1DC958DC8();
  uint64_t v219 = v3;
  uint64_t v60 = (uint64_t)v235;
  sub_1DCB89298();
  if (v60) {
    goto LABEL_17;
  }
  int v181 = v2;
  int v182 = v55;
  uint64_t v183 = v52;
  uint64_t v184 = v4;
  v235 = v58;
  uint64_t v61 = sub_1DCB88E58();
  uint64_t v62 = *(void *)(v61 + 16);
  if (!v62
    || (v180[1] = 0,
        uint64_t v63 = *(unsigned __int8 *)(v61 + 32),
        sub_1DC9CFE4C(1, v62, v61, v61 + 32, 0, (2 * v62) | 1),
        uint64_t v65 = v64,
        unint64_t v67 = v66,
        swift_bridgeObjectRelease(),
        v65 != v67 >> 1))
  {
    uint64_t v68 = v215;
    uint64_t v69 = sub_1DCB88B18();
    swift_allocError();
    char v71 = v70;
    sub_1DC87E988(&qword_1EAA9E130);
    *char v71 = v68;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v69 - 8) + 104))(v71, *MEMORY[0x1E4FBBA70], v69);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1DC95AD00();
    v72();
LABEL_17:
    uint64_t v140 = (uint64_t)v220;
    return sub_1DC8818D0(v140);
  }
  switch(v63)
  {
    case 1:
      sub_1DC95AC2C(1);
      sub_1DC959320();
      sub_1DC95A974();
      sub_1DC95974C();
      sub_1DC95AA6C();
      sub_1DC95AF94();
      char v146 = (_OWORD *)(v73 + 8);
      uint64_t v74 = sub_1DC95ACB4();
      v75(v74);
      swift_unknownObjectRelease();
      uint64_t v76 = sub_1DC95A9C4();
      v77(v76);
      uint64_t v78 = (void *)sub_1DC95AF7C((uint64_t)v208);
      memcpy(v78, v79, 0xB9uLL);
      sub_1DC95AAE0();
      goto LABEL_19;
    case 2:
      sub_1DC95AC2C(2);
      sub_1DC959288();
      sub_1DC95A974();
      sub_1DC959700();
      sub_1DC95AB40();
      sub_1DC95AE78();
      v147();
      swift_unknownObjectRelease();
      sub_1DC95AE48();
      sub_1DC88D5C8();
      v148();
      uint64_t v149 = *(void *)v223;
      char v150 = v223[24];
      char v151 = v223[25];
      char v152 = v223[26];
      char v153 = v223[27];
      char v154 = v223[28];
      char v155 = v223[29];
      uint64_t v156 = v224;
      char v157 = v225;
      long long v158 = v222;
      char v146 = v183;
      *uint64_t v183 = v221;
      v146[1] = v158;
      *((void *)v146 + 4) = v149;
      *(_OWORD *)((char *)v146 + 40) = *(_OWORD *)&v223[8];
      *((unsigned char *)v146 + 56) = v150;
      *((unsigned char *)v146 + 57) = v151;
      *((unsigned char *)v146 + 58) = v152;
      *((unsigned char *)v146 + 59) = v153;
      *((unsigned char *)v146 + 60) = v154;
      *((unsigned char *)v146 + 61) = v155;
      *((void *)v146 + 8) = v156;
      *((unsigned char *)v146 + 72) = v157;
      sub_1DC95AAE0();
      goto LABEL_19;
    case 3:
      sub_1DC95AC2C(3);
      sub_1DC9591F0();
      sub_1DC95A974();
      sub_1DC9596B4();
      sub_1DC95AA6C();
      sub_1DC95ABE0();
      sub_1DC88D5C8();
      v80();
      swift_unknownObjectRelease();
      uint64_t v81 = sub_1DC95A9C4();
      v82(v81);
      __n128 v83 = sub_1DC95ABA4();
      char v146 = v184;
      *uint64_t v184 = v83;
      *((void *)v146 + 2) = v84;
      *((void *)v146 + 3) = v85;
      v146[2] = *(_OWORD *)v223;
      *((unsigned char *)v146 + 48) = v86;
      *((unsigned char *)v146 + 49) = v87;
      *((unsigned char *)v146 + 50) = v88;
      *((unsigned char *)v146 + 51) = v89;
      *((unsigned char *)v146 + 52) = v90;
      *((unsigned char *)v146 + 53) = v91;
      *((void *)v146 + 7) = v92;
      *((unsigned char *)v146 + 64) = v93;
      sub_1DC95AAE0();
      goto LABEL_19;
    case 4:
      sub_1DC95AC2C(4);
      sub_1DC959158();
      sub_1DC95A974();
      sub_1DC959668();
      sub_1DC95AA6C();
      sub_1DC95ABE0();
      sub_1DC88D5C8();
      v94();
      swift_unknownObjectRelease();
      uint64_t v95 = sub_1DC95A9C4();
      v96(v95);
      __n128 v97 = sub_1DC95ABA4();
      char v146 = v185;
      *uint64_t v185 = v97;
      *((void *)v146 + 2) = v98;
      *((void *)v146 + 3) = v99;
      v146[2] = *(_OWORD *)v223;
      *((unsigned char *)v146 + 48) = v100;
      *((unsigned char *)v146 + 49) = v101;
      *((unsigned char *)v146 + 50) = v102;
      *((unsigned char *)v146 + 51) = v103;
      *((unsigned char *)v146 + 52) = v104;
      *((unsigned char *)v146 + 53) = v105;
      *((void *)v146 + 7) = v106;
      *((unsigned char *)v146 + 64) = v107;
      sub_1DC95AAE0();
      goto LABEL_19;
    case 5:
      sub_1DC95AC2C(5);
      sub_1DC9590C0();
      sub_1DC95A9A0();
      sub_1DC95961C();
      char v146 = (_OWORD *)v196;
      sub_1DCB88DF8();
      sub_1DC95AF94();
      uint64_t v159 = sub_1DC95AEA4();
      v160(v159);
      swift_unknownObjectRelease();
      uint64_t v161 = sub_1DC95AD78();
      v162(v161);
      char v163 = (void *)sub_1DC95AF7C((uint64_t)v210);
      memcpy(v163, v164, 0x79uLL);
      sub_1DC95AAE0();
      goto LABEL_19;
    case 6:
      sub_1DC95AC2C(6);
      sub_1DC959028();
      sub_1DC95A974();
      sub_1DC9595D0();
      sub_1DC95AA6C();
      sub_1DC95ABE0();
      sub_1DC88D5C8();
      v108();
      swift_unknownObjectRelease();
      uint64_t v109 = sub_1DC95A9C4();
      v110(v109);
      char v111 = v222;
      uint64_t v112 = *((void *)&v222 + 1);
      uint64_t v113 = *(void *)v223;
      char v114 = v223[8];
      long long v115 = *(_OWORD *)&v223[16];
      uint64_t v116 = v224;
      uint64_t v117 = v225;
      char v118 = v227;
      char v119 = v228;
      char v120 = v229;
      char v121 = v230;
      char v122 = v231;
      char v123 = v232;
      uint64_t v124 = v233;
      char v125 = v234;
      char v146 = v188;
      *uint64_t v188 = v221;
      *((unsigned char *)v146 + 16) = v111;
      *((void *)v146 + 3) = v112;
      *((void *)v146 + 4) = v113;
      *((unsigned char *)v146 + 40) = v114;
      v146[3] = v115;
      *((void *)v146 + 8) = v116;
      *((void *)v146 + 9) = v117;
      v146[5] = v226;
      *((unsigned char *)v146 + 96) = v118;
      *((unsigned char *)v146 + 97) = v119;
      *((unsigned char *)v146 + 98) = v120;
      *((unsigned char *)v146 + 99) = v121;
      *((unsigned char *)v146 + 100) = v122;
      *((unsigned char *)v146 + 101) = v123;
      *((void *)v146 + 13) = v124;
      *((unsigned char *)v146 + 112) = v125;
      sub_1DC95AAE0();
      goto LABEL_19;
    case 7:
      sub_1DC95AC2C(7);
      sub_1DC958F90();
      sub_1DC95A974();
      sub_1DC959584();
      sub_1DC95AA6C();
      sub_1DC95ABE0();
      sub_1DC88D5C8();
      v126();
      swift_unknownObjectRelease();
      uint64_t v127 = sub_1DC95A9C4();
      v128(v127);
      long long v129 = v222;
      uint64_t v130 = *(void *)v223;
      uint64_t v131 = *(void *)&v223[8];
      char v132 = v224;
      char v133 = BYTE1(v224);
      char v134 = BYTE2(v224);
      char v135 = BYTE3(v224);
      char v136 = BYTE4(v224);
      char v137 = BYTE5(v224);
      uint64_t v138 = v225;
      char v139 = v226;
      char v146 = v187;
      *uint64_t v187 = v221;
      v146[1] = v129;
      *((void *)v146 + 4) = v130;
      *((void *)v146 + 5) = v131;
      v146[3] = *(_OWORD *)&v223[16];
      *((unsigned char *)v146 + 64) = v132;
      *((unsigned char *)v146 + 65) = v133;
      *((unsigned char *)v146 + 66) = v134;
      *((unsigned char *)v146 + 67) = v135;
      *((unsigned char *)v146 + 68) = v136;
      *((unsigned char *)v146 + 69) = v137;
      *((void *)v146 + 9) = v138;
      *((unsigned char *)v146 + 80) = v139;
      sub_1DC95AAE0();
      goto LABEL_19;
    case 8:
      sub_1DC95AC2C(8);
      sub_1DC958EF8();
      sub_1DC95A974();
      sub_1DC959538();
      sub_1DC95AA6C();
      char v146 = (_OWORD *)(v216 + 8);
      uint64_t v165 = sub_1DC95ACB4();
      v166(v165);
      swift_unknownObjectRelease();
      uint64_t v167 = sub_1DC95A9C4();
      v168(v167);
      int v169 = (void *)sub_1DC95AF7C((uint64_t)v209);
      memcpy(v169, v170, 0xD1uLL);
      sub_1DC95AAE0();
      goto LABEL_19;
    case 9:
      sub_1DC95AC2C(9);
      sub_1DC958E60();
      sub_1DC95A974();
      sub_1DC9594EC();
      sub_1DC95AB40();
      sub_1DC95ABE0();
      sub_1DC88D5C8();
      v171();
      swift_unknownObjectRelease();
      uint64_t v172 = sub_1DC95A9C4();
      v173(v172);
      char v146 = v186;
      sub_1DC95AAE0();
      goto LABEL_19;
    case 10:
      sub_1DC95AC2C(10);
      sub_1DC958E14();
      sub_1DC95A9A0();
      type metadata accessor for AOPClassificationDemo.Request();
      sub_1DC959450(&qword_1EAAA1568, (void (*)(uint64_t))type metadata accessor for AOPClassificationDemo.Request);
      uint64_t v142 = v189;
      sub_1DCB88DF8();
      sub_1DC95ABE0();
      sub_1DC95AD00();
      v176();
      swift_unknownObjectRelease();
      uint64_t v177 = sub_1DC95A9C4();
      v178(v177);
      swift_storeEnumTagMultiPayload();
      uint64_t v179 = v142;
      goto LABEL_20;
    default:
      LOBYTE(v221) = 0;
      sub_1DC9593B8();
      sub_1DC95A974();
      sub_1DC959798();
      sub_1DC95AB40();
      sub_1DC95ABE0();
      sub_1DC95AF00();
      sub_1DC88D5C8();
      v143();
      swift_unknownObjectRelease();
      uint64_t v144 = sub_1DC95A9C4();
      v145(v144);
      char v146 = v181;
      sub_1DC95AAE0();
LABEL_19:
      swift_storeEnumTagMultiPayload();
      uint64_t v179 = (uint64_t)v146;
LABEL_20:
      uint64_t v174 = (uint64_t)v235;
      sub_1DC959498(v179, (uint64_t)v235, (void (*)(void))type metadata accessor for RemoteRequest);
      uint64_t v175 = (uint64_t)v220;
      sub_1DC959498(v174, v211, (void (*)(void))type metadata accessor for RemoteRequest);
      uint64_t v140 = v175;
      break;
  }
  return sub_1DC8818D0(v140);
}

uint64_t sub_1DC94329C(uint64_t a1)
{
  unint64_t v2 = sub_1DC958E60();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9432D8(uint64_t a1)
{
  unint64_t v2 = sub_1DC958E60();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC943314(uint64_t a1)
{
  unint64_t v2 = sub_1DC958EF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC943350(uint64_t a1)
{
  unint64_t v2 = sub_1DC958EF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC94338C(uint64_t a1)
{
  unint64_t v2 = sub_1DC958E14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9433C8(uint64_t a1)
{
  unint64_t v2 = sub_1DC958E14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC943404(uint64_t a1)
{
  unint64_t v2 = sub_1DC959158();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC943440(uint64_t a1)
{
  unint64_t v2 = sub_1DC959158();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DC94347C()
{
  return sub_1DC941108(*v0);
}

uint64_t sub_1DC943484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC940C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9434AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DC941100();
  *a1 = result;
  return result;
}

uint64_t sub_1DC9434D4(uint64_t a1)
{
  unint64_t v2 = sub_1DC958DC8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC943510(uint64_t a1)
{
  unint64_t v2 = sub_1DC958DC8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC94354C(uint64_t a1)
{
  unint64_t v2 = sub_1DC958F90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC943588(uint64_t a1)
{
  unint64_t v2 = sub_1DC958F90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9435C4(uint64_t a1)
{
  unint64_t v2 = sub_1DC9593B8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC943600(uint64_t a1)
{
  unint64_t v2 = sub_1DC9593B8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC94363C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9590C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC943678(uint64_t a1)
{
  unint64_t v2 = sub_1DC9590C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9436B4(uint64_t a1)
{
  unint64_t v2 = sub_1DC959320();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9436F0(uint64_t a1)
{
  unint64_t v2 = sub_1DC959320();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC94372C(uint64_t a1)
{
  unint64_t v2 = sub_1DC959028();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC943768(uint64_t a1)
{
  unint64_t v2 = sub_1DC959028();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9437A4(uint64_t a1)
{
  unint64_t v2 = sub_1DC9591F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9437E0(uint64_t a1)
{
  unint64_t v2 = sub_1DC9591F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC94381C(uint64_t a1)
{
  unint64_t v2 = sub_1DC959288();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC943858(uint64_t a1)
{
  unint64_t v2 = sub_1DC959288();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC94389C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9438DC(uint64_t a1)
{
  return sub_1DC941290(a1);
}

uint64_t sub_1DC9438F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC942084(a1, a2);
}

uint64_t sub_1DC94390C(uint64_t a1)
{
  uint64_t result = sub_1DC959450(&qword_1EAAA0B00, (void (*)(uint64_t))type metadata accessor for RemoteRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DC943964(uint64_t a1)
{
  uint64_t result = sub_1DC959450(&qword_1EAAA0B08, (void (*)(uint64_t))type metadata accessor for RemoteRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DC9439BC()
{
  return sub_1DC959450(&qword_1EAAA0B10, (void (*)(uint64_t))type metadata accessor for RemoteRequest);
}

uint64_t sub_1DC943A04(uint64_t a1)
{
  sub_1DC939784(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(unsigned char *)(a1 + 208));
  return a1;
}

uint64_t sub_1DC943A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = *(void *)(a4 + 56);
  char v8 = *(unsigned char *)(a4 + 64);
  char v9 = *(unsigned char *)(a4 + 52) & 1;
  char v10 = *(unsigned char *)(a4 + 53) & 1;
  long long __src = *(_OWORD *)a4;
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  long long v18 = *(_OWORD *)(a4 + 32);
  v11.i32[1] = DWORD1(v18);
  v11.i32[0] = *(_DWORD *)(a4 + 48);
  int16x8_t v12 = (int16x8_t)vmovl_u8(v11);
  v12.i64[0] &= 0xFF01FF01FF01FF01;
  unsigned __int32 v19 = vmovn_s16(v12).u32[0];
  char v20 = v9;
  char v21 = v10;
  uint64_t v22 = v7;
  char v23 = v8 & 1;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DC882264(a4);
  uint64_t v13 = sub_1DC9A7F88(&__src);
  sub_1DC88CABC(a4);
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

void sub_1DC943B74(void *a1)
{
}

void sub_1DC943B98(uint64_t a1)
{
}

uint64_t sub_1DC943BE8(void *a1)
{
  return sub_1DC889A2C(a1);
}

uint64_t sub_1DC943C0C()
{
  return sub_1DC889B00();
}

void sub_1DC943C30(void *a1, uint64_t (*a2)(_DWORD *))
{
  char v86 = a2;
  uint64_t v77 = sub_1DC87E988(&qword_1EAAA0C68);
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  char v75 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1DC87E988(&qword_1EAAA0C70);
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA0C78);
  uint64_t v84 = *(void *)(v5 - 8);
  uint64_t v85 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v81 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA0C80);
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v83 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v80 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA0C88);
  uint64_t v74 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint8x8_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA0C90);
  uint64_t v73 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAAA0C98);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a1, 0x41uLL);
  *(void *)&__dst[17] = 0x40467A0000;
  *(void *)&__dst[19] = 0x45EA600042FA0000;
  *(void *)&__dst[21] = 0x3C23D70A00000002;
  char v88 = 0;
  long long v89 = xmmword_1DCBC0330;
  uint64_t v90 = 0;
  sub_1DC882264((uint64_t)a1);
  uint64_t v19 = v91;
  uint64_t v20 = v86(__dst);
  if (v19)
  {
    sub_1DC88CABC((uint64_t)a1);
  }
  else
  {
    uint64_t v68 = v14;
    uint64_t v69 = v18;
    char v86 = (uint64_t (*)(_DWORD *))v11;
    uint64_t v70 = v12;
    uint64_t v71 = v15;
    uint64_t v72 = v9;
    uint64_t v91 = v20;
    uint64_t v21 = sub_1DC88CABC((uint64_t)a1);
    uint64_t v22 = (void *)MEMORY[0x1E01A8D20](v21);
    char v23 = (void *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 != -1) {
      swift_once();
    }
    uint64_t v24 = swift_allocObject();
    *(unsigned char *)(v24 + 16) = 21;
    LOWORD(__dst[0]) = 21;
    uint64_t v25 = MEMORY[0x1F4188790](v24);
    *(&v63 - 4) = (uint64_t)sub_1DC909814;
    *(&v63 - 3) = v25;
    *(&v63 - 2) = (uint64_t)__dst;
    swift_retain();
    sub_1DCAC3890();
    uint64_t v27 = v26;
    swift_release();
    swift_release();
    uint64_t v28 = v27;
    uint64_t v29 = *(void *)(v27 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(ObjectType, v29);
    sub_1DCA880D8();
    uint64_t v33 = v32;

    uint64_t v34 = *(void *)(v33 + 16);
    swift_bridgeObjectRelease();
    if (v34 != 1) {
      goto LABEL_8;
    }
    uint64_t v67 = v16;
    uint64_t v35 = *(void *)(v28 + 24);
    uint64_t v36 = swift_getObjectType();
    uint64_t v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v36, v35);
    sub_1DCA880D8();
    uint64_t v39 = v38;

    uint64_t v40 = sub_1DC9A4474(v39);
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    if (v42)
    {
      uint64_t v64 = v40;
      uint64_t v65 = v42;
      uint64_t v43 = sub_1DC888A00();
      uint64_t v66 = a1[9];
      *(void *)__dst = v43;
      sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
      uint64_t v44 = sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
      uint64_t v45 = v75;
      sub_1DCB873D8();
      uint64_t v46 = v76;
      uint64_t v47 = (uint64_t)v78;
      uint64_t v48 = v77;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v78, v45, v77);
      uint64_t v49 = v79;
      *(void *)(v47 + *(int *)(v79 + 60)) = 96;
      *(void *)(v47 + *(int *)(v49 + 64)) = v66;
      *(void *)(v47 + *(int *)(v49 + 68)) = v44;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v48);
      swift_release();
      sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA66A0, &qword_1EAAA0C70);
      uint64_t v50 = v81;
      sub_1DCB873D8();
      sub_1DC88CC04(v47, &qword_1EAAA0C70);
      *(void *)(swift_allocObject() + 16) = &unk_1F37F07E8;
      sub_1DC87E988(&qword_1EAAA0BC0);
      uint64_t v51 = v80;
      uint64_t v52 = v85;
      sub_1DCB870D8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v50, v52);
      uint64_t v53 = (uint64_t (*)(void))v86;
      sub_1DC99C2CC();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v51, v83);
      uint64_t v55 = swift_allocObject();
      uint64_t v85 = 0;
      uint64_t v56 = v65;
      *(void *)(v55 + 16) = v64;
      *(void *)(v55 + 24) = v56;
      sub_1DC88CF34(&qword_1EAAA0CC0, &qword_1EAAA0C88);
      uint64_t v57 = v68;
      uint64_t v58 = v72;
      sub_1DCB874A8();
      swift_release();
      (*(void (**)(uint64_t (*)(void), uint64_t))(v74 + 8))(v53, v58);
      uint64_t v59 = v69;
      uint64_t v60 = v70;
      sub_1DCB87138();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v57, v60);
      sub_1DC88CF34(&qword_1EAAA0CC8, &qword_1EAAA0C98);
      uint64_t v61 = v71;
      uint64_t v62 = sub_1DCB873A8();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v59, v61);
      swift_release();
      swift_release();
      type metadata accessor for SharedVGGish.Instance();
      *(void *)(swift_allocObject() + 16) = v62;
    }
    else
    {
LABEL_8:
      sub_1DC957A28();
      swift_allocError();
      *uint64_t v54 = 1;
      swift_willThrow();
      swift_release();
      swift_release();
    }
  }
}

void sub_1DC944750(uint64_t a1, uint64_t (*a2)(void *))
{
  char v87 = a2;
  uint64_t v78 = a1;
  uint64_t v79 = sub_1DC87E988(&qword_1EAAA0C68);
  uint64_t v77 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v76 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1DC87E988(&qword_1EAAA0C70);
  MEMORY[0x1F4188790](v81);
  uint64_t v80 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA0C78);
  uint64_t v85 = *(void *)(v4 - 8);
  uint64_t v86 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v82 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA0C80);
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v84 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA0C88);
  uint64_t v75 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint8x8_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA0C90);
  uint64_t v74 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAAA0C98);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88[0] = 0x40467A0000;
  v88[1] = 0x45EA600042FA0000;
  v88[2] = 0x3C23D70A00000002;
  char v89 = 0;
  long long v90 = xmmword_1DCBC0330;
  uint64_t v91 = 0;
  uint64_t v19 = v92;
  uint64_t v20 = v87(v88);
  if (!v19)
  {
    uint64_t v72 = v8;
    char v87 = (uint64_t (*)(void *))v14;
    uint64_t v73 = v11;
    uint64_t v68 = v18;
    uint64_t v69 = v9;
    uint64_t v70 = v16;
    uint64_t v71 = v15;
    uint64_t v92 = v20;
    uint64_t v21 = (void *)MEMORY[0x1E01A8D20]();
    uint64_t v22 = (void *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 != -1) {
      swift_once();
    }
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = 21;
    LOWORD(v88[0]) = 21;
    uint64_t v24 = MEMORY[0x1F4188790](v23);
    *(&v64 - 4) = (uint64_t)sub_1DC909D14;
    *(&v64 - 3) = v24;
    *(&v64 - 2) = (uint64_t)v88;
    swift_retain();
    sub_1DCAC3890();
    uint64_t v25 = (uint64_t (*)(void))v87;
    uint64_t v27 = v26;
    swift_release();
    swift_release();
    uint64_t v28 = v27;
    uint64_t v29 = *(void *)(v27 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(ObjectType, v29);
    sub_1DCA880D8();
    uint64_t v33 = v32;

    uint64_t v34 = *(void *)(v33 + 16);
    swift_bridgeObjectRelease();
    if (v34 != 1) {
      goto LABEL_8;
    }
    uint64_t v35 = *(void *)(v28 + 24);
    uint64_t v36 = swift_getObjectType();
    uint64_t v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v36, v35);
    sub_1DCA880D8();
    uint64_t v67 = 0;
    uint64_t v39 = v38;

    uint64_t v40 = sub_1DC9A4474(v39);
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    if (v42)
    {
      uint64_t v64 = v40;
      uint64_t v65 = v42;
      uint64_t v66 = sub_1DC888A00();
      v88[0] = v66;
      sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
      uint64_t v43 = sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
      uint64_t v44 = v76;
      sub_1DCB873D8();
      uint64_t v45 = v77;
      uint64_t v47 = v79;
      uint64_t v46 = (uint64_t)v80;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v80, v44, v79);
      uint64_t v48 = v81;
      *(void *)(v46 + *(int *)(v81 + 60)) = 96;
      *(void *)(v46 + *(int *)(v48 + 64)) = v78;
      *(void *)(v46 + *(int *)(v48 + 68)) = v43;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v47);
      swift_release();
      uint64_t v49 = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA66A0, &qword_1EAAA0C70);
      uint64_t v50 = v82;
      sub_1DCB873D8();
      sub_1DC88CC04(v46, &qword_1EAAA0C70);
      *(void *)(swift_allocObject() + 16) = &unk_1F37F07B0;
      uint64_t v51 = sub_1DC87E988(&qword_1EAAA0BC0);
      uint64_t v52 = v72;
      uint64_t v53 = v86;
      uint64_t v81 = v51;
      sub_1DCB870D8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v53);
      uint64_t v54 = v73;
      uint64_t v55 = v67;
      sub_1DC99C2CC();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v84);
      if (!v55)
      {
        uint64_t v57 = swift_allocObject();
        uint64_t v86 = v49;
        uint64_t v58 = v65;
        *(void *)(v57 + 16) = v64;
        *(void *)(v57 + 24) = v58;
        sub_1DC88CF34(&qword_1EAAA0CC0, &qword_1EAAA0C88);
        uint64_t v59 = v25;
        uint64_t v60 = v69;
        uint64_t v67 = 0;
        sub_1DCB874A8();
        swift_release();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v54, v60);
        uint64_t v61 = v68;
        sub_1DCB87138();
        (*(void (**)(uint64_t (*)(void), uint64_t))(v74 + 8))(v59, v12);
        sub_1DC88CF34(&qword_1EAAA0CC8, &qword_1EAAA0C98);
        uint64_t v62 = v71;
        uint64_t v63 = sub_1DCB873A8();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v61, v62);
        type metadata accessor for SharedVGGish.Instance();
        *(void *)(swift_allocObject() + 16) = v63;
        return;
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_8:
      sub_1DC957A28();
      swift_allocError();
      *uint64_t v56 = 1;
      swift_willThrow();
      swift_release();
    }
    swift_release();
  }
}

uint64_t sub_1DC945214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[1] = a3;
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA0E30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = sub_1DC87E988(&qword_1EAAA0E38);
  uint64_t v9 = *(void *)(v15[0] - 8);
  MEMORY[0x1F4188790](v15[0]);
  uint8x8_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA5080);
  sub_1DC87E988(&qword_1EAAA0E40);
  sub_1DC88CF34(&qword_1EAAA0E48, (uint64_t *)&unk_1EAAA5080);
  sub_1DCB873D8();
  swift_release();
  sub_1DC87E988(&qword_1EAAA0E50);
  sub_1DCB870C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA0E58, &qword_1EAAA0E38);
  uint64_t v13 = v15[0];
  sub_1DCB873B8();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v13);
}

void sub_1DC9454C0()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA15C0);
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC8C1FC4();
  sub_1DC87E988(&qword_1EAAA15C8);
  sub_1DC89D4E0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1DC8A22D0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v4;
  *(void *)(v15 + 24) = v2;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA15D0);
  sub_1DC87E988(&qword_1EAAA15D8);
  sub_1DC88CF34(&qword_1EAAA15E0, &qword_1EAAA15D0);
  sub_1DC95AF14();
  swift_release();
  sub_1DC87E988(&qword_1EAAA15E8);
  sub_1DCB870C8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v5);
  sub_1DC89C89C(0, &qword_1EAAA15F0);
  sub_1DC88CF34(&qword_1EAAA15F8, &qword_1EAAA15C8);
  sub_1DC95AF34();
  sub_1DCB873B8();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v7 + 8);
  sub_1DC89DA54();
}

void sub_1DC9456F0()
{
  sub_1DC89D9F8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA1608);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC8C1FC4();
  sub_1DC87E988((uint64_t *)&unk_1EAAA1610);
  sub_1DC89D4E0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1DC89D970();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v5;
  *(void *)(v13 + 24) = v3;
  swift_retain();
  sub_1DC87E988(&qword_1EAA9ECF8);
  sub_1DC87E988((uint64_t *)&unk_1EAAA1620);
  sub_1DC88CF34(&qword_1EAA9ED10, &qword_1EAA9ECF8);
  sub_1DC95AF14();
  swift_release();
  sub_1DC87E988(&qword_1EAAA1630);
  sub_1DCB870C8();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
  type metadata accessor for AOPClassificationResult();
  sub_1DC88CF34(&qword_1EAAA1638, (uint64_t *)&unk_1EAAA1610);
  sub_1DC95AF34();
  sub_1DCB873B8();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v8 + 8);
  sub_1DC89DA54();
}

uint64_t sub_1DC94590C(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA0CD0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DCBB93B0;
  *(void *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  return v2;
}

double sub_1DC945964(double a1)
{
  sub_1DC87E988(&qword_1EAAA1600);
  uint64_t v2 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v2 + 16) = xmmword_1DCBB93B0;
  *(double *)(v2 + 32) = a1;
  return result;
}

uint64_t sub_1DC9459AC(uint64_t a1)
{
  sub_1DC87E988(qword_1EAA9C830);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DCBB93B0;
  sub_1DC87E9DC(a1, v2 + 32);
  return v2;
}

uint64_t sub_1DC945A04@<X0>(long long *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  char v101 = a2;
  uint64_t v94 = sub_1DC87E988((uint64_t *)&unk_1EAAA1380);
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v94);
  uint64_t v91 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v92 = (char *)&v84 - v7;
  uint64_t v98 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CB0);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v95 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1DC87E988((uint64_t *)&unk_1EAAA1390);
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v96 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1DC87E988((uint64_t *)&unk_1EAAA3D20);
  uint64_t v86 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  char v118 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA0F30);
  uint64_t v116 = *(void *)(v11 - 8);
  uint64_t v117 = (uint8_t *)v11;
  MEMORY[0x1F4188790](v11);
  long long v115 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  int v108 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v120 = sub_1DCB870B8();
  uint64_t v107 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v106 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1DC87E988(&qword_1EAAA0C10);
  uint64_t v111 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  char v121 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1DC87E988(&qword_1EAAA0F38);
  MEMORY[0x1F4188790](v114);
  uint64_t v112 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F40);
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  char v119 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DCB86BF8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  char v102 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v84 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v84 - v25;
  long long v27 = a1[1];
  long long v126 = *a1;
  long long v127 = v27;
  uint64_t v128 = *((void *)a1 + 4);
  sub_1DCB86BE8();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1DCB86FE8();
  uint64_t v29 = sub_1DC89F57C(v28, (uint64_t)qword_1EAAFF810);
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v88 = v19 + 16;
  char v87 = v30;
  v30(v24, v26, v18);
  uint64_t v89 = v29;
  uint64_t v31 = sub_1DCB86FC8();
  os_log_type_t v32 = sub_1DCB88488();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v85 = v2;
    uint64_t v34 = (uint8_t *)v33;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v123 = v19;
    uint64_t v124 = v35;
    uint64_t v36 = v35;
    *(_DWORD *)uint64_t v34 = 136446210;
    char v122 = v26;
    sub_1DC959450(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v37 = sub_1DCB88F98();
    uint64_t v132 = sub_1DC9F8920(v37, v38, &v124);
    uint64_t v26 = v122;
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v123 + 8);
    v39(v24, v18);
    _os_log_impl(&dword_1DC873000, v31, v32, "Started Creating Accessibility Sound Actions Session %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    uint64_t v40 = v36;
    uint64_t v19 = v123;
    MEMORY[0x1E01A99C0](v40, -1, -1);
    uint64_t v41 = v34;
    uint64_t v3 = v85;
    MEMORY[0x1E01A99C0](v41, -1, -1);
  }
  else
  {
    uint64_t v39 = *(void (**)(char *, uint64_t))(v19 + 8);
    v39(v24, v18);
  }

  long long v129 = v126;
  long long v130 = v127;
  uint64_t v131 = v128;
  sub_1DC9D951C();
  if (v3) {
    return ((uint64_t (*)(char *, uint64_t))v39)(v26, v18);
  }
  uint64_t v123 = v19;
  uint64_t v84 = v39;
  char v122 = v26;
  uint64_t v85 = v18;
  uint64_t v43 = sub_1DC888A00();
  swift_release();
  uint64_t v124 = v43;
  uint64_t v44 = v107;
  uint64_t v45 = v106;
  (*(void (**)(char *, void, uint64_t))(v107 + 104))(v106, *MEMORY[0x1E4F1A8F8], v120);
  uint64_t v46 = v108;
  void *v108 = sub_1DC9DB348;
  v46[1] = 0;
  uint64_t v47 = v109;
  uint64_t v48 = v110;
  (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v109 + 104))(v46, *MEMORY[0x1E4F1A920], v110);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
  sub_1DCB87478();
  (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v47 + 8))(v46, v48);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v120);
  swift_release();
  uint64_t v49 = sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
  sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
  uint64_t v50 = v115;
  uint64_t v51 = v113;
  uint64_t v52 = v121;
  sub_1DCB873D8();
  uint64_t v53 = v116;
  uint64_t v54 = v117;
  uint64_t v55 = (uint64_t)v112;
  (*(void (**)(char *, char *, uint8_t *))(v116 + 16))(v112, v50, v117);
  uint64_t v56 = v114;
  *(void *)(v55 + *(int *)(v114 + 60)) = 96;
  *(void *)(v55 + *(int *)(v56 + 64)) = 2;
  *(void *)(v55 + *(int *)(v56 + 68)) = v49;
  (*(void (**)(char *, uint8_t *))(v53 + 8))(v50, v54);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v52, v51);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA3D40, &qword_1EAAA0F38);
  uint64_t v57 = v119;
  sub_1DCB873D8();
  uint64_t v58 = sub_1DC88CC04(v55, &qword_1EAAA0F38);
  MEMORY[0x1F4188790](v58);
  *(&v84 - 2) = (void (*)(char *, uint64_t))v57;
  *(&v84 - 1) = (void (*)(char *, uint64_t))&v126;
  uint64_t v59 = v118;
  sub_1DCA26878(0xD000000000000022, 0x80000001DCB93540, (uint64_t (*)(void))sub_1DC958CC0);
  char v121 = 0;
  sub_1DC88CF34((unint64_t *)&unk_1EAAA13A0, (uint64_t *)&unk_1EAAA3D20);
  uint64_t v60 = v92;
  sub_1DCB873D8();
  uint64_t v61 = v93;
  uint64_t v62 = v91;
  uint64_t v63 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v91, v60, v94);
  unint64_t v64 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = sub_1DC9DB55C;
  *(void *)(v65 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v65 + v64, v62, v63);
  sub_1DC87E988((uint64_t *)&unk_1EAAA3C00);
  sub_1DC88CF34((unint64_t *)&qword_1EAAA13B0, (uint64_t *)&unk_1EAAA3C00);
  uint64_t v66 = v95;
  sub_1DCB87378();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v63);
  uint64_t v124 = 0;
  unint64_t v125 = 0xE000000000000000;
  sub_1DCB88A98();
  swift_bridgeObjectRelease();
  uint64_t v124 = 0xD000000000000022;
  unint64_t v125 = 0x80000001DCB93570;
  uint64_t v67 = sub_1DC959450(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
  uint64_t v68 = v122;
  uint64_t v69 = v85;
  uint64_t v120 = v67;
  sub_1DCB88F98();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  uint64_t v70 = v96;
  sub_1DCA25DCC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v66, v98);
  sub_1DC88CF34(&qword_1EAAA3CE0, (uint64_t *)&unk_1EAAA1390);
  uint64_t v71 = v100;
  uint64_t v72 = sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v70, v71);
  uint64_t v73 = v101;
  uint64_t v74 = v87;
  v87(v101, v68, v69);
  *(void *)&v73[*(int *)(type metadata accessor for AccessibilitySoundActions.Session() + 20)] = v72;
  uint64_t v75 = v102;
  v74(v102, v68, v69);
  swift_retain();
  uint64_t v76 = sub_1DCB86FC8();
  os_log_type_t v77 = sub_1DCB88488();
  BOOL v78 = os_log_type_enabled(v76, v77);
  uint64_t v79 = v84;
  if (v78)
  {
    uint64_t v80 = (uint8_t *)swift_slowAlloc();
    uint64_t v81 = swift_slowAlloc();
    uint64_t v124 = v81;
    *(_DWORD *)uint64_t v80 = 136446210;
    uint64_t v117 = v80 + 4;
    uint64_t v82 = sub_1DCB88F98();
    uint64_t v132 = sub_1DC9F8920(v82, v83, &v124);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    v79(v102, v69);
    _os_log_impl(&dword_1DC873000, v76, v77, "Finished Creating Accessibility Sound Actions Session %{public}s", v80, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v81, -1, -1);
    MEMORY[0x1E01A99C0](v80, -1, -1);
    swift_release();

    (*(void (**)(char *, uint64_t))(v86 + 8))(v118, v103);
  }
  else
  {

    v79(v75, v69);
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v59, v103);
  }
  v79(v122, v69);
  return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v119, v105);
}

uint64_t sub_1DC946BA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1DCB868D8();
  uint64_t v33 = *(void *)(v1 - 8);
  uint64_t v34 = v1;
  MEMORY[0x1F4188790](v1);
  os_log_type_t v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAA13C0);
  uint64_t v31 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DCB86A18();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v27 - v11;
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F40);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA3D50, (uint64_t *)&unk_1EAAA0F40);
  uint64_t v13 = sub_1DCB873A8();
  uint64_t v14 = v37;
  sub_1DC9AC2A0(0x14u, (uint64_t)v12);
  if (!v14)
  {
    uint64_t v28 = v6;
    uint64_t v29 = v7;
    uint64_t v37 = v13;
    uint64_t v35 = v13;
    sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
    sub_1DCB873D8();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA13D0, (uint64_t *)&unk_1EAAA13C0);
    uint64_t v15 = sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
    uint64_t v35 = 0x6A2E657069636572;
    unint64_t v36 = 0xEB000000006E6F73;
    uint64_t v17 = v32;
    uint64_t v16 = v33;
    uint64_t v18 = v34;
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, *MEMORY[0x1E4F276C0], v34);
    sub_1DC91ACCC();
    sub_1DCB869F8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    uint64_t v19 = sub_1DCB86A58();
    unint64_t v21 = v20;
    uint64_t v34 = sub_1DC9BDB24();
    uint64_t v22 = sub_1DC9535EC(v34, v15, (uint64_t)v12);
    uint64_t v23 = *(void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v24 = v10;
    uint64_t v25 = v28;
    v23(v24, v28);
    sub_1DC881920(v19, v21);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v35 = v22;
    sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
    sub_1DCB874A8();
    swift_release();
    v23(v12, v25);
  }
  return swift_release();
}

uint64_t sub_1DC947128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v31 = *(void *)(a2 + 24);
  uint64_t v32 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v30 = *(void *)(a2 + 32);
  v3.i32[0] = *(_DWORD *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 52);
  char v11 = *(unsigned char *)(a2 + 53);
  uint64_t v34 = *(void *)(a2 + 56);
  char v33 = *(unsigned char *)(a2 + 64);
  if ((sub_1DC9311DC() & 0x3F) != 0)
  {
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v12 = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v27 = a3;
    uint16x8_t v14 = vmovl_u8(v3);
    char v29 = v11 & 1;
    v14.i64[0] &= 0xFF01FF01FF01FF01;
    int16x8_t v28 = (int16x8_t)v14;
    uint64_t v25 = sub_1DCB88628();
    uint64_t v26 = v15;
    uint64_t v23 = v16;
    uint64_t v17 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis42SNLogMelBasedFeatureExtractorConfiguration_stepSizeFrames)
        / 0xA0u;
    uint64_t v22 = sub_1DCB88628();
    uint64_t v19 = v18;
    uint64_t v24 = v20;
    __src[0] = v7;
    __src[1] = v32;
    __src[2] = v8;
    __src[3] = v31;
    __src[4] = v30;
    __src[5] = v9;
    unsigned __int32 v37 = vmovn_s16(v28).u32[0];
    char v38 = v10 & 1;
    char v39 = v29;
    uint64_t v40 = v34;
    char v41 = v33 & 1;
    uint64_t v42 = v17;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC882264(a2);
    sub_1DC93BA38(__src);
    sub_1DC88CABC(a2);
    swift_release();
    swift_release();
    if (v35)
    {
      return swift_release();
    }
    else
    {
      swift_release();
      sub_1DC9A59A0();
      swift_release();
      sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
      uint64_t v21 = sub_1DCB873A8();
      uint64_t result = swift_release();
      *uint64_t v27 = v21;
      v27[1] = v25;
      v27[2] = v26;
      v27[3] = v23;
      v27[4] = v22;
      v27[5] = v19;
      v27[6] = v24;
    }
  }
  return result;
}

uint64_t sub_1DC9473EC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  if ((sub_1DC9311DC() & 0x3F) != 0)
  {
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v5 = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v16 = sub_1DCB88628();
    uint64_t v17 = v7;
    uint64_t v9 = v8;
    uint64_t v10 = sub_1DCB88628();
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    sub_1DC88D0CC(a1);
    sub_1DC93BB0C();
    if (v2)
    {
      return sub_1DC9139C0(a1);
    }
    else
    {
      sub_1DC9139C0(a1);
      sub_1DC9A59A0();
      swift_release();
      sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
      uint64_t v15 = sub_1DCB873A8();
      uint64_t result = swift_release();
      *a2 = v15;
      a2[1] = v16;
      a2[2] = v9;
      a2[3] = v17;
      a2[4] = v10;
      a2[5] = v12;
      a2[6] = v14;
    }
  }
  return result;
}

uint64_t sub_1DC9475B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>, uint8x8_t a4@<D0>)
{
  uint64_t v31 = *(void *)(a2 + 8);
  uint64_t v32 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v29 = *(void *)(a2 + 24);
  uint64_t v30 = *(void *)(a2 + 16);
  uint64_t v28 = *(void *)(a2 + 40);
  a4.i32[0] = *(_DWORD *)(a2 + 48);
  uint16x8_t v7 = vmovl_u8(a4);
  uint64_t v34 = *(void *)(a2 + 56);
  char v33 = *(unsigned char *)(a2 + 64);
  v7.i64[0] &= 0xFF01FF01FF01FF01;
  int16x8_t v27 = (int16x8_t)v7;
  char v8 = *(unsigned char *)(a2 + 52) & 1;
  char v9 = *(unsigned char *)(a2 + 53) & 1;
  unsigned int v10 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames);
  if (v10 >= 0x200) {
    uint64_t v11 = (v10 - 512) / 0xA0 + 1;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v23 = sub_1DCB88628();
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  uint64_t v14 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames)
      / 0xA0u;
  uint64_t v20 = sub_1DCB88628();
  uint64_t v21 = v15;
  uint64_t v22 = v16;
  __src[0] = v32;
  __src[1] = v31;
  __src[2] = v30;
  __src[3] = v29;
  __src[4] = v6;
  __src[5] = v28;
  unsigned __int32 v37 = vmovn_s16(v27).u32[0];
  char v38 = v8;
  char v39 = v9;
  uint64_t v40 = v34;
  char v41 = v33 & 1;
  uint64_t v42 = v11;
  uint64_t v43 = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DC882264(a2);
  sub_1DC93B838(__src);
  sub_1DC88CABC(a2);
  swift_release();
  swift_release();
  if (v35) {
    return swift_release();
  }
  swift_release();
  uint64_t v18 = sub_1DC906B3C();
  swift_release();
  uint64_t v44 = v18;
  sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
  uint64_t v19 = sub_1DCB873A8();
  uint64_t result = swift_release();
  *a3 = v19;
  a3[1] = v23;
  a3[2] = v24;
  a3[3] = v25;
  a3[4] = v20;
  a3[5] = v21;
  a3[6] = v22;
  return result;
}

uint64_t sub_1DC947850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned int v7 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_windowLengthFrames);
  if (v7 >= 0x200) {
    uint64_t v8 = (v7 - 512) / 0xA0 + 1;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v20 = sub_1DCB88628();
  uint64_t v21 = v9;
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(a1 + OBJC_IVAR____TtC13SoundAnalysis41SNSoundPrintFeatureExtractorConfiguration_stepSizeFrames)
      / 0xA0u;
  uint64_t v13 = sub_1DCB88628();
  uint64_t v15 = v14;
  uint64_t v19 = v16;
  sub_1DC88D0CC(a2);
  sub_1DC93B90C(v8, v12);
  if (v3) {
    return sub_1DC9139C0(a2);
  }
  sub_1DC9139C0(a2);
  sub_1DC906B3C();
  swift_release();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
  uint64_t v18 = sub_1DCB873A8();
  uint64_t result = swift_release();
  *a3 = v18;
  a3[1] = v20;
  a3[2] = v11;
  a3[3] = v21;
  a3[4] = v13;
  a3[5] = v15;
  a3[6] = v19;
  return result;
}

uint64_t sub_1DC947A08()
{
  return sub_1DC93B7D8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DC958168);
}

uint64_t sub_1DC947A5C()
{
  return sub_1DC93B7D8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1DC959A70);
}

uint64_t sub_1DC947AAC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DC87E988((uint64_t *)&unk_1EAAA1620);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  swift_storeEnumTagMultiPayload();
  return sub_1DC8B9CD4((uint64_t)v8, a3, (uint64_t *)&unk_1EAAA1620);
}

void *sub_1DC947B94(void *(*a1)(uint64_t *__return_ptr, __int16 *), uint64_t a2, int a3)
{
  __int16 v5 = a3;
  char v6 = BYTE2(a3) & 1;
  uint64_t result = a1(&var1, &v5);
  if (!v3) {
    return (void *)var1;
  }
  return result;
}

void *sub_1DC947BE0(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = a3;
  char v7 = a4;
  uint64_t result = a1(&v8, &v6);
  if (!v4) {
    return (void *)v8;
  }
  return result;
}

id sub_1DC947C30(id a1, char a2)
{
  if (a2)
  {
    id v3 = a1;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
  }
  return a1;
}

id sub_1DC947C88(id a1, char a2)
{
  if (a2)
  {
    id v4 = a1;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
  }
  else
  {
    id v3 = a1;
  }
  return a1;
}

uint64_t sub_1DC947CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA1620);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (void *)((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC8B9F3C(a1, (uint64_t)v6, (uint64_t *)&unk_1EAAA1620);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_1DC8B9CD4((uint64_t)v6, a2, &qword_1EAAA1630);
  }
  v8[1] = *v6;
  sub_1DC87E988(&qword_1EAA9DF60);
  return swift_willThrowTypedImpl();
}

void *sub_1DC947DF4(void *a1)
{
  id v2 = a1;
  return a1;
}

uint64_t sub_1DC947E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC8B9F3C(a1, a2, &qword_1EAAA1630);
}

uint64_t sub_1DC947E40@<X0>(int a1@<W0>, long long *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v71 = a3;
  uint64_t v6 = sub_1DC87E988((uint64_t *)&unk_1EAAA4FF0);
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v63 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D10);
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v68 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v64 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DCB86BF8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v69 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v56 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v56 - v17;
  sub_1DCB86BE8();
  uint64_t v77 = 0;
  unint64_t v78 = 0xE000000000000000;
  LODWORD(v70) = a1;
  LOBYTE(v79) = a1;
  sub_1DCB88C08();
  uint64_t v74 = v77;
  unint64_t v76 = v78;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1DCB86FE8();
  uint64_t v20 = sub_1DC89F57C(v19, (uint64_t)qword_1EAAFF810);
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v61 = v11 + 16;
  v60(v16, v18, v10);
  swift_bridgeObjectRetain_n();
  uint64_t v62 = v20;
  uint64_t v21 = sub_1DCB86FC8();
  os_log_type_t v22 = sub_1DCB88488();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v58 = a4;
    uint64_t v24 = v23;
    uint64_t v57 = swift_slowAlloc();
    uint64_t v77 = v57;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v75 = v11;
    sub_1DC959450(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v25 = sub_1DCB88F98();
    uint64_t v79 = sub_1DC9F8920(v25, v26, &v77);
    unint64_t v27 = v76;
    uint64_t v59 = v18;
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v75 + 8);
    v28(v16, v10);
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1DC9F8920(v74, v27, &v77);
    uint64_t v18 = v59;
    uint64_t v11 = v75;
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    os_log_type_t v29 = v22;
    uint64_t v30 = v28;
    _os_log_impl(&dword_1DC873000, v21, v29, "Started Creating Sound Recognition Session %s (%s)", (uint8_t *)v24, 0x16u);
    uint64_t v31 = v57;
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v31, -1, -1);
    uint64_t v32 = v24;
    a4 = v58;
    MEMORY[0x1E01A99C0](v32, -1, -1);
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v16, v10);

    swift_bridgeObjectRelease_n();
  }
  char v33 = v73;
  uint64_t v34 = sub_1DC94C088(v70, (uint64_t)v18, v71, v72);
  if (v33)
  {
    v30(v18, v10);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = v34;
    uint64_t v72 = 0;
    uint64_t v73 = v30;
    uint64_t v75 = v11;
    unsigned __int32 v37 = (void *)swift_allocObject();
    v37[2] = sub_1DCA2B870;
    v37[3] = 0;
    v37[4] = v36;
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    char v38 = v63;
    sub_1DCB87378();
    uint64_t v77 = 0;
    unint64_t v78 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    uint64_t v77 = 0xD000000000000018;
    unint64_t v78 = 0x80000001DCB93490;
    uint64_t v70 = sub_1DC959450(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCB87A18();
    char v39 = v64;
    sub_1DCA25C0C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v66);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0D20, (uint64_t *)&unk_1EAAA0D10);
    uint64_t v40 = v68;
    uint64_t v41 = sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v40);
    uint64_t v42 = v60;
    v60(a4, v18, v10);
    *(void *)&a4[*(int *)(type metadata accessor for SoundRecognition.Session() + 20)] = v41;
    uint64_t v43 = v69;
    v42(v69, v18, v10);
    swift_bridgeObjectRetain();
    uint64_t v71 = v41;
    swift_retain();
    uint64_t v44 = sub_1DCB86FC8();
    os_log_type_t v45 = sub_1DCB88488();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      unint64_t v47 = v76;
      uint64_t v48 = v43;
      uint64_t v49 = v46;
      uint64_t v68 = swift_slowAlloc();
      uint64_t v77 = v68;
      *(_DWORD *)uint64_t v49 = 136315394;
      uint64_t v50 = sub_1DCB88F98();
      uint64_t v79 = sub_1DC9F8920(v50, v51, &v77);
      uint64_t v59 = v18;
      sub_1DCB88778();
      swift_bridgeObjectRelease();
      uint64_t v52 = v48;
      uint64_t v53 = (uint64_t (*)(char *, uint64_t))v73;
      v73(v52, v10);
      *(_WORD *)(v49 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v79 = sub_1DC9F8920(v74, v47, &v77);
      sub_1DCB88778();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DC873000, v44, v45, "Finished Creating Sound Recognition Session %s (%s)", (uint8_t *)v49, 0x16u);
      uint64_t v54 = v68;
      swift_arrayDestroy();
      MEMORY[0x1E01A99C0](v54, -1, -1);
      MEMORY[0x1E01A99C0](v49, -1, -1);
      swift_release();

      return v53(v59, v10);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v55 = (uint64_t (*)(char *, uint64_t))v73;
      v73(v43, v10);
      swift_release();
      return v55(v18, v10);
    }
  }
}

uint64_t sub_1DC948788@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v70 = a2;
  uint64_t v67 = a3;
  uint64_t v64 = sub_1DC87E988(&qword_1EAAAA930);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v61 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1DC87E988(&qword_1EAAA11A0);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v62 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DCB86BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v68 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v54 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v54 - v15;
  sub_1DCB86BE8();
  uint64_t v73 = 0x206D6F74737563;
  unint64_t v74 = 0xE700000000000000;
  uint64_t v69 = a1;
  swift_bridgeObjectRetain();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  uint64_t v71 = v73;
  unint64_t v17 = v74;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1DCB86FE8();
  uint64_t v19 = sub_1DC89F57C(v18, (uint64_t)qword_1EAAFF810);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v59 = v9 + 16;
  uint64_t v58 = v20;
  v20(v14, v16, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v60 = v19;
  uint64_t v21 = sub_1DCB86FC8();
  os_log_type_t v22 = sub_1DCB88488();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v57 = v16;
    uint64_t v24 = v23;
    uint64_t v55 = swift_slowAlloc();
    uint64_t v73 = v55;
    *(_DWORD *)uint64_t v24 = 136446466;
    uint64_t v72 = v9;
    sub_1DC959450(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v25 = sub_1DCB88F98();
    uint64_t v76 = sub_1DC9F8920(v25, v26, &v73);
    uint64_t v56 = v3;
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    unint64_t v27 = *(void (**)(char *, uint64_t))(v72 + 8);
    v27(v14, v8);
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_1DC9F8920(v71, v17, &v73);
    uint64_t v4 = v56;
    uint64_t v9 = v72;
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v21, v22, "Started Creating Accessibility Sound Recognition Session %{public}s (%s)", (uint8_t *)v24, 0x16u);
    uint64_t v28 = v55;
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v28, -1, -1);
    uint64_t v29 = v24;
    uint64_t v16 = v57;
    MEMORY[0x1E01A99C0](v29, -1, -1);
  }
  else
  {
    unint64_t v27 = *(void (**)(char *, uint64_t))(v9 + 8);
    v27(v14, v8);

    swift_bridgeObjectRelease_n();
  }
  memcpy(__dst, (const void *)(v69 + 16), sizeof(__dst));
  uint64_t v30 = sub_1DC950B50(__dst, (uint64_t)v70);
  if (v4)
  {
    v27(v16, v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v69 = 0;
    uint64_t v70 = v27;
    uint64_t v72 = v9;
    uint64_t v73 = (uint64_t)v30;
    sub_1DC87E988(&qword_1EAAA11A8);
    sub_1DC88CF34(&qword_1EAAA11B0, &qword_1EAAA11A8);
    uint64_t v32 = sub_1DCB873A8();
    swift_release();
    char v33 = (void *)swift_allocObject();
    v33[2] = sub_1DCA5149C;
    v33[3] = 0;
    v33[4] = v32;
    uint64_t v34 = v61;
    sub_1DCB87378();
    uint64_t v73 = 0;
    unint64_t v74 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    uint64_t v73 = 0xD000000000000026;
    unint64_t v74 = 0x80000001DCB93510;
    uint64_t v56 = sub_1DC959450(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCB87A18();
    uint64_t v35 = v62;
    sub_1DCA25CEC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v34, v64);
    sub_1DC88CF34(&qword_1EAAA11B8, &qword_1EAAA11A0);
    uint64_t v36 = v66;
    uint64_t v37 = sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v36);
    uint64_t v38 = v67;
    char v39 = v58;
    v58((char *)v67, v16, v8);
    *(void *)(v38 + *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20)) = v37;
    uint64_t v40 = v68;
    v39(v68, v16, v8);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v41 = v16;
    uint64_t v42 = sub_1DCB86FC8();
    os_log_type_t v43 = sub_1DCB88488();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v57 = v41;
      unint64_t v45 = v17;
      uint64_t v46 = v40;
      uint64_t v47 = v44;
      uint64_t v67 = swift_slowAlloc();
      uint64_t v73 = v67;
      *(_DWORD *)uint64_t v47 = 136446466;
      uint64_t v48 = sub_1DCB88F98();
      uint64_t v76 = sub_1DC9F8920(v48, v49, &v73);
      uint64_t v66 = v37;
      sub_1DCB88778();
      swift_bridgeObjectRelease();
      uint64_t v50 = v46;
      unint64_t v51 = (uint64_t (*)(char *, uint64_t))v70;
      v70(v50, v8);
      *(_WORD *)(v47 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_1DC9F8920(v71, v45, &v73);
      sub_1DCB88778();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DC873000, v42, v43, "Finished Creating Accessibility Sound Recognition Session %{public}s (%s)", (uint8_t *)v47, 0x16u);
      uint64_t v52 = v67;
      swift_arrayDestroy();
      MEMORY[0x1E01A99C0](v52, -1, -1);
      MEMORY[0x1E01A99C0](v47, -1, -1);
      swift_release();

      return v51(v57, v8);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v53 = (uint64_t (*)(char *, uint64_t))v70;
      v70(v40, v8);
      swift_release();
      return v53(v41, v8);
    }
  }
}

uint64_t sub_1DC949234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v135 = a3;
  uint64_t v134 = *(void *)a2;
  uint64_t v133 = *(void *)(a2 + 8);
  uint64_t v132 = *(void *)(a2 + 16);
  uint64_t v131 = *(void *)(a2 + 24);
  uint64_t v130 = *(void *)(a2 + 32);
  uint64_t v129 = *(void *)(a2 + 40);
  v4.i32[0] = *(_DWORD *)(a2 + 48);
  v138.i32[0] = *(unsigned __int8 *)(a2 + 52);
  int v128 = *(unsigned __int8 *)(a2 + 53);
  uint64_t v137 = *(void *)(a2 + 56);
  LODWORD(v136) = *(unsigned __int8 *)(a2 + 64);
  uint64_t v123 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v120 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = sub_1DCB870B8();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  uint64_t v117 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  char v121 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1DC87E988(&qword_1EAA9EFF8);
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  long long v127 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1DC87E988(&qword_1EAAA0B40);
  MEMORY[0x1F4188790](v113);
  uint64_t v116 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1DC87E988(&qword_1EAAA0B48);
  uint64_t v112 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA0BB0);
  uint64_t v110 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DC87E988(&qword_1EAAA0BB8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC957634(a1, (uint64_t)v141);
  sub_1DC957634((uint64_t)v141, (uint64_t)&time);
  uint64_t v20 = v150;
  uint64_t v21 = sub_1DCA1D994((uint64_t)&time);
  if (v20) {
    return v3;
  }
  uint64_t v150 = v21;
  uint64_t v102 = a2;
  uint64_t v126 = a1;
  uint64_t v109 = v22;
  uint64_t v100 = v13;
  uint64_t v108 = 0;
  char v101 = v16;
  sub_1DC957634((uint64_t)v141, (uint64_t)&time);
  uint64_t v23 = sub_1DCA1DA2C((uint64_t)&time);
  uint64_t v99 = v14;
  uint64_t v98 = v19;
  uint64_t v97 = v17;
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    uint64_t v96 = sub_1DCB87938();
    unint64_t v107 = v25;
  }
  else
  {
    uint64_t v96 = 0;
    unint64_t v107 = 0xE000000000000000;
  }
  uint64_t v26 = v126;
  CMTimeValue v27 = *(void *)(v126 + 24);
  CMTimeEpoch v28 = *(void *)(v126 + 40);
  uint64_t v29 = type metadata accessor for SNModelMetadataUtils();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v31 = v109;
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v109 + 16);
  uint64_t v33 = *(void *)(v26 + 32);
  uint64_t v34 = (void *)v32(ObjectType, v109);
  uint64_t v105 = v29;
  uint64_t v35 = sub_1DCB30BDC(v34, 16000);

  id v36 = objc_allocWithZone(NSNumber);
  unsigned int v106 = v35;
  id v37 = objc_msgSend(v36, sel_initWithUnsignedInt_, v35);
  sub_1DC8AE910(v37);
  LODWORD(v34) = v38;

  time.CMTimeValue value = v27;
  *(void *)&time.timescale = v33;
  time.CMTimeEpoch epoch = v28;
  CMTimeConvertScale(&v139, &time, (int32_t)v34, kCMTimeRoundingMethod_RoundTowardZero);
  id v39 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v139.value);
  sub_1DCB22DE0(v39);
  unsigned int v41 = v40;

  uint64_t v104 = ObjectType;
  uint64_t v103 = v32;
  uint64_t v42 = (void *)v32(ObjectType, v31);
  id v43 = objc_msgSend(v42, sel_inputDescriptionsByName);

  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v44 = sub_1DCB877B8();

  unint64_t v45 = (void *)sub_1DC9A4430(v44);
  swift_bridgeObjectRelease();
  if (v45)
  {
    id v46 = objc_msgSend(v45, sel_multiArrayConstraint);

    __int8 v47 = v138.i8[0];
    if (v46)
    {
      id v48 = objc_msgSend(v46, sel_shape);

      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
      unint64_t v49 = sub_1DCB87C38();
    }
    else
    {
      unint64_t v49 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    unint64_t v49 = MEMORY[0x1E4FBC860];
    __int8 v47 = v138.i8[0];
  }
  double v50 = *(double *)(v126 + 48);
  uint64_t v3 = type metadata accessor for SNUtils();
  unsigned int v51 = sub_1DCB219B0(v49);
  swift_bridgeObjectRelease();
  if (v50 < 0.0 || v50 >= 1.0)
  {
    swift_bridgeObjectRelease();
    sub_1DC957690();
    swift_allocError();
    *uint64_t v53 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
    return v3;
  }
  uint16x8_t v54 = vmovl_u8(v4);
  unsigned int v55 = v41;
  char v56 = v47 & 1;
  char v57 = v128 & 1;
  v54.i64[0] &= 0xFF01FF01FF01FF01;
  int16x8_t v138 = (int16x8_t)v54;
  double v58 = round((1.0 - v50) * (double)v55);
  if (v58 > 1.0) {
    double v59 = v58;
  }
  else {
    double v59 = 1.0;
  }
  uint64_t v60 = (void *)v103(v104, v109);
  uint64_t v61 = sub_1DCB30CCC(v60, MEMORY[0x1E4FBC870]);

  uint64_t v3 = *(void *)(v135 + 32);
  __src[0] = v134;
  __src[1] = v133;
  __src[2] = v132;
  __src[3] = v131;
  __src[4] = v130;
  __src[5] = v129;
  unsigned __int32 v143 = vmovn_s16(v138).u32[0];
  char v144 = v56;
  char v145 = v57;
  uint64_t v146 = v137;
  char v147 = v136 & 1;
  uint64_t v148 = v51;
  uint64_t v149 = v106;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v62 = v102;
  sub_1DC882264(v102);
  uint64_t v63 = v108;
  uint64_t v64 = sub_1DC9A7F88(__src);
  uint64_t v108 = v63;
  if (v63)
  {
    sub_1DC88CABC(v62);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return v3;
  }
  uint64_t v66 = v64;
  uint64_t v137 = v61;
  v138.i32[0] = v55;
  sub_1DC88CABC(v62);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v136 = v66;
  time.CMTimeValue value = sub_1DC9A7A54();
  uint64_t v67 = v118;
  uint64_t v68 = v117;
  uint64_t v69 = v119;
  (*(void (**)(char *, void, uint64_t))(v118 + 104))(v117, *MEMORY[0x1E4F1A8F8], v119);
  uint64_t v70 = v120;
  uint64_t *v120 = sub_1DCA1EFEC;
  v70[1] = 0;
  uint64_t v71 = v122;
  uint64_t v72 = v123;
  (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v122 + 104))(v70, *MEMORY[0x1E4F1A920], v123);
  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  uint64_t v73 = v121;
  sub_1DCB87478();
  (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v71 + 8))(v70, v72);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
  swift_release();
  uint64_t v74 = sub_1DC87E988(&qword_1EAA9F030);
  sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
  uint64_t v75 = v125;
  sub_1DCB873D8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v73, v75);
  if ((~*(void *)&v59 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v76 = (uint64_t)v116;
  uint64_t v77 = v115;
  uint64_t v78 = v114;
  unsigned __int32 v79 = v138.i32[0];
  if (v59 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v80 = (int *)v113;
  if (v59 < 9.22337204e18)
  {
    uint64_t v81 = v127;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v116, v127, v115);
    *(void *)(v76 + v80[15]) = v79;
    *(void *)(v76 + v80[16]) = (uint64_t)v59;
    *(void *)(v76 + v80[17]) = v74;
    (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v77);
    sub_1DC87E988(&qword_1EAAA0BC0);
    sub_1DC88CF34(&qword_1EAAA0BC8, &qword_1EAAA0B40);
    uint64_t v82 = (uint64_t)v100;
    sub_1DCB873D8();
    sub_1DC88CC04(v76, &qword_1EAAA0B40);
    unint64_t v83 = v101;
    uint64_t v84 = v150;
    uint64_t v85 = v109;
    uint64_t v3 = v82;
    uint64_t v86 = v108;
    sub_1DC99C158();
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v82, v111);
    if (v86)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v87 = swift_allocObject();
      *(double *)(v87 + 16) = v59;
      *(_DWORD *)(v87 + 24) = v106;
      *(void *)(v87 + 32) = v84;
      *(void *)(v87 + 40) = v85;
      *(void *)(v87 + 48) = v137;
      *(_DWORD *)(v87 + 56) = v79;
      unint64_t v88 = v107;
      *(void *)(v87 + 64) = v96;
      *(void *)(v87 + 72) = v88;
      uint64_t v89 = v110;
      uint64_t v90 = (uint64_t)v98;
      uint64_t v91 = v99;
      (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v98, v83, v99);
      uint64_t v92 = v97;
      uint64_t v93 = (double (**)@<D0>(uint64_t@<X8>))(v90 + *(int *)(v97 + 52));
      *uint64_t v93 = sub_1DC8C9A5C;
      v93[1] = 0;
      uint64_t v94 = (void (**)(uint64_t@<X8>))(v90 + *(int *)(v92 + 56));
      long long *v94 = sub_1DC9576E0;
      v94[1] = (void (*)(uint64_t@<X8>))v87;
      uint64_t v95 = *(void (**)(char *, uint64_t))(v89 + 8);
      swift_unknownObjectRetain();
      v95(v83, v91);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA0BD0, &qword_1EAAA0BB8);
      uint64_t v3 = sub_1DCB873A8();
      swift_unknownObjectRelease();
      swift_release();
      sub_1DC88CC04(v90, &qword_1EAAA0BB8);
    }
    return v3;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DC94A160(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v136 = a3;
  uint64_t v131 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v130 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  uint64_t v129 = v10;
  uint64_t v128 = sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v137 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  sub_1DC888164(v13);
  uint64_t v133 = sub_1DC87E988(&qword_1EAA9EFF0);
  sub_1DC89D4E0();
  uint64_t v132 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1DC88D550();
  sub_1DC888164(v16);
  uint64_t v125 = sub_1DC87E988(&qword_1EAA9EFF8);
  sub_1DC89D4E0();
  uint64_t v124 = v17;
  MEMORY[0x1F4188790](v18);
  sub_1DC88D550();
  sub_1DC888164(v19);
  uint64_t v122 = sub_1DC87E988(&qword_1EAAA0B40);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v20);
  sub_1DC888164((uint64_t)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_1DC87E988(&qword_1EAAA0B48);
  sub_1DC89D4E0();
  uint64_t v123 = v23;
  MEMORY[0x1F4188790](v24);
  sub_1DC8CD750();
  uint64_t v25 = sub_1DC87E988(&qword_1EAAA0BB0);
  sub_1DC89D4E0();
  uint64_t v121 = v26;
  MEMORY[0x1F4188790](v27);
  sub_1DC89D9B8();
  uint64_t v28 = sub_1DC87E988(&qword_1EAAA0BB8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v29);
  sub_1DC89D970();
  sub_1DC957634(a1, (uint64_t)v142);
  sub_1DC957634((uint64_t)v142, (uint64_t)&time);
  uint64_t v30 = v138;
  uint64_t v31 = sub_1DCA1D994((uint64_t)&time);
  if (v30) {
    return (uint64_t)v4;
  }
  uint64_t v138 = v31;
  uint64_t v135 = a1;
  uint64_t v120 = v32;
  uint64_t v112 = v3;
  uint64_t v119 = 0;
  uint64_t v113 = v22;
  sub_1DC957634((uint64_t)v142, (uint64_t)&time);
  uint64_t v33 = sub_1DCA1DA2C((uint64_t)&time);
  uint64_t v111 = v25;
  uint64_t v110 = v5;
  uint64_t v109 = v28;
  uint64_t v114 = v6;
  if (v33)
  {
    uint64_t v34 = (void *)v33;
    uint64_t v108 = sub_1DCB87938();
    unint64_t v117 = v35;
  }
  else
  {
    uint64_t v108 = 0;
    unint64_t v117 = 0xE000000000000000;
  }
  uint64_t v36 = v135;
  CMTimeValue v37 = *(void *)(v135 + 24);
  CMTimeEpoch v118 = *(void *)(v135 + 40);
  uint64_t v38 = type metadata accessor for SNModelMetadataUtils();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v40 = v120;
  unsigned int v41 = *(uint64_t (**)(uint64_t, uint64_t))(v120 + 16);
  uint64_t v42 = *(void *)(v36 + 32);
  id v43 = (void *)v41(ObjectType, v120);
  uint64_t v115 = v38;
  uint64_t v44 = sub_1DCB30BDC(v43, 16000);

  id v45 = objc_allocWithZone(NSNumber);
  unsigned int v116 = v44;
  id v46 = objc_msgSend(v45, sel_initWithUnsignedInt_, v44);
  sub_1DC8AE910(v46);
  LODWORD(v43) = v47;

  time.CMTimeValue value = v37;
  *(void *)&time.timescale = v42;
  time.CMTimeEpoch epoch = v118;
  CMTimeConvertScale(&v139, &time, (int32_t)v43, kCMTimeRoundingMethod_RoundTowardZero);
  id v48 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v139.value);
  sub_1DCB22DE0(v48);
  LODWORD(v118) = v49;

  double v50 = (void *)v41(ObjectType, v40);
  id v51 = objc_msgSend(v50, sel_inputDescriptionsByName);

  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v52 = sub_1DCB877B8();

  uint64_t v53 = (void *)sub_1DC9A4430(v52);
  swift_bridgeObjectRelease();
  if (v53)
  {
    id v54 = objc_msgSend(v53, sel_multiArrayConstraint);

    uint64_t v55 = v137;
    if (v54)
    {
      id v56 = objc_msgSend(v54, sel_shape);

      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
      unint64_t v57 = sub_1DCB87C38();
    }
    else
    {
      unint64_t v57 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    unint64_t v57 = MEMORY[0x1E4FBC860];
    uint64_t v55 = v137;
  }
  double v58 = *(double *)(v135 + 48);
  uint8x8_t v4 = (_OWORD *)type metadata accessor for SNUtils();
  unsigned int v59 = sub_1DCB219B0(v57);
  swift_bridgeObjectRelease();
  if (v58 < 0.0 || v58 >= 1.0)
  {
    swift_bridgeObjectRelease();
    sub_1DC957690();
    swift_allocError();
    *uint64_t v61 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
    return (uint64_t)v4;
  }
  double v62 = round((1.0 - v58) * (double)v118);
  if (v62 > 1.0) {
    double v63 = v62;
  }
  else {
    double v63 = 1.0;
  }
  uint64_t v64 = (void *)v41(ObjectType, v120);
  uint64_t v65 = sub_1DCB30CCC(v64, MEMORY[0x1E4FBC870]);

  uint64_t v66 = v59;
  uint64_t v67 = v116;
  uint64_t v68 = v136;
  long long v69 = v136[1];
  v141[0] = *v136;
  v141[1] = v69;
  long long v70 = v136[3];
  v141[2] = v136[2];
  v141[3] = v70;
  sub_1DC88D0CC((uint64_t)v136);
  uint8x8_t v4 = v141;
  uint64_t v71 = v119;
  uint64_t v72 = sub_1DC9A805C(v66, v67);
  uint64_t v119 = v71;
  if (v71)
  {
    sub_1DC9139C0((uint64_t)v68);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  uint64_t v74 = v72;
  uint64_t v135 = v65;
  sub_1DC9139C0((uint64_t)v68);
  uint64_t v137 = v74;
  time.CMTimeValue value = sub_1DC9A7A54();
  uint64_t v75 = v127;
  uint64_t v76 = v128;
  sub_1DC8BAE70();
  v77();
  uint64_t v78 = v129;
  *uint64_t v129 = sub_1DCA1EFEC;
  v78[1] = 0;
  uint64_t v79 = v130;
  uint64_t v80 = v131;
  sub_1DC8BAE70();
  v81();
  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  sub_1DCB87478();
  (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v79 + 8))(v78, v80);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v75, v76);
  swift_release();
  uint64_t v82 = sub_1DC87E988(&qword_1EAA9F030);
  sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
  uint64_t v83 = v134;
  sub_1DCB873D8();
  sub_1DC88D5C8();
  uint64_t result = v84();
  if ((~*(void *)&v63 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v85 = v114;
  uint64_t v86 = v126;
  uint64_t v87 = v125;
  uint64_t v88 = v124;
  if (v63 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v63 < 9.22337204e18)
  {
    uint64_t v89 = v118;
    sub_1DC8E7D10();
    v90();
    uint64_t v91 = v83;
    uint64_t v92 = v122;
    *(void *)(v86 + *(int *)(v122 + 60)) = v89;
    *(void *)(v86 + *(int *)(v92 + 64)) = (uint64_t)v63;
    *(void *)(v86 + *(int *)(v92 + 68)) = v82;
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v91, v87);
    sub_1DC87E988(&qword_1EAAA0BC0);
    sub_1DC88CF34(&qword_1EAAA0BC8, &qword_1EAAA0B40);
    uint64_t v93 = v112;
    sub_1DCB873D8();
    sub_1DC88CC04(v86, &qword_1EAAA0B40);
    uint64_t v94 = v138;
    uint64_t v95 = v120;
    uint8x8_t v4 = v93;
    uint64_t v96 = v119;
    sub_1DC99C158();
    sub_1DC88D5C8();
    v97();
    if (v96)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v98 = swift_allocObject();
      *(double *)(v98 + 16) = v63;
      *(_DWORD *)(v98 + 24) = v116;
      *(void *)(v98 + 32) = v94;
      *(void *)(v98 + 40) = v95;
      *(void *)(v98 + 48) = v135;
      *(_DWORD *)(v98 + 56) = v118;
      unint64_t v99 = v117;
      *(void *)(v98 + 64) = v108;
      *(void *)(v98 + 72) = v99;
      uint64_t v100 = v121;
      uint64_t v101 = v110;
      uint64_t v102 = v111;
      sub_1DC8E7D10();
      v103();
      uint64_t v104 = v109;
      uint64_t v105 = (double (**)@<D0>(uint64_t@<X8>))(v101 + *(int *)(v109 + 52));
      char *v105 = sub_1DC8C9A5C;
      v105[1] = 0;
      unsigned int v106 = (void (**)(uint64_t@<X8>))(v101 + *(int *)(v104 + 56));
      char *v106 = sub_1DC9576E0;
      v106[1] = (void (*)(uint64_t@<X8>))v98;
      unint64_t v107 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      swift_unknownObjectRetain();
      v107(v85, v102);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA0BD0, &qword_1EAAA0BB8);
      uint8x8_t v4 = (_OWORD *)sub_1DCB873A8();
      swift_unknownObjectRelease();
      swift_release();
      sub_1DC88CC04(v101, &qword_1EAAA0BB8);
    }
    return (uint64_t)v4;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1DC94AD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1EAA9D258;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_1EAAFFA58;
  uint64_t v6 = unk_1EAAFFA68;
  uint64_t v7 = unk_1EAAFFA78;
  sub_1DC95AD94();
  uint64_t v9 = *(void *)(v8 + 56);
  LOBYTE(v8) = *(unsigned char *)(v8 + 64);
  __src[0] = v10;
  __src[1] = v5;
  __src[2] = v11;
  __src[3] = v6;
  __src[4] = v12;
  __src[5] = v7;
  char v22 = v13;
  char v23 = v14;
  char v24 = v15;
  char v25 = v16;
  char v26 = v17;
  char v27 = v18;
  uint64_t v28 = v9;
  char v29 = v8;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1DC93B838(__src);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  return v19;
}

uint64_t sub_1DC94AEC4()
{
  uint64_t v0 = qword_1EAA9D258;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_1EAAFFA58;
  uint64_t v2 = unk_1EAAFFA68;
  uint64_t v3 = unk_1EAAFFA78;
  sub_1DC95AD94();
  uint64_t v5 = *(void *)(v4 + 56);
  char v32 = *(unsigned char *)(v4 + 64);
  v17[0] = v6;
  v17[1] = v1;
  uint64_t v17[2] = v7;
  v17[3] = v2;
  v17[4] = v8;
  v17[5] = v3;
  char v18 = v9;
  char v19 = v10;
  char v20 = v11;
  char v21 = v12;
  char v22 = v13;
  char v23 = v14;
  uint64_t v24 = v5;
  char v25 = v32;
  uint64_t v26 = 0x40467A0000;
  uint64_t v27 = 0x45F8700042480000;
  uint64_t v28 = 0x38D1B71700000001;
  char v29 = 1;
  long long v30 = xmmword_1DCBC0340;
  uint64_t v31 = 0x100000000;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1DC889A2C(v17);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  return v15;
}

uint64_t sub_1DC94B05C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = qword_1EAA9D258;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  memcpy(__dst, &qword_1EAAFFA50, 0x41uLL);
  swift_retain();
  uint64_t v5 = sub_1DC91B018(__dst);
  if (v2)
  {
    swift_release();
    swift_release();
    return swift_release_n();
  }
  else
  {
    uint64_t v7 = v5;
    swift_release();
    a1[3] = type metadata accessor for SharedBuiltInMicrophone.Instance();
    a1[4] = (uint64_t)&off_1F37EF080;
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    *a1 = v7;
  }
  return result;
}

char **sub_1DC94B178(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a3;
  uint64_t v55 = a1;
  uint64_t v47 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F70);
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  id v39 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1DC87E988((uint64_t *)&unk_1EAAA5340);
  uint64_t v42 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v38 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F80);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  CMTimeValue v37 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1DC87E988((uint64_t *)&unk_1EAAA5350);
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v40 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  char v11 = (char **)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = sub_1DCB870B8();
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  char v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1DC87E988(&qword_1EAAA0C10);
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  id v56 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(char ***)(a4 + 32);
  long long v16 = *(_OWORD *)(a4 + 16);
  v59[0] = *(_OWORD *)a4;
  v59[1] = v16;
  uint64_t v60 = v15;
  uint64_t v17 = qword_1EAA9D258;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  __src[0] = qword_1EAAFFA50;
  __src[1] = *(void *)algn_1EAAFFA58;
  __src[2] = qword_1EAAFFA60;
  __src[3] = unk_1EAAFFA68;
  __src[4] = qword_1EAAFFA70;
  __src[5] = unk_1EAAFFA78;
  char v62 = byte_1EAAFFA80;
  char v63 = byte_1EAAFFA81;
  char v64 = byte_1EAAFFA82;
  char v65 = byte_1EAAFFA83;
  char v66 = byte_1EAAFFA84;
  char v67 = byte_1EAAFFA85;
  uint64_t v68 = qword_1EAAFFA88;
  char v69 = byte_1EAAFFA90;
  uint64_t v70 = a2;
  uint64_t v71 = v57;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v58;
  sub_1DC93B838(__src);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v58 = v18;
  if (!v18)
  {
    uint64_t v19 = sub_1DC906B3C();
    swift_release();
    uint64_t v72 = v19;
    uint64_t v20 = v51;
    uint64_t v21 = v52;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v13, *MEMORY[0x1E4F1A8F8], v52);
    *char v11 = sub_1DCA2A6DC;
    v11[1] = 0;
    uint64_t v22 = v53;
    uint64_t v23 = v54;
    (*(void (**)(void *, void, uint64_t))(v53 + 104))(v11, *MEMORY[0x1E4F1A920], v54);
    sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
    uint64_t v24 = v56;
    sub_1DCB87478();
    (*(void (**)(void *, uint64_t))(v22 + 8))(v11, v23);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v21);
    uint64_t v25 = swift_release();
    uint64_t v15 = &v37;
    MEMORY[0x1F4188790](v25);
    *(&v37 - 4) = v55;
    *(&v37 - 3) = (char *)v59;
    *(&v37 - 2) = v24;
    uint64_t v26 = v58;
    uint64_t v27 = sub_1DCA2664C(0xD000000000000021, 0x80000001DCB934E0, (void (*)(uint64_t *__return_ptr))sub_1DC958548);
    uint64_t v58 = v26;
    if (!v26)
    {
      uint64_t v72 = v27;
      sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
      sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
      char v29 = v39;
      sub_1DCB874A8();
      sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
      long long v30 = v38;
      uint64_t v31 = v47;
      sub_1DCB87138();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v31);
      char v32 = v37;
      uint64_t v33 = v45;
      sub_1DCB87138();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v33);
      uint64_t v34 = v40;
      uint64_t v35 = v43;
      sub_1DCB87138();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v35);
      sub_1DC88CF34(&qword_1EAAA0FA0, (uint64_t *)&unk_1EAAA5350);
      uint64_t v36 = v48;
      uint64_t v15 = (char **)sub_1DCB873A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v36);
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v50);
  }
  return v15;
}

uint64_t sub_1DC94BAD4(uint64_t a1)
{
  uint64_t v24 = a1;
  uint64_t v25 = sub_1DCB868D8();
  uint64_t v1 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DCB86A18();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA0FA8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC87E988(&qword_1EAAA0C10);
  sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
  sub_1DCB873D8();
  sub_1DC88CF34(&qword_1EAAA0FB0, &qword_1EAAA0FA8);
  uint64_t v11 = sub_1DCB873A8();
  uint64_t v12 = v24;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v26 = 0x6A2E657069636572;
  unint64_t v27 = 0xEB000000006E6F73;
  uint64_t v13 = v25;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F276C0], v25);
  sub_1DC91ACCC();
  sub_1DCB869F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v13);
  uint64_t v14 = v28;
  uint64_t v15 = sub_1DCB86A58();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    swift_release();
  }
  else
  {
    uint64_t v17 = v15;
    unint64_t v18 = v16;
    uint64_t v20 = v22;
    uint64_t v19 = v23;
    uint64_t v28 = sub_1DC9BDB24();
    uint64_t v13 = sub_1DC9535EC(v28, v11, v12);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v19);
    sub_1DC881920(v17, v18);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t sub_1DC94BED4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F60);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DC94B178(a1, a2, a3, a4);
  if (!v4)
  {
    v16[1] = v14;
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    sub_1DC958114();
    sub_1DCB87538();
    swift_release();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5330, (uint64_t *)&unk_1EAAA0F60);
    uint64_t v5 = sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v5;
}

uint64_t sub_1DC94C088(unsigned __int8 a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v21 = a4;
  uint64_t v8 = a1;
  uint64_t v9 = sub_1DCB86A18();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v20 - v14;
  if (v8 || (sub_1DCA59D44() & 1) == 0)
  {
    unsigned __int8 v17 = sub_1DCA2E104(a1);
    sub_1DC9AC2A0(v17, (uint64_t)v13);
    if (!v4)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
      if (a1) {
        uint64_t v18 = 96;
      }
      else {
        uint64_t v18 = 74;
      }
      uint64_t v22 = sub_1DC94BED4(v15, v18, 48, (uint64_t)v21);
      sub_1DC87E988(&qword_1EAAA0CE8);
      sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
      uint64_t v8 = sub_1DCB873A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
  }
  else
  {
    uint64_t v16 = sub_1DC94C2AC(a2, a3, v21);
    if (!v4) {
      return v16;
    }
  }
  return v8;
}

uint64_t sub_1DC94C2AC(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v123 = a3;
  uint64_t v99 = a2;
  uint64_t v119 = a1;
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v115 = *(void *)(v3 - 8);
  uint64_t v116 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v114 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1DCB870B8();
  uint64_t v112 = *(void *)(v5 - 8);
  uint64_t v113 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v111 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  uint64_t v86 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v89 = v8;
  uint64_t v93 = (uint64_t)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1DCB86BF8();
  uint64_t v90 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v78 = v9;
  uint64_t v83 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D30);
  MEMORY[0x1F4188790](v77);
  uint64_t v76 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DC87E988((uint64_t *)&unk_1EAAA5060);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D40);
  uint64_t v121 = *(void *)(v15 - 8);
  uint64_t v122 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v120 = (char *)v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1DC87E988((uint64_t *)&unk_1EAAA5070);
  uint64_t v79 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  unint64_t v117 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D50);
  uint64_t v84 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v80 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1DC87E988((uint64_t *)&unk_1EAAA5080);
  uint64_t v85 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v82 = (char *)v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D60);
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v91 = (uint64_t)v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1DC87E988((uint64_t *)&unk_1EAAA5090);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v92 = (char *)v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D70);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v96 = (char *)v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1DC87E988((uint64_t *)&unk_1EAAA50A0);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v102 = (char *)v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D80);
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  CMTimeEpoch v118 = (char *)v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1DC87E988((uint64_t *)&unk_1EAAA50B0);
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v105 = (char *)v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0D90);
  swift_allocObject();
  uint64_t v26 = sub_1DCB872B8();
  *(void *)&long long v125 = v26;
  *((void *)&v125 + 1) = sub_1DCA2F518;
  *(void *)&long long v126 = 0;
  *((void *)&v126 + 1) = sub_1DCA2F4D8;
  uint64_t v127 = 0;
  uint64_t v128 = &unk_1F37FB570;
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA50C0);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0DA0);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA50D0, (uint64_t *)&unk_1EAAA50C0);
  unint64_t v27 = v120;
  sub_1DC88CF34((unint64_t *)&unk_1EAAA0DB0, (uint64_t *)&unk_1EAAA0DA0);
  sub_1DCB874F8();
  swift_release();
  sub_1DC88CF34((unint64_t *)&unk_1EAAA50E0, (uint64_t *)&unk_1EAAA5060);
  sub_1DCB87538();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  char v29 = v123;
  uint64_t v28 = v124;
  sub_1DC94B05C((uint64_t *)&v125);
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v121 + 8))(v27, v122);
    swift_release();
  }
  else
  {
    uint64_t v75 = v26;
    uint64_t v30 = *((void *)&v126 + 1);
    uint64_t v31 = v127;
    sub_1DC881A8C(&v125, *((uint64_t *)&v126 + 1));
    char v32 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    uint64_t v124 = 0;
    v32(v30, v31);
    uint64_t v33 = (uint64_t)v76;
    sub_1DCA2627C();
    v74[1] = MEMORY[0x1E4F1A910];
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0DC0, (uint64_t *)&unk_1EAAA0D40);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA50F0, (uint64_t *)&unk_1EAAA0D30);
    uint64_t v34 = v122;
    sub_1DCB87448();
    sub_1DC88CC04(v33, (uint64_t *)&unk_1EAAA0D30);
    swift_release();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v27, v34);
    sub_1DC8818D0((uint64_t)&v125);
    uint64_t v35 = v90;
    uint64_t v36 = v83;
    uint64_t v37 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v83, v119, v110);
    uint64_t v38 = v93;
    sub_1DC8B9F3C(v99, v93, (uint64_t *)&unk_1EAAA0D00);
    uint64_t v39 = *((void *)v29 + 3);
    uint64_t v40 = *((void *)v29 + 4);
    uint64_t v121 = *((void *)v29 + 1);
    uint64_t v122 = v39;
    long long v41 = v29[1];
    long long v125 = *v29;
    long long v126 = v41;
    uint64_t v127 = v40;
    unint64_t v42 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    unint64_t v43 = (v78 + *(unsigned __int8 *)(v86 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    unint64_t v44 = (v89 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v45 + v42, v36, v37);
    sub_1DC8B9CD4(v38, v45 + v43, (uint64_t *)&unk_1EAAA0D00);
    unint64_t v46 = v45 + v44;
    long long v47 = v126;
    *(_OWORD *)unint64_t v46 = v125;
    *(_OWORD *)(v46 + 16) = v47;
    *(void *)(v46 + 32) = v127;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0DD0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5100, (uint64_t *)&unk_1EAAA5070);
    uint64_t v48 = v80;
    uint64_t v49 = v81;
    uint64_t v50 = v117;
    sub_1DCB874A8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v50, v49);
    uint64_t v51 = sub_1DC88CF34(&qword_1EAAA0DE0, (uint64_t *)&unk_1EAAA0D50);
    uint64_t v52 = sub_1DC88CF34(&qword_1EAAA0DE8, (uint64_t *)&unk_1EAAA0DD0);
    uint64_t v53 = v82;
    uint64_t v54 = v87;
    MEMORY[0x1E01A6390](v87, v51, v52);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v48, v54);
    uint64_t v55 = v75;
    swift_retain();
    uint64_t v56 = v91;
    sub_1DC945214((uint64_t)sub_1DC9580F8, v55, v91);
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v53, v88);
    *(void *)&long long v125 = &unk_1F37FB598;
    sub_1DC87E988((uint64_t *)&unk_1EAAA0DF0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5110, (uint64_t *)&unk_1EAAA0D60);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0E00, (uint64_t *)&unk_1EAAA0DF0);
    uint64_t v57 = v92;
    uint64_t v58 = v95;
    sub_1DCB874F8();
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v56, v58);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5120, (uint64_t *)&unk_1EAAA5090);
    sub_1DC958114();
    unsigned int v59 = v96;
    uint64_t v60 = v98;
    sub_1DCB87538();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v57, v60);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5130, (uint64_t *)&unk_1EAAA0D70);
    uint64_t v61 = v102;
    uint64_t v62 = v101;
    sub_1DCB873D8();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v59, v62);
    *(void *)&long long v125 = 0;
    *((void *)&v125 + 1) = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    *(void *)&long long v125 = 0xD000000000000024;
    *((void *)&v125 + 1) = 0x80000001DCB934B0;
    sub_1DC959450(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB0477C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v61, v104);
    char v64 = v111;
    uint64_t v63 = v112;
    uint64_t v65 = v113;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v111, *MEMORY[0x1E4F1A8F8], v113);
    char v67 = v114;
    uint64_t v66 = v115;
    *uint64_t v114 = sub_1DCA2B888;
    v67[1] = 0;
    uint64_t v68 = v116;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v66 + 104))(v67, *MEMORY[0x1E4F1A920], v116);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0E20, (uint64_t *)&unk_1EAAA0D80);
    char v69 = v105;
    uint64_t v70 = v107;
    uint64_t v71 = v118;
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v66 + 8))(v67, v68);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v71, v70);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5140, (uint64_t *)&unk_1EAAA50B0);
    uint64_t v72 = v109;
    uint64_t v26 = sub_1DCB873A8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v69, v72);
  }
  return v26;
}

uint64_t sub_1DC94D4D4(int a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v45 = a4;
  uint64_t v42 = a3;
  int v43 = a1;
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA0E68);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = sub_1DCB86BF8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1DCB86FE8();
  uint64_t v16 = sub_1DC89F57C(v15, (uint64_t)qword_1EAAFF810);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v44 = a2;
  v17(v14, a2, v11);
  uint64_t v18 = sub_1DCB86FC8();
  os_log_type_t v19 = sub_1DCB88488();
  BOOL v20 = os_log_type_enabled(v18, v19);
  long long v41 = v10;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v39 = v5;
    uint64_t v22 = v21;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v48 = v37;
    *(_DWORD *)uint64_t v22 = 136446466;
    sub_1DC959450(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v23 = sub_1DCB88F98();
    uint64_t v47 = sub_1DC9F8920(v23, v24, &v48);
    uint64_t v38 = v6;
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(_WORD *)(v22 + 12) = 2082;
    char v25 = v43;
    if (v43) {
      uint64_t v26 = 0x7020646E6F636573;
    }
    else {
      uint64_t v26 = 0x6170207473726966;
    }
    if (v43) {
      unint64_t v27 = 0xEB00000000737361;
    }
    else {
      unint64_t v27 = 0xEA00000000007373;
    }
    uint64_t v16 = v22 + 14;
    uint64_t v47 = sub_1DC9F8920(v26, v27, &v48);
    uint64_t v6 = v38;
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v18, v19, "[Smoke Alarm Sound Recognition %{public}s] State Transition, entering: %{public}s", (uint8_t *)v22, 0x16u);
    uint64_t v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v28, -1, -1);
    uint64_t v29 = v22;
    uint64_t v5 = v39;
    MEMORY[0x1E01A99C0](v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

    char v25 = v43;
  }
  if (v25)
  {
    uint64_t v30 = v46;
    uint64_t v31 = sub_1DC94DA4C(v44, v42, v45);
    if (v30) {
      return v16;
    }
    uint64_t v48 = v31;
    sub_1DC87E988(&qword_1EAAA0E70);
    sub_1DC87E988(&qword_1EAAA0E78);
    sub_1DC88CF34(&qword_1EAAA0E80, &qword_1EAAA0E70);
    char v32 = v41;
    sub_1DCB873D8();
  }
  else
  {
    uint64_t v33 = v46;
    uint64_t v34 = sub_1DC94F274(v44, v45);
    if (v33) {
      return v16;
    }
    uint64_t v48 = v34;
    sub_1DC87E988(&qword_1EAAA0E70);
    sub_1DC87E988(&qword_1EAAA0E78);
    sub_1DC88CF34(&qword_1EAAA0E80, &qword_1EAAA0E70);
    char v32 = v40;
    sub_1DCB873D8();
  }
  swift_release();
  sub_1DC88CF34(&qword_1EAAA0E88, &qword_1EAAA0E68);
  uint64_t v16 = sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v32, v5);
  return v16;
}

uint64_t sub_1DC94DA4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v110 = a2;
  uint64_t v125 = a1;
  uint64_t v115 = sub_1DC87E988((uint64_t *)&unk_1EAAA0E90);
  uint64_t v118 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v116 = (char *)v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1DC87E988((uint64_t *)&unk_1EAAA5150);
  MEMORY[0x1F4188790](v117);
  uint64_t v119 = (char *)v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1DCB86BF8();
  uint64_t v112 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v121 = v6;
  uint64_t v123 = (char *)v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  uint64_t v107 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v108 = v8;
  uint64_t v109 = (uint64_t)v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1DC87E988((uint64_t *)&unk_1EAAA0EA0);
  MEMORY[0x1F4188790](v122);
  uint64_t v111 = (void (**)())((char *)v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v128 = sub_1DC87E988((uint64_t *)&unk_1EAAA5160);
  uint64_t v114 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v130 = (char *)v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1DC87E988((uint64_t *)&unk_1EAAA0EB0);
  uint64_t v129 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  CMTime v139 = (char *)v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1DC87E988((uint64_t *)&unk_1EAAA5170);
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x1F4188790](v132);
  uint64_t v138 = (char *)v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_1DC87E988(&qword_1EAAA0EC0);
  uint64_t v113 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  uint64_t v141 = (char *)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v135 = (void *)((char *)v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v142 = sub_1DCB870B8();
  char v144 = *(void (***)(char *, void, uint64_t))(v142 - 8);
  MEMORY[0x1F4188790](v142);
  uint64_t v134 = (char *)v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1DC87E988(&qword_1EAAA0C10);
  uint64_t v133 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  unsigned __int32 v143 = (char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1DC87E988((uint64_t *)&unk_1EAAA0EC8);
  uint64_t v145 = *(void *)(v146 - 8);
  uint64_t v17 = *(void *)(v145 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v146);
  uint64_t v120 = (char *)v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v147 = (char *)v105 - v19;
  uint64_t v150 = sub_1DCB868D8();
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v148 = (char *)v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DCB86A18();
  uint64_t v151 = *(void *)(v21 - 8);
  uint64_t v152 = v21;
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  unint64_t v24 = (char *)v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  unint64_t v27 = (char *)v105 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (char *)v105 - v29;
  MEMORY[0x1F4188790](v28);
  char v32 = (char *)v105 - v31;
  uint64_t v33 = a3[1];
  uint64_t v34 = a3;
  uint64_t v35 = a3[3];
  uint64_t v36 = a3[4];
  uint64_t v37 = v153;
  sub_1DC9AC2A0(2u, (uint64_t)v27);
  if (v37) {
    return (uint64_t)v30;
  }
  char v153 = v24;
  v105[2] = v35;
  v105[3] = v33;
  id v106 = v34;
  v105[1] = v36;
  v105[0] = v17;
  uint64_t v39 = v151;
  uint64_t v38 = v152;
  (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v30, v27, v152);
  strcpy((char *)v155, "model0.bundle");
  HIWORD(v155[1]) = -4864;
  uint64_t v40 = v149;
  long long v41 = v148;
  uint64_t v42 = v150;
  (*(void (**)(char *, void, uint64_t))(v149 + 104))(v148, *MEMORY[0x1E4F276C0], v150);
  sub_1DC91ACCC();
  sub_1DCB869F8();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  int v43 = *(void (**)(char *, uint64_t))(v39 + 8);
  v43(v30, v38);
  uint64_t v44 = v38;
  uint64_t v45 = sub_1DC969B7C();
  type metadata accessor for E5RTExecutionStream();
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v45;
  uint64_t v47 = v39 + 8;
  uint64_t v48 = v153;
  sub_1DCB868C8();
  sub_1DCB869C8();
  uint64_t v49 = v48;
  uint64_t v50 = v47;
  v43(v49, v44);
  uint64_t v51 = sub_1DC969C30();
  type metadata accessor for E5RTExecutionStreamOperation();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v51;
  uint64_t v53 = v52;
  sub_1DC96BE9C(v52);
  sub_1DC969E30(v53);
  sub_1DC94B05C(v155);
  uint64_t v149 = v53;
  uint64_t v150 = v46;
  uint64_t v148 = v32;
  uint64_t v55 = v156;
  uint64_t v56 = v157;
  sub_1DC881A8C(v155, v156);
  uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 24))(v55, v56);
  uint64_t v58 = v156;
  uint64_t v59 = v157;
  sub_1DC881A8C(v155, v156);
  uint64_t v154 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8))(v58, v59);
  *(void *)(swift_allocObject() + 16) = v57;
  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA0ED8);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  sub_1DCB873D8();
  swift_release();
  swift_release();
  uint64_t v60 = v156;
  uint64_t v61 = v157;
  sub_1DC881A8C(v155, v156);
  uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 24))(v60, v61);
  uint64_t v63 = v156;
  uint64_t v64 = v157;
  sub_1DC881A8C(v155, v156);
  unint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64);
  if ((v65 & 0x8000000000000000) == 0 && !HIDWORD(v65))
  {
    id v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F15350]), sel_initWithLayoutTag_, v65 | 0x930000);
    char v67 = v144;
    if (v66)
    {
      uint64_t v68 = v66;
      id v106 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153A0]), sel_initWithCommonFormat_sampleRate_interleaved_channelLayout_, 1, 0, v66, (double)v62);

      uint64_t v69 = qword_1EAA9D258;
      swift_retain();
      swift_retain();
      swift_retain();
      if (v69 != -1) {
        swift_once();
      }
      __src[0] = qword_1EAAFFA50;
      __src[1] = *(void *)algn_1EAAFFA58;
      __src[2] = qword_1EAAFFA60;
      __src[3] = unk_1EAAFFA68;
      __src[4] = qword_1EAAFFA70;
      __src[5] = unk_1EAAFFA78;
      char v159 = byte_1EAAFFA80;
      char v160 = byte_1EAAFFA81;
      char v161 = byte_1EAAFFA82;
      char v162 = byte_1EAAFFA83;
      char v163 = byte_1EAAFFA84;
      char v164 = byte_1EAAFFA85;
      uint64_t v165 = qword_1EAAFFA88;
      char v166 = byte_1EAAFFA90;
      long long v167 = xmmword_1DCBC0350;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC93B838(__src);
      char v153 = 0;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v70 = sub_1DC906B3C();
      swift_release();
      uint64_t v154 = v70;
      uint64_t v71 = v134;
      v67[13](v134, *MEMORY[0x1E4F1A8F8], v142);
      uint64_t v72 = v135;
      *uint64_t v135 = sub_1DCA2A6DC;
      v72[1] = 0;
      uint64_t v73 = v136;
      uint64_t v74 = v137;
      (*(void (**)(void *, void, uint64_t))(v136 + 104))(v72, *MEMORY[0x1E4F1A920], v137);
      sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
      sub_1DCB87478();
      (*(void (**)(void *, uint64_t))(v73 + 8))(v72, v74);
      ((void (*)(char *, uint64_t))v67[1])(v71, v142);
      swift_release();
      sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
      sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
      uint64_t v75 = v138;
      uint64_t v76 = v140;
      uint64_t v77 = v143;
      sub_1DCB873D8();
      uint64_t v30 = v75;
      uint64_t v78 = v153;
      sub_1DCA25840();
      char v153 = v78;
      if (v78)
      {

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v131 + 8))(v75, v132);
        (*(void (**)(char *, uint64_t))(v133 + 8))(v77, v76);
        (*(void (**)(char *, uint64_t))(v145 + 8))(v147, v146);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v131 + 8))(v75, v132);
        sub_1DC87E988((uint64_t *)&unk_1EAAA5190);
        sub_1DC88CF34((unint64_t *)&unk_1EAAA0EF0, &qword_1EAAA0EC0);
        sub_1DCB873D8();
        uint64_t v79 = v109;
        sub_1DC8B9F3C(v110, v109, (uint64_t *)&unk_1EAAA0D00);
        uint64_t v80 = v112;
        uint64_t v81 = *(void (***)(char *, void, uint64_t))(v112 + 16);
        uint64_t v142 = v112 + 16;
        char v144 = v81;
        ((void (*)(char *, uint64_t, uint64_t))v81)(v123, v125, v124);
        uint64_t v82 = v145;
        (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v120, v147, v146);
        unint64_t v83 = (*(unsigned __int8 *)(v107 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
        uint64_t v84 = *(unsigned __int8 *)(v80 + 80);
        unint64_t v85 = (v108 + v84 + v83) & ~v84;
        unint64_t v86 = (v121 + *(unsigned __int8 *)(v82 + 80) + v85) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
        uint64_t v151 = v50;
        unint64_t v87 = (v105[0] + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v88 = swift_allocObject();
        sub_1DC8B9CD4(v79, v88 + v83, (uint64_t *)&unk_1EAAA0D00);
        unint64_t v89 = v88 + v85;
        uint64_t v138 = *(char **)(v80 + 32);
        uint64_t v90 = v123;
        uint64_t v91 = v124;
        ((void (*)(unint64_t, char *, uint64_t))v138)(v89, v123, v124);
        (*(void (**)(unint64_t, char *, uint64_t))(v145 + 32))(v88 + v86, v120, v146);
        id v92 = v106;
        *(void *)(v88 + v87) = v106;
        uint64_t v93 = v111;
        (*(void (**)(char *, char *, uint64_t))(v129 + 16))((char *)v111 + *(int *)(v122 + 52), v139, v127);
        *uint64_t v93 = sub_1DC95835C;
        v93[1] = (void (*)())v88;
        ((void (*)(char *, uint64_t, uint64_t))v144)(v90, v125, v91);
        uint64_t v94 = swift_allocObject();
        ((void (*)(uint64_t, char *, uint64_t))v138)(v94 + ((v84 + 16) & ~v84), v90, v91);
        sub_1DC88CF34((unint64_t *)&unk_1EAAA51A0, (uint64_t *)&unk_1EAAA0EA0);
        char v144 = (void (**)(char *, void, uint64_t))v92;
        sub_1DCB873D8();
        swift_release();
        sub_1DC88CC04((uint64_t)v93, (uint64_t *)&unk_1EAAA0EA0);
        uint64_t v95 = v116;
        sub_1DCB870D8();
        uint64_t v96 = swift_allocObject();
        *(void *)(v96 + 16) = sub_1DC88D45C;
        *(void *)(v96 + 24) = 0;
        *(_OWORD *)(v96 + 32) = xmmword_1DCBC0360;
        uint64_t v97 = swift_allocObject();
        *(void *)(v97 + 16) = 0;
        *(unsigned char *)(v97 + 24) = 1;
        uint64_t v98 = v118;
        uint64_t v99 = v145;
        uint64_t v100 = (uint64_t)v119;
        uint64_t v101 = v115;
        (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v119, v95, v115);
        uint64_t v102 = v117;
        uint64_t v103 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v100 + *(int *)(v117 + 52));
        char *v103 = sub_1DC9584E0;
        v103[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v97;
        uint64_t v104 = (uint64_t (**)(uint64_t, uint64_t))(v100 + *(int *)(v102 + 56));
        *uint64_t v104 = sub_1DC9584C8;
        v104[1] = (uint64_t (*)(uint64_t, uint64_t))v96;
        (*(void (**)(char *, uint64_t))(v98 + 8))(v95, v101);
        sub_1DC88CF34(&qword_1EAAA0F00, (uint64_t *)&unk_1EAAA5150);
        uint64_t v30 = (char *)sub_1DCB873A8();

        swift_release();
        swift_release();
        sub_1DC88CC04(v100, (uint64_t *)&unk_1EAAA5150);
        (*(void (**)(char *, uint64_t))(v114 + 8))(v130, v128);
        (*(void (**)(char *, uint64_t))(v129 + 8))(v139, v127);
        (*(void (**)(char *, uint64_t))(v113 + 8))(v141, v126);
        (*(void (**)(char *, uint64_t))(v133 + 8))(v143, v140);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v147, v146);
      }
      v43(v148, v152);
      sub_1DC8818D0((uint64_t)v155);
      return (uint64_t)v30;
    }
    __break(1u);
  }
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

uint64_t sub_1DC94F274(uint64_t a1, void *a2)
{
  uint64_t v84 = a1;
  uint64_t v87 = sub_1DCB86BF8();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v83 = v3;
  unint64_t v85 = (char *)v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1DC87E988(&qword_1EAAA0F08);
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v88 = (char *)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1DC87E988(&qword_1EAAA0F10);
  uint64_t v81 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  id v92 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1DC87E988(&qword_1EAAA0F18);
  MEMORY[0x1F4188790](v82);
  uint64_t v93 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1DC87E988(&qword_1EAAA0F20);
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v109 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1DC87E988(&qword_1EAAA0F28);
  uint64_t v91 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v110 = (char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1DC87E988(&qword_1EAAA0F30);
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  id v106 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v99 = (void *)((char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v111 = sub_1DCB870B8();
  uint64_t v113 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v112 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1DC87E988(&qword_1EAAA0C10);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v102 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1DC87E988(&qword_1EAAA0F38);
  MEMORY[0x1F4188790](v105);
  uint64_t v14 = (char *)v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F40);
  uint64_t v98 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DCB86A18();
  uint64_t v114 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)v72 - v22;
  uint64_t v24 = a2[1];
  uint64_t v26 = a2[3];
  uint64_t v25 = a2[4];
  unint64_t v27 = v115;
  sub_1DC9AC2A0(0x20u, (uint64_t)v72 - v22);
  if (!v27)
  {
    uint64_t v80 = (void (*)(void, void))v21;
    uint64_t v78 = v26;
    uint64_t v79 = v24;
    uint64_t v77 = v25;
    uint64_t v74 = v14;
    uint64_t v75 = v17;
    uint64_t v76 = v15;
    uint64_t v28 = v114;
    uint64_t v115 = v23;
    uint64_t v29 = sub_1DC969B7C();
    type metadata accessor for E5RTExecutionStream();
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v29;
    uint64_t v31 = v80;
    sub_1DCB868C8();
    sub_1DCB869C8();
    char v32 = *(void (**)(void, void))(v28 + 8);
    uint64_t v73 = v18;
    uint64_t v80 = v32;
    v32(v31, v18);
    uint64_t v33 = sub_1DC969C30();
    uint64_t v114 = v28 + 8;
    type metadata accessor for E5RTExecutionStreamOperation();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v33;
    sub_1DC96BE9C(v34);
    sub_1DC969E30(v34);
    v72[1] = v34;
    uint64_t v36 = qword_1EAA9D258;
    swift_retain();
    swift_retain();
    swift_retain();
    if (v36 != -1) {
      swift_once();
    }
    char v132 = byte_1EAAFFA90;
    __src[0] = qword_1EAAFFA50;
    __src[1] = *(void *)algn_1EAAFFA58;
    __src[2] = qword_1EAAFFA60;
    __src[3] = unk_1EAAFFA68;
    __src[4] = qword_1EAAFFA70;
    __src[5] = unk_1EAAFFA78;
    char v118 = byte_1EAAFFA80;
    char v119 = byte_1EAAFFA81;
    char v120 = byte_1EAAFFA82;
    char v121 = byte_1EAAFFA83;
    char v122 = byte_1EAAFFA84;
    char v123 = byte_1EAAFFA85;
    uint64_t v124 = qword_1EAAFFA88;
    char v125 = byte_1EAAFFA90;
    uint64_t v126 = 0x40467A0000;
    uint64_t v127 = 0x45F8700042480000;
    uint64_t v128 = 0x38D1B71700000001;
    char v129 = 1;
    long long v130 = xmmword_1DCBC0340;
    uint64_t v131 = 0x100000000;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DC889A2C(__src);
    uint64_t v37 = v113;
    uint64_t v38 = v112;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v39 = sub_1DC888A00();
    uint64_t v78 = v30;
    uint64_t v79 = 0;
    uint64_t v40 = v39;
    swift_release();
    uint64_t v116 = v40;
    (*(void (**)(char *, void, uint64_t))(v37 + 104))(v38, *MEMORY[0x1E4F1A8F8], v111);
    long long v41 = v38;
    uint64_t v42 = v99;
    *uint64_t v99 = sub_1DCA2A6DC;
    v42[1] = 0;
    uint64_t v43 = v100;
    uint64_t v44 = v101;
    (*(void (**)(void *, void, uint64_t))(v100 + 104))(v42, *MEMORY[0x1E4F1A920], v101);
    sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
    uint64_t v45 = v102;
    sub_1DCB87478();
    (*(void (**)(void *, uint64_t))(v43 + 8))(v42, v44);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v41, v111);
    swift_release();
    uint64_t v46 = sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
    sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
    uint64_t v47 = v106;
    uint64_t v48 = v104;
    sub_1DCB873D8();
    uint64_t v49 = v107;
    uint64_t v50 = (uint64_t)v74;
    uint64_t v51 = v108;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v74, v47, v108);
    uint64_t v52 = v105;
    *(void *)(v50 + *(int *)(v105 + 60)) = 8;
    *(void *)(v50 + *(int *)(v52 + 64)) = 8;
    *(void *)(v50 + *(int *)(v52 + 68)) = v46;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v51);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v45, v48);
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D40, &qword_1EAAA0F38);
    uint64_t v53 = v75;
    sub_1DCB873D8();
    sub_1DC88CC04(v50, &qword_1EAAA0F38);
    sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
    uint64_t v54 = v109;
    uint64_t v18 = v76;
    sub_1DCB870D8();
    uint64_t v55 = v79;
    sub_1DCA256B0();
    if (v55)
    {
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v54, v97);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v53, v18);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v96 + 8))(v54, v97);
      uint64_t v56 = v86;
      uint64_t v57 = v85;
      uint64_t v58 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v84, v87);
      unint64_t v59 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      uint64_t v60 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v60 + v59, v57, v58);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA0F50, &qword_1EAAA0F28);
      uint64_t v61 = v88;
      sub_1DCB874A8();
      swift_release();
      uint64_t v62 = v92;
      uint64_t v63 = v90;
      sub_1DCB87138();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v61, v63);
      uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
      *((void *)v64 + 2) = sub_1DC89D474;
      *((void *)v64 + 3) = 0;
      *((void *)v64 + 4) = 0;
      *((void *)v64 + 5) = 0;
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = 0;
      *(unsigned char *)(v65 + 24) = 0;
      uint64_t v66 = v81;
      uint64_t v67 = (uint64_t)v93;
      uint64_t v68 = v94;
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v93, v62, v94);
      uint64_t v69 = v82;
      uint64_t v70 = (void *)(v67 + *(int *)(v82 + 52));
      *uint64_t v70 = sub_1DC95A970;
      v70[1] = v65;
      uint64_t v71 = (uint64_t (**)(uint64_t, uint64_t))(v67 + *(int *)(v69 + 56));
      *uint64_t v71 = sub_1DC9584C8;
      v71[1] = v64;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v62, v68);
      sub_1DC88CF34(&qword_1EAAA52C0, &qword_1EAAA0F18);
      uint64_t v18 = sub_1DCB873A8();
      swift_release();
      swift_release();
      sub_1DC88CC04(v67, &qword_1EAAA0F18);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v110, v95);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v75, v76);
    }
    v80(v115, v73);
  }
  return v18;
}

uint64_t sub_1DC950444@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA0CE0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SoundRecognition.Session();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v27[0]) = a2;
  sub_1DC89D474((unsigned __int8 *)v27);
  v27[3] = &unk_1F37E2540;
  v27[4] = &off_1F37E24B0;
  v27[5] = &off_1F37E2490;
  uint64_t v15 = swift_allocObject();
  v27[0] = v15;
  uint64_t v16 = *(void *)(a1 + 32);
  long long v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 32) = v17;
  *(void *)(v15 + 48) = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCA2AD50();
  uint64_t result = sub_1DC8818D0((uint64_t)v27);
  if (!v3)
  {
    v27[0] = *(void *)&v14[*(int *)(v12 + 20)];
    swift_retain();
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    sub_1DCB873D8();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA0CF8, &qword_1EAAA0CE0);
    uint64_t v19 = sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    uint64_t v21 = v25;
    uint64_t v20 = v26;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v8, v14, v26);
    sub_1DC957E74((uint64_t)v14, (void (*)(void))type metadata accessor for SoundRecognition.Session);
    uint64_t v22 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v28, v8, v20);
    uint64_t result = type metadata accessor for AccessibilitySoundRecognition.Session(0);
    *(void *)(v22 + *(int *)(result + 20)) = v19;
  }
  return result;
}

uint64_t sub_1DC9507C0@<X0>(long long *a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA0CE0);
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SoundRecognition.Session();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v31 = a2;
  int v17 = sub_1DC89D474(&v31);
  uint64_t v18 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 1, 1, v18);
  sub_1DC947E40(v17, a1, (uint64_t)v13, v16);
  uint64_t result = sub_1DC88CC04((uint64_t)v13, (uint64_t *)&unk_1EAAA0D00);
  if (!v3)
  {
    uint64_t v30 = *(void *)&v16[*(int *)(v14 + 20)];
    swift_retain();
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    sub_1DCB873D8();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA0CF8, &qword_1EAAA0CE0);
    uint64_t v20 = sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
    uint64_t v22 = v26;
    uint64_t v21 = v27;
    uint64_t v23 = v28;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v26, v16, v28);
    sub_1DC957E74((uint64_t)v16, (void (*)(void))type metadata accessor for SoundRecognition.Session);
    uint64_t v24 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v29, v22, v23);
    uint64_t result = type metadata accessor for AccessibilitySoundRecognition.Session(0);
    *(void *)(v24 + *(int *)(result + 20)) = v20;
  }
  return result;
}

void *sub_1DC950B50(void *a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA11C0);
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1DC87E988(&qword_1EAAA11C8);
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v57 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA11D0);
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v51 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA11D8);
  uint64_t v56 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v55 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA11E0);
  uint64_t v58 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA11E8);
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAAA11F0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC87E988(&qword_1EAAA11F8);
  swift_allocObject();
  uint64_t result = sub_1DC952A04(20, 0, MEMORY[0x1E4FBC860]);
  uint64_t v49 = a1;
  uint64_t v20 = *a1 - 512;
  if (__OFSUB__(*a1, 512))
  {
    __break(1u);
  }
  else
  {
    uint64_t v47 = v3;
    uint64_t v21 = result;
    uint64_t v23 = v61;
    uint64_t v22 = v62;
    sub_1DCA46778(v20 / 160 + 1, 46);
    if (v23)
    {
      swift_release();
    }
    else
    {
      uint64_t v46 = v8;
      sub_1DC99D5C8();
      swift_release();
      uint64_t v61 = v21;
      sub_1DC9516E4();
      swift_release();
      sub_1DC88CF34(&qword_1EAAA1200, &qword_1EAAA11F0);
      uint64_t v24 = sub_1DCB87468();
      sub_1DC87E988(&qword_1EAAA1208);
      swift_allocObject();
      uint64_t v25 = sub_1DC9C5478(v24);
      sub_1DC88CC04((uint64_t)v18, &qword_1EAAA11F0);
      sub_1DC87E988(&qword_1EAA9DF60);
      uint64_t v63 = (char *)MEMORY[0x1E4FBC860];
      sub_1DC87E988(&qword_1EAAA1210);
      sub_1DC88CF34(&qword_1EAAA1218, &qword_1EAAA1210);
      sub_1DCB87AE8();
      sub_1DCB87178();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v10);
      sub_1DC88CF34(&qword_1EAAA1220, &qword_1EAAA11E8);
      uint64_t v26 = v60;
      uint64_t v27 = sub_1DCB873A8();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v26);
      uint64_t v63 = sub_1DC951A4C(v62);
      uint64_t v28 = v25;
      uint64_t v29 = (uint64_t)v48;
      uint64_t v59 = v27;
      sub_1DCA2640C();
      sub_1DC87E988(&qword_1EAAA1228);
      uint64_t v60 = MEMORY[0x1E4F1AAE8];
      sub_1DC88CF34(&qword_1EAAA1230, &qword_1EAAA1228);
      sub_1DC88CF34(&qword_1EAAA1238, &qword_1EAAA11C0);
      sub_1DCB87448();
      sub_1DC88CC04(v29, &qword_1EAAA11C0);
      swift_release();
      uint64_t v30 = v62;
      uint64_t v31 = swift_allocObject();
      uint64_t v45 = v28;
      char v32 = v61;
      *(void *)(v31 + 16) = v28;
      *(void *)(v31 + 24) = v32;
      uint64_t v33 = (uint64_t)v49;
      memcpy((void *)(v31 + 32), v49, 0xC0uLL);
      long long v34 = *(_OWORD *)(v30 + 16);
      *(_OWORD *)(v31 + 224) = *(_OWORD *)v30;
      *(_OWORD *)(v31 + 240) = v34;
      uint64_t v35 = *(void *)(v30 + 32);
      uint64_t v36 = v59;
      *(void *)(v31 + 256) = v35;
      *(void *)(v31 + 264) = v36;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1DC9589C8(v33);
      swift_retain();
      sub_1DC87E988(&qword_1EAAA11A8);
      sub_1DC88CF34(&qword_1EAAA1240, &qword_1EAAA11C8);
      uint64_t v38 = v51;
      uint64_t v37 = v52;
      uint64_t v39 = v57;
      sub_1DCB874A8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v37);
      uint64_t v40 = sub_1DC88CF34(&qword_1EAAA1248, &qword_1EAAA11D0);
      uint64_t v41 = sub_1DC88CF34(&qword_1EAAA11B0, &qword_1EAAA11A8);
      uint64_t v42 = v54;
      uint64_t v43 = v55;
      MEMORY[0x1E01A6390](v54, v40, v41);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v42);
      sub_1DC88CF34(&qword_1EAAA1250, &qword_1EAAA11D8);
      uint64_t v44 = v46;
      uint64_t v22 = sub_1DCB873A8();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v44);
    }
    return (void *)v22;
  }
  return result;
}

uint64_t sub_1DC9513E0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DCB86A18();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v19 - v10;
  if (__OFSUB__(*a1, 512))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = sub_1DCA51854((*a1 - 512) / 5120 + 1);
    uint64_t v13 = sub_1DCA578A0(v12);
    swift_bridgeObjectRelease();
    if (!v1)
    {
      sub_1DC9AC2A0(0x26u, (uint64_t)v11);
      uint64_t v14 = sub_1DC969B7C();
      type metadata accessor for E5RTExecutionStream();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v14;
      sub_1DCB868C8();
      sub_1DCB869C8();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19[1] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v15(v8, v4);
      uint64_t v16 = sub_1DC969C30();
      uint64_t v17 = v20;
      v19[0] = v15;
      type metadata accessor for E5RTExecutionStreamOperation();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v16;
      sub_1DC96A694(v13);
      sub_1DC96BE9C(v18);
      sub_1DC969E30(v18);
      swift_release();
      type metadata accessor for AccessibilitySoundRecognition.CustomModel();
      swift_allocObject();
      sub_1DC9589C8((uint64_t)a1);
      uint64_t v2 = sub_1DCA4E13C(v17, v18, a1);
      ((void (*)(char *, uint64_t))v19[0])(v11, v4);
    }
    return (uint64_t)v2;
  }
  return result;
}

void sub_1DC9516E4()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v33 = v5;
  uint64_t v32 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v7 = sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC95AE60();
  v28[1] = sub_1DC87E988(&qword_1EAAA1358);
  sub_1DC89D4E0();
  uint64_t v31 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC8A22D0();
  sub_1DC87E988(&qword_1EAAA1360);
  sub_1DC89D4E0();
  uint64_t v29 = v14;
  uint64_t v30 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v2;
  v28[0] = v4;
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA12D0);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA6170, (uint64_t *)&unk_1EAAA12D0);
  sub_1DCB873D8();
  swift_release();
  sub_1DC8BAE70();
  v17();
  sub_1DC8BAE70();
  v18();
  sub_1DC88CF34(&qword_1EAAA1368, &qword_1EAAA1358);
  sub_1DCB87478();
  sub_1DC95AD00();
  v19();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v7);
  sub_1DC88D5C8();
  v20();
  uint64_t v22 = v29;
  uint64_t v21 = v30;
  uint64_t v23 = v33;
  sub_1DC8E7D10();
  v24();
  uint64_t v25 = v23 + *(int *)(sub_1DC87E988(&qword_1EAAA11F0) + 36);
  *(_OWORD *)(v25 + 48) = 0u;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)uint64_t v25 = 0u;
  uint64_t v26 = v28[0];
  *(void *)(v25 + 80) = sub_1DC958C68;
  *(void *)(v25 + 88) = v26;
  *(_OWORD *)(v25 + 96) = 0u;
  *(_OWORD *)(v25 + 112) = 0u;
  *(_OWORD *)(v25 + 128) = 0u;
  *(void *)(v25 + 144) = sub_1DC958C70;
  *(void *)(v25 + 152) = v26;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v22 + 8);
  swift_retain_n();
  v27(v16, v21);
  sub_1DC89DA54();
}

char *sub_1DC951A4C(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA1320);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA1328);
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DCB86A18();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC9AC2A0(3u, (uint64_t)v12);
  if (!v1)
  {
    uint64_t v22 = v5;
    uint64_t v23 = v8;
    uint64_t v24 = v3;
    uint64_t v25 = v9;
    uint64_t v21 = v2;
    uint64_t v26 = v10;
    uint64_t v14 = sub_1DC94B178(v12, 96, 48, v33);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_1DC89D474;
    *(void *)(v15 + 24) = 0;
    *(_OWORD *)(v15 + 32) = xmmword_1DCBC0370;
    uint64_t v16 = swift_allocObject();
    uint64_t v33 = v6;
    *(void *)(v16 + 16) = 0;
    *(unsigned char *)(v16 + 24) = 0;
    uint64_t v28 = v14;
    uint64_t v29 = sub_1DC95A970;
    uint64_t v30 = v16;
    uint64_t v31 = sub_1DC958BFC;
    uint64_t v32 = v15;
    swift_retain();
    sub_1DC87E988(&qword_1EAAA1330);
    sub_1DC88CF34(&qword_1EAAA1338, &qword_1EAAA1330);
    uint64_t v17 = v22;
    sub_1DCB873D8();
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA1340, &qword_1EAAA1320);
    sub_1DC958C14();
    uint64_t v18 = v23;
    uint64_t v19 = v21;
    sub_1DCB87538();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v19);
    swift_release();
    sub_1DC88CF34(&qword_1EAAA1350, &qword_1EAAA1328);
    uint64_t v20 = v33;
    uint64_t v5 = (char *)sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v20);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v25);
  }
  return v5;
}

uint64_t sub_1DC951E78(char a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v41 = a5;
  uint64_t v34 = a4;
  uint64_t v31 = a3;
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA1258);
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA1260);
  uint64_t v33 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAAA1268);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
  }
  else
  {
    uint64_t v35 = a2;
    uint64_t v28 = v17;
    uint64_t v30 = v18;
    sub_1DC87E988(&qword_1EAAA1208);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA1270, &qword_1EAAA1208);
    uint64_t v29 = sub_1DCB873A8();
    uint64_t v35 = v29;
    uint64_t v36 = sub_1DC957198;
    uint64_t v37 = 0;
    uint64_t v38 = sub_1DC958B2C;
    uint64_t v26 = v13;
    uint64_t v39 = v31;
    uint64_t v40 = 1;
    swift_retain();
    sub_1DC87E988((uint64_t *)&unk_1EAAA61C0);
    sub_1DC87E988((uint64_t *)&unk_1EAAA1280);
    uint64_t v27 = v6;
    sub_1DC88CF34((unint64_t *)&unk_1EAAA61D0, (uint64_t *)&unk_1EAAA61C0);
    sub_1DCB873B8();
    swift_release();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA1290, &qword_1EAAA1258);
    sub_1DCB87408();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
    sub_1DC88CF34(&qword_1EAAA61E0, &qword_1EAAA1260);
    uint64_t v21 = v26;
    sub_1DCB874A8();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v21);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA12A0, &qword_1EAAA1268);
    uint64_t v22 = v28;
    uint64_t v23 = sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v22);
    a6 = sub_1DC9522F0(v23, v34);
    swift_release();
    swift_release();
  }
  return a6;
}

uint64_t sub_1DC9522F0(uint64_t a1, void *a2)
{
  uint64_t v34 = a1;
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB870B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1DC87E988((uint64_t *)&unk_1EAAA6140);
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1DC87E988((uint64_t *)&unk_1EAAA12B0);
  uint64_t v37 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v35 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1DC87E988((uint64_t *)&unk_1EAAA6150);
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v36 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988((uint64_t *)&unk_1EAAA12C0);
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v38 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DC87E988((uint64_t *)&unk_1EAAA6160);
  uint64_t v47 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v41 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v48;
  uint64_t v20 = sub_1DC9513E0(a2);
  if (!v19)
  {
    uint64_t v49 = v34;
    uint64_t v21 = *MEMORY[0x1E4F1A8F8];
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
    uint64_t v33 = v20;
    uint64_t v48 = 0;
    v22(v10, v21, v7);
    *uint64_t v6 = sub_1DCA52E30;
    v6[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F1A920], v3);
    sub_1DC87E988((uint64_t *)&unk_1EAAA12D0);
    uint64_t v34 = v17;
    sub_1DC88CF34((unint64_t *)&unk_1EAAA6170, (uint64_t *)&unk_1EAAA12D0);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA12E0, (uint64_t *)&unk_1EAAA6140);
    swift_retain();
    uint64_t v23 = v35;
    uint64_t v24 = v43;
    sub_1DCB874A8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v24);
    uint64_t v25 = v36;
    uint64_t v26 = v40;
    sub_1DCB87138();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v26);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA6180, (uint64_t *)&unk_1EAAA6150);
    uint64_t v27 = v38;
    uint64_t v28 = v44;
    sub_1DCB87538();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v28);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA12F0, (uint64_t *)&unk_1EAAA12C0);
    uint64_t v29 = v41;
    uint64_t v30 = v46;
    sub_1DCB873D8();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v30);
    sub_1DC88CF34(&qword_1EAAA6190, (uint64_t *)&unk_1EAAA6160);
    uint64_t v31 = v34;
    uint64_t v4 = sub_1DCB873A8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v31);
  }
  return v4;
}

void *sub_1DC952A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SafeLock();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = (_DWORD *)swift_slowAlloc();
  _DWORD *v8 = 0;
  *(void *)(v7 + 16) = v8;
  _OWORD v3[2] = v7;
  v3[3] = a1;
  v3[4] = a3;
  void v3[5] = a2;
  return v3;
}

uint64_t sub_1DC952A74(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1[2] + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1DC952AF0(v1, a1);
  os_unfair_lock_unlock(v3);

  return swift_release();
}

uint64_t sub_1DC952AF0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1 + 4;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1DCB188F8();
  swift_endAccess();
  uint64_t v6 = a1[3];
  uint64_t result = a1[4];
  uint64_t v7 = *(void *)(result + 16);
  if (v6 >= v7) {
    goto LABEL_6;
  }
  uint64_t v8 = v7 - v6;
  if (__OFSUB__(v7, v6))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v7 < v8)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = result + 32;
    unint64_t v10 = (2 * v7) | 1;
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_1DCB11CF0(v11, v9, v8, v10);
    void *v4 = v12;
    uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t v14 = a1[5];
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (!v15)
    {
      a1[5] = v16;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC952BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(os_unfair_lock_s **)(*(void *)(v2 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  unint64_t v7 = sub_1DC952C7C(v3, a1, a2);
  os_unfair_lock_unlock(v6);
  swift_release();
  return v7;
}

unint64_t sub_1DC952C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 40);
  swift_beginAccess();
  unint64_t result = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(result + 16);
  uint64_t v9 = a2 - (v6 - v8);
  uint64_t v10 = a3 + a2 - (v6 - v8);
  if (v9 <= 0)
  {
    unint64_t v11 = 0;
    unint64_t v12 = 0;
    if (v10 <= 0) {
      goto LABEL_11;
    }
  }
  else
  {
    if (v8 >= v9) {
      unint64_t v11 = a2 - (v6 - v8);
    }
    else {
      unint64_t v11 = *(void *)(result + 16);
    }
    if (v10 < 1)
    {
      unint64_t v12 = 0;
      goto LABEL_11;
    }
  }
  if (v8 >= v10) {
    unint64_t v12 = a3 + a2 - (v6 - v8);
  }
  else {
    unint64_t v12 = *(void *)(result + 16);
  }
LABEL_11:
  unint64_t v13 = v11 - v9;
  if (__OFSUB__(v11, v9))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (__OFSUB__(v10, v12))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v12 >= v11)
  {
    uint64_t v14 = result + 32;
    unint64_t v15 = (2 * v12) | 1;
    uint64_t v16 = swift_bridgeObjectRetain();
    sub_1DCB11CF0(v16, v14, v11, v15);
    return v13;
  }
LABEL_17:
  __break(1u);
  return result;
}

void *sub_1DC952D7C()
{
  uint64_t v1 = sub_1DC952DF8();
  uint64_t v3 = *(void *)(v2 + 16);
  swift_retain();
  unint64_t result = (void *)swift_bridgeObjectRelease();
  BOOL v5 = __OFSUB__(v1, v3);
  uint64_t v6 = v1 - v3;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    sub_1DC87E988(&qword_1EAAA1300);
    swift_allocObject();
    return sub_1DC952EF4(v0, v6);
  }
  return result;
}

uint64_t sub_1DC952DF8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v1);
  swift_release();
  return v2;
}

uint64_t sub_1DC952E78()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

void *sub_1DC952EF4(uint64_t a1, uint64_t a2)
{
  void v2[3] = a1;
  v2[4] = a2;
  type metadata accessor for SafeLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  _DWORD *v4 = 0;
  *(void *)(v3 + 16) = v4;
  v2[2] = v3;
  return v2;
}

unint64_t sub_1DC952F48(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  unint64_t v5 = sub_1DC952BD8(*(void *)(v1 + 32), a1);
  *(void *)(v2 + 32) += a1;
  os_unfair_lock_unlock(v4);
  swift_release();
  return v5;
}

uint64_t sub_1DC952FE0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  uint64_t v2 = *(void *)(v0 + 32);
  os_unfair_lock_unlock(v1);
  swift_release();
  return v2;
}

uint64_t sub_1DC953034()
{
  uint64_t v0 = sub_1DC952DF8();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1DC952FE0();
  BOOL v2 = __OFSUB__(v0, v1);
  uint64_t result = v0 - v1;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC953084(uint64_t a1, uint64_t a2)
{
  sub_1DC87E988((uint64_t *)&unk_1EAAA1370);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC952A74(inited);
  swift_setDeallocating();
  return sub_1DC93782C();
}

uint64_t sub_1DC95310C()
{
  return sub_1DC952E78();
}

uint64_t sub_1DC953130@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA1308);
  unint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC953034();
  unint64_t v7 = sub_1DC952F48(v6);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    sub_1DCA73564();
    uint64_t v30 = v37;
    int64_t v29 = *(void *)(v37 + 24) >> 1;
    goto LABEL_26;
  }
  unint64_t v10 = v7;
  unint64_t v1 = v8;
  uint64_t v11 = v9;
  unint64_t v40 = v3;
  uint64_t v41 = v2;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    sub_1DC897FFC();
    unint64_t v3 = v44;
    unint64_t v13 = *(void *)(v44 + 16);
    uint64_t v14 = 16 * v13 + 32;
    do
    {
      uint64_t v44 = v3;
      unint64_t v15 = v13 + 1;
      if (v13 >= *(void *)(v3 + 24) >> 1)
      {
        sub_1DC897FFC();
        unint64_t v3 = v44;
      }
      *(void *)(v3 + 16) = v15;
      uint64_t v16 = (void *)(v3 + v14);
      *uint64_t v16 = 0;
      v16[1] = 0;
      v14 += 16;
      unint64_t v13 = v15;
      --v10;
    }
    while (v10);
  }
  else
  {
    unint64_t v3 = MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)(v1 + 16);
  if (v17)
  {
    uint64_t v44 = v12;
    sub_1DC897FFC();
    uint64_t v18 = 0;
    uint64_t v19 = v44;
    do
    {
      long long v43 = *(_OWORD *)(v1 + 16 * v18 + 32);
      uint64_t v44 = v19;
      unint64_t v20 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20 >= v21 >> 1)
      {
        sub_1DC897FFC();
        uint64_t v19 = v44;
      }
      ++v18;
      *(void *)(v19 + 16) = v20 + 1;
      *(_OWORD *)(v19 + 16 * v20 + 32) = v43;
    }
    while (v17 != v18);
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = v3;
  sub_1DCB189A0();
  if (v11 < 0) {
    goto LABEL_30;
  }
  uint64_t v22 = v44;
  if (v11)
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    sub_1DC897FFC();
    uint64_t v23 = v44;
    unint64_t v24 = *(void *)(v44 + 16);
    uint64_t v25 = 16 * v24 + 32;
    do
    {
      uint64_t v44 = v23;
      unint64_t v1 = v24 + 1;
      if (v24 >= *(void *)(v23 + 24) >> 1)
      {
        sub_1DC897FFC();
        uint64_t v23 = v44;
      }
      *(void *)(v23 + 16) = v1;
      uint64_t v26 = (void *)(v23 + v25);
      *uint64_t v26 = 0;
      v26[1] = 0;
      v25 += 16;
      unint64_t v24 = v1;
      --v11;
    }
    while (v11);
  }
  uint64_t v44 = v22;
  sub_1DCB189A0();
  uint64_t v27 = v44;
  uint64_t v28 = *(void *)(v44 + 16);
  unint64_t v3 = v28 + 2;
  if (__OFADD__(v28, 2)) {
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t v29 = *(void *)(v27 + 24) >> 1, v29 >= (uint64_t)v3))
  {
    uint64_t v30 = v27;
  }
  else
  {
    sub_1DCA73564();
    uint64_t v30 = v31;
    int64_t v29 = *(void *)(v31 + 24) >> 1;
  }
  unint64_t v3 = *(void *)(v30 + 16);
  unint64_t v1 = v3 + 1;
  if (v29 <= v3) {
    goto LABEL_32;
  }
LABEL_26:
  *(void *)(v30 + 16) = v1;
  long long v32 = xmmword_1DCBC0380;
  *(_OWORD *)(v30 + 16 * v3 + 32) = xmmword_1DCBC0380;
  unint64_t v33 = v3 + 2;
  if (v29 < (uint64_t)(v3 + 2))
  {
    long long v43 = xmmword_1DCBC0380;
    sub_1DCA73564();
    long long v32 = v43;
    uint64_t v30 = v38;
  }
  unint64_t v35 = v40;
  uint64_t v34 = v41;
  *(void *)(v30 + 16) = v33;
  *(_OWORD *)(v30 + 16 * v1 + 32) = v32;
  swift_bridgeObjectRelease();
  uint64_t v44 = v30;
  sub_1DC87E988(&qword_1EAAA1310);
  sub_1DC88CF34(&qword_1EAAA1318, &qword_1EAAA1310);
  sub_1DCB87AE8();
  swift_bridgeObjectRelease();
  sub_1DC87E988(&qword_1EAA9DF60);
  sub_1DCB87178();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v5, v34);
}

void *sub_1DC953598()
{
  return sub_1DC952D7C();
}

uint64_t sub_1DC9535BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC9535EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v258 = a3;
  uint64_t v257 = sub_1DC87E988(&qword_1EAAA0FB8);
  MEMORY[0x1F4188790](v257);
  v256 = (char *)&v188 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v255 = sub_1DC87E988(&qword_1EAAA0FC0);
  uint64_t v283 = *(void *)(v255 - 8);
  MEMORY[0x1F4188790](v255);
  v254 = (char *)&v188 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = sub_1DC87E988(&qword_1EAAA0FC8);
  v282 = *(_DWORD **)(v253 - 8);
  MEMORY[0x1F4188790](v253);
  v252 = (char *)&v188 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_1DC87E988(&qword_1EAAA0FD0);
  uint64_t v281 = *(void *)(v251 - 8);
  MEMORY[0x1F4188790](v251);
  v250 = (char *)&v188 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_1DC87E988(&qword_1EAAA0FD8);
  uint64_t v280 = *(void *)(v200 - 8);
  MEMORY[0x1F4188790](v200);
  uint64_t v199 = (char *)&v188 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_1DC87E988(&qword_1EAAA0FE0);
  unint64_t v279 = *(void *)(v198 - 8);
  MEMORY[0x1F4188790](v198);
  uint64_t v197 = (char *)&v188 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F70);
  uint64_t v277 = *(void *)(v196 - 8);
  MEMORY[0x1F4188790](v196);
  uint64_t v195 = (char *)&v188 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_1DC87E988(&qword_1EAAA0FE8);
  unint64_t v278 = *(void *)(v249 - 8);
  MEMORY[0x1F4188790](v249);
  v248 = (char *)&v188 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = sub_1DC87E988(&qword_1EAAA0FF0);
  MEMORY[0x1F4188790](v247);
  v246 = (char *)&v188 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_1DC87E988(&qword_1EAAA0FF8);
  uint64_t v276 = *(void *)(v245 - 8);
  MEMORY[0x1F4188790](v245);
  v244 = (char *)&v188 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = sub_1DC87E988(&qword_1EAAA1000);
  v268 = *(void (***)(char *, uint64_t))(v243 - 8);
  MEMORY[0x1F4188790](v243);
  v242 = (char *)&v188 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_1DC87E988(&qword_1EAAA1008);
  unint64_t v267 = *(void *)(v241 - 8);
  MEMORY[0x1F4188790](v241);
  v240 = (char *)&v188 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = sub_1DC87E988(&qword_1EAAA1010);
  uint64_t v266 = *(void *)(v270 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v270);
  v239 = (char *)&v188 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  v269 = (char *)&v188 - v20;
  uint64_t v260 = sub_1DC87E988(&qword_1EAAA1018);
  unint64_t v265 = *(void *)(v260 - 8);
  MEMORY[0x1F4188790](v260);
  v259 = (char *)&v188 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_1DC87E988(&qword_1EAAA1020);
  uint64_t v22 = *(void *)(v206 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v206);
  uint64_t v204 = (char *)&v188 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v205 = (char *)&v188 - v25;
  uint64_t v238 = sub_1DC87E988(&qword_1EAAA1028);
  MEMORY[0x1F4188790](v238);
  v237 = (char *)&v188 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_1DC87E988(&qword_1EAAA1030);
  MEMORY[0x1F4188790](v236);
  uint64_t v235 = (uint64_t)&v188 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_1DC87E988(&qword_1EAAA1038);
  MEMORY[0x1F4188790](v234);
  uint64_t v233 = (char *)&v188 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = sub_1DC87E988(&qword_1EAAA1040);
  uint64_t v29 = *(void *)(v232 - 8);
  MEMORY[0x1F4188790](v232);
  char v231 = (char *)&v188 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_1DC87E988(&qword_1EAAA1048);
  uint64_t v31 = *(void *)(v202 - 8);
  MEMORY[0x1F4188790](v202);
  uint64_t v201 = (char *)&v188 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_1DC87E988(&qword_1EAAA1050);
  MEMORY[0x1F4188790](v194);
  uint64_t v193 = (char *)&v188 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_1DC87E988((uint64_t *)&unk_1EAAA5340);
  uint64_t v34 = *(void *)(v272 - 8);
  MEMORY[0x1F4188790](v272);
  v263 = (char *)&v188 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v275 = sub_1DC87E988(&qword_1EAAA1058);
  uint64_t v36 = *(void *)(v275 - 8);
  uint64_t v37 = MEMORY[0x1F4188790](v275);
  v262 = (char *)&v188 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  v274 = (char *)&v188 - v39;
  uint64_t v217 = sub_1DC87E988(&qword_1EAAA1060);
  uint64_t v40 = *(void *)(v217 - 8);
  MEMORY[0x1F4188790](v217);
  uint64_t v216 = (char *)&v188 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_1DC87E988(&qword_1EAAA1068);
  MEMORY[0x1F4188790](v215);
  uint64_t v214 = (char *)&v188 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_1DC87E988(&qword_1EAAA1070);
  MEMORY[0x1F4188790](v213);
  uint64_t v212 = (char *)&v188 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_1DC87E988((uint64_t *)&unk_1EAAA1078);
  MEMORY[0x1F4188790](v211);
  long long v210 = (char *)&v188 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v46 = a1;
    uint64_t v47 = *(void *)(a1 + 16);
    uint64_t v271 = v3;
    uint64_t v191 = (void (**)(char *, uint64_t))(v31 + 8);
    uint64_t v190 = (void (**)(char *, uint64_t))(v280 + 8);
    uint64_t v189 = (void (**)(char *, uint64_t))(v279 + 8);
    uint64_t v188 = v277 + 8;
    v273 = (void (**)(char *, uint64_t))(v36 + 8);
    v261 = (void (**)(char *, uint64_t))(v34 + 8);
    char v230 = (void (**)(char *, uint64_t))(v265 + 8);
    uint64_t v192 = (void (**)(char *, uint64_t))(v22 + 8);
    long long v209 = (void (**)(char *, char *, uint64_t))(v40 + 16);
    long long v208 = (void (**)(char *, uint64_t))(v40 + 8);
    uint64_t v207 = v44 + 8;
    char v229 = (void (**)(char *, char *, uint64_t))(v283 + 16);
    char v228 = (void (**)(char *, uint64_t))(v283 + 8);
    char v227 = (void (**)(char *, uint64_t))(v282 + 2);
    long long v226 = (void (**)(char *, uint64_t))(v281 + 8);
    uint64_t v225 = (void (**)(char *, char *, uint64_t))(v278 + 16);
    uint64_t v224 = (void (**)(char *, uint64_t))(v278 + 8);
    uint64_t v223 = v276 + 8;
    long long v222 = v268 + 1;
    long long v221 = (void (**)(char *, uint64_t))(v267 + 8);
    v268 = (void (**)(char *, uint64_t))(v266 + 8);
    v220 = (void (**)(char *, char *, uint64_t))(v34 + 16);
    uint64_t v219 = v29 + 8;
    uint64_t v48 = v46;
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v203 = v48;
    v282 = (_DWORD *)(v48 + 80);
    uint64_t v218 = MEMORY[0x1E4FBC840] + 8;
    while (2)
    {
      uint64_t v50 = *((void *)v282 - 6);
      uint64_t v49 = *((void *)v282 - 5);
      unint64_t v51 = *((void *)v282 - 4);
      unint64_t v52 = *((void *)v282 - 3);
      unint64_t v54 = *((void *)v282 - 2);
      unint64_t v53 = *((void *)v282 - 1);
      LODWORD(v281) = *v282;
      v282 += 14;
      uint64_t v283 = a2;
      switch(v52 >> 28)
      {
        case 1u:
          uint64_t v284 = v283;
          swift_bridgeObjectRetain();
          uint64_t v277 = v49;
          sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
          unint64_t v278 = v51;
          sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
          unint64_t v279 = v53;
          uint64_t v280 = v54;
          sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
          uint64_t v84 = v50;
          uint64_t v85 = v47;
          uint64_t v86 = v239;
          sub_1DCB874A8();
          *(void *)(swift_allocObject() + 16) = v84;
          swift_bridgeObjectRetain();
          uint64_t v276 = v52;
          uint64_t v88 = v269;
          uint64_t v87 = v270;
          sub_1DCB87128();
          swift_release();
          uint64_t v89 = *v268;
          uint64_t v90 = v86;
          uint64_t v47 = v85;
          (*v268)(v90, v87);
          uint64_t v91 = v274;
          sub_1DCB87138();
          v89(v88, v87);
          sub_1DC88CF34(&qword_1EAAA10A8, &qword_1EAAA1058);
          uint64_t v92 = v275;
          a2 = sub_1DCB873A8();
          (*v273)(v91, v92);
          uint64_t v93 = v84;
          uint64_t v94 = v277;
          uint64_t v95 = v278;
          unsigned int v96 = v276;
          goto LABEL_15;
        case 2u:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v97 = v271;
          uint64_t v98 = sub_1DC956338(v50, v49, v51, v52 & 1, v283, v258);
          uint64_t v271 = v97;
          if (v97)
          {
            sub_1DC8A8CE4(v50, v49, v51, v52);
            swift_release();
            swift_bridgeObjectRelease_n();
            return a2;
          }
          a2 = v98;
          uint64_t v93 = v50;
          uint64_t v94 = v49;
          uint64_t v95 = v51;
          unsigned int v96 = v52;
LABEL_15:
          sub_1DC8A8CE4(v93, v94, v95, v96);
LABEL_37:
          swift_release();
          if (--v47) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          break;
        case 3u:
          uint64_t v284 = v283;
          swift_bridgeObjectRetain();
          uint64_t v99 = v49;
          sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
          unint64_t v278 = v51;
          sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
          uint64_t v280 = v54;
          sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
          unint64_t v279 = v53;
          uint64_t v100 = v269;
          sub_1DCB874A8();
          uint64_t v101 = swift_allocObject();
          *(void *)(v101 + 16) = v50;
          *(void *)(v101 + 24) = v49;
          uint64_t v102 = v50;
          swift_bridgeObjectRetain();
          uint64_t v103 = v274;
          uint64_t v104 = v270;
          sub_1DCB87128();
          swift_release();
          (*v268)(v100, v104);
          sub_1DC88CF34(&qword_1EAAA10A8, &qword_1EAAA1058);
          uint64_t v105 = v275;
          a2 = sub_1DCB873A8();
          (*v273)(v103, v105);
          uint64_t v93 = v102;
          uint64_t v94 = v99;
          uint64_t v95 = v278;
          goto LABEL_11;
        case 4u:
          uint64_t v284 = v283;
          uint64_t v106 = swift_allocObject();
          *(void *)(v106 + 16) = v50;
          *(void *)(v106 + 24) = v49;
          swift_bridgeObjectRetain_n();
          uint64_t v277 = v49;
          sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
          uint64_t v280 = v54;
          sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
          unint64_t v279 = v53;
          sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
          uint64_t v276 = v50;
          uint64_t v107 = v47;
          uint64_t v108 = v242;
          sub_1DCB873D8();
          swift_release();
          uint64_t v109 = v240;
          uint64_t v110 = v243;
          sub_1DCB870D8();
          uint64_t v111 = v108;
          uint64_t v47 = v107;
          (*v222)(v111, v110);
          sub_1DC88CF34(&qword_1EAAA10D8, &qword_1EAAA1008);
          uint64_t v112 = v241;
          a2 = sub_1DCB873A8();
          (*v221)(v109, v112);
          uint64_t v93 = v276;
          uint64_t v94 = v277;
          uint64_t v95 = v51;
LABEL_11:
          unsigned int v96 = v52;
          goto LABEL_15;
        case 5u:
          uint64_t v284 = v283;
          sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
          uint64_t v113 = v49;
          uint64_t v114 = sub_1DC87E988(&qword_1EAAA10B0);
          sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
          uint64_t v115 = v248;
          sub_1DCB873D8();
          uint64_t v116 = (uint64_t)v246;
          uint64_t v117 = v249;
          (*v225)(v246, v115, v249);
          uint64_t v118 = v247;
          *(void *)(v116 + *(int *)(v247 + 60)) = v50;
          *(void *)(v116 + *(int *)(v118 + 64)) = v113;
          *(void *)(v116 + *(int *)(v118 + 68)) = v114;
          (*v224)(v115, v117);
          sub_1DC88CF34(&qword_1EAAA10C0, &qword_1EAAA0FF0);
          uint64_t v81 = v244;
          sub_1DCB873D8();
          sub_1DC88CC04(v116, &qword_1EAAA0FF0);
          sub_1DC88CF34((unint64_t *)&unk_1EAAA10C8, &qword_1EAAA0FF8);
          uint64_t v82 = v245;
          a2 = sub_1DCB873A8();
          uint64_t v83 = &v255;
          goto LABEL_35;
        case 6u:
          uint64_t v284 = v283;
          swift_bridgeObjectRetain();
          uint64_t v277 = v49;
          sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
          sub_1DC87E988(&qword_1EAAA10A0);
          unint64_t v278 = v51;
          sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
          uint64_t v280 = v54;
          unsigned int v119 = v52;
          char v120 = v259;
          sub_1DCB874A8();
          *(void *)(swift_allocObject() + 16) = v50;
          swift_bridgeObjectRetain();
          uint64_t v276 = v50;
          char v121 = v262;
          uint64_t v122 = v260;
          sub_1DCB87128();
          swift_release();
          (*v230)(v120, v122);
          uint64_t v124 = v274;
          uint64_t v123 = v275;
          sub_1DCB87138();
          char v125 = *v273;
          (*v273)(v121, v123);
          sub_1DC88CF34(&qword_1EAAA10A8, &qword_1EAAA1058);
          a2 = sub_1DCB873A8();
          v125(v124, v123);
          uint64_t v93 = v276;
          uint64_t v94 = v277;
          uint64_t v95 = v278;
          unsigned int v96 = v119;
          goto LABEL_15;
        case 7u:
          uint64_t v284 = v283;
          swift_bridgeObjectRetain();
          sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
          unint64_t v279 = v53;
          sub_1DC87E988(&qword_1EAAA0190);
          unint64_t v278 = v51;
          sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
          uint64_t v276 = v47;
          uint64_t v126 = v254;
          sub_1DCB874A8();
          uint64_t v127 = swift_allocObject();
          *(void *)(v127 + 16) = v50;
          *(void *)(v127 + 24) = v49;
          uint64_t v277 = v49;
          uint64_t v128 = swift_allocObject();
          *(void *)(v128 + 16) = v50;
          *(void *)(v128 + 24) = v49;
          char v129 = *v229;
          uint64_t v130 = (uint64_t)v256;
          uint64_t v280 = v54;
          uint64_t v131 = v255;
          v129(v256, v126, v255);
          uint64_t v132 = v257;
          uint64_t v133 = (void *)(v130 + *(int *)(v257 + 52));
          *uint64_t v133 = sub_1DC9585B0;
          v133[1] = v128;
          uint64_t v134 = (uint64_t (**)@<X0>(uint64_t *@<X0>, uint64_t *@<X1>, uint64_t *@<X8>))(v130
                                                                                              + *(int *)(v132 + 56));
          *uint64_t v134 = sub_1DC958594;
          v134[1] = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t *@<X1>, uint64_t *@<X8>))v127;
          sub_1DC88CF34(&qword_1EAAA1088, &qword_1EAAA0FB8);
          swift_bridgeObjectRetain_n();
          uint64_t v135 = v252;
          sub_1DCB873B8();
          sub_1DC88CC04(v130, &qword_1EAAA0FB8);
          uint64_t v136 = v126;
          uint64_t v47 = v276;
          (*v228)(v136, v131);
          sub_1DC88CF34(&qword_1EAAA1090, &qword_1EAAA0FC8);
          uint64_t v137 = v250;
          uint64_t v138 = v253;
          sub_1DCB873D8();
          (*v227)(v135, v138);
          sub_1DC88CF34(&qword_1EAAA1098, &qword_1EAAA0FD0);
          uint64_t v139 = v251;
          a2 = sub_1DCB873A8();
          (*v226)(v137, v139);
          uint64_t v93 = v50;
          uint64_t v94 = v277;
          uint64_t v95 = v278;
          unsigned int v96 = v52;
          goto LABEL_15;
        case 8u:
          if (v281) {
            BOOL v140 = 0;
          }
          else {
            BOOL v140 = v52 == 0x80000000;
          }
          if (v140 && (v51 | v49 | v50 | v54 | v53) == 0)
          {
            uint64_t v284 = v283;
            sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
            sub_1DC87E988(&qword_1EAAA1130);
            sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
            uint64_t v151 = v216;
            sub_1DCB874A8();
            uint64_t v152 = (uint64_t)v214;
            uint64_t v153 = v217;
            (*v209)(v214, v151, v217);
            uint64_t v154 = v215;
            char v155 = (void *(**)@<X0>(void *@<X8>))(v152 + *(int *)(v215 + 52));
            char *v155 = sub_1DCA05D94;
            v155[1] = 0;
            uint64_t v156 = (void *)(v152 + *(int *)(v154 + 56));
            *uint64_t v156 = sub_1DCAFF09C;
            v156[1] = 0;
            (*v208)(v151, v153);
            uint64_t v157 = swift_allocObject();
            *(void *)(v157 + 16) = sub_1DCAFD69C;
            *(void *)(v157 + 24) = 0;
            sub_1DC87E988(&qword_1EAA9DA70);
            sub_1DC88CF34(&qword_1EAAA1138, &qword_1EAAA1068);
            sub_1DC88CF34(&qword_1EAA9DA80, &qword_1EAA9DA70);
            uint64_t v158 = (uint64_t)v212;
            sub_1DCB874D8();
            swift_release();
            sub_1DC88CC04(v152, &qword_1EAAA1068);
            sub_1DC88CF34(&qword_1EAAA1140, &qword_1EAAA1070);
            uint64_t v81 = v210;
            sub_1DCB873D8();
            sub_1DC88CC04(v158, &qword_1EAAA1070);
            sub_1DC88CF34(&qword_1EAAA1148, (uint64_t *)&unk_1EAAA1078);
            uint64_t v82 = v211;
            a2 = sub_1DCB873A8();
            uint64_t v83 = (uint64_t *)&v239;
LABEL_35:
            char v159 = (void (**)(char *, uint64_t))*(v83 - 32);
            goto LABEL_36;
          }
          unint64_t v142 = v51 | v49 | v54 | v53;
          if (!v281)
          {
            BOOL v143 = v52 == 0x80000000 && v50 == 1;
            if (v143 && v142 == 0)
            {
              uint64_t v284 = v283;
              sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
              sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
              sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
              uint64_t v145 = v263;
              sub_1DCB874A8();
              uint64_t v146 = v262;
              uint64_t v147 = v272;
              sub_1DCB87138();
              (*v261)(v145, v147);
LABEL_33:
              uint64_t v149 = v274;
              uint64_t v148 = v275;
              sub_1DCB87138();
              uint64_t v150 = *v273;
              (*v273)(v146, v148);
              sub_1DC88CF34(&qword_1EAAA10A8, &qword_1EAAA1058);
              a2 = sub_1DCB873A8();
              v150(v149, v148);
              goto LABEL_37;
            }
          }
          if (!v281)
          {
            BOOL v160 = v52 == 0x80000000 && v50 == 2;
            if (v160 && !v142)
            {
              uint64_t v284 = v283;
              sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
              sub_1DC87E988((uint64_t *)&unk_1EAAA10E0);
              sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
              char v161 = v204;
              sub_1DCB874A8();
              char v162 = v205;
              uint64_t v163 = v206;
              sub_1DCB87138();
              char v164 = *v192;
              (*v192)(v161, v163);
              uint64_t v81 = v274;
              sub_1DCB87138();
              v164(v162, v163);
              sub_1DC88CF34(&qword_1EAAA10A8, &qword_1EAAA1058);
              uint64_t v82 = v275;
              a2 = sub_1DCB873A8();
              char v159 = v273;
LABEL_36:
              (*v159)(v81, v82);
              goto LABEL_37;
            }
          }
          if (!v281)
          {
            BOOL v165 = v52 == 0x80000000 && v50 == 3;
            if (v165 && !v142)
            {
              uint64_t v284 = v283;
              sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
              sub_1DC87E988((uint64_t *)&unk_1EAAA10E0);
              sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
              char v166 = v205;
              sub_1DCB874A8();
              uint64_t v146 = v262;
              uint64_t v167 = v206;
              sub_1DCB87138();
              (*v192)(v166, v167);
              goto LABEL_33;
            }
          }
          uint64_t v168 = v263;
          if (v281 || (v52 == 0x80000000 ? (BOOL v169 = v50 == 4) : (BOOL v169 = 0), !v169 || v142))
          {
            if (!v281)
            {
              BOOL v175 = v52 == 0x80000000 && v50 == 5;
              if (v175 && !v142)
              {
                uint64_t v284 = v283;
                sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
                sub_1DC87E988(&qword_1EAAA10B0);
                sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
                uint64_t v176 = v201;
                sub_1DCB874A8();
                uint64_t v177 = swift_allocObject();
                *(void *)(v177 + 16) = sub_1DCAFDE28;
                *(void *)(v177 + 24) = 0;
                sub_1DC87E988(&qword_1EAAA1110);
                sub_1DC88CF34(&qword_1EAAA1118, &qword_1EAAA1048);
                sub_1DC88CF34(&qword_1EAAA1120, &qword_1EAAA1110);
                uint64_t v178 = (uint64_t)v193;
                uint64_t v179 = v202;
                sub_1DCB874D8();
                swift_release();
                (*v191)(v176, v179);
                sub_1DC88CF34(&qword_1EAAA1128, &qword_1EAAA1050);
                a2 = sub_1DCB873A8();
                sub_1DC88CC04(v178, &qword_1EAAA1050);
                goto LABEL_37;
              }
            }
            uint64_t v284 = v283;
            sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
            sub_1DC87E988(&qword_1EAAA10B0);
            sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
            int v180 = v201;
            sub_1DCB874A8();
            sub_1DC87E988(&qword_1EAAA10B8);
            int v181 = v199;
            uint64_t v182 = v202;
            sub_1DCB87128();
            (*v191)(v180, v182);
            uint64_t v183 = v197;
            uint64_t v184 = v200;
            sub_1DCB87138();
            (*v190)(v181, v184);
            sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
            int v170 = v195;
            uint64_t v185 = v198;
            sub_1DCB87138();
            (*v189)(v183, v185);
            uint64_t v172 = v274;
            uint64_t v173 = v196;
            sub_1DCB87138();
            uint64_t v174 = &v220;
          }
          else
          {
            uint64_t v284 = v283;
            sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
            sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
            sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
            sub_1DCB874A8();
            sub_1DC87E988(&qword_1EAAA10A0);
            int v170 = v259;
            uint64_t v171 = v272;
            sub_1DCB87138();
            (*v261)(v168, v171);
            uint64_t v172 = v274;
            uint64_t v173 = v260;
            sub_1DCB87138();
            uint64_t v174 = (void (***)(char *, char *, uint64_t))&v262;
          }
          ((void (*)(char *, uint64_t))**(v174 - 32))(v170, v173);
          sub_1DC88CF34(&qword_1EAAA10A8, &qword_1EAAA1058);
          uint64_t v186 = v275;
          a2 = sub_1DCB873A8();
          (*v273)(v172, v186);
          goto LABEL_37;
        default:
          unint64_t v55 = v49;
          uint64_t v276 = v47;
          unint64_t v56 = v50;
          unint64_t v278 = HIDWORD(v54);
          uint64_t v284 = v283;
          uint64_t v280 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
          uint64_t v57 = v54;
          uint64_t v58 = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
          sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
          uint64_t v59 = v263;
          sub_1DCB874A8();
          uint64_t v280 = v57;
          uint64_t v60 = (v278 + v57);
          if (__CFADD__(v278, v57))
          {
            __break(1u);
            JUMPOUT(0x1DC956314);
          }
          LODWORD(v266) = v52 & 1;
          unint64_t v279 = v53;
          unint64_t v267 = HIDWORD(v53);
          unint64_t v61 = HIDWORD(v52);
          int v62 = v51;
          int v63 = v55;
          unint64_t v264 = HIDWORD(v55);
          unint64_t v265 = HIDWORD(v51);
          int v64 = v56;
          unint64_t v65 = HIDWORD(v56);
          uint64_t v66 = (uint64_t)v237;
          (*v220)(v237, v59, v272);
          uint64_t v67 = v238;
          *(void *)(v66 + *(int *)(v238 + 60)) = v60;
          *(void *)(v66 + *(int *)(v67 + 64)) = v61;
          *(void *)(v66 + *(int *)(v67 + 68)) = v58;
          uint64_t v68 = swift_allocObject();
          *(_DWORD *)(v68 + 16) = v64;
          *(_DWORD *)(v68 + 20) = v65;
          int v69 = v264;
          *(_DWORD *)(v68 + 24) = v63;
          *(_DWORD *)(v68 + 28) = v69;
          int v70 = v265;
          *(_DWORD *)(v68 + 32) = v62;
          *(_DWORD *)(v68 + 36) = v70;
          *(unsigned char *)(v68 + 40) = v266;
          *(_WORD *)(v68 + 41) = v285;
          *(unsigned char *)(v68 + 43) = v286;
          int v71 = v280;
          *(_DWORD *)(v68 + 44) = v61;
          *(_DWORD *)(v68 + 48) = v71;
          int v72 = v279;
          *(_DWORD *)(v68 + 52) = v278;
          *(_DWORD *)(v68 + 56) = v72;
          int v73 = v281;
          *(_DWORD *)(v68 + 60) = v267;
          *(_DWORD *)(v68 + 64) = v73;
          uint64_t v74 = v235;
          sub_1DC8B9F3C(v66, v235, &qword_1EAAA1028);
          uint64_t v75 = v236;
          uint64_t v76 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v74 + *(int *)(v236 + 52));
          char *v76 = sub_1DC88CB28;
          v76[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v68;
          uint64_t v77 = (uint64_t (**)(uint64_t))(v74 + *(int *)(v75 + 56));
          char *v77 = sub_1DCAFF16C;
          v77[1] = 0;
          uint64_t v78 = v66;
          uint64_t v47 = v276;
          sub_1DC88CC04(v78, &qword_1EAAA1028);
          (*v261)(v59, v272);
          uint64_t v79 = swift_allocObject();
          *(void *)(v79 + 16) = sub_1DCAFD69C;
          *(void *)(v79 + 24) = 0;
          sub_1DC87E988(&qword_1EAA9DA70);
          sub_1DC88CF34((unint64_t *)&unk_1EAAA10F0, &qword_1EAAA1030);
          sub_1DC88CF34(&qword_1EAA9DA80, &qword_1EAA9DA70);
          uint64_t v80 = (uint64_t)v233;
          sub_1DCB874D8();
          swift_release();
          sub_1DC88CC04(v74, &qword_1EAAA1030);
          sub_1DC88CF34(&qword_1EAAA1100, &qword_1EAAA1038);
          uint64_t v81 = v231;
          sub_1DCB873D8();
          sub_1DC88CC04(v80, &qword_1EAAA1038);
          sub_1DC88CF34(&qword_1EAAA1108, &qword_1EAAA1040);
          uint64_t v82 = v232;
          a2 = sub_1DCB873A8();
          uint64_t v83 = &v251;
          goto LABEL_35;
      }
      break;
    }
  }
  else
  {
    swift_retain();
  }
  return a2;
}

uint64_t sub_1DC956338(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v84 = a6;
  uint64_t v64 = a5;
  LODWORD(v83) = a4;
  uint64_t v81 = a3;
  uint64_t v69 = sub_1DC87E988(&qword_1EAAA1010);
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  unint64_t v65 = (char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v70 = (void *)sub_1DC87E988(&qword_1EAAA1150);
  uint64_t v68 = *(v70 - 1);
  MEMORY[0x1F4188790](v70);
  uint64_t v66 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1DC87E988(&qword_1EAAA1158);
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v82 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1DC87E988(&qword_1EAAA1160);
  MEMORY[0x1F4188790](v74);
  int v72 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1DC87E988(&qword_1EAAA1168);
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  int v71 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA1170);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v79 = v13;
  uint64_t v80 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v77 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DCB868D8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DCB86A18();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)v63 - v25;
  uint64_t v85 = a1;
  uint64_t v86 = a2;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4F276C0], v16);
  sub_1DC91ACCC();
  sub_1DCB869F8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v27 = v87;
  uint64_t v28 = sub_1DC969B7C();
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  else
  {
    uint64_t v29 = v28;
    type metadata accessor for E5RTExecutionStream();
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v29;
    uint64_t v87 = v26;
    sub_1DCB868C8();
    sub_1DCB869C8();
    uint64_t v31 = v24;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v21 + 8);
    v32(v31, v20);
    uint64_t v33 = sub_1DC969C30();
    type metadata accessor for E5RTExecutionStreamOperation();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v33;
    sub_1DC96BE9C(v34);
    uint64_t v84 = v34;
    uint64_t v35 = v30;
    sub_1DC969E30(v34);
    uint64_t v85 = v64;
    uint64_t v64 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
    uint64_t v83 = sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
    uint64_t v37 = v65;
    sub_1DCB874A8();
    sub_1DC87E988((uint64_t *)&unk_1EAAA1178);
    uint64_t v38 = v66;
    uint64_t v39 = v69;
    sub_1DCB87128();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v39);
    sub_1DC87E988(&qword_1EAAA0A20);
    uint64_t v40 = v70;
    sub_1DCB87128();
    (*(void (**)(char *, void *))(v68 + 8))(v38, v40);
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = v84;
    *(void *)(v41 + 16) = v35;
    *(void *)(v41 + 24) = v42;
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v81;
    *(void *)(v43 + 16) = v81;
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_1DC9586C8;
    *(void *)(v45 + 24) = v43;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_1DC958714;
    *(void *)(v46 + 24) = v45;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_1DC958674;
    *(void *)(v47 + 24) = v41;
    uint64_t v48 = (void *)swift_allocObject();
    v48[2] = sub_1DCA33610;
    v48[3] = 0;
    v48[4] = sub_1DC95874C;
    v48[5] = v47;
    v48[6] = sub_1DC958730;
    v48[7] = v46;
    uint64_t v49 = (uint64_t (*)())swift_allocObject();
    uint64_t v50 = v84;
    *((void *)v49 + 2) = v35;
    *((void *)v49 + 3) = v50;
    *((void *)v49 + 4) = v44;
    v63[1] = v35;
    uint64_t v51 = v73;
    unint64_t v52 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
    uint64_t v69 = v21 + 8;
    int v70 = v32;
    uint64_t v53 = (uint64_t)v72;
    uint64_t v54 = v75;
    v52(v72, v82, v75);
    uint64_t v55 = v74;
    unint64_t v56 = (uint64_t (**)())(v53 + *(int *)(v74 + 52));
    *unint64_t v56 = sub_1DC95881C;
    v56[1] = v49;
    uint64_t v57 = (void *)(v53 + *(int *)(v55 + 56));
    *uint64_t v57 = sub_1DC9587B0;
    v57[1] = v48;
    uint64_t v58 = *(void (**)(char *, uint64_t))(v51 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v58(v82, v54);
    sub_1DC88CF34(&qword_1EAAA1188, &qword_1EAAA1160);
    uint64_t v59 = v71;
    sub_1DCB873D8();
    sub_1DC88CC04(v53, &qword_1EAAA1160);
    unint64_t v61 = v77;
    uint64_t v60 = v78;
    sub_1DCB870D8();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v59, v60);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA1190, &qword_1EAAA1170);
    uint64_t v62 = v79;
    a2 = sub_1DCB873A8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v61, v62);
    ((void (*)(char *, uint64_t))v70)(v87, v20);
  }
  return a2;
}

unint64_t sub_1DC956DCC(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1E01A99E0](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1E01A99E0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DC956E58(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(v5, __src, sizeof(v5));
  sub_1DC943B74(v5);
  if (!v2) {
    *a2 = v4;
  }
}

uint64_t sub_1DC956EB8@<X0>(void *__src@<X3>, uint64_t *a2@<X0>, void (*a3)(uint64_t *__return_ptr, unsigned char *)@<X1>, int a4@<W2>, void *a5@<X8>)
{
  uint64_t v9 = *a2;
  memcpy(v11, __src, sizeof(v11));
  uint64_t result = sub_1DCAC4634(v9, a3, a4, v11);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

uint64_t sub_1DC956F30(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  return sub_1DC943BE8(__dst);
}

uint64_t sub_1DC956F7C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC94590C(*a1);
  *a2 = result;
  return result;
}

void *sub_1DC956FA8@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t result = sub_1DC93E8F8(__dst);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC957008@<X0>(void *__src@<X3>, void *a2@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t result = sub_1DCAC453C();
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1DC957080(void *a1@<X8>)
{
  sub_1DCB0645C();
  *a1 = v2;
}

uint64_t sub_1DC9570AC(uint64_t *a1)
{
  return sub_1DC953084(*a1, a1[1]);
}

uint64_t sub_1DC9570BC()
{
  return sub_1DC95310C();
}

void sub_1DC9570C4(void *a1@<X8>)
{
  sub_1DCB068D0();
  *a1 = v2;
}

void sub_1DC9570F0(void *a1@<X8>)
{
  sub_1DCB06BC8();
  *a1 = v2;
}

uint64_t sub_1DC957118@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC946BA4(a1);
}

uint64_t sub_1DC95714C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  char v9 = *a1;
  long long v10 = *(_OWORD *)(a5 + 16);
  v12[0] = *(_OWORD *)a5;
  v12[1] = v10;
  uint64_t v13 = *(void *)(a5 + 32);
  uint64_t result = sub_1DC951E78(v9, a2, a3, a4, (uint64_t)v12, a6);
  if (!v7) {
    *a7 = result;
  }
  return result;
}

uint64_t sub_1DC957198@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC953130(a1);
}

void *sub_1DC9571A0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1DC953598();
  *a1 = result;
  return result;
}

uint64_t sub_1DC9571C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9535BC(*a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1DC9571F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC94BAD4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC957240@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  int v7 = *a1;
  long long v8 = *(_OWORD *)(a4 + 16);
  v10[0] = *(_OWORD *)a4;
  v10[1] = v8;
  uint64_t v11 = *(void *)(a4 + 32);
  uint64_t result = sub_1DC94D4D4(v7, a2, a3, v10);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

uint64_t sub_1DC95728C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DC947A08();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

id sub_1DC9572D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  id result = sub_1DC947C30(*(id *)a1, *(unsigned char *)(a1 + 8));
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1DC957308@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  *a2 = result;
  return result;
}

void *sub_1DC957334@<X0>(void *(*a1)(uint64_t *__return_ptr, __int16 *)@<X0>, uint64_t a2@<X1>, unsigned __int16 *a3@<X2>, void *a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t result = sub_1DC947B94(a1, a2, *a3 | (*((unsigned __int8 *)a3 + 2) << 16));
  if (v5) {
    *a4 = v5;
  }
  else {
    *a5 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1DC957384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v4 = *(_OWORD *)(a3 + 16);
  v6[0] = *(_OWORD *)a3;
  v6[1] = v4;
  uint64_t v7 = *(void *)(a3 + 32);
  return sub_1DC943A78(a1, a2, (uint64_t)v6, a4);
}

uint64_t sub_1DC9573B8(uint64_t a1, uint64_t a2)
{
  return sub_1DC957384(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1DC9573D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC957448(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC957494(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC9574E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  sub_1DC8823A0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1DC8823B0(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1DC9575A0()
{
  unint64_t result = qword_1EAAA0B30;
  if (!qword_1EAAA0B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0B30);
  }
  return result;
}

uint64_t sub_1DC9575EC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC957634(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1DC957690()
{
  unint64_t result = qword_1EAAA4D90;
  if (!qword_1EAAA4D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4D90);
  }
  return result;
}

void sub_1DC9576E0(uint64_t a1@<X8>)
{
}

uint64_t sub_1DC9576F8()
{
  return sub_1DC88389C();
}

void sub_1DC957704()
{
}

void sub_1DC957724(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

unint64_t sub_1DC95773C()
{
  unint64_t result = qword_1EAAA0C60;
  if (!qword_1EAAA0C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0C60);
  }
  return result;
}

void sub_1DC957788(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1DC9577B0()
{
  void (*v1)(uint64_t *__return_ptr, unsigned char *);
  int v2;
  void *v3;
  void *v4;

  sub_1DC95ADFC();
  return sub_1DC956EB8(v3, v0, v1, v2, v4);
}

uint64_t sub_1DC9577CC(void *a1)
{
  return sub_1DC956F30(a1);
}

uint64_t sub_1DC9577E8()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC9577F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1DC947A5C();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

id sub_1DC957838@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1DC947C88(*(id *)a1, *(unsigned char *)(a1 + 8));
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void *sub_1DC957870@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = sub_1DC947DF4(*a1);
  *a2 = result;
  return result;
}

void *sub_1DC95789C@<X0>(void *(*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  id result = sub_1DC947BE0(a1, a2, *(void *)a3, *(unsigned char *)(a3 + 8));
  if (v5) {
    *a4 = v5;
  }
  else {
    *a5 = result;
  }
  return result;
}

void sub_1DC9578E4(void *a1@<X8>)
{
  sub_1DC93E91C();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1DC957938@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAC461C(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1DC957970(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1DC943B98(*a1);
  if (!v2) {
    *a2 = v4;
  }
}

uint64_t sub_1DC9579BC()
{
  return sub_1DC943C0C();
}

uint64_t sub_1DC957A0C()
{
  sub_1DC95ADFC();
  return sub_1DC99F88C(v0, v1);
}

unint64_t sub_1DC957A28()
{
  unint64_t result = qword_1EAAA0CA0;
  if (!qword_1EAAA0CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0CA0);
  }
  return result;
}

uint64_t sub_1DC957A74()
{
  return sub_1DC9A63A4();
}

uint64_t sub_1DC957A7C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9A644C(a1, a2);
}

void *sub_1DC957A98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC956FA8(a1, a2);
}

uint64_t sub_1DC957AC0()
{
  sub_1DC95ADFC();
  return sub_1DC957008(v0, v1);
}

unint64_t sub_1DC957ADC()
{
  unint64_t result = qword_1EAAA0CD8;
  if (!qword_1EAAA0CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0CD8);
  }
  return result;
}

uint64_t sub_1DC957B28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DC957B84(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 208);
}

uint64_t sub_1DC957B8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC957D00(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC957E74(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v3();
  return a1;
}

void sub_1DC957ECC(void *a1@<X8>)
{
}

uint64_t sub_1DC957ED8()
{
  uint64_t v1 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v6 = v4 + *(void *)(v5 + 64);
  uint64_t v7 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  sub_1DC89D568(v7);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  uint64_t v10 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0 + v9, 1, v10))
  {
    sub_1DCB86A18();
    sub_1DC88819C();
    sub_1DC88D5C8();
    v11();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC958040()
{
  uint64_t v3 = sub_1DC95AFA8();
  sub_1DC89D568(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v7 = v5 + *(void *)(v6 + 64);
  uint64_t v8 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  sub_1DC89D568(v8);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  unint64_t v13 = (v7 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_1DC957240(v1, v0 + v5, v0 + v13, v0 + ((*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8), v2);
}

uint64_t sub_1DC9580F8@<X0>(__int16 *a1@<X0>, char *a2@<X8>)
{
  return sub_1DCA31A8C(a1, a2);
}

unint64_t sub_1DC958114()
{
  unint64_t result = qword_1EAAA0E10;
  if (!qword_1EAAA0E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0E10);
  }
  return result;
}

uint64_t sub_1DC958160@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC95728C(a1);
}

void *sub_1DC958168()
{
  void *(*v0)(uint64_t *__return_ptr, __int16 *);
  uint64_t v1;
  unsigned __int16 *v2;
  void *v3;
  unsigned char *v4;

  uint64_t v0 = (void *(*)(uint64_t *__return_ptr, __int16 *))sub_1DC95AEBC();
  return sub_1DC957334(v0, v1, v2, v3, v4);
}

uint64_t sub_1DC958188()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC958194@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCA32040(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DC95819C()
{
  uint64_t v1 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  sub_1DC89D568(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v19 = *(void *)(v4 + 64);
  sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v20 = sub_1DC87E988((uint64_t *)&unk_1EAAA0EC8);
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0 + v3, 1, v13))
  {
    sub_1DCB86A18();
    sub_1DC88819C();
    sub_1DC88D5C8();
    v14();
    swift_bridgeObjectRelease();
  }
  unint64_t v15 = (((v3 + v19 + v6) & ~v6) + v18 + v10) & ~v10;
  sub_1DC95AD00();
  v16();
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v15, v20);

  sub_1DC89DCDC();

  return swift_deallocObject();
}

void sub_1DC95835C()
{
  uint64_t v0 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  sub_1DC89D568(v0);
  uint64_t v1 = sub_1DCB86BF8();
  sub_1DC89D568(v1);
  uint64_t v2 = sub_1DC87E988((uint64_t *)&unk_1EAAA0EC8);
  sub_1DC89D568(v2);

  sub_1DCA32184();
}

void sub_1DC958468()
{
  uint64_t v0 = sub_1DCB86BF8();
  sub_1DC8E77E0(v0);

  sub_1DCA32B64();
}

uint64_t sub_1DC9584C8(uint64_t a1, uint64_t a2)
{
  return sub_1DCA33EA8(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1DC9584D4()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC9584E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCAC5174(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

void sub_1DC9584F0()
{
  uint64_t v2 = sub_1DC95AFA8();
  sub_1DC8E77E0(v2);
  sub_1DCA31CF0(v0, v1);
}

uint64_t sub_1DC95853C()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC958548()
{
  uint64_t v0 = sub_1DC95AEBC();
  return sub_1DC9571F8(v0, v1);
}

uint64_t sub_1DC958564()
{
  swift_bridgeObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC958594@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DCB1CD70(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1DC9585B0@<X0>(void *a1@<X8>)
{
  return sub_1DCB1CE14(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1DC9585CC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCAFE64C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DC9585E8()
{
  return sub_1DCAFDF34();
}

uint64_t sub_1DC9585F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCAFDED4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1DC95860C(uint64_t a1)
{
  return sub_1DCAFD8DC(a1);
}

uint64_t sub_1DC958628()
{
  return sub_1DC88389C();
}

void sub_1DC958634()
{
}

uint64_t sub_1DC95863C()
{
  swift_release();
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC958674(uint64_t a1)
{
  return sub_1DC96E4C0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DC958690()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC9586C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCA335D8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DC9586E4()
{
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC958714(uint64_t a1)
{
  return sub_1DCA33344(a1, *(void (**)(uint64_t *__return_ptr, void *))(v1 + 16));
}

uint64_t sub_1DC958730(uint64_t *a1, void *a2, void *a3)
{
  return sub_1DCA33640(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1DC95874C(uint64_t a1)
{
  return sub_1DCA33688(a1);
}

uint64_t sub_1DC958768()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void *sub_1DC9587B0(uint64_t a1)
{
  return sub_1DCA336BC(a1);
}

uint64_t sub_1DC9587D4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC95881C()
{
  sub_1DC95AEBC();
  return sub_1DC8AF19C(v0, v1);
}

uint64_t sub_1DC95883C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC95887C(void *a1@<X8>)
{
}

uint64_t sub_1DC958888()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9589A0@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC95714C(a1, v2[2], v2[3], v2 + 4, (uint64_t)(v2 + 28), v2[33], a2);
}

uint64_t sub_1DC9589C8(uint64_t a1)
{
  return a1;
}

void *sub_1DC958B2C@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1DC953598();
  *a1 = result;
  return result;
}

uint64_t sub_1DC958B58@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_1DCA52E80(a1, a2);
}

uint64_t sub_1DC958B74(uint64_t result)
{
  if (result != 1) {
    return sub_1DC958B84(result);
  }
  return result;
}

uint64_t sub_1DC958B84(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DC958BC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC958BFC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DCA5809C(a1, a2);
}

uint64_t sub_1DC958C08()
{
  return sub_1DC88389C();
}

unint64_t sub_1DC958C14()
{
  unint64_t result = qword_1EAAA1348;
  if (!qword_1EAAA1348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1348);
  }
  return result;
}

uint64_t sub_1DC958C60(uint64_t *a1)
{
  return sub_1DC9570AC(a1);
}

uint64_t sub_1DC958C68()
{
  return sub_1DC9570BC();
}

unint64_t sub_1DC958C74()
{
  unint64_t result = qword_1EAAA3D00;
  if (!qword_1EAAA3D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3D00);
  }
  return result;
}

uint64_t sub_1DC958CC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC957118(a1);
}

uint64_t sub_1DC958CDC()
{
  sub_1DC87E988((uint64_t *)&unk_1EAAA1380);
  sub_1DC89D4E0();
  swift_release();
  sub_1DC95AE78();
  v0();

  return swift_deallocObject();
}

void sub_1DC958D7C(void *a1@<X8>)
{
  uint64_t v2 = sub_1DC87E988((uint64_t *)&unk_1EAAA1380);
  sub_1DC8E77E0(v2);
  sub_1DCB06BC8();
  *a1 = v3;
}

unint64_t sub_1DC958DC8()
{
  unint64_t result = qword_1EAAA1448;
  if (!qword_1EAAA1448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1448);
  }
  return result;
}

unint64_t sub_1DC958E14()
{
  unint64_t result = qword_1EAAA1450;
  if (!qword_1EAAA1450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1450);
  }
  return result;
}

unint64_t sub_1DC958E60()
{
  unint64_t result = qword_1EAAA1460;
  if (!qword_1EAAA1460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1460);
  }
  return result;
}

unint64_t sub_1DC958EAC()
{
  unint64_t result = qword_1EAAA1468;
  if (!qword_1EAAA1468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1468);
  }
  return result;
}

unint64_t sub_1DC958EF8()
{
  unint64_t result = qword_1EAAA1470;
  if (!qword_1EAAA1470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1470);
  }
  return result;
}

unint64_t sub_1DC958F44()
{
  unint64_t result = qword_1EAAA1478;
  if (!qword_1EAAA1478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1478);
  }
  return result;
}

unint64_t sub_1DC958F90()
{
  unint64_t result = qword_1EAAA1480;
  if (!qword_1EAAA1480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1480);
  }
  return result;
}

unint64_t sub_1DC958FDC()
{
  unint64_t result = qword_1EAAA1488;
  if (!qword_1EAAA1488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1488);
  }
  return result;
}

unint64_t sub_1DC959028()
{
  unint64_t result = qword_1EAAA1490;
  if (!qword_1EAAA1490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1490);
  }
  return result;
}

unint64_t sub_1DC959074()
{
  unint64_t result = qword_1EAAA1498;
  if (!qword_1EAAA1498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1498);
  }
  return result;
}

unint64_t sub_1DC9590C0()
{
  unint64_t result = qword_1EAAA14A0;
  if (!qword_1EAAA14A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14A0);
  }
  return result;
}

unint64_t sub_1DC95910C()
{
  unint64_t result = qword_1EAAA14A8;
  if (!qword_1EAAA14A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14A8);
  }
  return result;
}

unint64_t sub_1DC959158()
{
  unint64_t result = qword_1EAAA14B0;
  if (!qword_1EAAA14B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14B0);
  }
  return result;
}

unint64_t sub_1DC9591A4()
{
  unint64_t result = qword_1EAAA14B8;
  if (!qword_1EAAA14B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14B8);
  }
  return result;
}

unint64_t sub_1DC9591F0()
{
  unint64_t result = qword_1EAAA14C0;
  if (!qword_1EAAA14C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14C0);
  }
  return result;
}

unint64_t sub_1DC95923C()
{
  unint64_t result = qword_1EAAA14C8;
  if (!qword_1EAAA14C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14C8);
  }
  return result;
}

unint64_t sub_1DC959288()
{
  unint64_t result = qword_1EAAA14D0;
  if (!qword_1EAAA14D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14D0);
  }
  return result;
}

unint64_t sub_1DC9592D4()
{
  unint64_t result = qword_1EAAA14D8;
  if (!qword_1EAAA14D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14D8);
  }
  return result;
}

unint64_t sub_1DC959320()
{
  unint64_t result = qword_1EAAA14E0;
  if (!qword_1EAAA14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14E0);
  }
  return result;
}

unint64_t sub_1DC95936C()
{
  unint64_t result = qword_1EAAA14E8;
  if (!qword_1EAAA14E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14E8);
  }
  return result;
}

unint64_t sub_1DC9593B8()
{
  unint64_t result = qword_1EAAA14F0;
  if (!qword_1EAAA14F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14F0);
  }
  return result;
}

unint64_t sub_1DC959404()
{
  unint64_t result = qword_1EAAA14F8;
  if (!qword_1EAAA14F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA14F8);
  }
  return result;
}

uint64_t sub_1DC959450(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC959498(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1DC88819C();
  uint64_t v4 = sub_1DC8BAE5C();
  v5(v4);
  return a2;
}

unint64_t sub_1DC9594EC()
{
  unint64_t result = qword_1EAAA1570;
  if (!qword_1EAAA1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1570);
  }
  return result;
}

unint64_t sub_1DC959538()
{
  unint64_t result = qword_1EAAA1578;
  if (!qword_1EAAA1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1578);
  }
  return result;
}

unint64_t sub_1DC959584()
{
  unint64_t result = qword_1EAAA1580;
  if (!qword_1EAAA1580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1580);
  }
  return result;
}

unint64_t sub_1DC9595D0()
{
  unint64_t result = qword_1EAAA1588;
  if (!qword_1EAAA1588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1588);
  }
  return result;
}

unint64_t sub_1DC95961C()
{
  unint64_t result = qword_1EAAA1590;
  if (!qword_1EAAA1590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1590);
  }
  return result;
}

unint64_t sub_1DC959668()
{
  unint64_t result = qword_1EAAA1598;
  if (!qword_1EAAA1598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1598);
  }
  return result;
}

unint64_t sub_1DC9596B4()
{
  unint64_t result = qword_1EAAA15A0;
  if (!qword_1EAAA15A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA15A0);
  }
  return result;
}

unint64_t sub_1DC959700()
{
  unint64_t result = qword_1EAAA15A8;
  if (!qword_1EAAA15A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA15A8);
  }
  return result;
}

unint64_t sub_1DC95974C()
{
  unint64_t result = qword_1EAAA15B0;
  if (!qword_1EAAA15B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA15B0);
  }
  return result;
}

unint64_t sub_1DC959798()
{
  unint64_t result = qword_1EAAA15B8;
  if (!qword_1EAAA15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA15B8);
  }
  return result;
}

uint64_t sub_1DC9597E8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1DC959830(uint64_t a1@<X8>)
{
}

uint64_t sub_1DC95986C()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC95987C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 168);
  if ((~v1 & 0xF000000000000007) != 0) {

  }
  return swift_deallocObject();
}

void sub_1DC9598F4(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1DC8C96C0(a1, a2, a3, *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 96), *(void *)(v3 + 104), v3 + 112);
}

void sub_1DC95993C(uint64_t *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1DC959958()
{
  sub_1DC95ADFC();
  return sub_1DC911A84(v0, v1);
}

uint64_t sub_1DC959974()
{
  return sub_1DC9579BC();
}

uint64_t sub_1DC959990()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC95999C()
{
  swift_bridgeObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC9599D0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC959A30(void *a1@<X8>)
{
}

uint64_t sub_1DC959A4C()
{
  sub_1DC95ADFC();
  return sub_1DC957938(v0, v1);
}

uint64_t sub_1DC959A68@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC9577F4(a1);
}

void *sub_1DC959A70()
{
  void *(*v0)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  uint64_t v0 = (void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1DC95AEBC();
  return sub_1DC95789C(v0, v1, v2, v3, v4);
}

uint64_t sub_1DC959A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC947AAC(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t getEnumTagSinglePayload for RemoteRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RemoteRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC959BECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteRequest.CodingKeys()
{
  return &type metadata for RemoteRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.ExampleCodingKeys()
{
  return &type metadata for RemoteRequest.ExampleCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.SoundClassificationCodingKeys()
{
  return &type metadata for RemoteRequest.SoundClassificationCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.SpeechUtteranceCodingKeys()
{
  return &type metadata for RemoteRequest.SpeechUtteranceCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.SpeechEmotionCodingKeys()
{
  return &type metadata for RemoteRequest.SpeechEmotionCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.AudioLevelCodingKeys()
{
  return &type metadata for RemoteRequest.AudioLevelCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.ShazamCodingKeys()
{
  return &type metadata for RemoteRequest.ShazamCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.SoundDetectionCodingKeys()
{
  return &type metadata for RemoteRequest.SoundDetectionCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.DirectionOfArrivalCodingKeys()
{
  return &type metadata for RemoteRequest.DirectionOfArrivalCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.AccessibilitySoundRecognitionCodingKeys()
{
  return &type metadata for RemoteRequest.AccessibilitySoundRecognitionCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteRequest.AccessibilitySoundActionsCodingKeys()
{
  return &type metadata for RemoteRequest.AccessibilitySoundActionsCodingKeys;
}

unsigned char *_s13SoundAnalysis13RemoteRequestO17ExampleCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC959D64);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteRequest.AopClassificationDemoCodingKeys()
{
  return &type metadata for RemoteRequest.AopClassificationDemoCodingKeys;
}

unint64_t sub_1DC959DA0()
{
  unint64_t result = qword_1EAAA1640;
  if (!qword_1EAAA1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1640);
  }
  return result;
}

unint64_t sub_1DC959DF0()
{
  unint64_t result = qword_1EAAA1648;
  if (!qword_1EAAA1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1648);
  }
  return result;
}

unint64_t sub_1DC959E40()
{
  unint64_t result = qword_1EAAA1650;
  if (!qword_1EAAA1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1650);
  }
  return result;
}

unint64_t sub_1DC959E90()
{
  unint64_t result = qword_1EAAA1658;
  if (!qword_1EAAA1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1658);
  }
  return result;
}

unint64_t sub_1DC959EE0()
{
  unint64_t result = qword_1EAAA1660;
  if (!qword_1EAAA1660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1660);
  }
  return result;
}

unint64_t sub_1DC959F30()
{
  unint64_t result = qword_1EAAA1668;
  if (!qword_1EAAA1668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1668);
  }
  return result;
}

unint64_t sub_1DC959F80()
{
  unint64_t result = qword_1EAAA1670;
  if (!qword_1EAAA1670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1670);
  }
  return result;
}

unint64_t sub_1DC959FD0()
{
  unint64_t result = qword_1EAAA1678;
  if (!qword_1EAAA1678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1678);
  }
  return result;
}

unint64_t sub_1DC95A020()
{
  unint64_t result = qword_1EAAA1680;
  if (!qword_1EAAA1680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1680);
  }
  return result;
}

unint64_t sub_1DC95A070()
{
  unint64_t result = qword_1EAAA1688;
  if (!qword_1EAAA1688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1688);
  }
  return result;
}

unint64_t sub_1DC95A0C0()
{
  unint64_t result = qword_1EAAA1690;
  if (!qword_1EAAA1690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1690);
  }
  return result;
}

unint64_t sub_1DC95A110()
{
  unint64_t result = qword_1EAAA1698;
  if (!qword_1EAAA1698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1698);
  }
  return result;
}

unint64_t sub_1DC95A160()
{
  unint64_t result = qword_1EAAA16A0;
  if (!qword_1EAAA16A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16A0);
  }
  return result;
}

unint64_t sub_1DC95A1B0()
{
  unint64_t result = qword_1EAAA16A8;
  if (!qword_1EAAA16A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16A8);
  }
  return result;
}

unint64_t sub_1DC95A200()
{
  unint64_t result = qword_1EAAA16B0;
  if (!qword_1EAAA16B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16B0);
  }
  return result;
}

unint64_t sub_1DC95A250()
{
  unint64_t result = qword_1EAAA16B8;
  if (!qword_1EAAA16B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16B8);
  }
  return result;
}

unint64_t sub_1DC95A2A0()
{
  unint64_t result = qword_1EAAA16C0;
  if (!qword_1EAAA16C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16C0);
  }
  return result;
}

unint64_t sub_1DC95A2F0()
{
  unint64_t result = qword_1EAAA16C8;
  if (!qword_1EAAA16C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16C8);
  }
  return result;
}

unint64_t sub_1DC95A340()
{
  unint64_t result = qword_1EAAA16D0;
  if (!qword_1EAAA16D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16D0);
  }
  return result;
}

unint64_t sub_1DC95A390()
{
  unint64_t result = qword_1EAAA16D8;
  if (!qword_1EAAA16D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16D8);
  }
  return result;
}

unint64_t sub_1DC95A3E0()
{
  unint64_t result = qword_1EAAA16E0;
  if (!qword_1EAAA16E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16E0);
  }
  return result;
}

unint64_t sub_1DC95A430()
{
  unint64_t result = qword_1EAAA16E8;
  if (!qword_1EAAA16E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16E8);
  }
  return result;
}

unint64_t sub_1DC95A480()
{
  unint64_t result = qword_1EAAA16F0;
  if (!qword_1EAAA16F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16F0);
  }
  return result;
}

unint64_t sub_1DC95A4D0()
{
  unint64_t result = qword_1EAAA16F8;
  if (!qword_1EAAA16F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA16F8);
  }
  return result;
}

unint64_t sub_1DC95A520()
{
  unint64_t result = qword_1EAAA1700;
  if (!qword_1EAAA1700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1700);
  }
  return result;
}

unint64_t sub_1DC95A570()
{
  unint64_t result = qword_1EAAA1708;
  if (!qword_1EAAA1708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1708);
  }
  return result;
}

unint64_t sub_1DC95A5C0()
{
  unint64_t result = qword_1EAAA1710;
  if (!qword_1EAAA1710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1710);
  }
  return result;
}

unint64_t sub_1DC95A610()
{
  unint64_t result = qword_1EAAA1718;
  if (!qword_1EAAA1718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1718);
  }
  return result;
}

unint64_t sub_1DC95A660()
{
  unint64_t result = qword_1EAAA1720;
  if (!qword_1EAAA1720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1720);
  }
  return result;
}

unint64_t sub_1DC95A6B0()
{
  unint64_t result = qword_1EAAA1728;
  if (!qword_1EAAA1728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1728);
  }
  return result;
}

unint64_t sub_1DC95A700()
{
  unint64_t result = qword_1EAAA1730;
  if (!qword_1EAAA1730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1730);
  }
  return result;
}

unint64_t sub_1DC95A750()
{
  unint64_t result = qword_1EAAA1738;
  if (!qword_1EAAA1738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1738);
  }
  return result;
}

unint64_t sub_1DC95A7A0()
{
  unint64_t result = qword_1EAAA1740;
  if (!qword_1EAAA1740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1740);
  }
  return result;
}

unint64_t sub_1DC95A7F0()
{
  unint64_t result = qword_1EAAA1748;
  if (!qword_1EAAA1748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1748);
  }
  return result;
}

unint64_t sub_1DC95A840()
{
  unint64_t result = qword_1EAAA1750;
  if (!qword_1EAAA1750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1750);
  }
  return result;
}

unint64_t sub_1DC95A890()
{
  unint64_t result = qword_1EAAA1758;
  if (!qword_1EAAA1758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1758);
  }
  return result;
}

void sub_1DC95A8E0()
{
}

uint64_t sub_1DC95A940@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC957A7C(a1, a2);
}

uint64_t sub_1DC95A958()
{
  return sub_1DC957A0C();
}

uint64_t sub_1DC95A974()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DC95A9A0()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DC95A9C4()
{
  return *(void *)(v0 - 320);
}

uint64_t sub_1DC95A9DC()
{
  return sub_1DCB88E88();
}

void sub_1DC95AA04()
{
  *(void *)(v0 + 512) = *(void *)(v0 + 288);
  *(void *)(v0 + 256) = v2;
  *(void *)(v0 + 520) = v2;
  *(void *)(v0 + 528) = *(void *)(v0 + 248);
  *(void *)(v0 + 536) = v3;
  *(void *)(v0 + 544) = *(void *)(v0 + 240);
  *(void *)(v0 + 288) = v1;
  *(void *)(v0 + 552) = v1;
  *(unsigned char *)(v0 + 560) = *(_DWORD *)(v0 + 232);
  *(unsigned char *)(v0 + 561) = *(_DWORD *)(v0 + 224);
  *(unsigned char *)(v0 + 562) = *(_DWORD *)(v0 + 216);
  *(unsigned char *)(v0 + 563) = *(_DWORD *)(v0 + 208);
  *(unsigned char *)(v0 + 564) = *(_DWORD *)(v0 + 200);
  *(unsigned char *)(v0 + 565) = v4;
  *(void *)(v0 + 568) = *(void *)(v0 + 192);
  *(unsigned char *)(v0 + 576) = v5;
}

uint64_t sub_1DC95AA6C()
{
  return sub_1DCB88DF8();
}

void sub_1DC95AA90()
{
  *(void *)(v0 + 288) = *(void *)v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 240) = *(void *)(v1 + 32);
  *(void *)(v0 + 248) = v2;
  *(_DWORD *)(v0 + 232) = *(unsigned __int8 *)(v1 + 48);
  *(_DWORD *)(v0 + 224) = *(unsigned __int8 *)(v1 + 49);
  *(_DWORD *)(v0 + 216) = *(unsigned __int8 *)(v1 + 50);
  *(_DWORD *)(v0 + 208) = *(unsigned __int8 *)(v1 + 51);
  *(_DWORD *)(v0 + 200) = *(unsigned __int8 *)(v1 + 52);
  *(void *)(v0 + 192) = *(void *)(v1 + 56);
}

uint64_t sub_1DC95AAE0()
{
  return v0;
}

void sub_1DC95AAF0()
{
  uint64_t v2 = *(void *)(v1 + 8);
  *(void *)(v0 + 80) = *(void *)v1;
  *(void *)(v0 + 96) = v2;
  *(_DWORD *)(v0 + 72) = *(unsigned __int8 *)(v1 + 50);
  *(_DWORD *)(v0 + 64) = *(unsigned __int8 *)(v1 + 51);
  *(_DWORD *)(v0 + 56) = *(unsigned __int8 *)(v1 + 52);
  *(_DWORD *)(v0 + 48) = *(unsigned __int8 *)(v1 + 53);
  *(void *)(v0 + 40) = *(void *)(v1 + 56);
  *(_DWORD *)(v0 + 32) = *(unsigned __int8 *)(v1 + 64);
}

uint64_t sub_1DC95AB40()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC95AB5C()
{
  *(unsigned char *)(v0 + 402) = *(_DWORD *)(v0 + 72);
  *(unsigned char *)(v0 + 403) = *(_DWORD *)(v0 + 64);
  *(unsigned char *)(v0 + 404) = *(_DWORD *)(v0 + 56);
  *(unsigned char *)(v0 + 405) = *(_DWORD *)(v0 + 48);
  *(void *)(v0 + 408) = *(void *)(v0 + 40);
  *(unsigned char *)(v0 + 416) = *(_DWORD *)(v0 + 32);
  return AudioConfiguration.hash(into:)();
}

__n128 sub_1DC95ABA4()
{
  return *(__n128 *)(v0 - 304);
}

uint64_t sub_1DC95ABF0(__n128 a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, unsigned __int8 a5, unsigned __int8 a6, unsigned __int8 a7, unsigned __int8 a8, unsigned __int8 a9)
{
  v9[15] = a1;
  v9[16].n128_u8[0] = a4;
  v9[16].n128_u8[1] = a5;
  v9[16].n128_u8[2] = a6;
  v9[16].n128_u8[3] = a7;
  v9[16].n128_u8[4] = a8;
  v9[16].n128_u8[5] = a9;
  v9[16].n128_u64[1] = v10;
  v9[17].n128_u8[0] = v11;
  return static AudioConfiguration.== infix(_:_:)((uint64_t)&v9[27], (uint64_t)&v9[13]);
}

void sub_1DC95AC2C(char a1@<W8>)
{
  *(unsigned char *)(v1 - 304) = a1;
}

void sub_1DC95AC38(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W8>)
{
  *(void *)(v11 + 920) = v12;
  *(unsigned char *)(v11 + 928) = v10;
  *(unsigned char *)(v11 + 929) = v9;
  *(unsigned char *)(v11 + 930) = v8;
  *(unsigned char *)(v11 + 931) = v7;
  *(unsigned char *)(v11 + 932) = v6;
  *(unsigned char *)(v11 + 933) = v5;
  *(void *)(v11 + 936) = v4;
  *(unsigned char *)(v11 + 944) = a4;
  *(void *)(v11 + 656) = a1;
  *(void *)(v11 + 664) = v13;
  *(void *)(v11 + 672) = a2;
  *(void *)(v11 + 680) = v14;
  *(void *)(v11 + 688) = a3;
}

uint64_t sub_1DC95AC74()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DC95AC90()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DC95ACB4()
{
  return v0;
}

uint64_t sub_1DC95ACCC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1DC95ACE8()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DC95AD0C()
{
  return *(void *)(v0 + 200);
}

uint64_t sub_1DC95AD34()
{
  return 0;
}

id sub_1DC95AD50()
{
  return sub_1DCAA49F8();
}

uint64_t sub_1DC95AD78()
{
  return *(void *)(v0 - 320);
}

uint64_t sub_1DC95ADB0()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DC95ADCC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC95ADE4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC95AE24()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1DC95AE48()
{
  return *(void *)(v0 - 320);
}

uint64_t sub_1DC95AE88()
{
  *(unsigned char *)(v0 + 720) = v1;
  return static AudioConfiguration.== infix(_:_:)(v0 + 880, v0 + 656);
}

uint64_t sub_1DC95AEA4()
{
  return v0;
}

uint64_t sub_1DC95AEBC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1DC95AEC8()
{
  return swift_task_dealloc();
}

uint64_t sub_1DC95AEE0()
{
  return swift_task_alloc();
}

uint64_t sub_1DC95AF00()
{
  return v0;
}

uint64_t sub_1DC95AF14()
{
  return sub_1DCB873D8();
}

uint64_t sub_1DC95AF7C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_1DC95AFA8()
{
  return sub_1DCB86BF8();
}

double SNSpeechDistanceResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNSpeechDistanceResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

void sub_1DC95B000(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 48) = a1;
}

void sub_1DC95B014(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 56) = a1;
}

void sub_1DC95B028(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 64) = a1;
}

uint64_t sub_1DC95B03C()
{
  return sub_1DCB891E8();
}

BOOL sub_1DC95B104(double *a1, double *a2)
{
  double v2 = *a1;
  uint64_t v3 = *((void *)a1 + 5);
  double v4 = a1[6];
  double v5 = a1[7];
  double v6 = a1[8];
  double v7 = *a2;
  double v8 = a2[6];
  double v9 = a2[7];
  double v10 = a2[8];
  uint64_t v17 = *((void *)a2 + 5);
  *(double *)uint64_t v18 = v2;
  *(double *)&v18[1] = a1[1];
  long long v19 = *((_OWORD *)a1 + 1);
  uint64_t v20 = *((void *)a1 + 4);
  uint64_t v21 = v3;
  *(double *)uint64_t v14 = v7;
  *(double *)&v14[1] = a2[1];
  long long v15 = *((_OWORD *)a2 + 1);
  uint64_t v16 = *((void *)a2 + 4);
  BOOL v11 = static TimeRange.== infix(_:_:)((uint64_t)v18, (uint64_t)v14);
  BOOL result = 0;
  if (v11 && v4 == v8 && v5 == v9) {
    return v6 == v10;
  }
  return result;
}

uint64_t sub_1DC95B1C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB936A0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x756C61566E61656DLL && a2 == 0xE900000000000065;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB936D0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1DC95B37C(char a1)
{
  unint64_t result = 0x676E6152656D6974;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x756C61566E61656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DC95B408(void *a1)
{
  BOOL v2 = v1;
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA1788);
  sub_1DC89D4E0();
  uint64_t v15 = v5;
  MEMORY[0x1F4188790](v6);
  double v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  uint64_t v10 = v2[2];
  uint64_t v11 = v2[3];
  uint64_t v16 = v2[5];
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC95C7E4();
  sub_1DCB892B8();
  uint64_t v19 = v9;
  uint64_t v20 = v2[1];
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  uint64_t v23 = v2[4];
  uint64_t v24 = v16;
  char v18 = 0;
  sub_1DC89C64C();
  uint64_t v12 = v17;
  sub_1DCB88F18();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v4);
  }
  uint64_t v14 = v15;
  LOBYTE(v19) = 1;
  sub_1DC95CA88();
  LOBYTE(v19) = 2;
  sub_1DC95CA88();
  LOBYTE(v19) = 3;
  sub_1DC95CA88();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v8, v4);
}

uint64_t sub_1DC95B5F0()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC95B6F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA1770);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC95C7E4();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC89C600();
    sub_1DCB88DF8();
    sub_1DC95CA64(1);
    uint64_t v7 = v6;
    sub_1DC95CA64(2);
    uint64_t v10 = v9;
    sub_1DC95CA64(3);
    uint64_t v12 = v11;
    uint64_t v13 = sub_1DC8D5364();
    v14(v13);
    *a2 = v15;
    a2[1] = v16;
    a2[2] = v17;
    a2[3] = v18;
    a2[4] = v19;
    a2[5] = v20;
    a2[6] = v7;
    a2[7] = v10;
    a2[8] = v12;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

unint64_t sub_1DC95B8DC()
{
  return sub_1DC95B37C(*v0);
}

uint64_t sub_1DC95B8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC95B1C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC95B90C(uint64_t a1)
{
  unint64_t v2 = sub_1DC95C7E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC95B948(uint64_t a1)
{
  unint64_t v2 = sub_1DC95C7E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC95B98C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC95BA90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC95B6F8(a1, a2);
}

uint64_t sub_1DC95BAA8(void *a1)
{
  return sub_1DC95B408(a1);
}

double SNSpeechDistanceResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNSpeechDistanceResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double (*SNSpeechDistanceResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNSpeechDistanceResult.timeRange.getter((uint64_t)v3);
  return sub_1DC95BC10;
}

double sub_1DC95BC10(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNSpeechDistanceResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double sub_1DC95BC70()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechDistanceResult_impl + 48);
}

double sub_1DC95BCCC()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechDistanceResult_impl + 56);
}

double sub_1DC95BD28()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechDistanceResult_impl + 64);
}

id sub_1DC95BD60()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x1E4F1FA20];
  uint64_t v3 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v4 = &v0[OBJC_IVAR___SNSpeechDistanceResult_impl];
  *(void *)uint64_t v4 = *MEMORY[0x1E4F1FA20];
  *((void *)v4 + 1) = *(void *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((void *)v4 + 4) = *(void *)(v2 + 32);
  *((void *)v4 + 5) = v3;
  *((void *)v4 + 6) = 0;
  *((void *)v4 + 7) = 0;
  *((void *)v4 + 8) = 0;
  v6.uint64_t receiver = v0;
  v6.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1DC95BDFC(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 64);
  objc_super v6 = &v3[OBJC_IVAR___SNSpeechDistanceResult_impl];
  *(void *)objc_super v6 = *(void *)a1;
  *((void *)v6 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v6 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v6 + 4) = *(void *)(a1 + 32);
  *((void *)v6 + 5) = v4;
  *((_OWORD *)v6 + 3) = *(_OWORD *)(a1 + 48);
  *((void *)v6 + 8) = v5;
  v8.uint64_t receiver = v3;
  v8.Class super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SNSpeechDistanceResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DC95CA24(OBJC_IVAR___SNSpeechDistanceResult_impl);
  id result = sub_1DC95BDFC((uint64_t)v4);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNSpeechDistanceResult.hash.getter()
{
  return sub_1DC95B5F0();
}

BOOL SNSpeechDistanceResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v24);
  if (v25)
  {
    sub_1DC87E9CC(&v24, v23);
    sub_1DC87E9DC((uint64_t)v23, (uint64_t)v17);
    if (swift_dynamicCast())
    {
      double v3 = v11[0];
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 40);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 64);
      v17[0] = *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl);
      v17[1] = *(double *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 8);
      long long v18 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 16);
      uint64_t v19 = *(void *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 32);
      uint64_t v20 = v4;
      long long v21 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl + 48);
      uint64_t v22 = v5;
      uint64_t v6 = *(void *)&v11[0] + OBJC_IVAR___SNSpeechDistanceResult_impl;
      uint64_t v7 = *(void *)(*(void *)&v11[0] + OBJC_IVAR___SNSpeechDistanceResult_impl + 40);
      uint64_t v8 = *(void *)(*(void *)&v11[0] + OBJC_IVAR___SNSpeechDistanceResult_impl + 64);
      v11[0] = *(double *)(*(void *)&v11[0] + OBJC_IVAR___SNSpeechDistanceResult_impl);
      v11[1] = *(double *)(v6 + 8);
      long long v12 = *(_OWORD *)(v6 + 16);
      uint64_t v13 = *(void *)(v6 + 32);
      uint64_t v14 = v7;
      long long v15 = *(_OWORD *)(v6 + 48);
      uint64_t v16 = v8;
      BOOL v9 = sub_1DC95B104(v17, v11);
    }
    else
    {
      BOOL v9 = 0;
    }
    sub_1DC8818D0((uint64_t)v23);
  }
  else
  {
    return 0;
  }
  return v9;
}

id SNSpeechDistanceResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNSpeechDistanceResult.init(coder:)(a1);
}

id SNSpeechDistanceResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87D720();
  swift_getObjectType();

  id v4 = sub_1DC95BDFC((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNSpeechDistanceResult.encode(with:)(NSCoder with)
{
  memcpy(__dst, (const void *)(v1 + OBJC_IVAR___SNSpeechDistanceResult_impl), sizeof(__dst));
  sub_1DC87B604(__dst, 1819307369, 0xE400000000000000, with.super.isa);
}

uint64_t static SNSpeechDistanceResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSpeechDistanceResult.description.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1DCB88A98();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  v12.uint64_t receiver = v0;
  v12.Class super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DC95CAA4();
  sub_1DCB87A18();
  sub_1DC95CAA4();
  sub_1DCB87A18();
  sub_1DC95CAA4();
  sub_1DCB87A18();
  SNSpeechDistanceResult.timeRange.getter((uint64_t)&v15);
  uint64_t v3 = v15;
  uint64_t v4 = v17;
  uint64_t v5 = v18;
  uint64_t v6 = v20;
  uint64_t v7 = self;
  v11[0] = v3;
  v11[1] = v16;
  double v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  id v9 = objc_msgSend(v8, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v13;
}

id SNSpeechDistanceResult.__deallocating_deinit()
{
  v2.uint64_t receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DC95C6A4@<D0>(uint64_t a1@<X8>)
{
  return SNSpeechDistanceResult.timeRange.getter(a1);
}

double sub_1DC95C6C8(uint64_t a1)
{
  return SNSpeechDistanceResult.timeRange.setter(a1);
}

uint64_t type metadata accessor for SNSpeechDistanceResult()
{
  return self;
}

uint64_t method lookup function for SNSpeechDistanceResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNSpeechDistanceResult);
}

uint64_t getEnumTagSinglePayload for SpeechDistanceResult(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SpeechDistanceResult(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)id result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SpeechDistanceResult()
{
  return &type metadata for SpeechDistanceResult;
}

unint64_t sub_1DC95C798()
{
  unint64_t result = qword_1EAAA1768;
  if (!qword_1EAAA1768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1768);
  }
  return result;
}

unint64_t sub_1DC95C7E4()
{
  unint64_t result = qword_1EAAA1778;
  if (!qword_1EAAA1778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1778);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SpeechDistanceResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC95C8FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeechDistanceResult.CodingKeys()
{
  return &type metadata for SpeechDistanceResult.CodingKeys;
}

unint64_t sub_1DC95C938()
{
  unint64_t result = qword_1EAAA1798;
  if (!qword_1EAAA1798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1798);
  }
  return result;
}

unint64_t sub_1DC95C988()
{
  unint64_t result = qword_1EAAA17A0;
  if (!qword_1EAAA17A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA17A0);
  }
  return result;
}

unint64_t sub_1DC95C9D8()
{
  unint64_t result = qword_1EAAA17A8;
  if (!qword_1EAAA17A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA17A8);
  }
  return result;
}

double sub_1DC95CA24@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1 + 64);
}

uint64_t sub_1DC95CA64@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 160) = a1;
  return sub_1DCB88DC8();
}

uint64_t sub_1DC95CA88()
{
  return sub_1DCB88EE8();
}

uint64_t sub_1DC95CAA4()
{
  return sub_1DCB87FB8();
}

uint64_t sub_1DC95CAC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1) {
    return *(void *)(a1 + 8 * v1 + 24);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC95CAE4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 1 == a3) {
    return 0;
  }
  if ((uint64_t)(a4 >> 1) > a3) {
    return *(void *)(a2 + 8 * (a4 >> 1) - 8);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC95CB14(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_1DCB879E8();
  return sub_1DCB87AA8();
}

uint64_t sub_1DC95CB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = sub_1DC87E988(&qword_1EAAA17B8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v4);
  sub_1DC88D550();
  uint64_t v47 = v5;
  uint64_t v50 = (int *)sub_1DC87E988(&qword_1EAAA17C0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v49 = v7;
  sub_1DC87E988(&qword_1EAAA5430);
  sub_1DC89D4E0();
  uint64_t v51 = v9;
  uint64_t v52 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  uint64_t v48 = v10;
  uint64_t v56 = sub_1DC87E988(&qword_1EAAA17C8);
  sub_1DC89D4E0();
  uint64_t v54 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  uint64_t v53 = v13;
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA17D0);
  sub_1DC89D4E0();
  uint64_t v55 = v15;
  MEMORY[0x1F4188790](v16);
  sub_1DC8A22D0();
  uint64_t v19 = v18 - v17;
  sub_1DC87E988(&qword_1EAAA17D8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v20);
  sub_1DC8A22D0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAA17E0);
  sub_1DC89D4E0();
  uint64_t v26 = v25;
  MEMORY[0x1F4188790](v27);
  sub_1DC8A22D0();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = sub_1DC95D2A8(a1, a2);
  if (!v58)
  {
    uint64_t v45 = v23;
    if (*(void *)(a3 + 16) == v32)
    {
      if (v31 >= 1)
      {
        uint64_t v34 = v31;
        uint64_t v44 = v32;
        uint64_t v43 = v33;
        sub_1DC87E988(&qword_1EAA9FFA0);
        sub_1DC88819C();
        (*(void (**)(uint64_t))(v35 + 16))(v47);
        uint64_t v36 = (void *(**)@<X0>(void *@<X8>))(v47 + *(int *)(v46 + 52));
        *uint64_t v36 = sub_1DCA05D94;
        v36[1] = 0;
        uint64_t v37 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>))(v47 + *(int *)(v46 + 56));
        *uint64_t v37 = sub_1DC95E720;
        v37[1] = 0;
        sub_1DC95E75C(v47, v49);
        uint64_t v38 = sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
        *(void *)(v49 + v50[15]) = v34;
        *(void *)(v49 + v50[16]) = v34;
        *(void *)(v49 + v50[17]) = v38;
        sub_1DC901A64(v47, &qword_1EAAA17B8);
        sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
        sub_1DC88CF34(&qword_1EAAA17E8, &qword_1EAAA17C0);
        sub_1DCB873D8();
        sub_1DC901A64(v49, &qword_1EAAA17C0);
        sub_1DCA25520();
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v48, v52);
        uint64_t v39 = (void *)swift_allocObject();
        v39[2] = v34;
        v39[3] = v44;
        v39[4] = v43;
        v39[5] = a3;
        sub_1DC88CF34(&qword_1EAAA17F0, &qword_1EAAA17C8);
        swift_bridgeObjectRetain();
        sub_1DCB874A8();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v56);
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = sub_1DC95DBB0;
        *(void *)(v40 + 24) = 0;
        sub_1DC87E988(&qword_1EAA9DA70);
        sub_1DC88CF34(&qword_1EAAA17F8, &qword_1EAAA17D0);
        sub_1DC88CF34(&qword_1EAA9DA80, &qword_1EAA9DA70);
        sub_1DCB874D8();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v19, v14);
        *(void *)(swift_allocObject() + 16) = a3;
        swift_bridgeObjectRetain();
        sub_1DC87E988(&qword_1EAAA0190);
        sub_1DC88CF34(&qword_1EAAA1800, &qword_1EAAA17D8);
        sub_1DCB873D8();
        swift_release();
        sub_1DC901A64(v45, &qword_1EAAA17D8);
        sub_1DC88CF34(&qword_1EAAA1808, &qword_1EAAA17E0);
        uint64_t v19 = sub_1DCB873A8();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v24);
        return v19;
      }
      uint64_t v19 = 5;
    }
    else
    {
      uint64_t v19 = 6;
    }
    sub_1DC95E67C();
    sub_1DC883884();
    *uint64_t v41 = v19;
    swift_willThrow();
  }
  return v19;
}

uint64_t sub_1DC95D2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_1DC9735A8();
  if (v2) {
    return v3;
  }
  sub_1DCA265B0(v5, v6, v7, v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = sub_1DC96A4DC(v64[0], v64[1], v8);
  type metadata accessor for E5RTIOPort();
  *(void *)(swift_initStackObject() + 16) = v9;
  uint64_t v3 = sub_1DC96A710();
  swift_setDeallocating();
  sub_1DC96A770();
  sub_1DC95EA78();
  type metadata accessor for E5RTTensorDescriptor();
  *(void *)(swift_initStackObject() + 16) = v3;
  uint64_t v11 = sub_1DC96A47C(v64[2], v64[3], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(swift_initStackObject() + 16) = v11;
  v65[0] = v64[4];
  sub_1DC8CBD50((uint64_t)v65);
  uint64_t v12 = sub_1DC96A710();
  swift_setDeallocating();
  sub_1DC96A770();
  sub_1DC95EA78();
  *(void *)(swift_initStackObject() + 16) = v12;
  uint64_t v13 = sub_1DC96A988();
  type metadata accessor for E5RTTensorDescriptorDataType();
  *(void *)(swift_initStackObject() + 16) = v13;
  char v14 = sub_1DC9684F4();
  if (v14 != 1 || sub_1DC96AC2C() != 4)
  {
    sub_1DC95E67C();
    sub_1DC883884();
    *uint64_t v18 = 0;
    swift_willThrow();
LABEL_13:
    swift_setDeallocating();
    sub_1DC96ACD0();
    sub_1DC95EA78();
    goto LABEL_14;
  }
  uint64_t v15 = sub_1DC96A988();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v15;
  v65[12] = inited;
  if (sub_1DC9684F4() != 1 || sub_1DC96AC2C() != 4)
  {
    sub_1DC95E67C();
    sub_1DC883884();
    char v20 = 1;
LABEL_16:
    *uint64_t v19 = v20;
    swift_willThrow();
    swift_setDeallocating();
    sub_1DC96ACD0();
    sub_1DC95EA78();
    goto LABEL_13;
  }
  if (qword_1EAA9D240 != -1) {
    swift_once();
  }
  if (byte_1EAAFF9B8)
  {
    id v17 = (id)xmmword_1EAAFF990;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    swift_release();
    swift_release();
LABEL_14:
    swift_setDeallocating();
    sub_1DC96AAA0();
    sub_1DC95EA78();
    swift_setDeallocating();
    sub_1DC96AAA0();
    sub_1DC95EA78();
    return v3;
  }
  uint64_t v59 = sub_1DCA176EC(*(void *)(qword_1EAAFF9B0 + 16), *(void *)(qword_1EAAFF9A0 + 16), *(void *)(qword_1EAAFF9A8 + 16));
  uint64_t v21 = sub_1DC96A8CC();
  uint64_t v23 = sub_1DCB0F634(v21, v22);
  uint64_t v55 = sub_1DC95CAC0((uint64_t)v23);
  if ((v24 & 1) != 0
    || (uint64_t v25 = sub_1DC95DDF0(1, (uint64_t)v23),
        uint64_t v3 = sub_1DC95CAE4(v25, v26, v27, v28),
        char v30 = v29,
        swift_retain(),
        swift_unknownObjectRelease(),
        (v30 & 1) != 0))
  {
    swift_release();
LABEL_30:
    sub_1DC95E67C();
    sub_1DC883884();
    char v20 = 2;
    goto LABEL_16;
  }
  uint64_t result = sub_1DC95DDF0(2, (uint64_t)v23);
  unint64_t v34 = (v33 >> 1) - v32;
  if (v33 >> 1 == v32)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  else
  {
    if ((uint64_t)(v33 >> 1) <= v32)
    {
      __break(1u);
      goto LABEL_55;
    }
    uint64_t v62 = (uint64_t *)(v31 + 8 * v32);
    uint64_t v35 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v52 = *v62++;
      uint64_t v57 = v52;
      if (v52 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DC95EA90();
        }
        unint64_t v53 = *(void *)(v35 + 16);
        if (v53 >= *(void *)(v35 + 24) >> 1) {
          sub_1DC897E1C();
        }
        *(void *)(v35 + 16) = v53 + 1;
        *(void *)(v35 + 8 * v53 + 32) = v57;
      }
      --v34;
    }
    while (v34);
  }
  swift_unknownObjectRelease();
  uint64_t v36 = *(void *)(v35 + 16);
  swift_release();
  if (v36) {
    goto LABEL_30;
  }
  if (v55 != v59)
  {
    sub_1DC95E67C();
    sub_1DC883884();
    char v20 = 4;
    goto LABEL_16;
  }
  uint64_t v37 = sub_1DC96A8CC();
  uint64_t v39 = sub_1DCB0F634(v37, v38);
  sub_1DC95CAC0((uint64_t)v39);
  if ((v40 & 1) != 0
    || (uint64_t v41 = sub_1DC95DDF0(1, (uint64_t)v39),
        sub_1DC95CAE4(v41, v42, v43, v44),
        char v61 = v45,
        swift_retain(),
        swift_unknownObjectRelease(),
        (v61 & 1) != 0))
  {
    swift_release();
LABEL_43:
    sub_1DC95E67C();
    sub_1DC883884();
    char v20 = 3;
    goto LABEL_16;
  }
  uint64_t result = sub_1DC95DDF0(2, (uint64_t)v39);
  unint64_t v49 = (v48 >> 1) - v47;
  if (v48 >> 1 == v47)
  {
    uint64_t v50 = MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
  if ((uint64_t)(v48 >> 1) > v47)
  {
    int v63 = (uint64_t *)(v46 + 8 * v47);
    uint64_t v50 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v60 = *v63++;
      if (v60 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DC95EA90();
        }
        unint64_t v54 = *(void *)(v50 + 16);
        unint64_t v56 = v54;
        unint64_t v58 = v54 + 1;
        if (v54 >= *(void *)(v50 + 24) >> 1) {
          sub_1DC897E1C();
        }
        *(void *)(v50 + 16) = v58;
        *(void *)(v50 + 8 * v56 + 32) = v60;
      }
      --v49;
    }
    while (v49);
LABEL_27:
    swift_unknownObjectRelease();
    uint64_t v51 = *(void *)(v50 + 16);
    swift_release();
    if (!v51)
    {
      swift_setDeallocating();
      sub_1DC96ACD0();
      sub_1DC95EA78();
      swift_setDeallocating();
      sub_1DC96ACD0();
      sub_1DC95EA78();
      swift_setDeallocating();
      sub_1DC96AAA0();
      sub_1DC95EA78();
      swift_setDeallocating();
      sub_1DC96AAA0();
      sub_1DC95EA78();
      return v3;
    }
    goto LABEL_43;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1DC95DA80@<X0>(uint64_t *a1@<X8>)
{
  sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
  swift_getWitnessTable();
  sub_1DC88CF34(&qword_1EAA9E850, (uint64_t *)&unk_1EAAA0CB0);
  uint64_t v2 = sub_1DC8F7CB0();
  uint64_t result = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  a1[3] = result;
  a1[4] = (uint64_t)&off_1F37F48B0;
  *a1 = v2;
  return result;
}

uint64_t sub_1DC95DB40@<X0>(uint64_t *a1@<X0>, int64_t a2@<X2>, int64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1DC8F7EB0(*a1, a2, a3);
  if (!v5)
  {
    uint64_t v9 = sub_1DC88BEC8(result, *(void *)(a4 + 16));
    uint64_t result = swift_bridgeObjectRelease();
    *a5 = v9;
  }
  return result;
}

uint64_t sub_1DC95DBB0(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAAA7F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = *a1;
  sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
  sub_1DC88CF34(&qword_1EAA9DAA0, (uint64_t *)&unk_1EAAAA800);
  sub_1DCB87AE8();
  sub_1DC87E988(&qword_1EAA9DF60);
  sub_1DCB87178();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DC95DCFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1DC89822C();
    uint64_t v5 = v11;
    uint64_t v6 = (float *)(v3 + 32);
    unint64_t v7 = *(void *)(v11 + 16);
    do
    {
      float v8 = *v6;
      if (v7 >= *(void *)(v11 + 24) >> 1) {
        sub_1DC89822C();
      }
      *(void *)(v11 + 16) = v7 + 1;
      *(double *)(v11 + 8 * v7 + 32) = v8;
      ++v6;
      ++v7;
      --v4;
    }
    while (v4);
  }
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t result = sub_1DCAA7F14(v9, v5);
  *a2 = result;
  return result;
}

uint64_t sub_1DC95DDF0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1DC95E6CC(v3, -result, 0);
  if (v4) {
    unint64_t v5 = 0;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

_OWORD *sub_1DC95DE60(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v37 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DCB870B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v38 = *(void *)(v12 - 8);
  uint64_t v39 = v12;
  MEMORY[0x1F4188790](v12);
  unint64_t v34 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DC87E988(&qword_1EAA9FFA0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v36 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = a4[1];
  v43[0] = *a4;
  v43[1] = v17;
  long long v18 = a4[3];
  v43[2] = a4[2];
  v43[3] = v18;
  uint64_t v19 = v43;
  uint64_t v20 = sub_1DC9A805C(1, 16000);
  if (!v4)
  {
    uint64_t v32 = v15;
    uint64_t v33 = v14;
    uint64_t v31 = v20;
    uint64_t v44 = sub_1DC9A7A54();
    uint64_t v21 = *MEMORY[0x1E4F1A900];
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
    uint64_t v30 = v8;
    v22(v11, v21, v8);
    uint64_t v23 = v35;
    uint64_t v24 = v37;
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v7, *MEMORY[0x1E4F1A918], v37);
    uint64_t v29 = sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    uint64_t v25 = v34;
    sub_1DCB87478();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
    swift_release();
    sub_1DC87E988(&qword_1EAA9E860);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v26 = v36;
    uint64_t v27 = v39;
    sub_1DCB873D8();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v27);
    uint64_t v19 = (_OWORD *)sub_1DC95CB94(v41, v42, v40);
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  }
  sub_1DC9139C0((uint64_t)a4);
  return v19;
}

_OWORD *sub_1DC95E2EC(_OWORD *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v23 - v11;
  sub_1DC88D0CC((uint64_t)a1);
  sub_1DC9AC2A0(0x2Bu, (uint64_t)v12);
  if (v1)
  {
    sub_1DC9139C0((uint64_t)a1);
    sub_1DC9139C0((uint64_t)a1);
  }
  else
  {
    uint64_t v13 = sub_1DC969B7C();
    type metadata accessor for E5RTExecutionStream();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v13;
    sub_1DCB868C8();
    sub_1DCB869C8();
    uint64_t v14 = v10;
    uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v15(v14, v4);
    uint64_t v16 = sub_1DC969C30();
    uint64_t v17 = v24;
    v23[1] = v15;
    type metadata accessor for E5RTExecutionStreamOperation();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    sub_1DC96BE9C(v18);
    sub_1DC969E30(v18);
    if (qword_1EAA9D208 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_1EAAA3E28;
    sub_1DC88D0CC((uint64_t)a1);
    uint64_t v2 = sub_1DC95DE60(v17, v18, v20, a1);
    uint64_t v21 = sub_1DC95EAB4();
    v22(v21);
    swift_release();
    swift_release();
    sub_1DC9139C0((uint64_t)a1);
    sub_1DC9139C0((uint64_t)a1);
  }
  return v2;
}

uint64_t sub_1DC95E5D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = *a1;
  if (*(void *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1DC9637DC(a2, a3);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v5 + 56) + 8 * v8);
      uint64_t result = swift_bridgeObjectRelease();
      *a4 = v10;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1DC95E67C();
  sub_1DC883884();
  *uint64_t v12 = 7;
  return swift_willThrow();
}

unint64_t sub_1DC95E67C()
{
  unint64_t result = qword_1EAAA17B0;
  if (!qword_1EAAA17B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA17B0);
  }
  return result;
}

uint64_t sub_1DC95E6CC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

void sub_1DC95E718()
{
}

uint64_t sub_1DC95E720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1DCAF2E30(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1DC95E75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA17B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC95E7C4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC95E7FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC95DB40(a1, v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1DC95E81C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DC95E854()
{
}

uint64_t sub_1DC95E85C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC95E894@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC95DCFC(a1, a2);
}

uint64_t getEnumTagSinglePayload for MicroSoundPrintUtils.DomainError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for MicroSoundPrintUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC95E9F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MicroSoundPrintUtils.DomainError()
{
  return &type metadata for MicroSoundPrintUtils.DomainError;
}

unint64_t sub_1DC95EA2C()
{
  unint64_t result = qword_1EAAA1810;
  if (!qword_1EAAA1810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1810);
  }
  return result;
}

uint64_t sub_1DC95EA78()
{
  return swift_deallocClassInstance();
}

void sub_1DC95EA90()
{
  sub_1DC897E1C();
}

uint64_t sub_1DC95EAB4()
{
  return v0;
}

uint64_t sub_1DC95EACC()
{
  swift_bridgeObjectRetain();
  sub_1DC8A7C04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 72);
  v4[2] = *(_OWORD *)(v0 + 56);
  void v4[3] = v2;
  sub_1DC960918((uint64_t)v4);
  sub_1DCAC0A50();
  return sub_1DC960970((uint64_t)v4);
}

uint64_t sub_1DC95EB74(uint64_t a1, uint64_t a2)
{
  if (sub_1DC8DCAE8(*(void **)a1, *(void **)a2))
  {
    BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
    if (v4 || (v5 = sub_1DCB89018(), char v6 = 0, (v5 & 1) != 0))
    {
      long long v7 = *(_OWORD *)(a1 + 40);
      v13[0] = *(_OWORD *)(a1 + 24);
      v13[1] = v7;
      long long v8 = *(_OWORD *)(a1 + 72);
      _OWORD v13[2] = *(_OWORD *)(a1 + 56);
      v13[3] = v8;
      long long v9 = *(_OWORD *)(a2 + 40);
      v12[0] = *(_OWORD *)(a2 + 24);
      v12[1] = v9;
      long long v10 = *(_OWORD *)(a2 + 72);
      _OWORD v12[2] = *(_OWORD *)(a2 + 56);
      v12[3] = v10;
      char v6 = sub_1DCAC0AF0(v13, v12);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1DC95EC20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C6966 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6142726576726573 && a2 == 0xEE00687461506573;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E49726576726573 && a2 == 0xEA00000000006F66)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DC95ED98(char a1)
{
  if (!a1) {
    return 0x73656C6966;
  }
  if (a1 == 1) {
    return 0x6142726576726573;
  }
  return 0x6E49726576726573;
}

uint64_t sub_1DC95EDFC(void *a1)
{
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA1860);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9607D0();
  sub_1DCB892B8();
  sub_1DC87E988(&qword_1EAA9E7F0);
  sub_1DC960868((unint64_t *)&unk_1EAAAB460);
  sub_1DCB88F18();
  if (!v1)
  {
    sub_1DCB88EC8();
    sub_1DC9608CC();
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1DC95EFBC()
{
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DC8A7C04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 72);
  v4[2] = *(_OWORD *)(v0 + 56);
  void v4[3] = v2;
  sub_1DC960918((uint64_t)v4);
  sub_1DCAC0A50();
  sub_1DC960970((uint64_t)v4);
  return sub_1DCB891F8();
}

uint64_t sub_1DC95F074@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA1838);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9607D0();
  sub_1DCB89298();
  if (v2) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  sub_1DC87E988(&qword_1EAA9E7F0);
  sub_1DC960868(&qword_1EAAA1850);
  sub_1DCB88DF8();
  uint64_t v6 = v14;
  LOBYTE(v14) = 1;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DCB88DA8();
  uint64_t v9 = v8;
  uint64_t v13 = v7;
  sub_1DC96081C();
  swift_bridgeObjectRetain();
  sub_1DCB88DF8();
  uint64_t v10 = sub_1DC960E94();
  v11(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1DC8818D0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  a2[1] = v13;
  a2[2] = v9;
  a2[3] = v14;
  a2[4] = v15;
  a2[5] = v16;
  a2[6] = v17;
  a2[7] = v18;
  a2[8] = v19;
  a2[9] = v20;
  a2[10] = v21;
  return result;
}

uint64_t sub_1DC95F370()
{
  return sub_1DC95ED98(*v0);
}

uint64_t sub_1DC95F378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC95EC20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC95F3A0(uint64_t a1)
{
  unint64_t v2 = sub_1DC9607D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC95F3DC(uint64_t a1)
{
  unint64_t v2 = sub_1DC9607D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1DC95F418@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1DC95F074(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x58uLL);
  }
  return result;
}

uint64_t sub_1DC95F464(void *a1)
{
  return sub_1DC95EDFC(a1);
}

uint64_t sub_1DC95F484()
{
  long long v1 = *(_OWORD *)(v0 + 40);
  v4[0] = *(_OWORD *)(v0 + 24);
  v4[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 72);
  v4[2] = *(_OWORD *)(v0 + 56);
  void v4[3] = v2;
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DC8A7C04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  sub_1DC960918((uint64_t)v4);
  sub_1DCAC0A50();
  sub_1DC960970((uint64_t)v4);
  return sub_1DCB891F8();
}

id sub_1DC95F53C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5 = *(void *)&a4[OBJC_IVAR___SNFileServerInfo_impl];
  uint64_t v6 = *(void *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 8];
  uint64_t v7 = *(void *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 16];
  uint64_t v8 = *(void *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 24];
  uint64_t v9 = *(void *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 32];
  uint64_t v10 = *(void *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 40];
  uint64_t v11 = *(void *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 48];
  uint64_t v12 = *(void *)&a4[OBJC_IVAR___SNFileServerInfo_impl + 56];
  uint64_t v13 = (objc_class *)type metadata accessor for SNDeleteFilesRequest();
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[OBJC_IVAR___SNDeleteFilesRequest_impl];
  *(void *)uint64_t v15 = a1;
  *((void *)v15 + 1) = a2;
  *((void *)v15 + 2) = a3;
  *((void *)v15 + 3) = v5;
  *((void *)v15 + 4) = v6;
  *((void *)v15 + 5) = v7;
  *((void *)v15 + 6) = v8;
  *((void *)v15 + 7) = v9;
  *((void *)v15 + 8) = v10;
  *((void *)v15 + 9) = v11;
  *((void *)v15 + 10) = v12;
  v21.uint64_t receiver = v14;
  v21.Class super_class = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = objc_msgSendSuper2(&v21, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v16;
}

uint64_t (*sub_1DC95F6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1DC89D988();
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F946E0]), sel_init);
  objc_msgSend(v11, sel_setDispatchQueue_, a1);
  uint64_t v12 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v6, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = 0;
  v13[3] = 0;
  _OWORD v13[4] = v5;
  id v13[5] = v11;
  void v13[6] = a4;
  v13[7] = a5;
  id v14 = v5;
  id v15 = v11;
  swift_retain();
  uint64_t v16 = sub_1DCB294C4(v6, (uint64_t)&unk_1EAAA1888, (uint64_t)v13);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  *(void *)(v17 + 24) = v16;
  return sub_1DC960BF8;
}

uint64_t sub_1DC95F80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[45] = a6;
  v7[46] = a7;
  v7[43] = a4;
  v7[44] = a5;
  return MEMORY[0x1F4188298](sub_1DC95F830, 0, 0);
}

uint64_t sub_1DC95F830()
{
  long long v1 = (void *)(v0[43] + OBJC_IVAR___SNDeleteFilesRequest_impl);
  long long v2 = (void *)*v1;
  v0[47] = *v1;
  uint64_t v3 = v2[2];
  v0[48] = v3;
  if (v3)
  {
    uint64_t v4 = v1[1];
    v0[49] = v4;
    uint64_t v5 = v1[2];
    v0[50] = v5;
    v0[51] = type metadata accessor for SNFileSharingUtils();
    v0[52] = v1[3];
    v0[53] = v1[4];
    v0[55] = 0;
    uint64_t v6 = v2[4];
    v0[56] = v6;
    uint64_t v7 = v2[5];
    v0[57] = v7;
    swift_bridgeObjectRetain();
    sub_1DC87E988(&qword_1EAA9DC78);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DCBBCDA0;
    *(void *)(inited + 32) = 0x6874615065736162;
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 48) = v4;
    *(void *)(inited + 56) = v5;
    *(void *)(inited + 64) = 0x68746150656C6966;
    *(void *)(inited + 72) = 0xE900000000000073;
    *(void *)(inited + 80) = v6;
    *(void *)(inited + 88) = v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1DCB877D8();
    sub_1DC961B38();
    sub_1DC960EAC(v9);
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[59] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1DC95FBB0;
    sub_1DC960EC8();
    unint64_t v11 = sub_1DC960E4C();
    return sub_1DC914EA0(v11, v12, v13, v14, v15, v16);
  }
  else
  {
    uint64_t v18 = (void *)v0[44];
    v0[2] = v0;
    v0[3] = sub_1DC95FAC8;
    uint64_t v19 = swift_continuation_init();
    v0[22] = MEMORY[0x1E4F143A8];
    v0[23] = 0x40000000;
    v0[24] = sub_1DCB29604;
    v0[25] = &unk_1E6CA71C0;
    v0[26] = v19;
    objc_msgSend(v18, sel_activateWithCompletion_, v0 + 22);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
}

uint64_t sub_1DC95FAC8()
{
  sub_1DC886774();
  sub_1DC88679C();
  *long long v2 = v1;
  *long long v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 432) = v4;
  if (v4) {
    uint64_t v5 = sub_1DC960204;
  }
  else {
    uint64_t v5 = sub_1DC8D7658;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DC95FBB0()
{
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 480) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = sub_1DC95FF34;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1DC95FCCC;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1DC95FCCC()
{
  id receiver = v0[28].receiver;
  Class super_class = v0[28].super_class;
  uint64_t v3 = (void (*)(Class *))v0[22].super_class;
  uint64_t v4 = (objc_class *)type metadata accessor for SNFileDeletionResult();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = &v5[OBJC_IVAR___SNFileDeletionResult_impl];
  *(void *)uint64_t v6 = receiver;
  *((void *)v6 + 1) = super_class;
  *((void *)v6 + 2) = 0;
  *((void *)v6 + 3) = 0;
  v0[20].id receiver = v5;
  v0[20].Class super_class = v4;
  uint64_t v7 = (objc_class *)objc_msgSendSuper2(v0 + 20, sel_init);
  v0[15].Class super_class = v7;
  v0[17].id receiver = v4;
  uint64_t v8 = v7;
  v3(&v0[15].super_class);

  sub_1DC8818D0((uint64_t)&v0[15].super_class);
  uint64_t v9 = (uint64_t)v0[27].super_class + 1;
  if ((id)v9 == v0[24].receiver)
  {
    swift_bridgeObjectRelease();
    id v10 = v0[22].receiver;
    v0[1].id receiver = v0;
    v0[1].Class super_class = (Class)sub_1DC95FAC8;
    uint64_t v11 = swift_continuation_init();
    v0[11].id receiver = (id)MEMORY[0x1E4F143A8];
    v0[11].Class super_class = (Class)0x40000000;
    v0[12].id receiver = sub_1DCB29604;
    v0[12].Class super_class = (Class)&unk_1E6CA71C0;
    v0[13].id receiver = (id)v11;
    objc_msgSend(v10, sel_activateWithCompletion_, &v0[11]);
    return MEMORY[0x1F41881E8](&v0[1]);
  }
  else
  {
    sub_1DC960E68(v9);
    sub_1DC87E988(&qword_1EAA9DC78);
    uint64_t inited = (__n128 *)swift_initStackObject();
    sub_1DC960DF4(inited, (__n128)xmmword_1DCBBCDA0);
    swift_bridgeObjectRetain();
    sub_1DCB877D8();
    sub_1DC961B38();
    sub_1DC960EAC(v13);
    swift_bridgeObjectRetain();
    uint64_t v14 = (objc_class *)swift_task_alloc();
    v0[29].Class super_class = v14;
    *(void *)uint64_t v14 = v0;
    *((void *)v14 + 1) = sub_1DC95FBB0;
    sub_1DC960EC8();
    unint64_t v15 = sub_1DC960E4C();
    return sub_1DC914EA0(v15, v16, v17, v18, v19, v20);
  }
}

uint64_t sub_1DC95FF34()
{
  id receiver = v0[30].receiver;
  Class super_class = v0[28].super_class;
  id v3 = v0[28].receiver;
  uint64_t v4 = (void (*)(Class *))v0[22].super_class;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  uint64_t v5 = sub_1DCB89118();
  uint64_t v7 = v6;
  uint64_t v8 = (objc_class *)type metadata accessor for SNFileDeletionResult();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  id v10 = &v9[OBJC_IVAR___SNFileDeletionResult_impl];
  *(void *)id v10 = v3;
  *((void *)v10 + 1) = super_class;
  *((void *)v10 + 2) = v5;
  *((void *)v10 + 3) = v7;
  v0[19].id receiver = v9;
  v0[19].Class super_class = v8;
  uint64_t v11 = (objc_class *)objc_msgSendSuper2(v0 + 19, sel_init);
  v0[13].Class super_class = v11;
  v0[15].id receiver = v8;
  uint64_t v12 = v11;
  v4(&v0[13].super_class);

  sub_1DC8818D0((uint64_t)&v0[13].super_class);
  uint64_t v13 = (uint64_t)v0[27].super_class + 1;
  if ((id)v13 == v0[24].receiver)
  {
    swift_bridgeObjectRelease();
    id v14 = v0[22].receiver;
    v0[1].id receiver = v0;
    v0[1].Class super_class = (Class)sub_1DC95FAC8;
    uint64_t v15 = swift_continuation_init();
    v0[11].id receiver = (id)MEMORY[0x1E4F143A8];
    v0[11].Class super_class = (Class)0x40000000;
    v0[12].id receiver = sub_1DCB29604;
    v0[12].Class super_class = (Class)&unk_1E6CA71C0;
    v0[13].id receiver = (id)v15;
    objc_msgSend(v14, sel_activateWithCompletion_, &v0[11]);
    return MEMORY[0x1F41881E8](&v0[1]);
  }
  else
  {
    sub_1DC960E68(v13);
    sub_1DC87E988(&qword_1EAA9DC78);
    uint64_t inited = (__n128 *)swift_initStackObject();
    sub_1DC960DF4(inited, (__n128)xmmword_1DCBBCDA0);
    swift_bridgeObjectRetain();
    sub_1DCB877D8();
    sub_1DC961B38();
    sub_1DC960EAC(v17);
    swift_bridgeObjectRetain();
    uint64_t v18 = (objc_class *)swift_task_alloc();
    v0[29].Class super_class = v18;
    *(void *)uint64_t v18 = v0;
    *((void *)v18 + 1) = sub_1DC95FBB0;
    sub_1DC960EC8();
    unint64_t v19 = sub_1DC960E4C();
    return sub_1DC914EA0(v19, v20, v21, v22, v23, v24);
  }
}

uint64_t sub_1DC960204()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DC960270(void *a1)
{
  objc_msgSend(a1, sel_invalidate);
  sub_1DC87E988(&qword_1EAA9DF60);

  return sub_1DCB87EE8();
}

id SNDeleteFilesRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNDeleteFilesRequest.init()()
{
}

id SNDeleteFilesRequest.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SNDeleteFilesRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNDeleteFilesRequest()
{
  return self;
}

uint64_t (*sub_1DC960428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  return sub_1DC960BF8;
}

uint64_t method lookup function for SNDeleteFilesRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNDeleteFilesRequest);
}

uint64_t destroy for DeleteFilesRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DeleteFilesRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DeleteFilesRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for DeleteFilesRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

void *assignWithTake for DeleteFilesRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[10];
  a1[9] = a2[9];
  a1[10] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteFilesRequest(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeleteFilesRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteFilesRequest()
{
  return &type metadata for DeleteFilesRequest;
}

unint64_t sub_1DC960784()
{
  unint64_t result = qword_1EAAA1830;
  if (!qword_1EAAA1830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1830);
  }
  return result;
}

unint64_t sub_1DC9607D0()
{
  unint64_t result = qword_1EAAA1840;
  if (!qword_1EAAA1840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1840);
  }
  return result;
}

unint64_t sub_1DC96081C()
{
  unint64_t result = qword_1EAAA1858;
  if (!qword_1EAAA1858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1858);
  }
  return result;
}

uint64_t sub_1DC960868(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAA9E7F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC9608CC()
{
  unint64_t result = qword_1EAAA1870;
  if (!qword_1EAAA1870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1870);
  }
  return result;
}

uint64_t sub_1DC960918(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC960970(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC9609C8()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC960A18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_1DC960AEC;
  return sub_1DC95F80C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1DC960AEC()
{
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88679C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1DC960BB8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC960BF8()
{
  return sub_1DC960270(*(void **)(v0 + 16));
}

unsigned char *storeEnumTagSinglePayload for DeleteFilesRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC960CCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteFilesRequest.CodingKeys()
{
  return &type metadata for DeleteFilesRequest.CodingKeys;
}

unint64_t sub_1DC960D08()
{
  unint64_t result = qword_1EAAA1890;
  if (!qword_1EAAA1890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1890);
  }
  return result;
}

unint64_t sub_1DC960D58()
{
  unint64_t result = qword_1EAAA1898;
  if (!qword_1EAAA1898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1898);
  }
  return result;
}

unint64_t sub_1DC960DA8()
{
  unint64_t result = qword_1EAAA18A0;
  if (!qword_1EAAA18A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA18A0);
  }
  return result;
}

uint64_t sub_1DC960DF4(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 0x6874615065736162;
  a1[2].n128_u64[1] = 0xE800000000000000;
  a1[3].n128_u64[0] = v4;
  a1[3].n128_u64[1] = v2;
  a1[4].n128_u64[0] = 0x68746150656C6966;
  a1[4].n128_u64[1] = 0xE900000000000073;
  a1[5].n128_u64[0] = v5;
  a1[5].n128_u64[1] = v3;
  return swift_bridgeObjectRetain_n();
}

unint64_t sub_1DC960E4C()
{
  return 0xD000000000000016;
}

void sub_1DC960E68(uint64_t a1@<X8>)
{
  v1[55] = a1;
  uint64_t v2 = v1[47] + 16 * a1;
  v1[56] = *(void *)(v2 + 32);
  v1[57] = *(void *)(v2 + 40);
}

uint64_t sub_1DC960E94()
{
  return v0;
}

uint64_t sub_1DC960EAC(uint64_t a1)
{
  *(void *)(v1 + 464) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC960ED8()
{
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC960F48()
{
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC960FC8()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC961050()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9610E4()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC961128()
{
  return sub_1DCB891F8();
}

double sub_1DC96116C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v5 = sub_1DC9637DC(a1, a2), (v6 & 1) != 0))
  {
    uint64_t v7 = sub_1DC964658(v5);
    sub_1DC87E9DC(v7, v8);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1DC9611C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_1DC9637DC(a1, a2), (v3 & 1) != 0)) {
    swift_bridgeObjectRetain();
  }
  else {
    sub_1DC964778();
  }
  return sub_1DC8CD7C8();
}

double sub_1DC961218@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = sub_1DC9638C0(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = sub_1DC964658(v4);
    sub_1DC87E9DC(v6, v7);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1DC961274(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1DC963954(a1 & 1), (v2 & 1) != 0)) {
    sub_1DC964694();
  }
  else {
    sub_1DC964778();
  }
  return sub_1DC8CD7C8();
}

void *sub_1DC9612B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_1DC9637DC(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void **)(*(void *)(a3 + 56) + 8 * v4);
  id v7 = v6;
  return v6;
}

uint64_t sub_1DC961300(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1DC963998(), (v2 & 1) != 0))
  {
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    sub_1DC964778();
  }
  return sub_1DC8CD7C8();
}

uint64_t sub_1DC961378(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1DC963998(), (v2 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC9613BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 16) && (double result = sub_1DC9639D8(result), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(a2 + 56) + 48 * result;
    uint64_t v8 = *(void *)v6;
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t v9 = *(void *)(v6 + 16);
    uint64_t v10 = *(void *)(v6 + 24);
    uint64_t v11 = *(void **)(v6 + 32);
    int v12 = *(_DWORD *)(v6 + 40);
    double result = (uint64_t)sub_1DC964444(*(id *)v6, v7, v9, v10, v11);
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    int v12 = 0;
    uint64_t v8 = 1;
  }
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = v9;
  *(void *)(a3 + 24) = v10;
  *(void *)(a3 + 32) = v11;
  *(_DWORD *)(a3 + 40) = v12;
  return result;
}

uint64_t sub_1DC961470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_1DC9637DC(a1, a2), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a3 + 56) + 8 * v4);
  }
  else {
    return 0;
  }
}

double sub_1DC9614B8@<D0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v3 = sub_1DC963A9C(), (v4 & 1) != 0))
  {
    uint64_t v5 = sub_1DC964658(v3);
    sub_1DC87E9DC(v5, v6);
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1DC961514(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1DC963A1C(), (v2 & 1) != 0)) {
    sub_1DC964694();
  }
  else {
    sub_1DC964778();
  }
  return sub_1DC8CD7C8();
}

uint64_t sub_1DC961558(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1DC963A1C(), (v2 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC96159C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_1DC9637DC(a1, a2), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a3 + 56) + 16 * v4);
  }
  else {
    return 0;
  }
}

void sub_1DC9615EC()
{
  sub_1DC964678();
  if (v1)
  {
    sub_1DC87E988(&qword_1EAAA18D8);
    unint64_t v3 = (void *)sub_1DC964610();
  }
  else
  {
    unint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v42 = v0 + 64;
  sub_1DC9645E0();
  uint64_t v41 = v4;
  char v5 = &v47;
  uint64_t v6 = &v49;
  swift_bridgeObjectRetain();
  uint64_t v43 = 0;
  uint64_t v7 = (unint64_t *)&qword_1EAAA18E8;
  unint64_t v8 = 0x1E4F1E950uLL;
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        sub_1DC964638();
        uint64_t v44 = v2;
        uint64_t v10 = v9 | (v43 << 6);
      }
      else
      {
        if (__OFADD__(v43, 1)) {
          goto LABEL_34;
        }
        if (v43 + 1 >= v41)
        {
LABEL_31:
          sub_1DC964348();
          return;
        }
        sub_1DC964760();
        if (!v11)
        {
          sub_1DC964754();
          if (v13 == v14) {
            goto LABEL_31;
          }
          if (!*(void *)(v42 + 8 * v12))
          {
            sub_1DC964754();
            if (v13 == v14) {
              goto LABEL_31;
            }
            if (!*(void *)(v42 + 8 * v15))
            {
              sub_1DC964754();
              if (v13 == v14) {
                goto LABEL_31;
              }
              if (!*(void *)(v42 + 8 * v16))
              {
                uint64_t v18 = v17 + 4;
                if (v18 >= v41) {
                  goto LABEL_31;
                }
                if (!*(void *)(v42 + 8 * v18))
                {
                  while (!__OFADD__(v18, 1))
                  {
                    sub_1DC964754();
                    if (v13 == v14) {
                      goto LABEL_31;
                    }
                    sub_1DC96473C();
                    if (v19) {
                      goto LABEL_25;
                    }
                  }
                  goto LABEL_35;
                }
              }
            }
          }
        }
LABEL_25:
        sub_1DC964728();
        uint64_t v43 = v20;
        uint64_t v44 = v21;
        uint64_t v10 = v22 + (v20 << 6);
      }
      uint64_t v23 = (uint64_t *)(*(void *)(v0 + 48) + 16 * v10);
      uint64_t v24 = *(void **)(*(void *)(v0 + 56) + 8 * v10);
      uint64_t v45 = *v23;
      uint64_t v46 = v23[1];
      sub_1DC89C89C(0, v7);
      swift_bridgeObjectRetain();
      id v25 = v24;
      swift_dynamicCast();
      uint64_t v26 = (_OWORD *)sub_1DC9646DC();
      sub_1DC87E9CC(v26, &v48);
      unint64_t v27 = sub_1DC9637DC(v45, v46);
      unint64_t v28 = v27;
      if ((v29 & 1) == 0) {
        break;
      }
      uint64_t v30 = v6;
      uint64_t v31 = v5;
      uint64_t v32 = v0;
      unint64_t v33 = v8;
      unint64_t v34 = v7;
      uint64_t v35 = (uint64_t *)(v3[6] + 16 * v27);
      swift_bridgeObjectRelease();
      *uint64_t v35 = v45;
      v35[1] = v46;
      uint64_t v7 = v34;
      unint64_t v8 = v33;
      uint64_t v0 = v32;
      char v5 = v31;
      uint64_t v6 = v30;
      uint64_t v36 = (_OWORD *)(v3[7] + 32 * v28);
      sub_1DC8818D0((uint64_t)v36);
      sub_1DC87E9CC(&v48, v36);
      uint64_t v2 = v44;
    }
    if (v3[2] >= v3[3]) {
      break;
    }
    sub_1DC964714((v27 >> 3) & 0x1FFFFFFFFFFFFFF8);
    uint64_t v38 = (uint64_t *)(v37 + 16 * v28);
    *uint64_t v38 = v45;
    v38[1] = v46;
    sub_1DC87E9CC(&v48, (_OWORD *)(v3[7] + 32 * v28));
    uint64_t v39 = v3[2];
    BOOL v14 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v14) {
      goto LABEL_33;
    }
    _OWORD v3[2] = v40;
    uint64_t v2 = v44;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1DC9618D8()
{
  sub_1DC964678();
  if (v1)
  {
    sub_1DC87E988(&qword_1EAAA0250);
    uint64_t v2 = (void *)sub_1DC964610();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = -1 << *(unsigned char *)(v0 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        unint64_t v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        unint64_t v8 = v7 | (v6 << 6);
      }
      else
      {
        if (__OFADD__(v6, 1)) {
          goto LABEL_39;
        }
        sub_1DC96476C();
        if (v9 == v10)
        {
LABEL_36:
          sub_1DC964348();
          return;
        }
        sub_1DC964760();
        if (!v11)
        {
          sub_1DC96462C();
          if (v9 == v10) {
            goto LABEL_36;
          }
          sub_1DC96464C();
          if (!v12)
          {
            sub_1DC96462C();
            if (v9 == v10) {
              goto LABEL_36;
            }
            sub_1DC96464C();
            if (!v13)
            {
              sub_1DC96462C();
              if (v9 == v10) {
                goto LABEL_36;
              }
              sub_1DC96464C();
              if (!v14)
              {
                sub_1DC96476C();
                if (v9 == v10) {
                  goto LABEL_36;
                }
                if (!*(void *)(v0 + 64 + 8 * v15))
                {
                  while (!__OFADD__(v15, 1))
                  {
                    sub_1DC96462C();
                    if (v9 == v10) {
                      goto LABEL_36;
                    }
                    sub_1DC96473C();
                    if (v16) {
                      goto LABEL_30;
                    }
                  }
                  goto LABEL_40;
                }
              }
            }
          }
        }
LABEL_30:
        sub_1DC964684();
        unint64_t v5 = v18 & v17;
        unint64_t v8 = v20 + (v19 << 6);
        uint64_t v6 = v19;
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v0 + 48) + 16 * v8);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1DCB87F98();
      unint64_t v25 = sub_1DC9637DC(v23, v22);
      unint64_t v26 = v25;
      if ((v27 & 1) == 0) {
        break;
      }
      unint64_t v28 = (uint64_t *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *unint64_t v28 = v23;
      v28[1] = v22;
      uint64_t v29 = v2[7];

      *(void *)(v29 + 8 * v26) = v24;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v25;
    uint64_t v30 = (uint64_t *)(v2[6] + 16 * v25);
    *uint64_t v30 = v23;
    v30[1] = v22;
    *(void *)(v2[7] + 8 * v25) = v24;
    uint64_t v31 = v2[2];
    BOOL v10 = __OFADD__(v31, 1);
    uint64_t v32 = v31 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v2[2] = v32;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_1DC961B38()
{
  sub_1DC964678();
  if (v1)
  {
    sub_1DC87E988(&qword_1EAAA18C8);
    uint64_t v2 = sub_1DC964610();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v30 = v0 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v0 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  uint64_t v5 = v4 & *(void *)(v0 + 64);
  int64_t v29 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  v5 &= v5 - 1;
  while (1)
  {
    uint64_t v20 = sub_1DC964668();
    *(void *)&v39[0] = v21;
    *((void *)&v39[0] + 1) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v35 = v31;
    long long v36 = v32;
    uint64_t v37 = v33;
    sub_1DC87E9CC(&v34, v38);
    long long v31 = v35;
    long long v32 = v36;
    uint64_t v33 = v37;
    sub_1DC87E9CC(v38, v39);
    sub_1DC87E9CC(v39, &v35);
    unint64_t v22 = sub_1DCB88A08() & ~(-1 << *(unsigned char *)(v2 + 32));
    if (((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6))) == 0)
    {
      sub_1DC9646B4();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        BOOL v27 = v25 == v26;
        if (v25 == v26) {
          uint64_t v25 = 0;
        }
        v24 |= v27;
        if (*(void *)(v6 + 8 * v25) != -1)
        {
          sub_1DC964784();
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    sub_1DC9646C8();
LABEL_37:
    *(void *)(v6 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = *(void *)(v2 + 48) + 40 * v23;
    *(_OWORD *)uint64_t v28 = v31;
    *(_OWORD *)(v28 + 16) = v32;
    *(void *)(v28 + 32) = v33;
    sub_1DC87E9CC(&v35, (_OWORD *)(*(void *)(v2 + 56) + 32 * v23));
    ++*(void *)(v2 + 16);
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    if (__OFADD__(v7, 1)) {
      goto LABEL_41;
    }
    if (v7 + 1 >= v29) {
      goto LABEL_39;
    }
    sub_1DC964760();
    if (!v8)
    {
      sub_1DC964748();
      if (v10 == v11) {
        goto LABEL_39;
      }
      if (!*(void *)(v30 + 8 * v9))
      {
        sub_1DC964748();
        if (v10 == v11) {
          goto LABEL_39;
        }
        if (!*(void *)(v30 + 8 * v12))
        {
          sub_1DC964748();
          if (v10 == v11) {
            goto LABEL_39;
          }
          if (!*(void *)(v30 + 8 * v13))
          {
            int64_t v15 = v14 + 4;
            if (v15 >= v29)
            {
LABEL_39:
              swift_release();
              sub_1DC964348();
              return;
            }
            if (!*(void *)(v30 + 8 * v15)) {
              break;
            }
          }
        }
      }
    }
LABEL_27:
    sub_1DC964684();
    uint64_t v5 = v18 & v17;
    uint64_t v7 = v19;
  }
  while (!__OFADD__(v15, 1))
  {
    sub_1DC964748();
    if (v10 == v11) {
      goto LABEL_39;
    }
    sub_1DC96473C();
    if (v16) {
      goto LABEL_27;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1DC961E94(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1DC87E988(&qword_1EAAA18C8);
    uint64_t v2 = sub_1DCB88CF8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    int64_t v15 = (void *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = v15[1];
    uint64_t v17 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v37[0] = *v15;
    *((void *)&v37[0] + 1) = v16;
    swift_bridgeObjectRetain();
    v17;
    swift_dynamicCast();
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    swift_dynamicCast();
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1DC87E9CC(&v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1DC87E9CC(v36, v37);
    sub_1DC87E9CC(v37, &v33);
    uint64_t result = sub_1DCB88A08();
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v6 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v6 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v6 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = *(void *)(v2 + 48) + 40 * v21;
    *(_OWORD *)uint64_t v26 = v29;
    *(_OWORD *)(v26 + 16) = v30;
    *(void *)(v26 + 32) = v31;
    uint64_t result = (uint64_t)sub_1DC87E9CC(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v21));
    ++*(void *)(v2 + 16);
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_38;
    }
    if (v11 >= v27) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v11);
    int64_t v13 = v8 + 1;
    if (!v12)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_36;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_36;
          }
          unint64_t v12 = *(void *)(v28 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v8 = v13;
  }
  int64_t v14 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_36:
    swift_release();
    sub_1DC964348();
    return v2;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1DC962254()
{
  sub_1DC964678();
  if (v1)
  {
    sub_1DC87E988(&qword_1EAAA18F0);
    uint64_t v2 = sub_1DC964610();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = v0 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v0 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  uint64_t v6 = v5 & *(void *)(v0 + 64);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t v8 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = 0;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_8:
  sub_1DC964638();
  while (1)
  {
    sub_1DC964668();
    uint64_t v18 = *(void **)(v17 + 8 * v16);
    swift_bridgeObjectRetain();
    id v19 = v18;
    swift_dynamicCast();
    unint64_t v20 = sub_1DCB88A08() & ~(-1 << *(unsigned char *)(v2 + 32));
    if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      sub_1DC9646B4();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        BOOL v25 = v23 == v24;
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        v22 |= v25;
        if (*(void *)(v8 + 8 * v23) != -1)
        {
          sub_1DC964784();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    sub_1DC9646C8();
LABEL_33:
    *(void *)(v8 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = *(void *)(v2 + 48) + 40 * v21;
    *(_OWORD *)uint64_t v26 = v27;
    *(_OWORD *)(v26 + 16) = v28;
    *(void *)(v26 + 32) = v29;
    *(void *)(*(void *)(v2 + 56) + 8 * v21) = v19;
    ++*(void *)(v2 + 16);
    if (v6) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_37;
    }
    if (v10 >= v7) {
      goto LABEL_35;
    }
    if (!*(void *)(v3 + 8 * v10))
    {
      if (v9 + 2 >= v7) {
        goto LABEL_35;
      }
      if (!*(void *)(v3 + 8 * (v9 + 2)))
      {
        if (v9 + 3 >= v7) {
          goto LABEL_35;
        }
        if (!*(void *)(v3 + 8 * (v9 + 3)))
        {
          if (v9 + 4 >= v7) {
            goto LABEL_35;
          }
          if (!*(void *)(v3 + 8 * (v9 + 4)))
          {
            uint64_t v11 = v9 + 5;
            if (v9 + 5 >= v7)
            {
LABEL_35:
              swift_release();
              sub_1DC964348();
              return;
            }
            if (!*(void *)(v3 + 8 * v11)) {
              break;
            }
          }
        }
      }
    }
LABEL_23:
    sub_1DC964684();
    uint64_t v6 = v14 & v13;
    uint64_t v9 = v15;
  }
  while (1)
  {
    int64_t v12 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v12 >= v7) {
      goto LABEL_35;
    }
    ++v11;
    if (*(void *)(v3 + 8 * v12)) {
      goto LABEL_23;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1DC96250C()
{
  sub_1DC964678();
  if (v1)
  {
    sub_1DC87E988(&qword_1EAAA18D8);
    uint64_t v3 = (void *)sub_1DC964610();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v36 = v0 + 64;
  sub_1DC9645E0();
  uint64_t v4 = &v41;
  uint64_t v5 = &v43;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = (uint64_t *)&unk_1EAA9C6E0;
  uint64_t v8 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        sub_1DC964638();
        uint64_t v38 = v2;
      }
      else
      {
        if (__OFADD__(v6, 1)) {
          goto LABEL_36;
        }
        sub_1DC96476C();
        if (v9 == v10)
        {
LABEL_33:
          sub_1DC964348();
          return;
        }
        sub_1DC964760();
        if (!v11)
        {
          sub_1DC96462C();
          if (v9 == v10) {
            goto LABEL_33;
          }
          sub_1DC96464C();
          if (!v12)
          {
            sub_1DC96462C();
            if (v9 == v10) {
              goto LABEL_33;
            }
            sub_1DC96464C();
            if (!v13)
            {
              sub_1DC96462C();
              if (v9 == v10) {
                goto LABEL_33;
              }
              sub_1DC96464C();
              if (!v14)
              {
                sub_1DC96476C();
                if (v9 == v10) {
                  goto LABEL_33;
                }
                if (!*(void *)(v36 + 8 * v15))
                {
                  while (!__OFADD__(v15, 1))
                  {
                    sub_1DC96462C();
                    if (v9 == v10) {
                      goto LABEL_33;
                    }
                    sub_1DC96473C();
                    if (v16) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1DC964728();
        uint64_t v38 = v17;
        uint64_t v6 = v18;
      }
      uint64_t v19 = sub_1DC964668();
      uint64_t v39 = v20;
      uint64_t v40 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC87E988(v7);
      swift_dynamicCast();
      unint64_t v21 = (_OWORD *)sub_1DC9646DC();
      sub_1DC87E9CC(v21, &v42);
      unint64_t v22 = sub_1DC9637DC(v39, v40);
      unint64_t v23 = v22;
      if ((v24 & 1) == 0) {
        break;
      }
      uint64_t v37 = v6;
      BOOL v25 = v5;
      uint64_t v26 = v4;
      uint64_t v27 = v0;
      uint64_t v28 = v8;
      uint64_t v29 = v7;
      long long v30 = (uint64_t *)(v3[6] + 16 * v22);
      swift_bridgeObjectRelease();
      *long long v30 = v39;
      v30[1] = v40;
      int64_t v7 = v29;
      uint64_t v8 = v28;
      uint64_t v0 = v27;
      uint64_t v4 = v26;
      uint64_t v5 = v25;
      uint64_t v6 = v37;
      uint64_t v31 = (_OWORD *)(v3[7] + 32 * v23);
      sub_1DC8818D0((uint64_t)v31);
      sub_1DC87E9CC(&v42, v31);
      uint64_t v2 = v38;
    }
    if (v3[2] >= v3[3]) {
      break;
    }
    sub_1DC964714((v22 >> 3) & 0x1FFFFFFFFFFFFFF8);
    long long v33 = (uint64_t *)(v32 + 16 * v23);
    *long long v33 = v39;
    v33[1] = v40;
    sub_1DC87E9CC(&v42, (_OWORD *)(v3[7] + 32 * v23));
    uint64_t v34 = v3[2];
    BOOL v10 = __OFADD__(v34, 1);
    uint64_t v35 = v34 + 1;
    if (v10) {
      goto LABEL_35;
    }
    _OWORD v3[2] = v35;
    uint64_t v2 = v38;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

id sub_1DC9627C8()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA8AF0]), sel_init);
  qword_1EAAFF8B0 = (uint64_t)result;
  return result;
}

uint64_t sub_1DC9627FC(uint64_t a1)
{
  if (qword_1EAA9D1D0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EAAFF8B0;
  uint64_t v3 = (void *)sub_1DCB87908();
  uint64_t v4 = (void *)sub_1DCB87908();
  uint64_t v5 = (void *)sub_1DCB87908();
  uint64_t v6 = (void *)sub_1DCB87908();
  int64_t v7 = (void *)sub_1DCB87908();
  sub_1DC964350(a1 + 80, (uint64_t)v12);
  sub_1DC964350((uint64_t)v12, (uint64_t)v13);
  if (v13[1]) {
    uint64_t v8 = (void *)sub_1DCB87908();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v2, sel_signatureWithDomain_type_subType_subtypeContext_detectedProcess_triggerThresholdValues_, v3, v4, v5, v6, v7, v8);

  if (v9)
  {
    v9;
    uint64_t result = sub_1DCB87798();
    __break(1u);
  }
  else
  {
    sub_1DC9643B8();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_1DC9629B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    uint64_t v3 = sub_1DCB88678();
  }
  else
  {
    uint64_t v3 = sub_1DCB87F98();
  }
  uint64_t v4 = (void *)v3;
  sub_1DC87E988(&qword_1EAAA18C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBC1910;
  *(void *)(inited + 32) = sub_1DCB87938();
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = sub_1DCB87DD8();
  *(void *)(inited + 56) = sub_1DCB87938();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = sub_1DCB87DD8();
  *(void *)(inited + 80) = sub_1DCB87938();
  *(void *)(inited + 88) = v8;
  *(void *)(inited + 96) = sub_1DCB87DD8();
  *(void *)(inited + 104) = sub_1DCB87938();
  *(void *)(inited + 112) = v9;
  *(void *)(inited + 120) = sub_1DCB87DD8();
  *(void *)(inited + 128) = sub_1DCB87938();
  *(void *)(inited + 136) = v10;
  *(void *)(inited + 144) = v4;
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  id v11 = v4;
  uint64_t v12 = sub_1DCB877D8();
  uint64_t v13 = sub_1DC961E94(v12);
  swift_bridgeObjectRelease();

  return v13;
}

void sub_1DC962B4C(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, double a7)
{
  if (qword_1EAA9CB50 != -1) {
    swift_once();
  }
  if (byte_1EAAFF828 == 1)
  {
    sub_1DC9627FC(a1);
    if (!v7)
    {
      sub_1DC9629B4(a2 & 0x1010101, a3, a4 & 1);
      if (qword_1EAA9D1D0 != -1) {
        swift_once();
      }
      id v20 = (id)qword_1EAAFF8B0;
      uint64_t v15 = (void *)sub_1DCB87788();
      swift_bridgeObjectRelease();
      uint64_t v16 = (void *)sub_1DCB87788();
      swift_bridgeObjectRelease();
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = a5;
      *(void *)(v17 + 24) = a6;
      aBlock[4] = sub_1DC963744;
      aBlock[5] = v17;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DC96325C;
      aBlock[3] = &unk_1F37FA9B8;
      uint64_t v18 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      unsigned __int8 v19 = objc_msgSend(v20, sel_snapshotWithSignature_delay_events_payload_actions_reply_, v15, 0, 0, v16, v18, a7);
      _Block_release(v18);

      if ((v19 & 1) == 0)
      {
        type metadata accessor for SNError();
        sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB91E10);
        swift_willThrow();
      }
    }
  }
}

void sub_1DC962DE8(uint64_t a1, void (*a2)(id))
{
  if (!a1) {
    goto LABEL_10;
  }
  id v22 = (id)sub_1DCB87938();
  unint64_t v23 = v4;
  sub_1DCB88A38();
  sub_1DC9614B8(a1, &v26);
  sub_1DC8A8EA0((uint64_t)&v24);
  if (!v27)
  {
    sub_1DC881978((uint64_t)&v26);
    goto LABEL_10;
  }
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    a2(0);
    return;
  }
  a2(objc_msgSend(v22, sel_BOOLValue));
  if ((objc_msgSend(v22, sel_BOOLValue) & 1) == 0)
  {
    *(void *)&long long v26 = sub_1DCB87938();
    *((void *)&v26 + 1) = v5;
    sub_1DCB88A38();
    sub_1DC9614B8(a1, &v26);
    sub_1DC8A8EA0((uint64_t)&v24);
    if (v27)
    {
      if (swift_dynamicCast()) {
        uint64_t v6 = v22;
      }
      else {
        uint64_t v6 = 0;
      }
    }
    else
    {
      sub_1DC881978((uint64_t)&v26);
      uint64_t v6 = 0;
    }
    *(void *)&long long v26 = sub_1DCB87938();
    *((void *)&v26 + 1) = v7;
    sub_1DCB88A38();
    sub_1DC9614B8(a1, &v26);
    sub_1DC8A8EA0((uint64_t)&v24);
    if (v27)
    {
      int v8 = swift_dynamicCast();
      if (v8) {
        uint64_t v9 = (uint64_t)v22;
      }
      else {
        uint64_t v9 = 0;
      }
      if (v8) {
        unint64_t v10 = v23;
      }
      else {
        unint64_t v10 = 0;
      }
    }
    else
    {
      sub_1DC881978((uint64_t)&v26);
      uint64_t v9 = 0;
      unint64_t v10 = 0;
    }
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1DCB86FE8();
    sub_1DC89F57C(v11, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain();
    id v12 = v6;
    uint64_t v13 = sub_1DCB86FC8();
    os_log_type_t v14 = sub_1DCB88488();
    if (!os_log_type_enabled(v13, v14))
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(void *)&long long v26 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v21 = v16;
    if (v6) {
      id v17 = objc_msgSend(v12, sel_integerValue);
    }
    else {
      id v17 = 0;
    }
    uint64_t v24 = (uint64_t)v17;
    BOOL v25 = v6 == 0;
    sub_1DC87E988(&qword_1EAAA18B8);
    uint64_t v18 = sub_1DCB87988();
    uint64_t v24 = sub_1DC9F8920(v18, v19, (uint64_t *)&v26);
    sub_1DCB88778();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    if (v10)
    {
      unint64_t v20 = v10;
    }
    else
    {
      uint64_t v9 = 0x6E776F6E6B6E753CLL;
      unint64_t v20 = 0xE90000000000003ELL;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1DC9F8920(v9, v20, (uint64_t *)&v26);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v13, v14, "Snapshot rejected; reason: %s, %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v21, -1, -1);
    MEMORY[0x1E01A99C0](v15, -1, -1);
  }
}

uint64_t sub_1DC96325C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = sub_1DCB877B8();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9632EC(uint64_t a1, int a2, uint64_t a3, char a4, double a5)
{
  *(unsigned char *)(v5 + 108) = a4;
  *(void *)(v5 + 96) = a3;
  *(_DWORD *)(v5 + 104) = a2;
  *(double *)(v5 + 88) = a5;
  *(void *)(v5 + 80) = a1;
  return MEMORY[0x1F4188298](sub_1DC96331C, 0, 0);
}

void sub_1DC96331C()
{
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1DC9633EC;
  swift_continuation_init();
  sub_1DC9634F4();
}

uint64_t sub_1DC9633EC()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

void sub_1DC9634F4()
{
}

uint64_t sub_1DC963678()
{
  uint64_t result = sub_1DC9CC34C(0, 1);
  if (result)
  {
    return swift_continuation_throwingResume();
  }
  return result;
}

uint64_t sub_1DC9636CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC963704()
{
  return sub_1DC963678();
}

uint64_t sub_1DC96370C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DC963744(uint64_t a1)
{
  sub_1DC962DE8(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1DC96374C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC96375C()
{
  return swift_release();
}

uint64_t sub_1DC963768()
{
  sub_1DCB87938();
  sub_1DCB891A8();
  sub_1DCB879B8();
  uint64_t v0 = sub_1DCB891F8();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1DC9637DC(uint64_t a1, uint64_t a2)
{
  sub_1DCB891A8();
  sub_1DCB879B8();
  uint64_t v4 = sub_1DCB891F8();

  return sub_1DC963ADC(a1, a2, v4);
}

unint64_t sub_1DC963858(unsigned __int8 a1)
{
  sub_1DCB891A8();
  sub_1DCB891B8();
  uint64_t v2 = sub_1DCB891F8();
  return sub_1DC963BC0(a1, v2);
}

unint64_t sub_1DC9638C0(uint64_t a1)
{
  sub_1DCB87938();
  sub_1DCB891A8();
  sub_1DCB879B8();
  uint64_t v2 = sub_1DCB891F8();
  swift_bridgeObjectRelease();

  return sub_1DC963C60(a1, v2);
}

unint64_t sub_1DC963954(char a1)
{
  char v1 = a1 & 1;
  uint64_t v2 = sub_1DC960FC8();

  return sub_1DC963DD8(v1, v2);
}

unint64_t sub_1DC963998()
{
  sub_1DCB88698();
  uint64_t v0 = sub_1DC964708();

  return sub_1DC963F1C(v0, v1);
}

unint64_t sub_1DC9639D8(uint64_t a1)
{
  uint64_t v2 = sub_1DCB89198();

  return sub_1DC964038(a1, v2);
}

unint64_t sub_1DC963A1C()
{
  sub_1DCB86BF8();
  sub_1DC964404((unint64_t *)&qword_1EAA9E778);
  sub_1DCB87808();
  uint64_t v0 = sub_1DC964708();

  return sub_1DC9640D4(v0, v1);
}

unint64_t sub_1DC963A9C()
{
  sub_1DCB88A08();
  uint64_t v0 = sub_1DC964708();

  return sub_1DC964280(v0, v1);
}

unint64_t sub_1DC963ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DCB89018() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DCB89018() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1DC963BC0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DC963C60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1DCB87938();
    uint64_t v8 = v7;
    if (v6 == sub_1DCB87938() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1DCB87938();
          uint64_t v15 = v14;
          if (v13 == sub_1DCB87938() && v15 == v16) {
            break;
          }
          char v18 = sub_1DCB89018();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1DC963DD8(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v12 = ~v3;
    if (a1) {
      unint64_t v5 = 0xD00000000000001BLL;
    }
    else {
      unint64_t v5 = 0xD000000000000016;
    }
    if (a1) {
      unint64_t v6 = 0x80000001DCB8FF60;
    }
    else {
      unint64_t v6 = 0x80000001DCB8FF40;
    }
    while (1)
    {
      unint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xD00000000000001BLL : 0xD000000000000016;
      unint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x80000001DCB8FF60 : 0x80000001DCB8FF40;
      if (v7 == v5 && v8 == v6) {
        break;
      }
      char v10 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v12;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1DC963F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1DCB886A8();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1DCB886A8();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1DC964038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DC9640D4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1DCB86BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1DC964404(&qword_1EAAA18E0);
      char v15 = sub_1DCB878C8();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1DC964280(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1DC8A8E44(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1E01A7A10](v9, a1);
      sub_1DC8A8EA0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1DC964348()
{
  return swift_release();
}

uint64_t sub_1DC964350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA4140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DC9643B8()
{
  unint64_t result = qword_1EAAA18D0;
  if (!qword_1EAAA18D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA18D0);
  }
  return result;
}

uint64_t sub_1DC964404(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DCB86BF8();
    sub_1DC964708();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1DC964444(id result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (result)
  {
    swift_retain();
    return a5;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AutoBugCaptureUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC964554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutoBugCaptureUtils.DomainError()
{
  return &type metadata for AutoBugCaptureUtils.DomainError;
}

unint64_t sub_1DC964590()
{
  unint64_t result = qword_1EAAA18F8[0];
  if (!qword_1EAAA18F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA18F8);
  }
  return result;
}

uint64_t sub_1DC964610()
{
  return sub_1DCB88CF8();
}

uint64_t sub_1DC964658(uint64_t a1)
{
  return *(void *)(v1 + 56) + 32 * a1;
}

uint64_t sub_1DC964668()
{
  return *(void *)(*(void *)(v1 + 48) + 16 * v0 + 8);
}

uint64_t sub_1DC964694()
{
  return swift_retain();
}

uint64_t sub_1DC9646DC()
{
  sub_1DC87E9CC(v0, v1);
  sub_1DC87E9CC(v1, (_OWORD *)(v2 - 120));
  return v2 - 120;
}

uint64_t sub_1DC964708()
{
  return v0;
}

void sub_1DC964714(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1) |= v1;
}

uint64_t sub_1DC964798(int *a1)
{
  unsigned int v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC964874;
  return v4(v1 + 16);
}

uint64_t sub_1DC964874()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *int v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 56) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC964950()
{
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC96496C()
{
  sub_1DC886900();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC964A44;
  return v4(v0 + 16);
}

uint64_t sub_1DC964A44()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *int v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 32) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC964B20()
{
  *(void *)(v1 + 16) = v0;
  *(void *)(v1 + 24) = *v0;
  return sub_1DC8BA8F8((uint64_t)sub_1DC964B60);
}

uint64_t sub_1DC964B60()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v1 = (void *)v0[2];
  if (v1[2])
  {
    v0[4] = v1[5];
    v0[5] = v1[3];
    swift_retain();
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[6] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1DC964C8C;
    sub_1DC8BA86C();
    return sub_1DC9652F8();
  }
  else
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v5 = 0;
    swift_willThrow();
    sub_1DC8BA978();
    sub_1DC8BA86C();
    return v7(v6, v7, v8, v9, v10, v11, v12, v13);
  }
}

uint64_t sub_1DC964C8C()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  void *v8 = v7;
  *(void *)(v5 + 56) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 64) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC964D7C()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 64);
  type metadata accessor for XPCProxyDecoder.UnkeyedContainer();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 0;
  swift_release();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1DC964E10()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC964E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return MEMORY[0x1F4188298](sub_1DC964E98, 0, 0);
}

uint64_t sub_1DC964E98()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  type metadata accessor for XPCProxyDecoder();
  uint64_t inited = (void *)swift_initStackObject();
  sub_1DC9667B8(inited);
  sub_1DC966794();
  swift_retain();
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC964F64;
  sub_1DC8BA86C();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1DC964F64()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  void *v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[14] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[15] = v3;
    v7[16] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DC965058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return sub_1DC8BA8F8((uint64_t)sub_1DC965074);
}

uint64_t sub_1DC965074()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  type metadata accessor for XPCProxyDecoder();
  uint64_t inited = (void *)swift_initStackObject();
  sub_1DC9667B8(inited);
  sub_1DC966794();
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC965138;
  sub_1DC8BA86C();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1DC965138()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  void *v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[14] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[15] = v3;
    v7[16] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DC96522C()
{
  sub_1DC8867A8();
  swift_setDeallocating();
  sub_1DC96677C();
  sub_1DC8F0284();
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  return v1(v2, v3);
}

uint64_t sub_1DC965294()
{
  sub_1DC8867A8();
  swift_setDeallocating();
  sub_1DC96677C();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9652F8()
{
  sub_1DC88688C();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EAAA1998 + dword_1EAAA1998);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC9653B4;
  uint64_t v2 = sub_1DC966768();
  return v4(v2);
}

uint64_t sub_1DC9653B4()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  void *v8 = v7;
  *(void *)(v5 + 56) = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
    return v10();
  }
  else
  {
    *(void *)(v5 + 64) = v3;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v12, v13, v14);
  }
}

uint64_t sub_1DC9654CC()
{
  sub_1DC886900();
  uint64_t v1 = (int *)v0[8];
  v0[9] = MEMORY[0x1E4FBC860];
  swift_retain();
  uint64_t v4 = (uint64_t (*)(void *))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC9655BC;
  return v4(v0 + 2);
}

uint64_t sub_1DC9655BC()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 88) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC965698()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[9];
  if (v1 == 1)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v28 = MEMORY[0x1E4FBC860];
      sub_1DC89804C();
      uint64_t v4 = v28;
      uint64_t v5 = (uint64_t *)(v2 + 56);
      do
      {
        uint64_t v6 = *(v5 - 3);
        uint64_t v7 = *(v5 - 2);
        uint64_t v8 = *(v5 - 1);
        uint64_t v9 = *v5;
        sub_1DC884F60(v6);
        unint64_t v10 = *(void *)(v28 + 16);
        if (v10 >= *(void *)(v28 + 24) >> 1) {
          sub_1DC89804C();
        }
        v5 += 4;
        *(void *)(v28 + 16) = v10 + 1;
        uint64_t v11 = (void *)(v28 + 32 * v10);
        v11[4] = v6;
        v11[5] = v7;
        void v11[6] = v8;
        v11[7] = v9;
        --v3;
      }
      while (v3);
      swift_release_n();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    uint64_t v24 = (uint64_t (*)(uint64_t))v0[1];
    return v24(v4);
  }
  else
  {
    uint64_t v12 = v0[3];
    uint64_t v13 = v0[4];
    uint64_t v14 = v0[5];
    sub_1DC8F0184();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = v0[9];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1DCA73598(0, *(void *)(v18 + 16) + 1, 1, v0[9], v16, v17);
      uint64_t v18 = v25;
    }
    unint64_t v20 = *(void *)(v18 + 16);
    unint64_t v19 = *(void *)(v18 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_1DCA73598(v19 > 1, v20 + 1, 1, v18, v16, v17);
      uint64_t v18 = v26;
    }
    *(void *)(v18 + 16) = v20 + 1;
    uint64_t v21 = (void *)(v18 + 32 * v20);
    v21[4] = v1;
    v21[5] = v12;
    v21[6] = v13;
    v21[7] = v14;
    sub_1DC966460(v1);
    v0[9] = v18;
    uint64_t v27 = (uint64_t (*)(void *))(v0[8] + *(int *)v0[8]);
    id v22 = (void *)swift_task_alloc();
    v0[10] = v22;
    *id v22 = v0;
    v22[1] = sub_1DC9655BC;
    return v27(v0 + 2);
  }
}

uint64_t sub_1DC965954()
{
  sub_1DC8867A8();
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9659C0()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC9659E0()
{
  sub_1DC9659C0();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC965A14()
{
  *(void *)(v1 + 16) = v0;
  return sub_1DC8BA8F8((uint64_t)sub_1DC965A2C);
}

void sub_1DC965A2C()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v2 >= *(void *)(*(void *)(v1 + 16) + 16))
  {
LABEL_7:
    __break(1u);
    return;
  }
  *(void *)(v1 + 24) = v2 + 1;
  uint64_t v3 = sub_1DC966768();
  sub_1DC884F60(v3);
  uint64_t v4 = sub_1DC966768();
  v5(v4);
}

uint64_t sub_1DC965AD0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC965B08()
{
  sub_1DC8867A8();
  v1[10] = v2;
  v1[11] = v0;
  v1[8] = v3;
  v1[9] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DC965BB8()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v12 = v0[10];
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  type metadata accessor for XPCProxyDecoder();
  uint64_t inited = (void *)swift_initStackObject();
  v0[14] = inited;
  inited[2] = v2;
  inited[3] = v3;
  inited[4] = v4;
  inited[5] = v5;
  uint64_t v7 = *(int **)(v12 + 16);
  sub_1DC8F0184();
  uint64_t v11 = (int *)((char *)v7 + *v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  void *v8 = v0;
  v8[1] = sub_1DC965D00;
  uint64_t v9 = v0[13];
  return ((uint64_t (*)(uint64_t, void *))v11)(v9, inited);
}

uint64_t sub_1DC965D00()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC965DDC()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  swift_setDeallocating();
  sub_1DC96677C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  sub_1DC8BA978();
  sub_1DC8BA86C();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1DC965E74()
{
  sub_1DC8867A8();
  swift_setDeallocating();
  sub_1DC96677C();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC965EE4()
{
  sub_1DC96677C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCProxyDecoder()
{
  return self;
}

uint64_t sub_1DC965F3C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for XPCProxyDecoder.KeyedContainer()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for XPCProxyDecoder.UnkeyedContainer()
{
  return self;
}

uint64_t type metadata accessor for XPCProxyDecoder.SingleValueContainer()
{
  return self;
}

uint64_t sub_1DC965FE4()
{
  sub_1DC886900();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8D6930;
  return sub_1DC965B08();
}

uint64_t sub_1DC966090(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1DC9660B0, 0, 0);
}

uint64_t sub_1DC9660B0()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v1 = (void *)v0[2];
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  uint64_t v6 = (void *)swift_allocObject();
  v0[3] = v6;
  _OWORD v6[2] = v3;
  _OWORD v6[3] = v2;
  _OWORD v6[4] = v4;
  v6[5] = v5;
  sub_1DC884F60(v3);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[4] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1DC9661B0;
  sub_1DC8BA86C();
  return v8(v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1DC9661B0()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  void *v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[5] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[6] = v3;
    v7[7] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DC9662A4()
{
  sub_1DC886900();
  uint64_t v1 = (int8x16_t *)swift_allocObject();
  v1[1] = vextq_s8(v0[3], v0[3], 8uLL);
  swift_release_n();
  swift_release();
  sub_1DC8F0284();
  return v2(&unk_1EAAA19C0, v1);
}

uint64_t sub_1DC966354()
{
  sub_1DC8867A8();
  swift_release();
  swift_release_n();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9663BC()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EAAA26A0 + dword_1EAAA26A0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8EBDA8;
  return v3();
}

uint64_t sub_1DC966460(uint64_t result)
{
  if (result != 1) {
    return sub_1DC8866A0(result);
  }
  return result;
}

uint64_t sub_1DC966470()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC9664FC;
  return sub_1DC9663BC();
}

uint64_t sub_1DC9664FC()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v5 = *v0;
  sub_1DC88678C();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  sub_1DC8F0284();
  return v7(v4, v2);
}

uint64_t sub_1DC9665D4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  void *v4 = v2;
  v4[1] = sub_1DC886184;
  return sub_1DC964798(a2);
}

uint64_t sub_1DC966674()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9666AC()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  uint64_t v4 = *(int **)(v0 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1DC8D6930;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAAA19B8 + dword_1EAAA19B8);
  return v6(v3, v4);
}

uint64_t sub_1DC966768()
{
  return v0;
}

uint64_t sub_1DC96677C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_1DC8866A0(v2);
}

uint64_t sub_1DC966794()
{
  return swift_retain();
}

void *sub_1DC9667B8(void *result)
{
  *(void *)(v3 + 96) = result;
  result[2] = v5;
  result[3] = v2;
  result[4] = v4;
  result[5] = v1;
  return result;
}

uint64_t sub_1DC9667CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v6 = sub_1DC9A4A2C(v3);
    if (v6 < 0 || (unint64_t v8 = v6, v6 >= 1 << *(unsigned char *)(v3 + 32)))
    {
LABEL_28:
      __break(1u);
    }
    else
    {
      uint64_t v9 = v3 + 64;
      uint64_t v26 = v3 + 64;
      uint64_t v27 = v3;
      while ((*(void *)(v9 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
      {
        if (*(_DWORD *)(v3 + 36) != v7) {
          goto LABEL_30;
        }
        int v30 = v7;
        uint64_t v28 = v4;
        uint64_t v10 = (unint64_t *)(*(void *)(v3 + 48) + 16 * v8);
        unint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        swift_bridgeObjectRetain();
        sub_1DC966EDC(v11, v12);
        uint64_t v14 = v13;
        uint64_t v29 = v2;
        swift_bridgeObjectRetain();
        uint64_t v15 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DCA73824();
          uint64_t v15 = v24;
        }
        unint64_t v16 = v15[2];
        if (v16 >= v15[3] >> 1)
        {
          sub_1DCA73824();
          uint64_t v15 = v25;
        }
        void v15[2] = v16 + 1;
        uint64_t v17 = (char *)(v15 + 4);
        *((unsigned char *)v15 + v16 + 32) = 0;
        swift_bridgeObjectRelease();
        int64_t v18 = v15[2];
        sub_1DC87E988(&qword_1EAAA1A00);
        swift_allocObject();
        uint64_t v19 = sub_1DC96E5A4(v18);
        uint64_t v20 = v19;
        if (v15[2])
        {
          uint64_t v21 = *(char **)(v19 + 16);
          if (!v21) {
            goto LABEL_35;
          }
          if (*(void *)(v20 + 24) < v18) {
            goto LABEL_34;
          }
          if (v17 < &v21[v18] && &v17[v18] > v21) {
            goto LABEL_36;
          }
          memcpy(v21, v15 + 4, v18);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCB88B48();
        sub_1DCB88B78();
        sub_1DCB88B88();
        sub_1DCB88B58();
        uint64_t v3 = v27;
        if ((uint64_t)v8 >= -(-1 << *(unsigned char *)(v27 + 32))) {
          goto LABEL_31;
        }
        uint64_t v9 = v26;
        if ((*(void *)(v26 + 8 * (v8 >> 6)) & (1 << v8)) == 0) {
          goto LABEL_32;
        }
        if (*(_DWORD *)(v27 + 36) != v30) {
          goto LABEL_33;
        }
        uint64_t v23 = sub_1DCB88948();
        uint64_t v4 = v28 - 1;
        if (v28 == 1) {
          return v31;
        }
        unint64_t v8 = v23;
        uint64_t v2 = v29;
        if ((v23 & 0x8000000000000000) == 0)
        {
          int v7 = *(_DWORD *)(v27 + 36);
          if (v23 < 1 << *(unsigned char *)(v27 + 32)) {
            continue;
          }
        }
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    uint64_t result = sub_1DCB88D08();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC966AC8(uint64_t a1, uint64_t a2, char a3)
{
  if (!*(void *)(a1 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1DC897D7C();
  uint64_t v6 = sub_1DC9A4ACC(a1);
  if (v6 < 0 || v6 >= 1 << *(unsigned char *)(a1 + 32))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((*(void *)(a1 + 64 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
  }
  if (*(_DWORD *)(a1 + 36) != v7) {
    goto LABEL_19;
  }
  unint64_t v8 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  unint64_t v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v6);
  uint64_t v13 = *v11;
  unint64_t v12 = v11[1];
  swift_bridgeObjectRetain();
  sub_1DC8AF450(v13, v12);
  swift_bridgeObjectRetain();
  sub_1DC8AF450(v13, v12);
  swift_bridgeObjectRelease();
  sub_1DC881920(v13, v12);
  uint64_t v14 = *(void *)(a2 + 16);
  sub_1DC8AF450(v13, v12);
  swift_bridgeObjectRetain();
  sub_1DC8AF450(v13, v12);
  if (a3) {
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, void *))MEMORY[0x1E4F61390];
  }
  else {
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, void *))MEMORY[0x1E4F61388];
  }
  uint64_t v16 = sub_1DC96A53C(v9, v10, v14, v15);
  if (!v3)
  {
    uint64_t v17 = v16;
    type metadata accessor for E5RTIOPort();
    *(void *)(swift_allocObject() + 16) = v17;
    int v18 = e5rt_io_port_retain_tensor_desc();
    if (v18)
    {
      int v20 = v18;
      sub_1DC96ECAC();
      swift_allocError();
      *(_DWORD *)uint64_t v21 = v20;
      *(unsigned char *)(v21 + 4) = 0;
    }
    else
    {
      sub_1DC96ECF8();
      swift_allocError();
      *id v22 = 0;
    }
    swift_willThrow();
    swift_release();
  }
  uint64_t v19 = v25;
  sub_1DC881920(v13, v12);
  sub_1DC881920(v13, v12);
  swift_bridgeObjectRelease_n();
  sub_1DC881920(v13, v12);
  swift_release();
  swift_release();
  return v19;
}

void sub_1DC966EDC(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  unint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
LABEL_5:
  if (v5)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1DC8984AC();
    if ((v5 & 0x8000000000000000) == 0)
    {
      uint64_t v6 = (v3 >> 59) & 1;
      if ((a2 & 0x1000000000000000) == 0) {
        LOBYTE(v6) = 1;
      }
      uint64_t v7 = 4 << v6;
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
      if ((a2 & 0x2000000000000000) != 0) {
        uint64_t v8 = v4;
      }
      uint64_t v14 = v3;
      unint64_t v15 = v8;
      unint64_t v9 = 15;
      while (1)
      {
        unint64_t v10 = v9;
        if ((v9 & 0xC) == v7) {
          unint64_t v10 = sub_1DC9F8E98(v9, v3, a2);
        }
        unint64_t v11 = v10 >> 16;
        if (v10 >> 16 >= v15)
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          uint64_t v5 = sub_1DCB87A38();
          goto LABEL_5;
        }
        if ((a2 & 0x1000000000000000) != 0)
        {
          unint64_t v3 = sub_1DCB87A68();
          if ((v3 & 0x80) != 0) {
            goto LABEL_37;
          }
        }
        else if ((a2 & 0x2000000000000000) != 0)
        {
          v16[0] = v3;
          v16[1] = a2 & 0xFFFFFFFFFFFFFFLL;
          unint64_t v3 = *((unsigned __int8 *)v16 + v11);
          if ((v3 & 0x80) != 0) {
            goto LABEL_37;
          }
        }
        else
        {
          uint64_t v12 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((v3 & 0x1000000000000000) == 0) {
            uint64_t v12 = sub_1DCB88B28();
          }
          unint64_t v3 = *(unsigned __int8 *)(v12 + v11);
          if ((v3 & 0x80) != 0) {
            goto LABEL_37;
          }
        }
        uint64_t v13 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC8984AC();
          uint64_t v13 = v17;
        }
        unint64_t v4 = *(void *)(v13 + 16);
        if (v4 >= *(void *)(v13 + 24) >> 1)
        {
          sub_1DC8984AC();
          uint64_t v13 = v17;
        }
        *(void *)(v13 + 16) = v4 + 1;
        *(unsigned char *)(v13 + v4 + 32) = v3;
        if ((v9 & 0xC) == v7)
        {
          unint64_t v3 = v14;
          unint64_t v9 = sub_1DC9F8E98(v9, v14, a2);
          if ((a2 & 0x1000000000000000) == 0)
          {
LABEL_30:
            unint64_t v9 = (v9 & 0xFFFFFFFFFFFF0000) + 65540;
            goto LABEL_34;
          }
        }
        else
        {
          unint64_t v3 = v14;
          if ((a2 & 0x1000000000000000) == 0) {
            goto LABEL_30;
          }
        }
        if (v15 <= v9 >> 16) {
          goto LABEL_38;
        }
        unint64_t v9 = sub_1DCB87A48();
LABEL_34:
        if (!--v5) {
          return;
        }
      }
    }
    __break(1u);
  }
}

void sub_1DC96713C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1DC8984FC();
    uint64_t v3 = sub_1DC9A4ACC(v2);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(v2 + 32))
      {
        int v6 = v4;
        uint64_t v7 = v2 + 64;
        while ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v6 != *(_DWORD *)(v2 + 36)) {
            goto LABEL_18;
          }
          uint64_t v14 = v1;
          uint64_t v8 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
          uint64_t v9 = v2;
          unint64_t v10 = *(void *)(v15 + 16);
          if (v10 >= *(void *)(v15 + 24) >> 1)
          {
            uint64_t v13 = v7;
            sub_1DC8984FC();
            uint64_t v7 = v13;
          }
          *(void *)(v15 + 16) = v10 + 1;
          *(void *)(v15 + 8 * v10 + 32) = v8;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(v9 + 32))) {
            goto LABEL_19;
          }
          if ((*(void *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          uint64_t v2 = v9;
          if (v6 != *(_DWORD *)(v9 + 36)) {
            goto LABEL_21;
          }
          uint64_t v11 = v7;
          uint64_t v12 = sub_1DCB88948();
          uint64_t v1 = v14 - 1;
          if (v14 == 1) {
            return;
          }
          unint64_t v5 = v12;
          if ((v12 & 0x8000000000000000) == 0)
          {
            uint64_t v7 = v11;
            int v6 = *(_DWORD *)(v2 + 36);
            if (v12 < 1 << *(unsigned char *)(v2 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1DC9672F4(uint64_t a1, void (*a2)(void *, uint64_t *, void *))
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1DC897CDC();
  uint64_t v6 = v19;
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v8 = *v7;
      v16[0] = *(v7 - 1);
      v16[1] = v8;
      swift_bridgeObjectRetain();
      a2(v18, &v17, v16);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v9 = v18[0];
      uint64_t v10 = v18[1];
      uint64_t v11 = v17;
      uint64_t v19 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      if (v12 >= *(void *)(v6 + 24) >> 1)
      {
        sub_1DC897CDC();
        uint64_t v6 = v19;
      }
      v7 += 2;
      *(void *)(v6 + 16) = v12 + 1;
      uint64_t v13 = (void *)(v6 + 24 * v12);
      _OWORD v13[4] = v9;
      id v13[5] = v10;
      void v13[6] = v11;
      --v5;
      uint64_t v3 = 0;
      if (!v5) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1DC967458(uint64_t a1, void (*a2)(uint64_t *, long long *, uint64_t *))
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v54 = MEMORY[0x1E4FBC860];
  sub_1DC897D2C();
  uint64_t v6 = v54;
  sub_1DCA21AF4(v53, a1);
  uint64_t v46 = v53[0];
  int64_t v7 = v53[3];
  unint64_t v8 = v53[4];
  uint64_t v43 = v53[1];
  int64_t v44 = (unint64_t)(v53[2] + 64) >> 6;
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      if (v8)
      {
        uint64_t v10 = v6;
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v7 << 6);
      }
      else
      {
        if (__OFADD__(v7++, 1))
        {
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        if (v7 >= v44) {
          goto LABEL_57;
        }
        unint64_t v14 = *(void *)(v43 + 8 * v7);
        if (!v14)
        {
          int64_t v15 = v7 + 1;
          if (v7 + 1 >= v44) {
            goto LABEL_58;
          }
          unint64_t v14 = *(void *)(v43 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v7 + 2;
            if (v7 + 2 >= v44) {
              goto LABEL_61;
            }
            unint64_t v14 = *(void *)(v43 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v7 + 3;
              if (v7 + 3 >= v44) {
                goto LABEL_62;
              }
              unint64_t v14 = *(void *)(v43 + 8 * v15);
              if (!v14)
              {
                int64_t v15 = v7 + 4;
                if (v7 + 4 >= v44) {
                  goto LABEL_63;
                }
                unint64_t v14 = *(void *)(v43 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v7 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v7 >= v44) {
                      goto LABEL_60;
                    }
                    unint64_t v14 = *(void *)(v43 + 8 * v7);
                    ++v15;
                    if (v14) {
                      goto LABEL_17;
                    }
                  }
LABEL_59:
                  __break(1u);
LABEL_60:
                  __break(1u);
LABEL_61:
                  __break(1u);
LABEL_62:
                  __break(1u);
LABEL_63:
                  __break(1u);
                  return;
                }
              }
            }
          }
          int64_t v7 = v15;
        }
LABEL_17:
        uint64_t v10 = v6;
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
      }
      uint64_t v16 = (uint64_t *)(*(void *)(v46 + 48) + 16 * v12);
      uint64_t v17 = v16[1];
      uint64_t v18 = *(void *)(*(void *)(v46 + 56) + 8 * v12);
      uint64_t v47 = *v16;
      uint64_t v48 = v17;
      uint64_t v49 = v18;
      swift_bridgeObjectRetain();
      swift_retain();
      a2(&v50, &v52, &v47);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_54;
      }
      int64_t v19 = v7;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v21 = v50;
      uint64_t v20 = v51;
      long long v22 = v52;
      uint64_t v6 = v10;
      uint64_t v54 = v10;
      unint64_t v23 = *(void *)(v10 + 16);
      if (v23 >= *(void *)(v6 + 24) >> 1)
      {
        long long v41 = v52;
        sub_1DC897D2C();
        long long v22 = v41;
        uint64_t v6 = v54;
      }
      ++v9;
      *(void *)(v6 + 16) = v23 + 1;
      uint64_t v24 = v6 + 32 * v23;
      *(void *)(v24 + 32) = v21;
      *(void *)(v24 + 40) = v20;
      *(_OWORD *)(v24 + 48) = v22;
      int64_t v7 = v19;
      uint64_t v3 = 0;
      if (v9 == v5) {
        goto LABEL_28;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_28:
  if (!v8) {
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v25 = v6;
  unint64_t v26 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v27 = v26 | (v7 << 6);
  while (1)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(v46 + 48) + 16 * v27);
    uint64_t v32 = v31[1];
    uint64_t v33 = *(void *)(*(void *)(v46 + 56) + 8 * v27);
    uint64_t v47 = *v31;
    uint64_t v48 = v32;
    uint64_t v49 = v33;
    swift_bridgeObjectRetain();
    swift_retain();
    a2(&v50, &v52, &v47);
    if (v3)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_54;
    }
    int64_t v34 = v7;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v35 = v50;
    uint64_t v36 = v51;
    long long v37 = v52;
    uint64_t v6 = v25;
    uint64_t v54 = v25;
    unint64_t v38 = *(void *)(v25 + 16);
    if (v38 >= *(void *)(v6 + 24) >> 1)
    {
      long long v42 = v52;
      sub_1DC897D2C();
      long long v37 = v42;
      uint64_t v6 = v54;
    }
    *(void *)(v6 + 16) = v38 + 1;
    uint64_t v39 = v6 + 32 * v38;
    *(void *)(v39 + 32) = v35;
    *(void *)(v39 + 40) = v36;
    *(_OWORD *)(v39 + 48) = v37;
    int64_t v7 = v34;
    uint64_t v3 = 0;
    if (v8) {
      goto LABEL_29;
    }
LABEL_30:
    int64_t v28 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v28 >= v44) {
      goto LABEL_54;
    }
    unint64_t v29 = *(void *)(v43 + 8 * v28);
    if (!v29)
    {
      int64_t v30 = v7 + 2;
      if (v7 + 2 >= v44) {
        goto LABEL_54;
      }
      unint64_t v29 = *(void *)(v43 + 8 * v30);
      if (v29) {
        goto LABEL_39;
      }
      int64_t v30 = v7 + 3;
      if (v7 + 3 >= v44) {
        goto LABEL_54;
      }
      unint64_t v29 = *(void *)(v43 + 8 * v30);
      if (v29) {
        goto LABEL_39;
      }
      int64_t v30 = v7 + 4;
      if (v7 + 4 >= v44) {
        goto LABEL_54;
      }
      unint64_t v29 = *(void *)(v43 + 8 * v30);
      if (v29)
      {
LABEL_39:
        int64_t v28 = v30;
        goto LABEL_40;
      }
      int64_t v28 = v7 + 5;
      if (v7 + 5 >= v44) {
        goto LABEL_54;
      }
      unint64_t v29 = *(void *)(v43 + 8 * v28);
      if (!v29) {
        break;
      }
    }
LABEL_40:
    uint64_t v25 = v6;
    unint64_t v8 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v7 = v28;
  }
  int64_t v40 = v7 + 6;
  while (v40 < v44)
  {
    unint64_t v29 = *(void *)(v43 + 8 * v40++);
    if (v29)
    {
      int64_t v28 = v40 - 1;
      goto LABEL_40;
    }
  }
LABEL_54:
  swift_release();
}

void sub_1DC967944(uint64_t a1, void (*a2)(uint64_t *, long long *, uint64_t *))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v58 = MEMORY[0x1E4FBC860];
  sub_1DC897D2C();
  uint64_t v5 = v58;
  sub_1DCA21AF4(v57, a1);
  uint64_t v47 = v57[0];
  int64_t v6 = v57[3];
  unint64_t v7 = v57[4];
  uint64_t v44 = v57[1];
  int64_t v45 = (unint64_t)(v57[2] + 64) >> 6;
  uint64_t v43 = v4;
  if (!v4)
  {
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v6 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v6++, 1)) {
      goto LABEL_55;
    }
    if (v6 >= v45)
    {
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    unint64_t v12 = *(void *)(v44 + 8 * v6);
    if (!v12) {
      break;
    }
LABEL_17:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v6 << 6);
LABEL_18:
    unint64_t v14 = (uint64_t *)(*(void *)(v47 + 48) + 16 * v10);
    uint64_t v15 = v14[1];
    uint64_t v16 = (uint64_t *)(*(void *)(v47 + 56) + 16 * v10);
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    uint64_t v50 = *v14;
    uint64_t v51 = v15;
    uint64_t v52 = v17;
    unint64_t v53 = v18;
    swift_bridgeObjectRetain();
    sub_1DC8AF450(v17, v18);
    a2(&v54, &v56, &v50);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_1DC881920(v17, v18);
      return;
    }
    int64_t v19 = v6;
    swift_bridgeObjectRelease();
    sub_1DC881920(v17, v18);
    uint64_t v20 = v54;
    uint64_t v21 = v55;
    long long v22 = v56;
    uint64_t v58 = v5;
    unint64_t v23 = *(void *)(v5 + 16);
    if (v23 >= *(void *)(v5 + 24) >> 1)
    {
      long long v48 = v56;
      sub_1DC897D2C();
      long long v22 = v48;
      uint64_t v5 = v58;
    }
    ++v8;
    *(void *)(v5 + 16) = v23 + 1;
    uint64_t v24 = v5 + 32 * v23;
    *(void *)(v24 + 32) = v20;
    *(void *)(v24 + 40) = v21;
    *(_OWORD *)(v24 + 48) = v22;
    int64_t v6 = v19;
    if (v8 == v43)
    {
      while (1)
      {
LABEL_28:
        if (v7)
        {
          unint64_t v25 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
          unint64_t v26 = v25 | (v6 << 6);
        }
        else
        {
          int64_t v27 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          if (v27 >= v45) {
            goto LABEL_53;
          }
          unint64_t v28 = *(void *)(v44 + 8 * v27);
          if (!v28)
          {
            int64_t v29 = v6 + 2;
            if (v6 + 2 >= v45) {
              goto LABEL_53;
            }
            unint64_t v28 = *(void *)(v44 + 8 * v29);
            if (v28) {
              goto LABEL_39;
            }
            int64_t v29 = v6 + 3;
            if (v6 + 3 >= v45) {
              goto LABEL_53;
            }
            unint64_t v28 = *(void *)(v44 + 8 * v29);
            if (v28) {
              goto LABEL_39;
            }
            int64_t v29 = v6 + 4;
            if (v6 + 4 >= v45) {
              goto LABEL_53;
            }
            unint64_t v28 = *(void *)(v44 + 8 * v29);
            if (v28)
            {
LABEL_39:
              int64_t v27 = v29;
            }
            else
            {
              int64_t v27 = v6 + 5;
              if (v6 + 5 >= v45) {
                goto LABEL_53;
              }
              unint64_t v28 = *(void *)(v44 + 8 * v27);
              if (!v28)
              {
                int64_t v42 = v6 + 6;
                while (v42 < v45)
                {
                  unint64_t v28 = *(void *)(v44 + 8 * v42++);
                  if (v28)
                  {
                    int64_t v27 = v42 - 1;
                    goto LABEL_40;
                  }
                }
LABEL_53:
                swift_release();
                return;
              }
            }
          }
LABEL_40:
          unint64_t v7 = (v28 - 1) & v28;
          unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
          int64_t v6 = v27;
        }
        int64_t v30 = (uint64_t *)(*(void *)(v47 + 48) + 16 * v26);
        uint64_t v31 = *v30;
        uint64_t v32 = v30[1];
        uint64_t v33 = (uint64_t *)(*(void *)(v47 + 56) + 16 * v26);
        uint64_t v35 = *v33;
        unint64_t v34 = v33[1];
        uint64_t v50 = v31;
        uint64_t v51 = v32;
        uint64_t v52 = v35;
        unint64_t v53 = v34;
        swift_bridgeObjectRetain();
        sub_1DC8AF450(v35, v34);
        a2(&v54, &v56, &v50);
        if (v2)
        {
          swift_bridgeObjectRelease();
          sub_1DC881920(v35, v34);
          swift_release();
          swift_release();
          return;
        }
        int64_t v36 = v6;
        swift_bridgeObjectRelease();
        sub_1DC881920(v35, v34);
        uint64_t v37 = v54;
        uint64_t v38 = v55;
        long long v39 = v56;
        uint64_t v58 = v5;
        unint64_t v40 = *(void *)(v5 + 16);
        if (v40 >= *(void *)(v5 + 24) >> 1)
        {
          long long v49 = v56;
          sub_1DC897D2C();
          long long v39 = v49;
          uint64_t v5 = v58;
        }
        *(void *)(v5 + 16) = v40 + 1;
        uint64_t v41 = v5 + 32 * v40;
        *(void *)(v41 + 32) = v37;
        *(void *)(v41 + 40) = v38;
        *(_OWORD *)(v41 + 48) = v39;
        int64_t v6 = v36;
      }
    }
  }
  int64_t v13 = v6 + 1;
  if (v6 + 1 >= v45) {
    goto LABEL_57;
  }
  unint64_t v12 = *(void *)(v44 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v6 + 2;
  if (v6 + 2 >= v45) {
    goto LABEL_60;
  }
  unint64_t v12 = *(void *)(v44 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v6 + 3;
  if (v6 + 3 >= v45) {
    goto LABEL_61;
  }
  unint64_t v12 = *(void *)(v44 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v6 + 4;
  if (v6 + 4 >= v45) {
    goto LABEL_62;
  }
  unint64_t v12 = *(void *)(v44 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v6 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v6 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v6 >= v45) {
      goto LABEL_59;
    }
    unint64_t v12 = *(void *)(v44 + 8 * v6);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

void sub_1DC967E34(uint64_t a1, void (*a2)(uint64_t *, uint64_t *, uint64_t *))
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v49 = MEMORY[0x1E4FBC860];
  sub_1DC89881C();
  uint64_t v6 = v49;
  sub_1DCA21AF4(v48, a1);
  uint64_t v41 = v48[0];
  int64_t v7 = v48[3];
  unint64_t v8 = v48[4];
  uint64_t v38 = v48[1];
  int64_t v39 = (unint64_t)(v48[2] + 64) >> 6;
  uint64_t v37 = v5;
  if (!v5)
  {
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v7 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v7++, 1)) {
      goto LABEL_55;
    }
    if (v7 >= v39)
    {
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    unint64_t v13 = *(void *)(v38 + 8 * v7);
    if (!v13) {
      break;
    }
LABEL_17:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v7 << 6);
LABEL_18:
    uint64_t v15 = (uint64_t *)(*(void *)(v41 + 48) + 16 * v11);
    uint64_t v16 = v15[1];
    uint64_t v17 = *(void *)(*(void *)(v41 + 56) + 8 * v11);
    uint64_t v42 = *v15;
    uint64_t v43 = v16;
    uint64_t v44 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v46, &v45, &v42);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v46;
    uint64_t v18 = v47;
    uint64_t v20 = v45;
    uint64_t v49 = v6;
    unint64_t v21 = *(void *)(v6 + 16);
    if (v21 >= *(void *)(v6 + 24) >> 1)
    {
      sub_1DC89881C();
      uint64_t v6 = v49;
    }
    ++v9;
    *(void *)(v6 + 16) = v21 + 1;
    long long v22 = (void *)(v6 + 24 * v21);
    v22[4] = v19;
    v22[5] = v18;
    void v22[6] = v20;
    uint64_t v3 = 0;
    if (v9 == v37)
    {
      while (1)
      {
LABEL_28:
        if (v8)
        {
          unint64_t v23 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          unint64_t v24 = v23 | (v7 << 6);
        }
        else
        {
          int64_t v25 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          if (v25 >= v39) {
            goto LABEL_53;
          }
          unint64_t v26 = *(void *)(v38 + 8 * v25);
          if (!v26)
          {
            int64_t v27 = v7 + 2;
            if (v7 + 2 >= v39) {
              goto LABEL_53;
            }
            unint64_t v26 = *(void *)(v38 + 8 * v27);
            if (v26) {
              goto LABEL_39;
            }
            int64_t v27 = v7 + 3;
            if (v7 + 3 >= v39) {
              goto LABEL_53;
            }
            unint64_t v26 = *(void *)(v38 + 8 * v27);
            if (v26) {
              goto LABEL_39;
            }
            int64_t v27 = v7 + 4;
            if (v7 + 4 >= v39) {
              goto LABEL_53;
            }
            unint64_t v26 = *(void *)(v38 + 8 * v27);
            if (v26)
            {
LABEL_39:
              int64_t v25 = v27;
            }
            else
            {
              int64_t v25 = v7 + 5;
              if (v7 + 5 >= v39) {
                goto LABEL_53;
              }
              unint64_t v26 = *(void *)(v38 + 8 * v25);
              if (!v26)
              {
                int64_t v36 = v7 + 6;
                while (v36 < v39)
                {
                  unint64_t v26 = *(void *)(v38 + 8 * v36++);
                  if (v26)
                  {
                    int64_t v25 = v36 - 1;
                    goto LABEL_40;
                  }
                }
LABEL_53:
                swift_release();
                return;
              }
            }
          }
LABEL_40:
          unint64_t v8 = (v26 - 1) & v26;
          unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
          int64_t v7 = v25;
        }
        unint64_t v28 = (uint64_t *)(*(void *)(v41 + 48) + 16 * v24);
        uint64_t v29 = v28[1];
        uint64_t v30 = *(void *)(*(void *)(v41 + 56) + 8 * v24);
        uint64_t v42 = *v28;
        uint64_t v43 = v29;
        uint64_t v44 = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a2(&v46, &v45, &v42);
        if (v3)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v46;
        uint64_t v32 = v47;
        uint64_t v33 = v45;
        uint64_t v49 = v6;
        unint64_t v34 = *(void *)(v6 + 16);
        if (v34 >= *(void *)(v6 + 24) >> 1)
        {
          sub_1DC89881C();
          uint64_t v6 = v49;
        }
        *(void *)(v6 + 16) = v34 + 1;
        uint64_t v35 = (void *)(v6 + 24 * v34);
        v35[4] = v31;
        v35[5] = v32;
        v35[6] = v33;
        uint64_t v3 = 0;
      }
    }
  }
  int64_t v14 = v7 + 1;
  if (v7 + 1 >= v39) {
    goto LABEL_57;
  }
  unint64_t v13 = *(void *)(v38 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v7 + 2;
  if (v7 + 2 >= v39) {
    goto LABEL_60;
  }
  unint64_t v13 = *(void *)(v38 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v7 + 3;
  if (v7 + 3 >= v39) {
    goto LABEL_61;
  }
  unint64_t v13 = *(void *)(v38 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v7 + 4;
  if (v7 + 4 >= v39) {
    goto LABEL_62;
  }
  unint64_t v13 = *(void *)(v38 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v7 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v7 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v7 >= v39) {
      goto LABEL_59;
    }
    unint64_t v13 = *(void *)(v38 + 8 * v7);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

uint64_t sub_1DC9682F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1DC96AFAC();
  if (!v3)
  {
    sub_1DC96A26C(result);
    uint64_t v9 = sub_1DC96E340(a2, v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = v9;
    sub_1DC96DB60(a1, a2, a3, &v10);
    return v10;
  }
  return result;
}

void sub_1DC9683DC()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_1DC969B7C();
  if (!v0)
  {
    uint64_t v12 = v11;
    type metadata accessor for E5RTExecutionStream();
    *(void *)(sub_1DC8BABC0() + 16) = v12;
    uint64_t v13 = sub_1DC96E4E8(1852399981, 0xE400000000000000, v10, v8, v4, v2);
    if (v6) {
      sub_1DC96A694(v6);
    }
    sub_1DC96BE9C(v13);
    sub_1DC96A86C(v13, MEMORY[0x1E4F61310]);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC9684F4()
{
  if (e5rt_tensor_desc_dtype_get_num_components())
  {
    sub_1DC96ECAC();
    uint64_t v0 = sub_1DC883884();
    sub_1DC96F9EC(v0, v1);
  }
  return 0;
}

uint64_t sub_1DC968590()
{
  uint64_t v1 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC89D970();
  sub_1DCB868C8();
  uint64_t v5 = sub_1DCB869C8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v5;
}

uint64_t sub_1DC968648()
{
  return sub_1DC968590();
}

uint64_t sub_1DC968660()
{
  return sub_1DCB891D8();
}

BOOL sub_1DC96868C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DC9686A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x61725765756C6176 && a2 == 0xEC00000064657070)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DC968740()
{
  return 0x61725765756C6176;
}

void sub_1DC968760()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA1B50);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D970();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC96F740();
  sub_1DCB892B8();
  sub_1DC87E988(&qword_1EAAA1B40);
  sub_1DC96F78C(&qword_1EAAA1B58);
  sub_1DCB88F18();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_1DC88D674();
}

uint64_t sub_1DC968890()
{
  return sub_1DCB891F8();
}

void sub_1DC9688D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  sub_1DC88D6B0();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = sub_1DC87E988(&qword_1EAAA1B30);
  sub_1DC89D4E0();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  sub_1DC8A22D0();
  uint64_t v22 = v21 - v20;
  sub_1DC881A8C(v13, v13[3]);
  sub_1DC96F740();
  sub_1DCB89298();
  if (!v11)
  {
    sub_1DC87E988(&qword_1EAAA1B40);
    sub_1DC96F78C(&qword_1EAAA1B48);
    sub_1DCB88DF8();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v16);
    *uint64_t v15 = a11;
  }
  sub_1DC8818D0((uint64_t)v13);
  sub_1DC88D674();
}

uint64_t sub_1DC968A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9686A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC968A60(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F740();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC968A9C(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F740();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC968AE0()
{
  return sub_1DCB891F8();
}

void sub_1DC968B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1DC9688D8(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SHIDWORD(vars8));
}

void sub_1DC968B3C()
{
}

uint64_t sub_1DC968B58(uint64_t a1)
{
  uint64_t result = sub_1DC968C0C();
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(result + 32) == a1)
  {
    a1 = *(unsigned __int8 *)(result + 36);
LABEL_11:
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v3 == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1DC96ECAC();
    sub_1DC883884();
    sub_1DC96FAB8(v7, 5);
    return a1;
  }
  uint64_t v4 = (unsigned __int8 *)(result + 44);
  uint64_t v5 = 1;
  while (1)
  {
    uint64_t v6 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (*((_DWORD *)v4 - 1) == a1)
    {
      a1 = *v4;
      goto LABEL_11;
    }
    v4 += 8;
    ++v5;
    if (v6 == v3) {
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC968C0C()
{
  uint64_t v0 = qword_1F37F3238;
  uint64_t result = MEMORY[0x1E4FBC860];
  if (qword_1F37F3238)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    sub_1DC897FAC();
    unint64_t v2 = &byte_1F37F3248;
    uint64_t result = v7;
    do
    {
      int v4 = *v2++;
      int v3 = v4;
      uint64_t v8 = result;
      unint64_t v5 = *(void *)(result + 16);
      if (v5 >= *(void *)(result + 24) >> 1)
      {
        sub_1DC897FAC();
        uint64_t result = v8;
      }
      *(void *)(result + 16) = v5 + 1;
      uint64_t v6 = result + 8 * v5;
      *(_DWORD *)(v6 + 32) = v3;
      *(unsigned char *)(v6 + 36) = v3;
      --v0;
    }
    while (v0);
  }
  return result;
}

uint64_t sub_1DC968CCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953393013 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7630441 && a2 == 0xE300000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6D726F6E75 && a2 == 0xE500000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6D726F6E73 && a2 == 0xE500000000000000;
        if (v8 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x74616F6C66 && a2 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1DCB89018();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1DC968E98(char a1)
{
  uint64_t result = 1953393013;
  switch(a1)
  {
    case 1:
      uint64_t result = 7630441;
      break;
    case 2:
      uint64_t result = 0x6D726F6E75;
      break;
    case 3:
      uint64_t result = 0x6D726F6E73;
      break;
    case 4:
      uint64_t result = 0x74616F6C66;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DC968F30()
{
  sub_1DC88D6B0();
  char v42 = v2;
  int v4 = v3;
  sub_1DC87E988(&qword_1EAAA1A90);
  sub_1DC89D4E0();
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1DC96FA40(v7, v29);
  sub_1DC87E988(&qword_1EAAA1A98);
  sub_1DC89D4E0();
  uint64_t v37 = v9;
  uint64_t v38 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  uint64_t v36 = v10;
  sub_1DC87E988(&qword_1EAAA1AA0);
  sub_1DC89D4E0();
  uint64_t v34 = v12;
  uint64_t v35 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  uint64_t v33 = v13;
  sub_1DC87E988(&qword_1EAAA1AA8);
  sub_1DC89D4E0();
  uint64_t v31 = v15;
  uint64_t v32 = v14;
  MEMORY[0x1F4188790](v14);
  sub_1DC8A22D0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_1DC87E988(&qword_1EAAA1AB0);
  sub_1DC89D4E0();
  uint64_t v30 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1DC8CD750();
  uint64_t v22 = sub_1DC87E988(&qword_1EAAA1AB8);
  sub_1DC89D4E0();
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v25);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v4, v4[3]);
  sub_1DC96EFB8();
  sub_1DCB892B8();
  switch(v42)
  {
    case 1:
      sub_1DC96F0E8();
      sub_1DCB88E88();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v18, v32);
      break;
    case 2:
      sub_1DC96F09C();
      uint64_t v26 = v33;
      sub_1DC96FA08();
      uint64_t v28 = v34;
      uint64_t v27 = v35;
      goto LABEL_7;
    case 3:
      sub_1DC96F050();
      uint64_t v26 = v36;
      sub_1DC96FA08();
      uint64_t v28 = v37;
      uint64_t v27 = v38;
      goto LABEL_7;
    case 4:
      sub_1DC96F004();
      uint64_t v26 = v39;
      sub_1DC96FA08();
      uint64_t v28 = v40;
      uint64_t v27 = v41;
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
      break;
    default:
      sub_1DC96F134();
      sub_1DC96FA08();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v0, v19);
      break;
  }
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v1, v22);
  sub_1DC88D674();
}

void sub_1DC9692A0()
{
  sub_1DC88D6B0();
  int v4 = v3;
  uint64_t v50 = sub_1DC87E988(&qword_1EAAA1A30);
  sub_1DC89D4E0();
  uint64_t v52 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v56 = v7;
  uint64_t v55 = sub_1DC87E988(&qword_1EAAA1A38);
  sub_1DC89D4E0();
  uint64_t v51 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC96FA40(v10, v43);
  sub_1DC87E988(&qword_1EAAA1A40);
  sub_1DC89D4E0();
  uint64_t v48 = v12;
  uint64_t v49 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  uint64_t v53 = v13;
  sub_1DC87E988(&qword_1EAAA1A48);
  sub_1DC89D4E0();
  uint64_t v46 = v15;
  uint64_t v47 = v14;
  MEMORY[0x1F4188790](v14);
  sub_1DC8A22D0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_1DC87E988(&qword_1EAAA1A50);
  sub_1DC89D4E0();
  uint64_t v45 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1DC8C1FC4();
  uint64_t v22 = sub_1DC87E988(&qword_1EAAA1A58);
  sub_1DC89D4E0();
  uint64_t v24 = v23;
  MEMORY[0x1F4188790](v25);
  sub_1DC8CD750();
  uint64_t v57 = (uint64_t)v4;
  sub_1DC881A8C(v4, v4[3]);
  sub_1DC96EFB8();
  sub_1DCB89298();
  if (v1) {
    goto LABEL_9;
  }
  uint64_t v26 = sub_1DCB88E58();
  uint64_t v27 = *(void *)(v26 + 16);
  if (!v27)
  {
    uint64_t v34 = v0;
LABEL_8:
    uint64_t v35 = sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v37 = v36;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v37 = &unk_1F37F3260;
    sub_1DCB88D68();
    sub_1DC96FA34();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v37, *MEMORY[0x1E4FBBA70], v35);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v34, v22);
LABEL_9:
    sub_1DC8818D0(v57);
    goto LABEL_10;
  }
  uint64_t v44 = v22;
  uint64_t v28 = v0;
  uint64_t v29 = *(unsigned __int8 *)(v26 + 32);
  sub_1DC9CFE4C(1, v27, v26, v26 + 32, 0, (2 * v27) | 1);
  uint64_t v31 = v30;
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (v31 != v33 >> 1)
  {
    uint64_t v34 = v28;
    uint64_t v22 = v44;
    goto LABEL_8;
  }
  switch(v29)
  {
    case 1:
      sub_1DC96F0E8();
      uint64_t v38 = v18;
      sub_1DC96F9BC();
      uint64_t v40 = v46;
      uint64_t v39 = v47;
      goto LABEL_13;
    case 2:
      sub_1DC96F09C();
      uint64_t v38 = v53;
      sub_1DC96F9BC();
      uint64_t v40 = v48;
      uint64_t v39 = v49;
LABEL_13:
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
      break;
    case 3:
      sub_1DC96F050();
      sub_1DC96F9BC();
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v54, v55);
      break;
    case 4:
      sub_1DC96F004();
      sub_1DC96F9BC();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v56, v50);
      break;
    default:
      sub_1DC96F134();
      sub_1DC96F9BC();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v2, v19);
      break;
  }
  swift_unknownObjectRelease();
  uint64_t v41 = sub_1DC96FA5C();
  v42(v41);
  sub_1DC8818D0((uint64_t)v4);
LABEL_10:
  sub_1DC88D674();
}

uint64_t sub_1DC969808()
{
  return sub_1DC89F9AC();
}

uint64_t sub_1DC969824()
{
  return sub_1DC968E98(*v0);
}

uint64_t sub_1DC96982C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC968CCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC969854(uint64_t a1)
{
  unint64_t v2 = sub_1DC96EFB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC969890(uint64_t a1)
{
  unint64_t v2 = sub_1DC96EFB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9698CC(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F004();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC969908(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F004();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC969944(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F0E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC969980(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F0E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9699BC(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F050();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9699F8(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F050();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC969A34(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F134();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC969A70(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F134();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC969AAC(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F09C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC969AE8(uint64_t a1)
{
  unint64_t v2 = sub_1DC96F09C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DC969B24(unsigned char *a1@<X8>)
{
  sub_1DC9692A0();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1DC969B50()
{
}

void sub_1DC969B6C(void *a1@<X8>)
{
  *a1 = &unk_1F37F3228;
}

uint64_t sub_1DC969B7C()
{
  if (e5rt_execution_stream_create())
  {
    sub_1DC96ECAC();
    uint64_t v0 = sub_1DC883884();
    sub_1DC96F9DC(v0, v1);
  }
  else
  {
    sub_1DC96ECF8();
    uint64_t v3 = sub_1DC883884();
    sub_1DC96FA28(v3, v4);
  }
  return swift_willThrow();
}

uint64_t sub_1DC969C30()
{
  uint64_t v2 = sub_1DC969E5C();
  if (!v0)
  {
    uint64_t v1 = v2;
    if (v2)
    {
      sub_1DC96ECAC();
      sub_1DC883884();
      *(_DWORD *)uint64_t v3 = v1;
      *(unsigned char *)(v3 + 4) = 0;
    }
    else
    {
      uint64_t v1 = 0;
      sub_1DC96ECF8();
      sub_1DC883884();
      *uint64_t v5 = 0;
    }
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DC969D68()
{
  sub_1DC96FA34();
  sub_1DC96B054(MEMORY[0x1E4F613A0], 0xD000000000000025, v0);
  sub_1DC8C1FB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTExecutionStream()
{
  return self;
}

uint64_t sub_1DC969DE0()
{
  uint64_t result = e5rt_execution_stream_execute_sync();
  if (result)
  {
    sub_1DC96ECAC();
    uint64_t v1 = sub_1DC883884();
    return sub_1DC96F9EC(v1, v2);
  }
  return result;
}

uint64_t sub_1DC969E30(uint64_t a1)
{
  return sub_1DC96A86C(a1, MEMORY[0x1E4F61310]);
}

uint64_t sub_1DC969E5C()
{
  sub_1DCB87998();
  sub_1DCB87998();
  sub_1DCB87998();
  uint64_t precompiled_compute_operation = e5rt_execution_stream_operation_create_precompiled_compute_operation();
  swift_release();
  swift_release();
  swift_release();
  return precompiled_compute_operation;
}

void sub_1DC969F30(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1DC96713C(v6);
  swift_bridgeObjectRelease();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v7)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1DC897BDC();
    if (v7 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v16 = a4;
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0) {
        uint64_t v9 = MEMORY[0x1E01A7AE0](i, a2);
      }
      else {
        uint64_t v9 = swift_retain();
      }
      uint64_t v10 = *(void *)(v9 + 16);
      swift_release();
      unint64_t v11 = *(void *)(v17 + 16);
      if (v11 >= *(void *)(v17 + 24) >> 1) {
        sub_1DC897BDC();
      }
      *(void *)(v17 + 16) = v11 + 1;
      *(void *)(v17 + 8 * v11 + 32) = v10;
    }
    a4 = v16;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1DC9871F4();
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1DC987134();
  }
  int v12 = e5rt_execution_stream_operation_reshape_operation();
  if (v12)
  {
    int v13 = v12;
    sub_1DC96ECAC();
    uint64_t v14 = swift_allocError();
    *(_DWORD *)uint64_t v15 = v13;
    *(unsigned char *)(v15 + 4) = 0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a4 = v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DC96A154()
{
  return sub_1DC96AFAC();
}

void sub_1DC96A1B4(uint64_t a1)
{
}

uint64_t sub_1DC96A1E0()
{
  return sub_1DC96AFAC();
}

void sub_1DC96A240(uint64_t a1)
{
}

void sub_1DC96A26C(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_23:
    sub_1DC987134();
    uint64_t v8 = v20;
    goto LABEL_10;
  }
  sub_1DC88D6B0();
  uint64_t v1 = v4;
  uint64_t v2 = v5;
  uint64_t v7 = v6;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1DC897BDC();
    uint64_t v8 = v21;
    unint64_t v9 = *(void *)(v21 + 16);
    do
    {
      if (v9 >= *(void *)(v21 + 24) >> 1) {
        sub_1DC897BDC();
      }
      *(void *)(v21 + 16) = v9 + 1;
      *(void *)(v21 + 8 * v9++ + 32) = 0;
      --v7;
    }
    while (v7);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (v1(v2, *(void *)(v8 + 16), v8 + 32))
  {
    sub_1DC96ECAC();
    uint64_t v10 = sub_1DC883884();
    sub_1DC96F9EC(v10, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)(v8 + 16);
    if (v12)
    {
      uint64_t v22 = v3;
      sub_1DC897B8C();
      uint64_t v13 = 0;
      while (*(void *)(v8 + 8 * v13 + 32))
      {
        uint64_t v14 = sub_1DCB87A28();
        uint64_t v16 = v15;
        unint64_t v17 = *(void *)(v22 + 16);
        if (v17 >= *(void *)(v22 + 24) >> 1) {
          sub_1DC897B8C();
        }
        ++v13;
        *(void *)(v22 + 16) = v17 + 1;
        uint64_t v18 = v22 + 16 * v17;
        *(void *)(v18 + 32) = v14;
        *(void *)(v18 + 40) = v16;
        if (v12 == v13) {
          goto LABEL_19;
        }
      }
      sub_1DC96ECAC();
      sub_1DC883884();
      sub_1DC96FAB8(v19, 3);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
LABEL_19:
      swift_bridgeObjectRelease();
    }
  }
  sub_1DC88D674();
}

uint64_t sub_1DC96A47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC96A53C(a1, a2, a3, MEMORY[0x1E4F61390]);
}

uint64_t sub_1DC96A4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC96A53C(a1, a2, a3, MEMORY[0x1E4F61388]);
}

uint64_t sub_1DC96A53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void *))
{
  v12[1] = *MEMORY[0x1E4F143B8];
  v12[0] = 0;
  uint64_t v6 = sub_1DCB87998();
  LODWORD(a4) = a4(a3, v6 + 32, v12);
  swift_release();
  if (a4)
  {
    sub_1DC96ECAC();
    uint64_t v7 = sub_1DC883884();
    sub_1DC96F9DC(v7, v8);
    return swift_willThrow();
  }
  uint64_t result = v12[0];
  if (!v12[0])
  {
    sub_1DC96ECF8();
    uint64_t v10 = sub_1DC883884();
    sub_1DC96FA28(v10, v11);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC96A61C()
{
  sub_1DC96FA34();
  sub_1DC96B054(MEMORY[0x1E4F61378], 0xD00000000000002ELL, v0);
  sub_1DC8C1FB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTExecutionStreamOperation()
{
  return self;
}

uint64_t sub_1DC96A694(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = sub_1DC96E5D4(a1);
  unint64_t v4 = sub_1DC9667CC(v3);
  sub_1DC969F30(v3, v4, v2, &v6);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC96A710()
{
  return sub_1DC96A9E8();
}

uint64_t sub_1DC96A770()
{
  unint64_t v0 = (unsigned int (*)(void *))MEMORY[0x1E4F613D8];

  return sub_1DC96B054(v0, 0xD00000000000001CLL, 0x80000001DCB93B00);
}

uint64_t sub_1DC96A7F4()
{
  sub_1DC96FA34();
  sub_1DC96B054(MEMORY[0x1E4F613D8], 0xD00000000000001CLL, v0);
  sub_1DC8C1FB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTIOPort()
{
  return self;
}

uint64_t sub_1DC96A86C(uint64_t a1, uint64_t (*a2)(void, void))
{
  uint64_t result = a2(*(void *)(v2 + 16), *(void *)(a1 + 16));
  if (result)
  {
    sub_1DC96ECAC();
    uint64_t v4 = sub_1DC883884();
    return sub_1DC96F9EC(v4, v5);
  }
  return result;
}

uint64_t sub_1DC96A8CC()
{
  if (e5rt_tensor_desc_get_shape())
  {
    sub_1DC96ECAC();
    uint64_t v0 = sub_1DC883884();
    sub_1DC96F9DC(v0, v1);
  }
  else
  {
    sub_1DC96ECF8();
    uint64_t v3 = sub_1DC883884();
    sub_1DC96FA28(v3, v4);
  }
  return swift_willThrow();
}

uint64_t sub_1DC96A988()
{
  return sub_1DC96A9E8();
}

uint64_t sub_1DC96A9E8()
{
  sub_1DC96FA88();
  if (v0())
  {
    sub_1DC96ECAC();
    uint64_t v1 = sub_1DC883884();
    sub_1DC96F9DC(v1, v2);
    return swift_willThrow();
  }
  uint64_t result = v6;
  if (!v6)
  {
    sub_1DC96ECF8();
    uint64_t v4 = sub_1DC883884();
    sub_1DC96FA28(v4, v5);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC96AAA0()
{
  sub_1DC96FA94();

  return sub_1DC96B054(v0, v1, v2);
}

uint64_t sub_1DC96AB20()
{
  sub_1DC96FA34();
  sub_1DC96FA94();
  sub_1DC96B054(v0, v1, v2);
  sub_1DC8C1FB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTTensorDescriptor()
{
  return self;
}

uint64_t sub_1DC96AB94()
{
  sub_1DC96FA88();
  if (e5rt_tensor_desc_get_size())
  {
    sub_1DC96ECAC();
    uint64_t v0 = sub_1DC883884();
    sub_1DC96F9EC(v0, v1);
  }
  return v3;
}

uint64_t sub_1DC96AC2C()
{
  if (!e5rt_tensor_desc_dtype_get_component_dtype()) {
    return sub_1DC968B58(4);
  }
  sub_1DC96ECAC();
  uint64_t v0 = sub_1DC883884();
  return sub_1DC96F9EC(v0, v1);
}

uint64_t sub_1DC96ACD0()
{
  uint64_t v0 = (unsigned int (*)(void *))MEMORY[0x1E4F614B8];

  return sub_1DC96B054(v0, 0xD00000000000002ELL, 0x80000001DCB93A70);
}

uint64_t sub_1DC96AD54()
{
  sub_1DC96FA34();
  sub_1DC96B054(MEMORY[0x1E4F614B8], 0xD00000000000002ELL, v0);
  sub_1DC8C1FB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTTensorDescriptorDataType()
{
  return self;
}

uint64_t sub_1DC96ADCC()
{
  if (e5rt_operand_desc_retain_from_tensor_desc())
  {
    sub_1DC96ECAC();
    uint64_t v0 = sub_1DC883884();
    sub_1DC96F9DC(v0, v1);
  }
  else
  {
    sub_1DC96ECF8();
    uint64_t v3 = sub_1DC883884();
    sub_1DC96FA28(v3, v4);
  }
  return swift_willThrow();
}

uint64_t sub_1DC96AE84()
{
  sub_1DC96FA34();
  sub_1DC96B054(MEMORY[0x1E4F613F0], 0xD000000000000027, v0);
  sub_1DC8C1FB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTOperandDescriptor()
{
  return self;
}

uint64_t sub_1DC96AEFC()
{
  sub_1DC96FA88();
  if (e5rt_buffer_object_get_data_ptr())
  {
    sub_1DC96ECAC();
    uint64_t v0 = sub_1DC883884();
    sub_1DC96F9DC(v0, v1);
    return swift_willThrow();
  }
  uint64_t result = v5;
  if (!v5)
  {
    sub_1DC96ECF8();
    uint64_t v3 = sub_1DC883884();
    sub_1DC96FA28(v3, v4);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC96AFAC()
{
  sub_1DC96FA88();
  int v1 = v0();
  if (v1)
  {
    int v2 = v1;
    sub_1DC96ECAC();
    sub_1DC883884();
    *(_DWORD *)uint64_t v3 = v2;
    *(unsigned char *)(v3 + 4) = 0;
    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1DC96B054(unsigned int (*a1)(void *), uint64_t a2, unint64_t a3)
{
  v7[1] = *MEMORY[0x1E4F143B8];
  v7[0] = *(void *)(v3 + 16);
  if (a1(v7)) {
    sub_1DCAC5F78(a2, a3);
  }
  return v3;
}

uint64_t sub_1DC96B0E0()
{
  sub_1DC96FA34();
  sub_1DC96B054(MEMORY[0x1E4F61290], 0xD000000000000022, v0);
  sub_1DC8C1FB4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for E5RTBufferObject()
{
  return self;
}

uint64_t sub_1DC96B15C()
{
  swift_release();

  return swift_release();
}

void *sub_1DC96B198(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1DC96B1D0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DC96B230(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for E5RTModel()
{
}

void *initializeWithTake for FeatureExtractorConfiguration(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void type metadata accessor for UnsafeE5RTBufferObject()
{
}

void type metadata accessor for UnsafeE5RTOperandDescriptor()
{
}

void type metadata accessor for UnsafeE5RTTensorDescriptorDataType()
{
}

void type metadata accessor for UnsafeE5RTTensorDescriptor()
{
}

void type metadata accessor for UnsafeE5RTIOPort()
{
}

void type metadata accessor for UnsafeE5RTExecutionStreamOperation()
{
}

uint64_t getEnumTagSinglePayload for UnsafeAudioBufferListPointer(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 == 1 || !*(unsigned char *)(a1 + 8))
    {
      if (*(void *)a1) {
        int v2 = -1;
      }
      else {
        int v2 = 0;
      }
    }
    else
    {
      int v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnsafeAudioBufferListPointer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

void type metadata accessor for UnsafeE5RTExecutionStream()
{
}

uint64_t sub_1DC96B35C()
{
  int v0 = e5rt_buffer_object_alloc();
  if (v0)
  {
    int v1 = v0;
    sub_1DC96ECAC();
    sub_1DC883884();
    *(_DWORD *)uint64_t v2 = v1;
    *(unsigned char *)(v2 + 4) = 0;
  }
  else
  {
    sub_1DC96ECF8();
    uint64_t v4 = sub_1DC883884();
    sub_1DC96FA28(v4, v5);
  }
  return swift_willThrow();
}

uint64_t sub_1DC96B430()
{
  int data_ptr = e5rt_buffer_object_get_data_ptr();
  if (data_ptr)
  {
    int v1 = data_ptr;
    sub_1DC96ECAC();
    swift_allocError();
    *(_DWORD *)uint64_t v2 = v1;
    *(unsigned char *)(v2 + 4) = 0;
  }
  else
  {
    sub_1DC96ECF8();
    swift_allocError();
    *uint64_t v3 = 0;
  }
  return swift_willThrow();
}

uint64_t sub_1DC96B5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1DC96AEFC();
  if (!v3)
  {
    uint64_t v7 = sub_1DC96AFAC();
    if (a2)
    {
      if (v7 == a3 - a2) {
        return sub_1DCB88778();
      }
    }
    else if (!v7)
    {
      return sub_1DCB88778();
    }
    sub_1DC96EDAC();
    swift_allocError();
    unsigned char *v8 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC96B6A0()
{
  if (*(unsigned char *)(v0 + 4) == 1) {
    return sub_1DCB891B8();
  }
  sub_1DCB891B8();
  return sub_1DCB891D8();
}

BOOL sub_1DC96B76C(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)a2;
  char v3 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4) == 1)
  {
    switch(*(_DWORD *)a1)
    {
      case 1:
        BOOL v4 = v2 == 1;
        goto LABEL_12;
      case 2:
        BOOL v4 = v2 == 2;
        goto LABEL_12;
      case 3:
        BOOL v4 = v2 == 3;
        goto LABEL_12;
      case 4:
        BOOL v4 = v2 == 4;
        goto LABEL_12;
      case 5:
        BOOL v4 = v2 == 5;
        goto LABEL_12;
      case 6:
        BOOL v4 = v2 == 6;
        goto LABEL_12;
      case 7:
        if (v2 <= 6) {
          char v3 = 0;
        }
        if ((v3 & 1) == 0) {
          return 0;
        }
        goto LABEL_15;
      default:
        BOOL v4 = v2 == 0;
LABEL_12:
        if (!v4) {
          char v3 = 0;
        }
        if ((v3 & 1) == 0) {
          return 0;
        }
LABEL_15:
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 4) & 1) == 0 && *(_DWORD *)a1 == v2;
  }
  return result;
}

uint64_t sub_1DC96B82C()
{
  int v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1DCB891A8();
  sub_1DCB891B8();
  if (v1 != 1) {
    sub_1DCB891D8();
  }
  return sub_1DCB891F8();
}

uint64_t sub_1DC96B93C()
{
  int v1 = *(unsigned __int8 *)(v0 + 4);
  sub_1DCB891A8();
  sub_1DCB891B8();
  if (v1 != 1) {
    sub_1DCB891D8();
  }
  return sub_1DCB891F8();
}

void sub_1DC96BA44(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = sub_1DC96AFAC();
    if (v2) {
      return;
    }
  }
  else
  {
    uint64_t v3 = sub_1DC96AFAC();
    if (v2) {
      return;
    }
  }
  sub_1DC96A26C(v3);
}

uint64_t sub_1DC96BADC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, void *))MEMORY[0x1E4F61390];
  }
  else {
    uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, void *))MEMORY[0x1E4F61388];
  }
  uint64_t result = sub_1DC96A53C(a2, a3, *(void *)(a1 + 16), v5);
  if (!v4)
  {
    uint64_t v7 = result;
    type metadata accessor for E5RTIOPort();
    uint64_t result = sub_1DC8BABC0();
    *(void *)(result + 16) = v7;
  }
  return result;
}

void sub_1DC96BB58(uint64_t a1, char a2)
{
  int v3 = a2 & 1;
  sub_1DC96BA44(a1, a2 & 1);
  if (!v2)
  {
    if (*(void *)(v4 + 16))
    {
      sub_1DCB87998();
      swift_bridgeObjectRetain();
      if (v3) {
        int v5 = e5rt_execution_stream_operation_retain_output_port();
      }
      else {
        int v5 = e5rt_execution_stream_operation_retain_input_port();
      }
      int v6 = v5;
      swift_release();
      if (v6)
      {
        sub_1DC96ECAC();
        sub_1DC883884();
        *(_DWORD *)uint64_t v7 = v6;
        *(unsigned char *)(v7 + 4) = 0;
      }
      else
      {
        sub_1DC96ECF8();
        uint64_t v8 = sub_1DC883884();
        sub_1DC96FA28(v8, v9);
      }
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1DC96BE9C(uint64_t a1)
{
  char v3 = 0;
  uint64_t v4 = 0;
  do
  {
    sub_1DC96BB58(a1, *((unsigned char *)&unk_1F37FB4A8 + v4 + 32));
    if (v3) {
      break;
    }
    char v3 = 1;
    uint64_t v4 = 1u;
  }
  while (!v1);
}

uint64_t sub_1DC96BEFC(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, char a5)
{
  uint64_t v9 = *a3;
  uint64_t v8 = a3[1];
  char v10 = a5 & 1;
  *a1 = *a3;
  a1[1] = v8;
  swift_bridgeObjectRetain();
  sub_1DC96BADC(a4, v9, v8, v10);
  if (v5) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v12 = sub_1DC96A9E8();
  swift_release();
  type metadata accessor for E5RTTensorDescriptor();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v12;
  *a2 = result;
  return result;
}

uint64_t sub_1DC96BFD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_1DC96BADC(a1, a2, a3, a4 & 1);
  if (!v6)
  {
    uint64_t v10 = sub_1DC96A9E8();
    type metadata accessor for E5RTBufferObject();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v10;
    sub_1DC96B5D0(inited, a5, a6);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC96C094(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v46 = (void *)(a3 + 64);
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v47 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (!v8)
  {
    uint64_t v10 = 1;
    if (v47 > 1)
    {
      unint64_t v11 = v46[1];
      if (v11)
      {
LABEL_14:
        unint64_t v9 = __clz(__rbit64(v11)) + (v10 << 6);
        goto LABEL_15;
      }
      uint64_t v12 = 2;
      if (v47 > 2)
      {
        unint64_t v11 = v46[2];
        if (v11) {
          goto LABEL_13;
        }
        uint64_t v12 = 3;
        if (v47 <= 3) {
          return swift_release();
        }
        unint64_t v11 = v46[3];
        if (v11)
        {
LABEL_13:
          uint64_t v10 = v12;
          goto LABEL_14;
        }
        uint64_t v12 = 4;
        if (v47 > 4)
        {
          unint64_t v11 = v46[4];
          if (!v11)
          {
            while (1)
            {
              uint64_t v10 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                break;
              }
              if (v10 >= v47) {
                return swift_release();
              }
              unint64_t v11 = v46[v10];
              ++v12;
              if (v11) {
                goto LABEL_14;
              }
            }
LABEL_70:
            __break(1u);
          }
          goto LABEL_13;
        }
      }
    }
    return swift_release();
  }
  unint64_t v9 = __clz(__rbit64(v8));
LABEL_15:
  uint64_t v13 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v9);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v9);
  uint64_t v18 = *v16;
  unint64_t v17 = v16[1];
  switch(v17 >> 62)
  {
    case 1uLL:
      unint64_t v49 = v16[1];
      if (v18 >> 32 < (int)v18)
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1DC8AF450(v18, v49);
      swift_bridgeObjectRetain();
      sub_1DC8AF450(v18, v49);
      if (sub_1DCB867D8() && __OFSUB__((int)v18, sub_1DCB86808()))
      {
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      sub_1DCB867F8();
      if (a2) {
        uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, void *))MEMORY[0x1E4F61390];
      }
      else {
        uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, void *))MEMORY[0x1E4F61388];
      }
      uint64_t v31 = sub_1DC96A53C(v15, v14, *(void *)(a1 + 16), v30);
      if (v4)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v32 = v31;
        type metadata accessor for E5RTIOPort();
        *(void *)(swift_allocObject() + 16) = v32;
        int v33 = e5rt_io_port_retain_buffer_object();
        if (v33)
        {
          int v41 = v33;
          sub_1DC96ECAC();
          swift_allocError();
          *(_DWORD *)uint64_t v42 = v41;
          *(unsigned char *)(v42 + 4) = 0;
        }
        else
        {
          sub_1DC96ECF8();
          swift_allocError();
          *uint64_t v44 = 0;
        }
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_release();
      }
      unint64_t v45 = v49;
      swift_release();
      sub_1DC881920(v18, v49);
      swift_bridgeObjectRelease();
LABEL_63:
      sub_1DC881920(v18, v45);
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      return swift_bridgeObjectRelease();
    case 2uLL:
      uint64_t v51 = v4;
      uint64_t v20 = v13[1];
      uint64_t v21 = *(void *)(v18 + 16);
      uint64_t v22 = *(void *)(v18 + 24);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1DC8AF450(v18, v17);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (sub_1DCB867D8() && __OFSUB__(v21, sub_1DCB86808())) {
        goto LABEL_68;
      }
      if (__OFSUB__(v22, v21)) {
        goto LABEL_67;
      }
      sub_1DCB867F8();
      if (a2) {
        uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, void *))MEMORY[0x1E4F61390];
      }
      else {
        uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, void *))MEMORY[0x1E4F61388];
      }
      uint64_t v27 = sub_1DC96A53C(v15, v20, *(void *)(a1 + 16), v26);
      if (v51)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = v27;
        type metadata accessor for E5RTIOPort();
        *(void *)(swift_allocObject() + 16) = v28;
        int v29 = e5rt_io_port_retain_buffer_object();
        if (v29)
        {
          int v39 = v29;
          sub_1DC96ECAC();
          swift_allocError();
          *(_DWORD *)uint64_t v40 = v39;
          *(unsigned char *)(v40 + 4) = 0;
        }
        else
        {
          sub_1DC96ECF8();
          swift_allocError();
          *uint64_t v43 = 0;
        }
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_release();
      }
      unint64_t v45 = v17;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_63;
    case 3uLL:
      sub_1DCB87998();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1DC8AF450(v18, v17);
      swift_bridgeObjectRetain();
      if (a2) {
        int v23 = e5rt_execution_stream_operation_retain_output_port();
      }
      else {
        int v23 = e5rt_execution_stream_operation_retain_input_port();
      }
      int v25 = v23;
      swift_release();
      if (v25)
      {
        sub_1DC96ECAC();
        swift_allocError();
        *(_DWORD *)uint64_t v36 = v25;
        *(unsigned char *)(v36 + 4) = 0;
      }
      else
      {
        sub_1DC96ECF8();
        swift_allocError();
        *uint64_t v38 = 0;
      }
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_1DC881920(v18, v17);
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_64;
    default:
      sub_1DCB87998();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1DC8AF450(v18, v17);
      swift_bridgeObjectRetain();
      if (a2) {
        int v19 = e5rt_execution_stream_operation_retain_output_port();
      }
      else {
        int v19 = e5rt_execution_stream_operation_retain_input_port();
      }
      int v24 = v19;
      swift_release();
      if (v24)
      {
        sub_1DC96ECAC();
        swift_allocError();
        *(_DWORD *)uint64_t v35 = v24;
        *(unsigned char *)(v35 + 4) = 0;
      }
      else
      {
        sub_1DC96ECF8();
        swift_allocError();
        *uint64_t v37 = 0;
      }
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_1DC881920(v18, v17);
      swift_release();
      swift_release_n();
LABEL_64:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DC96CD54(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v16 = (void *)(a3 + 64);
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a3 + 64);
  int64_t v17 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v6)
  {
    unint64_t v7 = __clz(__rbit64(v6));
    goto LABEL_15;
  }
  uint64_t v8 = 1;
  if (v17 <= 1) {
    return swift_release();
  }
  unint64_t v9 = v16[1];
  if (!v9)
  {
    uint64_t v10 = 2;
    if (v17 > 2)
    {
      unint64_t v9 = v16[2];
      if (v9) {
        goto LABEL_13;
      }
      uint64_t v10 = 3;
      if (v17 <= 3) {
        return swift_release();
      }
      unint64_t v9 = v16[3];
      if (v9)
      {
LABEL_13:
        uint64_t v8 = v10;
        goto LABEL_14;
      }
      uint64_t v10 = 4;
      if (v17 > 4)
      {
        unint64_t v9 = v16[4];
        if (!v9)
        {
          while (1)
          {
            uint64_t v8 = v10 + 1;
            if (__OFADD__(v10, 1)) {
              break;
            }
            if (v8 >= v17) {
              return swift_release();
            }
            unint64_t v9 = v16[v8];
            ++v10;
            if (v9) {
              goto LABEL_14;
            }
          }
LABEL_29:
          __break(1u);
        }
        goto LABEL_13;
      }
    }
    return swift_release();
  }
LABEL_14:
  unint64_t v7 = __clz(__rbit64(v9)) + (v8 << 6);
LABEL_15:
  if (*(void *)(*(void *)(*(void *)(a3 + 56) + 8 * v7) + 16) >> 61)
  {
    __break(1u);
    __break(1u);
    goto LABEL_29;
  }
  sub_1DCB87998();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a2) {
    int v11 = e5rt_execution_stream_operation_retain_output_port();
  }
  else {
    int v11 = e5rt_execution_stream_operation_retain_input_port();
  }
  int v12 = v11;
  swift_release();
  if (v12)
  {
    sub_1DC96ECAC();
    swift_allocError();
    *(_DWORD *)uint64_t v13 = v12;
    *(unsigned char *)(v13 + 4) = 0;
  }
  else
  {
    sub_1DC96ECF8();
    swift_allocError();
    *uint64_t v14 = 0;
  }
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC96D128(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, void *), uint64_t (*a6)(void))
{
  void v14[2] = a1;
  char v15 = a2 & 1;
  uint64_t v11 = swift_bridgeObjectRetain();
  a5(v11, a4, v14);
  if (v6) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v13 = a6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v13;
  return result;
}

uint64_t sub_1DC96D1F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, char a7)
{
  uint64_t v17 = a4;
  unint64_t v18 = a5;
  char v14 = a7 & 1;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_1DC8AF450(a4, a5);
  sub_1DC96E780(&v17, a6, a2, a3, v14);
  unint64_t v15 = v18;
  if (v7)
  {
    sub_1DC881920(v17, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    *a1 = v17;
    a1[1] = v15;
  }
  return a2;
}

void sub_1DC96D2C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1DC987124();
    a4 = v14;
  }
  unint64_t v13 = *(void *)(a4 + 16);
  if (v13 >> 61)
  {
    __break(1u);
  }
  else
  {
    sub_1DC96BFD4(a5, a2, a3, a6 & 1, a4 + 32, a4 + 32 + 4 * v13);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      *a1 = a4;
    }
  }
}

uint64_t sub_1DC96D398(uint64_t a1, char a2, uint64_t a3)
{
  char v6 = a2 & 1;
  swift_retain();
  uint64_t result = sub_1DC966AC8(a3, a1, v6);
  if (v3) {
    return result;
  }
  uint64_t v8 = *(void *)(result + 16);
  if (!v8) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = swift_bridgeObjectRetain() + 64;
  while (2)
  {
    uint64_t v10 = *(void *)(v9 - 16);
    unint64_t v11 = *(void *)(v9 - 8);
    swift_bridgeObjectRetain();
    sub_1DC8AF450(v10, v11);
    swift_retain();
    uint64_t v12 = sub_1DC96AB94();
    switch(v11 >> 62)
    {
      case 1uLL:
        if (v10 >> 32 < (int)v10)
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          JUMPOUT(0x1DC96D638);
        }
        uint64_t v16 = v10 >> 32;
        sub_1DC8AF450(v10, v11);
        uint64_t v18 = sub_1DCB867D8();
        if (v18 && __OFSUB__((int)v10, sub_1DCB86808())) {
          goto LABEL_33;
        }
        uint64_t v14 = sub_1DCB867F8();
        if (!v18)
        {
          sub_1DC881920(v10, v11);
LABEL_24:
          if (v12) {
            goto LABEL_28;
          }
LABEL_25:
          swift_bridgeObjectRelease();
          sub_1DC881920(v10, v11);
          swift_release();
          v9 += 40;
          if (!--v8) {
            return swift_bridgeObjectRelease_n();
          }
          continue;
        }
        if (v14 >= v16 - (int)v10) {
          uint64_t v13 = v16 - (int)v10;
        }
        else {
          uint64_t v13 = v14;
        }
        sub_1DC881920(v10, v11);
LABEL_21:
        if (v13 == v12) {
          goto LABEL_25;
        }
LABEL_28:
        sub_1DC96ECAC();
        swift_allocError();
        *(_DWORD *)uint64_t v15 = 0;
        *(unsigned char *)(v15 + 4) = 1;
        swift_willThrow();
        swift_bridgeObjectRelease();
        sub_1DC881920(v10, v11);
        swift_release();
        return swift_bridgeObjectRelease_n();
      case 2uLL:
        uint64_t v21 = *(void *)(v10 + 16);
        uint64_t v19 = *(void *)(v10 + 24);
        swift_retain();
        swift_retain();
        uint64_t v17 = sub_1DCB867D8();
        if (v17 && __OFSUB__(v21, sub_1DCB86808())) {
          goto LABEL_34;
        }
        if (__OFSUB__(v19, v21)) {
          goto LABEL_32;
        }
        uint64_t v22 = v19 - v21;
        uint64_t v20 = sub_1DCB867F8();
        swift_release();
        swift_release();
        if (!v17) {
          goto LABEL_24;
        }
        if (v20 >= v22) {
          uint64_t v13 = v22;
        }
        else {
          uint64_t v13 = v20;
        }
        goto LABEL_21;
      case 3uLL:
        goto LABEL_24;
      default:
        uint64_t v13 = BYTE6(v11);
        goto LABEL_21;
    }
  }
}

uint64_t sub_1DC96D648(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (*(void *)(a3 + 16))
  {
    sub_1DC89886C();
    uint64_t v6 = sub_1DC9A4ACC(a3);
    if (v6 < 0 || v6 >= 1 << *(unsigned char *)(a3 + 32))
    {
      __break(1u);
    }
    else if ((*(void *)(a3 + 64 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) != 0)
    {
      if (*(_DWORD *)(a3 + 36) == v7)
      {
        sub_1DCB87998();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        if (a2) {
          int v8 = e5rt_execution_stream_operation_retain_output_port();
        }
        else {
          int v8 = e5rt_execution_stream_operation_retain_input_port();
        }
        int v9 = v8;
        swift_release();
        if (v9)
        {
          sub_1DC96ECAC();
          swift_allocError();
          *(_DWORD *)uint64_t v10 = v9;
          *(unsigned char *)(v10 + 4) = 0;
        }
        else
        {
          sub_1DC96ECF8();
          swift_allocError();
          *unint64_t v11 = 0;
        }
        swift_willThrow();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return swift_release();
      }
LABEL_26:
      __break(1u);
      __break(1u);
      __break(1u);
      __break(1u);
LABEL_27:
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v12) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = v4 + 56; ; i += 32)
  {
    uint64_t v14 = *(void *)(i - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v15 = sub_1DC96AB94();
    if (v3) {
      break;
    }
    unint64_t v16 = *(void *)(v14 + 16);
    if (v16 >> 61) {
      goto LABEL_27;
    }
    if (v15 != 4 * v16)
    {
      sub_1DC96ECAC();
      swift_allocError();
      *(_DWORD *)uint64_t v18 = 0;
      *(unsigned char *)(v18 + 4) = 1;
      swift_willThrow();
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v12) {
      return swift_bridgeObjectRelease_n();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return swift_release();
}

uint64_t sub_1DC96DB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_retain();
  uint64_t v8 = swift_bridgeObjectRetain();
  int v9 = sub_1DCB30830(v8);
  uint64_t v10 = sub_1DC96AFAC();
  if (v4)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  sub_1DC96A26C(v10);
  uint64_t v13 = sub_1DCB3077C(v12);
  sub_1DC96E0B8((uint64_t)v9, v13);
  char v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v16 = *a4;
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_1DCB30830(v17);
    uint64_t v19 = sub_1DC96AFAC();
    sub_1DC96A26C(v19);
    uint64_t v22 = sub_1DCB3077C(v21);
    sub_1DC96E0B8((uint64_t)v18, v22);
    char v24 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24)
    {
      sub_1DC96D398(a2, 0, a3);
      sub_1DC96D398(a2, 1, v16);
      sub_1DC96C094(a2, 0, a3);
      sub_1DC969DE0();
      sub_1DC96D128(a2, 1, a4, (uint64_t)sub_1DC96ED8C, (void (*)(uint64_t, uint64_t, void *))sub_1DC967944, (uint64_t (*)(void))sub_1DCAF2578);
      return swift_release();
    }
    sub_1DC96ECAC();
    swift_allocError();
    *(_DWORD *)uint64_t v20 = 2;
  }
  else
  {
    sub_1DC96ECAC();
    swift_allocError();
    *(_DWORD *)uint64_t v20 = 1;
  }
  *(unsigned char *)(v20 + 4) = 1;
  swift_willThrow();
  return swift_release();
}

void sub_1DC96DE28()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  swift_retain();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DCB30830(v5);
  uint64_t v7 = sub_1DC96AFAC();
  if (!v0)
  {
    sub_1DC96A26C(v7);
    uint64_t v9 = sub_1DCB3077C(v8);
    sub_1DC96E0B8((uint64_t)v6, v9);
    char v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v12 = *v2;
      uint64_t v13 = swift_bridgeObjectRetain();
      char v14 = sub_1DCB30830(v13);
      uint64_t v15 = sub_1DC96AFAC();
      sub_1DC96A26C(v15);
      uint64_t v18 = sub_1DCB3077C(v17);
      sub_1DC96E0B8((uint64_t)v14, v18);
      char v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20)
      {
        uint64_t v21 = sub_1DC96FA74();
        sub_1DC96D648(v21, v22, v23);
        sub_1DC96D648(v4, 1, v12);
        uint64_t v24 = sub_1DC96FA74();
        sub_1DC96CD54(v24, v25, v26);
        sub_1DC969DE0();
        sub_1DC96D128(v4, 1, v2, (uint64_t)sub_1DC96EE44, (void (*)(uint64_t, uint64_t, void *))sub_1DC967E34, (uint64_t (*)(void))sub_1DCAF26EC);
        goto LABEL_9;
      }
      sub_1DC96ECAC();
      sub_1DC883884();
      *(_DWORD *)uint64_t v16 = 2;
    }
    else
    {
      sub_1DC96ECAC();
      sub_1DC883884();
      *(_DWORD *)uint64_t v16 = 1;
    }
    *(unsigned char *)(v16 + 4) = 1;
    swift_willThrow();
LABEL_9:
    swift_release();
    goto LABEL_4;
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_4:
  sub_1DC88D674();
}

void sub_1DC96E0B8(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v3 = 0;
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v34 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v35 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  int64_t v36 = v3;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v19 = a1;
    char v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    sub_1DCB891A8();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    uint64_t v23 = sub_1DCB891F8();
    uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v25 = v23 & ~v24;
    if (((*(void *)(v8 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_45;
    }
    uint64_t v26 = *(void *)(a2 + 48);
    uint64_t v27 = (void *)(v26 + 16 * v25);
    BOOL v28 = *v27 == v22 && v27[1] == v21;
    if (!v28 && (sub_1DCB89018() & 1) == 0)
    {
      uint64_t v29 = ~v24;
      for (unint64_t j = v25 + 1; ; unint64_t j = v31 + 1)
      {
        uint64_t v31 = j & v29;
        if (((*(void *)(v8 + (((j & v29) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v29)) & 1) == 0) {
          break;
        }
        uint64_t v32 = (void *)(v26 + 16 * v31);
        BOOL v33 = *v32 == v22 && v32[1] == v21;
        if (v33 || (sub_1DCB89018() & 1) != 0) {
          goto LABEL_34;
        }
      }
LABEL_45:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    a1 = v19;
    uint64_t v3 = v36;
    if (v7) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v11 >= v35) {
      return;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v11);
    int64_t v13 = v3 + 1;
    if (!v12)
    {
      sub_1DC96FAAC();
      if (v14 == v15) {
        return;
      }
      sub_1DC96FAA0();
      if (!v12)
      {
        sub_1DC96FAAC();
        if (v14 == v15) {
          return;
        }
        sub_1DC96FAA0();
        if (!v12)
        {
          sub_1DC96FAAC();
          if (v14 == v15) {
            return;
          }
          sub_1DC96FAA0();
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v7 = (v12 - 1) & v12;
    int64_t v36 = v13;
  }
  int64_t v17 = v16 + 4;
  if (v17 >= v35) {
    return;
  }
  unint64_t v12 = *(void *)(v34 + 8 * v17);
  if (v12)
  {
    int64_t v13 = v17;
    goto LABEL_27;
  }
  while (!__OFADD__(v17, 1))
  {
    sub_1DC96FAAC();
    if (v14 == v15) {
      return;
    }
    sub_1DC96FAA0();
    int64_t v17 = v18 + 1;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_48:
  __break(1u);
}

uint64_t sub_1DC96E340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC9672F4(a2, (void (*)(void *, uint64_t *, void *))sub_1DC96E428);
  if (!v2)
  {
    uint64_t v5 = sub_1DCAF2538(v4);
    swift_bridgeObjectRelease();
    sub_1DC967458(v5, (void (*)(uint64_t *, long long *, uint64_t *))sub_1DC96E4A8);
    sub_1DCAF2578();
    uint64_t v3 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1DC96E428(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  return sub_1DC96BEFC(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
}

uint64_t sub_1DC96E448(void *a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = a3[1];
  *a1 = *a3;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DC96AB94();
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t result = MEMORY[0x1E01A5AE0](v6);
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_1DC96E4A8(void *a1, uint64_t *a2, void *a3)
{
  return sub_1DC96E448(a1, a2, a3);
}

uint64_t sub_1DC96E4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9682F0(a2, a3, a1);
}

uint64_t sub_1DC96E4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a6 + 16))(a3, a5, a6);
  if (!v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DC969C30();
    type metadata accessor for E5RTExecutionStreamOperation();
    uint64_t result = sub_1DC8BABC0();
    *(void *)(result + 16) = v8;
  }
  return result;
}

uint64_t sub_1DC96E5A4(uint64_t a1)
{
  *(void *)(v1 + 16) = swift_slowAlloc();
  *(void *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_1DC96E5D4(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA1A08);
  uint64_t result = sub_1DCB88CD8();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t result = v16[1];
    uint64_t v18 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8 * i) + 16);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v19 = (void *)(v3[6] + 16 * i);
    *uint64_t v19 = v17;
    v19[1] = result;
    *(void *)(v3[7] + 8 * i) = v18;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v3[2] = v22;
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DC96E780(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  char v9 = a5 & 1;
  uint64_t v11 = *a1;
  unint64_t v10 = a1[1];
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  switch(v10 >> 62)
  {
    case 1uLL:
      uint64_t v20 = a3;
      char v21 = v9;
      uint64_t v13 = v10 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1DCBC1AB0;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v14 = v11 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v14 < (int)v11) {
        goto LABEL_15;
      }
      if (sub_1DCB867D8() && __OFSUB__((int)v11, sub_1DCB86808())) {
        goto LABEL_16;
      }
      sub_1DCB86818();
      swift_allocObject();
      uint64_t v18 = sub_1DCB867C8();
      swift_release();
      uint64_t v13 = v18;
LABEL_11:
      if (v14 < (int)v11)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1DC96EB78((int)v11, v11 >> 32, v13, a2, v20, a4, v21);
      swift_bridgeObjectRelease();
      swift_release_n();
      *a1 = v11;
      a1[1] = v13 | 0x4000000000000000;
LABEL_13:
      swift_release_n();
      return swift_bridgeObjectRelease_n();
    case 2uLL:
      *(void *)&long long v22 = v11;
      *((void *)&v22 + 1) = v10 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1DCB86A38();
      uint64_t v15 = v10 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)(v11 + 16);
      uint64_t v16 = *(void *)(v11 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1DC96EB78(v17, v16, v15, a2, a3, a4, v9);
      swift_bridgeObjectRelease();
      swift_release_n();
      *a1 = v11;
      a1[1] = v15 | 0x8000000000000000;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v22 + 7) = 0;
      *(void *)&long long v22 = 0;
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      sub_1DC96EC48((uint64_t)&v22, 0, a2, a3, a4, v9);
      swift_release();
      goto LABEL_13;
    default:
      *(void *)&long long v22 = v11;
      WORD4(v22) = v10;
      BYTE10(v22) = BYTE2(v10);
      BYTE11(v22) = BYTE3(v10);
      BYTE12(v22) = BYTE4(v10);
      BYTE13(v22) = BYTE5(v10);
      BYTE14(v22) = BYTE6(v10);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      sub_1DC96EC48((uint64_t)&v22, BYTE6(v10), a2, a3, a4, v9);
      swift_release();
      unint64_t v12 = DWORD2(v22) | ((unint64_t)BYTE12(v22) << 32) | ((unint64_t)BYTE13(v22) << 40) | ((unint64_t)BYTE14(v22) << 48);
      *a1 = v22;
      a1[1] = v12;
      goto LABEL_13;
  }
}

uint64_t sub_1DC96EB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = sub_1DCB867D8();
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v14 = result;
  uint64_t result = sub_1DCB86808();
  uint64_t v15 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  BOOL v16 = __OFSUB__(a2, a1);
  uint64_t v17 = a2 - a1;
  if (v16)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  char v18 = a7 & 1;
  uint64_t v19 = sub_1DCB867F8();
  if (v19 >= v17) {
    uint64_t v20 = v17;
  }
  else {
    uint64_t v20 = v19;
  }
  sub_1DC96BFD4(a4, a5, a6, v18, v14 + v15, v14 + v15 + v20);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DC96EC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return swift_release();
}

unint64_t sub_1DC96ECAC()
{
  unint64_t result = qword_1EAAA61A0;
  if (!qword_1EAAA61A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA61A0);
  }
  return result;
}

unint64_t sub_1DC96ECF8()
{
  unint64_t result = qword_1EAAA19F0;
  if (!qword_1EAAA19F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA19F0);
  }
  return result;
}

uint64_t sub_1DC96ED44(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = sub_1DC96D1F8(a2, *(void *)a3, *(void *)(a3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24), a4, a5 & 1);
  if (!v5)
  {
    *a1 = result;
    a1[1] = v8;
  }
  return result;
}

uint64_t sub_1DC96ED8C(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_1DC96ED44(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
}

unint64_t sub_1DC96EDAC()
{
  unint64_t result = qword_1EAAA19F8;
  if (!qword_1EAAA19F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA19F8);
  }
  return result;
}

void sub_1DC96EDF8(void *a1, void *a2, uint64_t *a3, uint64_t a4, char a5)
{
  sub_1DC96D2C0(a2, *a3, a3[1], a3[2], a4, a5 & 1);
  if (!v5)
  {
    *a1 = v7;
    a1[1] = v8;
  }
}

void sub_1DC96EE44(void *a1, void *a2, uint64_t *a3)
{
  sub_1DC96EDF8(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
}

void type metadata accessor for E5RTTensorDescriptorComponentDatatype()
{
}

uint64_t sub_1DC96EE78(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC96EE94(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 4) = v2;
  return result;
}

void type metadata accessor for E5RTUtils.DomainError()
{
}

unint64_t sub_1DC96EEC4()
{
  unint64_t result = qword_1EAAA1A10;
  if (!qword_1EAAA1A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A10);
  }
  return result;
}

unint64_t sub_1DC96EF14()
{
  unint64_t result = qword_1EAAA1A18;
  if (!qword_1EAAA1A18)
  {
    sub_1DC8863A8(&qword_1EAAA1A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A18);
  }
  return result;
}

unint64_t sub_1DC96EF6C()
{
  unint64_t result = qword_1EAAA1A28;
  if (!qword_1EAAA1A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A28);
  }
  return result;
}

unint64_t sub_1DC96EFB8()
{
  unint64_t result = qword_1EAAA1A60;
  if (!qword_1EAAA1A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A60);
  }
  return result;
}

unint64_t sub_1DC96F004()
{
  unint64_t result = qword_1EAAA1A68;
  if (!qword_1EAAA1A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A68);
  }
  return result;
}

unint64_t sub_1DC96F050()
{
  unint64_t result = qword_1EAAA1A70;
  if (!qword_1EAAA1A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A70);
  }
  return result;
}

unint64_t sub_1DC96F09C()
{
  unint64_t result = qword_1EAAA1A78;
  if (!qword_1EAAA1A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A78);
  }
  return result;
}

unint64_t sub_1DC96F0E8()
{
  unint64_t result = qword_1EAAA1A80;
  if (!qword_1EAAA1A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A80);
  }
  return result;
}

unint64_t sub_1DC96F134()
{
  unint64_t result = qword_1EAAA1A88;
  if (!qword_1EAAA1A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1A88);
  }
  return result;
}

unsigned char *_s13SoundAnalysis37E5RTTensorDescriptorComponentDatatypeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC96F24CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.CodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.CodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.UintCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.UintCodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.IntCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.IntCodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.UnormCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.UnormCodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.SnormCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.SnormCodingKeys;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype.FloatCodingKeys()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype.FloatCodingKeys;
}

void type metadata accessor for E5RTErrorCode()
{
}

unint64_t sub_1DC96F2E4()
{
  unint64_t result = qword_1EAAA1AC0;
  if (!qword_1EAAA1AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1AC0);
  }
  return result;
}

unint64_t sub_1DC96F334()
{
  unint64_t result = qword_1EAAA1AC8;
  if (!qword_1EAAA1AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1AC8);
  }
  return result;
}

unint64_t sub_1DC96F384()
{
  unint64_t result = qword_1EAAA1AD0;
  if (!qword_1EAAA1AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1AD0);
  }
  return result;
}

unint64_t sub_1DC96F3D4()
{
  unint64_t result = qword_1EAAA1AD8;
  if (!qword_1EAAA1AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1AD8);
  }
  return result;
}

unint64_t sub_1DC96F424()
{
  unint64_t result = qword_1EAAA1AE0;
  if (!qword_1EAAA1AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1AE0);
  }
  return result;
}

unint64_t sub_1DC96F474()
{
  unint64_t result = qword_1EAAA1AE8;
  if (!qword_1EAAA1AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1AE8);
  }
  return result;
}

unint64_t sub_1DC96F4C4()
{
  unint64_t result = qword_1EAAA1AF0;
  if (!qword_1EAAA1AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1AF0);
  }
  return result;
}

unint64_t sub_1DC96F514()
{
  unint64_t result = qword_1EAAA1AF8;
  if (!qword_1EAAA1AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1AF8);
  }
  return result;
}

unint64_t sub_1DC96F564()
{
  unint64_t result = qword_1EAAA1B00;
  if (!qword_1EAAA1B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B00);
  }
  return result;
}

unint64_t sub_1DC96F5B4()
{
  unint64_t result = qword_1EAAA1B08;
  if (!qword_1EAAA1B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B08);
  }
  return result;
}

unint64_t sub_1DC96F604()
{
  unint64_t result = qword_1EAAA1B10;
  if (!qword_1EAAA1B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B10);
  }
  return result;
}

unint64_t sub_1DC96F654()
{
  unint64_t result = qword_1EAAA1B18;
  if (!qword_1EAAA1B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B18);
  }
  return result;
}

unint64_t sub_1DC96F6A4()
{
  unint64_t result = qword_1EAAA1B20;
  if (!qword_1EAAA1B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B20);
  }
  return result;
}

unint64_t sub_1DC96F6F4()
{
  unint64_t result = qword_1EAAA1B28;
  if (!qword_1EAAA1B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B28);
  }
  return result;
}

unint64_t sub_1DC96F740()
{
  unint64_t result = qword_1EAAA1B38;
  if (!qword_1EAAA1B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B38);
  }
  return result;
}

uint64_t sub_1DC96F78C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA1B40);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for E5RTErrorCode.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC96F88CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTErrorCode.CodingKeys()
{
  return &type metadata for E5RTErrorCode.CodingKeys;
}

unint64_t sub_1DC96F8C8()
{
  unint64_t result = qword_1EAAA1B60;
  if (!qword_1EAAA1B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B60);
  }
  return result;
}

unint64_t sub_1DC96F918()
{
  unint64_t result = qword_1EAAA1B68;
  if (!qword_1EAAA1B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1B68);
  }
  return result;
}

unint64_t sub_1DC96F968()
{
  unint64_t result = qword_1EAAA1B70[0];
  if (!qword_1EAAA1B70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA1B70);
  }
  return result;
}

uint64_t sub_1DC96F9BC()
{
  return sub_1DCB88D58();
}

void sub_1DC96F9DC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a2 = v2;
  *(unsigned char *)(a2 + 4) = 0;
}

uint64_t sub_1DC96F9EC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a2 = v2;
  *(unsigned char *)(a2 + 4) = 0;
  return swift_willThrow();
}

uint64_t sub_1DC96FA08()
{
  return sub_1DCB88E88();
}

void sub_1DC96FA28(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
}

void sub_1DC96FA40(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DC96FA5C()
{
  return v0;
}

uint64_t sub_1DC96FA74()
{
  return v0;
}

uint64_t sub_1DC96FAB8@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *(_DWORD *)a1 = a2;
  *(unsigned char *)(a1 + 4) = 1;
  return swift_willThrow();
}

uint64_t sub_1DC96FAD8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC96FB3C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1DC96FB6C()
{
  sub_1DC96FB3C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObjectRecycler()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC96FBB8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC96FC00(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DC96FC58(v1, a1, &v5);
  return v5;
}

void sub_1DC96FC58(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)a1 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  char v9 = (char *)&v14 - v8;
  unint64_t v10 = *(void **)(v7 + 16);
  type metadata accessor for WrapperNSHashableShallowCopying();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  id v11 = v10;
  id v12 = sub_1DC9252F4((uint64_t)v9);
  id v13 = objc_msgSend(v11, sel_objectForKey_, v12);

  *a3 = v13;
}

uint64_t sub_1DC96FDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DC96FE84(a1, (uint64_t)v3, a2);
  swift_unknownObjectRelease();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v6 + 80) - 8) + 8);

  return v8(a2);
}

void sub_1DC96FE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)a2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v14 - v7;
  unint64_t v10 = *(void **)(v9 + 16);
  type metadata accessor for WrapperNSHashableShallowCopying();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  if (a1)
  {
    swift_unknownObjectRetain_n();
    id v11 = v10;
    id v12 = sub_1DC9252F4((uint64_t)v8);
    objc_msgSend(v11, sel_setObject_forKey_, a1, v12);

    swift_unknownObjectRelease_n();
  }
  else
  {
    id v13 = v10;
    id v12 = sub_1DC9252F4((uint64_t)v8);
    objc_msgSend(v13, sel_removeObjectForKey_, v12);
  }
}

uint64_t sub_1DC970018()
{
  return v0;
}

uint64_t sub_1DC970038()
{
  sub_1DC970018();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StrongToWeakDictionary()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC970084@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC96FC00(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DC9700B0(uint64_t *a1, uint64_t a2)
{
  return sub_1DC96FDA8(*a1, a2);
}

uint64_t sub_1DC9700D8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  swift_retain();
  uint64_t v4 = v3(ObjectType, v1);
  swift_release();
  return v4;
}

uint64_t sub_1DC970154(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_1DC970194()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

uint64_t sub_1DC9701E0()
{
  sub_1DC971F4C();
  swift_getObjectType();
  sub_1DC971F3C();
  sub_1DC971F7C();
  return v0();
}

uint64_t sub_1DC97023C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t sub_1DC970288()
{
  return sub_1DC971790(MEMORY[0x1E4FBC8F8]);
}

uint64_t type metadata accessor for AnySNMLModel()
{
  return self;
}

uint64_t sub_1DC9702D0()
{
  return sub_1DC9701E0();
}

uint64_t sub_1DC9702E8@<X0>(_OWORD *a1@<X8>)
{
  *a1 = *(_OWORD *)(*(void *)v1 + 16);
  return swift_unknownObjectRetain();
}

uint64_t sub_1DC9702FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC970154(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1DC97032C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1DC87E988((uint64_t *)&unk_1EAA9CBB0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DCBB93B0;
  uint64_t v3 = MEMORY[0x1E4FBB5C8];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v2 + 64) = v3;
  *(void *)(v2 + 32) = v1;

  return sub_1DCB87958();
}

id sub_1DC9703A8()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_modelDescription);

  return v1;
}

uint64_t type metadata accessor for SNMLModelAdapter()
{
  return self;
}

id sub_1DC97040C(uint64_t a1, uint64_t a2)
{
  return sub_1DC970494(a1, a2);
}

uint64_t sub_1DC970424()
{
  sub_1DC87E988((uint64_t *)&unk_1EAA9CBB0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1DCBB93B0;
  uint64_t v2 = MEMORY[0x1E4FBB5C8];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 32) = v0;

  return sub_1DCB87958();
}

id sub_1DC970494(uint64_t a1, uint64_t a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)(v2 + 16);
  v9[0] = 0;
  id v5 = objc_msgSend(v4, sel_predictionFromFeatures_options_error_, a1, a2, v9);
  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1DCB86898();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1DC970554()
{
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_1DC97057C()
{
  sub_1DC970554();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNMLCustomModel()
{
  return self;
}

id sub_1DC9705D8()
{
  return *(id *)(v0 + 24);
}

uint64_t sub_1DC9705E0()
{
  uint64_t v1 = v0;
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = qword_1EAA9C658;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DCB86FE8();
  sub_1DC89F57C(v5, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain();
  id v6 = sub_1DCB86FC8();
  os_log_type_t v7 = sub_1DCB88488();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v11 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v3, v2, &v11);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v6, v7, "Locked Model destroyed with id %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v9, -1, -1);
    MEMORY[0x1E01A99C0](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1DC9707B0()
{
  sub_1DC9705E0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNMLLockedModel()
{
  return self;
}

uint64_t sub_1DC970808()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 48) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  os_unfair_lock_unlock(v1);
  swift_release();
  return v4;
}

uint64_t sub_1DC97088C()
{
  sub_1DC971F4C();
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 48) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  swift_getObjectType();
  sub_1DC971F3C();
  sub_1DC971F7C();
  uint64_t v3 = v2();
  os_unfair_lock_unlock(v1);
  swift_release();
  return v3;
}

uint64_t sub_1DC970928()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DC97095C()
{
  return sub_1DC97088C();
}

uint64_t sub_1DC9709B8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13SoundAnalysis13SNMLModelObjC_model + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

uint64_t sub_1DC970A04()
{
  sub_1DC971F4C();
  swift_getObjectType();
  sub_1DC971F3C();
  sub_1DC971F7C();
  return v0();
}

void sub_1DC970B3C()
{
}

uint64_t type metadata accessor for SNMLModelObjC()
{
  return self;
}

uint64_t sub_1DC970BB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6544746F6E6E6163 && a2 == 0xEC00000065646F63;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E45746F6E6E6163 && a2 == 0xEC00000065646F63)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC970CCC(char a1)
{
  if (a1) {
    return 0x6E45746F6E6E6163;
  }
  else {
    return 0x6544746F6E6E6163;
  }
}

uint64_t sub_1DC970D04(void *a1, char a2)
{
  sub_1DC87E988(&qword_1EAAA1CC8);
  sub_1DC89D4E0();
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  uint64_t v23 = sub_1DC87E988(&qword_1EAAA1CD0);
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC8A22D0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA1CD8);
  sub_1DC89D4E0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1DC8A22D0();
  uint64_t v20 = v19 - v18;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC971AEC();
  sub_1DCB892B8();
  char v21 = (uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
  if (a2)
  {
    sub_1DC971B38();
    sub_1DCB88E88();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v7, v25);
  }
  else
  {
    sub_1DC971B84();
    sub_1DCB88E88();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v23);
  }
  return (*v21)(v20, v14);
}

uint64_t sub_1DC970F24(uint64_t a1)
{
  uint64_t v37 = sub_1DC87E988(&qword_1EAAA1C90);
  sub_1DC89D4E0();
  uint64_t v35 = v2;
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA1C98);
  sub_1DC89D4E0();
  uint64_t v34 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC8A22D0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA1CA0);
  sub_1DC89D4E0();
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1DC8A22D0();
  uint64_t v18 = v17 - v16;
  sub_1DC881A8C((void *)a1, *(void *)(a1 + 24));
  sub_1DC971AEC();
  sub_1DCB89298();
  if (v38) {
    goto LABEL_8;
  }
  uint64_t v39 = a1;
  uint64_t v19 = sub_1DCB88E58();
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20
    || (a1 = *(unsigned __int8 *)(v19 + 32),
        sub_1DC9CFE4C(1, v20, v19, v19 + 32, 0, (2 * v20) | 1),
        uint64_t v22 = v21,
        unint64_t v24 = v23,
        swift_bridgeObjectRelease(),
        v22 != v24 >> 1))
  {
    uint64_t v27 = v18;
    uint64_t v28 = sub_1DCB88B18();
    swift_allocError();
    uint64_t v30 = v29;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v30 = &type metadata for SNMLModelHashableUncodableWrapper.DomainError;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v13);
    a1 = v39;
LABEL_8:
    sub_1DC8818D0(a1);
    return a1;
  }
  if (a1)
  {
    sub_1DC971B38();
    sub_1DC971F5C();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v6, v37);
    swift_unknownObjectRelease();
    uint64_t v25 = sub_1DC971F28();
    v26(v25);
    a1 = a1;
  }
  else
  {
    sub_1DC971B84();
    sub_1DC971F5C();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v7);
    swift_unknownObjectRelease();
    uint64_t v32 = sub_1DC971F28();
    v33(v32);
  }
  sub_1DC8818D0(v39);
  return a1;
}

uint64_t sub_1DC9712EC(uint64_t a1)
{
  unint64_t v2 = sub_1DC971B84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC971328(uint64_t a1)
{
  unint64_t v2 = sub_1DC971B84();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC971364(uint64_t a1)
{
  unint64_t v2 = sub_1DC971B38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9713A0(uint64_t a1)
{
  unint64_t v2 = sub_1DC971B38();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9713DC()
{
  return sub_1DC888600();
}

uint64_t sub_1DC9713F8()
{
  return sub_1DC970CCC(*v0);
}

uint64_t sub_1DC971400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC970BB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC971428(uint64_t a1)
{
  unint64_t v2 = sub_1DC971AEC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC971464(uint64_t a1)
{
  unint64_t v2 = sub_1DC971AEC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9714A0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DC970F24(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1DC9714D0(void *a1)
{
  return sub_1DC970D04(a1, *v1);
}

uint64_t sub_1DC9714EC(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_1DC971520(uint64_t a1)
{
  return sub_1DC97156C(a1);
}

uint64_t sub_1DC97156C(uint64_t a1)
{
  sub_1DC9719E0();
  swift_allocError();
  *uint64_t v2 = 0;
  swift_willThrow();
  sub_1DC8818D0(a1);
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1DC971608()
{
  sub_1DC9719E0();
  swift_allocError();
  *uint64_t v0 = 1;
  return swift_willThrow();
}

uint64_t sub_1DC971658(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(*(void *)(a2 + 16) + 24);
  uint64_t v9 = swift_getObjectType();
  if (v5 == (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v9, v8) && v7 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1DCB89018();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1DC971724()
{
  sub_1DC9700D8();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC971774()
{
  return sub_1DC971790(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1DC971790(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNMLModelHashableUncodableWrapper()
{
  return self;
}

uint64_t sub_1DC971800()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC97185C()
{
  return sub_1DC971800();
}

uint64_t sub_1DC971880()
{
  return sub_1DC971724();
}

uint64_t sub_1DC9718A4()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC971900(uint64_t a1)
{
  return sub_1DC971520(a1);
}

uint64_t sub_1DC971918()
{
  return sub_1DC971608();
}

uint64_t sub_1DC971930@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
  return swift_retain();
}

uint64_t sub_1DC971940@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9714EC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DC97196C(uint64_t *a1, uint64_t *a2)
{
  return sub_1DC971658(*a1, *a2) & 1;
}

unint64_t sub_1DC971994()
{
  unint64_t result = qword_1EAAA1C70;
  if (!qword_1EAAA1C70)
  {
    type metadata accessor for SNMLModelHashableUncodableWrapper();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1C70);
  }
  return result;
}

unint64_t sub_1DC9719E0()
{
  unint64_t result = qword_1EAAA1C80;
  if (!qword_1EAAA1C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1C80);
  }
  return result;
}

uint64_t sub_1DC971A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AnySNMLModel();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a4;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v6;
  return result;
}

ValueMetadata *type metadata accessor for SNMLModelHashableUncodableWrapper.DomainError()
{
  return &type metadata for SNMLModelHashableUncodableWrapper.DomainError;
}

unint64_t sub_1DC971AA0()
{
  unint64_t result = qword_1EAAA1C88;
  if (!qword_1EAAA1C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1C88);
  }
  return result;
}

unint64_t sub_1DC971AEC()
{
  unint64_t result = qword_1EAAA1CA8;
  if (!qword_1EAAA1CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1CA8);
  }
  return result;
}

unint64_t sub_1DC971B38()
{
  unint64_t result = qword_1EAAA1CB8;
  if (!qword_1EAAA1CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1CB8);
  }
  return result;
}

unint64_t sub_1DC971B84()
{
  unint64_t result = qword_1EAAA1CC0;
  if (!qword_1EAAA1CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1CC0);
  }
  return result;
}

unsigned char *_s13SoundAnalysis33SNMLModelHashableUncodableWrapperC11DomainErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC971C9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNMLModelHashableUncodableWrapper.DomainError.CodingKeys()
{
  return &type metadata for SNMLModelHashableUncodableWrapper.DomainError.CodingKeys;
}

ValueMetadata *type metadata accessor for SNMLModelHashableUncodableWrapper.DomainError.CannotDecodeCodingKeys()
{
  return &type metadata for SNMLModelHashableUncodableWrapper.DomainError.CannotDecodeCodingKeys;
}

ValueMetadata *type metadata accessor for SNMLModelHashableUncodableWrapper.DomainError.CannotEncodeCodingKeys()
{
  return &type metadata for SNMLModelHashableUncodableWrapper.DomainError.CannotEncodeCodingKeys;
}

unint64_t sub_1DC971CF8()
{
  unint64_t result = qword_1EAAA1CE0;
  if (!qword_1EAAA1CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1CE0);
  }
  return result;
}

unint64_t sub_1DC971D48()
{
  unint64_t result = qword_1EAAA1CE8;
  if (!qword_1EAAA1CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1CE8);
  }
  return result;
}

unint64_t sub_1DC971D98()
{
  unint64_t result = qword_1EAAA1CF0;
  if (!qword_1EAAA1CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1CF0);
  }
  return result;
}

unint64_t sub_1DC971DE8()
{
  unint64_t result = qword_1EAAA1CF8;
  if (!qword_1EAAA1CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1CF8);
  }
  return result;
}

unint64_t sub_1DC971E38()
{
  unint64_t result = qword_1EAAA1D00;
  if (!qword_1EAAA1D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1D00);
  }
  return result;
}

unint64_t sub_1DC971E88()
{
  unint64_t result = qword_1EAAA1D08;
  if (!qword_1EAAA1D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1D08);
  }
  return result;
}

unint64_t sub_1DC971ED8()
{
  unint64_t result = qword_1EAAA1D10;
  if (!qword_1EAAA1D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1D10);
  }
  return result;
}

uint64_t sub_1DC971F28()
{
  return v0;
}

uint64_t sub_1DC971F3C()
{
  return v0;
}

uint64_t sub_1DC971F5C()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DC971F88()
{
  return swift_getWitnessTable();
}

void sub_1DC971FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1DC897B8C();
    uint64_t v5 = (unint64_t *)(a1 + 32);
    while (1)
    {
      unint64_t v7 = *v5++;
      unint64_t v6 = v7;
      if ((v7 & 0x8000000000000000) != 0) {
        break;
      }
      if (v6 >= *(void *)(a2 + 16)) {
        goto LABEL_11;
      }
      uint64_t v8 = (uint64_t *)(a2 + 32 + 16 * v6);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v12 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1) {
        sub_1DC897B8C();
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v13 = v14 + 16 * v11;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      if (!--v3) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

void sub_1DC9720F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1DC897DCC();
    uint64_t v19 = a3 + 32;
    uint64_t v20 = a2 + 32;
    unint64_t v7 = (unint64_t *)(a1 + 40);
    uint64_t v21 = a2;
    uint64_t v22 = a3;
    while (1)
    {
      unint64_t v8 = *(v7 - 1);
      if ((v8 & 0x8000000000000000) != 0) {
        break;
      }
      if (v8 >= *(void *)(a2 + 16)) {
        goto LABEL_12;
      }
      unint64_t v9 = *v7;
      if ((*v7 & 0x8000000000000000) != 0) {
        goto LABEL_13;
      }
      if (v9 >= *(void *)(a3 + 16)) {
        goto LABEL_14;
      }
      uint64_t v10 = (uint64_t *)(v20 + 16 * v8);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      uint64_t v13 = (uint64_t *)(v19 + 16 * v9);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      unint64_t v16 = *(void *)(v23 + 16);
      unint64_t v17 = *(void *)(v23 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 >= v17 >> 1) {
        sub_1DC897DCC();
      }
      v7 += 2;
      *(void *)(v23 + 16) = v16 + 1;
      uint64_t v18 = (void *)(v23 + 32 * v16);
      v18[4] = v11;
      v18[5] = v12;
      v18[6] = v15;
      v18[7] = v14;
      --v5;
      a2 = v21;
      a3 = v22;
      if (!v5) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1DC972278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v81 = sub_1DC87E988(&qword_1EAAA1D20);
  uint64_t v8 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v10 = &v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA1D28);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v86 = &v56[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v64 = &v56[-v14];
  uint64_t v15 = sub_1DC87E988(&qword_1EAAA1D30);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v67 = &v56[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  char v61 = &v56[-v19];
  if (a1 == a2) {
    goto LABEL_2;
  }
  if (a2 < a1) {
    goto LABEL_37;
  }
  uint64_t v63 = a3 + 32;
  uint64_t v80 = (void (**)(unsigned char *, uint64_t))(v8 + 8);
  int v71 = (void (**)(unsigned char *, uint64_t))(v18 + 8);
  int v72 = (void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 32);
  uint64_t v60 = MEMORY[0x1E4FBC860];
  uint64_t v58 = (uint64_t *)(a4 + 40);
  unint64_t v75 = 0x80000001DCB93DB0;
  unint64_t v20 = a1;
  uint64_t v73 = a4;
  uint64_t v57 = a3;
  uint64_t v62 = a2;
  uint64_t v59 = a1;
  uint64_t v66 = v10;
LABEL_5:
  if ((uint64_t)v20 < a2)
  {
    if (a1 < 0) {
      goto LABEL_35;
    }
    if (v20 >= *(void *)(a3 + 16)) {
      goto LABEL_36;
    }
    unint64_t v65 = v20;
    uint64_t v21 = (uint64_t *)(v63 + 16 * v20);
    uint64_t v22 = v21[1];
    uint64_t v82 = *v21;
    uint64_t v83 = v22;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1DC87E988(&qword_1EAAA1D38);
    sub_1DCB86C88();
    unint64_t v23 = sub_1DC97571C();
    unint64_t v24 = sub_1DC975768();
    uint64_t v25 = v81;
    unint64_t v77 = v24;
    unint64_t v78 = v23;
    sub_1DCB87848();
    uint64_t v26 = v25;
    uint64_t v27 = (uint64_t)v64;
    uint64_t v76 = *v80;
    v76(v10, v26);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v27, 1, v15) == 1)
    {
      sub_1DC9757BC(v27);
      swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v48 = v65;
      a2 = v62;
      goto LABEL_24;
    }
    uint64_t v28 = v61;
    int v70 = *v72;
    v70(v61, v27, v15);
    swift_getKeyPath();
    sub_1DCB86C98();
    uint64_t v29 = v73;
    swift_release();
    uint64_t v69 = MEMORY[0x1E01A69A0](v82, v83, v84, v85);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v68 = *v71;
    v68(v28, v15);
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void *)(v29 + 16);
    if (!v32)
    {
      swift_bridgeObjectRelease();
      a1 = v59;
      goto LABEL_23;
    }
    uint64_t v74 = v31;
    swift_bridgeObjectRetain();
    unint64_t v33 = 0;
    uint64_t v34 = v58;
    while (1)
    {
      if (v33 >= *(void *)(v29 + 16))
      {
        __break(1u);
        break;
      }
      uint64_t v35 = *v34;
      uint64_t v82 = *(v34 - 1);
      uint64_t v83 = v35;
      swift_bridgeObjectRetain();
      sub_1DCB86C88();
      uint64_t v36 = v81;
      sub_1DCB87848();
      uint64_t v37 = v36;
      uint64_t v38 = (uint64_t)v86;
      v76(v10, v37);
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v38, 1, v15) == 1)
      {
        sub_1DC9757BC(v38);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v39 = v32;
        uint64_t v40 = v15;
        int v41 = v67;
        v70(v67, v38, v40);
        swift_getKeyPath();
        sub_1DCB86C98();
        swift_release();
        uint64_t v42 = MEMORY[0x1E01A69A0](v82, v83, v84, v85);
        uint64_t v44 = v43;
        swift_bridgeObjectRelease();
        unint64_t v45 = v41;
        uint64_t v15 = v40;
        v68(v45, v40);
        swift_bridgeObjectRelease();
        if (v42 == v69 && v44 == v74)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v10 = v66;
          goto LABEL_28;
        }
        char v47 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        uint64_t v29 = v73;
        uint64_t v32 = v39;
        uint64_t v10 = v66;
        if (v47)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_28:
          uint64_t v49 = v60;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          a2 = v62;
          a1 = v59;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1DCA73168();
            uint64_t v49 = v54;
          }
          uint64_t v60 = v49;
          unint64_t v51 = *(void *)(v49 + 16);
          unint64_t v48 = v65;
          if (v51 >= *(void *)(v49 + 24) >> 1)
          {
            sub_1DCA73168();
            unint64_t v48 = v65;
            uint64_t v60 = v55;
          }
          uint64_t v52 = v60;
          *(void *)(v60 + 16) = v51 + 1;
          uint64_t v53 = v52 + 16 * v51;
          *(void *)(v53 + 32) = v33;
          *(void *)(v53 + 40) = v48;
          a3 = v57;
LABEL_24:
          unint64_t v20 = v48 + 1;
          if (v20 == a2)
          {
LABEL_2:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_5;
        }
      }
      ++v33;
      v34 += 2;
      if (v32 == v33)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v57;
        a2 = v62;
        a1 = v59;
        unint64_t v48 = v65;
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t sub_1DC9729F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC972AF8(char a1)
{
  if (a1) {
    return 0x74616E6974736564;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_1DC972B34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737475706E69 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7374757074756FLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DC972C7C(char a1)
{
  if (!a1) {
    return 0x737475706E69;
  }
  if (a1 == 1) {
    return 0x7374757074756FLL;
  }
  return 0x6B63616264656566;
}

uint64_t sub_1DC972CD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74757074756FLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DC972E10(char a1)
{
  if (!a1) {
    return 0x7475706E69;
  }
  if (a1 == 1) {
    return 0x74757074756FLL;
  }
  return 0x6B63616264656566;
}

uint64_t sub_1DC972E60()
{
  return sub_1DC894504();
}

BOOL sub_1DC972E68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC8884D0(*a1, *a2);
}

uint64_t sub_1DC972E78()
{
  return sub_1DC888600();
}

uint64_t sub_1DC972E88()
{
  return sub_1DC8884E0();
}

uint64_t sub_1DC972E98()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC972EE0()
{
  return sub_1DC972AF8(*v0);
}

uint64_t sub_1DC972EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9729F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC972F1C()
{
  return sub_1DC888648();
}

uint64_t sub_1DC972F44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DC8885F8();
  *a1 = result;
  return result;
}

uint64_t sub_1DC972F70(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DC972FC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

BOOL sub_1DC973018(char *a1, char *a2)
{
  return sub_1DC894354(*a1, *a2);
}

uint64_t sub_1DC973028()
{
  return sub_1DC894504();
}

uint64_t sub_1DC973048()
{
  return sub_1DC894364();
}

uint64_t sub_1DC973054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9731B4(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_1DC894364);
}

uint64_t sub_1DC97306C()
{
  return sub_1DC972C7C(*v0);
}

uint64_t sub_1DC973078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC972B34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9730A4()
{
  return sub_1DC888648();
}

uint64_t sub_1DC9730C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DC8944FC();
  *a1 = result;
  return result;
}

uint64_t sub_1DC9730F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DC973148(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1DC97319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9731B4(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_1DC976F40);
}

uint64_t sub_1DC9731B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void))
{
  sub_1DCB891A8();
  a4(v8, *v4, *(void *)(a2 + 16));
  return sub_1DCB891F8();
}

uint64_t sub_1DC97320C()
{
  return sub_1DC972E10(*v0);
}

uint64_t sub_1DC973218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC972CD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC973244(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DC973298(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1DC9732EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DC92F504();
  sub_1DC972278(v4, v5, a1, a2);
  uint64_t v7 = v6;
  uint64_t v8 = sub_1DC92F504();
  uint64_t v10 = sub_1DCB30848(v8, v9);
  uint64_t v11 = *(void *)(v7 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v33 = v7;
  if (v11)
  {
    sub_1DC976FF8();
    uint64_t v12 = v34[0];
    unint64_t v13 = *(void *)(v34[0] + 16);
    uint64_t v14 = (uint64_t *)(v7 + 40);
    uint64_t v15 = v11;
    do
    {
      uint64_t v17 = *v14;
      v14 += 2;
      uint64_t v16 = v17;
      v34[0] = v12;
      if (v13 >= *(void *)(v12 + 24) >> 1)
      {
        sub_1DC897E1C();
        uint64_t v12 = v34[0];
      }
      *(void *)(v12 + 16) = v13 + 1;
      *(void *)(v12 + 8 * v13++ + 32) = v16;
      --v15;
    }
    while (v15);
  }
  sub_1DCB260C8(v12, v10);
  swift_bridgeObjectRelease();
  sub_1DCB0F39C();
  uint64_t v19 = v18;
  swift_release();
  uint64_t v20 = sub_1DCB30848(0, *(void *)(a2 + 16));
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    sub_1DC976FF8();
    uint64_t v21 = v34[0];
    uint64_t v22 = (uint64_t *)(v7 + 32);
    unint64_t v23 = *(void *)(v34[0] + 16);
    do
    {
      uint64_t v25 = *v22;
      v22 += 2;
      uint64_t v24 = v25;
      v34[0] = v21;
      if (v23 >= *(void *)(v21 + 24) >> 1)
      {
        sub_1DC897E1C();
        uint64_t v21 = v34[0];
      }
      *(void *)(v21 + 16) = v23 + 1;
      *(void *)(v21 + 8 * v23++ + 32) = v24;
      --v11;
    }
    while (v11);
    uint64_t v7 = v33;
  }
  sub_1DCB260C8(v21, v20);
  swift_bridgeObjectRelease();
  sub_1DCB0F39C();
  uint64_t v27 = v26;
  swift_release();
  v34[0] = v19;
  swift_bridgeObjectRetain();
  sub_1DC974DCC(v34);
  swift_release();
  uint64_t v28 = v34[0];
  swift_bridgeObjectRetain();
  sub_1DC971FD0(v28, a1);
  uint64_t v30 = v29;
  swift_release();
  v34[0] = v27;
  swift_bridgeObjectRetain();
  sub_1DC974DCC(v34);
  swift_release();
  uint64_t v31 = v34[0];
  swift_bridgeObjectRetain();
  sub_1DC971FD0(v31, a2);
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC9720F8(v7, a2, a1);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1DC9735A8()
{
  uint64_t v1 = sub_1DC96A1E0();
  if (!v0)
  {
    sub_1DC96A240(v1);
    uint64_t v3 = v2;
    uint64_t v4 = sub_1DC96A154();
    sub_1DC96A1B4(v4);
    sub_1DC9732EC(v3, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_1DC977074();
}

void sub_1DC97366C()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  type metadata accessor for StreamingModelUtils.Connection.CodingKeys();
  swift_getWitnessTable();
  sub_1DC9770FC();
  sub_1DCB88F78();
  sub_1DC88D538();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v3);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB892B8();
  sub_1DC977108();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC977108();
    sub_1DCB88F18();
  }
  sub_1DC97702C();
  v5(v4);
  sub_1DC88D674();
}

void sub_1DC9737C0()
{
  sub_1DC88D6B0();
  uint64_t v38 = v1;
  uint64_t v39 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v32 = v6;
  sub_1DC88D538();
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1DC888120();
  uint64_t v33 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v37 = (char *)&v30 - v11;
  type metadata accessor for StreamingModelUtils.Connection.CodingKeys();
  swift_getWitnessTable();
  sub_1DC92F504();
  sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v14);
  uint64_t v15 = type metadata accessor for StreamingModelUtils.Connection();
  sub_1DC88D538();
  uint64_t v31 = v16;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v30 - v18;
  sub_1DC881A8C(v5, v5[3]);
  uint64_t v20 = v39;
  sub_1DCB89298();
  if (v20)
  {
    sub_1DC8818D0((uint64_t)v5);
  }
  else
  {
    uint64_t v39 = v15;
    uint64_t v21 = v34;
    sub_1DCB88DF8();
    uint64_t v22 = *(char **)(v21 + 32);
    uint64_t v30 = v19;
    unint64_t v23 = v37;
    uint64_t v37 = v22;
    ((void (*)(char *, char *, uint64_t))v22)(v19, v23, v3);
    uint64_t v24 = v33;
    sub_1DCB88DF8();
    uint64_t v25 = sub_1DC976FB8();
    v26(v25);
    uint64_t v27 = v39;
    uint64_t v28 = v30;
    ((void (*)(char *, uint64_t, uint64_t))v37)(&v30[*(int *)(v39 + 28)], v24, v3);
    uint64_t v29 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v32, v28, v27);
    sub_1DC8818D0((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v27);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC973ACC()
{
  if ((sub_1DC9770B4() & 1) == 0) {
    return 0;
  }
  type metadata accessor for StreamingModelUtils.Connection();
  return sub_1DC976FD4() & 1;
}

uint64_t sub_1DC973B14()
{
  return sub_1DCB87818();
}

void sub_1DC973B6C()
{
  sub_1DC88D6B0();
  uint64_t v11 = v2;
  uint64_t v4 = v3;
  type metadata accessor for StreamingModelUtils.IODescription.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v7 = v6;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v8);
  sub_1DC97701C();
  sub_1DC881A8C(v4, v4[3]);
  sub_1DCB892B8();
  sub_1DC9770FC();
  sub_1DCB87D78();
  swift_getWitnessTable();
  sub_1DC976F9C();
  sub_1DCB88F18();
  if (v0)
  {
    uint64_t v9 = sub_1DC977074();
    v10(v9);
  }
  else
  {
    sub_1DC976F9C();
    sub_1DCB88F18();
    sub_1DC9770D4(v11);
    sub_1DC976F6C();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1DCB88F18();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  }
  sub_1DC88D674();
}

void sub_1DC973DB8()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  type metadata accessor for StreamingModelUtils.IODescription.CodingKeys();
  swift_getWitnessTable();
  sub_1DC977094();
  sub_1DC88D538();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v3);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC977060();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DCB87D78();
    swift_getWitnessTable();
    sub_1DC97703C();
    swift_bridgeObjectRetain();
    sub_1DC97703C();
    sub_1DC976F6C();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1DC977080();
    sub_1DCB88DF8();
    uint64_t v4 = sub_1DC976F54();
    v5(v4);
    swift_bridgeObjectRetain();
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

uint64_t sub_1DC974078()
{
  if (sub_1DCB87D98() & 1) != 0 && (sub_1DCB87D98())
  {
    type metadata accessor for StreamingModelUtils.Connection();
    swift_getWitnessTable();
    char v0 = sub_1DCB87D98();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1DC974144()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC974230()
{
  return sub_1DCB891F8();
}

void sub_1DC9742A0()
{
  sub_1DC88D6B0();
  uint64_t v11 = v0;
  uint64_t v10 = v3;
  uint64_t v5 = v4;
  type metadata accessor for StreamingModelUtils.FlowIODescription.CodingKeys();
  swift_getWitnessTable();
  sub_1DC9770FC();
  uint64_t v6 = sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v8 = v7;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v9);
  sub_1DC97701C();
  sub_1DC881A8C(v5, v5[3]);
  sub_1DCB892B8();
  sub_1DCB88F18();
  if (!v1)
  {
    sub_1DCB88F18();
    sub_1DC9770D4(*(void *)(v11 + *(int *)(v10 + 32)));
    sub_1DC976F6C();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1DCB88F18();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
  sub_1DC88D674();
}

void sub_1DC9744B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1DC88D6B0();
  unint64_t v51 = (void *)v10;
  uint64_t v49 = v12;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v43 = v17;
  sub_1DC88D538();
  uint64_t v46 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC888120();
  unint64_t v45 = v20;
  MEMORY[0x1F4188790](v21);
  char v47 = (char *)&v41 - v22;
  type metadata accessor for StreamingModelUtils.FlowIODescription.CodingKeys();
  swift_getWitnessTable();
  uint64_t v50 = sub_1DC977094();
  sub_1DC88D538();
  uint64_t v44 = v23;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v41 - v25;
  sub_1DC9770FC();
  uint64_t v27 = type metadata accessor for StreamingModelUtils.FlowIODescription();
  sub_1DC88D538();
  uint64_t v42 = v28;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v29);
  sub_1DC97701C();
  sub_1DC881A8C(v16, v16[3]);
  unint64_t v48 = v26;
  sub_1DC977060();
  uint64_t v30 = (uint64_t)v51;
  sub_1DCB89298();
  if (v30)
  {
    sub_1DC8818D0((uint64_t)v16);
  }
  else
  {
    uint64_t v31 = v45;
    uint64_t v32 = v46;
    uint64_t v41 = v11;
    unint64_t v51 = v16;
    sub_1DCB88DF8();
    uint64_t v33 = v14;
    uint64_t v34 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
    v34(v41, v47, v14);
    LOBYTE(a10) = 1;
    uint64_t v35 = v31;
    sub_1DCB88DF8();
    uint64_t v36 = v41;
    v34(v41 + *(int *)(v27 + 28), v35, v33);
    sub_1DC976F6C();
    char v54 = 2;
    uint64_t v53 = v49;
    uint64_t WitnessTable = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1DC977080();
    sub_1DCB88DF8();
    uint64_t v37 = sub_1DC9770E8();
    v38(v37);
    *(void *)(v36 + *(int *)(v27 + 32)) = a10;
    uint64_t v39 = v27;
    uint64_t v40 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v43, v36, v39);
    sub_1DC8818D0((uint64_t)v51);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, v39);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC974880()
{
  if ((sub_1DC9770B4() & 1) != 0
    && (sub_1DC92F504(), type metadata accessor for StreamingModelUtils.FlowIODescription(), (sub_1DC976FD4() & 1) != 0))
  {
    type metadata accessor for StreamingModelUtils.Connection();
    swift_getWitnessTable();
    char v0 = sub_1DCB87D98();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1DC974930()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9749F8(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t))
{
  sub_1DC89D754();
  a3(v7, a1, a2);
  return sub_1DCB891F8();
}

void sub_1DC974A50()
{
}

void sub_1DC974A6C()
{
}

uint64_t sub_1DC974A8C()
{
  return sub_1DC973ACC();
}

uint64_t sub_1DC974A98(uint64_t a1, uint64_t a2)
{
  return sub_1DC9749F8(a1, *(void *)(a2 - 8), (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DC973B14);
}

uint64_t sub_1DC974AC8()
{
  return sub_1DC973B14();
}

uint64_t sub_1DC974AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC974C98(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DC973B14);
}

void sub_1DC974AE8()
{
}

void sub_1DC974B14(void *a1@<X8>)
{
  sub_1DC973DB8();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

uint64_t sub_1DC974B4C()
{
  return sub_1DC974078();
}

uint64_t sub_1DC974B74()
{
  return sub_1DC974230();
}

uint64_t sub_1DC974B8C()
{
  return sub_1DC974144();
}

uint64_t sub_1DC974BA4()
{
  return sub_1DCB891F8();
}

void sub_1DC974C00()
{
}

void sub_1DC974C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1DC9744B8(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_1DC974C3C()
{
  return sub_1DC974880();
}

uint64_t sub_1DC974C48(uint64_t a1, uint64_t a2)
{
  return sub_1DC9749F8(a1, *(void *)(a2 - 8), (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DC974930);
}

uint64_t sub_1DC974C78()
{
  return sub_1DC974930();
}

uint64_t sub_1DC974C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC974C98(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))sub_1DC974930);
}

uint64_t sub_1DC974C98(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a3 - 8);
  sub_1DCB891A8();
  a4(v8, a2, v6);
  return sub_1DCB891F8();
}

uint64_t sub_1DC974CF4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC974D3C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for StreamingModelUtils.Connection.CodingKeys()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for StreamingModelUtils.Connection()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for StreamingModelUtils.IODescription.CodingKeys()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC974DCC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1DC8AEB78();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1DC974E38(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1DC974E38(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DCB88F88();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1DC97540C(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1DCA078F0(v3 / 2);
  uint64_t v83 = a1;
  uint64_t v84 = result;
  uint64_t v88 = v6;
  uint64_t v86 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v26 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_90:
    if (v26 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v86 >= -1)
      {
        *(void *)(v84 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v76 = *v83;
    while (1)
    {
      unint64_t v77 = v26 - 2;
      if (v26 < 2) {
        break;
      }
      if (!v76) {
        goto LABEL_133;
      }
      uint64_t v78 = *(void *)(v9 + 32 + 16 * v77);
      uint64_t v79 = *(void *)(v9 + 32 + 16 * (v26 - 1) + 8);
      uint64_t result = sub_1DC975464((uint64_t *)(v76 + 8 * v78), (uint64_t *)(v76 + 8 * *(void *)(v9 + 32 + 16 * (v26 - 1))), v76 + 8 * v79, v88);
      if (v1) {
        goto LABEL_86;
      }
      if (v79 < v78) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DC9756D8(v9);
        uint64_t v9 = result;
      }
      if (v77 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v80 = (void *)(v9 + 32 + 16 * v77);
      void *v80 = v78;
      v80[1] = v79;
      unint64_t v81 = *(void *)(v9 + 16);
      if (v26 > v81) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v26 - 1)), (const void *)(v9 + 32 + 16 * v26), 16 * (v81 - v26));
      *(void *)(v9 + 16) = v81 - 1;
      unint64_t v26 = v81 - 1;
      if (v81 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v82 = *a1 - 8;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v85 = v5;
  uint64_t v87 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(void *)(v8 + 8 * v7);
      uint64_t v12 = *(void *)(v8 + 8 * v10);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        uint64_t v13 = v11;
        while (1)
        {
          uint64_t v14 = *(void *)(v8 + 8 * v7);
          if (v11 < v12 == v14 >= v13) {
            break;
          }
          ++v7;
          uint64_t v13 = v14;
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v15 = v7 - 1;
          uint64_t v16 = v10;
          do
          {
            if (v16 != v15)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v17 = *(void *)(v8 + 8 * v16);
              *(void *)(v8 + 8 * v16) = *(void *)(v8 + 8 * v15);
              *(void *)(v8 + 8 * v15) = v17;
            }
            BOOL v57 = ++v16 < v15--;
          }
          while (v57);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v18 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v18 >= v3) {
          uint64_t v18 = v3;
        }
        if (v18 < v10) {
          goto LABEL_128;
        }
        if (v7 != v18)
        {
          uint64_t v19 = (uint64_t *)(v82 + 8 * v7);
          do
          {
            uint64_t v20 = *(void *)(v8 + 8 * v7);
            uint64_t v21 = v10;
            uint64_t v22 = v19;
            do
            {
              uint64_t v23 = *v22;
              if (v20 >= *v22) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              *uint64_t v22 = v20;
              v22[1] = v23;
              --v22;
              ++v21;
            }
            while (v7 != v21);
            ++v7;
            ++v19;
          }
          while (v7 != v18);
          uint64_t v7 = v18;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DC9755E0(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v25 = *(void *)(v9 + 16);
    unint64_t v24 = *(void *)(v9 + 24);
    unint64_t v26 = v25 + 1;
    uint64_t v8 = v87;
    if (v25 >= v24 >> 1)
    {
      uint64_t result = (uint64_t)sub_1DC9755E0((char *)(v24 > 1), v25 + 1, 1, (char *)v9);
      uint64_t v8 = v87;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v26;
    uint64_t v27 = v9 + 32;
    uint64_t v28 = (uint64_t *)(v9 + 32 + 16 * v25);
    *uint64_t v28 = v10;
    v28[1] = v7;
    if (v25) {
      break;
    }
    unint64_t v26 = 1;
LABEL_81:
    uint64_t v5 = v85;
    uint64_t v3 = v86;
    if (v7 >= v86) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v29 = v26 - 1;
    if (v26 >= 4)
    {
      unint64_t v34 = v27 + 16 * v26;
      uint64_t v35 = *(void *)(v34 - 64);
      uint64_t v36 = *(void *)(v34 - 56);
      BOOL v40 = __OFSUB__(v36, v35);
      uint64_t v37 = v36 - v35;
      if (v40) {
        goto LABEL_107;
      }
      uint64_t v39 = *(void *)(v34 - 48);
      uint64_t v38 = *(void *)(v34 - 40);
      BOOL v40 = __OFSUB__(v38, v39);
      uint64_t v32 = v38 - v39;
      char v33 = v40;
      if (v40) {
        goto LABEL_108;
      }
      unint64_t v41 = v26 - 2;
      uint64_t v42 = (uint64_t *)(v27 + 16 * (v26 - 2));
      uint64_t v44 = *v42;
      uint64_t v43 = v42[1];
      BOOL v40 = __OFSUB__(v43, v44);
      uint64_t v45 = v43 - v44;
      if (v40) {
        goto LABEL_109;
      }
      BOOL v40 = __OFADD__(v32, v45);
      uint64_t v46 = v32 + v45;
      if (v40) {
        goto LABEL_111;
      }
      if (v46 >= v37)
      {
        uint64_t v64 = (uint64_t *)(v27 + 16 * v29);
        uint64_t v66 = *v64;
        uint64_t v65 = v64[1];
        BOOL v40 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v40) {
          goto LABEL_117;
        }
        BOOL v57 = v32 < v67;
        goto LABEL_70;
      }
    }
    else
    {
      if (v26 != 3)
      {
        uint64_t v58 = *(void *)(v9 + 32);
        uint64_t v59 = *(void *)(v9 + 40);
        BOOL v40 = __OFSUB__(v59, v58);
        uint64_t v51 = v59 - v58;
        char v52 = v40;
        goto LABEL_64;
      }
      uint64_t v31 = *(void *)(v9 + 32);
      uint64_t v30 = *(void *)(v9 + 40);
      BOOL v40 = __OFSUB__(v30, v31);
      uint64_t v32 = v30 - v31;
      char v33 = v40;
    }
    if (v33) {
      goto LABEL_110;
    }
    unint64_t v41 = v26 - 2;
    char v47 = (uint64_t *)(v27 + 16 * (v26 - 2));
    uint64_t v49 = *v47;
    uint64_t v48 = v47[1];
    BOOL v50 = __OFSUB__(v48, v49);
    uint64_t v51 = v48 - v49;
    char v52 = v50;
    if (v50) {
      goto LABEL_112;
    }
    uint64_t v53 = (uint64_t *)(v27 + 16 * v29);
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    BOOL v40 = __OFSUB__(v54, v55);
    uint64_t v56 = v54 - v55;
    if (v40) {
      goto LABEL_114;
    }
    if (__OFADD__(v51, v56)) {
      goto LABEL_116;
    }
    if (v51 + v56 >= v32)
    {
      BOOL v57 = v32 < v56;
LABEL_70:
      if (v57) {
        unint64_t v29 = v41;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v52) {
      goto LABEL_113;
    }
    uint64_t v60 = (uint64_t *)(v27 + 16 * v29);
    uint64_t v62 = *v60;
    uint64_t v61 = v60[1];
    BOOL v40 = __OFSUB__(v61, v62);
    uint64_t v63 = v61 - v62;
    if (v40) {
      goto LABEL_115;
    }
    if (v63 < v51) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v68 = v9;
    unint64_t v69 = v29 - 1;
    if (v29 - 1 >= v26)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    int v70 = (uint64_t *)(v27 + 16 * v69);
    uint64_t v71 = *v70;
    uint64_t v72 = v27;
    uint64_t v73 = (void *)(v27 + 16 * v29);
    uint64_t v74 = v73[1];
    uint64_t result = sub_1DC975464((uint64_t *)(v8 + 8 * *v70), (uint64_t *)(v8 + 8 * *v73), v8 + 8 * v74, v88);
    if (v1) {
      break;
    }
    if (v74 < v71) {
      goto LABEL_104;
    }
    if (v29 > *(void *)(v68 + 16)) {
      goto LABEL_105;
    }
    *int v70 = v71;
    *(void *)(v72 + 16 * v69 + 8) = v74;
    unint64_t v75 = *(void *)(v68 + 16);
    if (v29 >= v75) {
      goto LABEL_106;
    }
    uint64_t v9 = v68;
    unint64_t v26 = v75 - 1;
    uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v29));
    uint64_t v27 = v72;
    *(void *)(v68 + 16) = v75 - 1;
    uint64_t v8 = v87;
    if (v75 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v86 < -1) {
    goto LABEL_125;
  }
  *(void *)(v84 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC97540C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 8 * a3);
      uint64_t v7 = result;
      uint64_t v8 = (uint64_t *)v5;
      do
      {
        uint64_t v9 = *v8;
        if (v6 >= *v8) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1DC975464(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_1DC896E10(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8) {
      goto LABEL_39;
    }
    uint64_t v18 = (uint64_t *)(a3 - 8);
    while (1)
    {
      uint64_t v19 = v18 + 1;
      uint64_t v20 = *(v6 - 1);
      if (*(v12 - 1) >= v20)
      {
        BOOL v22 = v19 != v12 || v18 >= v12;
        uint64_t v20 = *--v12;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *uint64_t v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_1DC896E10(a1, a2 - a1, a4);
  uint64_t v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v14 = *v6;
      if (*v6 < *v4) {
        break;
      }
      uint64_t v14 = *v4;
      BOOL v15 = v7 == v4++;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    BOOL v15 = v7 == v6++;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    *uint64_t v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  sub_1DC896E10(v4, v12 - v4, v6);
  return 1;
}

char *sub_1DC9755E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1DC87E988(&qword_1EAA9C820);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1DC9756D8(uint64_t a1)
{
  return sub_1DC9755E0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t type metadata accessor for StreamingModelUtils.FlowIODescription.CodingKeys()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for StreamingModelUtils.FlowIODescription()
{
  return sub_1DC8866E4();
}

unint64_t sub_1DC97571C()
{
  unint64_t result = qword_1EAAA1D40;
  if (!qword_1EAAA1D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA1D40);
  }
  return result;
}

unint64_t sub_1DC975768()
{
  unint64_t result = qword_1EAAA1D48[0];
  if (!qword_1EAAA1D48[0])
  {
    sub_1DC8863A8(&qword_1EAAA1D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA1D48);
  }
  return result;
}

uint64_t sub_1DC9757BC(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA1D28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for StreamingModelUtils()
{
  return &type metadata for StreamingModelUtils;
}

unsigned char *storeEnumTagSinglePayload for StreamingModelUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9758F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamingModelUtils.DomainError()
{
  return &type metadata for StreamingModelUtils.DomainError;
}

unsigned char *sub_1DC975934(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC975A00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1DC975A28(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC975AF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1DC975B1C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC975BAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = ~(unint64_t)v8;
  uint64_t v11 = v7 + v8;
  unint64_t v12 = (v11 & v10) + v7;
  int v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    unsigned int v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    uint64_t v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, v5);
    v17((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
  }
  return v4;
}

uint64_t sub_1DC975CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);

  return v7(v4, v3);
}

unint64_t sub_1DC975D54(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_1DC975DE8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_1DC975E7C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_1DC975F10(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_1DC975FA4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_19;
  }
  unint64_t v8 = ((*(void *)(*(void *)(v4 - 8) + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(*(void *)(v4 - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v6) {
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v6, v4);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v6 + (v8 | v12) + 1;
}

void sub_1DC976104(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(v7 + 64);
  unint64_t v10 = (v9 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  size_t v11 = v10 + v9;
  char v12 = 8 * (v10 + v9);
  BOOL v13 = a3 >= v8;
  int v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DC97631CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v8, v6);
      }
      return;
  }
}

uint64_t sub_1DC976348()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1DC97638C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DC9763DC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC976454(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for StreamingModelUtils.IODescription()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC9764BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC97655C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = v7 + v8;
  uint64_t v11 = v7 + 7;
  unint64_t v12 = ((v7 + 7 + (v10 & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v9 & 0xF8 ^ 0x1F8) & (v9 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    unsigned int v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v18(a1, a2, v5);
    unint64_t v19 = ((unint64_t)a2 + v10) & v17;
    v18((uint64_t *)(((unint64_t)v4 + v10) & v17), (uint64_t *)v19, v5);
    *(void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + v19) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DC9766A8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v5((*(void *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC976750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC976814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC9768E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9769A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(void *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC976A6C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = v7 + 7;
  if (v8 < a2)
  {
    unint64_t v12 = ((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v13 = a2 - v8;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v12);
        if (!v18) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v18) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC976BC4);
      case 4:
        int v18 = *(_DWORD *)((char *)a1 + v12);
        if (!v18) {
          break;
        }
LABEL_22:
        int v20 = v18 - 1;
        if (v14)
        {
          int v20 = 0;
          LODWORD(v14) = *a1;
        }
        return v8 + (v14 | v20) + 1;
      default:
        break;
    }
  }
  if (v6 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v6, v4);
  }
  unint64_t v21 = *(void *)((v11 + (((unint64_t)a1 + v10) & ~v9)) & 0xFFFFFFFFFFFFFFF8);
  if (v21 >= 0xFFFFFFFF) {
    LODWORD(v21) = -1;
  }
  return (v21 + 1);
}

void sub_1DC976BD8(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = v10 + v11;
  uint64_t v13 = v10 + 7;
  size_t v14 = ((v10 + 7 + ((v10 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v9 >= a3)
  {
    int v18 = 0;
  }
  else
  {
    unsigned int v15 = a3 - v9;
    if (((v10 + 7 + ((v10 + v11) & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v16 = v15 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
  }
  if (a2 > v9)
  {
    if (v14) {
      int v19 = 1;
    }
    else {
      int v19 = a2 - v9;
    }
    if (v14)
    {
      int v20 = ~v9 + a2;
      bzero(a1, v14);
      *(_DWORD *)a1 = v20;
    }
    switch(v18)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DC976DC8);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v8 < 0x7FFFFFFF)
        {
          unint64_t v21 = (void *)((v13 + ((unint64_t)&a1[v12] & ~v11)) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v22 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v22 = (a2 - 1);
          }
          *unint64_t v21 = v22;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v8, v6);
        }
      }
      return;
  }
}

uint64_t sub_1DC976DF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC976E0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC976E28()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DC976E48()
{
  unint64_t result = qword_1EAAA2050;
  if (!qword_1EAAA2050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2050);
  }
  return result;
}

uint64_t sub_1DC976E94()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC976EB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC976ECC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC976EE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC976F04()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC976F20()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC976F54()
{
  return v0;
}

uint64_t sub_1DC976F6C()
{
  type metadata accessor for StreamingModelUtils.Connection();
  return sub_1DCB87D78();
}

uint64_t sub_1DC976F9C()
{
  return v0 - 72;
}

uint64_t sub_1DC976FB8()
{
  return v0;
}

uint64_t sub_1DC976FD4()
{
  return sub_1DCB878C8();
}

void sub_1DC976FF8()
{
  sub_1DC897E1C();
}

uint64_t sub_1DC97703C()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC977060()
{
  return v0;
}

uint64_t sub_1DC977074()
{
  return v0;
}

uint64_t sub_1DC977080()
{
  return v0;
}

uint64_t sub_1DC977094()
{
  return sub_1DCB88E78();
}

uint64_t sub_1DC9770B4()
{
  return sub_1DCB878C8();
}

uint64_t sub_1DC9770D4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 72) = a1;
  *(unsigned char *)(v1 - 81) = 2;
  return 255;
}

uint64_t sub_1DC9770E8()
{
  return v0;
}

uint64_t sub_1DC9770FC()
{
  return 0;
}

uint64_t sub_1DC97711C()
{
  return sub_1DCB891D8();
}

uint64_t sub_1DC977144(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DC9771C4()
{
  return 0x746E65696C63;
}

uint64_t sub_1DC9771D8(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA2080);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC977960();
  sub_1DCB892B8();
  sub_1DCB88F58();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_1DC9772DC()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC977324(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA2070);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)sub_1DC881A8C(a1, a1[3]);
  sub_1DC977960();
  sub_1DCB89298();
  if (!v1)
  {
    uint64_t v9 = sub_1DCB88E38();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  sub_1DC8818D0((uint64_t)a1);
  return v9;
}

uint64_t sub_1DC977450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC977144(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC97747C(uint64_t a1)
{
  unint64_t v2 = sub_1DC977960();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9774B8(uint64_t a1)
{
  unint64_t v2 = sub_1DC977960();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9774F4@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1DC977324(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC977520(void *a1)
{
  return sub_1DC9771D8(a1);
}

uint64_t sub_1DC97753C()
{
  return sub_1DC9772DC();
}

uint64_t sub_1DC977544()
{
  return sub_1DC97711C();
}

uint64_t sub_1DC97754C()
{
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1DC97757C()
{
  sub_1DC97754C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedAOPResultsStream.Instance()
{
  return self;
}

uint64_t sub_1DC9775D4()
{
  uint64_t v1 = v0;
  id v13[5] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = v0 + OBJC_IVAR____TtCV13SoundAnalysis22SharedAOPResultsStream15AOPSubscription_trackingID;
  sub_1DC9E1D30(v0 + OBJC_IVAR____TtCV13SoundAnalysis22SharedAOPResultsStream15AOPSubscription_trackingID);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtCV13SoundAnalysis22SharedAOPResultsStream15AOPSubscription_connect);
  v13[3] = type metadata accessor for IOConnect();
  _OWORD v13[4] = &off_1F37F4348;
  v13[0] = v3;
  int v9 = *(_DWORD *)(v1 + OBJC_IVAR____TtCV13SoundAnalysis22SharedAOPResultsStream15AOPSubscription_client);
  __int16 v10 = 1;
  char v11 = 0;
  swift_retain();
  uint64_t v4 = sub_1DC9E0FCC((uint64_t)&v9, (uint64_t)&v12);
  unint64_t v6 = v5;
  sub_1DC9E44AC((uint64_t)v13, 35, v4, v5);
  sub_1DC881920(v4, v6);
  sub_1DC8818D0((uint64_t)v13);
  uint64_t v7 = sub_1DCB86BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v2, v7);
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DC97779C()
{
  sub_1DC9775D4();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC9777F4()
{
  return type metadata accessor for SharedAOPResultsStream.AOPSubscription();
}

uint64_t type metadata accessor for SharedAOPResultsStream.AOPSubscription()
{
  uint64_t result = qword_1EAAA2058;
  if (!qword_1EAAA2058) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DC977844()
{
  uint64_t result = sub_1DCB86BF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedAOPResultsStream()
{
  return &type metadata for SharedAOPResultsStream;
}

ValueMetadata *type metadata accessor for SharedAOPResultsStream.Configuration()
{
  return &type metadata for SharedAOPResultsStream.Configuration;
}

unint64_t sub_1DC977914()
{
  unint64_t result = qword_1EAAA2068;
  if (!qword_1EAAA2068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2068);
  }
  return result;
}

unint64_t sub_1DC977960()
{
  unint64_t result = qword_1EAAA2078;
  if (!qword_1EAAA2078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2078);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharedAOPResultsStream.Configuration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC977A48);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedAOPResultsStream.Configuration.CodingKeys()
{
  return &type metadata for SharedAOPResultsStream.Configuration.CodingKeys;
}

unint64_t sub_1DC977A84()
{
  unint64_t result = qword_1EAAA2088;
  if (!qword_1EAAA2088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2088);
  }
  return result;
}

unint64_t sub_1DC977AD4()
{
  unint64_t result = qword_1EAAA2090;
  if (!qword_1EAAA2090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2090);
  }
  return result;
}

unint64_t sub_1DC977B24()
{
  unint64_t result = qword_1EAAA2098[0];
  if (!qword_1EAAA2098[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA2098);
  }
  return result;
}

uint64_t sub_1DC977B70()
{
  sub_1DC8867A8();
  v0[14] = v1;
  v0[15] = v2;
  v0[12] = v3;
  v0[13] = v4;
  v0[16] = *(void *)(v1 - 8);
  v0[17] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DC977C20()
{
  sub_1DC8BABB4();
  uint64_t v1 = v0[13];
  sub_1DC978E04(v1, (uint64_t)(v0 + 10), (uint64_t *)&unk_1EAAA2640);
  type metadata accessor for XPCDataDecoder();
  uint64_t v2 = sub_1DC886810();
  sub_1DC978E04((uint64_t)(v0 + 10), v2 + 16, (uint64_t *)&unk_1EAAA2640);
  sub_1DC978E04(v1 + 16, (uint64_t)(v0 + 2), &qword_1EAA9E478);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v3 = swift_allocObject();
  sub_1DC978E04((uint64_t)(v0 + 2), v3 + 16, &qword_1EAA9E478);
  type metadata accessor for XPCDecoder();
  uint64_t inited = swift_initStackObject();
  v0[18] = inited;
  *(void *)(inited + 16) = v2;
  *(void *)(inited + 24) = v3;
  sub_1DC978E88();
  sub_1DC8B9C54(v0 + 2);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[19] = (uint64_t)v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1DC977DC4;
  sub_1DC978EB0();
  return v6();
}

uint64_t sub_1DC977DC4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 160) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC977EA4()
{
  swift_setDeallocating();
  sub_1DC978D10();
  swift_deallocClassInstance();
  uint64_t v0 = sub_1DC978E6C();
  v1(v0);
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v2();
}

uint64_t sub_1DC977F44()
{
  sub_1DC8867A8();
  swift_setDeallocating();
  sub_1DC978D10();
  swift_deallocClassInstance();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC977FC0()
{
  *(void *)(v1 + 16) = v0;
  return sub_1DC8BA8F8((uint64_t)sub_1DC977FD8);
}

uint64_t sub_1DC977FD8()
{
  sub_1DC8BABB4();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = *(void **)(v1 + 24);
  sub_1DC8B9C40(v4, v3);
  uint64_t v8 = v6[2];
  uint64_t v7 = v6[3];
  uint64_t v9 = v6[4];
  uint64_t v10 = v6[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  uint64_t v11 = (void *)swift_allocObject();
  double v11[2] = v8;
  v11[3] = v7;
  v11[4] = v9;
  v11[5] = v10;
  swift_retain();
  sub_1DC884F60(v8);
  swift_release();
  type metadata accessor for XPCDecoder.SingleValueContainer();
  uint64_t v12 = sub_1DC886810();
  *(void *)(v12 + 16) = v5;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1DC9780D0()
{
  *(void *)(v1 + 16) = v0;
  return sub_1DC8BA8F8((uint64_t)sub_1DC9780E8);
}

uint64_t sub_1DC9780E8()
{
  sub_1DC886900();
  swift_retain();
  v0[3] = sub_1DCA7D448();
  swift_release();
  v0[4] = *(void *)(v0[2] + 24);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC9781F0;
  return sub_1DC964B20();
}

uint64_t sub_1DC9781F0()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  void *v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(void *)(v5 + 56) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9782EC()
{
  sub_1DC8867A8();
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[3];
  type metadata accessor for XPCDecoder.UnkeyedContainer();
  uint64_t v3 = sub_1DC886810();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1DC978358()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9783BC()
{
  sub_1DC978D10();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC9783F0()
{
  sub_1DC8867A8();
  v0[19] = v1;
  v0[20] = v2;
  v0[18] = v3;
  v0[21] = *(void *)(v1 - 8);
  v0[22] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[23] = v4;
  void *v4 = v0;
  v4[1] = sub_1DC9784DC;
  return sub_1DC978974((uint64_t)(v0 + 2));
}

uint64_t sub_1DC9784DC()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC9785F4()
{
  sub_1DC8BABB4();
  sub_1DC978E04((uint64_t)(v0 + 2), (uint64_t)(v0 + 16), (uint64_t *)&unk_1EAAA2640);
  type metadata accessor for XPCDataDecoder();
  uint64_t v1 = sub_1DC886810();
  sub_1DC978E04((uint64_t)(v0 + 16), v1 + 16, (uint64_t *)&unk_1EAAA2640);
  sub_1DC978E04((uint64_t)(v0 + 4), (uint64_t)(v0 + 8), &qword_1EAA9E478);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v2 = swift_allocObject();
  sub_1DC978E04((uint64_t)(v0 + 8), v2 + 16, &qword_1EAA9E478);
  type metadata accessor for XPCDecoder();
  uint64_t inited = swift_initStackObject();
  v0[24] = inited;
  *(void *)(inited + 16) = v1;
  *(void *)(inited + 24) = v2;
  sub_1DC978E88();
  sub_1DC8B9C54(v0 + 8);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[25] = (uint64_t)v4;
  void *v4 = v0;
  v4[1] = sub_1DC978794;
  sub_1DC978EB0();
  return v5();
}

uint64_t sub_1DC978794()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 208) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC978874()
{
  swift_release();
  sub_1DC886630((uint64_t *)(v0 + 16));
  uint64_t v1 = sub_1DC978E6C();
  v2(v1);
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v3();
}

uint64_t sub_1DC978904()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DC886630((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC978974(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC97898C);
}

uint64_t sub_1DC97898C()
{
  sub_1DC886900();
  v0[4] = sub_1DCA7D504();
  v0[5] = v1;
  v0[6] = *(void *)(v0[3] + 24);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC978A84;
  return sub_1DC965A14();
}

uint64_t sub_1DC978A84()
{
  sub_1DC8BABB4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_1DC886774();
  uint64_t v11 = v10;
  sub_1DC88679C();
  *uint64_t v12 = v11;
  uint64_t v13 = *v1;
  sub_1DC88679C();
  *size_t v14 = v13;
  v11[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v15, v16, v17);
  }
  else
  {
    uint64_t v18 = v11[5];
    uint64_t v19 = v11[4];
    int v20 = (void *)v11[2];
    swift_release();
    *int v20 = v19;
    v20[1] = v18;
    _OWORD v20[2] = v9;
    v20[3] = v7;
    v20[4] = v5;
    v20[5] = v3;
    sub_1DC8BAB84();
    return v21();
  }
}

uint64_t sub_1DC978BD0()
{
  sub_1DC8867A8();
  unint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_release();
  sub_1DC88668C(v2, v1);
  sub_1DC8BA978();
  return v3();
}

uint64_t sub_1DC978C3C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC978C54);
}

uint64_t sub_1DC978C54()
{
  sub_1DC8BABB4();
  uint64_t v2 = *(uint64_t **)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = *(void *)(v3 + 16);
  unint64_t v6 = *(void *)(v3 + 24);
  sub_1DC8B9C40(v5, v6);
  uint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  uint64_t v9 = v4[4];
  uint64_t v10 = v4[5];
  swift_retain();
  sub_1DC884F60(v7);
  swift_release();
  *uint64_t v2 = v5;
  v2[1] = v6;
  v2[2] = v7;
  void v2[3] = v8;
  v2[4] = v9;
  v2[5] = v10;
  sub_1DC8BAB84();
  return v11();
}

uint64_t sub_1DC978D10()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t type metadata accessor for XPCDecoder()
{
  return self;
}

uint64_t sub_1DC978D5C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for XPCDecoder.KeyedContainer()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for XPCDecoder.UnkeyedContainer()
{
  return self;
}

uint64_t type metadata accessor for XPCDecoder.SingleValueContainer()
{
  return self;
}

uint64_t sub_1DC978E04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1DC87E988(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DC978E6C()
{
  return v0;
}

uint64_t sub_1DC978E88()
{
  return sub_1DC8B9C10(v0);
}

void sub_1DC978ECC()
{
  j__os_unfair_lock_lock(*v0);
}

void sub_1DC978ED4()
{
  j__os_unfair_lock_unlock(*v0);
}

uint64_t sub_1DC978EDC(void *a1, void *a2)
{
  sub_1DC881A8C(a2, a2[3]);
  uint64_t v4 = sub_1DC9793A8();
  v5(v4);
  if (v13)
  {
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1DC8BA1CC(v12, (uint64_t)v14);
    sub_1DC881A8C(v14, v14[3]);
    sub_1DCB3E1B0();
    if (!v2)
    {
      uint64_t v7 = v6;
      sub_1DC9793E4(v6);
      uint64_t v8 = sub_1DC9793CC();
      uint64_t v9 = sub_1DC8BA1CC(v12, v8 + 16);
      *(void *)(v8 + 56) = v7;
      sub_1DC9793E4(v9);
      uint64_t v10 = sub_1DC9793CC();
      sub_1DC8BA1CC(v12, v10 + 16);
      *(void *)(v10 + 56) = v7;
      sub_1DC87E988(&qword_1EAAA2150);
      a1 = (void *)swift_allocObject();
      a1[2] = sub_1DC979068;
      a1[3] = v8;
      a1[4] = sub_1DC97909C;
      a1[5] = v10;
      swift_bridgeObjectRetain();
    }
    sub_1DC8818D0((uint64_t)v14);
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1DC979068()
{
  uint64_t v0 = (void *)sub_1DC9793FC();
  return sub_1DC979254(v0, v1, (uint64_t (*)(uint64_t))sub_1DCB3EAE4, v2);
}

uint64_t sub_1DC97909C()
{
  uint64_t v0 = (void *)sub_1DC9793FC();
  return sub_1DC9792E8(v0, v1, (uint64_t (*)(uint64_t))sub_1DCB3E728);
}

uint64_t sub_1DC9790CC(void *a1, void *a2)
{
  sub_1DC881A8C(a2, a2[3]);
  uint64_t v4 = sub_1DC9793A8();
  v5(v4);
  if (v13)
  {
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1DC8BA1CC(v12, (uint64_t)v14);
    sub_1DC881A8C(v14, v14[3]);
    sub_1DCB3E478();
    if (!v2)
    {
      uint64_t v7 = v6;
      sub_1DC9793E4(v6);
      uint64_t v8 = sub_1DC9793CC();
      uint64_t v9 = sub_1DC8BA1CC(v12, v8 + 16);
      *(void *)(v8 + 56) = v7;
      sub_1DC9793E4(v9);
      uint64_t v10 = sub_1DC9793CC();
      sub_1DC8BA1CC(v12, v10 + 16);
      *(void *)(v10 + 56) = v7;
      sub_1DC87E988(&qword_1EAAA2150);
      a1 = (void *)swift_allocObject();
      a1[2] = sub_1DC9792B8;
      a1[3] = v8;
      a1[4] = sub_1DC979378;
      a1[5] = v10;
      swift_bridgeObjectRetain();
    }
    sub_1DC8818D0((uint64_t)v14);
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1DC979254@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, unsigned char *a4@<X8>)
{
  sub_1DC881A8C(a1, a1[3]);
  uint64_t result = a3(a2);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1DC9792B8()
{
  uint64_t v0 = (void *)sub_1DC9793FC();
  return sub_1DC979254(v0, v1, (uint64_t (*)(uint64_t))sub_1DCB3EB0C, v2);
}

uint64_t sub_1DC9792E8(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(a2);
}

uint64_t sub_1DC979338()
{
  sub_1DC8818D0(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC979378()
{
  uint64_t v0 = (void *)sub_1DC9793FC();
  return sub_1DC9792E8(v0, v1, (uint64_t (*)(uint64_t))sub_1DCB3E750);
}

uint64_t sub_1DC9793A8()
{
  return v0;
}

uint64_t sub_1DC9793CC()
{
  return swift_allocObject();
}

uint64_t sub_1DC9793E4(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  return sub_1DC8B9960((uint64_t)va1, (uint64_t)va);
}

uint64_t sub_1DC9793FC()
{
  return v0 + 16;
}

uint64_t sub_1DC979408(uint64_t a1, uint64_t a2)
{
  return sub_1DC979444(a1, a2);
}

uint64_t sub_1DC979444(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_retain();
  swift_retain();
  swift_retain();
  v5(a1, a2);
  swift_release();
  swift_release();
  return swift_release();
}

double sub_1DC9794DC@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_1DCB87908();
  id v5 = objc_msgSend(v2, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_1DCB88808();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

double sub_1DC979560@<D0>(_OWORD *a1@<X8>)
{
  return sub_1DC9794DC(a1);
}

void sub_1DC979584(uint64_t a1@<X8>)
{
}

BOOL static PermissionsUtils.checkUserIsMobile()()
{
  return geteuid() == 501;
}

BOOL static PermissionsUtils.checkUserIsRoot()()
{
  return geteuid() == 0;
}

void type metadata accessor for PermissionsUtils()
{
}

void type metadata accessor for ThisProcessEntitlementProvider()
{
}

unsigned char *sub_1DC9795F4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC979690);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for PermissionsUtils.DomainError()
{
}

unint64_t sub_1DC9796C8()
{
  unint64_t result = qword_1EAAA2158;
  if (!qword_1EAAA2158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2158);
  }
  return result;
}

uint64_t sub_1DC979714(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA2170);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC97AAC0();
  sub_1DCB892B8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1DC979824(uint64_t a1)
{
  unint64_t v2 = sub_1DC97AAC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC979860(uint64_t a1)
{
  unint64_t v2 = sub_1DC97AAC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97989C(void *a1)
{
  return sub_1DC979714(a1);
}

id sub_1DC9798B4()
{
  uint64_t v0 = (objc_class *)type metadata accessor for SNDiscoverFileServerRequest();
  v3.id receiver = objc_allocWithZone(v0);
  v3.Class super_class = v0;
  id v1 = objc_msgSendSuper2(&v3, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v1;
}

uint64_t (*sub_1DC979940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v33 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F946E0]), sel_init);
  objc_msgSend(v12, sel_setDispatchQueue_, a1);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  uint64_t v38 = sub_1DC97AB44;
  uint64_t v39 = (void *)v13;
  aBos_unfair_lock_t lock = MEMORY[0x1E4F143A8];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1DC9C881C;
  uint64_t v37 = &unk_1F37FA9E0;
  size_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_setInterruptionHandler_, v14);
  _Block_release(v14);
  uint64_t v38 = sub_1DC979F08;
  uint64_t v39 = 0;
  aBos_unfair_lock_t lock = MEMORY[0x1E4F143A8];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1DC9C881C;
  uint64_t v37 = &unk_1F37FB200;
  uint64_t v15 = _Block_copy(&aBlock);
  objc_msgSend(v12, sel_setInvalidationHandler_, v15);
  _Block_release(v15);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = (void *)swift_allocObject();
  double v17[2] = v16;
  v17[3] = a4;
  v17[4] = a5;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a5;
  uint64_t v38 = sub_1DC97ABDC;
  uint64_t v39 = v17;
  aBos_unfair_lock_t lock = MEMORY[0x1E4F143A8];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1DCA09C70;
  uint64_t v37 = &unk_1F37FAE40;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_setLocalDeviceUpdatedHandler_, v19);
  _Block_release(v19);
  uint64_t v38 = sub_1DC97ABE8;
  uint64_t v39 = (void *)v18;
  aBos_unfair_lock_t lock = MEMORY[0x1E4F143A8];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1DCA09C70;
  uint64_t v37 = &unk_1F37FAEB8;
  int v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_setDeviceLostHandler_, v20);
  _Block_release(v20);
  uint64_t v38 = sub_1DC97ABDC;
  uint64_t v39 = v17;
  aBos_unfair_lock_t lock = MEMORY[0x1E4F143A8];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1DCA09C70;
  uint64_t v37 = &unk_1F37FAF08;
  unint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_setDeviceFoundHandler_, v21);
  _Block_release(v21);
  uint64_t v38 = sub_1DC97A400;
  uint64_t v39 = 0;
  aBos_unfair_lock_t lock = MEMORY[0x1E4F143A8];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1DC97A5FC;
  uint64_t v37 = &unk_1F37FAF58;
  uint64_t v22 = _Block_copy(&aBlock);
  objc_msgSend(v12, sel_setDeviceChangedHandler_, v22);
  _Block_release(v22);
  uint64_t v23 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v33, 1, 1, v23);
  unint64_t v24 = (void *)swift_allocObject();
  void v24[2] = 0;
  v24[3] = 0;
  uint64_t v25 = v32;
  v24[4] = v12;
  v24[5] = v25;
  v24[6] = v31;
  swift_retain();
  id v26 = v12;
  uint64_t v27 = sub_1DCA97644();
  swift_release();
  swift_release();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v26;
  *(void *)(v28 + 24) = v27;
  swift_release();
  return sub_1DC97AD2C;
}

void sub_1DC979E64(void (*a1)(void))
{
  type metadata accessor for SNError();
  id v2 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 2, 0, 0xD000000000000028, 0x80000001DCB94040);
  a1();
}

void sub_1DC979F08()
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DCB86FE8();
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF810);
  oslog = sub_1DCB86FC8();
  os_log_type_t v1 = sub_1DCB88488();
  if (os_log_type_enabled(oslog, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v2 = 0;
    _os_log_impl(&dword_1DC873000, oslog, v1, "companion service connection invalidated", v2, 2u);
    MEMORY[0x1E01A99C0](v2, -1, -1);
  }
}

uint64_t sub_1DC979FF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1E01A9AE0](a2 + 16);
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = sub_1DCB87E48();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 1, 1, v13);
    size_t v14 = (void *)swift_allocObject();
    void v14[2] = 0;
    void v14[3] = 0;
    v14[4] = a1;
    void v14[5] = v12;
    v14[6] = a3;
    v14[7] = a4;
    id v15 = a1;
    swift_retain();
    sub_1DCA97644();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC97A114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  type metadata accessor for SNFileSharingUtils();
  uint64_t v10 = (void *)swift_task_alloc();
  void v7[8] = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_1DC97A1D0;
  return sub_1DC915C0C(a4, a5, 1.0);
}

uint64_t sub_1DC97A1D0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  *(void *)(v1 + 72) = v0;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DC97A2A8, 0, 0);
}

uint64_t sub_1DC97A2A8()
{
  uint64_t v1 = (void *)v0[9];
  if (v1)
  {
    id v2 = (void (*)(void *))v0[6];
    uint64_t v3 = type metadata accessor for SNFileServerDiscoveryResult();
    v0[2] = v1;
    v0[5] = v3;
    id v4 = v1;
    v2(v0 + 2);

    sub_1DC8818D0((uint64_t)(v0 + 2));
  }
  sub_1DC8BA978();
  return v5();
}

uint64_t sub_1DC97A344(void *a1, void (*a2)(void *))
{
  type metadata accessor for SNFileSharingUtils();
  id v4 = sub_1DC915520(1uLL, a1);
  v7[3] = type metadata accessor for SNFileServerDiscoveryResult();
  v7[0] = v4;
  id v5 = v4;
  a2(v7);

  return sub_1DC8818D0((uint64_t)v7);
}

void sub_1DC97A400(void *a1)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DCB86FE8();
  sub_1DC89F57C(v2, (uint64_t)qword_1EAAFF810);
  id v8 = a1;
  uint64_t v3 = sub_1DCB86FC8();
  os_log_type_t v4 = sub_1DCB88488();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412546;
    id v7 = v8;
    sub_1DCB88778();
    *uint64_t v6 = v8;

    *(_WORD *)(v5 + 12) = 1024;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v3, v4, "device updated: %@ with changes: %u", (uint8_t *)v5, 0x12u);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v6, -1, -1);
    MEMORY[0x1E01A99C0](v5, -1, -1);
  }
  else
  {
  }
}

void sub_1DC97A5FC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1DC97A670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  return MEMORY[0x1F4188298](sub_1DC97A694, 0, 0);
}

uint64_t sub_1DC97A694()
{
  uint64_t v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_1DC97A788;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1DCB29604;
  v0[13] = &unk_1E6CA7588;
  v0[14] = v2;
  objc_msgSend(v1, sel_activateWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DC97A788()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *(void *)(v0 + 48);
  *(void *)(v2 + 144) = v1;
  if (v1) {
    uint64_t v3 = sub_1DC97A8D0;
  }
  else {
    uint64_t v3 = sub_1DC97A870;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1DC97A870()
{
  sub_1DC8867A8();
  (*(void (**)(void))(v0 + 128))(0);
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC97A8D0()
{
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = *(void (**)(void *))(v0 + 128);
  swift_willThrow();
  id v3 = v1;
  v2(v1);

  sub_1DC8BA978();
  return v4();
}

uint64_t sub_1DC97A968(void *a1)
{
  objc_msgSend(a1, sel_invalidate);

  return sub_1DCB87EE8();
}

id SNDiscoverFileServerRequest.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SNDiscoverFileServerRequest();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNDiscoverFileServerRequest()
{
  return self;
}

uint64_t (*sub_1DC97AA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  return sub_1DC97AD2C;
}

uint64_t method lookup function for SNDiscoverFileServerRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNDiscoverFileServerRequest);
}

ValueMetadata *type metadata accessor for DiscoverFileServerRequest()
{
  return &type metadata for DiscoverFileServerRequest;
}

unint64_t sub_1DC97AA74()
{
  unint64_t result = qword_1EAAA2168;
  if (!qword_1EAAA2168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2168);
  }
  return result;
}

unint64_t sub_1DC97AAC0()
{
  unint64_t result = qword_1EAAA2178;
  if (!qword_1EAAA2178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2178);
  }
  return result;
}

uint64_t sub_1DC97AB0C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DC97AB44()
{
  sub_1DC979E64(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1DC97AB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC97AB5C()
{
  return swift_release();
}

uint64_t sub_1DC97AB64()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1DC97AB9C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC97ABDC(void *a1)
{
  return sub_1DC979FF0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DC97ABE8(void *a1)
{
  return sub_1DC97A344(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1DC97ABF0()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC97AC38()
{
  uint64_t v2 = *(void *)(v0 + 48);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1DC97AFE8;
  uint64_t v4 = sub_1DC97AFEC();
  return sub_1DC97A670(v4, v5, v6, v7, v8, v2);
}

uint64_t sub_1DC97ACEC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC97AD2C()
{
  return sub_1DC97A968(*(void **)(v0 + 16));
}

uint64_t sub_1DC97AD34()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC97AD84()
{
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_1DC97AE44;
  uint64_t v5 = sub_1DC97AFEC();
  return sub_1DC97A114(v5, v6, v7, v8, v9, v3, v2);
}

uint64_t sub_1DC97AE44()
{
  sub_1DC8867A8();
  sub_1DC886774();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

ValueMetadata *type metadata accessor for DiscoverFileServerRequest.CodingKeys()
{
  return &type metadata for DiscoverFileServerRequest.CodingKeys;
}

unint64_t sub_1DC97AF20()
{
  unint64_t result = qword_1EAAA21B0;
  if (!qword_1EAAA21B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21B0);
  }
  return result;
}

unint64_t sub_1DC97AF70()
{
  unint64_t result = qword_1EAAA21B8;
  if (!qword_1EAAA21B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21B8);
  }
  return result;
}

uint64_t sub_1DC97AFEC()
{
  return v0;
}

uint64_t sub_1DC97B008()
{
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  sub_1DCB891C8();
  sub_1DC97F9DC((long long *)(v0 + 24), (uint64_t)&v3);
  sub_1DC97F9DC(&v3, (uint64_t)&v4);
  if (v5 == 254 || v5 == 255) {
    return sub_1DCB891B8();
  }
  long long v6 = v4;
  unsigned __int8 v7 = v5;
  sub_1DCB891B8();
  sub_1DCB891B8();
  sub_1DC980508((uint64_t *)&v6 + 1, (uint64_t)v8);
  sub_1DC982038(v8);
  if (v2)
  {
    if (v2 == 1)
    {
      sub_1DCB891B8();
      sub_1DC981E74();
      return sub_1DC8A7D3C();
    }
    else
    {
      sub_1DCB891B8();
      return sub_1DC97F9F4((uint64_t)&v3);
    }
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC981E74();
    return sub_1DC8A7DEC();
  }
}

uint64_t sub_1DC97B130(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_1DCB89018(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16))) {
      return 0;
    }
    sub_1DC97F9DC((long long *)(a1 + 24), (uint64_t)&v14);
    sub_1DC97F9DC((long long *)(a2 + 24), (uint64_t)&v13);
    sub_1DC97F9DC(&v14, (uint64_t)&v15);
    if (v16 == 254)
    {
      sub_1DC97F9DC(&v13, (uint64_t)&v21);
      if (v22 != 254) {
        return 0;
      }
    }
    else if (v16 == 255)
    {
      sub_1DC97F9DC(&v13, (uint64_t)&v21);
      if (v22 != 255) {
        return 0;
      }
    }
    else
    {
      long long v17 = v15;
      unsigned __int8 v18 = v16;
      sub_1DC97F9DC(&v13, (uint64_t)&v19);
      if (v20 > 0xFDu) {
        return 0;
      }
      long long v21 = v19;
      unsigned __int8 v22 = v20;
      if (v17 != v19) {
        return 0;
      }
      sub_1DC980508((uint64_t *)&v17 + 1, (uint64_t)v24);
      sub_1DC980508((uint64_t *)&v21 + 1, (uint64_t)v23);
      sub_1DC980508(v24, (uint64_t)&v25);
      if (v26)
      {
        if (v26 == 1)
        {
          uint64_t v7 = (uint64_t)v25;
          sub_1DC982038(v23);
          if (v8 != 1 || (sub_1DC8DCDCC(v7, (uint64_t)v27) & 1) == 0) {
            return 0;
          }
        }
        else
        {
          sub_1DC982038(v23);
          if (v12 != 2 || v27) {
            return 0;
          }
        }
      }
      else
      {
        uint64_t v9 = v25;
        sub_1DC982038(v23);
        if (v10) {
          return 0;
        }
        sub_1DC8DCD50(v9, v27);
        if ((v11 & 1) == 0) {
          return 0;
        }
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1DC97B304(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C616E6F6974706FLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x69617274736E6F63 && a2 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DC97B450(char a1)
{
  if (!a1) {
    return 1701667182;
  }
  if (a1 == 1) {
    return 0x6C616E6F6974706FLL;
  }
  return 0x69617274736E6F63;
}

uint64_t sub_1DC97B4A4(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2208);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC980424();
  sub_1DCB892B8();
  v11[0] = 0;
  sub_1DCB88EC8();
  if (!v2)
  {
    v11[0] = 1;
    sub_1DCB88ED8();
    sub_1DC97F9DC((long long *)(v4 + 24), (uint64_t)&v12);
    sub_1DC97F9DC(&v12, (uint64_t)v11);
    sub_1DC9804BC();
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
}

uint64_t sub_1DC97B61C()
{
  return sub_1DCB891F8();
}

void sub_1DC97B654()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA21F0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D9A0();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC980424();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DC981FF0();
    uint64_t v6 = sub_1DCB88DA8();
    uint64_t v8 = v7;
    LOBYTE(v11) = 1;
    swift_bridgeObjectRetain();
    sub_1DC981FF0();
    char v14 = sub_1DCB88DB8();
    sub_1DC980470();
    sub_1DCB88DF8();
    uint64_t v9 = sub_1DC89D6BC();
    v10(v9);
    sub_1DC937878(v11, v12, v13);
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    sub_1DC97FA28(v11, v12, v13);
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v8;
    *(unsigned char *)(v4 + 16) = v14 & 1;
    *(void *)(v4 + 24) = v11;
    *(void *)(v4 + 32) = v12;
    *(unsigned char *)(v4 + 40) = v13;
  }
  sub_1DC88D674();
}

uint64_t sub_1DC97B83C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 == 254 || a4 == 255) {
    return sub_1DCB891B8();
  }
  sub_1DCB891B8();
  sub_1DCB891B8();
  if (a4)
  {
    if (a4 != 1) {
      return sub_1DCB891B8();
    }
    sub_1DCB891B8();
    sub_1DC981E74();
    return sub_1DC8A7D3C();
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC981E74();
    return sub_1DC8A7DEC();
  }
}

uint64_t sub_1DC97B914(char a1, int64x2_t *a2, unsigned __int8 a3, char a4, int64x2_t *a5, unsigned __int8 a6)
{
  if (a3 == 254)
  {
    if (a6 == 254) {
      return 1;
    }
  }
  else if (a3 == 255)
  {
    if (a6 == 0xFF) {
      return 1;
    }
  }
  else if (a6 <= 0xFDu && a4 == a1)
  {
    if (a3)
    {
      if (a3 == 1)
      {
        if (a6 == 1 && (sub_1DC8DCDCC((uint64_t)a2, (uint64_t)a5) & 1) != 0) {
          return 1;
        }
      }
      else if (a6 == 2 && !a5)
      {
        return 1;
      }
    }
    else if (!a6)
    {
      sub_1DC8DCD50(a2, a5);
      if (v7) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1DC97B9D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72724169746C756DLL && a2 == 0xEA00000000007961;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x616E6F6974636964 && a2 == 0xEA00000000007972;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DC97BB30(char a1)
{
  if (!a1) {
    return 0x72724169746C756DLL;
  }
  if (a1 == 1) {
    return 0x616E6F6974636964;
  }
  return 0x676E69727473;
}

void sub_1DC97BB88()
{
  sub_1DC88D6B0();
  unsigned __int8 v19 = v0;
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAA2348);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA2350);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA2358);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC87E988(&qword_1EAAA2360);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D970();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC980998();
  sub_1DCB892B8();
  if (v19 == 254)
  {
    sub_1DC9809E4();
    sub_1DC981E58();
  }
  else
  {
    if (v19 != 255)
    {
      sub_1DC980A7C();
      sub_1DC981E58();
      sub_1DC980B14();
      sub_1DCB88F18();
      sub_1DC88D5C8();
      v16(v13, v14, v15);
      uint64_t v17 = sub_1DC981FDC();
      v18(v17);
      goto LABEL_7;
    }
    sub_1DC980A30();
    sub_1DC981E58();
  }
  sub_1DC88D5C8();
  v10(v7, v8, v9);
  uint64_t v11 = sub_1DC981FDC();
  v12(v11);
LABEL_7:
  sub_1DC88D674();
}

uint64_t sub_1DC97BE4C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 254 || a3 == 255) {
    goto LABEL_9;
  }
  sub_1DCB891B8();
  sub_1DCB891B8();
  if (a3)
  {
    if (a3 != 1)
    {
LABEL_9:
      sub_1DCB891B8();
      return sub_1DCB891F8();
    }
    sub_1DCB891B8();
    sub_1DC8A7D3C();
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC8A7DEC();
  }
  return sub_1DCB891F8();
}

void sub_1DC97BF18()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  sub_1DC87E988(&qword_1EAAA2300);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA2308);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  sub_1DC87E988(&qword_1EAAA2310);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D988();
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA2318);
  sub_1DC89D4E0();
  uint64_t v23 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC89D9A0();
  unint64_t v10 = v3[4];
  sub_1DC881A8C(v3, v3[3]);
  sub_1DC980998();
  sub_1DCB89298();
  if (!v0)
  {
    uint64_t v11 = sub_1DCB88E58();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12
      && (int v13 = *(unsigned __int8 *)(v11 + 32),
          sub_1DC9CFE4C(1, v12, v11, v11 + 32, 0, (2 * v12) | 1),
          sub_1DC982068(),
          v1 == v10 >> 1))
    {
      if (v13)
      {
        sub_1DC980A30();
        sub_1DC981EBC();
        sub_1DC88D5C8();
        v14();
        swift_unknownObjectRelease();
        sub_1DC88D5C8();
        v15();
      }
      else
      {
        sub_1DC980A7C();
        sub_1DC981EBC();
        sub_1DC980AC8();
        sub_1DCB88DF8();
        sub_1DC88D5C8();
        v20();
        swift_unknownObjectRelease();
        uint64_t v21 = sub_1DC982004();
        v22(v21);
      }
    }
    else
    {
      sub_1DCB88B18();
      sub_1DC883884();
      uint64_t v17 = v16;
      sub_1DC87E988(&qword_1EAA9E130);
      *uint64_t v17 = &unk_1F37E7658;
      sub_1DCB88D68();
      sub_1DC981EDC();
      sub_1DC981F60();
      uint64_t v18 = sub_1DC981F48();
      v19(v18);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v7);
    }
  }
  sub_1DC8818D0((uint64_t)v3);
  sub_1DC88D674();
}

uint64_t sub_1DC97C404(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1DCB891B8();
  if (a4)
  {
    if (a4 == 1)
    {
      sub_1DCB891B8();
      sub_1DC981E74();
      return sub_1DC8A7D3C();
    }
    else
    {
      return sub_1DCB891B8();
    }
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC981E74();
    return sub_1DC8A7DEC();
  }
}

BOOL sub_1DC97C4AC(char a1, int64x2_t *a2, char a3, char a4, int64x2_t *a5, char a6)
{
  if (a1 != a4) {
    return 0;
  }
  if (!a3)
  {
    if (a6) {
      return 0;
    }
    sub_1DC8DCD50(a2, a5);
    return (v6 & 1) != 0;
  }
  if (a3 != 1) {
    return a6 == 2 && !a5;
  }
  return a6 == 1 && (sub_1DC8DCDCC((uint64_t)a2, (uint64_t)a5) & 1) != 0;
}

uint64_t sub_1DC97C534(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6570795461746164 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F436570616873 && a2 == 0xEF746E6961727473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC97C648(char a1)
{
  if (a1) {
    return 0x6E6F436570616873;
  }
  else {
    return 0x6570795461746164;
  }
}

void sub_1DC97C68C()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2238);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DC980520();
  sub_1DCB892B8();
  sub_1DC980604();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC980650();
    sub_1DCB88F18();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1DC88D674();
}

uint64_t sub_1DC97C7E4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    sub_1DCB891B8();
    if (a3 == 1) {
      sub_1DC8A7D3C();
    }
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC8A7DEC();
  }
  return sub_1DCB891F8();
}

uint64_t sub_1DC97C880(void *a1)
{
  sub_1DC87E988(&qword_1EAAA2218);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC981E40();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC980520();
  sub_1DCB89298();
  sub_1DC98056C();
  sub_1DC982018();
  sub_1DC9805B8();
  sub_1DC982018();
  uint64_t v3 = sub_1DC981F98();
  v4(v3);
  sub_1DC8818D0((uint64_t)a1);
  return v6;
}

uint64_t sub_1DC97C9E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x363174616F6C66 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x323374616F6C66 && a2 == 0xE700000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x343674616F6C66 && a2 == 0xE700000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x3233746E69 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1DC97CB90(char a1)
{
  uint64_t result = 0x363174616F6C66;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x323374616F6C66;
      break;
    case 2:
      uint64_t result = 0x343674616F6C66;
      break;
    case 3:
      uint64_t result = 0x3233746E69;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DC97CC18()
{
  sub_1DC88D6B0();
  uint64_t v35 = v2;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA24A0);
  sub_1DC89D4E0();
  uint64_t v33 = v6;
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1DC88D550();
  uint64_t v32 = v7;
  sub_1DC87E988(&qword_1EAAA24A8);
  sub_1DC89D4E0();
  uint64_t v30 = v9;
  uint64_t v31 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  uint64_t v29 = v10;
  sub_1DC87E988(&qword_1EAAA24B0);
  sub_1DC89D4E0();
  uint64_t v27 = v12;
  uint64_t v28 = v11;
  MEMORY[0x1F4188790](v11);
  sub_1DC8C1FC4();
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA24B8);
  sub_1DC89D4E0();
  uint64_t v26 = v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DC87E988(&qword_1EAAA24C0);
  sub_1DC89D4E0();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  sub_1DC89D9A0();
  sub_1DC881A8C(v4, v4[3]);
  sub_1DC981768();
  sub_1DCB892B8();
  switch((char)v35)
  {
    case 1:
      sub_1DC98184C();
      sub_1DC981E80();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0, v28);
      break;
    case 2:
      sub_1DC981800();
      uint64_t v22 = v29;
      sub_1DC981E80();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_5;
    case 3:
      sub_1DC9817B4();
      uint64_t v22 = v32;
      sub_1DC981E80();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
LABEL_5:
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
      break;
    default:
      sub_1DC981898();
      sub_1DC981E80();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v13);
      break;
  }
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v18);
  sub_1DC88D674();
}

void sub_1DC97CF20()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v36 = sub_1DC87E988(&qword_1EAAA2450);
  sub_1DC89D4E0();
  uint64_t v33 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1DC981F2C(v6, v31);
  sub_1DC87E988(&qword_1EAAA2458);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC909D74(v8, v32);
  sub_1DC87E988(&qword_1EAAA2460);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA2468);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC89D970();
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA2470);
  sub_1DC89D4E0();
  uint64_t v34 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC89D9B8();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DC981768();
  sub_1DCB89298();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v37 = v3;
  uint64_t v14 = v1;
  uint64_t v15 = sub_1DCB88E58();
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16
    || (uint64_t v17 = *(unsigned __int8 *)(v15 + 32),
        sub_1DC9CFE4C(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        uint64_t v19 = v18,
        unint64_t v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v23 = v22;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v23 = &unk_1F37E7910;
    sub_1DCB88D68();
    sub_1DCB88B08();
    sub_1DC981F60();
    (*(void (**)(void *))(v24 + 104))(v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v14, v11);
    uint64_t v3 = v37;
LABEL_7:
    sub_1DC8818D0((uint64_t)v3);
    goto LABEL_8;
  }
  switch(v17)
  {
    case 1:
      sub_1DC98184C();
      sub_1DC981E9C();
      goto LABEL_12;
    case 2:
      sub_1DC981800();
      sub_1DC981E9C();
      goto LABEL_12;
    case 3:
      sub_1DC9817B4();
      sub_1DCB88D58();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v36);
      swift_unknownObjectRelease();
      uint64_t v28 = sub_1DC981E10();
      v29(v28);
      uint64_t v30 = (uint64_t)v37;
      goto LABEL_13;
    default:
      sub_1DC981898();
      sub_1DC981E9C();
LABEL_12:
      sub_1DC88D5C8();
      v25();
      swift_unknownObjectRelease();
      uint64_t v26 = sub_1DC981E10();
      v27(v26);
      uint64_t v30 = (uint64_t)v37;
LABEL_13:
      sub_1DC8818D0(v30);
      break;
  }
LABEL_8:
  sub_1DC88D674();
}

uint64_t sub_1DC97D3E4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 == 1)
    {
      sub_1DCB891B8();
      sub_1DC981E74();
      return sub_1DC8A7D3C();
    }
    else
    {
      return sub_1DCB891B8();
    }
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC981E74();
    return sub_1DC8A7DEC();
  }
}

void sub_1DC97D470(int64x2_t *a1, char a2, int64x2_t *a3, char a4)
{
  if (a2)
  {
    if (a2 == 1 && a4 == 1) {
      sub_1DC8DCDCC((uint64_t)a1, (uint64_t)a3);
    }
  }
  else if (!a4)
  {
    sub_1DC8DCD50(a1, a3);
  }
}

uint64_t sub_1DC97D4C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65676E6172 && a2 == 0xE500000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x746172656D756E65 && a2 == 0xEA00000000006465)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DC97D630(char a1)
{
  if (!a1) {
    return 0x6669636570736E75;
  }
  if (a1 == 1) {
    return 0x65676E6172;
  }
  return 0x746172656D756E65;
}

void sub_1DC97D690()
{
  sub_1DC88D6B0();
  char v15 = v0;
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAA22C0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC909D74(v4, v14);
  sub_1DC87E988(&qword_1EAAA22C8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAA22D0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA22D8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC98069C();
  sub_1DCB892B8();
  if (v15)
  {
    if (v15 != 1)
    {
      sub_1DC980820();
      sub_1DC981E58();
      sub_1DC88D5C8();
      v11();
      uint64_t v12 = sub_1DC981F80();
      v13(v12);
      goto LABEL_7;
    }
    sub_1DC9806E8();
    sub_1DC981E58();
    sub_1DC87E988(&qword_1EAAA2280);
    sub_1DC98086C(&qword_1EAAA22E0, &qword_1EAAA22E8);
    sub_1DCB88F18();
  }
  else
  {
    sub_1DC980734();
    sub_1DC981E58();
    sub_1DC87E988(&qword_1EAAA2298);
    sub_1DC9808F8();
    sub_1DCB88F18();
  }
  sub_1DC88D5C8();
  v8();
  uint64_t v9 = sub_1DC981F80();
  v10(v9);
LABEL_7:
  sub_1DC88D674();
}

uint64_t sub_1DC97D99C(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_1DCB891B8();
    if (a2 == 1) {
      sub_1DC8A7D3C();
    }
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC8A7DEC();
  }
  return sub_1DCB891F8();
}

void sub_1DC97DA24()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  sub_1DC87E988(&qword_1EAAA2250);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC981F2C(v5, v32);
  sub_1DC87E988(&qword_1EAAA2258);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA2260);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC89D9A0();
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA2268);
  sub_1DC89D4E0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1DC981E40();
  unint64_t v12 = *(void *)(v3 + 32);
  uint64_t v33 = v3;
  uint64_t v13 = (void *)sub_1DC981E74();
  sub_1DC881A8C(v13, v14);
  sub_1DC98069C();
  sub_1DCB89298();
  if (v0)
  {
    uint64_t v15 = v3;
    goto LABEL_10;
  }
  uint64_t v16 = v1;
  uint64_t v17 = sub_1DCB88E58();
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    uint64_t v21 = v1;
    uint64_t v22 = v8;
LABEL_9:
    uint64_t v15 = v33;
    sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v24 = v23;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v24 = &unk_1F37E7468;
    sub_1DCB88D68();
    sub_1DC981EDC();
    sub_1DC981F60();
    uint64_t v25 = sub_1DC981F48();
    v26(v25);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21, v22);
    goto LABEL_10;
  }
  uint64_t v19 = v1;
  int v20 = *(unsigned __int8 *)(v17 + 32);
  sub_1DC9CFE4C(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
  sub_1DC982068();
  if (v16 != v12 >> 1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v8;
    goto LABEL_9;
  }
  if (v20)
  {
    sub_1DC980734();
    sub_1DC981F04();
    sub_1DC87E988(&qword_1EAAA2298);
    sub_1DC980780();
    sub_1DCB88DF8();
    uint64_t v15 = v33;
    sub_1DC88D5C8();
    v29();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_1DC981E28();
    v31(v30);
  }
  else
  {
    sub_1DC980820();
    sub_1DCB88D58();
    sub_1DC88D5C8();
    v27();
    swift_unknownObjectRelease();
    sub_1DC982054();
    sub_1DC88D5C8();
    v28();
    uint64_t v15 = v33;
  }
LABEL_10:
  sub_1DC8818D0(v15);
  sub_1DC88D674();
}

uint64_t sub_1DC97DF98()
{
  return sub_1DC97B450(*v0);
}

uint64_t sub_1DC97DFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC97B304(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC97DFC8(uint64_t a1)
{
  unint64_t v2 = sub_1DC980424();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E004(uint64_t a1)
{
  unint64_t v2 = sub_1DC980424();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1DC97E040@<D0>(_OWORD *a1@<X8>)
{
  sub_1DC97B654();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = *(_OWORD *)v5;
    double result = *(double *)&v5[9];
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)&v5[9];
  }
  return result;
}

uint64_t sub_1DC97E084(void *a1)
{
  return sub_1DC97B4A4(a1);
}

uint64_t sub_1DC97E0C0()
{
  return sub_1DC97B61C();
}

uint64_t sub_1DC97E0FC()
{
  return sub_1DC97B008();
}

uint64_t sub_1DC97E138()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC97E188(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return sub_1DC97B130((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_1DC97E1D4()
{
  return sub_1DC97BB30(*v0);
}

uint64_t sub_1DC97E1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC97B9D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC97E204(uint64_t a1)
{
  unint64_t v2 = sub_1DC980998();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E240(uint64_t a1)
{
  unint64_t v2 = sub_1DC980998();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97E27C(uint64_t a1)
{
  unint64_t v2 = sub_1DC980A30();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E2B8(uint64_t a1)
{
  unint64_t v2 = sub_1DC980A30();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97E2F4(uint64_t a1)
{
  unint64_t v2 = sub_1DC980A7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E330(uint64_t a1)
{
  unint64_t v2 = sub_1DC980A7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97E36C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9809E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E3A8(uint64_t a1)
{
  unint64_t v2 = sub_1DC9809E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DC97E3E4(uint64_t a1@<X8>)
{
  sub_1DC97BF18();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v5;
  }
}

void sub_1DC97E414()
{
}

uint64_t sub_1DC97E434()
{
  return sub_1DC97BE4C(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1DC97E440(uint64_t a1)
{
  return sub_1DC97B83C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_1DC97E44C()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1DCB891A8();
  if (v1 == 254 || v1 == 255) {
    goto LABEL_9;
  }
  sub_1DCB891B8();
  sub_1DCB891B8();
  if (v1)
  {
    if (v1 != 1)
    {
LABEL_9:
      sub_1DCB891B8();
      return sub_1DCB891F8();
    }
    sub_1DCB891B8();
    sub_1DC8A7D3C();
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC8A7DEC();
  }
  return sub_1DCB891F8();
}

uint64_t sub_1DC97E514(uint64_t a1, uint64_t a2)
{
  return sub_1DC97B914(*(void *)a1, *(int64x2_t **)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(int64x2_t **)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1DC97E530()
{
  return sub_1DC97C648(*v0);
}

uint64_t sub_1DC97E538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC97C534(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC97E560(uint64_t a1)
{
  unint64_t v2 = sub_1DC980520();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E59C(uint64_t a1)
{
  unint64_t v2 = sub_1DC980520();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97E5D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DC97C880(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

void sub_1DC97E60C()
{
}

uint64_t sub_1DC97E630()
{
  return sub_1DC97C7E4(*v0, *((void *)v0 + 1), v0[16]);
}

uint64_t sub_1DC97E640(uint64_t a1)
{
  return sub_1DC97C404(a1, *v1, *((void *)v1 + 1), v1[16]);
}

uint64_t sub_1DC97E650()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1DCB891A8();
  sub_1DCB891B8();
  if (v1)
  {
    sub_1DCB891B8();
    if (v1 == 1) {
      sub_1DC8A7D3C();
    }
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC8A7DEC();
  }
  return sub_1DCB891F8();
}

BOOL sub_1DC97E6EC(uint64_t a1, uint64_t a2)
{
  return sub_1DC97C4AC(*(unsigned char *)a1, *(int64x2_t **)(a1 + 8), *(unsigned char *)(a1 + 16), *(unsigned char *)a2, *(int64x2_t **)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1DC97E70C()
{
  return sub_1DC97CB90(*v0);
}

uint64_t sub_1DC97E714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC97C9E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC97E73C(uint64_t a1)
{
  unint64_t v2 = sub_1DC981768();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E778(uint64_t a1)
{
  unint64_t v2 = sub_1DC981768();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97E7B4(uint64_t a1)
{
  unint64_t v2 = sub_1DC981898();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E7F0(uint64_t a1)
{
  unint64_t v2 = sub_1DC981898();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97E82C(uint64_t a1)
{
  unint64_t v2 = sub_1DC98184C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E868(uint64_t a1)
{
  unint64_t v2 = sub_1DC98184C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97E8A4(uint64_t a1)
{
  unint64_t v2 = sub_1DC981800();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E8E0(uint64_t a1)
{
  unint64_t v2 = sub_1DC981800();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97E91C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9817B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97E958(uint64_t a1)
{
  unint64_t v2 = sub_1DC9817B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DC97E994(unsigned char *a1@<X8>)
{
  sub_1DC97CF20();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1DC97E9C0()
{
}

uint64_t sub_1DC97E9DC()
{
  return sub_1DC97D630(*v0);
}

uint64_t sub_1DC97E9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC97D4C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC97EA0C(uint64_t a1)
{
  unint64_t v2 = sub_1DC98069C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97EA48(uint64_t a1)
{
  unint64_t v2 = sub_1DC98069C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97EA84(uint64_t a1)
{
  unint64_t v2 = sub_1DC9806E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97EAC0(uint64_t a1)
{
  unint64_t v2 = sub_1DC9806E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97EAFC(uint64_t a1)
{
  unint64_t v2 = sub_1DC980734();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97EB38(uint64_t a1)
{
  unint64_t v2 = sub_1DC980734();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC97EB74(uint64_t a1)
{
  unint64_t v2 = sub_1DC980820();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC97EBB0(uint64_t a1)
{
  unint64_t v2 = sub_1DC980820();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DC97EBEC(uint64_t a1@<X8>)
{
  sub_1DC97DA24();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_1DC97EC1C()
{
}

uint64_t sub_1DC97EC3C()
{
  return sub_1DC97D99C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1DC97EC48(uint64_t a1)
{
  return sub_1DC97D3E4(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_1DC97EC54()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1DCB891A8();
  if (v1)
  {
    sub_1DCB891B8();
    if (v1 == 1) {
      sub_1DC8A7D3C();
    }
  }
  else
  {
    sub_1DCB891B8();
    sub_1DC8A7DEC();
  }
  return sub_1DCB891F8();
}

void sub_1DC97ECE0(uint64_t a1, uint64_t a2)
{
}

id sub_1DC97ECF8(void *a1)
{
  unint64_t v2 = (void *)sub_1DCB87908();
  id v3 = objc_msgSend(a1, sel_featureValueForName_, v2);

  if (!v3)
  {
    sub_1DC884E74();
    uint64_t v4 = sub_1DC883884();
    sub_1DC981FC0(v4, v5);
  }
  return v3;
}

id sub_1DC97ED7C(void *a1)
{
  id v3 = sub_1DC97ECF8(a1);
  if (!v1)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_multiArrayValue);
    if (v5)
    {
      id v2 = v5;
    }
    else
    {
      sub_1DC884E74();
      uint64_t v7 = sub_1DC883884();
      sub_1DC981FC0(v7, v8);
    }
  }
  return v2;
}

uint64_t sub_1DC97EDFC(void *a1)
{
  id v3 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v4 = sub_1DCB877B8();

  uint64_t v5 = sub_1DC97EF24(v4);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    id v6 = objc_msgSend(a1, sel_outputDescriptionsByName);
    uint64_t v7 = sub_1DCB877B8();

    sub_1DC97EF24(v7);
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1DC97EF24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1DC981F70();
  sub_1DC89854C();
  uint64_t v3 = v27;
  uint64_t result = sub_1DC9A4ACC(a1);
  uint64_t v6 = result;
  int v8 = v7;
  char v10 = v9 & 1;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 64 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v8) {
      goto LABEL_24;
    }
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v14 = *(void **)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain_n();
    id v15 = v14;
    sub_1DC97F1CC();
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease_n();

      return v3;
    }
    long long v26 = v23;
    if (v13 == (void)v23 && v12 == *((void *)&v23 + 1))
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_1DC981E74();
      char v17 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        sub_1DC8CBCC4((uint64_t)&v26);
        sub_1DC97F9DC((_OWORD *)((char *)v24 + 8), (uint64_t)v25);
        sub_1DC97F9F4((uint64_t)v25);
        type metadata accessor for SNError();
        sub_1DC931D18(0x80000001DCB90E90, 0xD00000000000001FLL, (uint64_t)"feature name does not match key");
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();

        return v3;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = v3;
    unint64_t v18 = *(void *)(v3 + 16);
    if (v18 >= *(void *)(v3 + 24) >> 1)
    {
      sub_1DC89854C();
      uint64_t v3 = v27;
    }
    *(void *)(v3 + 16) = v18 + 1;
    uint64_t v19 = (_OWORD *)(v3 + 48 * v18);
    long long v20 = v24[0];
    *(_OWORD *)((char *)v19 + 57) = *(_OWORD *)((char *)v24 + 9);
    void v19[2] = v23;
    v19[3] = v20;
    uint64_t result = sub_1DC97F95C(v6, v8, v10 & 1, a1);
    uint64_t v6 = result;
    int v8 = v21;
    char v10 = v22 & 1;
    if (!--v2)
    {
      sub_1DC8F2B2C(result, v21, v22 & 1);
      return v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

void sub_1DC97F1CC()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  id v5 = objc_msgSend(v1, sel_type);
  if (v5 == (id)3)
  {
    uint64_t v14 = 0;
    uint64_t v11 = 0;
    char v13 = -2;
    goto LABEL_9;
  }
  if (v5 == (id)6)
  {
    uint64_t v14 = 0;
    uint64_t v11 = 0;
    char v13 = -1;
    goto LABEL_9;
  }
  if (v5 != (id)5)
  {
    type metadata accessor for SNError();
    sub_1DC931D18(0x80000001DCB90E90, 0xD000000000000018, (uint64_t)"unsupported feature type");
LABEL_12:
    swift_willThrow();
    goto LABEL_13;
  }
  id v6 = objc_msgSend(v2, sel_multiArrayConstraint);
  if (!v6)
  {
    sub_1DC884E74();
    sub_1DC883884();
    *long long v20 = 0;
    goto LABEL_12;
  }
  int v7 = v6;
  sub_1DC97F340(v6);
  unsigned __int8 v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12;

  if (!v0)
  {
    uint64_t v14 = v9;
LABEL_9:
    id v15 = objc_msgSend(v2, sel_name);
    uint64_t v16 = sub_1DCB87938();
    uint64_t v18 = v17;

    unsigned __int8 v19 = objc_msgSend(v2, sel_isOptional);
    *(void *)uint64_t v4 = v16;
    *(void *)(v4 + 8) = v18;
    *(unsigned char *)(v4 + 16) = v19;
    *(void *)(v4 + 24) = v14;
    *(void *)(v4 + 32) = v11;
    *(unsigned char *)(v4 + 40) = v13;
  }
LABEL_13:
  sub_1DC88D674();
}

void sub_1DC97F340(void *a1)
{
  id v3 = objc_msgSend(a1, sel_shapeConstraint);
  sub_1DC97F3DC(v3);

  if (!v1) {
    sub_1DC97F8C0((uint64_t)objc_msgSend(a1, sel_dataType));
  }
}

void sub_1DC97F3DC(void *a1)
{
  id v3 = objc_msgSend(a1, sel_type);
  if (v3 == (id)1) {
    return;
  }
  if (v3 != (id)2)
  {
    if (v3 == (id)3)
    {
      id v4 = objc_msgSend(a1, sel_sizeRangeForDimension);
      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
      uint64_t v1 = sub_1DCB87C38();

      if ((unint64_t)v1 >> 62) {
        goto LABEL_52;
      }
      uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    sub_1DC97FA40();
    sub_1DC883884();
    *uint64_t v33 = 1;
    swift_willThrow();
    return;
  }
  id v19 = objc_msgSend(a1, sel_enumeratedShapes);
  sub_1DC87E988(&qword_1EAA9C8D0);
  uint64_t v20 = sub_1DCB87C38();

  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v48 = MEMORY[0x1E4FBC860];
  sub_1DC981F70();
  sub_1DC89859C();
  uint64_t v22 = 0;
  uint64_t v23 = v48;
  uint64_t v41 = v21;
  uint64_t v42 = v20 + 32;
  while (1)
  {
    unint64_t v24 = *(void *)(v42 + 8 * v22);
    if (v24 >> 62) {
      break;
    }
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_21;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v1 = MEMORY[0x1E4FBC860];
LABEL_32:
    unint64_t v32 = *(void *)(v23 + 16);
    unint64_t v31 = *(void *)(v23 + 24);
    if (v32 >= v31 >> 1)
    {
      sub_1DC981FB0(v31);
      sub_1DC89859C();
    }
    ++v22;
    *(void *)(v23 + 16) = v32 + 1;
    *(void *)(v23 + 8 * v32 + 32) = v1;
    if (v22 == v21) {
      goto LABEL_47;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1DCB88CC8();
  if (!v25) {
    goto LABEL_31;
  }
LABEL_21:
  uint64_t v45 = v23;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_1DC897E1C();
  if ((v25 & 0x8000000000000000) == 0)
  {
    uint64_t v43 = v22;
    uint64_t v26 = 0;
    uint64_t v1 = v46;
    do
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x1E01A7AE0](v26, v24);
      }
      else {
        id v27 = *(id *)(v24 + 8 * v26 + 32);
      }
      uint64_t v28 = v27;
      id v29 = objc_msgSend(v27, sel_integerValue);

      unint64_t v30 = *(void *)(v46 + 16);
      if (v30 >= *(void *)(v46 + 24) >> 1) {
        sub_1DC897E1C();
      }
      ++v26;
      *(void *)(v46 + 16) = v30 + 1;
      *(void *)(v46 + 8 * v30 + 32) = v29;
    }
    while (v25 != v26);
    swift_bridgeObjectRelease();
    uint64_t v22 = v43;
    uint64_t v23 = v45;
    uint64_t v21 = v41;
    goto LABEL_32;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DCB88CC8();
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_38:
    uint64_t v34 = *(void *)(v8 + 16);
    if (v34)
    {
      sub_1DC981F70();
      sub_1DC8985EC();
      uint64_t v35 = v6;
      uint64_t v36 = (void *)(v8 + 40);
      do
      {
        uint64_t v1 = *(v36 - 1);
        uint64_t v37 = v1 + *v36;
        if (__OFADD__(v1, *v36))
        {
          uint64_t v37 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else if (v37 < v1)
        {
          goto LABEL_51;
        }
        unint64_t v39 = *(void *)(v35 + 16);
        unint64_t v38 = *(void *)(v35 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_1DC981FB0(v38);
          sub_1DC8985EC();
        }
        v36 += 2;
        *(void *)(v35 + 16) = v39 + 1;
        uint64_t v40 = v35 + 16 * v39;
        *(void *)(v40 + 32) = v1;
        *(void *)(v40 + 40) = v37;
        --v34;
      }
      while (v34);
    }
    goto LABEL_47;
  }
  uint64_t v47 = MEMORY[0x1E4FBC860];
  sub_1DC89863C();
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    uint64_t v8 = v47;
    unint64_t v44 = v1 & 0xC000000000000001;
    uint64_t v9 = v1;
    uint64_t v10 = v5;
    do
    {
      if (v44) {
        id v11 = (id)MEMORY[0x1E01A7AE0](v7, v1);
      }
      else {
        id v11 = *(id *)(v1 + 8 * v7 + 32);
      }
      char v12 = v11;
      id v13 = objc_msgSend(v11, sel_rangeValue);
      uint64_t v15 = v14;

      unint64_t v17 = *(void *)(v47 + 16);
      unint64_t v16 = *(void *)(v47 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1DC981FB0(v16);
        sub_1DC89863C();
      }
      ++v7;
      *(void *)(v47 + 16) = v17 + 1;
      uint64_t v18 = v47 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      uint64_t v1 = v9;
    }
    while (v10 != v7);
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_38;
  }
  __break(1u);
}

uint64_t sub_1DC97F8C0(uint64_t a1)
{
  switch(a1)
  {
    case 65552:
      return 0;
    case 131104:
      return 3;
    case 65600:
      return 2;
    case 65568:
      return 1;
  }
  sub_1DC97FA40();
  uint64_t v2 = sub_1DC883884();
  return sub_1DC981FC0(v2, v3);
}

uint64_t sub_1DC97F95C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return sub_1DCB88948();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1DC97F9DC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1DC97F9F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC97FA28(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DC97FA40()
{
  unint64_t result = qword_1EAAA21C0;
  if (!qword_1EAAA21C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21C0);
  }
  return result;
}

void type metadata accessor for MLFeatureUtils()
{
}

uint64_t sub_1DC97FA98(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC97FAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  return a1;
}

uint64_t sub_1DC97FB70(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  unsigned int v5 = (_OWORD *)(a2 + 24);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      char v10 = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC8CBCC4(a1 + 24);
      char v8 = *(unsigned char *)(a2 + 40);
      _OWORD *v4 = *v5;
      *(unsigned char *)(a1 + 40) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    char v9 = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *v5;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    _OWORD *v4 = v7;
  }
  return a1;
}

uint64_t sub_1DC97FC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 <= 0xFD)
    {
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = v5;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1DC8CBCC4(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_1DC97FD08(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DC97FD48(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MLFeatureUtils.FeatureDescription()
{
}

uint64_t sub_1DC97FDA4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC97FDE4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC97FE30(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MLFeatureUtils.MultiArrayConstraint()
{
}

void type metadata accessor for MLFeatureUtils.DomainError()
{
}

uint64_t sub_1DC97FE90(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC97FEC8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC97FF0C(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_1DC97FF20(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC97FF5C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DC97FF9C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DC97FFE0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1DC97FFF8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

void type metadata accessor for MLFeatureUtils.ShapeConstraint()
{
}

uint64_t sub_1DC980020(uint64_t result)
{
  if (*(unsigned __int8 *)(result + 16) <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC980038(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 > 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DC980094(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) > 2u)
  {
    if (v4 <= 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v6 = *((unsigned char *)a2 + 16);
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(unsigned char *)(a1 + 16) = v6;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v7 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v7;
    return a1;
  }
  if (v4 > 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v5 = *((unsigned char *)a2 + 16);
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC980140(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 16) > 2u) {
    goto LABEL_5;
  }
  unsigned int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 > 2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    return a1;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DC9801B8(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 2) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 3) {
    return v4 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC980200(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -2 - a2;
    }
  }
  return result;
}

uint64_t sub_1DC98024C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 > 2) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC980260(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for MLFeatureUtils.FeatureConstraint()
{
}

unint64_t sub_1DC980298()
{
  unint64_t result = qword_1EAAA21C8;
  if (!qword_1EAAA21C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21C8);
  }
  return result;
}

unint64_t sub_1DC9802E8()
{
  unint64_t result = qword_1EAAA21D0;
  if (!qword_1EAAA21D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21D0);
  }
  return result;
}

unint64_t sub_1DC980338()
{
  unint64_t result = qword_1EAAA21D8;
  if (!qword_1EAAA21D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21D8);
  }
  return result;
}

unint64_t sub_1DC980388()
{
  unint64_t result = qword_1EAAA21E0;
  if (!qword_1EAAA21E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21E0);
  }
  return result;
}

unint64_t sub_1DC9803D8()
{
  unint64_t result = qword_1EAAA21E8;
  if (!qword_1EAAA21E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21E8);
  }
  return result;
}

unint64_t sub_1DC980424()
{
  unint64_t result = qword_1EAAA21F8;
  if (!qword_1EAAA21F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA21F8);
  }
  return result;
}

unint64_t sub_1DC980470()
{
  unint64_t result = qword_1EAAA2200;
  if (!qword_1EAAA2200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2200);
  }
  return result;
}

unint64_t sub_1DC9804BC()
{
  unint64_t result = qword_1EAAA2210;
  if (!qword_1EAAA2210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2210);
  }
  return result;
}

uint64_t sub_1DC980508(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

unint64_t sub_1DC980520()
{
  unint64_t result = qword_1EAAA2220;
  if (!qword_1EAAA2220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2220);
  }
  return result;
}

unint64_t sub_1DC98056C()
{
  unint64_t result = qword_1EAAA2228;
  if (!qword_1EAAA2228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2228);
  }
  return result;
}

unint64_t sub_1DC9805B8()
{
  unint64_t result = qword_1EAAA2230;
  if (!qword_1EAAA2230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2230);
  }
  return result;
}

unint64_t sub_1DC980604()
{
  unint64_t result = qword_1EAAA2240;
  if (!qword_1EAAA2240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2240);
  }
  return result;
}

unint64_t sub_1DC980650()
{
  unint64_t result = qword_1EAAA2248;
  if (!qword_1EAAA2248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2248);
  }
  return result;
}

unint64_t sub_1DC98069C()
{
  unint64_t result = qword_1EAAA2270;
  if (!qword_1EAAA2270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2270);
  }
  return result;
}

unint64_t sub_1DC9806E8()
{
  unint64_t result = qword_1EAAA2278;
  if (!qword_1EAAA2278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2278);
  }
  return result;
}

unint64_t sub_1DC980734()
{
  unint64_t result = qword_1EAAA2290;
  if (!qword_1EAAA2290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2290);
  }
  return result;
}

unint64_t sub_1DC980780()
{
  unint64_t result = qword_1EAAA22A0;
  if (!qword_1EAAA22A0)
  {
    sub_1DC8863A8(&qword_1EAAA2298);
    sub_1DC8CC998(&qword_1EAAA22A8, &qword_1EAAA22B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA22A0);
  }
  return result;
}

unint64_t sub_1DC980820()
{
  unint64_t result = qword_1EAAA22B8;
  if (!qword_1EAAA22B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA22B8);
  }
  return result;
}

uint64_t sub_1DC98086C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA2280);
    sub_1DC8CC998(a2, (uint64_t *)&unk_1EAA9C8C0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC9808F8()
{
  unint64_t result = qword_1EAAA22F0;
  if (!qword_1EAAA22F0)
  {
    sub_1DC8863A8(&qword_1EAAA2298);
    sub_1DC8CC998(&qword_1EAAA22F8, &qword_1EAAA22B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA22F0);
  }
  return result;
}

unint64_t sub_1DC980998()
{
  unint64_t result = qword_1EAAA2320;
  if (!qword_1EAAA2320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2320);
  }
  return result;
}

unint64_t sub_1DC9809E4()
{
  unint64_t result = qword_1EAAA2328;
  if (!qword_1EAAA2328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2328);
  }
  return result;
}

unint64_t sub_1DC980A30()
{
  unint64_t result = qword_1EAAA2330;
  if (!qword_1EAAA2330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2330);
  }
  return result;
}

unint64_t sub_1DC980A7C()
{
  unint64_t result = qword_1EAAA2338;
  if (!qword_1EAAA2338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2338);
  }
  return result;
}

unint64_t sub_1DC980AC8()
{
  unint64_t result = qword_1EAAA2340;
  if (!qword_1EAAA2340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2340);
  }
  return result;
}

unint64_t sub_1DC980B14()
{
  unint64_t result = qword_1EAAA2368;
  if (!qword_1EAAA2368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2368);
  }
  return result;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureConstraint.CodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureConstraint.MultiArrayCodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureConstraint.MultiArrayCodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureConstraint.DictionaryCodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureConstraint.DictionaryCodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureConstraint.StringCodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureConstraint.StringCodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.ShapeConstraint.CodingKeys()
{
  return &type metadata for MLFeatureUtils.ShapeConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.ShapeConstraint.UnspecifiedCodingKeys()
{
  return &type metadata for MLFeatureUtils.ShapeConstraint.UnspecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.ShapeConstraint.RangeCodingKeys()
{
  return &type metadata for MLFeatureUtils.ShapeConstraint.RangeCodingKeys;
}

unsigned char *_s13SoundAnalysis14MLFeatureUtilsV17FeatureConstraintO20MultiArrayCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC980C74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.ShapeConstraint.EnumeratedCodingKeys()
{
  return &type metadata for MLFeatureUtils.ShapeConstraint.EnumeratedCodingKeys;
}

unsigned char *_s13SoundAnalysis14MLFeatureUtilsV20MultiArrayConstraintV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1DC89DC0C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1DC89DBF4((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC980D68);
      case 4:
        unint64_t result = (unsigned char *)sub_1DC89DBFC((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1DC89DC04(result, a2 + 1);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayConstraint.CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayConstraint.CodingKeys;
}

unsigned char *_s13SoundAnalysis14MLFeatureUtilsV17FeatureConstraintO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1DC89DC0C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1DC89DBF4((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC980E5CLL);
      case 4:
        unint64_t result = (unsigned char *)sub_1DC89DBFC((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1DC89DC04(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.FeatureDescription.CodingKeys()
{
  return &type metadata for MLFeatureUtils.FeatureDescription.CodingKeys;
}

void type metadata accessor for MLFeatureUtils.MultiArrayDataType()
{
}

unint64_t sub_1DC980EAC()
{
  unint64_t result = qword_1EAAA2370;
  if (!qword_1EAAA2370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2370);
  }
  return result;
}

unint64_t sub_1DC980EFC()
{
  unint64_t result = qword_1EAAA2378;
  if (!qword_1EAAA2378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2378);
  }
  return result;
}

unint64_t sub_1DC980F4C()
{
  unint64_t result = qword_1EAAA2380;
  if (!qword_1EAAA2380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2380);
  }
  return result;
}

unint64_t sub_1DC980F9C()
{
  unint64_t result = qword_1EAAA2388;
  if (!qword_1EAAA2388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2388);
  }
  return result;
}

unint64_t sub_1DC980FEC()
{
  unint64_t result = qword_1EAAA2390;
  if (!qword_1EAAA2390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2390);
  }
  return result;
}

unint64_t sub_1DC98103C()
{
  unint64_t result = qword_1EAAA2398;
  if (!qword_1EAAA2398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2398);
  }
  return result;
}

unint64_t sub_1DC98108C()
{
  unint64_t result = qword_1EAAA23A0;
  if (!qword_1EAAA23A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23A0);
  }
  return result;
}

unint64_t sub_1DC9810DC()
{
  unint64_t result = qword_1EAAA23A8;
  if (!qword_1EAAA23A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23A8);
  }
  return result;
}

unint64_t sub_1DC98112C()
{
  unint64_t result = qword_1EAAA23B0;
  if (!qword_1EAAA23B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23B0);
  }
  return result;
}

unint64_t sub_1DC98117C()
{
  unint64_t result = qword_1EAAA23B8;
  if (!qword_1EAAA23B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23B8);
  }
  return result;
}

unint64_t sub_1DC9811CC()
{
  unint64_t result = qword_1EAAA23C0;
  if (!qword_1EAAA23C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23C0);
  }
  return result;
}

unint64_t sub_1DC98121C()
{
  unint64_t result = qword_1EAAA23C8;
  if (!qword_1EAAA23C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23C8);
  }
  return result;
}

unint64_t sub_1DC98126C()
{
  unint64_t result = qword_1EAAA23D0;
  if (!qword_1EAAA23D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23D0);
  }
  return result;
}

unint64_t sub_1DC9812BC()
{
  unint64_t result = qword_1EAAA23D8;
  if (!qword_1EAAA23D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23D8);
  }
  return result;
}

unint64_t sub_1DC98130C()
{
  unint64_t result = qword_1EAAA23E0;
  if (!qword_1EAAA23E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23E0);
  }
  return result;
}

unint64_t sub_1DC98135C()
{
  unint64_t result = qword_1EAAA23E8;
  if (!qword_1EAAA23E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23E8);
  }
  return result;
}

unint64_t sub_1DC9813AC()
{
  unint64_t result = qword_1EAAA23F0;
  if (!qword_1EAAA23F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23F0);
  }
  return result;
}

unint64_t sub_1DC9813FC()
{
  unint64_t result = qword_1EAAA23F8;
  if (!qword_1EAAA23F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA23F8);
  }
  return result;
}

unint64_t sub_1DC98144C()
{
  unint64_t result = qword_1EAAA2400;
  if (!qword_1EAAA2400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2400);
  }
  return result;
}

unint64_t sub_1DC98149C()
{
  unint64_t result = qword_1EAAA2408;
  if (!qword_1EAAA2408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2408);
  }
  return result;
}

unint64_t sub_1DC9814EC()
{
  unint64_t result = qword_1EAAA2410;
  if (!qword_1EAAA2410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2410);
  }
  return result;
}

unint64_t sub_1DC98153C()
{
  unint64_t result = qword_1EAAA2418;
  if (!qword_1EAAA2418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2418);
  }
  return result;
}

unint64_t sub_1DC98158C()
{
  unint64_t result = qword_1EAAA2420;
  if (!qword_1EAAA2420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2420);
  }
  return result;
}

unint64_t sub_1DC9815DC()
{
  unint64_t result = qword_1EAAA2428;
  if (!qword_1EAAA2428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2428);
  }
  return result;
}

unint64_t sub_1DC98162C()
{
  unint64_t result = qword_1EAAA2430;
  if (!qword_1EAAA2430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2430);
  }
  return result;
}

unint64_t sub_1DC98167C()
{
  unint64_t result = qword_1EAAA2438;
  if (!qword_1EAAA2438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2438);
  }
  return result;
}

unint64_t sub_1DC9816CC()
{
  unint64_t result = qword_1EAAA2440;
  if (!qword_1EAAA2440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2440);
  }
  return result;
}

unint64_t sub_1DC98171C()
{
  unint64_t result = qword_1EAAA2448;
  if (!qword_1EAAA2448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2448);
  }
  return result;
}

unint64_t sub_1DC981768()
{
  unint64_t result = qword_1EAAA2478;
  if (!qword_1EAAA2478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2478);
  }
  return result;
}

unint64_t sub_1DC9817B4()
{
  unint64_t result = qword_1EAAA2480;
  if (!qword_1EAAA2480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2480);
  }
  return result;
}

unint64_t sub_1DC981800()
{
  unint64_t result = qword_1EAAA2488;
  if (!qword_1EAAA2488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2488);
  }
  return result;
}

unint64_t sub_1DC98184C()
{
  unint64_t result = qword_1EAAA2490;
  if (!qword_1EAAA2490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2490);
  }
  return result;
}

unint64_t sub_1DC981898()
{
  unint64_t result = qword_1EAAA2498;
  if (!qword_1EAAA2498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2498);
  }
  return result;
}

uint64_t _s13SoundAnalysis14MLFeatureUtilsV18MultiArrayDataTypeO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1DC89DC14(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1DC89DC14(v8);
}

unsigned char *_s13SoundAnalysis14MLFeatureUtilsV18MultiArrayDataTypeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1DC89DC0C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1DC89DBF4((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC981A24);
      case 4:
        unint64_t result = (unsigned char *)sub_1DC89DBFC((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1DC89DC04(result, a2 + 3);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.Float16CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.Float16CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.Float32CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.Float32CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.Float64CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.Float64CodingKeys;
}

ValueMetadata *type metadata accessor for MLFeatureUtils.MultiArrayDataType.Int32CodingKeys()
{
  return &type metadata for MLFeatureUtils.MultiArrayDataType.Int32CodingKeys;
}

unint64_t sub_1DC981AA0()
{
  unint64_t result = qword_1EAAA24C8;
  if (!qword_1EAAA24C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA24C8);
  }
  return result;
}

unint64_t sub_1DC981AF0()
{
  unint64_t result = qword_1EAAA24D0;
  if (!qword_1EAAA24D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA24D0);
  }
  return result;
}

unint64_t sub_1DC981B40()
{
  unint64_t result = qword_1EAAA24D8;
  if (!qword_1EAAA24D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA24D8);
  }
  return result;
}

unint64_t sub_1DC981B90()
{
  unint64_t result = qword_1EAAA24E0;
  if (!qword_1EAAA24E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA24E0);
  }
  return result;
}

unint64_t sub_1DC981BE0()
{
  unint64_t result = qword_1EAAA24E8;
  if (!qword_1EAAA24E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA24E8);
  }
  return result;
}

unint64_t sub_1DC981C30()
{
  unint64_t result = qword_1EAAA24F0;
  if (!qword_1EAAA24F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA24F0);
  }
  return result;
}

unint64_t sub_1DC981C80()
{
  unint64_t result = qword_1EAAA24F8;
  if (!qword_1EAAA24F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA24F8);
  }
  return result;
}

unint64_t sub_1DC981CD0()
{
  unint64_t result = qword_1EAAA2500;
  if (!qword_1EAAA2500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2500);
  }
  return result;
}

unint64_t sub_1DC981D20()
{
  unint64_t result = qword_1EAAA2508;
  if (!qword_1EAAA2508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2508);
  }
  return result;
}

unint64_t sub_1DC981D70()
{
  unint64_t result = qword_1EAAA2510;
  if (!qword_1EAAA2510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2510);
  }
  return result;
}

unint64_t sub_1DC981DC0()
{
  unint64_t result = qword_1EAAA2518;
  if (!qword_1EAAA2518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2518);
  }
  return result;
}

uint64_t sub_1DC981E10()
{
  return v0;
}

uint64_t sub_1DC981E28()
{
  return v0;
}

uint64_t sub_1DC981E58()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DC981E74()
{
  return v0;
}

uint64_t sub_1DC981E80()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DC981E9C()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DC981EBC()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DC981EDC()
{
  return sub_1DCB88B08();
}

uint64_t sub_1DC981F04()
{
  return sub_1DCB88D58();
}

void sub_1DC981F2C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DC981F48()
{
  return v0;
}

uint64_t sub_1DC981F70()
{
  return 0;
}

uint64_t sub_1DC981F80()
{
  return v0;
}

uint64_t sub_1DC981F98()
{
  return v0;
}

BOOL sub_1DC981FB0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1DC981FC0(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1DC981FDC()
{
  return v0;
}

uint64_t sub_1DC981FF0()
{
  return v0 - 104;
}

uint64_t sub_1DC982004()
{
  return v0;
}

uint64_t sub_1DC982018()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC982038(uint64_t *a1)
{
  return sub_1DC980508(a1, v1 - 48);
}

uint64_t sub_1DC982054()
{
  return v0;
}

uint64_t sub_1DC982068()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC982088(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F72446C65646F6DLL && a2 == 0xEA00000000003570)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DC98211C()
{
  return 0x6F72446C65646F6DLL;
}

uint64_t sub_1DC982138(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA2550);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA2558);
  sub_1DC89D4E0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1DC8A22D0();
  uint64_t v15 = v14 - v13;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC982F04();
  sub_1DCB892B8();
  sub_1DC982F50();
  sub_1DCB88E88();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
}

uint64_t sub_1DC9822A8(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA2530);
  sub_1DC89D4E0();
  uint64_t v27 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA2538);
  sub_1DC89D4E0();
  uint64_t v28 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC8A22D0();
  uint64_t v14 = v13 - v12;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC982F04();
  sub_1DCB89298();
  if (v1) {
    goto LABEL_6;
  }
  uint64_t v26 = v14;
  uint64_t v15 = sub_1DCB88E58();
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16
    || (sub_1DC9CFE4C(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        uint64_t v18 = v17,
        unint64_t v20 = v19,
        swift_bridgeObjectRelease(),
        v18 != v20 >> 1))
  {
    uint64_t v21 = sub_1DCB88B18();
    swift_allocError();
    uint64_t v23 = v22;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v23 = &type metadata for SNLanguageAlignedAVFuser.FuserVersion;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x1E4FBBA70], v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v9);
LABEL_6:
    uint64_t v25 = (uint64_t)a1;
    return sub_1DC8818D0(v25);
  }
  sub_1DC982F50();
  sub_1DCB88D58();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v8, v3);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v14, v9);
  uint64_t v25 = (uint64_t)a1;
  return sub_1DC8818D0(v25);
}

uint64_t sub_1DC9825B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC982088(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC9825E4(uint64_t a1)
{
  unint64_t v2 = sub_1DC982F04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC982620(uint64_t a1)
{
  unint64_t v2 = sub_1DC982F04();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC98265C(uint64_t a1)
{
  unint64_t v2 = sub_1DC982F50();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC982698(uint64_t a1)
{
  unint64_t v2 = sub_1DC982F50();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9826D4(void *a1)
{
  return sub_1DC9822A8(a1);
}

uint64_t sub_1DC9826EC(void *a1)
{
  return sub_1DC982138(a1);
}

void sub_1DC982704()
{
}

id sub_1DC982770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a1 != 5 || a2 != 5)
  {
    sub_1DC982FDC();
    swift_allocError();
    *uint64_t v9 = 1;
    swift_willThrow();
    return (id)swift_deallocPartialClassInstance();
  }
  uint64_t v10 = v4;
  uint64_t v17 = (void *)MEMORY[0x1E01A8D20]();
  uint64_t v11 = (void *)MEMORY[0x1E01A8D20]();
  if (qword_1EAA9D1E0 != -1) {
    swift_once();
  }
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 40;
  __int16 v19 = 40;
  MEMORY[0x1F4188790](v12);
  swift_retain();
  sub_1DCAC3890();
  if (v3)
  {
    swift_release();
    swift_release();

    return (id)swift_deallocPartialClassInstance();
  }
  uint64_t v15 = v13;
  swift_release();
  swift_release();
  uint64_t v16 = &v10[OBJC_IVAR___SNLanguageAlignedAVFuser_model];
  *(void *)uint64_t v16 = v15;
  *((void *)v16 + 1) = &off_1F37FEC20;

  v18.id receiver = v10;
  v18.Class super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

id sub_1DC982A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1DC87E988(&qword_1EAAA0900);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBBCDA0;
  *(void *)(inited + 32) = 0x6D655F6F69647561;
  *(void *)(inited + 40) = 0xEF676E6964646562;
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_featureValueWithMultiArray_, a2);
  unint64_t v10 = sub_1DC982F9C();
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x80000001DCB940F0;
  id v11 = objc_msgSend(v8, sel_featureValueWithMultiArray_, a1);
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 96) = v11;
  sub_1DCB877D8();
  id v12 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
  id v13 = sub_1DC99F66C();
  if (!v3)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)(v4 + OBJC_IVAR___SNLanguageAlignedAVFuser_model + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v17 = objc_allocWithZone(MEMORY[0x1E4F1E9E0]);
    id v18 = v14;
    id v19 = objc_msgSend(v17, sel_init);
    unint64_t v20 = (void *)(*(uint64_t (**)(id, id, uint64_t, uint64_t))(v15 + 24))(v18, v19, ObjectType, v15);

    id v21 = objc_msgSend(v20, sel_featureNames);
    uint64_t v22 = sub_1DCB87FE8();

    id v9 = (id)sub_1DC9A4474(v22);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    if (v24
      && (id v9 = (id)sub_1DCB87908(),
          swift_bridgeObjectRelease(),
          id v25 = objc_msgSend(v20, sel_featureValueForName_, v9),
          v9,
          v25)
      && (id v9 = objc_msgSend(v25, sel_multiArrayValue), v25, v9))
    {
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1DC982FDC();
      swift_allocError();
      *uint64_t v26 = 2;
      swift_willThrow();

      swift_unknownObjectRelease();
    }
  }
  return v9;
}

BOOL sub_1DC982DE8(uint64_t a1, uint64_t a2)
{
  return a1 == 5 && a2 == 5;
}

id SNLanguageAlignedAVFuser.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNLanguageAlignedAVFuser()
{
  return self;
}

uint64_t method lookup function for SNLanguageAlignedAVFuser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNLanguageAlignedAVFuser);
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAVFuser.FuserVersion()
{
  return &type metadata for SNLanguageAlignedAVFuser.FuserVersion;
}

unint64_t sub_1DC982EB8()
{
  unint64_t result = qword_1EAAA2528;
  if (!qword_1EAAA2528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2528);
  }
  return result;
}

unint64_t sub_1DC982F04()
{
  unint64_t result = qword_1EAAA2540;
  if (!qword_1EAAA2540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2540);
  }
  return result;
}

unint64_t sub_1DC982F50()
{
  unint64_t result = qword_1EAAA2548;
  if (!qword_1EAAA2548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2548);
  }
  return result;
}

unint64_t sub_1DC982F9C()
{
  unint64_t result = qword_1EAAA18E8;
  if (!qword_1EAAA18E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAA18E8);
  }
  return result;
}

unint64_t sub_1DC982FDC()
{
  unint64_t result = qword_1EAAA2560;
  if (!qword_1EAAA2560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2560);
  }
  return result;
}

uint64_t sub_1DC983028()
{
  return swift_deallocObject();
}

unsigned char *storeEnumTagSinglePayload for SNLanguageAlignedAVFuser.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC983104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAVFuser.DomainError()
{
  return &type metadata for SNLanguageAlignedAVFuser.DomainError;
}

unsigned char *_s13SoundAnalysis24SNLanguageAlignedAVFuserC12FuserVersionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC9831D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAVFuser.FuserVersion.CodingKeys()
{
  return &type metadata for SNLanguageAlignedAVFuser.FuserVersion.CodingKeys;
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAVFuser.FuserVersion.ModelDrop5CodingKeys()
{
  return &type metadata for SNLanguageAlignedAVFuser.FuserVersion.ModelDrop5CodingKeys;
}

unint64_t sub_1DC983224()
{
  unint64_t result = qword_1EAAA2568;
  if (!qword_1EAAA2568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2568);
  }
  return result;
}

unint64_t sub_1DC983274()
{
  unint64_t result = qword_1EAAA2570;
  if (!qword_1EAAA2570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2570);
  }
  return result;
}

unint64_t sub_1DC9832C4()
{
  unint64_t result = qword_1EAAA2578;
  if (!qword_1EAAA2578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2578);
  }
  return result;
}

unint64_t sub_1DC983314()
{
  unint64_t result = qword_1EAAA2580;
  if (!qword_1EAAA2580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2580);
  }
  return result;
}

unint64_t sub_1DC983364()
{
  unint64_t result = qword_1EAAA2588;
  if (!qword_1EAAA2588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2588);
  }
  return result;
}

unint64_t sub_1DC9833B4()
{
  unint64_t result = qword_1EAAA2590;
  if (!qword_1EAAA2590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2590);
  }
  return result;
}

BOOL sub_1DC983400(uint64_t a1)
{
  if (qword_1EAA9D1D8 != -1) {
    goto LABEL_18;
  }
  while (1)
  {
    uint64_t v2 = *(void *)(qword_1EAAFF8E8 + 16);
    if (!v2) {
      break;
    }
    if (*(void *)(qword_1EAAFF8E8 + 32) == a1) {
      return 1;
    }
    if (v2 == 1) {
      break;
    }
    if (*(void *)(qword_1EAAFF8E8 + 40) == a1) {
      return 1;
    }
    if (v2 == 2) {
      break;
    }
    for (uint64_t i = 6; ; ++i)
    {
      uint64_t v5 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v6 = *(void *)(qword_1EAAFF8E8 + 8 * i);
      BOOL result = v6 == a1;
      if (v6 == a1 || v5 == v2) {
        return result;
      }
    }
    __break(1u);
LABEL_18:
    swift_once();
  }
  return 0;
}

uint64_t static SNPlatformUtils.deviceSupportsLowPowerSoundClassification()()
{
  return 2;
}

uint64_t sub_1DC9834CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1DCB89018();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  id v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1DCB89018() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC983594(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
    while (1)
    {
      id v4 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E01A7AE0](0, a2) : *(id *)(a2 + 32);
      uint64_t v5 = v4;
      sub_1DC917CC4();
      char v6 = sub_1DCB886A8();

      if (v6) {
        break;
      }
      if (v3 != 1)
      {
        uint64_t v9 = 5;
        while (1)
        {
          id v10 = (a2 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1E01A7AE0](v9 - 4, a2)
              : *(id *)(a2 + 8 * v9);
          uint64_t v11 = v10;
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1)) {
            break;
          }
          char v7 = sub_1DCB886A8();

          if ((v7 & 1) == 0)
          {
            ++v9;
            if (v12 != v3) {
              continue;
            }
          }
          goto LABEL_9;
        }
        __break(1u);
LABEL_19:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1DCB88CC8();
        if (v3) {
          continue;
        }
      }
      goto LABEL_8;
    }
    char v7 = 1;
  }
  else
  {
LABEL_8:
    char v7 = 0;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t static SNPlatformUtils.shouldEnableEmbeddedDaemon()()
{
  return 0;
}

void sub_1DC9836E8(void *a1@<X8>)
{
  *a1 = &unk_1F37E6CF0;
}

void sub_1DC9836F8(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      BOOL v5 = qword_1EAAABB40 == -1;
      if (qword_1EAAABB40 == -1) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = qword_1EAAABB40;
      }
      sub_1DCB87938();
      sub_1DC985018();
      uint64_t v7 = sub_1DC8BABC0();
      uint64_t v8 = &unk_1F37FB3B8;
      *(void *)(v7 + 16) = &unk_1F37FB3B8;
      uint64_t v9 = sub_1DC984FC4;
      break;
    case 2:
      BOOL v5 = qword_1EAAABB50 == -1;
      if (qword_1EAAABB50 == -1) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = qword_1EAAABB50;
      }
      sub_1DCB87938();
      sub_1DC985018();
      uint64_t v7 = sub_1DC8BABC0();
      uint64_t v8 = &unk_1F37FB3E0;
      *(void *)(v7 + 16) = &unk_1F37FB3E0;
      uint64_t v9 = sub_1DC984FFC;
      break;
    case 3:
      BOOL v5 = qword_1EAAABB60 == -1;
      if (qword_1EAAABB60 == -1) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = qword_1EAAABB60;
      }
      sub_1DC8BABC0();
      sub_1DC985024();
      uint64_t v8 = &unk_1F37FB408;
      *(void *)(v7 + 16) = &unk_1F37FB408;
      uint64_t v9 = sub_1DC984FFC;
      break;
    case 4:
      BOOL v5 = qword_1EAAABB68 == -1;
      if (qword_1EAAABB68 == -1) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = qword_1EAAABB68;
      }
      sub_1DCB87938();
      sub_1DC985018();
      uint64_t v7 = sub_1DC8BABC0();
      uint64_t v8 = &unk_1F37FB430;
      *(void *)(v7 + 16) = &unk_1F37FB430;
      uint64_t v9 = sub_1DC984FBC;
      break;
    case 5:
      BOOL v5 = qword_1EAAABBB0 == -1;
      if (qword_1EAAABBB0 == -1) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = qword_1EAAABBB0;
      }
      sub_1DC8BABC0();
      sub_1DC985024();
      uint64_t v8 = 0;
      *(void *)(v7 + 16) = 0;
      uint64_t v9 = sub_1DC984FB4;
      break;
    case 6:
      BOOL v5 = qword_1EAAABBB8 == -1;
      if (qword_1EAAABBB8 == -1) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = qword_1EAAABBB8;
      }
      sub_1DC8BABC0();
      sub_1DC985024();
      uint64_t v8 = &unk_1F37FB480;
      *(void *)(v7 + 16) = &unk_1F37FB480;
      uint64_t v9 = sub_1DC984FFC;
      break;
    default:
      BOOL v5 = qword_1EAAABB30 == -1;
      if (qword_1EAAABB30 == -1) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = qword_1EAAABB30;
      }
      sub_1DCB87938();
      sub_1DC985018();
      uint64_t v7 = sub_1DC8BABC0();
      uint64_t v8 = &unk_1F37FB390;
      *(void *)(v7 + 16) = &unk_1F37FB390;
      uint64_t v9 = sub_1DC984FFC;
      break;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v2;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v7;
}

uint64_t sub_1DC9839AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1EAA9D260 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)algn_1EAAFFAA8;
  uint64_t v5 = qword_1EAAFFAB0;
  uint64_t v6 = qword_1EAAFFAB8;
  uint64_t v7 = qword_1EAAFFAC0;
  char v8 = byte_1EAAFFAD1;
  char v9 = byte_1EAAFFAD2;
  char v10 = byte_1EAAFFAD3;
  char v11 = byte_1EAAFFAD4;
  char v12 = byte_1EAAFFAD5;
  uint64_t v13 = qword_1EAAFFAD8;
  char v14 = byte_1EAAFFAE0;
  *(void *)a2 = qword_1EAAFFAA0;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = a1;
  *(unsigned char *)(a2 + 48) = 1;
  *(unsigned char *)(a2 + 49) = v8;
  *(unsigned char *)(a2 + 50) = v9;
  *(unsigned char *)(a2 + 51) = v10;
  *(unsigned char *)(a2 + 52) = v11;
  *(unsigned char *)(a2 + 53) = v12;
  *(void *)(a2 + 56) = v13;
  *(unsigned char *)(a2 + 64) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC983A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1EAA9D260 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EAAFFAC0;
  char v5 = byte_1EAAFFAD1;
  char v17 = byte_1EAAFFAD3;
  char v18 = byte_1EAAFFAD2;
  char v15 = byte_1EAAFFAD5;
  char v16 = byte_1EAAFFAD4;
  uint64_t v14 = qword_1EAAFFAD8;
  char v13 = byte_1EAAFFAE0;
  uint64_t v6 = sub_1DCB87938();
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DCB87938();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = a1;
  *(unsigned char *)(a2 + 48) = 1;
  *(unsigned char *)(a2 + 49) = v5;
  *(unsigned char *)(a2 + 50) = v18;
  *(unsigned char *)(a2 + 51) = v17;
  *(unsigned char *)(a2 + 52) = v16;
  *(unsigned char *)(a2 + 53) = v15;
  *(void *)(a2 + 56) = v14;
  *(unsigned char *)(a2 + 64) = v13;
  return result;
}

uint64_t sub_1DC983BE8()
{
  uint64_t v0 = qword_1F37E6D00;
  if (qword_1F37E6D00)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1DC897ACC(0, qword_1F37E6D00, 0);
    uint64_t v1 = &byte_1F37E6D10;
    uint64_t v2 = v16;
    do
    {
      char v4 = *v1++;
      char v3 = v4;
      sub_1DC9836F8(v4, (uint64_t)&v17);
      uint64_t v5 = v17;
      char v6 = v18;
      long long v7 = v19;
      uint64_t v8 = v20;
      long long v9 = v21;
      unint64_t v11 = *(void *)(v16 + 16);
      unint64_t v10 = *(void *)(v16 + 24);
      if (v11 >= v10 >> 1)
      {
        long long v14 = v21;
        long long v15 = v19;
        sub_1DC897ACC((char *)(v10 > 1), v11 + 1, 1);
        long long v9 = v14;
        long long v7 = v15;
      }
      *(void *)(v16 + 16) = v11 + 1;
      unint64_t v12 = v16 + (v11 << 6);
      *(unsigned char *)(v12 + 32) = v3;
      *(void *)(v12 + 40) = v5;
      *(unsigned char *)(v12 + 48) = v6;
      *(_OWORD *)(v12 + 56) = v7;
      *(void *)(v12 + 72) = v8;
      *(_OWORD *)(v12 + 80) = v9;
      --v0;
    }
    while (v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }

  return sub_1DCAA7E54(v2);
}

void *sub_1DC983D28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1DC983BE8();
  uint64_t result = sub_1DCA21AF4(&v24, v4);
  int64_t v6 = v27;
  unint64_t v7 = v28;
  int64_t v8 = (unint64_t)(v26 + 64) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v25 + 8 * v11);
    int64_t v13 = v6 + 1;
    if (!v12)
    {
      int64_t v13 = v6 + 2;
      if (v6 + 2 >= v8) {
        goto LABEL_25;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v6 + 3;
        if (v6 + 3 >= v8) {
          goto LABEL_25;
        }
        unint64_t v12 = *(void *)(v25 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v6 + 4;
          if (v6 + 4 >= v8) {
            goto LABEL_25;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v6 + 5;
            if (v6 + 5 >= v8) {
              goto LABEL_25;
            }
            unint64_t v12 = *(void *)(v25 + 8 * v13);
            if (!v12)
            {
              int64_t v13 = v6 + 6;
              if (v6 + 6 >= v8) {
                goto LABEL_25;
              }
              unint64_t v12 = *(void *)(v25 + 8 * v13);
              if (!v12)
              {
                int64_t v14 = v6 + 7;
                while (v14 < v8)
                {
                  unint64_t v12 = *(void *)(v25 + 8 * v14++);
                  if (v12)
                  {
                    int64_t v13 = v14 - 1;
                    goto LABEL_21;
                  }
                }
LABEL_25:
                uint64_t result = (void *)swift_release();
                uint64_t v23 = 0;
                a1 = 0;
                uint64_t v22 = 0;
                uint64_t v20 = 0;
                uint64_t v21 = 0;
                uint64_t v19 = 0;
                uint64_t v18 = 0;
LABEL_26:
                *a2 = v23;
                a2[1] = a1;
                a2[2] = 0;
                a2[3] = v22;
                a2[4] = v20;
                a2[5] = v21;
                a2[6] = v19;
                a2[7] = v18;
                return result;
              }
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v6 = v13;
LABEL_22:
    uint64_t v15 = *(void *)(v24 + 56);
    uint64_t v16 = v15 + 56 * v10;
    if ((*(unsigned char *)(v16 + 8) & 1) == 0 && *(void *)v16 == a1)
    {
      uint64_t v17 = (void *)(v15 + 56 * v10);
      uint64_t v19 = v17[5];
      uint64_t v18 = v17[6];
      uint64_t v20 = v17[3];
      uint64_t v21 = v17[4];
      uint64_t v22 = v17[2];
      uint64_t v23 = *(unsigned __int8 *)(*(void *)(v24 + 48) + v10);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = (void *)swift_release();
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC983EFC(char a1, uint64_t a2, uint64_t a3)
{
  if (a1 != 7)
  {
    sub_1DC9836F8(a1, (uint64_t)v11);
    if (v11[3])
    {
      a2 = v11[2];
      sub_1DC978E04((uint64_t)v12, (uint64_t)v10, &qword_1EAA9E980);
      swift_bridgeObjectRetain();
      sub_1DC8CBD50((uint64_t)v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (!a3)
      {
        sub_1DC978E04((uint64_t)v12, (uint64_t)v10, &qword_1EAA9E980);
        sub_1DC8CBD50((uint64_t)v10);
        swift_release();
        goto LABEL_10;
      }
      v10[0] = 4475201;
      v10[1] = 0xE300000000000000;
      sub_1DCB87A18();
      a2 = 4475201;
      sub_1DC978E04((uint64_t)v12, (uint64_t)v10, &qword_1EAA9E980);
      sub_1DC8CBD50((uint64_t)v10);
    }
    swift_release();
    return a2;
  }
  if (a3)
  {
    sub_1DCB87A18();
    return 4475201;
  }
LABEL_10:
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DCB86FE8();
  sub_1DC89F57C(v5, (uint64_t)qword_1EAAFF810);
  int64_t v6 = sub_1DCB86FC8();
  os_log_type_t v7 = sub_1DCB88468();
  if (os_log_type_enabled(v6, v7))
  {
    int64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v8 = 0;
    _os_log_impl(&dword_1DC873000, v6, v7, "Unsupported product type", v8, 2u);
    MEMORY[0x1E01A99C0](v8, -1, -1);
  }

  return a2;
}

__CFString *sub_1DC9840F4()
{
  uint64_t v0 = off_1EAAABB28;
  uint64_t v1 = MGCopyAnswer();

  if (!v1) {
    goto LABEL_5;
  }
  swift_unknownObjectRetain();
  if (!swift_dynamicCast())
  {
    swift_unknownObjectRelease();
LABEL_5:
    sub_1DC985024();
    return v0;
  }
  uint64_t v0 = (__CFString *)sub_1DCB88F98();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1DC9841C4()
{
  uint64_t v0 = sub_1DC9840F4();
  uint64_t v2 = v1;
  uint64_t v3 = MGGetProductType();
  sub_1DC983D28(v3, v7);
  sub_1DC978E04((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_1EAA9E950);
  if (v9)
  {
    char v4 = v8[0];
    sub_1DC8CBC38(v7);
  }
  else
  {
    char v4 = 7;
  }
  uint64_t v5 = sub_1DC983EFC(v4, (uint64_t)v0, v2);
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1DC984260(uint64_t a1, unint64_t a2)
{
  if (sub_1DCB879C8())
  {
    swift_bridgeObjectRetain();
    sub_1DC9A4594(a1, a2);
    uint64_t v5 = v4;
    unint64_t result = swift_bridgeObjectRelease();
    if (v5)
    {
      sub_1DCB87838();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1DC98442C(1uLL, a1, a2);
      sub_1DC984F30();
      swift_bridgeObjectRetain();
      sub_1DCB87A08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCB88A98();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      return 0xD000000000000017;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001ELL, 0x80000001DCB941C0);
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1DC98442C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    unint64_t result = sub_1DCB879F8();
    if (v6) {
      unint64_t result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = sub_1DCB87AB8();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

BOOL static SNPlatformUtils.localhostIsVM()()
{
  uint64_t v0 = (int *)swift_slowAlloc();
  sub_1DC98470C(0xD000000000000013, 0x80000001DCB94160, v0);
  int v1 = *v0;
  MEMORY[0x1E01A99C0](v0, -1, -1);
  return v1 != 0;
}

uint64_t sub_1DC9845A0(const char *a1, void *a2)
{
  v4[1] = *MEMORY[0x1E4F143B8];
  v4[0] = 4;
  uint64_t v2 = sysctlbyname(a1, a2, v4, 0, 0);
  return sub_1DC984614(v2);
}

uint64_t sub_1DC984614(uint64_t result)
{
  if (result)
  {
    type metadata accessor for SNError();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001FLL, 0x80000001DCB941E0);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC98470C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  unint64_t v10 = a3;
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000)) {
    return sub_1DCB88A88();
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(void *)int64_t v8 = a1;
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFFLL;
    size_t v7 = 4;
    uint64_t v6 = sysctlbyname(v8, a3, &v7, 0, 0);
    return sub_1DC984614(v6);
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v4 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v4 = (const char *)sub_1DCB88B28();
    }
    return sub_1DC9845A0(v4, a3);
  }
}

uint64_t static SNPlatformUtils.daemonProcessName()()
{
  return 0x616E61646E756F73;
}

void type metadata accessor for SNPlatformUtils()
{
}

uint64_t sub_1DC984880()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1DC9848C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1DC984934(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 sub_1DC9849C4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1DC9849E0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_1DC984A48(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DC984A88(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SNProductInfo()
{
}

unsigned char *sub_1DC984AE0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC984BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for SNProductType()
{
}

unint64_t sub_1DC984BE4()
{
  unint64_t result = qword_1EAAA2598;
  if (!qword_1EAAA2598)
  {
    sub_1DC8863A8(&qword_1EAAA25A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2598);
  }
  return result;
}

unint64_t sub_1DC984C3C()
{
  unint64_t result = qword_1EAAA25A8;
  if (!qword_1EAAA25A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA25A8);
  }
  return result;
}

void sub_1DC984C88()
{
  uint64_t v7 = qword_1EAAABB70;
  uint64_t v8 = qword_1EAAABB78;
  uint64_t v9 = qword_1EAAABB80;
  uint64_t v10 = qword_1EAAABB88;
  uint64_t v11 = qword_1EAAABB90;
  uint64_t v12 = qword_1EAAABB98;
  uint64_t v13 = qword_1EAAABBA0;
  uint64_t v14 = qword_1EAAABBA8;
  uint64_t v15 = qword_1EAAABBB8;
  uint64_t v16 = qword_1EAAABBC0;
  uint64_t v0 = 32;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v2 = *(void *)&v6[v0];
    if (v2 != -1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCA7332C();
        uint64_t v1 = v4;
      }
      unint64_t v3 = *(void *)(v1 + 16);
      if (v3 >= *(void *)(v1 + 24) >> 1)
      {
        sub_1DCA7332C();
        uint64_t v1 = v5;
      }
      *(void *)(v1 + 16) = v3 + 1;
      *(void *)(v1 + 8 * v3 + 32) = v2;
    }
    v0 += 8;
  }
  while (v0 != 112);
  qword_1EAAFF8E8 = v1;
}

uint64_t sub_1DC984DE4()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  uint64_t v1 = (void *)sub_1DCB87908();
  id v2 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_, v1);

  if (v2)
  {
    sub_1DCB88808();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1DC978E04((uint64_t)v6, (uint64_t)v7, &qword_1EAA9CAB0);
  if (!v8)
  {
    sub_1DC881978((uint64_t)v7);
    goto LABEL_8;
  }
  sub_1DC87E988(&qword_1EAA9E7F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    char v3 = 0;
    return v3 & 1;
  }
  char v3 = sub_1DC9834CC(0x69737365636F7270, 0xEA0000000000676ELL, v5);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

unint64_t sub_1DC984F30()
{
  unint64_t result = qword_1EAAA25B0;
  if (!qword_1EAAA25B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA25B0);
  }
  return result;
}

uint64_t sub_1DC984F7C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC984FB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC983A8C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DC984FBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC9839AC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DC984FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC983A8C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DC984FE0(const char *a1)
{
  return sub_1DC9845A0(a1, *(void **)(v1 + 16));
}

void sub_1DC985030(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v11 = __OFSUB__(v10, 1);
  uint64_t v12 = v10 - 1;
  if (v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v13 = v12 & ~(v12 >> 63);
  if (v13 >> 59)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v14 = 16 * v13;
  uint64_t v15 = v14 + 24;
  if (__OFADD__(v14, 24))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  if (v15 < 0) {
    goto LABEL_18;
  }
  uint64_t v39 = a5;
  uint64_t v40 = a4;
  uint64_t v41 = a3;
  id v42 = a2;
  if (v15 < 1025 || (swift_stdlib_isStackAllocationSafe() & 1) != 0)
  {
    uint64_t v37 = v6;
    unint64_t v38 = &v36;
    MEMORY[0x1F4188790]();
    id v16 = v42;
    sub_1DC9872E8();
    sub_1DC987390();
    uint64_t v17 = v37;
    sub_1DC985478(v18, v19, v20, v21, v22, v23, v24, v25, v36, v37, v38, v39, v40);
    if (v17)
    {
      swift_willThrow();

LABEL_12:
      return;
    }
  }
  else
  {
    uint64_t v37 = a6;
    uint64_t v26 = swift_slowAlloc();
    id v27 = v42;
    sub_1DC9872E8();
    sub_1DC987390();
    sub_1DC985478(v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, (unint64_t *)(v26 + v15), v39, v40);
    MEMORY[0x1E01A99C0](v26, -1, -1);

    if (v6) {
      goto LABEL_12;
    }
  }
}

void sub_1DC985230(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
}

void sub_1DC98527C(uint64_t isStackAllocationSafe@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *(void *)(isStackAllocationSafe + 24);
  uint64_t v10 = *(void *)(isStackAllocationSafe + 32);
  uint64_t v12 = v10 - v11;
  if (__OFSUB__(v10, v11))
  {
    __break(1u);
    goto LABEL_13;
  }
  BOOL v13 = __OFSUB__(v12, 1);
  uint64_t v14 = v12 - 1;
  if (v13)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v15 = v14 & ~(v14 >> 63);
  if (v15 >> 59)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = 16 * v15 + 24;
  if (__OFADD__(16 * v15, 24))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  if (v16 < 0) {
    goto LABEL_16;
  }
  uint64_t v18 = a6;
  uint64_t v19 = a5;
  unint64_t v20 = a4;
  uint64_t v21 = a2;
  uint64_t v45 = a9;
  if (v16 < 1025) {
    goto LABEL_8;
  }
  uint64_t v43 = v10;
  uint64_t v44 = v11;
  id v42 = a6;
  id v27 = (void *)isStackAllocationSafe;
  isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
  unint64_t v28 = v27;
  uint64_t v29 = a7;
  uint64_t v30 = a3;
  uint64_t v21 = a2;
  unint64_t v20 = a4;
  uint64_t v19 = a5;
  uint64_t v18 = v42;
  uint64_t v10 = v43;
  uint64_t v11 = v44;
  if (isStackAllocationSafe)
  {
LABEL_8:
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v31 = (_DWORD *)sub_1DC987368((uint64_t)&v37);
    sub_1DC98568C(v31, v11, v10, v32, 4, v21, v35, v34, v20, v19, v18, v33, a8);
    if (v9) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v40 = v30;
    uint64_t v41 = v9;
    uint64_t v38 = v29;
    uint64_t v39 = v28;
    unint64_t v36 = (_DWORD *)swift_slowAlloc();
    sub_1DC98568C(v36, v44, v43, v39, 4, v21, v40, v45, v20, v19, v42, v38, a8);
    sub_1DC9873A8();
  }
}

void sub_1DC985478(_DWORD *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X6>, void *a7@<X7>, unint64_t a8@<X8>, unint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13)
{
  if (a1)
  {
    unint64_t v19 = a3 - (void)a2;
    if (__OFSUB__(a3, a2))
    {
      __break(1u);
    }
    else
    {
      if ((v19 & 0x8000000000000000) != 0) {
        goto LABEL_12;
      }
      unint64_t v28 = a8;
      uint64_t v30 = a2;
      if (HIDWORD(v19)) {
        goto LABEL_12;
      }
      uint64_t v14 = a6;
      uint64_t v17 = a5;
      BOOL v13 = a4;
      uint64_t v16 = (uint64_t)a1;
      *a1 = v19;
      uint64_t v20 = *a4;
      id v15 = a7;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *BOOL v13 = v20;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_6;
      }
    }
    sub_1DC987124();
    uint64_t v20 = v27;
    *BOOL v13 = v27;
LABEL_6:
    uint64_t v22 = *(void *)(v20 + 16);
    v29[0] = v20 + 32;
    v29[1] = v22;
    uint64_t v23 = v13[3];
    uint64_t v24 = v13[4];
    if (!__OFSUB__(v24, v23))
    {
      unint64_t v25 = sub_1DC987074(v24 - v23, v13, v29);
      id v26 = v15;
      sub_1DC98583C(v25, v30, a3, v16 + 8, v17, v16, v14, v28, v26, a9, a10, a11, a12, a13);
      swift_bridgeObjectRelease();
      *BOOL v13 = v20;

      return;
    }
    __break(1u);
  }
  __break(1u);
LABEL_12:

  sub_1DCB88C58();
  __break(1u);
}

uint64_t sub_1DC98568C@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13)
{
  if (!a1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v19 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
    __break(1u);
LABEL_9:
    sub_1DC987124();
    uint64_t v20 = v27;
    *BOOL v13 = v27;
LABEL_6:
    uint64_t v22 = *(void *)(v20 + 16);
    v29[0] = v20 + 32;
    v29[1] = v22;
    uint64_t v23 = v13[3];
    uint64_t v24 = v13[4];
    if (!__OFSUB__(v24, v23))
    {
      unint64_t v25 = sub_1DC987074(v24 - v23, v13, v29);
      sub_1DC9859BC(v25, v30, a3, v14 + 8, v16, v14, v15, v28, v17, a9, a10, a11, a12, a13);
      uint64_t result = swift_bridgeObjectRelease();
      *BOOL v13 = v20;
      return result;
    }
    __break(1u);
    goto LABEL_11;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = a8;
    uint64_t v30 = a2;
    if (HIDWORD(v19))
    {
      sub_1DC8AF148();
      sub_1DC9872C8();
      goto LABEL_14;
    }
    uint64_t v17 = a7;
    uint64_t v15 = a6;
    uint64_t v16 = a5;
    BOOL v13 = a4;
    uint64_t v14 = (uint64_t)a1;
    *a1 = v19;
    uint64_t v20 = *a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *BOOL v13 = v20;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
LABEL_12:
  sub_1DC8AF148();
  sub_1DC9872D8();
LABEL_14:
  uint64_t result = sub_1DC987350();
  __break(1u);
  return result;
}

void sub_1DC98583C(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X7>, unint64_t a8@<X8>, void *a9, unint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14 = a3 - (void)a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v14 < 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v15 = (unint64_t)a2;
  a2 = a9;
  if (!v14) {
    goto LABEL_15;
  }
  uint64_t v16 = a1[2];
  if (!v16) {
    goto LABEL_21;
  }
  uint64_t v17 = a1[5];
  uint64_t v18 = a5 * v17;
  if ((unsigned __int128)(a5 * (__int128)v17) >> 64 != (a5 * v17) >> 63)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v18 < 0)
  {
LABEL_24:

    goto LABEL_25;
  }
  if (!HIDWORD(v18))
  {
    unint64_t v19 = (void *)(a4 + 8);
    uint64_t v20 = ~v15 + a3;
    uint64_t v21 = a1 + 7;
    while (1)
    {
      uint64_t v22 = *(v21 - 3);
      *((_DWORD *)v19 - 2) = 1;
      *((_DWORD *)v19 - 1) = v18;
      *unint64_t v19 = v22;
      if (!v20) {
        break;
      }
      if (!--v16)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v18 = a5 * *v21;
      if ((unsigned __int128)(a5 * (__int128)*v21) >> 64 != v18 >> 63) {
        goto LABEL_18;
      }
      if (v18 < 0) {
        goto LABEL_24;
      }
      v19 += 2;
      --v20;
      v21 += 2;
      if (HIDWORD(v18)) {
        goto LABEL_14;
      }
    }
LABEL_15:
    if (a6)
    {
      sub_1DC985AF0(a7, a9, a6, a10, a11, a12, a13, a14, a8);
      return;
    }
    goto LABEL_23;
  }
LABEL_14:

LABEL_25:
  sub_1DCB88C58();
  __break(1u);
}

uint64_t sub_1DC9859BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v14 < 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v14) {
    goto LABEL_15;
  }
  uint64_t v15 = a1[2];
  if (!v15) {
    goto LABEL_21;
  }
  uint64_t v16 = a1[5];
  unint64_t v17 = a5 * v16;
  if ((unsigned __int128)(a5 * (__int128)v16) >> 64 != (a5 * v16) >> 63)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_24:
    sub_1DC8AF148();
    sub_1DC9872D8();
    goto LABEL_25;
  }
  if (!HIDWORD(v17))
  {
    uint64_t v18 = (void *)(a4 + 8);
    uint64_t v19 = ~a2 + a3;
    uint64_t v20 = a1 + 7;
    int v21 = 1;
    while (1)
    {
      uint64_t v22 = *(v20 - 3);
      *((_DWORD *)v18 - 2) = v21;
      *((_DWORD *)v18 - 1) = v17;
      *uint64_t v18 = v22;
      if (!v19) {
        break;
      }
      if (v15 == 1)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v23 = a5 * *v20;
      if ((unsigned __int128)(a5 * (__int128)*v20) >> 64 != v23 >> 63) {
        goto LABEL_18;
      }
      if (v23 < 0) {
        goto LABEL_24;
      }
      sub_1DC9873C8();
      if (v24) {
        goto LABEL_14;
      }
    }
LABEL_15:
    if (a6) {
      return sub_1DC985D34(a7, a10, a11, a12, a13, a14, a8);
    }
    goto LABEL_23;
  }
LABEL_14:
  sub_1DC8AF148();
  sub_1DC9872C8();
LABEL_25:
  uint64_t result = sub_1DC987350();
  __break(1u);
  return result;
}

void sub_1DC985AF0(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t a9@<X8>)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  unint64_t v11 = a1[1];
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v12 = (v11 - 1) & ~((uint64_t)(v11 - 1) >> 63);
  if (v12 >> 59)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = 16 * v12;
  uint64_t v14 = v13 + 24;
  if (__OFADD__(v13, 24))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  if (v14 < 0) {
    goto LABEL_16;
  }
  uint64_t v26 = a8;
  uint64_t v27 = a7;
  id v28 = a2;
  if (v14 < 1025 || (swift_stdlib_isStackAllocationSafe() & 1) != 0)
  {
    unint64_t v24 = a4;
    unint64_t v25 = &v24;
    MEMORY[0x1F4188790]();
    uint64_t v20 = (_DWORD *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v21 = (uint64_t)v20 + v14;
    id v22 = v28;
    sub_1DC986048(v20, v21, v11, a1, 4, v22, a3, v24, a5, a6, v27, v26);
    if (v9)
    {
      swift_willThrow();

LABEL_11:
      return;
    }
  }
  else
  {
    unint64_t v24 = a9;
    uint64_t v23 = (_DWORD *)swift_slowAlloc();
    unint64_t v25 = (unint64_t *)((char *)v23 + v14);
    id v22 = v28;
    sub_1DC986048(v23, (uint64_t)v25, v11, a1, 4, v22, a3, a4, a5, a6, v27, v26);
    MEMORY[0x1E01A99C0](v23, -1, -1);

    if (v9) {
      goto LABEL_11;
    }
  }
}

uint64_t sub_1DC985D34@<X0>(uint64_t isStackAllocationSafe@<X0>, unint64_t a2@<X3>, uint64_t a3@<X4>, unint64_t *a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  v38[7] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = *(void *)(isStackAllocationSafe + 8);
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v9 = (v8 - 1) & ~((v8 - 1) >> 63);
  if (v9 >> 59)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = 16 * v9 + 24;
  if (__OFADD__(16 * v9, 24))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  if (v10 < 0) {
    goto LABEL_14;
  }
  uint64_t v11 = a5;
  unint64_t v12 = a4;
  uint64_t v13 = a3;
  v38[6] = a7;
  if (v10 < 1025
    || (v38[4] = isStackAllocationSafe,
        v38[5] = v8,
        isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(),
        uint64_t v13 = a3,
        unint64_t v12 = a4,
        uint64_t v11 = a5,
        (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    sub_1DC987368((uint64_t)v38);
    uint64_t v37 = v19;
    sub_1DC987378();
    uint64_t result = sub_1DC986280(v20, v21, v22, v23, v24, v25, v26, v27, v13, v12, v11, v37);
    if (v7) {
      return swift_willThrow();
    }
  }
  else
  {
    v38[3] = v7;
    uint64_t v29 = swift_slowAlloc();
    sub_1DC987378();
    sub_1DC986280(v30, v31, v32, v33, v34, v35, v36, a2, v13, v12, a5, a6);
    return MEMORY[0x1E01A99C0](v29, -1, -1);
  }
  return result;
}

uint64_t sub_1DC985F10(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(isStackAllocationSafe + 8);
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v5 = (v4 - 1) & ~((v4 - 1) >> 63);
  if (v5 >> 59)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = 16 * v5;
  uint64_t v7 = v6 + 24;
  if (__OFADD__(v6, 24))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  if (v7 < 0) {
    goto LABEL_15;
  }
  if (v7 < 1025 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v9 = (_DWORD *)sub_1DC987368((uint64_t)v13);
    uint64_t v10 = sub_1DC987310(v9);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (_DWORD *)swift_slowAlloc();
    a3 = sub_1DC987310(v11);
    sub_1DC9873A8();
  }
  return a3;
}

void sub_1DC986048(_DWORD *a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11, uint64_t a12)
{
  if (a1)
  {
    if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3)) {
      goto LABEL_18;
    }
    *a1 = a3;
    uint64_t v33 = (uint64_t)(a1 + 2);
    uint64_t v19 = *a4;
    id v20 = a6;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v19;
    uint64_t v34 = a3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_14;
    }
    while (1)
    {
      uint64_t v22 = a4[1];
      uint64_t v23 = sub_1DCA07870(v22);
      uint64_t v25 = a4[1];
      if (v25 < 0)
      {
        __break(1u);
        goto LABEL_16;
      }
      if (!v25) {
        break;
      }
      uint64_t v26 = 0;
      unint64_t v27 = (void *)(v24 + 8);
      while (1)
      {
        uint64_t v28 = a4[2];
        uint64_t v29 = v26 * v28;
        if ((unsigned __int128)(v26 * (__int128)v28) >> 64 != (v26 * v28) >> 63) {
          break;
        }
        ++v26;
        *(v27 - 1) = v19 + 32 + 4 * v29;
        *unint64_t v27 = v28;
        v27 += 2;
        if (v25 == v26)
        {
          uint64_t v25 = a4[1];
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_14:
      sub_1DC987124();
      uint64_t v19 = v32;
      *a4 = v32;
    }
LABEL_11:
    if (v22 >= v25)
    {
      *(void *)(v23 + 16) = v25;
      uint64_t v30 = (void *)v23;
      id v31 = v20;
      sub_1DC986648(v30, v34, v33, a5, (uint64_t)a1, (a2 - (uint64_t)a1) / 24, v31, a7, a8, a9, a10, a11, a12);
      swift_bridgeObjectRelease();
      *a4 = v19;

      return;
    }
LABEL_16:
    __break(1u);
  }
  __break(1u);
LABEL_18:

  sub_1DCB88C58();
  __break(1u);
}

uint64_t sub_1DC986280(_DWORD *a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, void **a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t *a10, uint64_t a11, uint64_t a12)
{
  if (!a1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(a3))
    {
      sub_1DC8AF148();
      sub_1DC9872C8();
      goto LABEL_20;
    }
    *a1 = a3;
    uint64_t v18 = (uint64_t)(a1 + 2);
    uint64_t v19 = *a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v19;
    uint64_t v33 = a5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_14;
    }
    while (1)
    {
      uint64_t v21 = a4[1];
      uint64_t v22 = (void *)sub_1DCA07870(v21);
      uint64_t v24 = a4[1];
      if (v24 < 0)
      {
        __break(1u);
        goto LABEL_16;
      }
      if (!v24) {
        break;
      }
      uint64_t v25 = 0;
      uint64_t v26 = (void *)(v23 + 8);
      while (1)
      {
        uint64_t v27 = a4[2];
        uint64_t v28 = v25 * v27;
        if ((unsigned __int128)(v25 * (__int128)v27) >> 64 != (v25 * v27) >> 63) {
          break;
        }
        ++v25;
        *(v26 - 1) = v19 + 32 + 4 * v28;
        *uint64_t v26 = v27;
        v26 += 2;
        if (v24 == v25)
        {
          uint64_t v24 = a4[1];
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_14:
      sub_1DC987124();
      uint64_t v19 = v30;
      *a4 = v30;
    }
LABEL_11:
    if (v21 >= v24)
    {
      void v22[2] = v24;
      sub_1DC9867CC(v22, a3, v18, v33, (uint64_t)a1, (a2 - (uint64_t)a1) / 24, a6, a7, a8, a9, a10, a11, a12);
      uint64_t result = swift_bridgeObjectRelease();
      *a4 = v19;
      return result;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_18:
  sub_1DC8AF148();
  sub_1DC9872D8();
LABEL_20:
  uint64_t result = sub_1DC987350();
  __break(1u);
  return result;
}

uint64_t sub_1DC986458(_DWORD *a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a1)
  {
    if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3)) {
      goto LABEL_18;
    }
    *a1 = a3;
    uint64_t v13 = (uint64_t)(a1 + 2);
    uint64_t v14 = *a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v14;
    uint64_t v28 = a5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_14;
    }
    while (1)
    {
      uint64_t v16 = a4[1];
      unint64_t v17 = (void *)sub_1DCA07870(v16);
      uint64_t v19 = a4[1];
      if (v19 < 0)
      {
        __break(1u);
        goto LABEL_16;
      }
      if (!v19) {
        break;
      }
      uint64_t v20 = 0;
      uint64_t v21 = (void *)(v18 + 8);
      while (1)
      {
        uint64_t v22 = a4[2];
        uint64_t v23 = v20 * v22;
        if ((unsigned __int128)(v20 * (__int128)v22) >> 64 != (v20 * v22) >> 63) {
          break;
        }
        ++v20;
        *(v21 - 1) = v14 + 32 + 4 * v23;
        *uint64_t v21 = v22;
        v21 += 2;
        if (v19 == v20)
        {
          uint64_t v19 = a4[1];
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_14:
      sub_1DC987124();
      uint64_t v14 = v26;
      *a4 = v26;
    }
LABEL_11:
    if (v16 >= v19)
    {
      double v17[2] = v19;
      uint64_t v24 = sub_1DC9868F8(v17, a3, v13, v28, (uint64_t)a1, (a2 - (uint64_t)a1) / 24, a6, a7);
      swift_bridgeObjectRelease();
      *a4 = v14;
      return v24;
    }
LABEL_16:
    __break(1u);
  }
  __break(1u);
LABEL_18:
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

void sub_1DC986648(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13)
{
  if (a2 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v13 = a7;
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v14 = a1[2];
  if (!v14) {
    goto LABEL_19;
  }
  uint64_t v15 = a1[5];
  uint64_t v16 = a4 * v15;
  if ((unsigned __int128)(a4 * (__int128)v15) >> 64 != (a4 * v15) >> 63)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v16 < 0)
  {
LABEL_22:

    goto LABEL_23;
  }
  if (!HIDWORD(v16))
  {
    unint64_t v17 = (void *)(a3 + 8);
    uint64_t v18 = a2 - 1;
    uint64_t v19 = a1 + 7;
    while (1)
    {
      uint64_t v20 = *(v19 - 3);
      *((_DWORD *)v17 - 2) = 1;
      *((_DWORD *)v17 - 1) = v16;
      *unint64_t v17 = v20;
      if (!v18) {
        break;
      }
      if (!--v14)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v16 = a4 * *v19;
      if ((unsigned __int128)(a4 * (__int128)*v19) >> 64 != v16 >> 63) {
        goto LABEL_17;
      }
      if (v16 < 0) {
        goto LABEL_22;
      }
      v17 += 2;
      --v18;
      v19 += 2;
      if (HIDWORD(v16)) {
        goto LABEL_13;
      }
    }
LABEL_14:
    if (a5)
    {
      sub_1DCAD3BA4(a5, a7, a8, a9, a10, a11, a12, a13);

      return;
    }
    goto LABEL_21;
  }
LABEL_13:

LABEL_23:
  sub_1DCB88C58();
  __break(1u);
}

uint64_t sub_1DC9867CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void **a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13)
{
  if (a2 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v13 = a1[2];
  if (!v13) {
    goto LABEL_19;
  }
  uint64_t v14 = a1[5];
  unint64_t v15 = a4 * v14;
  if ((unsigned __int128)(a4 * (__int128)v14) >> 64 != (a4 * v14) >> 63)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((v15 & 0x8000000000000000) != 0)
  {
LABEL_22:
    sub_1DC8AF148();
    sub_1DC9872D8();
    goto LABEL_23;
  }
  if (!HIDWORD(v15))
  {
    uint64_t v16 = (void *)(a3 + 8);
    uint64_t v17 = a2 - 1;
    uint64_t v18 = a1 + 7;
    int v19 = 1;
    while (1)
    {
      uint64_t v20 = *(v18 - 3);
      *((_DWORD *)v16 - 2) = v19;
      *((_DWORD *)v16 - 1) = v15;
      *uint64_t v16 = v20;
      if (!v17) {
        break;
      }
      if (v13 == 1)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v21 = a4 * *v18;
      if ((unsigned __int128)(a4 * (__int128)*v18) >> 64 != v21 >> 63) {
        goto LABEL_17;
      }
      if (v21 < 0) {
        goto LABEL_22;
      }
      sub_1DC9873C8();
      if (v22) {
        goto LABEL_13;
      }
    }
LABEL_14:
    if (a5) {
      return sub_1DC986DD4(a5, a7, a8, a9, a10, a11, a12, a13);
    }
    goto LABEL_21;
  }
LABEL_13:
  sub_1DC8AF148();
  sub_1DC9872C8();
LABEL_23:
  uint64_t result = sub_1DC987350();
  __break(1u);
  return result;
}

uint64_t sub_1DC9868F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int v8 = a8;
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v10 = a1[2];
  if (!v10) {
    goto LABEL_22;
  }
  uint64_t v11 = a1[5];
  uint64_t v12 = a4 * v11;
  if ((unsigned __int128)(a4 * (__int128)v11) >> 64 != (a4 * v11) >> 63)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v12 < 0 || HIDWORD(v12)) {
    goto LABEL_26;
  }
  uint64_t v13 = (void *)(a3 + 8);
  uint64_t v14 = a2 - 1;
  unint64_t v15 = a1 + 7;
  while (1)
  {
    uint64_t v16 = *(v15 - 3);
    *((_DWORD *)v13 - 2) = 1;
    *((_DWORD *)v13 - 1) = v12;
    *uint64_t v13 = v16;
    if (!v14) {
      break;
    }
    if (!--v10)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v12 = a4 * *v15;
    if ((unsigned __int128)(a4 * (__int128)*v15) >> 64 != v12 >> 63) {
      goto LABEL_20;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      v13 += 2;
      --v14;
      v15 += 2;
      if (!HIDWORD(v12)) {
        continue;
      }
    }
    goto LABEL_26;
  }
LABEL_14:
  if (!a5)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((a8 & 0x8000000000000000) != 0 || HIDWORD(a8)) {
    goto LABEL_26;
  }
  double v17 = (double)a7;
  sub_1DC987270();
  id v18 = sub_1DC8D7948(v8);
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153A0]), sel_initWithCommonFormat_sampleRate_interleaved_channelLayout_, 1, 0, v18, v17);

  id v20 = objc_allocWithZone(MEMORY[0x1E4F153B0]);
  id v21 = v19;
  id v22 = sub_1DC986F50(v21, a5, 0, 0);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = sub_1DC8D79E0();

    return v24;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

void *sub_1DC986B04(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCAE1828(a1, a2, a4, a3);
}

uint64_t sub_1DC986B28(uint64_t a1, uint64_t a2)
{
  return sub_1DC986B84(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1DCAE7BE0);
}

uint64_t sub_1DC986B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DC986BCC(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_1DCAE7B74);
}

uint64_t sub_1DC986B6C(uint64_t a1, uint64_t a2)
{
  return sub_1DC986B84(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1DCAE1924);
}

uint64_t sub_1DC986B84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*v3, v3[1], v3[2], v3[3], *(void *)(a1 + 16));
}

uint64_t sub_1DC986BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DC986BCC(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))sub_1DCAE1928);
}

uint64_t sub_1DC986BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, void, void, void, void, void, uint64_t))
{
  return a6(a1, a2, *v6, v6[1], v6[2], v6[3], *(void *)(a4 + 16), a3);
}

uint64_t sub_1DC986C00()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC986C1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC986C38()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC986C54()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC986C70(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC986CAC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC986CE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC986D04()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC986D20(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC986D5C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC986D98(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC986DD4(uint64_t a1, void **a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, uint64_t a8)
{
  if ((a4 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
  if (HIDWORD(a4))
  {
LABEL_9:
    sub_1DC8AF148();
    sub_1DC9872C8();
    goto LABEL_10;
  }
  unint64_t v8 = *a6;
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_8:
    sub_1DC8AF148();
    sub_1DC9872D8();
LABEL_10:
    uint64_t result = sub_1DC987350();
    __break(1u);
    return result;
  }
  if (HIDWORD(v8)) {
    goto LABEL_9;
  }
  uint64_t result = (uint64_t)sub_1DCB61D00(*a2, a3, a4, a5, a1, v8, a7, a8);
  if (!result)
  {
    sub_1DC987224();
    swift_allocError();
    *uint64_t v10 = 0;
    return swift_willThrow();
  }
  return result;
}

void *sub_1DC986EBC(void *result, void *a2, void *a3, void *a4)
{
  uint64_t v4 = a3[3];
  uint64_t v5 = a3[4];
  BOOL v6 = __OFSUB__(v5, v4);
  uint64_t v7 = v5 - v4;
  char v8 = v6;
  if (v6)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v7 < 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7)
  {
    uint64_t v9 = 0;
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(*result + 8);
    do
    {
      uint64_t v12 = a3[2];
      uint64_t v13 = v9 * v12;
      if ((unsigned __int128)(v9 * (__int128)v12) >> 64 != (v9 * v12) >> 63)
      {
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      BOOL v6 = __OFADD__(v13, v10);
      uint64_t v14 = v13 + v10;
      if (v6) {
        goto LABEL_19;
      }
      ++v9;
      uint64_t v15 = *a4 + 4 * v14;
      if (!*a4) {
        uint64_t v15 = 0;
      }
      *(v11 - 1) = v15;
      *uint64_t v11 = v12;
      v11 += 2;
    }
    while (v7 != v9);
    uint64_t v16 = a3[3];
    uint64_t v17 = a3[4];
    BOOL v6 = __OFSUB__(v17, v16);
    uint64_t v7 = v17 - v16;
    char v8 = v6;
  }
  if ((v8 & 1) == 0)
  {
    *a2 = v7;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

id sub_1DC986F50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (a3)
  {
    void v11[4] = a3;
    v11[5] = a4;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 1107296256;
    double v11[2] = sub_1DC987020;
    v11[3] = &unk_1F37FAA08;
    char v8 = _Block_copy(v11);
    swift_release();
  }
  else
  {
    char v8 = 0;
  }
  id v9 = objc_msgSend(v5, sel_initWithPCMFormat_bufferListNoCopy_deallocator_, a1, a2, v8);

  _Block_release(v8);
  return v9;
}

uint64_t sub_1DC987020(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void *sub_1DC987074(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = sub_1DCA07870(a1);
  uint64_t v11 = 0;
  v10[0] = v8;
  v10[1] = a1;
  uint64_t result = sub_1DC986EBC(v10, &v11, a2, a3);
  if (v3)
  {
    if (v11 <= a1)
    {
      *(void *)(v7 + 16) = v11;
      swift_bridgeObjectRelease();
      return (void *)v7;
    }
    __break(1u);
  }
  else if (v11 <= a1)
  {
    *(void *)(v7 + 16) = v11;
    return (void *)v7;
  }
  __break(1u);
  return result;
}

void sub_1DC987124()
{
}

void sub_1DC987134()
{
}

void sub_1DC987144()
{
  char v0 = sub_1DC98733C();
  sub_1DCA7344C(v0, v1, v2, v3);
}

void sub_1DC987154()
{
}

void sub_1DC987168(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x1E01A7AF0);
}

void sub_1DC9871E4()
{
}

void sub_1DC9871F4()
{
}

void sub_1DC987204()
{
}

void sub_1DC987214()
{
}

unint64_t sub_1DC987224()
{
  unint64_t result = qword_1EAAA4070;
  if (!qword_1EAAA4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4070);
  }
  return result;
}

unint64_t sub_1DC987270()
{
  unint64_t result = qword_1EAAA25B8;
  if (!qword_1EAAA25B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAA25B8);
  }
  return result;
}

uint64_t sub_1DC9872B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC9872C0()
{
  return swift_release();
}

uint64_t sub_1DC987310(_DWORD *a1)
{
  return sub_1DC986458(a1, (uint64_t)a1 + v5, v4, v3, 4, v2, v1);
}

uint64_t sub_1DC98733C()
{
  return 0;
}

uint64_t sub_1DC987350()
{
  return sub_1DCB88C58();
}

uint64_t sub_1DC987368@<X0>(uint64_t a1@<X8>)
{
  return a1 - (v1 & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DC9873A8()
{
  JUMPOUT(0x1E01A99C0);
}

void *initializeBufferWithCopyOfBuffer for XPCError(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for XPCError(id *a1)
{
}

void **assignWithCopy for XPCError(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for XPCError(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for XPCError(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCError()
{
  return &type metadata for XPCError;
}

void sub_1DC987514()
{
  uint64_t v0 = (void *)sub_1DCB86888();
  sub_1DC9BA3E4();
}

uint64_t sub_1DC987568()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC9875F8;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9875F8()
{
  sub_1DC987958();
  uint64_t v4 = v3;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v4 + 24) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    *(void *)(v4 + 32) = v0;
    return MEMORY[0x1F4188298](sub_1DC987718, 0, 0);
  }
}

uint64_t sub_1DC987718()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  uint64_t v2 = sub_1DC9BCD74();
  swift_release();
  uint64_t v3 = swift_release();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  if (!v1) {
    uint64_t v3 = (uint64_t)v2;
  }
  return v4(v3);
}

void sub_1DC9877C0()
{
}

uint64_t sub_1DC9877DC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC987874;
  return sub_1DC987568();
}

uint64_t sub_1DC987874()
{
  sub_1DC987958();
  uint64_t v4 = v3;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = v0;
  }
  uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
  return v8();
}

float sub_1DC987974(const float *a1, const float *__B, vDSP_Length __N)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  float __C = 0.0;
  vDSP_dotpr(a1, 1, __B, 1, &__C, __N);
  return __C;
}

void sub_1DC9879DC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1DC987AA0(a1, a2);
  }
  else
  {
    sub_1DC987A54();
    swift_allocError();
    swift_willThrow();
  }
}

unint64_t sub_1DC987A54()
{
  unint64_t result = qword_1EAAA25D0;
  if (!qword_1EAAA25D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA25D0);
  }
  return result;
}

float sub_1DC987AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (const float *)(a1 + 32);
  vDSP_Length v3 = *(void *)(a1 + 16);
  uint64_t v4 = (const float *)(a2 + 32);
  float v5 = sub_1DC987974((const float *)(a1 + 32), (const float *)(a2 + 32), v3);
  float v6 = sub_1DC987974(v2, v2, v3);
  float v7 = sub_1DC987974(v4, v4, v3);
  swift_bridgeObjectRelease();
  float v8 = sqrt(v6 * v7);
  return v5 / v8;
}

unsigned char *storeEnumTagSinglePayload for DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC987BECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainError()
{
  return &type metadata for DomainError;
}

unint64_t sub_1DC987C28()
{
  unint64_t result = qword_1EAAA25D8;
  if (!qword_1EAAA25D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA25D8);
  }
  return result;
}

uint64_t sub_1DC987C74(uint64_t a1)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v3 = 0;
  uint64_t result = sub_1DCB6017C(v1, (float *)&v3, a1);
  if ((result & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB91E10);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC987D44(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC987D5C);
}

uint64_t sub_1DC987D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC99699C(inited);
  sub_1DC996A30(v11 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v13 = swift_initStackObject();
  sub_1DC996930(v13);
  type metadata accessor for XPCDecoder();
  uint64_t v14 = swift_initStackObject();
  sub_1DC996A18(v14);
  sub_1DC8B9C54(v10);
  uint64_t v15 = swift_setDeallocating();
  sub_1DC978D0C(v15);
  sub_1DC996984();
  sub_1DC8BAB84();
  sub_1DC8BAB0C();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
}

uint64_t sub_1DC987E38(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC987E50);
}

uint64_t sub_1DC987E50()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  float v7 = (void *)sub_1DC996CA8(v6);
  *float v7 = v8;
  v7[1] = sub_1DC987F58;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC987F58()
{
  sub_1DC996C44();
  uint64_t v17 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *float v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  v6[27] = v4;
  swift_task_dealloc();
  if (v0)
  {
    v6[37] = v0;
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = (void *)sub_1DC8BAA00();
    v6[28] = v14;
    *uint64_t v14 = v8;
    v14[1] = sub_1DC9880AC;
    return v16();
  }
}

uint64_t sub_1DC9880AC()
{
  sub_1DC886900();
  char v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  void *v8 = v7;
  *(void *)(v5 + 232) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(unsigned char *)(v5 + 304) = v3 & 1;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9881A4()
{
  sub_1DC886900();
  if (*(unsigned char *)(v0 + 304) == 1)
  {
    *(void *)(v0 + 240) = *(void *)(*(void *)(v0 + 216) + 24);
    sub_1DC996C10();
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1DC98830C;
    uint64_t v9 = (uint64_t (*)(void))sub_1DC99706C((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v13, v14);
    return v9();
  }
  else
  {
    swift_release();
    uint64_t v11 = sub_1DC996E84();
    sub_1DC978D0C(v11);
    sub_1DC996984();
    sub_1DC997000();
    sub_1DC886854();
    return v12();
  }
}

uint64_t sub_1DC9882A4()
{
  sub_1DC8867A8();
  swift_release();
  *(void *)(v0 + 296) = *(void *)(v0 + 232);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_1DC98830C()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_1DC886774();
  uint64_t v11 = v10;
  sub_1DC88679C();
  *uint64_t v12 = v11;
  uint64_t v13 = *v1;
  sub_1DC88679C();
  *uint64_t v14 = v13;
  v11[32] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    v11[33] = v3;
    v11[34] = v5;
    v11[35] = v7;
    v11[36] = v9;
  }
  sub_1DC886854();
  sub_1DC8BAB0C();
  return MEMORY[0x1F4188298](v15, v16, v17);
}

uint64_t sub_1DC988418()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  swift_release();
  uint64_t v0 = sub_1DC996E84();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  sub_1DC997000();
  sub_1DC8BA86C();
  return v6(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1DC9884A0()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  *(void *)(v0 + 296) = *(void *)(v0 + 256);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_1DC988514()
{
  sub_1DC8867A8();
  uint64_t v0 = sub_1DC996E84();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC988574(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC988594, 0, 0);
}

uint64_t sub_1DC988594()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98869C;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98869C()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC988788()
{
  sub_1DC996B58();
  sub_1DC9BCD00();
  if (v0)
  {
    swift_release();
    swift_release();
    *(void *)(v1 + 240) = v0;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v2, v3, v4);
  }
  else
  {
    sub_1DC996B3C();
    uint64_t v5 = swift_release();
    sub_1DC997034(v5, v6, v7, v8, v9, v10, v11, v12, v25, v26, v27, v28, v29, v30, v31, v32);
    uint64_t v13 = swift_setDeallocating();
    sub_1DC978D0C(v13);
    uint64_t v14 = sub_1DC996984();
    sub_1DC996E24(v14, v15, v16, v17, v18, v19, v20, v21, v22);
    MEMORY[0x38] = v33;
    sub_1DC8BAB84();
    return v23();
  }
}

uint64_t sub_1DC98889C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC9888BC, 0, 0);
}

uint64_t sub_1DC9888BC()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC9889C4;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC9889C4()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC988AB0()
{
  sub_1DC996B58();
  sub_1DC9BCC94();
  if (!v0)
  {
    sub_1DC996B3C();
    swift_release();
    uint64_t v6 = swift_setDeallocating();
    sub_1DC978D0C(v6);
    sub_1DC996984();
    sub_1DC996CCC();
    MEMORY[0x30] = v10;
    MEMORY[0x40] = v11;
    MEMORY[0x50] = v12;
    MEMORY[0x58] = v13;
    MEMORY[0x60] = v14;
    sub_1DC8BAB84();
    sub_1DC996F54();
    __asm { BRAA            X1, X16 }
  }
  swift_release();
  swift_release();
  *(void *)(v1 + 240) = v0;
  sub_1DC886854();
  sub_1DC996F54();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DC988BDC(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC988BF4);
}

uint64_t sub_1DC988BF4()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC988CFC;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC988CFC()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  v3[27] = v5;
  v3[28] = v0;
  swift_task_dealloc();
  if (v0) {
    v3[29] = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC988DF0()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 224);
  sub_1DC996BD4();
  sub_1DC9BCE40();
  if (v1)
  {
    swift_release();
    swift_release();
    *(void *)(v0 + 232) = v1;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v2, v3, v4);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v5 = swift_setDeallocating();
    sub_1DC978D0C(v5);
    sub_1DC996984();
    uint64_t v6 = sub_1DC997100();
    return v7(v6);
  }
}

uint64_t sub_1DC988ED0()
{
  sub_1DC8867A8();
  uint64_t v0 = sub_1DC996E84();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC988F30(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC988F50, 0, 0);
}

uint64_t sub_1DC988F50()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC989058;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC989058()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC989144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1DC997114();
  sub_1DC996B58();
  sub_1DC9BCC34();
  if (v22)
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 240) = v22;
    sub_1DC886854();
    sub_1DC996BA0();
    return MEMORY[0x1F4188298](v24, v25, v26);
  }
  else
  {
    sub_1DC996B3C();
    swift_release();
    sub_1DC996F14();
    uint64_t v28 = sub_1DC996EF8();
    sub_1DC978D0C(v28);
    sub_1DC996984();
    sub_1DC996CCC();
    MEMORY[0x30] = a15;
    MEMORY[0x38] = a16;
    sub_1DC8BAB84();
    sub_1DC996BA0();
    return v30(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  }
}

uint64_t sub_1DC989230(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return MEMORY[0x1F4188298](sub_1DC989250, 0, 0);
}

uint64_t sub_1DC989250()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC989358;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC989358()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  v3[27] = v5;
  v3[28] = v0;
  swift_task_dealloc();
  if (v0) {
    v3[29] = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC98944C()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 224);
  sub_1DC996BD4();
  sub_1DC9BCEC4();
  if (v1)
  {
    swift_release();
    swift_release();
    *(void *)(v0 + 232) = v1;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v2, v3, v4);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v5 = swift_setDeallocating();
    sub_1DC978D0C(v5);
    sub_1DC996984();
    uint64_t v6 = sub_1DC997100();
    return v7(v6);
  }
}

uint64_t sub_1DC98952C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC98954C, 0, 0);
}

uint64_t sub_1DC98954C()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC989654;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC989654()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC989740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1DC997114();
  sub_1DC996B58();
  sub_1DC9BCBB8();
  if (v22)
  {
    swift_release();
    swift_release();
    *(void *)(v23 + 240) = v22;
    sub_1DC886854();
    sub_1DC996BA0();
    return MEMORY[0x1F4188298](v24, v25, v26);
  }
  else
  {
    sub_1DC996B3C();
    swift_release();
    sub_1DC996F14();
    uint64_t v28 = sub_1DC996EF8();
    sub_1DC978D0C(v28);
    sub_1DC996984();
    sub_1DC996E40();
    MEMORY[0x38] = a16;
    sub_1DC8BAB84();
    sub_1DC996BA0();
    return v30(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  }
}

uint64_t sub_1DC989828(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC989848, 0, 0);
}

uint64_t sub_1DC989848()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC989950;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC989950()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC989A3C()
{
  sub_1DC996B58();
  sub_1DC9BCAB4();
  if (v0)
  {
    swift_release();
    swift_release();
    *(void *)(v1 + 240) = v0;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v2, v3, v4);
  }
  else
  {
    sub_1DC996B3C();
    swift_release();
    sub_1DC996F14();
    uint64_t v5 = sub_1DC996EF8();
    sub_1DC978D0C(v5);
    sub_1DC996984();
    sub_1DC996CCC();
    MEMORY[0x30] = v8;
    sub_1DC8BAB84();
    return v6();
  }
}

uint64_t sub_1DC989B50(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC989B70, 0, 0);
}

uint64_t sub_1DC989B70()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC989C78;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC989C78()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC989D64()
{
  sub_1DC996B58();
  sub_1DC9BCA44();
  if (!v0)
  {
    sub_1DC996B3C();
    swift_release();
    uint64_t v6 = swift_setDeallocating();
    sub_1DC978D0C(v6);
    sub_1DC996984();
    sub_1DC996E40();
    MEMORY[0x38] = v10;
    MEMORY[0x40] = v11;
    MEMORY[0x48] = v12;
    MEMORY[0x50] = v13;
    MEMORY[0x58] = v14;
    sub_1DC8BAB84();
    sub_1DC997048();
    __asm { BRAA            X1, X16 }
  }
  swift_release();
  swift_release();
  *(void *)(v1 + 240) = v0;
  sub_1DC886854();
  sub_1DC997048();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DC989E9C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC989EBC, 0, 0);
}

uint64_t sub_1DC989EBC()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC989FC4;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC989FC4()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC98A0B0()
{
  sub_1DC996B58();
  sub_1DC9BC9D0();
  if (v0)
  {
    swift_release();
    swift_release();
    *(void *)(v1 + 240) = v0;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v2, v3, v4);
  }
  else
  {
    sub_1DC996B3C();
    uint64_t v5 = swift_release();
    sub_1DC997034(v5, v6, v7, v8, v9, v10, v11, v12, v25, v26, v27, v28, v29, v30, v31, v32);
    uint64_t v13 = swift_setDeallocating();
    sub_1DC978D0C(v13);
    uint64_t v14 = sub_1DC996984();
    sub_1DC996E24(v14, v15, v16, v17, v18, v19, v20, v21, v22);
    MEMORY[0x38] = v33;
    MEMORY[0x40] = v34;
    sub_1DC8BAB84();
    return v23();
  }
}

uint64_t sub_1DC98A1D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC98A1F0, 0, 0);
}

uint64_t sub_1DC98A1F0()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98A2F8;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98A2F8()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC98A3E4()
{
  sub_1DC8BABB4();
  sub_1DC996B58();
  sub_1DC9BC930();
  if (v0)
  {
    swift_release();
    swift_release();
    *(void *)(v1 + 240) = v0;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v2, v3, v4);
  }
  else
  {
    sub_1DC996B3C();
    swift_release();
    uint64_t v5 = swift_setDeallocating();
    sub_1DC978D0C(v5);
    sub_1DC996984();
    MEMORY[0] = v8;
    MEMORY[8] = v9;
    sub_1DC8BAB84();
    return v6();
  }
}

uint64_t sub_1DC98A4CC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x1F4188298](sub_1DC98A4EC, 0, 0);
}

uint64_t sub_1DC98A4EC()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98A5F4;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98A5F4()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  sub_1DC996CE4(v5);
  if (v0) {
    *(void *)(v3 + 240) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC98A6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12)
{
  sub_1DC996C44();
  sub_1DC88688C();
  sub_1DC996B58();
  sub_1DC9BC8DC();
  if (v12)
  {
    swift_release();
    swift_release();
    *(void *)(v13 + 240) = v12;
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v14, v15, v16);
  }
  else
  {
    sub_1DC996B3C();
    swift_release();
    uint64_t v18 = swift_setDeallocating();
    sub_1DC978D0C(v18);
    sub_1DC996984();
    MEMORY[0] = a12;
    sub_1DC8BAB84();
    sub_1DC8F03BC();
    return v20(v19, v20, v21, v22, v23, v24, v25, v26);
  }
}

uint64_t sub_1DC98A7BC()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_setDeallocating();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC98A824()
{
  sub_1DC8867A8();
  v0[22] = v1;
  v0[23] = v2;
  uint64_t v3 = type metadata accessor for RemoteRequest();
  sub_1DC8BADF0(v3);
  v0[24] = sub_1DC996EDC();
  v0[25] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DC98A8AC()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[26] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[27] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[28] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[29] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1DC98A9B8;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98A9B8()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  v3[30] = v5;
  v3[31] = v0;
  swift_task_dealloc();
  if (v0) {
    v3[32] = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC98AAAC()
{
  sub_1DC8BABB4();
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[24];
  sub_1DC996BD4();
  sub_1DC9BCB0C(v2);
  if (v1)
  {
    swift_release();
    swift_release();
    v0[32] = v1;
    sub_1DC886854();
    return MEMORY[0x1F4188298](v3, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[24];
    uint64_t v6 = v0[25];
    uint64_t v8 = v0[22];
    swift_release();
    swift_release();
    sub_1DC9960C8(v7, v6, (void (*)(void))type metadata accessor for RemoteRequest);
    uint64_t v9 = swift_setDeallocating();
    sub_1DC978D0C(v9);
    sub_1DC996984();
    sub_1DC9960C8(v6, v8, (void (*)(void))type metadata accessor for RemoteRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BAB84();
    return v10();
  }
}

uint64_t sub_1DC98ABF4()
{
  sub_1DC886900();
  uint64_t v0 = swift_setDeallocating();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC98AC78()
{
  sub_1DC8867A8();
  v0[12] = v1;
  v0[13] = v2;
  uint64_t v3 = sub_1DCB86BF8();
  sub_1DC996C80(v3);
  v0[15] = v4;
  v0[16] = sub_1DC8BAE7C();
  uint64_t v5 = type metadata accessor for AccessibilitySoundActions.Session();
  v0[17] = v5;
  sub_1DC8BADF0(v5);
  v0[18] = sub_1DC996EDC();
  v0[19] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC98AD30()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  sub_1DC996FCC();
  sub_1DC8B9CD4(v3, v0, (uint64_t *)&unk_1EAAA2640);
  type metadata accessor for XPCDataDecoder();
  uint64_t v4 = swift_allocObject();
  sub_1DC996FE0(v4);
  sub_1DC8B9CD4(v3 + 16, (uint64_t)v1, &qword_1EAA9E478);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v5 = swift_allocObject();
  sub_1DC9970E0(v5);
  type metadata accessor for XPCDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC997098(inited);
  sub_1DC8B9C54(v1);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 168) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DC98AE4C;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC9780D0();
}