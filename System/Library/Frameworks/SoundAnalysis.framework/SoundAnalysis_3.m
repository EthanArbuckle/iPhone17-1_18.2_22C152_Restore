uint64_t sub_1DCA1EFEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  unsigned char *v3;

  sub_1DC957690();
  result = swift_allocError();
  *a1 = result;
  *v3 = 2;
  return result;
}

uint64_t sub_1DCA1F034(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  sub_1DCA1F154();
  sub_1DC87E988(&qword_1EAA9C6C0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1DCBB9440;
  *(void *)(result + 32) = 1;
  if ((uint64_t)v3 < *((uint64_t *)&v2 + 1))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (__OFSUB__((void)v3, *((void *)&v2 + 1)))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  *(void *)(result + 40) = v3 - *((void *)&v2 + 1);
  if (v4 < *((uint64_t *)&v3 + 1))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (!__OFSUB__(v4, *((void *)&v3 + 1)))
  {
    *(void *)(result + 48) = v4 - *((void *)&v3 + 1);
    sub_1DC87E988(&qword_1EAA9E860);
    sub_1DC8E7358((uint64_t)&qword_1EAA9E868);
    return sub_1DCB87018();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DCA1F154()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v2 * v1;
  if ((unsigned __int128)(v2 * (__int128)v1) >> 64 != (v2 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v4 = v0[5];
  unint64_t v5 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = v0[4];
  uint64_t v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v7 * v1;
  if ((unsigned __int128)(v7 * (__int128)v1) >> 64 != (v7 * v1) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = v0[6];
  BOOL v10 = __OFADD__(v8, v9);
  uint64_t v11 = v8 + v9;
  if (v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v11 < (uint64_t)v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v12 = *v0;
  unint64_t v13 = *(void *)(*v0 + 16);
  if (v13 >= v5 && (uint64_t)v13 >= v11)
  {
    sub_1DC88CD74((uint64_t)v0);
    return v12;
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_1DCA1F22C(uint64_t a1@<X8>)
{
  sub_1DC8CD868();
  if (v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v4 < 0)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v7 = v3;
  sub_1DCB88628();
  *(void *)uint64_t v7 = sub_1DCB885D8();
  *(_DWORD *)(v7 + 8) = v8;
  *(_DWORD *)(v7 + 12) = v9;
  *(void *)(v7 + 16) = v10;
  type metadata accessor for SNSoundClassifier();
  sub_1DCB88628();
  sub_1DCA1F398();
  if (!v1)
  {
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(_OWORD *)(a1 + 16) = v13;
    *(void *)(a1 + 32) = v14;
    *(void *)(a1 + 40) = v15;
    *(void *)(a1 + 48) = v16;
    *(_OWORD *)(a1 + 56) = v17;
  }
}

void sub_1DCA1F398()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  int v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(ObjectType, v11);
  sub_1DCA223FC(v15);
  if (v16)
  {
    long long v17 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v9, sel_featureValueForName_, v17);

    if (v18
      && (id v19 = objc_msgSend(v18, sel_dictionaryValue),
          v18,
          sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0),
          uint64_t v20 = sub_1DCB877B8(),
          v19,
          unint64_t v21 = sub_1DCA20540(v20),
          swift_bridgeObjectRelease(),
          v21))
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1DCA21B30(v21, v7);
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(v5 + 40);
      *(void *)uint64_t v13 = *(void *)v5;
      *(void *)(v13 + 8) = *(void *)(v5 + 8);
      *(_OWORD *)(v13 + 16) = *(_OWORD *)(v5 + 16);
      *(void *)(v13 + 32) = *(void *)(v5 + 32);
      *(void *)(v13 + 40) = v23;
      *(void *)(v13 + 48) = v22;
      *(void *)(v13 + 56) = v3;
      *(void *)(v13 + 64) = v1;
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1DC884E74();
      uint64_t v26 = sub_1DC883884();
      sub_1DC9C08D4(v26, v27);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1DC884E74();
    uint64_t v24 = sub_1DC883884();
    sub_1DC9C08D4(v24, v25);
  }
  sub_1DC88D674();
}

void sub_1DCA1F568(double **a1@<X8>)
{
  uint64_t v3 = (void *)MEMORY[0x1E01A8D20]();
  uint64_t v4 = sub_1DCA1E380();
  if (v1)
  {
  }
  else
  {
    uint64_t v5 = v4;
    a1[3] = (double *)swift_getObjectType();
    *a1 = v5;
  }
}

id _SNClassifySoundRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

#error "1DCA1F774: call analysis failed (funcsize=6)"

double *sub_1DCA1F780()
{
  return sub_1DCA1E380();
}

uint64_t sub_1DCA1F798(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, CMTimeEpoch a6, void *a7)
{
  uint64_t v9 = v7;
  *(void *)&v27.timescale = a5;
  v27.epoch = a6;
  sub_1DC89F6D8();
  v27.value = v14;
  *(void *)(v7 + 16) = 0;
  type metadata accessor for _SNClassifySoundRequest();
  swift_getObjectType();
  uint64_t v15 = *(uint64_t (**)(void))(a2 + 16);
  sub_1DCA23F90();
  uint64_t v16 = (void *)v15();
  sub_1DCA1D094(v16);

  if (v8)
  {
    swift_unknownObjectRelease();

    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v9 + 64) = a1;
    *(void *)(v9 + 72) = a2;
    *(double *)(v9 + 24) = a3;
    *(void *)(v9 + 32) = v27.value;
    *(void *)(v9 + 40) = *(void *)&v27.timescale;
    *(void *)(v9 + 48) = v27.epoch;
    *(void *)(v9 + 56) = a7;
    type metadata accessor for SNModelMetadataUtils();
    swift_unknownObjectRetain();
    id v26 = a7;
    sub_1DCA23F90();
    long long v17 = (void *)v15();
    uint64_t v18 = sub_1DCB30CCC(v17, MEMORY[0x1E4FBC870]);

    *(void *)(v9 + 88) = 0;
    *(void *)(v9 + 96) = v18;
    sub_1DCA23F90();
    id v19 = (void *)v15();
    uint64_t v20 = sub_1DCB30BDC(v19, 16000);

    id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, v20);
    sub_1DC8AE910(v21);
    LODWORD(v19) = v22;

    CMTime time = v27;
    CMTimeConvertScale(&v28, &time, (int32_t)v19, kCMTimeRoundingMethod_RoundTowardZero);
    id v23 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v28.value);
    sub_1DCB22DE0(v23);
    LODWORD(v19) = v24;

    swift_unknownObjectRelease();
    *(_DWORD *)(v9 + 80) = v19;
  }
  return v9;
}

id sub_1DCA1F9B8(uint64_t a1, uint64_t a2, int a3, double a4)
{
  v92[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v9 = self;
  v92[0] = 0;
  id v10 = sub_1DCB6B73C(v9, (uint64_t)v92);
  if (!v10)
  {
    id v35 = v92[0];
    sub_1DCA2404C();

    swift_willThrow();
    return v10;
  }
  id v11 = v92[0];
  uint64_t v12 = (void *)sub_1DCA23E60();
  uint64_t v13 = sub_1DCA240F0();
  sub_1DCB60B18(v13, v14);

  sub_1DCB87908();
  uint64_t v15 = sub_1DCA23E88();
  id v19 = sub_1DCB68494(v15, v16, v17, v18);

  id v20 = v92[0];
  if (!v19)
  {
    id v36 = v92[0];
    sub_1DCA2404C();

    swift_willThrow();
    goto LABEL_33;
  }
  id v21 = v92[0];
  sub_1DCB87908();
  uint64_t v22 = sub_1DCA23E88();
  id v26 = sub_1DCB6A308(v22, v23, v24, v25);

  id v27 = v92[0];
  if (!v26)
  {
    id v37 = v92[0];
    sub_1DCA2404C();

    swift_willThrow();
    goto LABEL_33;
  }
  int v90 = a3;
  id v28 = v92[0];
  sub_1DCA23E60();
  uint64_t v29 = sub_1DCA23E88();
  id v33 = sub_1DCB6A948(v29, v30, v31, v32);

  if (!v33)
  {
    id v38 = v92[0];
    sub_1DCA2404C();

    swift_willThrow();
    goto LABEL_33;
  }
  id v34 = v92[0];
  sub_1DCB2FB74(v33, a1, a2);
  if (!v4)
  {
    v89 = v33;
    v39 = (void *)sub_1DCB87908();
    v92[0] = 0;
    id v40 = sub_1DCB68964(v9, v10, v39, 1, (uint64_t)v92);

    id v41 = v92[0];
    if (!v40)
    {
      id v56 = v92[0];
      sub_1DCB86898();

      swift_willThrow();
      v57 = v89;
LABEL_32:

      goto LABEL_33;
    }
    v84 = v40;
    v85 = v19;
    v86 = v26;
    type metadata accessor for SNModelMetadataUtils();
    uint64_t ObjectType = swift_getObjectType();
    v42 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
    id v43 = v41;
    v44 = (void *)v42(ObjectType, a2);
    unsigned int v88 = sub_1DCB30BDC(v44, 16000);

    v45 = (void *)v42(ObjectType, a2);
    id v46 = objc_msgSend(v45, sel_inputDescriptionsByName);

    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
    uint64_t v47 = sub_1DCB877B8();

    v48 = (void *)sub_1DC9A4430(v47);
    swift_bridgeObjectRelease();
    if (v48
      && (id v49 = objc_msgSend(v48, sel_multiArrayConstraint), v48, v49))
    {
      id v50 = objc_msgSend(v49, sel_shape);

      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
      unint64_t v51 = sub_1DCB87C38();
    }
    else
    {
      unint64_t v51 = MEMORY[0x1E4FBC860];
    }
    type metadata accessor for SNUtils();
    int v52 = sub_1DCB219B0(v51);
    swift_bridgeObjectRelease();
    if (a4 < 0.0 || a4 >= 1.0)
    {
      sub_1DCA22694();
      uint64_t v54 = sub_1DC883884();
      sub_1DC9C08D4(v54, v55);

      return v10;
    }
    sub_1DCA240A8();
    sub_1DCB6BA88(v88, 1, v52, v58);
    uint64_t v59 = sub_1DCA23DC8();
    if (!sub_1DCB6B83C(v59, v60, v85, v86, 0, 0, v61, v62))
    {
      id v80 = v91;
      sub_1DCB86898();

      swift_willThrow();
LABEL_31:
      v57 = v84;
      goto LABEL_32;
    }
    sub_1DC8CD868();
    if (v64)
    {
      __break(1u);
    }
    else if (v63 > -1.0)
    {
      if (v63 < 4294967300.0)
      {
        int v65 = v63;
        id v66 = v91;
        sub_1DCA240A8();
        sub_1DCB6BB74(v88, v65, v90, v52, v67);
        uint64_t v68 = sub_1DCA23DC8();
        if (sub_1DCB6B83C(v68, v69, v86, v89, 0, 0, v70, v71))
        {
          id v72 = v91;
          sub_1DCA240A8();
          sub_1DCB6BA88(v88, v65, 1, v73);
          uint64_t v74 = sub_1DCA23DC8();
          char v78 = sub_1DCB6B83C(v74, v75, v89, v84, 0, 0, v76, v77);
          id v79 = v91;
          if (v78)
          {
            sub_1DCB5EC24((uint64_t)v10);
            sub_1DCB5F1F8((uint64_t)v10);

            return v10;
          }
          v83 = v79;
          sub_1DCB86898();

          swift_willThrow();
LABEL_33:

          return v10;
        }
        id v81 = v91;
        sub_1DCB86898();

        swift_willThrow();
        goto LABEL_31;
      }
LABEL_38:
      __break(1u);
    }
    __break(1u);
    goto LABEL_38;
  }

  return v10;
}

uint64_t sub_1DCA20010(void *a1, uint64_t a2, void (*a3)(void))
{
  v36[9] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void *)(v3 + 88);
  BOOL v6 = v5 < 1;
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    uint64_t v10 = self;
    v36[0] = 0;
    id v11 = sub_1DCB6B5C0(v10, a1, (uint64_t)v36);
    id v12 = v36[0];
    if (v11)
    {
      id v26 = a3;
      sub_1DCB87938();
      id v13 = v12;
      sub_1DCA1F398();
      CMTimeValue v14 = v4;
      if (!v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = (objc_class *)type metadata accessor for _SNClassificationResult();
        id v17 = objc_allocWithZone(v16);
        id v18 = sub_1DC91E308((uint64_t)v36);
        v36[3] = v16;
        v36[0] = v18;
        id v19 = objc_allocWithZone((Class)SNClassificationResult);
        id v20 = sub_1DCA21A88(v36);
        sub_1DCA203C4(v20, a1, *(_DWORD *)(v3 + 80));
        objc_msgSend(v20, sel_timeRange);
        v26();
        uint64_t v23 = sub_1DCB883C8();
        ((void (*)(uint64_t))v26)(v23);
        sub_1DCA240A8();
        sub_1DCB883D8();
        v27[0] = v31;
        v27[1] = v32;
        long long v28 = v33;
        uint64_t v29 = v34;
        uint64_t v30 = v35;
        objc_msgSend(v20, sel_setTimeRange_, v27);
        sub_1DC87E988(&qword_1EAA9C720);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1DCBB8670;
        *(void *)(v24 + 32) = v20;
        v27[0] = v24;
        sub_1DCB87C68();
        unint64_t v25 = v27[0];
        swift_unknownObjectRelease();
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      id v15 = v36[0];
      CMTimeValue v14 = (void *)sub_1DCB86898();

      swift_willThrow();
    }
  }
  else
  {
    *(void *)(v3 + 88) = v7;
  }
  unint64_t v25 = MEMORY[0x1E4FBC860];
LABEL_10:
  swift_bridgeObjectRetain();
  if (v25 >> 62)
  {
    sub_1DC87E988(&qword_1EAA9E960);
    uint64_t v21 = sub_1DCB88C78();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DCB89078();
    uint64_t v21 = v25;
  }
  swift_bridgeObjectRelease();
  return v21;
}

void sub_1DCA203C4(void *a1, void *a2, unsigned int a3)
{
  sub_1DCB2FC90(a2, 0, (uint64_t)v25);
  if (!v3)
  {
    sub_1DC8CD868();
    if (v8)
    {
      __break(1u);
    }
    else if (v7 > -9.22337204e18)
    {
      if (v7 < 9.22337204e18)
      {
        uint64_t v9 = (uint64_t)v7;
        id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, sub_1DCB5C99C((uint64_t)a2));
        sub_1DC8AE910(v10);
        int32_t v12 = v11;

        CMTimeMake(&v21, v9, v12);
        CMTimeValue value = v21.value;
        CMTimeEpoch epoch = v21.epoch;
        uint64_t v15 = *(void *)&v21.timescale;
        id v16 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, sub_1DCB5C99C((uint64_t)a2));
        sub_1DC8AE910(v16);
        LODWORD(v9) = v17;

        CMTimeMake(&v21, a3, v9);
        CMTimeValue v18 = v21.value;
        CMTimeEpoch v19 = v21.epoch;
        uint64_t v20 = *(void *)&v21.timescale;
        v21.CMTimeValue value = value;
        *(void *)&v21.timescale = v15;
        v21.CMTimeEpoch epoch = epoch;
        CMTimeValue v22 = v18;
        uint64_t v23 = v20;
        CMTimeEpoch v24 = v19;
        objc_msgSend(a1, sel_setTimeRange_, &v21);
        return;
      }
LABEL_9:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
}

unint64_t sub_1DCA20540(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1DC87E988(&qword_1EAAA0248);
    objc_super v2 = (void *)sub_1DCB88CF8();
  }
  else
  {
    objc_super v2 = (void *)MEMORY[0x1E4FBC868];
  }
  sub_1DCA21AF8(a1, v35);
  uint64_t v3 = v35[0];
  int64_t v4 = v35[3];
  unint64_t v5 = v35[4];
  int64_t v25 = (unint64_t)(v35[2] + 64) >> 6;
  uint64_t v26 = v35[1];
  unint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v7 = (v5 - 1) & v5;
  unint64_t v8 = __clz(__rbit64(v5)) | (v4 << 6);
  for (i = v4; ; unint64_t v8 = __clz(__rbit64(v11)) + (i << 6))
  {
    sub_1DC8A8E44(*(void *)(v3 + 48) + 40 * v8, (uint64_t)v33);
    id v13 = *(void **)(*(void *)(v3 + 56) + 8 * v8);
    *((void *)&v34 + 1) = v13;
    v31[0] = v33[0];
    v31[1] = v33[1];
    long long v32 = v34;
    sub_1DC8A8E44((uint64_t)v31, (uint64_t)&v29);
    id v14 = v13;
    if (!swift_dynamicCast())
    {
      sub_1DC8A8F50((uint64_t)v31, (uint64_t *)&unk_1EAAA4D80);
LABEL_32:
      swift_bridgeObjectRelease();
      sub_1DC964348();
      swift_release();
      return 0;
    }
    id v15 = *((id *)&v32 + 1);
    sub_1DC8A8F50((uint64_t)v31, (uint64_t *)&unk_1EAAA4D80);
    uint64_t v29 = 0;
    char v30 = 1;
    id v16 = v15;
    MEMORY[0x1E01A6FA0]();

    if (v30) {
      goto LABEL_32;
    }
    uint64_t v17 = v29;
    unint64_t result = sub_1DC9637DC(v27, v28);
    unint64_t v18 = result;
    if (v19)
    {
      uint64_t v20 = (uint64_t *)(v2[6] + 16 * result);
      unint64_t result = swift_bridgeObjectRelease();
      *uint64_t v20 = v27;
      v20[1] = v28;
      *(void *)(v2[7] + 8 * v18) = v17;
      goto LABEL_29;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    CMTime v21 = (uint64_t *)(v2[6] + 16 * result);
    *CMTime v21 = v27;
    v21[1] = v28;
    *(void *)(v2[7] + 8 * result) = v17;
    uint64_t v22 = v2[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_36;
    }
    v2[2] = v24;
LABEL_29:
    int64_t v4 = i;
    unint64_t v5 = v7;
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_37;
    }
    if (v10 >= v25) {
      goto LABEL_33;
    }
    unint64_t v11 = *(void *)(v26 + 8 * v10);
    int64_t i = v4 + 1;
    if (!v11)
    {
      int64_t i = v4 + 2;
      if (v4 + 2 >= v25) {
        goto LABEL_33;
      }
      unint64_t v11 = *(void *)(v26 + 8 * i);
      if (!v11)
      {
        int64_t i = v4 + 3;
        if (v4 + 3 >= v25) {
          goto LABEL_33;
        }
        unint64_t v11 = *(void *)(v26 + 8 * i);
        if (!v11)
        {
          int64_t i = v4 + 4;
          if (v4 + 4 >= v25) {
            goto LABEL_33;
          }
          unint64_t v11 = *(void *)(v26 + 8 * i);
          if (!v11)
          {
            int64_t i = v4 + 5;
            if (v4 + 5 >= v25) {
              goto LABEL_33;
            }
            unint64_t v11 = *(void *)(v26 + 8 * i);
            if (!v11)
            {
              int64_t v12 = v4 + 6;
              while (v12 < v25)
              {
                unint64_t v11 = *(void *)(v26 + 8 * v12++);
                if (v11)
                {
                  int64_t i = v12 - 1;
                  goto LABEL_21;
                }
              }
LABEL_33:
              sub_1DC964348();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
LABEL_21:
    uint64_t v7 = (v11 - 1) & v11;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void sub_1DCA2089C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1DC87E988(&qword_1EAAA0250);
    objc_super v2 = (void *)sub_1DCB88CF8();
  }
  else
  {
    objc_super v2 = (void *)MEMORY[0x1E4FBC868];
  }
  sub_1DCA21AF8(a1, v35);
  uint64_t v3 = v35[0];
  int64_t v4 = v35[3];
  unint64_t v5 = v35[4];
  int64_t v26 = (unint64_t)(v35[2] + 64) >> 6;
  uint64_t v27 = v35[1];
  swift_bridgeObjectRetain();
  uint64_t v6 = MEMORY[0x1E4FBB960];
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v7 = (v5 - 1) & v5;
  unint64_t v8 = __clz(__rbit64(v5)) | (v4 << 6);
  for (i = v4; ; unint64_t v8 = __clz(__rbit64(v11)) + (i << 6))
  {
    sub_1DC8A8E44(*(void *)(v3 + 48) + 40 * v8, (uint64_t)v33);
    id v13 = *(void **)(*(void *)(v3 + 56) + 8 * v8);
    *((void *)&v34 + 1) = v13;
    v31[0] = v33[0];
    v31[1] = v33[1];
    long long v32 = v34;
    sub_1DC8A8E44((uint64_t)v31, (uint64_t)v30);
    id v14 = v13;
    if (!swift_dynamicCast())
    {
      sub_1DC8A8F50((uint64_t)v31, (uint64_t *)&unk_1EAAA4D80);
      swift_bridgeObjectRelease();
      sub_1DCA240DC();
      sub_1DC964348();
      swift_release();
      return;
    }
    id v15 = *((id *)&v32 + 1);
    sub_1DC8A8F50((uint64_t)v31, (uint64_t *)&unk_1EAAA4D80);
    unint64_t v16 = sub_1DC9637DC(v28, v29);
    unint64_t v17 = v16;
    if (v18)
    {
      uint64_t v19 = v6;
      uint64_t v20 = (uint64_t *)(v2[6] + 16 * v16);
      swift_bridgeObjectRelease();
      *uint64_t v20 = v28;
      v20[1] = v29;
      uint64_t v21 = v2[7];

      *(void *)(v21 + 8 * v17) = v15;
      uint64_t v6 = v19;
      goto LABEL_28;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v16;
    uint64_t v22 = (uint64_t *)(v2[6] + 16 * v16);
    *uint64_t v22 = v28;
    v22[1] = v29;
    *(void *)(v2[7] + 8 * v16) = v15;
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_33;
    }
    v2[2] = v25;
LABEL_28:
    int64_t v4 = i;
    unint64_t v5 = v7;
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_34;
    }
    if (v10 >= v26) {
      goto LABEL_31;
    }
    unint64_t v11 = *(void *)(v27 + 8 * v10);
    int64_t i = v4 + 1;
    if (!v11)
    {
      int64_t i = v4 + 2;
      if (v4 + 2 >= v26) {
        goto LABEL_31;
      }
      unint64_t v11 = *(void *)(v27 + 8 * i);
      if (!v11)
      {
        int64_t i = v4 + 3;
        if (v4 + 3 >= v26) {
          goto LABEL_31;
        }
        unint64_t v11 = *(void *)(v27 + 8 * i);
        if (!v11)
        {
          int64_t i = v4 + 4;
          if (v4 + 4 >= v26) {
            goto LABEL_31;
          }
          unint64_t v11 = *(void *)(v27 + 8 * i);
          if (!v11)
          {
            int64_t i = v4 + 5;
            if (v4 + 5 >= v26) {
              goto LABEL_31;
            }
            unint64_t v11 = *(void *)(v27 + 8 * i);
            if (!v11)
            {
              int64_t v12 = v4 + 6;
              while (v12 < v26)
              {
                unint64_t v11 = *(void *)(v27 + 8 * v12++);
                if (v11)
                {
                  int64_t i = v12 - 1;
                  goto LABEL_21;
                }
              }
LABEL_31:
              sub_1DCA240DC();
              sub_1DC964348();
              return;
            }
          }
        }
      }
    }
LABEL_21:
    uint64_t v7 = (v11 - 1) & v11;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

id sub_1DCA20BBC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DCA22694();
  sub_1DC883884();
  *uint64_t v3 = 1;
  return (id)swift_willThrow();
}

void sub_1DCA20C18()
{
  sub_1DC89F6D8();
  uint64_t v3 = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v3;
  swift_retain();
  uint64_t v5 = sub_1DC8A12D0();
  swift_release();
  if (!v1)
  {
    uint64_t v6 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v5;
  }
}

id sub_1DCA20CB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1DCA1F9B8(*(void *)(a1 + 64), *(void *)(a1 + 72), *(_DWORD *)(a1 + 80), *(double *)(a1 + 24));
  if (!v2) {
    *a2 = result;
  }
  return result;
}

id sub_1DCA20CEC()
{
  id result = sub_1DCA20BBC();
  if (!v0)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)sub_1DCA23E60();
    uint64_t v4 = (void *)sub_1DC89DCDC();
    id v6 = sub_1DCB60550(v4, v5);

    return v6;
  }
  return result;
}

void sub_1DCA20D4C()
{
  v21[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *(unsigned int *)(v0 + 80);
  double v3 = *(double *)(v0 + 24) * (double)v2;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v4 = v2 - (uint64_t)v3;
  if (__OFSUB__(v2, (uint64_t)v3))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  double v5 = ceil((double)v2 / (double)v4);
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v6 = *(void *)(v0 + 88);
  if (__OFADD__(v6, (uint64_t)v5))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(v0 + 88) = v6 + (uint64_t)v5;
  if (!v4)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = v2 % v4;
  BOOL v8 = __OFSUB__(v4, v7);
  uint64_t v9 = v4 - v7;
  if (v8)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v4 == -1 && v9 == 0x8000000000000000) {
LABEL_32:
  }
    __break(1u);
  uint64_t v11 = v9 % v4;
  uint64_t v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  id v13 = sub_1DCA20CEC();
  if (!v1)
  {
    id v14 = v13;
    sub_1DCB5CD10(v13, 1);

    id v15 = sub_1DCA20BBC();
    uint64_t v16 = self;
    v21[0] = 0;
    int v17 = sub_1DCB6BD18(v16, v15, v12, (uint64_t)v21);

    if (v17)
    {
      id v18 = v21[0];
      uint64_t v19 = sub_1DCA20CEC();
      sub_1DCB5CD10(v19, 0);
    }
    else
    {
      id v20 = v21[0];
      sub_1DCA2404C();

      swift_willThrow();
    }
  }
}

uint64_t sub_1DCA20F48()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCA20F80()
{
  sub_1DCA20F48();

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA20FB4(void *a1, uint64_t a2, void (*a3)(void))
{
  return sub_1DCA20010(a1, a2, a3);
}

void sub_1DCA20FCC()
{
}

id sub_1DCA20FE4()
{
  return sub_1DCA20CEC();
}

void sub_1DCA20FFC()
{
}

id sub_1DCA21014()
{
  return sub_1DCA20BBC();
}

uint64_t sub_1DCA2102C()
{
  uint64_t v0 = (void *)sub_1DCA18740();
  sub_1DCA1E380();

  return sub_1DCA240F0();
}

uint64_t sub_1DCA2107C()
{
  id v1 = objc_msgSend(v0, sel_impl);
  sub_1DCB88808();
  swift_unknownObjectRelease();
  sub_1DC87E988((uint64_t *)&unk_1EAA9C630);
  swift_dynamicCast();
  return v3;
}

uint64_t sub_1DCA210FC()
{
  return sub_1DCA2107C();
}

uint64_t sub_1DCA21120()
{
  return sub_1DCA2102C();
}

uint64_t sub_1DCA21138(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  sub_1DC8823A0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1DC8823B0(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for _SNClassifySoundRequest()
{
  return self;
}

uint64_t method lookup function for _SNClassifySoundRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _SNClassifySoundRequest);
}

uint64_t type metadata accessor for SNSoundClassifier()
{
  return self;
}

uint64_t sub_1DCA21228(uint64_t a1)
{
  sub_1DC8823A0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1DC8823B0(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA21280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1DC88244C(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 96);
  char v14 = *(unsigned char *)(a2 + 104);
  sub_1DC88245C(v8, v9, v10, v11, v12, v13, v14);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v13;
  *(unsigned char *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCA21344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1DC88244C(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1DC8823A0(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  char v16 = *(unsigned char *)(a2 + 104);
  sub_1DC88245C(v10, v11, v12, v13, v14, v15, v16);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  uint64_t v21 = *(void *)(a1 + 88);
  uint64_t v22 = *(void *)(a1 + 96);
  char v23 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(unsigned char *)(a1 + 104) = v16;
  sub_1DC8823B0(v17, v18, v19, v20, v21, v22, v23);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCA2144C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_1DC8823A0(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 96);
  char v15 = *(unsigned char *)(a1 + 104);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v8;
  sub_1DC8823B0(v9, v10, v11, v12, v13, v14, v15);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCA214F8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 112);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA21538(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SoundClassification.AudioSourceAgnosticRequest()
{
}

uint64_t sub_1DCA215A0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA215DC(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCA2162C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCA216D4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCA2173C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA2177C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SoundClassification.Result()
{
}

void type metadata accessor for SoundClassification()
{
}

void *sub_1DCA217E8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DCA21820(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *sub_1DCA21878(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for S3Path(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S3Path(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SoundClassification.Classification()
{
}

unint64_t sub_1DCA21948()
{
  unint64_t result = qword_1EAAA4D60;
  if (!qword_1EAAA4D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4D60);
  }
  return result;
}

unint64_t sub_1DCA21994(uint64_t a1)
{
  unint64_t result = sub_1DC9BECD8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCA219BC(uint64_t a1)
{
  unint64_t result = sub_1DC9C0110();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCA219E8()
{
  unint64_t result = qword_1EAAA4D68;
  if (!qword_1EAAA4D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4D68);
  }
  return result;
}

unint64_t sub_1DCA21A38()
{
  unint64_t result = qword_1EAAA4D70;
  if (!qword_1EAAA4D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4D70);
  }
  return result;
}

id sub_1DCA21A88(void *a1)
{
  sub_1DC881A8C(a1, a1[3]);
  id v3 = objc_msgSend(v1, sel_initWithImpl_, sub_1DCB89008());
  swift_unknownObjectRelease();
  sub_1DC8818D0((uint64_t)a1);
  return v3;
}

uint64_t sub_1DCA21AF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_1DCA21B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v9 = (void *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1DCAEE710(0, v7, v9);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DCA21CF4((uint64_t)v9, v7, v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      uint64_t v4 = v10;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    sub_1DCAEE710(0, v7, v11);
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DCA21CF4((uint64_t)v11, v7, v4, a2);
    MEMORY[0x1E01A99C0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1DCA21CF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = (unint64_t *)result;
  uint64_t v26 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_20;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_20:
    uint64_t v17 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    sub_1DCA183A0(v18, v19, a4);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      *(unint64_t *)((char *)v25 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_24:
        uint64_t v23 = sub_1DCA22154(v25, a2, v26, a3);
        swift_bridgeObjectRelease();
        return v23;
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1DCA21EC0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1DC87E988(&qword_1EAAA4DD8);
  uint64_t result = sub_1DCB88CF8();
  uint64_t v9 = result;
  long long v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v34) {
        return v9;
      }
      unint64_t v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v34) {
          return v9;
        }
        unint64_t v16 = v33[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v34) {
            return v9;
          }
          unint64_t v16 = v33[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v34) {
              return v9;
            }
            unint64_t v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v34) {
                  return v9;
                }
                unint64_t v16 = v33[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    char v21 = *(void **)(*(void *)(v4 + 56) + 8 * v14);
    sub_1DCB891A8();
    swift_bridgeObjectRetain();
    id v22 = v21;
    sub_1DCB879B8();
    uint64_t result = sub_1DCB891F8();
    uint64_t v23 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) == 0) {
      break;
    }
    unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = (void *)(*(void *)(v9 + 48) + 16 * v26);
    void *v31 = v20;
    v31[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v26) = v22;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_39;
    }
    if (!v5) {
      return v9;
    }
  }
  char v27 = 0;
  unint64_t v28 = (unint64_t)(63 - v23) >> 6;
  while (++v25 != v28 || (v27 & 1) == 0)
  {
    BOOL v29 = v25 == v28;
    if (v25 == v28) {
      unint64_t v25 = 0;
    }
    v27 |= v29;
    uint64_t v30 = *(void *)(v12 + 8 * v25);
    if (v30 != -1)
    {
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DCA22154(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1DC87E988(&qword_1EAAA0248);
  uint64_t result = sub_1DCB88CF8();
  uint64_t v8 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v31) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v31) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v31) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v31) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v31) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    sub_1DCB891A8();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    uint64_t result = sub_1DCB891F8();
    uint64_t v21 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) == 0) {
      break;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    BOOL v29 = (void *)(*(void *)(v8 + 48) + 16 * v24);
    *BOOL v29 = v19;
    v29[1] = v18;
    *(void *)(*(void *)(v8 + 56) + 8 * v24) = v20;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_39;
    }
    if (!v5) {
      return v8;
    }
  }
  char v25 = 0;
  unint64_t v26 = (unint64_t)(63 - v21) >> 6;
  while (++v23 != v26 || (v25 & 1) == 0)
  {
    BOOL v27 = v23 == v26;
    if (v23 == v26) {
      unint64_t v23 = 0;
    }
    v25 |= v27;
    uint64_t v28 = *(void *)(v11 + 8 * v23);
    if (v28 != -1)
    {
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DCA223FC(void *a1)
{
  id v2 = objc_msgSend(a1, sel_predictedProbabilitiesName);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1DCB87938();

  return v3;
}

uint64_t sub_1DCA2246C()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA2247C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCA187B8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DCA224AC()
{
  sub_1DC8823A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_1DC8823B0(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1DCA2251C()
{
  return sub_1DCA1CE04((const void *)(v0 + 16));
}

uint64_t sub_1DCA22538()
{
  sub_1DC8818D0(v0 + 16);
  sub_1DC8823A0(*(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  sub_1DC8823B0(*(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(unsigned char *)(v0 + 160));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA225B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA1CF40((void *)(v1 + 16), v1 + 56, a1);
}

uint64_t sub_1DCA225D0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA22610()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1DCA22648()
{
  unint64_t result = qword_1EAAA4DD0;
  if (!qword_1EAAA4DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4DD0);
  }
  return result;
}

unint64_t sub_1DCA22694()
{
  unint64_t result = qword_1EAAA4DF8;
  if (!qword_1EAAA4DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4DF8);
  }
  return result;
}

uint64_t sub_1DCA226E0()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1DCA22718@<X0>(void *a1@<X8>)
{
  return sub_1DCA20CB0(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DCA22734()
{
  unint64_t result = qword_1EAAA4E08;
  if (!qword_1EAAA4E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E08);
  }
  return result;
}

unint64_t sub_1DCA22780()
{
  unint64_t result = qword_1EAAA4E10;
  if (!qword_1EAAA4E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E10);
  }
  return result;
}

unint64_t sub_1DCA227CC()
{
  unint64_t result = qword_1EAAA4E30;
  if (!qword_1EAAA4E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E30);
  }
  return result;
}

unint64_t sub_1DCA22818()
{
  unint64_t result = qword_1EAAA4E48;
  if (!qword_1EAAA4E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E48);
  }
  return result;
}

unint64_t sub_1DCA22864(uint64_t a1)
{
  unint64_t result = sub_1DC89DD64(a1);
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA0190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1DCA228C8()
{
  unint64_t result = qword_1EAAA4E68;
  if (!qword_1EAAA4E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E68);
  }
  return result;
}

unint64_t sub_1DCA22914()
{
  unint64_t result = qword_1EAAA4E78;
  if (!qword_1EAAA4E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E78);
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundClassification.Classification.CodingKeys()
{
  return &type metadata for SoundClassification.Classification.CodingKeys;
}

ValueMetadata *type metadata accessor for SoundClassification.Result.CodingKeys()
{
  return &type metadata for SoundClassification.Result.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SoundClassification.AudioSourceAgnosticRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA22A54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundClassification.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for SoundClassification.AudioSourceAgnosticRequest.CodingKeys;
}

void type metadata accessor for SNSoundClassifier.DomainError()
{
}

unsigned char *_s13SoundAnalysis19SoundClassificationV6ResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA22B64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for _SNClassifySoundRequest.DomainError()
{
}

void type metadata accessor for SoundClassification.Session()
{
}

uint64_t sub_1DCA22BA8(uint64_t a1)
{
  return sub_1DC8823A0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1DCA22BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1DC88244C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1DCA22C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1DC88244C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1DC8823A0(v6, v7, v8);
  return a1;
}

uint64_t sub_1DCA22C5C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1DC8823A0(v4, v5, v6);
  return a1;
}

void type metadata accessor for ClassifierVariant()
{
}

uint64_t sub_1DCA22CB0(uint64_t a1)
{
  sub_1DC8823A0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1DC8823B0(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA22D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1DC88244C(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 96);
  char v14 = *(unsigned char *)(a2 + 104);
  sub_1DC88245C(v8, v9, v10, v11, v12, v13, v14);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v13;
  *(unsigned char *)(a1 + 104) = v14;
  uint64_t v15 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v15;
  uint64_t v16 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v16;
  uint64_t v17 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v17;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_WORD *)(a1 + 172) = *(_WORD *)(a2 + 172);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCA22E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1DC88244C(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1DC8823A0(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  char v16 = *(unsigned char *)(a2 + 104);
  sub_1DC88245C(v10, v11, v12, v13, v14, v15, v16);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  uint64_t v21 = *(void *)(a1 + 88);
  uint64_t v22 = *(void *)(a1 + 96);
  char v23 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(unsigned char *)(a1 + 104) = v16;
  sub_1DC8823B0(v17, v18, v19, v20, v21, v22, v23);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  *(unsigned char *)(a1 + 171) = *(unsigned char *)(a2 + 171);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(unsigned char *)(a1 + 173) = *(unsigned char *)(a2 + 173);
  uint64_t v24 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v24;
  return a1;
}

void *sub_1DCA22FDC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB9uLL);
}

uint64_t sub_1DCA22FE4(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_1DC8823A0(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 96);
  char v15 = *(unsigned char *)(a1 + 104);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v8;
  sub_1DC8823B0(v9, v10, v11, v12, v13, v14, v15);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  *(unsigned char *)(a1 + 171) = *(unsigned char *)(a2 + 171);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(unsigned char *)(a1 + 173) = *(unsigned char *)(a2 + 173);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  return a1;
}

uint64_t sub_1DCA23100(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 185))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 112);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA23140(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 184) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 185) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 185) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SoundClassification.Request()
{
}

unint64_t sub_1DCA231C0()
{
  unint64_t result = qword_1EAAA4E80;
  if (!qword_1EAAA4E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E80);
  }
  return result;
}

unint64_t sub_1DCA23210()
{
  unint64_t result = qword_1EAAA4E88;
  if (!qword_1EAAA4E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E88);
  }
  return result;
}

unint64_t sub_1DCA23260()
{
  unint64_t result = qword_1EAAA4E90;
  if (!qword_1EAAA4E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E90);
  }
  return result;
}

unint64_t sub_1DCA232B0()
{
  unint64_t result = qword_1EAAA4E98;
  if (!qword_1EAAA4E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4E98);
  }
  return result;
}

unint64_t sub_1DCA23300()
{
  unint64_t result = qword_1EAAA4EA0;
  if (!qword_1EAAA4EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4EA0);
  }
  return result;
}

unint64_t sub_1DCA23350()
{
  unint64_t result = qword_1EAAA4EA8;
  if (!qword_1EAAA4EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4EA8);
  }
  return result;
}

unint64_t sub_1DCA233A0()
{
  unint64_t result = qword_1EAAA4EB0;
  if (!qword_1EAAA4EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4EB0);
  }
  return result;
}

unint64_t sub_1DCA233F0()
{
  unint64_t result = qword_1EAAA4EB8;
  if (!qword_1EAAA4EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4EB8);
  }
  return result;
}

unint64_t sub_1DCA23440()
{
  unint64_t result = qword_1EAAA4EC0;
  if (!qword_1EAAA4EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4EC0);
  }
  return result;
}

unint64_t sub_1DCA23490()
{
  unint64_t result = qword_1EAAA4EC8;
  if (!qword_1EAAA4EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4EC8);
  }
  return result;
}

unint64_t sub_1DCA234E0()
{
  unint64_t result = qword_1EAAA4ED0;
  if (!qword_1EAAA4ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4ED0);
  }
  return result;
}

unint64_t sub_1DCA23530()
{
  unint64_t result = qword_1EAAA4ED8;
  if (!qword_1EAAA4ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4ED8);
  }
  return result;
}

unint64_t sub_1DCA23580()
{
  unint64_t result = qword_1EAAA4EE0;
  if (!qword_1EAAA4EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4EE0);
  }
  return result;
}

unint64_t sub_1DCA235CC()
{
  unint64_t result = qword_1EAAA4EE8;
  if (!qword_1EAAA4EE8)
  {
    sub_1DC8863A8(&qword_1EAAA42C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4EE8);
  }
  return result;
}

unint64_t sub_1DCA23640()
{
  unint64_t result = qword_1EAAA4F08;
  if (!qword_1EAAA4F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4F08);
  }
  return result;
}

unint64_t sub_1DCA2368C()
{
  unint64_t result = qword_1EAAA4F18;
  if (!qword_1EAAA4F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4F18);
  }
  return result;
}

unint64_t sub_1DCA236D8()
{
  unint64_t result = qword_1EAAA4F30;
  if (!qword_1EAAA4F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4F30);
  }
  return result;
}

unint64_t sub_1DCA23724(uint64_t a1)
{
  unint64_t result = sub_1DC89DD64(a1);
  if (!result)
  {
    sub_1DC8863A8(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1DCA23780(uint64_t a1)
{
  unint64_t result = sub_1DC89DD64(a1);
  if (!result)
  {
    type metadata accessor for SNMLModelHashableUncodableWrapper();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1DCA237C0()
{
  unint64_t result = qword_1EAAA4F70;
  if (!qword_1EAAA4F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4F70);
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundClassification.Request.CodingKeys()
{
  return &type metadata for SoundClassification.Request.CodingKeys;
}

unsigned char *_s13SoundAnalysis19SoundClassificationV14ClassificationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA238E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassifierVariant.CodingKeys()
{
  return &type metadata for ClassifierVariant.CodingKeys;
}

ValueMetadata *type metadata accessor for ClassifierVariant.MlModelCodingKeys()
{
  return &type metadata for ClassifierVariant.MlModelCodingKeys;
}

unsigned char *_s13SoundAnalysis17ClassifierVariantO17MlModelCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA239D0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassifierVariant.ClassifierIdentifierCodingKeys()
{
  return &type metadata for ClassifierVariant.ClassifierIdentifierCodingKeys;
}

unint64_t sub_1DCA23A0C()
{
  unint64_t result = qword_1EAAA4F90;
  if (!qword_1EAAA4F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4F90);
  }
  return result;
}

unint64_t sub_1DCA23A5C()
{
  unint64_t result = qword_1EAAA4F98;
  if (!qword_1EAAA4F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4F98);
  }
  return result;
}

unint64_t sub_1DCA23AAC()
{
  unint64_t result = qword_1EAAA4FA0;
  if (!qword_1EAAA4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FA0);
  }
  return result;
}

unint64_t sub_1DCA23AFC()
{
  unint64_t result = qword_1EAAA4FA8;
  if (!qword_1EAAA4FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FA8);
  }
  return result;
}

unint64_t sub_1DCA23B4C()
{
  unint64_t result = qword_1EAAA4FB0;
  if (!qword_1EAAA4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FB0);
  }
  return result;
}

unint64_t sub_1DCA23B9C()
{
  unint64_t result = qword_1EAAA4FB8;
  if (!qword_1EAAA4FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FB8);
  }
  return result;
}

unint64_t sub_1DCA23BEC()
{
  unint64_t result = qword_1EAAA4FC0;
  if (!qword_1EAAA4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FC0);
  }
  return result;
}

unint64_t sub_1DCA23C3C()
{
  unint64_t result = qword_1EAAA4FC8;
  if (!qword_1EAAA4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FC8);
  }
  return result;
}

unint64_t sub_1DCA23C8C()
{
  unint64_t result = qword_1EAAA4FD0;
  if (!qword_1EAAA4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FD0);
  }
  return result;
}

unint64_t sub_1DCA23CDC()
{
  unint64_t result = qword_1EAAA4FD8;
  if (!qword_1EAAA4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FD8);
  }
  return result;
}

unint64_t sub_1DCA23D2C()
{
  unint64_t result = qword_1EAAA4FE0;
  if (!qword_1EAAA4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FE0);
  }
  return result;
}

unint64_t sub_1DCA23D7C()
{
  unint64_t result = qword_1EAAA4FE8;
  if (!qword_1EAAA4FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4FE8);
  }
  return result;
}

uint64_t sub_1DCA23DC8()
{
  return v0;
}

uint64_t sub_1DCA23DF8()
{
  return v0;
}

id sub_1DCA23E10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_1DCA14B2C(0xD000000000000017, a1, 4, 0, a2, (a3 - 32) | 0x8000000000000000);
}

uint64_t sub_1DCA23E38()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCA23E60()
{
  return sub_1DCB87908();
}

uint64_t sub_1DCA23E88()
{
  return v0;
}

uint64_t sub_1DCA23EA4()
{
  return v0;
}

unint64_t sub_1DCA23EE4()
{
  return 0xD000000000000017;
}

uint64_t sub_1DCA23F04(uint64_t a1, uint64_t a2)
{
  sub_1DC88244C(a1, a2, 1);
  sub_1DC88244C(v3, v2, 1);
  return sub_1DC8823A0(v3, v2, 1);
}

uint64_t sub_1DCA23F6C()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DCA23FA0()
{
  sub_1DC88244C(v3, v2, 0);
  return sub_1DC88244C(v1, v0, 0);
}

uint64_t sub_1DCA23FDC()
{
  return v0;
}

uint64_t sub_1DCA2404C()
{
  return sub_1DCB86898();
}

__n128 sub_1DCA24064()
{
  return *(__n128 *)v0;
}

uint64_t sub_1DCA2407C()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA240A8()
{
  return v0;
}

uint64_t sub_1DCA240B4()
{
  return v0;
}

uint64_t sub_1DCA240C8()
{
  return v0 - 208;
}

uint64_t sub_1DCA240DC()
{
  return v0;
}

uint64_t sub_1DCA240F0()
{
  return v0;
}

uint64_t sub_1DCA240FC()
{
  return swift_willThrow();
}

uint64_t sub_1DCA24114()
{
  return v0;
}

void sub_1DCA24128(uint64_t a1, void (*a2)(uint64_t *__return_ptr, void *))
{
  void (*v32)(uint64_t *__return_ptr, void *);

  long long v32 = a2;
  sub_1DCA21AF4(v31, a1);
  uint64_t v3 = v31[0];
  int64_t v4 = v31[3];
  unint64_t v5 = v31[4];
  uint64_t v26 = v31[1];
  int64_t v27 = (unint64_t)(v31[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v5)
    {
      unint64_t v6 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v7 = v6 | (v4 << 6);
      goto LABEL_15;
    }
    int64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_30;
    }
    unint64_t v9 = *(void *)(v26 + 8 * v8);
    if (!v9)
    {
      int64_t v10 = v4 + 2;
      if (v4 + 2 >= v27) {
        goto LABEL_30;
      }
      unint64_t v9 = *(void *)(v26 + 8 * v10);
      if (v9) {
        goto LABEL_13;
      }
      int64_t v10 = v4 + 3;
      if (v4 + 3 >= v27) {
        goto LABEL_30;
      }
      unint64_t v9 = *(void *)(v26 + 8 * v10);
      if (v9) {
        goto LABEL_13;
      }
      int64_t v10 = v4 + 4;
      if (v4 + 4 >= v27) {
        goto LABEL_30;
      }
      unint64_t v9 = *(void *)(v26 + 8 * v10);
      if (v9)
      {
LABEL_13:
        int64_t v8 = v10;
      }
      else
      {
        int64_t v8 = v4 + 5;
        if (v4 + 5 >= v27) {
          goto LABEL_30;
        }
        unint64_t v9 = *(void *)(v26 + 8 * v8);
        if (!v9)
        {
          int64_t v21 = v4 + 6;
          while (v21 < v27)
          {
            unint64_t v9 = *(void *)(v26 + 8 * v21++);
            if (v9)
            {
              int64_t v8 = v21 - 1;
              goto LABEL_14;
            }
          }
LABEL_30:
          swift_release();
LABEL_31:
          swift_release();
          return;
        }
      }
    }
LABEL_14:
    unint64_t v5 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v8 << 6);
    int64_t v4 = v8;
LABEL_15:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v7);
    uint64_t v16 = *v14;
    unint64_t v15 = v14[1];
    v30[0] = v12;
    v30[1] = v13;
    v30[2] = v16;
    v30[3] = v15;
    swift_bridgeObjectRetain();
    sub_1DC8AF450(v16, v15);
    v32(&v28, v30);
    if (v2)
    {
      swift_bridgeObjectRelease();
      sub_1DC881920(v16, v15);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    uint64_t v17 = v29;
    if (v29)
    {
      uint64_t v24 = v28;
      sub_1DC8AF450(v16, v15);
      swift_bridgeObjectRelease();
      sub_1DC881920(v16, v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCA73064();
        uint64_t v25 = v22;
      }
      unint64_t v18 = *(void *)(v25 + 16);
      unint64_t v19 = v18 + 1;
      if (v18 >= *(void *)(v25 + 24) >> 1)
      {
        sub_1DCA73064();
        unint64_t v19 = v18 + 1;
        uint64_t v25 = v23;
      }
      *(void *)(v25 + 16) = v19;
      uint64_t v20 = (void *)(v25 + 32 * v18);
      v20[4] = v24;
      v20[5] = v17;
      v20[6] = v16;
      v20[7] = v15;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1DC881920(v16, v15);
    }
  }
  __break(1u);
}

void *sub_1DCA24410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA5448);
  uint64_t v57 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA5450);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (void *)sub_1DC9735A8();
  if (!v3)
  {
    uint64_t v54 = a1;
    v55 = v11;
    v53 = v8;
    sub_1DCA265B0(result, v13, v14, &v60);
    uint64_t v56 = 0;
    uint64_t v50 = a2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v62;
    uint64_t v65 = v62;
    uint64_t v16 = *(void *)(v62 + 16);
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v6;
    uint64_t v52 = v9;
    if (v16)
    {
      uint64_t v59 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1DC897E6C();
      uint64_t v17 = v59;
      unint64_t v18 = (uint64_t *)(v15 + 56);
      do
      {
        uint64_t v20 = *(v18 - 3);
        uint64_t v19 = *(v18 - 2);
        uint64_t v22 = *(v18 - 1);
        uint64_t v21 = *v18;
        uint64_t v59 = v17;
        unint64_t v24 = *(void *)(v17 + 16);
        unint64_t v23 = *(void *)(v17 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24 >= v23 >> 1)
        {
          sub_1DC897E6C();
          uint64_t v17 = v59;
        }
        v18 += 4;
        *(void *)(v17 + 16) = v24 + 1;
        uint64_t v25 = (void *)(v17 + 32 * v24);
        v25[4] = v20;
        v25[5] = v19;
        v25[6] = v22;
        v25[7] = v21;
        --v16;
      }
      while (v16);
      sub_1DC8CBD50((uint64_t)&v65);
    }
    uint64_t v26 = (uint64_t)v55;
    uint64_t v27 = sub_1DCAA7ED4(v17);
    long long v63 = v61;
    long long v64 = v60;
    uint64_t v28 = swift_allocObject();
    long long v29 = v61;
    *(_OWORD *)(v28 + 16) = v60;
    *(_OWORD *)(v28 + 32) = v29;
    *(void *)(v28 + 48) = v62;
    sub_1DC88CD74((uint64_t)&v65);
    sub_1DC8AF4A8((uint64_t)&v64);
    sub_1DC8AF4A8((uint64_t)&v63);
    sub_1DC87E988(&qword_1EAAA5420);
    sub_1DC87E988(&qword_1EAAA0A20);
    sub_1DC88CF34(&qword_1EAAA5458, &qword_1EAAA5420);
    uint64_t v30 = v53;
    sub_1DCB873D8();
    swift_release();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v54;
    uint64_t v33 = v50;
    *(void *)(v31 + 16) = v54;
    *(void *)(v31 + 24) = v33;
    uint64_t v34 = swift_allocObject();
    v55 = (char *)v27;
    *(void *)(v34 + 16) = v27;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = sub_1DCA36698;
    *(void *)(v35 + 24) = v34;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_1DCA36650;
    *(void *)(v36 + 24) = v35;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1DCA36638;
    *(void *)(v37 + 24) = v31;
    id v38 = (void *)swift_allocObject();
    v38[2] = sub_1DCA33610;
    v38[3] = 0;
    v38[4] = sub_1DCA3408C;
    v38[5] = v37;
    v38[6] = sub_1DCA34074;
    v38[7] = v36;
    v39 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
    *((void *)v39 + 2) = v32;
    *((void *)v39 + 3) = v33;
    *((void *)v39 + 4) = v27;
    uint64_t v40 = v57;
    id v41 = v30;
    v42 = v30;
    uint64_t v43 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v26, v42, v51);
    uint64_t v44 = v52;
    v45 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v26 + *(int *)(v52 + 52));
    void *v45 = sub_1DCA3666C;
    v45[1] = v39;
    id v46 = (void *)(v26 + *(int *)(v44 + 56));
    *id v46 = sub_1DCA340A8;
    v46[1] = v38;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v40 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    v47(v41, v43);
    uint64_t v48 = swift_allocObject();
    long long v49 = v61;
    *(_OWORD *)(v48 + 16) = v60;
    *(_OWORD *)(v48 + 32) = v49;
    *(void *)(v48 + 48) = v62;
    sub_1DC88CF34(&qword_1EAAA5460, &qword_1EAAA5450);
    sub_1DCB874A8();
    swift_release();
    return (void *)sub_1DC88CC04(v26, &qword_1EAAA5450);
  }
  return result;
}

void *sub_1DCA249C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA52E8);
  uint64_t v57 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA52F0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (void *)sub_1DC9735A8();
  if (!v3)
  {
    uint64_t v54 = a1;
    v55 = v11;
    v53 = v8;
    sub_1DCA265B0(result, v13, v14, &v60);
    uint64_t v56 = 0;
    uint64_t v50 = a2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v62;
    uint64_t v65 = v62;
    uint64_t v16 = *(void *)(v62 + 16);
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v6;
    uint64_t v52 = v9;
    if (v16)
    {
      uint64_t v59 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1DC897E6C();
      uint64_t v17 = v59;
      unint64_t v18 = (uint64_t *)(v15 + 56);
      do
      {
        uint64_t v20 = *(v18 - 3);
        uint64_t v19 = *(v18 - 2);
        uint64_t v22 = *(v18 - 1);
        uint64_t v21 = *v18;
        uint64_t v59 = v17;
        unint64_t v24 = *(void *)(v17 + 16);
        unint64_t v23 = *(void *)(v17 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24 >= v23 >> 1)
        {
          sub_1DC897E6C();
          uint64_t v17 = v59;
        }
        v18 += 4;
        *(void *)(v17 + 16) = v24 + 1;
        uint64_t v25 = (void *)(v17 + 32 * v24);
        v25[4] = v20;
        v25[5] = v19;
        v25[6] = v22;
        v25[7] = v21;
        --v16;
      }
      while (v16);
      sub_1DC8CBD50((uint64_t)&v65);
    }
    uint64_t v26 = (uint64_t)v55;
    uint64_t v27 = sub_1DCAA7ED4(v17);
    long long v63 = v61;
    long long v64 = v60;
    uint64_t v28 = swift_allocObject();
    long long v29 = v61;
    *(_OWORD *)(v28 + 16) = v60;
    *(_OWORD *)(v28 + 32) = v29;
    *(void *)(v28 + 48) = v62;
    sub_1DC88CD74((uint64_t)&v65);
    sub_1DC8AF4A8((uint64_t)&v64);
    sub_1DC8AF4A8((uint64_t)&v63);
    sub_1DC87E988(&qword_1EAAA52C8);
    sub_1DC87E988(&qword_1EAAA0A20);
    sub_1DC88CF34(&qword_1EAAA52F8, &qword_1EAAA52C8);
    uint64_t v30 = v53;
    sub_1DCB873D8();
    swift_release();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v54;
    uint64_t v33 = v50;
    *(void *)(v31 + 16) = v54;
    *(void *)(v31 + 24) = v33;
    uint64_t v34 = swift_allocObject();
    v55 = (char *)v27;
    *(void *)(v34 + 16) = v27;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = sub_1DCA36698;
    *(void *)(v35 + 24) = v34;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_1DCA36650;
    *(void *)(v36 + 24) = v35;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1DCA36638;
    *(void *)(v37 + 24) = v31;
    id v38 = (void *)swift_allocObject();
    v38[2] = sub_1DCA33610;
    v38[3] = 0;
    v38[4] = sub_1DCA3408C;
    v38[5] = v37;
    v38[6] = sub_1DCA34074;
    v38[7] = v36;
    v39 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
    *((void *)v39 + 2) = v32;
    *((void *)v39 + 3) = v33;
    *((void *)v39 + 4) = v27;
    uint64_t v40 = v57;
    id v41 = v30;
    v42 = v30;
    uint64_t v43 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v26, v42, v51);
    uint64_t v44 = v52;
    v45 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v26 + *(int *)(v52 + 52));
    void *v45 = sub_1DCA3666C;
    v45[1] = v39;
    id v46 = (void *)(v26 + *(int *)(v44 + 56));
    *id v46 = sub_1DCA340A8;
    v46[1] = v38;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v40 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    v47(v41, v43);
    uint64_t v48 = swift_allocObject();
    long long v49 = v61;
    *(_OWORD *)(v48 + 16) = v60;
    *(_OWORD *)(v48 + 32) = v49;
    *(void *)(v48 + 48) = v62;
    sub_1DC88CF34(&qword_1EAAA5300, &qword_1EAAA52F0);
    sub_1DCB874A8();
    swift_release();
    return (void *)sub_1DC88CC04(v26, &qword_1EAAA52F0);
  }
  return result;
}

void *sub_1DCA24F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA5280);
  uint64_t v57 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988((uint64_t *)&unk_1EAAA5288);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (void *)sub_1DC9735A8();
  if (!v3)
  {
    uint64_t v54 = a1;
    v55 = v11;
    v53 = v8;
    sub_1DCA265B0(result, v13, v14, &v60);
    uint64_t v56 = 0;
    uint64_t v50 = a2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v62;
    uint64_t v65 = v62;
    uint64_t v16 = *(void *)(v62 + 16);
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v6;
    uint64_t v52 = v9;
    if (v16)
    {
      uint64_t v59 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1DC897E6C();
      uint64_t v17 = v59;
      unint64_t v18 = (uint64_t *)(v15 + 56);
      do
      {
        uint64_t v20 = *(v18 - 3);
        uint64_t v19 = *(v18 - 2);
        uint64_t v22 = *(v18 - 1);
        uint64_t v21 = *v18;
        uint64_t v59 = v17;
        unint64_t v24 = *(void *)(v17 + 16);
        unint64_t v23 = *(void *)(v17 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24 >= v23 >> 1)
        {
          sub_1DC897E6C();
          uint64_t v17 = v59;
        }
        v18 += 4;
        *(void *)(v17 + 16) = v24 + 1;
        uint64_t v25 = (void *)(v17 + 32 * v24);
        v25[4] = v20;
        v25[5] = v19;
        v25[6] = v22;
        v25[7] = v21;
        --v16;
      }
      while (v16);
      sub_1DC8CBD50((uint64_t)&v65);
    }
    uint64_t v26 = (uint64_t)v55;
    uint64_t v27 = sub_1DCAA7ED4(v17);
    long long v63 = v61;
    long long v64 = v60;
    uint64_t v28 = swift_allocObject();
    long long v29 = v61;
    *(_OWORD *)(v28 + 16) = v60;
    *(_OWORD *)(v28 + 32) = v29;
    *(void *)(v28 + 48) = v62;
    sub_1DC88CD74((uint64_t)&v65);
    sub_1DC8AF4A8((uint64_t)&v64);
    sub_1DC8AF4A8((uint64_t)&v63);
    sub_1DC87E988(&qword_1EAAA5258);
    sub_1DC87E988(&qword_1EAAA0A20);
    sub_1DC88CF34(&qword_1EAAA5298, &qword_1EAAA5258);
    uint64_t v30 = v53;
    sub_1DCB873D8();
    swift_release();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v54;
    uint64_t v33 = v50;
    *(void *)(v31 + 16) = v54;
    *(void *)(v31 + 24) = v33;
    uint64_t v34 = swift_allocObject();
    v55 = (char *)v27;
    *(void *)(v34 + 16) = v27;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = sub_1DC9586C8;
    *(void *)(v35 + 24) = v34;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_1DC958714;
    *(void *)(v36 + 24) = v35;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1DC958674;
    *(void *)(v37 + 24) = v31;
    id v38 = (void *)swift_allocObject();
    v38[2] = sub_1DCA33610;
    v38[3] = 0;
    v38[4] = sub_1DCA3408C;
    v38[5] = v37;
    v38[6] = sub_1DCA34074;
    v38[7] = v36;
    v39 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
    *((void *)v39 + 2) = v32;
    *((void *)v39 + 3) = v33;
    *((void *)v39 + 4) = v27;
    uint64_t v40 = v57;
    id v41 = v30;
    v42 = v30;
    uint64_t v43 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v26, v42, v51);
    uint64_t v44 = v52;
    v45 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v26 + *(int *)(v52 + 52));
    void *v45 = sub_1DCA340C4;
    v45[1] = v39;
    id v46 = (void *)(v26 + *(int *)(v44 + 56));
    *id v46 = sub_1DCA340A8;
    v46[1] = v38;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v40 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    v47(v41, v43);
    uint64_t v48 = swift_allocObject();
    long long v49 = v61;
    *(_OWORD *)(v48 + 16) = v60;
    *(_OWORD *)(v48 + 32) = v49;
    *(void *)(v48 + 48) = v62;
    sub_1DC88CF34(&qword_1EAAA52A0, (uint64_t *)&unk_1EAAA5288);
    sub_1DCB874A8();
    swift_release();
    return (void *)sub_1DC88CC04(v26, (uint64_t *)&unk_1EAAA5288);
  }
  return result;
}

void sub_1DCA25520()
{
  sub_1DC88D6B0();
  sub_1DCA36C0C(v0, v1);
  sub_1DC87E988(&qword_1EAAA5420);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAA5428);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D970();
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA5430);
  sub_1DC88CF34(&qword_1EAAA5438, &qword_1EAAA5430);
  sub_1DCA36BF0();
  uint64_t v5 = sub_1DCA36910();
  sub_1DCA24410(v5, v6, v7);
  uint64_t v8 = sub_1DCA367F8();
  v9(v8);
  if (!v4)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC88CF34(&qword_1EAAA5440, &qword_1EAAA5428);
    sub_1DCA368EC();
    uint64_t v10 = sub_1DCA368D4();
    v11(v10);
  }
  sub_1DC9E970C();
  sub_1DC88D674();
}

void sub_1DCA256B0()
{
  sub_1DC88D6B0();
  sub_1DCA36C0C(v0, v1);
  sub_1DC87E988(&qword_1EAAA52C8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAA52D0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D970();
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA0F20);
  sub_1DC88CF34(&qword_1EAAA52D8, &qword_1EAAA0F20);
  sub_1DCA36BF0();
  uint64_t v5 = sub_1DCA36910();
  sub_1DCA249C0(v5, v6, v7);
  uint64_t v8 = sub_1DCA367F8();
  v9(v8);
  if (!v4)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC88CF34(&qword_1EAAA52E0, &qword_1EAAA52D0);
    sub_1DCA368EC();
    uint64_t v10 = sub_1DCA368D4();
    v11(v10);
  }
  sub_1DC9E970C();
  sub_1DC88D674();
}

void sub_1DCA25840()
{
  sub_1DC88D6B0();
  sub_1DCA36C0C(v0, v1);
  sub_1DC87E988(&qword_1EAAA5258);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAA5260);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D970();
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA5170);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5268, (uint64_t *)&unk_1EAAA5170);
  sub_1DCA36BF0();
  uint64_t v5 = sub_1DCA36910();
  sub_1DCA24F70(v5, v6, v7);
  uint64_t v8 = sub_1DCA367F8();
  v9(v8);
  if (!v4)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC88CF34(&qword_1EAAA5278, &qword_1EAAA5260);
    sub_1DCA368EC();
    uint64_t v10 = sub_1DCA368D4();
    v11(v10);
  }
  sub_1DC9E970C();
  sub_1DC88D674();
}

void *sub_1DCA259D0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
        JUMPOUT(0x1DCA25AE8);
      }
      swift_retain();
      uint64_t v6 = sub_1DCA3354C((int)v3, v3 >> 32);
      sub_1DC881920(v3, a2);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v6 = sub_1DCA3354C(v7, v8);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      a1 = 0;
      uint64_t v5 = 0;
      uint64_t v4 = 0;
      goto LABEL_7;
    default:
      uint64_t v4 = BYTE6(a2);
      uint64_t v5 = a2 & 0xFFFFFFFFFFFFLL;
LABEL_7:
      uint64_t v6 = sub_1DCA25B3C(a1, v5, v4);
      break;
  }
  return v6;
}

void *sub_1DCA25AF8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    return sub_1DCB0F6AC(a1, (a2 - a1) / 4);
  }
  else {
    return (void *)MEMORY[0x1E4FBC860];
  }
}

void *sub_1DCA25B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  return sub_1DCB0F6AC((uint64_t)&v4, a3 / 4);
}

void sub_1DCA25C0C()
{
  sub_1DC89D9F8();
  sub_1DCA367E8();
  sub_1DC87E988(&qword_1EAAA5038);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCA36760();
  sub_1DCB0467C();
  uint64_t v1 = sub_1DC886810();
  sub_1DCA36A78(v1);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5040, &qword_1EAAA5038);
  sub_1DCA36A60();
  sub_1DCA36A54();
  sub_1DCA3671C();
  sub_1DCA36A3C();
  uint64_t v2 = sub_1DC89D580();
  v3(v2);
  sub_1DC89DA54();
}

void sub_1DCA25CEC()
{
  sub_1DC89D9F8();
  sub_1DCA367E8();
  sub_1DC87E988(&qword_1EAAA5368);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCA36760();
  sub_1DCB0487C();
  uint64_t v1 = sub_1DC886810();
  sub_1DCA36A78(v1);
  sub_1DC88CF34(&qword_1EAAA5370, &qword_1EAAA5368);
  sub_1DCA36A60();
  sub_1DCA36A54();
  sub_1DCA3671C();
  sub_1DCA36A3C();
  uint64_t v2 = sub_1DC89D580();
  v3(v2);
  sub_1DC89DA54();
}

void sub_1DCA25DCC()
{
  sub_1DC89D9F8();
  sub_1DCA367E8();
  sub_1DC87E988(&qword_1EAAA5398);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCA36760();
  sub_1DCB04A7C();
  uint64_t v1 = sub_1DC886810();
  sub_1DCA36A78(v1);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA53A0, &qword_1EAAA5398);
  sub_1DCA36A60();
  sub_1DCA36A54();
  sub_1DCA3671C();
  sub_1DCA36A3C();
  uint64_t v2 = sub_1DC89D580();
  v3(v2);
  sub_1DC89DA54();
}

void sub_1DCA25EAC()
{
  sub_1DC89D9F8();
  sub_1DCA367E8();
  sub_1DC87E988(&qword_1EAAA5468);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCA36760();
  sub_1DCB04C7C();
  uint64_t v1 = sub_1DC886810();
  sub_1DCA36A78(v1);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5470, &qword_1EAAA5468);
  sub_1DCA36A60();
  sub_1DCA36A54();
  sub_1DCA3671C();
  sub_1DCA36A3C();
  uint64_t v2 = sub_1DC89D580();
  v3(v2);
  sub_1DC89DA54();
}

void sub_1DCA25F8C()
{
  sub_1DC89D9F8();
  sub_1DCA367E8();
  sub_1DC87E988(&qword_1EAAA5480);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCA36760();
  sub_1DCB04B7C();
  uint64_t v1 = sub_1DC886810();
  sub_1DCA36A78(v1);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5488, &qword_1EAAA5480);
  sub_1DCA36A60();
  sub_1DCA36A54();
  sub_1DCA3671C();
  sub_1DCA36A3C();
  uint64_t v2 = sub_1DC89D580();
  v3(v2);
  sub_1DC89DA54();
}

void sub_1DCA2606C()
{
  sub_1DC89D9F8();
  sub_1DCA367E8();
  sub_1DC87E988(&qword_1EAAA5408);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCA36760();
  sub_1DCB050E0();
  uint64_t v1 = sub_1DC886810();
  sub_1DCA36A78(v1);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5410, &qword_1EAAA5408);
  sub_1DCA36A60();
  sub_1DCA36A54();
  sub_1DCA3671C();
  sub_1DCA36A3C();
  uint64_t v2 = sub_1DC89D580();
  v3(v2);
  sub_1DC89DA54();
}

uint64_t sub_1DCA2614C()
{
  uint64_t result = (uint64_t)(*(void *(**)(uint64_t *__return_ptr))(v0 + 16))(&v5);
  if (!v1)
  {
    uint64_t result = v5;
    if (v5 <= 0xEFuLL)
    {
      if (v5 >> 6)
      {
        if (v5 >> 6 == 1)
        {
          char v3 = v5 & 0x3F;
          sub_1DC938C14();
          uint64_t result = sub_1DC883884();
          *uint64_t v4 = v3;
        }
        else
        {
          return 0;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_1DCA261E0()
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v0 + 16))(&v5);
  if (!v1)
  {
    if (v5 <= 0xFBuLL)
    {
      if (v5 >> 6)
      {
        if (v5 >> 6 == 1)
        {
          char v3 = v5 & 0x3F;
          sub_1DC938C14();
          uint64_t result = (void *)sub_1DC883884();
          *uint64_t v4 = v3;
        }
        else
        {
          return 0;
        }
      }
      else
      {
        return (void *)(v5 & 1);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_1DCA2627C()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAA5308);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCA36B18();
  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  sub_1DCA36DA0();
  sub_1DCB87218();
  uint64_t v1 = sub_1DC886810();
  *(void *)(v1 + 16) = sub_1DCA338A8;
  *(void *)(v1 + 24) = 0;
  sub_1DC87E988(&qword_1EAAA5310);
  sub_1DC88CF34(&qword_1EAAA5318, &qword_1EAAA5308);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5320, &qword_1EAAA5310);
  sub_1DCA36988();
  swift_release();
  uint64_t v2 = sub_1DC89D580();
  v3(v2);
  sub_1DC89DA54();
}

void sub_1DCA2640C()
{
  sub_1DC89D9F8();
  sub_1DC87E988(&qword_1EAAA5378);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DCA36B18();
  sub_1DC88CF34((unint64_t *)&unk_1EAAA1270, &qword_1EAAA1208);
  sub_1DCA36DA0();
  sub_1DCB87218();
  uint64_t v1 = sub_1DC886810();
  *(void *)(v1 + 16) = sub_1DCA33E1C;
  *(void *)(v1 + 24) = 0;
  sub_1DC87E988(&qword_1EAAA5380);
  sub_1DC88CF34(&qword_1EAAA5388, &qword_1EAAA5378);
  sub_1DC88CF34(&qword_1EAAA5390, &qword_1EAAA5380);
  sub_1DCA36988();
  swift_release();
  uint64_t v2 = sub_1DC89D580();
  v3(v2);
  sub_1DC89DA54();
}

uint64_t sub_1DCA265B0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (a1[2] == 1)
  {
    if (a2[2] == 1)
    {
      uint64_t v4 = a1[5];
      uint64_t v5 = a2[4];
      uint64_t v6 = a2[5];
      *a4 = a1[4];
      a4[1] = v4;
      a4[2] = v5;
      a4[3] = v6;
      a4[4] = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    char v8 = 3;
  }
  else
  {
    char v8 = 2;
  }
  sub_1DCA34104();
  sub_1DC883884();
  *char v9 = v8;
  return swift_willThrow();
}

uint64_t sub_1DCA2664C(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v19);
  if (!v3) {
    return v19;
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1DCB86FE8();
  sub_1DC89F57C(v7, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain();
  id v8 = v3;
  swift_bridgeObjectRetain();
  id v9 = v3;
  uint64_t v10 = sub_1DCB86FC8();
  os_log_type_t v11 = sub_1DCB88468();
  if (os_log_type_enabled(v10, v11))
  {
    sub_1DCA36D7C();
    uint64_t v18 = sub_1DCA36C40();
    *(_DWORD *)uint64_t v4 = 136315394;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(a1, a2, &v18);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2080;
    id v12 = v3;
    sub_1DC87E988(&qword_1EAA9DF60);
    uint64_t v13 = sub_1DCB87988();
    sub_1DC9F8920(v13, v14, &v18);
    sub_1DCB88778();
    swift_bridgeObjectRelease();

    sub_1DCA36D30(&dword_1DC873000, v15, v16, "%serror logging: %s");
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  return swift_willThrow();
}

uint64_t sub_1DCA26878(uint64_t a1, unint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1DCB86FE8();
    sub_1DC89F57C(v8, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain();
    id v9 = v3;
    swift_bridgeObjectRetain();
    id v10 = v3;
    os_log_type_t v11 = sub_1DCB86FC8();
    os_log_type_t v12 = sub_1DCB88468();
    if (os_log_type_enabled(v11, v12))
    {
      sub_1DCA36D7C();
      uint64_t v18 = sub_1DCA36C40();
      *(_DWORD *)uint64_t v4 = 136315394;
      swift_bridgeObjectRetain();
      sub_1DC9F8920(a1, a2, &v18);
      sub_1DCB88778();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v4 + 12) = 2080;
      id v13 = v3;
      sub_1DC87E988(&qword_1EAA9DF60);
      uint64_t v14 = sub_1DCB87988();
      sub_1DC9F8920(v14, v15, &v18);
      sub_1DCB88778();
      swift_bridgeObjectRelease();

      sub_1DCA36D30(&dword_1DC873000, v16, v17, "%serror logging: %s");
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    return swift_willThrow();
  }
  return result;
}

void sub_1DCA26A98()
{
  sub_1DCA36BB8();
  uint64_t v17 = v0;
  uint64_t v18 = v1;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  LOBYTE(v16[0]) = v6 & 1;
  uint64_t v7 = sub_1DCB87988();
  unint64_t v9 = v8;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DCB86FE8();
  sub_1DC89F57C(v10, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  os_log_type_t v11 = sub_1DCB86FC8();
  os_log_type_t v12 = sub_1DCB88488();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v5, v3, v16);
    sub_1DCA369C4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v7, v9, v16);
    sub_1DCA36CE8();
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    sub_1DCA36D10(&dword_1DC873000, v14, v15, "%{public}sreceive value %s");
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_1DC89D71C();
}

void sub_1DCA26C60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  v14[0] = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DCB87988();
  unint64_t v8 = v7;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1DCB86FE8();
  sub_1DC89F57C(v9, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1DCB86FC8();
  os_log_type_t v11 = sub_1DCB88488();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v14[0] = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(a3, a4, v14);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v6, v8, v14);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v10, v11, "%{public}sreceive value %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v13, -1, -1);
    MEMORY[0x1E01A99C0](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_1DCA26E8C()
{
  sub_1DCA36BB8();
  uint64_t v18 = v0;
  uint64_t v19 = v1;
  unint64_t v3 = (void *)v2;
  v17[0] = v2;
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
  id v4 = v3;
  uint64_t v5 = sub_1DCB87988();
  unint64_t v7 = v6;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DCB86FE8();
  sub_1DC89F57C(v8, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DCB86FC8();
  os_log_type_t v10 = sub_1DCB88488();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DCA36D70();
    sub_1DC9F8920(v12, v13, v14);
    sub_1DCA369C4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v5, v7, v17);
    sub_1DCA36CE8();
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    sub_1DCA36D10(&dword_1DC873000, v15, v16, "%{public}sreceive value %s");
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_1DC89D71C();
}

void sub_1DCA27070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  v16[0] = a1;
  v16[1] = a2;
  v16[2] = a3;
  v16[3] = a4;
  swift_bridgeObjectRetain();
  sub_1DC87E988(&qword_1EAA9F320);
  uint64_t v8 = sub_1DCB87988();
  unint64_t v10 = v9;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1DCB86FE8();
  sub_1DC89F57C(v11, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DCB86FC8();
  os_log_type_t v13 = sub_1DCB88488();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v16[0] = v15;
    *(_DWORD *)uint64_t v14 = 136446466;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(a5, a6, v16);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v8, v10, v16);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v12, v13, "%{public}sreceive value %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v15, -1, -1);
    MEMORY[0x1E01A99C0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_1DCA272A8()
{
  sub_1DC88D6B0();
  uint64_t v70 = v1;
  unint64_t v68 = v2;
  uint64_t v69 = v3;
  uint64_t v67 = v4;
  int v6 = v5;
  uint64_t v8 = v7;
  sub_1DC87E988((uint64_t *)&unk_1EAAA4FF0);
  sub_1DC89D4E0();
  uint64_t v61 = v10;
  uint64_t v62 = v9;
  MEMORY[0x1F4188790](v9);
  sub_1DCA36AE0(v11, v54);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0D10);
  sub_1DC89D4E0();
  uint64_t v63 = v13;
  uint64_t v64 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = sub_1DCA36A10(v14, v54);
  sub_1DC89D4E0();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  sub_1DC888120();
  uint64_t v65 = v19;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)&v54 - v22;
  sub_1DCB86BE8();
  uint64_t v75 = 0;
  unint64_t v76 = 0xE000000000000000;
  int v66 = v6;
  sub_1DCB88C08();
  uint64_t v72 = v75;
  unint64_t v74 = v76;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1DCB86FE8();
  uint64_t v25 = sub_1DC89F57C(v24, (uint64_t)qword_1EAAFF810);
  uint64_t v58 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  uint64_t v59 = v17 + 16;
  sub_1DC8E7D10();
  v26();
  swift_bridgeObjectRetain_n();
  uint64_t v60 = v25;
  uint64_t v27 = sub_1DCB86FC8();
  os_log_type_t v28 = sub_1DCB88488();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = sub_1DCA36D7C();
    uint64_t v56 = v8;
    uint64_t v30 = v29;
    uint64_t v55 = swift_slowAlloc();
    uint64_t v75 = v55;
    *(_DWORD *)uint64_t v30 = 136315394;
    unint64_t v31 = v74;
    uint64_t v73 = v17;
    sub_1DC88CBB4();
    uint64_t v32 = sub_1DCB88F98();
    uint64_t v34 = sub_1DC9F8920(v32, v33, &v75);
    sub_1DCA368A0(v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(void))(v73 + 8);
    sub_1DC9A4384();
    v35();
    *(_WORD *)(v30 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v72, v31, &v75);
    uint64_t v15 = (uint64_t)v23;
    unint64_t v23 = v57;
    uint64_t v17 = v73;
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    os_log_type_t v36 = v28;
    uint64_t v37 = v35;
    _os_log_impl(&dword_1DC873000, v27, v36, "Started Creating Sound Recognition Session %s (%s)", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    sub_1DC8E7728();
    uint64_t v8 = v56;
    sub_1DC8E7728();
  }
  else
  {
    uint64_t v37 = *(void (**)(void))(v17 + 8);
    sub_1DC9A4384();
    v37();

    swift_bridgeObjectRelease_n();
  }
  uint64_t v38 = sub_1DCA2E170(v66, (uint64_t)v23, v67, v68, v69, v70);
  if (v0)
  {
    sub_1DC9A4384();
    v37();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = v38;
    uint64_t v70 = 0;
    uint64_t v71 = v37;
    uint64_t v73 = v17;
    uint64_t v40 = (void *)swift_allocObject();
    v40[2] = sub_1DCA2B870;
    v40[3] = 0;
    v40[4] = v39;
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    sub_1DCB87378();
    uint64_t v75 = 0;
    unint64_t v76 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    uint64_t v75 = 0xD000000000000018;
    unint64_t v76 = 0x80000001DCB93490;
    unint64_t v68 = sub_1DC88CBB4();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCA25C0C();
    swift_bridgeObjectRelease();
    sub_1DC88D5C8();
    v41();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0D20, (uint64_t *)&unk_1EAAA0D10);
    uint64_t v42 = sub_1DCB873A8();
    sub_1DC88D5C8();
    v43();
    uint64_t v44 = v58;
    v58(v8, v23, v15);
    *(void *)(v8 + *(int *)(type metadata accessor for SoundRecognition.Session() + 20)) = v42;
    uint64_t v45 = v65;
    v44(v65, v23, v15);
    swift_bridgeObjectRetain();
    uint64_t v69 = v42;
    swift_retain();
    id v46 = sub_1DCB86FC8();
    os_log_type_t v47 = sub_1DCB88488();
    if (os_log_type_enabled(v46, v47))
    {
      sub_1DCA36D7C();
      unint64_t v48 = v74;
      uint64_t v67 = sub_1DCA36C40();
      uint64_t v75 = v67;
      *(_DWORD *)uint64_t v45 = 136315394;
      uint64_t v49 = sub_1DCB88F98();
      uint64_t v51 = sub_1DC9F8920(v49, v50, &v75);
      sub_1DCA368A0(v51);
      swift_bridgeObjectRelease();
      uint64_t v52 = v71;
      ((void (*)(uint64_t, char *))v71)(v45, v23);
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1DC9F8920(v72, v48, &v75);
      sub_1DCB88778();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DC873000, v46, v47, "Finished Creating Sound Recognition Session %s (%s)", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
      swift_release();

      ((void (*)(char *, char *))v52)(v57, v23);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v53 = v71;
      sub_1DC8881AC();
      v53();
      swift_release();
      ((void (*)(char *, uint64_t))v53)(v23, v15);
    }
  }
  sub_1DC9E970C();
  sub_1DC88D674();
}

void sub_1DCA27A48()
{
  sub_1DC88D6B0();
  swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1DCA367A0();
  v2(v1);
  sub_1DCA36DC0();
  v3();
  uint64_t v4 = sub_1DC89D580();
  v5(v4);
  sub_1DC88D674();
}

uint64_t sub_1DCA27B28()
{
  sub_1DCA36D50();
  swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1DCA367A0();
  v2(v1);
  uint64_t v3 = sub_1DCA36C88();
  uint64_t v5 = v4(v3);
  uint64_t v6 = sub_1DC89D580();
  v7(v6);
  return v5;
}

void sub_1DCA27BEC()
{
  sub_1DC88D6B0();
  sub_1DCA36D50();
  swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1DCA367A0();
  v2(v1);
  sub_1DCA36C88();
  sub_1DCA36D94();
  v3();
  sub_1DC89D710();
  v4();
  sub_1DC88D674();
}

void sub_1DCA27CB0()
{
  uint64_t v13 = 0;
  uint64_t v9 = 0x40467A0000;
  sub_1DCA369F0();
  *(_OWORD *)&v12[4] = xmmword_1DCBC0340;
  *(void *)&v12[20] = 0x100000000;
  sub_1DC9230A0();
  sub_1DC9230F0();
  sub_1DC923140();
  sub_1DC8888B4((uint64_t)&v13, (int *)&v9, (uint64_t)&_s28ICACAudioDeviceConfigurationVN, (uint64_t)&v14);
  uint64_t v9 = v14;
  uint64_t v10 = v15;
  uint64_t v11 = v16;
  *(void *)uint64_t v12 = v17;
  v12[8] = v18;
  *(_OWORD *)&v12[12] = v19;
  *(void *)&v12[28] = v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DCA36CC8(WitnessTable, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, *(uint64_t *)v12, *(uint64_t *)&v12[8], *(uint64_t *)&v12[16], *(uint64_t *)&v12[24], *(uint64_t *)&v12[32], v13, v14,
    v15);
}

uint64_t sub_1DCA27DB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC922FD4();
  if (!v1)
  {
    a1[3] = (uint64_t)&_s23ICACAudioDeviceInstanceVN;
    a1[4] = (uint64_t)&off_1F37EB158;
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

void sub_1DCA27E04()
{
  sub_1DCA36CFC();
  sub_1DC9230A0();
  sub_1DC9230F0();
  sub_1DC923140();
  sub_1DCA36DCC();
  sub_1DC90654C(v1, v2, v3, v4, v5);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DC905EF0((uint64_t)v13, v0, WitnessTable, v7, v8, v9, v10, v11, v12, 0, v13[0], v13[1], v13[2], v13[3], v13[4], v13[5], v13[6], v13[7], v13[8],
    v13[9]);
}

void sub_1DCA27EB0()
{
}

void sub_1DCA27EC8()
{
}

uint64_t sub_1DCA27EE0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA27DB8(a1);
}

void sub_1DCA27EF8()
{
}

uint64_t sub_1DCA27FA8()
{
  return sub_1DCA27B28();
}

void sub_1DCA28040()
{
}

uint64_t sub_1DCA280E0(uint64_t a1, uint64_t a2)
{
  if (qword_1EAA9D258 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)algn_1EAAFFA58;
  uint64_t v5 = unk_1EAAFFA68;
  uint64_t v6 = unk_1EAAFFA78;
  sub_1DC95AD94();
  uint64_t v8 = *(void *)(v7 + 56);
  LOBYTE(v7) = *(unsigned char *)(v7 + 64);
  __src[0] = v9;
  __src[1] = v4;
  __src[2] = v10;
  __src[3] = v5;
  __src[4] = v11;
  __src[5] = v6;
  char v21 = v12;
  char v22 = v13;
  char v23 = v14;
  char v24 = v15;
  char v25 = v16;
  char v26 = v17;
  uint64_t v27 = v8;
  char v28 = v7;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1DC93B838(__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v18;
}

uint64_t sub_1DCA28208()
{
  if (qword_1EAA9D258 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void *)algn_1EAAFFA58;
  uint64_t v1 = unk_1EAAFFA68;
  uint64_t v2 = unk_1EAAFFA78;
  sub_1DC95AD94();
  uint64_t v4 = *(void *)(v3 + 56);
  char v31 = *(unsigned char *)(v3 + 64);
  v16[0] = v5;
  v16[1] = v0;
  v16[2] = v6;
  v16[3] = v1;
  uint64_t v16[4] = v7;
  v16[5] = v2;
  char v17 = v8;
  char v18 = v9;
  char v19 = v10;
  char v20 = v11;
  char v21 = v12;
  char v22 = v13;
  uint64_t v23 = v4;
  char v24 = v31;
  uint64_t v25 = 0x40467A0000;
  uint64_t v26 = 0x45F8700042480000;
  uint64_t v27 = 0x38D1B71700000001;
  char v28 = 1;
  long long v29 = xmmword_1DCBC0340;
  uint64_t v30 = 0x100000000;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DC889A2C(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v14;
}

uint64_t sub_1DCA28368@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1EAA9D258 != -1) {
    swift_once();
  }
  memcpy(__dst, &qword_1EAAFFA50, 0x41uLL);
  swift_retain();
  uint64_t v3 = sub_1DC91B018(__dst);
  uint64_t result = swift_release();
  if (!v1)
  {
    uint64_t result = type metadata accessor for SharedBuiltInMicrophone.Instance();
    a1[3] = result;
    a1[4] = (uint64_t)&off_1F37EF080;
    *a1 = v3;
  }
  return result;
}

uint64_t sub_1DCA2842C(uint64_t a1, uint64_t a2)
{
  return sub_1DCA280E0(a1, a2);
}

uint64_t sub_1DCA28444()
{
  return sub_1DCA28208();
}

uint64_t sub_1DCA2845C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA28368(a1);
}

uint64_t sub_1DCA28474()
{
  sub_1DCA36C1C();
  return sub_1DC94AD64(v0, v1);
}

uint64_t sub_1DCA284A0()
{
  return sub_1DC94AEC4();
}

uint64_t sub_1DCA284CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC94B05C(a1);
}

#error "1DCA28588: call analysis failed (funcsize=37)"

void sub_1DCA285A4()
{
  uint64_t v10 = 0x40467A0000;
  sub_1DCA369F0();
  *(_OWORD *)&v13[4] = xmmword_1DCBC0340;
  *(void *)&v13[20] = 0x100000000;
  sub_1DC9F4888();
  sub_1DC9F48D4();
  unint64_t v0 = sub_1DC9F4920();
  sub_1DC8888B4(v0, (int *)&v10, (uint64_t)&type metadata for EmptyAudioSourceConfiguration, (uint64_t)&v13[28]);
  uint64_t v10 = *(void *)&v13[28];
  uint64_t v11 = *(void *)&v13[36];
  uint64_t v12 = *(void *)&v13[44];
  v13[0] = v13[52];
  *(_OWORD *)&v13[4] = v14;
  *(void *)&v13[20] = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DCA36CC8(WitnessTable, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, *(uint64_t *)v13, *(uint64_t *)&v13[8], *(uint64_t *)&v13[16], *(uint64_t *)&v13[24], *(uint64_t *)&v13[32], *(uint64_t *)&v13[40], *(uint64_t *)&v13[48],
    v14);
}

uint64_t sub_1DCA2869C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCACBA4C();
  if (!v1)
  {
    a1[3] = (uint64_t)&type metadata for StaticAudioSourceInstance;
    a1[4] = (uint64_t)&off_1F37F0C78;
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
  }
  return result;
}

uint64_t sub_1DCA286E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4F65707954646162 && a2 == 0xED0000657269576ELL;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x764F726566667562 && a2 == 0xEE00776F6C667265;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x52646570706F7264 && a2 == 0xED0000746C757365;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB96760 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x726F707075736E75 && a2 == 0xEB00000000646574)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_1DCA28970(char a1)
{
  unint64_t result = 0x4F65707954646162;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x764F726566667562;
      break;
    case 2:
      unint64_t result = 0x52646570706F7264;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x726F707075736E75;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DCA28A50()
{
  sub_1DC88D6B0();
  char v24 = v1;
  uint64_t v3 = v2;
  sub_1DC87E988(&qword_1EAAA5568);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC96FA40(v5, v19);
  sub_1DC87E988(&qword_1EAAA5570);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DCA36AC4(v7, v20);
  sub_1DC87E988(&qword_1EAAA5578);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DCA3684C(v9, v21);
  sub_1DC87E988(&qword_1EAAA5580);
  sub_1DC89D4E0();
  uint64_t v22 = v11;
  uint64_t v23 = v10;
  MEMORY[0x1F4188790](v10);
  sub_1DC95AE60();
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA5588);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v13);
  sub_1DC8CD750();
  sub_1DC87E988(&qword_1EAAA5590);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v14);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA34AB8();
  sub_1DCB892B8();
  switch(v24)
  {
    case 1:
      sub_1DCA34BE8();
      sub_1DCB88E88();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0, v23);
      goto LABEL_9;
    case 2:
      sub_1DCA34B9C();
      sub_1DC96FA08();
      goto LABEL_7;
    case 3:
      sub_1DCA34B50();
      sub_1DC96FA08();
      goto LABEL_7;
    case 4:
      sub_1DCA34B04();
      sub_1DC96FA08();
LABEL_7:
      uint64_t v15 = sub_1DCA36A90();
      break;
    default:
      sub_1DCA34C34();
      sub_1DC96FA08();
      uint64_t v15 = sub_1DCA36A90();
      uint64_t v17 = v12;
      break;
  }
  v16(v15, v17);
LABEL_9:
  sub_1DC92F4D8();
  v18();
  sub_1DC88D674();
}

void sub_1DCA28D9C()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  sub_1DC87E988(&qword_1EAAA5508);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA5510);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC96FA40(v6, v29);
  sub_1DC87E988(&qword_1EAAA5518);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC909D74(v8, v30);
  sub_1DC87E988(&qword_1EAAA5520);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA5528);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC8C1FC4();
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA5530);
  sub_1DC89D4E0();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  sub_1DC8CD750();
  uint64_t v32 = (uint64_t)v3;
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA34AB8();
  sub_1DCB89298();
  if (v1) {
    goto LABEL_10;
  }
  uint64_t v15 = sub_1DCB88E58();
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
    uint64_t v23 = v0;
LABEL_9:
    uint64_t v24 = sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v26 = v25;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v26 = &unk_1F37E1170;
    sub_1DCB88D68();
    sub_1DCA36B68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x1E4FBBA70], v24);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v23, v11);
LABEL_10:
    sub_1DC8818D0(v32);
    goto LABEL_11;
  }
  uint64_t v31 = v11;
  uint64_t v17 = v0;
  uint64_t v18 = *(unsigned __int8 *)(v15 + 32);
  sub_1DC9CFE4C(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
  uint64_t v20 = v19;
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    uint64_t v23 = v17;
    uint64_t v11 = v31;
    goto LABEL_9;
  }
  switch(v18)
  {
    case 1:
      sub_1DCA34BE8();
      sub_1DC96F9BC();
      goto LABEL_6;
    case 2:
      sub_1DCA34B9C();
      sub_1DC96F9BC();
      goto LABEL_6;
    case 3:
      sub_1DCA34B50();
      sub_1DC96F9BC();
      goto LABEL_16;
    case 4:
      sub_1DCA34B04();
      sub_1DC96F9BC();
      sub_1DCA36A9C();
      goto LABEL_16;
    default:
      sub_1DCA34C34();
      sub_1DC96F9BC();
LABEL_6:
      sub_1DCA36A9C();
LABEL_16:
      sub_1DC88D5C8();
      v27();
      swift_unknownObjectRelease();
      sub_1DC92F4D8();
      v28();
      sub_1DC8818D0((uint64_t)v3);
      break;
  }
LABEL_11:
  sub_1DC88D674();
}

uint64_t sub_1DCA292F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6576697463616E69 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657669746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA293DC(char a1)
{
  if (a1) {
    return 0x657669746361;
  }
  else {
    return 0x6576697463616E69;
  }
}

void sub_1DCA29410()
{
  sub_1DC88D6B0();
  char v15 = v2;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA53B8);
  sub_1DC89D4E0();
  uint64_t v13 = v6;
  uint64_t v14 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1DC981E40();
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA53C0);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAA53C8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC95AE60();
  sub_1DC881A8C(v4, v4[3]);
  sub_1DCA34274();
  sub_1DCB892B8();
  if (v15)
  {
    sub_1DCA342C0();
    sub_1DCB88E88();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0, v14);
  }
  else
  {
    sub_1DCA3430C();
    sub_1DCB88E88();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v12);
  }
  sub_1DC8881AC();
  v11();
  sub_1DC88D674();
}

void sub_1DCA29604()
{
  sub_1DC88D6B0();
  char v2 = v1;
  sub_1DC87E988(&qword_1EAAA53E8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA53F0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC8CD750();
  sub_1DC87E988((uint64_t *)&unk_1EAAA53F8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D988();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA34274();
  sub_1DCB89298();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v22 = (uint64_t)v2;
  uint64_t v6 = sub_1DCB88E58();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7
    || (char v8 = *(unsigned char *)(v6 + 32),
        sub_1DC9CFE4C(1, v7, v6, v6 + 32, 0, (2 * v7) | 1),
        uint64_t v10 = v9,
        unint64_t v12 = v11,
        swift_bridgeObjectRelease(),
        v10 != v12 >> 1))
  {
    uint64_t v17 = sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v19 = v18;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v19 = &unk_1F37E1380;
    sub_1DCB88D68();
    sub_1DCA36B68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA70], v17);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1DC88D5C8();
    v21(v20);
    char v2 = (void *)v22;
LABEL_8:
    sub_1DC8818D0((uint64_t)v2);
    goto LABEL_9;
  }
  if (v8)
  {
    sub_1DCA342C0();
    sub_1DC971F5C();
  }
  else
  {
    sub_1DCA3430C();
    sub_1DC971F5C();
    sub_1DCA36A90();
  }
  sub_1DC88D5C8();
  v14(v13);
  swift_unknownObjectRelease();
  uint64_t v15 = sub_1DC971F28();
  v16(v15);
  sub_1DC8818D0(v22);
LABEL_9:
  sub_1DC88D674();
}

uint64_t sub_1DCA29980()
{
  return sub_1DCA28508();
}

void sub_1DCA29998()
{
}

uint64_t sub_1DCA299B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA2869C(a1);
}

void sub_1DCA299C8()
{
}

uint64_t sub_1DCA29A78()
{
  return sub_1DCA27B28();
}

void sub_1DCA29B10()
{
}

uint64_t sub_1DCA29BB0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34C34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA29BEC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34C34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA29C28(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34BE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA29C64(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34BE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DCA29CA0()
{
  return sub_1DCA28970(*v0);
}

uint64_t sub_1DCA29CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA286E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA29CD0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34AB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA29D0C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34AB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA29D48(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34B9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA29D84(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34B9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA29DC0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34B50();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA29DFC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34B50();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA29E38(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34B04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA29E74(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34B04();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCA29EB0(unsigned char *a1@<X8>)
{
  sub_1DCA28D9C();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1DCA29EDC()
{
}

uint64_t sub_1DCA29EF8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA342C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA29F34(uint64_t a1)
{
  unint64_t v2 = sub_1DCA342C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA29F70()
{
  return sub_1DCA293DC(*v0);
}

uint64_t sub_1DCA29F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA292F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA29FA0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34274();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA29FDC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34274();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2A018(uint64_t a1)
{
  unint64_t v2 = sub_1DCA3430C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2A054(uint64_t a1)
{
  unint64_t v2 = sub_1DCA3430C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCA2A090(unsigned char *a1@<X8>)
{
  sub_1DCA29604();
  if (!v1) {
    *a1 = v3 & 1;
  }
}

void sub_1DCA2A0C0()
{
}

void sub_1DCA2A0DC()
{
  sub_1DC88D6B0();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F70);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DCA36830(v3, v23);
  sub_1DC87E988((uint64_t *)&unk_1EAAA5340);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DCA36AE0(v5, v24);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F80);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D9B8();
  sub_1DC87E988((uint64_t *)&unk_1EAAA5350);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC8CD750();
  sub_1DCB870B8();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA0C10);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC909D74(v11, v25);
  sub_1DCA36DC0();
  v12();
  if (!v1)
  {
    sub_1DC906B3C();
    swift_release();
    sub_1DC8BAE70();
    v13();
    void *v0 = sub_1DCA2A6DC;
    v0[1] = 0;
    sub_1DC8BAE70();
    v14();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
    sub_1DCB87478();
    sub_1DC95AD00();
    v15();
    sub_1DC92F4D8();
    v16();
    uint64_t v17 = swift_release();
    MEMORY[0x1F4188790](v17);
    sub_1DCA2664C(0xD000000000000021, 0x80000001DCB934E0, (void (*)(uint64_t *__return_ptr))sub_1DCA34208);
    sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
    sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
    sub_1DCB874A8();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DCA36BD0();
    sub_1DCB87138();
    sub_1DC88D5C8();
    v19();
    sub_1DCA36C74();
    sub_1DCB87138();
    sub_1DC88D5C8();
    v20();
    sub_1DCA36BD0();
    sub_1DCB87138();
    sub_1DC88D5C8();
    v21();
    sub_1DC88CF34(&qword_1EAAA0FA0, (uint64_t *)&unk_1EAAA5350);
    sub_1DCB873A8();
    swift_release();
    sub_1DC88D5C8();
    v22();
    sub_1DC88D5C8();
    v18();
  }
  sub_1DC88D674();
}

uint64_t sub_1DCA2A6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  v20[1] = a2;
  v20[2] = a4;
  v20[3] = a1;
  v20[0] = a5;
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA0FA8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)v20 - v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(a3, v11);
  sub_1DC87E988(&qword_1EAAA0C10);
  sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
  sub_1DCB873D8();
  sub_1DC88CF34(&qword_1EAAA0FB0, &qword_1EAAA0FA8);
  sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = v20[5];
  sub_1DCAF2BE8();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
    return swift_release();
  }
  else
  {
    uint64_t v19 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
    uint64_t result = swift_release();
    *(void *)v20[0] = v19;
  }
  return result;
}

void *sub_1DCA2A9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (a1) {
    uint64_t result = sub_1DCB0F6AC(a1, (a2 - a1) / 4);
  }
  else {
    uint64_t result = (void *)MEMORY[0x1E4FBC860];
  }
  *a3 = result;
  return result;
}

uint64_t sub_1DCA2AA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC87E9DC(a1, (uint64_t)v7);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
  if (swift_dynamicCast()) {
    return sub_1DC8BA1CC(v5, a2);
  }
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  sub_1DC88CC04((uint64_t)v5, &qword_1EAAA5360);
  sub_1DCA33844();
  sub_1DC883884();
  *uint64_t v4 = 0;
  return swift_willThrow();
}

void *sub_1DCA2AAF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  void *(*v5)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  void *result;
  uint64_t v8;

  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_1DC881A8C(a1, v3);
  uint64_t v5 = *(void *(**)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void, uint64_t, uint64_t, uint64_t))(v4 + 8);
  uint64_t v6 = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  uint64_t result = v5(&v8, sub_1DCA2A9F4, 0, v6, v3, v4);
  *a2 = v8;
  return result;
}

void sub_1DCA2AB9C(unsigned char *a1@<X8>, uint64_t a2@<X0>)
{
  if (*(void *)(*(void *)a2 + 16)) {
    sub_1DCA36BDC(a1);
  }
  else {
    __break(1u);
  }
}

void sub_1DCA2ABC0(unsigned char *a1@<X8>)
{
}

void sub_1DCA2ABC8()
{
  sub_1DC88D6B0();
  uint64_t v2 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F60);
  sub_1DC89D4E0();
  uint64_t v5 = v3;
  MEMORY[0x1F4188790](v4);
  sub_1DC89D988();
  sub_1DCA2A0DC();
  if (!v0)
  {
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    sub_1DC958114();
    sub_1DCB87538();
    swift_release();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5330, (uint64_t *)&unk_1EAAA0F60);
    sub_1DCB873A8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
  }
  sub_1DC88D674();
}

void sub_1DCA2AD50()
{
  sub_1DC88D6B0();
  LODWORD(v56) = v1;
  uint64_t v3 = v2;
  uint64_t v71 = v4;
  sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v69 = v6;
  uint64_t v70 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1DCA36784(v7, v51);
  sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v66 = v9;
  uint64_t v67 = v8;
  MEMORY[0x1F4188790](v8);
  sub_1DCA36814(v10, v51);
  uint64_t v57 = sub_1DC87E988(&qword_1EAAAA870);
  sub_1DC89D4E0();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  MEMORY[0x1F4188790](v16);
  uint64_t v59 = sub_1DC87E988((uint64_t *)&unk_1EAAA4FF0);
  sub_1DC89D4E0();
  uint64_t v58 = v17;
  MEMORY[0x1F4188790](v18);
  sub_1DC888164((uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC87E988((uint64_t *)&unk_1EAAA0D10);
  sub_1DC89D4E0();
  uint64_t v61 = v21;
  uint64_t v62 = v20;
  MEMORY[0x1F4188790](v20);
  sub_1DC88D550();
  uint64_t v60 = v22;
  sub_1DC87E988((uint64_t *)&unk_1EAAA5000);
  sub_1DC89D4E0();
  uint64_t v64 = v24;
  uint64_t v65 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v72 = sub_1DCA36A10(v25, v51);
  sub_1DC89D4E0();
  uint64_t v63 = v26;
  MEMORY[0x1F4188790](v27);
  sub_1DC88D550();
  uint64_t v29 = v28;
  uint64_t v31 = v3[3];
  uint64_t v30 = v3[4];
  sub_1DC881A8C(v3, v31);
  (*(void (**)(uint64_t))(*(void *)(v30 + 8) + 8))(v31);
  if (!v0)
  {
    uint64_t v55 = 0;
    uint64_t v32 = sub_1DCAC3258();
    swift_release();
    sub_1DC9DEC34((uint64_t)v3, (uint64_t)&v73);
    uint64_t v33 = swift_allocObject();
    *(unsigned char *)(v33 + 16) = v56;
    sub_1DC9DECD0(&v73, (_OWORD *)(v33 + 24));
    uint64_t v52 = v29;
    sub_1DCB86BE8();
    *(void *)&long long v73 = 0;
    *((void *)&v73 + 1) = 0xE000000000000000;
    sub_1DCB88C08();
    uint64_t v51 = *((void *)&v73 + 1);
    uint64_t v56 = v73;
    *(void *)&long long v73 = v32;
    *((void *)&v73 + 1) = sub_1DCA2B554;
    uint64_t v74 = 0;
    uint64_t v75 = sub_1DCA3352C;
    uint64_t v76 = v33;
    uint64_t v77 = 1;
    uint64_t v54 = v32;
    swift_retain();
    uint64_t v53 = v33;
    swift_retain();
    sub_1DC87E988((uint64_t *)&unk_1EAAA6090);
    sub_1DC88CF34(&qword_1EAAA5010, (uint64_t *)&unk_1EAAA6090);
    sub_1DCA36BD0();
    sub_1DCB873D8();
    swift_release();
    swift_release();
    uint64_t v34 = v57;
    sub_1DC8E7D10();
    v35();
    unint64_t v36 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1DCA2B870;
    *(void *)(v37 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v37 + v36, (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v34);
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    sub_1DCB87378();
    sub_1DCA36B44();
    sub_1DC95AD00();
    v38();
    *(void *)&long long v73 = 0;
    *((void *)&v73 + 1) = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    *(void *)&long long v73 = 0xD000000000000018;
    *((void *)&v73 + 1) = 0x80000001DCB93490;
    sub_1DC88CBB4();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCA25C0C();
    swift_bridgeObjectRelease();
    sub_1DCA36A84();
    sub_1DC88D5C8();
    v39();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0D20, (uint64_t *)&unk_1EAAA0D10);
    uint64_t v40 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAA5018);
    swift_allocObject();
    uint64_t v41 = sub_1DC9C55FC(v40);
    sub_1DC88D5C8();
    v42();
    *(void *)&long long v73 = v41;
    sub_1DC8BAE70();
    v43();
    uint64_t v44 = v68;
    *unint64_t v68 = sub_1DCA2B888;
    v44[1] = 0;
    sub_1DC8BAE70();
    v45();
    sub_1DC88CF34(&qword_1EAAA5020, &qword_1EAAA5018);
    sub_1DCB87478();
    sub_1DCA36D64();
    v46();
    sub_1DC89D710();
    v47();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA5028, (uint64_t *)&unk_1EAAA5000);
    uint64_t v48 = sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DCA36A90();
    sub_1DC88D5C8();
    v49();
    uint64_t v50 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v71, v52, v72);
    *(void *)(v50 + *(int *)(type metadata accessor for SoundRecognition.Session() + 20)) = v48;
  }
  sub_1DC88D674();
}

uint64_t sub_1DCA2B554@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAA6120);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DCA261E0();
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  v19[1] = a1;
  uint64_t v20 = v4;
  uint64_t v21 = v3;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  while ((_BYTE)v11 != 0xFF)
  {
    sub_1DC9D5E74(v10, v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DCA73C0C();
      uint64_t v12 = v16;
    }
    unint64_t v13 = *(void *)(v12 + 16);
    if (v13 >= *(void *)(v12 + 24) >> 1)
    {
      sub_1DCA73C0C();
      uint64_t v12 = v17;
    }
    *(void *)(v12 + 16) = v13 + 1;
    uint64_t v14 = v12 + 16 * v13;
    *(void *)(v14 + 32) = v10;
    *(unsigned char *)(v14 + 40) = v11;
    sub_1DC9D5CB4(v10, v11);
    uint64_t v10 = sub_1DCA261E0();
    uint64_t v11 = v15;
  }
  uint64_t v22 = v12;
  sub_1DC87E988((uint64_t *)&unk_1EAAA5050);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA6130, (uint64_t *)&unk_1EAAA5050);
  sub_1DCB87AE8();
  swift_bridgeObjectRelease();
  sub_1DC87E988(&qword_1EAA9DF60);
  uint64_t v18 = v21;
  sub_1DCB87178();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v18);
}

uint64_t sub_1DCA2B7B0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[5];
  uint64_t v8 = sub_1DC881A8C(a2, v6);
  v12[3] = v6;
  v12[4] = v7;
  uint64_t v9 = sub_1DC8EF6AC(v12);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v8, v6);
  uint64_t v10 = sub_1DC978EDC(a1, v12);
  uint64_t result = sub_1DC8818D0((uint64_t)v12);
  if (!v3) {
    *a3 = v10;
  }
  return result;
}

uint64_t sub_1DCA2B870@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA2F498(a1);
}

uint64_t sub_1DCA2B888@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA320B8(2, a1);
}

uint64_t sub_1DCA2B890(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x616C41656B6F6D73 && a2 == 0xEA00000000006D72;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7373657274736964 && a2 == 0xEE00796261426465;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1885693282 && a2 == 0xE400000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x72657A7A7562 && a2 == 0xE600000000000000;
        if (v8 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E726F48726163 && a2 == 0xE700000000000000;
          if (v9 || (sub_1DCB89018() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x776F654D746163 && a2 == 0xE700000000000000;
            if (v10 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6867756F63 && a2 == 0xE500000000000000;
              if (v11 || (sub_1DCB89018() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x6C6C6542676E6964 && a2 == 0xE800000000000000;
                if (v12 || (sub_1DCB89018() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x6B726142676F64 && a2 == 0xE700000000000000;
                  if (v13 || (sub_1DCB89018() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x6C6C6542726F6F64 && a2 == 0xE800000000000000;
                    if (v14 || (sub_1DCB89018() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x636F6E4B726F6F64 && a2 == 0xE90000000000006BLL;
                      if (v15 || (sub_1DCB89018() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x72616C4165726966 && a2 == 0xE90000000000006DLL;
                        if (v16 || (sub_1DCB89018() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          BOOL v17 = a1 == 0x6572427373616C67 && a2 == 0xED0000676E696B61;
                          if (v17 || (sub_1DCB89018() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else
                          {
                            BOOL v18 = a1 == 0x6857656C7474656BLL && a2 == 0xEF676E696C747369;
                            if (v18 || (sub_1DCB89018() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 13;
                            }
                            else
                            {
                              BOOL v19 = a1 == 0x74756F6873 && a2 == 0xE500000000000000;
                              if (v19 || (sub_1DCB89018() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 14;
                              }
                              else
                              {
                                BOOL v20 = a1 == 0x616C416E65726973 && a2 == 0xEA00000000006D72;
                                if (v20 || (sub_1DCB89018() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 15;
                                }
                                else if (a1 == 0x6E75527265746177 && a2 == 0xEC000000676E696ELL)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else
                                {
                                  char v22 = sub_1DCB89018();
                                  swift_bridgeObjectRelease();
                                  if (v22) {
                                    return 16;
                                  }
                                  else {
                                    return 17;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1DCA2BF9C()
{
  return 17;
}

uint64_t sub_1DCA2BFA4(char a1)
{
  uint64_t result = 0x616C41656B6F6D73;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7373657274736964;
      break;
    case 2:
      uint64_t result = 1885693282;
      break;
    case 3:
      uint64_t result = 0x72657A7A7562;
      break;
    case 4:
      uint64_t result = 0x6E726F48726163;
      break;
    case 5:
      uint64_t result = 0x776F654D746163;
      break;
    case 6:
      uint64_t result = 0x6867756F63;
      break;
    case 7:
      unsigned int v3 = 1735289188;
      goto LABEL_11;
    case 8:
      uint64_t result = 0x6B726142676F64;
      break;
    case 9:
      unsigned int v3 = 1919905636;
LABEL_11:
      uint64_t result = v3 | 0x6C6C654200000000;
      break;
    case 10:
      uint64_t result = 0x636F6E4B726F6F64;
      break;
    case 11:
      uint64_t result = 0x72616C4165726966;
      break;
    case 12:
      uint64_t result = 0x6572427373616C67;
      break;
    case 13:
      uint64_t result = 0x6857656C7474656BLL;
      break;
    case 14:
      uint64_t result = 0x74756F6873;
      break;
    case 15:
      uint64_t result = 0x616C416E65726973;
      break;
    case 16:
      uint64_t result = 0x6E75527265746177;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DCA2C1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v21;
  a20 = v22;
  uint64_t v104 = v23;
  uint64_t v25 = v24;
  sub_1DC87E988(&qword_1EAAA56B8);
  sub_1DC89D4E0();
  uint64_t v102 = v27;
  uint64_t v103 = v26;
  MEMORY[0x1F4188790](v26);
  sub_1DCA367CC(v28, v87[0]);
  sub_1DC87E988(&qword_1EAAA56C0);
  sub_1DC89D4E0();
  uint64_t v99 = v30;
  uint64_t v100 = v29;
  MEMORY[0x1F4188790](v29);
  sub_1DCA36784(v31, v87[0]);
  sub_1DC87E988(&qword_1EAAA56C8);
  sub_1DC89D4E0();
  uint64_t v96 = v33;
  uint64_t v97 = v32;
  MEMORY[0x1F4188790](v32);
  sub_1DCA36814(v34, v87[0]);
  sub_1DC87E988(&qword_1EAAA56D0);
  sub_1DC89D4E0();
  uint64_t v93 = v36;
  uint64_t v94 = v35;
  MEMORY[0x1F4188790](v35);
  sub_1DCA36830(v37, v87[0]);
  sub_1DC87E988(&qword_1EAAA56D8);
  sub_1DC89D4E0();
  uint64_t v90 = v39;
  uint64_t v91 = v38;
  MEMORY[0x1F4188790](v38);
  sub_1DCA36868(v40, v87[0]);
  uint64_t v88 = sub_1DC87E988(&qword_1EAAA56E0);
  sub_1DC89D4E0();
  v87[29] = v41;
  MEMORY[0x1F4188790](v42);
  sub_1DC888164((uint64_t)v87 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87[27] = sub_1DC87E988(&qword_1EAAA56E8);
  sub_1DC89D4E0();
  v87[26] = v44;
  MEMORY[0x1F4188790](v45);
  sub_1DC888164((uint64_t)v87 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87[24] = sub_1DC87E988(&qword_1EAAA56F0);
  sub_1DC89D4E0();
  v87[23] = v47;
  MEMORY[0x1F4188790](v48);
  sub_1DC888164((uint64_t)v87 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87[21] = sub_1DC87E988(&qword_1EAAA56F8);
  sub_1DC89D4E0();
  v87[20] = v50;
  MEMORY[0x1F4188790](v51);
  sub_1DC888164((uint64_t)v87 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87[18] = sub_1DC87E988(&qword_1EAAA5700);
  sub_1DC89D4E0();
  v87[17] = v53;
  MEMORY[0x1F4188790](v54);
  sub_1DC888164((uint64_t)v87 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87[15] = sub_1DC87E988(&qword_1EAAA5708);
  sub_1DC89D4E0();
  v87[14] = v56;
  MEMORY[0x1F4188790](v57);
  sub_1DC888164((uint64_t)v87 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87[12] = sub_1DC87E988(&qword_1EAAA5710);
  sub_1DC89D4E0();
  v87[11] = v59;
  MEMORY[0x1F4188790](v60);
  sub_1DC88D550();
  sub_1DC888164(v61);
  v87[9] = sub_1DC87E988(&qword_1EAAA5718);
  sub_1DC89D4E0();
  v87[8] = v62;
  MEMORY[0x1F4188790](v63);
  sub_1DC88D550();
  sub_1DC888164(v64);
  v87[6] = sub_1DC87E988(&qword_1EAAA5720);
  sub_1DC89D4E0();
  v87[5] = v65;
  MEMORY[0x1F4188790](v66);
  sub_1DC888164((uint64_t)v87 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87[3] = sub_1DC87E988(&qword_1EAAA5728);
  sub_1DC89D4E0();
  v87[2] = v68;
  MEMORY[0x1F4188790](v69);
  sub_1DC89D9B8();
  uint64_t v70 = sub_1DC87E988(&qword_1EAAA5730);
  sub_1DC89D4E0();
  v87[1] = v71;
  MEMORY[0x1F4188790](v72);
  sub_1DC89D988();
  uint64_t v73 = sub_1DC87E988(&qword_1EAAA5738);
  sub_1DC89D4E0();
  v87[0] = v74;
  MEMORY[0x1F4188790](v75);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA5740);
  sub_1DC89D4E0();
  uint64_t v107 = v76;
  uint64_t v108 = v77;
  MEMORY[0x1F4188790](v76);
  sub_1DC8CD750();
  sub_1DC881A8C(v25, v25[3]);
  sub_1DCA34C80();
  uint64_t v106 = v20;
  sub_1DCB892B8();
  switch((char)v104)
  {
    case 1:
      sub_1DCA35140();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36750();
      uint64_t v80 = v70;
      break;
    case 2:
      sub_1DCA350F4();
      sub_1DCB88E88();
      sub_1DCA36978();
      sub_1DC88D5C8();
      v81();
      uint64_t v82 = sub_1DC89DCDC();
      goto LABEL_22;
    case 3:
      sub_1DCA350A8();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36750();
      v84 = &v96;
      goto LABEL_13;
    case 4:
      sub_1DCA3505C();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36C5C();
      goto LABEL_13;
    case 5:
      sub_1DCA35010();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36750();
      v84 = &v102;
      goto LABEL_13;
    case 6:
      sub_1DCA34FC4();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36750();
      v84 = &v105;
      goto LABEL_13;
    case 7:
      sub_1DCA34F78();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36750();
      v84 = &v108;
      goto LABEL_13;
    case 8:
      sub_1DCA34F2C();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36B50();
      goto LABEL_13;
    case 9:
      sub_1DCA34EE0();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36750();
      v84 = &a13;
      goto LABEL_13;
    case 10:
      sub_1DCA34E94();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36BA0();
LABEL_13:
      uint64_t v80 = *(v84 - 32);
      break;
    case 11:
      sub_1DCA34E48();
      sub_1DCA366FC();
      uint64_t v78 = sub_1DCA36750();
      uint64_t v80 = v88;
      break;
    case 12:
      sub_1DCA34DFC();
      uint64_t v85 = v89;
      sub_1DCA366FC();
      uint64_t v86 = v90;
      uint64_t v80 = v91;
      goto LABEL_20;
    case 13:
      sub_1DCA34DB0();
      uint64_t v85 = v92;
      sub_1DCA366FC();
      uint64_t v86 = v93;
      uint64_t v80 = v94;
      goto LABEL_20;
    case 14:
      sub_1DCA34D64();
      uint64_t v85 = v95;
      sub_1DCA366FC();
      uint64_t v86 = v96;
      uint64_t v80 = v97;
      goto LABEL_20;
    case 15:
      sub_1DCA34D18();
      uint64_t v85 = v98;
      sub_1DCA366FC();
      uint64_t v86 = v99;
      uint64_t v80 = v100;
      goto LABEL_20;
    case 16:
      sub_1DCA34CCC();
      uint64_t v85 = v101;
      sub_1DCA366FC();
      uint64_t v86 = v102;
      uint64_t v80 = v103;
LABEL_20:
      id v79 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
      uint64_t v78 = v85;
      break;
    default:
      sub_1DCA3518C();
      sub_1DCB88E88();
      uint64_t v78 = sub_1DC8BAD88();
      uint64_t v80 = v73;
      break;
  }
  v79(v78, v80);
  uint64_t v82 = sub_1DCA36964();
LABEL_22:
  v83(v82);
  sub_1DC88D674();
}

void sub_1DCA2CBEC()
{
  sub_1DC88D6B0();
  unsigned int v3 = v2;
  sub_1DC87E988(&qword_1EAAA5598);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA55A0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DCA36AC4(v6, v52);
  sub_1DC87E988(&qword_1EAAA55A8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DCA367CC(v8, v53);
  sub_1DC87E988(&qword_1EAAA55B0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DCA36AFC(v10, v54);
  sub_1DC87E988(&qword_1EAAA55B8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v11);
  sub_1DCA3684C(v12, v55);
  sub_1DC87E988(&qword_1EAAA55C0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v13);
  sub_1DCA36784(v14, v56);
  sub_1DC87E988(&qword_1EAAA55C8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v15);
  sub_1DCA36AA8(v16, v57);
  sub_1DC87E988(&qword_1EAAA55D0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v17);
  sub_1DC9DF580(v18, v58);
  sub_1DC87E988(&qword_1EAAA55D8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v19);
  sub_1DC9DF59C(v20, v59);
  sub_1DC87E988(&qword_1EAAA55E0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v21);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA55E8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v22);
  sub_1DC96FA40(v23, v60);
  sub_1DC87E988(&qword_1EAAA55F0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v24);
  sub_1DCA36814(v25, v61);
  sub_1DC87E988(&qword_1EAAA55F8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v26);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA5600);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v27);
  sub_1DC909D74(v28, v62);
  sub_1DC87E988(&qword_1EAAA5608);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v29);
  sub_1DCA36830(v30, v63);
  sub_1DC87E988(&qword_1EAAA5610);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v31);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAA5618);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v32);
  sub_1DC89D9A0();
  uint64_t v33 = sub_1DC87E988(&qword_1EAAA5620);
  sub_1DC89D4E0();
  uint64_t v35 = v34;
  MEMORY[0x1F4188790](v36);
  sub_1DC89D988();
  uint64_t v65 = (uint64_t)v3;
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA34C80();
  sub_1DCB89298();
  if (v0) {
    goto LABEL_26;
  }
  uint64_t v37 = sub_1DCB88E58();
  uint64_t v38 = *(void *)(v37 + 16);
  if (!v38)
  {
    uint64_t v45 = v1;
    uint64_t v46 = v33;
LABEL_8:
    uint64_t v47 = sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v49 = v48;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v49 = &unk_1F3802390;
    sub_1DCB88D68();
    sub_1DCA36B68();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, *MEMORY[0x1E4FBBA70], v47);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v45, v46);
LABEL_26:
    sub_1DC8818D0(v65);
    goto LABEL_27;
  }
  uint64_t v64 = v1;
  uint64_t v39 = v33;
  uint64_t v40 = *(unsigned __int8 *)(v37 + 32);
  sub_1DC9CFE4C(1, v38, v37, v37 + 32, 0, (2 * v38) | 1);
  uint64_t v42 = v41;
  unint64_t v44 = v43;
  swift_bridgeObjectRelease();
  if (v42 != v44 >> 1)
  {
    uint64_t v45 = v64;
    uint64_t v46 = v39;
    goto LABEL_8;
  }
  switch(v40)
  {
    case 1:
      sub_1DCA35140();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
    case 2:
      sub_1DCA350F4();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
    case 3:
      sub_1DCA350A8();
      sub_1DCA366D8();
      sub_1DCA369B4();
      break;
    case 4:
      sub_1DCA3505C();
      sub_1DCA366B0();
      sub_1DCA36C5C();
      break;
    case 5:
      sub_1DCA35010();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
    case 6:
      sub_1DCA34FC4();
      sub_1DCA366D8();
      sub_1DCA36750();
      break;
    case 7:
      sub_1DCA34F78();
      sub_1DCA366D8();
      sub_1DCA36A9C();
      break;
    case 8:
      sub_1DCA34F2C();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
    case 9:
      sub_1DCA34EE0();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
    case 10:
      sub_1DCA34E94();
      sub_1DCA366B0();
      sub_1DCA36B50();
      break;
    case 11:
      sub_1DCA34E48();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
    case 12:
      sub_1DCA34DFC();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
    case 13:
      sub_1DCA34DB0();
      sub_1DCA366B0();
      sub_1DCA36BA0();
      break;
    case 14:
      sub_1DCA34D64();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
    case 15:
      sub_1DCA34D18();
      sub_1DCA366B0();
      break;
    case 16:
      sub_1DCA34CCC();
      sub_1DCA366B0();
      break;
    default:
      sub_1DCA3518C();
      sub_1DCA366B0();
      sub_1DCA36750();
      break;
  }
  sub_1DC88D5C8();
  v50();
  swift_unknownObjectRelease();
  sub_1DCA36964();
  sub_1DC88D5C8();
  v51();
  sub_1DC8818D0((uint64_t)v3);
LABEL_27:
  sub_1DC9E970C();
  sub_1DC88D674();
}

uint64_t sub_1DCA2D7E4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA350F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2D820(uint64_t a1)
{
  unint64_t v2 = sub_1DCA350F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2D85C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA350A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2D898(uint64_t a1)
{
  unint64_t v2 = sub_1DCA350A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2D8D4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA3505C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2D910(uint64_t a1)
{
  unint64_t v2 = sub_1DCA3505C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2D94C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA35010();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2D988(uint64_t a1)
{
  unint64_t v2 = sub_1DCA35010();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2D9C4()
{
  return sub_1DCA2BFA4(*v0);
}

uint64_t sub_1DCA2D9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA2B890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA2D9F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCA2BF9C();
  *a1 = result;
  return result;
}

uint64_t sub_1DCA2DA1C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34C80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DA58(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34C80();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DA94(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34FC4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DAD0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34FC4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DB0C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34F78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DB48(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34F78();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DB84(uint64_t a1)
{
  unint64_t v2 = sub_1DCA35140();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DBC0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA35140();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DBFC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34F2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DC38(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34F2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DC74(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34EE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DCB0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34EE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DCEC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34E94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DD28(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34E94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DD64(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34E48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DDA0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34E48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DDDC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34DFC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DE18(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34DFC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DE54(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34DB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DE90(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34DB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DECC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34D64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DF08(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34D64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DF44(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34D18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DF80(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34D18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2DFBC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA3518C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2DFF8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA3518C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA2E034(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34CCC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA2E070(uint64_t a1)
{
  unint64_t v2 = sub_1DCA34CCC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCA2E0AC(void *a1@<X8>)
{
  *a1 = &unk_1F37FB6A8;
}

void sub_1DCA2E0BC(unsigned char *a1@<X8>)
{
  sub_1DCA2CBEC();
  if (!v1) {
    *a1 = v3;
  }
}

#error "1DCA2E0F8: call analysis failed (funcsize=7)"

uint64_t sub_1DCA2E104(char a1)
{
  return byte_1DCBCE76A[a1];
}

uint64_t sub_1DCA2E118(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DCA2E104(a1);
  sub_1DCA36CB0();
  return sub_1DCAA8124(v5, v6, a4, v7);
}

uint64_t sub_1DCA2E170(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a4;
  v24[0] = a2;
  v24[1] = a3;
  int v9 = a1;
  uint64_t v10 = *(void *)(a6 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)v24 - v13;
  uint64_t v27 = a6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v16 - 8);
  uint64_t v26 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v24 - v17;
  if (v9 || (sub_1DCA59D44() & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(a5, v10);
    uint64_t v21 = v28;
    sub_1DCA2E118(a1, (uint64_t)v14, AssociatedTypeWitness, AssociatedConformanceWitness);
    if (v21)
    {
      uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
      v12 += 8;
      v22(v14, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
      uint64_t v12 = sub_1DCA2F3FC();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v26);
    }
  }
  else
  {
    uint64_t v19 = v28;
    sub_1DCA2E430();
    if (!v19) {
      return v20;
    }
  }
  return v12;
}

void sub_1DCA2E430()
{
  sub_1DC88D6B0();
  uint64_t v140 = v0;
  uint64_t v142 = v2;
  uint64_t v4 = v3;
  uint64_t v136 = v3;
  uint64_t v137 = v5;
  uint64_t v118 = v6;
  uint64_t v132 = v7;
  uint64_t v130 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v129 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v127 = sub_1DCA36B84((uint64_t)v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC89D4E0();
  uint64_t v126 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC888164((uint64_t)v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v119 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v14);
  sub_1DCA3688C();
  sub_1DC888164(v15);
  uint64_t v16 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  uint64_t v17 = sub_1DC89D568(v16);
  uint64_t v106 = v18;
  MEMORY[0x1F4188790](v17);
  sub_1DCA3688C();
  uint64_t v111 = v19;
  uint64_t v141 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v110 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1DCA3688C();
  sub_1DC888164(v22);
  v105[1] = sub_1DC87E988((uint64_t *)&unk_1EAAA0D30);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v23);
  sub_1DC88D550();
  sub_1DC888164(v24);
  uint64_t v25 = sub_1DC87E988((uint64_t *)&unk_1EAAA5060);
  sub_1DC89D4E0();
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v28);
  sub_1DC95AE60();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0D40);
  sub_1DC89D4E0();
  uint64_t v138 = v30;
  uint64_t v139 = v29;
  MEMORY[0x1F4188790](v29);
  sub_1DCA36868(v31, v105[0]);
  v105[5] = sub_1DC87E988((uint64_t *)&unk_1EAAA5070);
  sub_1DC89D4E0();
  v105[4] = v32;
  MEMORY[0x1F4188790](v33);
  sub_1DC888164((uint64_t)v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105[8] = sub_1DC87E988((uint64_t *)&unk_1EAAA0D50);
  sub_1DC89D4E0();
  v105[6] = v35;
  MEMORY[0x1F4188790](v36);
  sub_1DC88D550();
  sub_1DC888164(v37);
  uint64_t v109 = sub_1DC87E988((uint64_t *)&unk_1EAAA5080);
  sub_1DC89D4E0();
  uint64_t v107 = v38;
  MEMORY[0x1F4188790](v39);
  sub_1DC88D550();
  sub_1DC888164(v40);
  uint64_t v113 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D60);
  sub_1DC89D4E0();
  uint64_t v112 = v41;
  MEMORY[0x1F4188790](v42);
  sub_1DC88D550();
  sub_1DC888164(v43);
  uint64_t v115 = sub_1DC87E988((uint64_t *)&unk_1EAAA5090);
  sub_1DC89D4E0();
  uint64_t v114 = v44;
  MEMORY[0x1F4188790](v45);
  sub_1DC888164((uint64_t)v105 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v117 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D70);
  sub_1DC89D4E0();
  uint64_t v116 = v47;
  MEMORY[0x1F4188790](v48);
  sub_1DC88D550();
  sub_1DC888164(v49);
  uint64_t v121 = sub_1DC87E988((uint64_t *)&unk_1EAAA50A0);
  sub_1DC89D4E0();
  uint64_t v120 = v50;
  MEMORY[0x1F4188790](v51);
  sub_1DC888164((uint64_t)v105 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D80);
  sub_1DC89D4E0();
  uint64_t v122 = v53;
  MEMORY[0x1F4188790](v54);
  sub_1DC888164((uint64_t)v105 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v125 = sub_1DC87E988((uint64_t *)&unk_1EAAA50B0);
  sub_1DC89D4E0();
  uint64_t v124 = v56;
  MEMORY[0x1F4188790](v57);
  sub_1DC88D550();
  sub_1DC888164(v58);
  uint64_t v59 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D90);
  uint64_t v143 = sub_1DCB872A8();
  *(void *)&long long v144 = v143;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DCAB79AC((uint64_t)sub_1DCA2F4D8, 0, (uint64_t)sub_1DCA2F518, 0, v59, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB390], WitnessTable, (uint64_t)&v147);
  long long v134 = v147;
  long long v133 = v148;
  long long v144 = v147;
  long long v145 = v148;
  uint64_t v146 = v149;
  sub_1DC87E988((uint64_t *)&unk_1EAAA50C0);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0DA0);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA50D0, (uint64_t *)&unk_1EAAA50C0);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA0DB0, (uint64_t *)&unk_1EAAA0DA0);
  uint64_t v61 = v135;
  sub_1DCB874F8();
  swift_release();
  swift_release();
  swift_release();
  sub_1DC88CF34((unint64_t *)&unk_1EAAA50E0, (uint64_t *)&unk_1EAAA5060);
  sub_1DCB87538();
  uint64_t v62 = v136;
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v1, v25);
  uint64_t v63 = v140;
  uint64_t v64 = v62;
  sub_1DCA36D94();
  v65();
  if (v63)
  {
    sub_1DC88D5C8();
    v66();
    swift_release();
  }
  else
  {
    uint64_t v67 = *((void *)&v148 + 1);
    uint64_t v68 = v149;
    sub_1DC881A8C(&v147, *((uint64_t *)&v148 + 1));
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    uint64_t v140 = 0;
    v69(v67, v68);
    sub_1DCA36BE4();
    sub_1DCA2627C();
    *(void *)&long long v134 = MEMORY[0x1E4F1A910];
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0DC0, (uint64_t *)&unk_1EAAA0D40);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA50F0, (uint64_t *)&unk_1EAAA0D30);
    sub_1DCB87448();
    sub_1DC88CC04(v61, (uint64_t *)&unk_1EAAA0D30);
    swift_release();
    sub_1DC88D5C8();
    v70();
    sub_1DC8818D0((uint64_t)&v147);
    uint64_t v71 = v110;
    uint64_t v72 = v105[9];
    sub_1DC8E7D10();
    v73();
    uint64_t v74 = v111;
    sub_1DCA33910(v118, v111);
    uint64_t v75 = v119;
    sub_1DC8E7D10();
    v76();
    unint64_t v77 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    unint64_t v78 = (v105[3] + *(unsigned __int8 *)(v106 + 80) + v77) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
    unint64_t v79 = (v108 + *(unsigned __int8 *)(v75 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    uint64_t v80 = swift_allocObject();
    uint64_t v81 = v141;
    uint64_t v82 = v142;
    *(void *)(v80 + 16) = v64;
    *(void *)(v80 + 24) = v82;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v71 + 32))(v80 + v77, v72, v81);
    sub_1DC901EB8(v74, v80 + v78, (uint64_t *)&unk_1EAAA0D00);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v75 + 32))(v80 + v79, v131, v64);
    sub_1DC87E988((uint64_t *)&unk_1EAAA0DD0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5100, (uint64_t *)&unk_1EAAA5070);
    sub_1DCB874A8();
    swift_release();
    sub_1DCA36B34();
    sub_1DC88D5C8();
    v83();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1DCA36BE4();
    uint64_t v84 = sub_1DCA36D70();
    MEMORY[0x1E01A6390](v84);
    sub_1DCA36A9C();
    sub_1DC88D5C8();
    v85();
    swift_retain();
    swift_getWitnessTable();
    sub_1DCA36CB0();
    sub_1DC9F7894(v86, v87, v88, (uint64_t)&unk_1F37E1380, v89, v90);
    swift_release();
    sub_1DC8BAD88();
    sub_1DC88D5C8();
    v91();
    *(void *)&long long v147 = &unk_1F37FB650;
    sub_1DC87E988((uint64_t *)&unk_1EAAA0DF0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5110, (uint64_t *)&unk_1EAAA0D60);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0E00, (uint64_t *)&unk_1EAAA0DF0);
    sub_1DCB874F8();
    sub_1DCA36A84();
    sub_1DC88D5C8();
    v92();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5120, (uint64_t *)&unk_1EAAA5090);
    sub_1DC958114();
    sub_1DCA36BE4();
    sub_1DCB87538();
    sub_1DCA36978();
    sub_1DC88D5C8();
    v93();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5130, (uint64_t *)&unk_1EAAA0D70);
    sub_1DCB873D8();
    sub_1DC8BAD88();
    sub_1DC88D5C8();
    v94();
    *(void *)&long long v147 = 0;
    *((void *)&v147 + 1) = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    *(void *)&long long v147 = 0xD000000000000024;
    *((void *)&v147 + 1) = 0x80000001DCB934B0;
    sub_1DC88CBB4();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB0477C();
    swift_bridgeObjectRelease();
    sub_1DCA36750();
    sub_1DC88D5C8();
    v95();
    sub_1DC8BAE70();
    v96();
    uint64_t v97 = v128;
    *v128 = sub_1DCA2B888;
    v97[1] = 0;
    sub_1DC8BAE70();
    v98();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0E20, (uint64_t *)&unk_1EAAA0D80);
    sub_1DCB87478();
    sub_1DCA36D70();
    sub_1DCA36C34();
    v99();
    sub_1DC95AD00();
    v100();
    sub_1DCA36B34();
    sub_1DC88D5C8();
    v101();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5140, (uint64_t *)&unk_1EAAA50B0);
    uint64_t v102 = v125;
    sub_1DCB873A8();
    swift_release();
    uint64_t v103 = sub_1DCA369B4();
    v104(v103, v102);
  }
  sub_1DC88D674();
}

uint64_t sub_1DCA2F3FC()
{
  sub_1DCA2ABC8();
  if (!v1)
  {
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    uint64_t v0 = sub_1DCB873A8();
    swift_release();
  }
  return v0;
}

uint64_t sub_1DCA2F498@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = os_transaction_create();
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

void sub_1DCA2F4D8(unsigned char *a1@<X8>, uint64_t a2@<X0>, BOOL *a3@<X1>)
{
  BOOL v3 = (*(_WORD *)a2 & 0x100) == 0;
  if (!*a3) {
    BOOL v3 = 0;
  }
  BOOL v4 = (*(_WORD *)a2 & 0x100) == 0;
  if (*a3) {
    BOOL v4 = 1;
  }
  if (*(unsigned char *)(a2 + 2)) {
    BOOL v4 = v3;
  }
  *a3 = v4;
  sub_1DCA36BDC(a1);
}

void sub_1DCA2F518(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1DCA2F520(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  uint64_t v50 = a4;
  uint64_t v47 = a3;
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA0E68);
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v46 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v43 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = sub_1DCB86BF8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v48 = *a1;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1DCB86FE8();
  sub_1DC89F57C(v21, (uint64_t)qword_1EAAFF810);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v49 = a2;
  v22(v20, a2, v17);
  uint64_t v23 = sub_1DCB86FC8();
  os_log_type_t v24 = sub_1DCB88488();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v44 = v16;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v42 = a7;
    uint64_t v27 = v26;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v54 = v40;
    *(_DWORD *)uint64_t v27 = 136446466;
    uint64_t v41 = v7;
    sub_1DC88CBB4();
    uint64_t v28 = sub_1DCB88F98();
    uint64_t v53 = sub_1DC9F8920(v28, v29, &v54);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    *(_WORD *)(v27 + 12) = 2082;
    int v30 = v48;
    if (v48) {
      uint64_t v31 = 0x7020646E6F636573;
    }
    else {
      uint64_t v31 = 0x6170207473726966;
    }
    if (v48) {
      unint64_t v32 = 0xEB00000000737361;
    }
    else {
      unint64_t v32 = 0xEA00000000007373;
    }
    uint64_t v53 = sub_1DC9F8920(v31, v32, &v54);
    uint64_t v8 = v41;
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v23, v24, "[Smoke Alarm Sound Recognition %{public}s] State Transition, entering: %{public}s", (uint8_t *)v27, 0x16u);
    uint64_t v33 = v40;
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v33, -1, -1);
    uint64_t v34 = v27;
    a7 = v42;
    MEMORY[0x1E01A99C0](v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);

    int v30 = v48;
  }
  if (v30)
  {
    uint64_t v35 = sub_1DCA2FA68(v49, v47, v50, v51, v52);
    if (v8) {
      return;
    }
    uint64_t v54 = v35;
    sub_1DC87E988(&qword_1EAAA0E70);
    sub_1DC87E988(&qword_1EAAA0E78);
    sub_1DC88CF34(&qword_1EAAA0E80, &qword_1EAAA0E70);
    uint64_t v36 = v44;
  }
  else
  {
    sub_1DCA30D78();
    if (v8) {
      return;
    }
    uint64_t v54 = v37;
    sub_1DC87E988(&qword_1EAAA0E70);
    sub_1DC87E988(&qword_1EAAA0E78);
    sub_1DC88CF34(&qword_1EAAA0E80, &qword_1EAAA0E70);
    uint64_t v36 = v43;
  }
  sub_1DCB873D8();
  swift_release();
  uint64_t v38 = v46;
  swift_getWitnessTable();
  uint64_t v39 = sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v38);
  *a7 = v39;
}

uint64_t sub_1DCA2FA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v145 = a2;
  uint64_t v161 = a1;
  uint64_t v155 = sub_1DC87E988((uint64_t *)&unk_1EAAA0E90);
  sub_1DC89D4E0();
  uint64_t v154 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC888164((uint64_t)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v153 = sub_1DC87E988((uint64_t *)&unk_1EAAA5150);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v11);
  v156 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v149 = v13;
  MEMORY[0x1F4188790](v14);
  sub_1DCA3688C();
  sub_1DC888164(v15);
  uint64_t v16 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  uint64_t v17 = sub_1DC89D568(v16);
  uint64_t v143 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v144 = v19;
  sub_1DC888164((uint64_t)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v147 = sub_1DC87E988((uint64_t *)&unk_1EAAA0EA0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v20);
  sub_1DC888164((uint64_t)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v152 = sub_1DC87E988((uint64_t *)&unk_1EAAA5160);
  sub_1DC89D4E0();
  uint64_t v151 = v22;
  MEMORY[0x1F4188790](v23);
  sub_1DC88D550();
  sub_1DC888164(v24);
  uint64_t v164 = sub_1DC87E988((uint64_t *)&unk_1EAAA0EB0);
  sub_1DC89D4E0();
  uint64_t v163 = v25;
  MEMORY[0x1F4188790](v26);
  sub_1DC888164((uint64_t)&v140 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = sub_1DC87E988((uint64_t *)&unk_1EAAA5170);
  sub_1DC89D4E0();
  uint64_t v169 = v28;
  MEMORY[0x1F4188790](v29);
  sub_1DC888164((uint64_t)&v140 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v162 = sub_1DC87E988(&qword_1EAAA0EC0);
  sub_1DC89D4E0();
  uint64_t v150 = v31;
  MEMORY[0x1F4188790](v32);
  sub_1DC888164((uint64_t)&v140 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v167 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v174 = v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v166 = sub_1DCA36B84((uint64_t)&v140 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC89D4E0();
  uint64_t v173 = v37;
  MEMORY[0x1F4188790](v38);
  sub_1DC888164((uint64_t)&v140 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = sub_1DC87E988(&qword_1EAAA0C10);
  sub_1DC89D4E0();
  uint64_t v171 = v40;
  MEMORY[0x1F4188790](v41);
  sub_1DC888164((uint64_t)&v140 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC87E988((uint64_t *)&unk_1EAAA0EC8);
  sub_1DC89D4E0();
  uint64_t v175 = v43;
  uint64_t v176 = v44;
  uint64_t v46 = *(void *)(v45 + 64);
  MEMORY[0x1F4188790](v43);
  sub_1DC888164((uint64_t)&v140 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v47);
  v177 = (char *)&v140 - v48;
  uint64_t v49 = *(void *)(a5 + 8);
  swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  v188 = v50;
  MEMORY[0x1F4188790](v51);
  sub_1DC888120();
  v186 = v52;
  MEMORY[0x1F4188790](v53);
  uint64_t v180 = a5;
  sub_1DCA36B44();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v179 = *(void (**)(char *, uint64_t))(AssociatedConformanceWitness + 8);
  swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  uint64_t v182 = v55;
  uint64_t v183 = v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  MEMORY[0x1F4188790](v57);
  v181 = (char *)&v140 - v58;
  uint64_t v59 = *(void (**)(uint64_t))(v49 + 16);
  v184 = (void (*)(unint64_t, uint64_t, uint64_t))a3;
  uint64_t v185 = a4;
  v178 = v59;
  ((void (*)(uint64_t, uint64_t))v59)(a4, v49);
  sub_1DCA36CB0();
  uint64_t v60 = v187;
  sub_1DCA2E118(v61, v62, v63, AssociatedConformanceWitness);
  if (v60)
  {
    sub_1DC88D5C8();
    v64();
    return a3;
  }
  uint64_t v141 = v46;
  uint64_t v65 = v188[1];
  uint64_t v187 = 0;
  ++v188;
  uint64_t v142 = v65;
  sub_1DC9A4384();
  v66();
  uint64_t v67 = v182;
  uint64_t v68 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v68 + 8))(0x622E306C65646F6DLL, 0xED0000656C646E75, v67, v68);
  uint64_t v69 = v183;
  sub_1DCA36B44();
  v179 = v70;
  sub_1DC95AD00();
  v71();
  uint64_t v72 = sub_1DCA36D70();
  v178(v72);
  a3 = v180;
  sub_1DCA36CB0();
  swift_getAssociatedConformanceWitness();
  uint64_t v73 = v187;
  sub_1DC9683DC();
  if (v73)
  {
    sub_1DC9A4384();
    v76();
    sub_1DC92F4D8();
    v77();
    return a3;
  }
  uint64_t v78 = v74;
  v178 = v75;
  sub_1DC9A4384();
  v79();
  sub_1DCA36D94();
  v80();
  uint64_t v140 = v78;
  uint64_t v183 = v69 + 8;
  uint64_t v81 = sub_1DCA36928();
  uint64_t v83 = v82(v81);
  sub_1DC881A8C(&v190, v191);
  uint64_t v84 = sub_1DCA36C9C();
  uint64_t v189 = v85(v84);
  *(void *)(swift_allocObject() + 16) = v83;
  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA0ED8);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  sub_1DCB873D8();
  swift_release();
  swift_release();
  uint64_t v86 = sub_1DCA36928();
  uint64_t v88 = v87(v86);
  sub_1DC881A8C(&v190, v191);
  uint64_t v89 = sub_1DCA36C9C();
  unint64_t v91 = v90(v89);
  if ((v91 & 0x8000000000000000) == 0)
  {
    int v92 = v91;
    if (!HIDWORD(v91))
    {
      double v93 = (double)v88;
      sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA25B8);
      id v94 = sub_1DC8D7948(v92);
      uint64_t v95 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153A0]), sel_initWithCommonFormat_sampleRate_interleaved_channelLayout_, 1, 0, v94, v93);

      sub_1DCA36DC0();
      v96();
      v188 = v95;
      uint64_t v97 = sub_1DC906B3C();
      swift_release();
      uint64_t v189 = v97;
      sub_1DC8BAE70();
      v98();
      uint64_t v99 = v165;
      void *v165 = sub_1DCA2A6DC;
      v99[1] = 0;
      sub_1DC8BAE70();
      v100();
      sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
      uint64_t v187 = 0;
      sub_1DCB87478();
      sub_1DC8881AC();
      v101();
      sub_1DC92F4D8();
      v102();
      swift_release();
      sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
      sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
      uint64_t v103 = v168;
      sub_1DCA36BD0();
      sub_1DCB873D8();
      a3 = v103;
      uint64_t v104 = v187;
      sub_1DCA25840();
      if (v104)
      {

        swift_release();
        swift_release();
        sub_1DC88D5C8();
        v105();
        sub_1DCA36A90();
        sub_1DC88D5C8();
        v106();
        sub_1DC88D5C8();
        v107();
        v179(v181, v182);
      }
      else
      {
        sub_1DC88D5C8();
        v109();
        sub_1DC87E988((uint64_t *)&unk_1EAAA5190);
        sub_1DC88CF34((unint64_t *)&unk_1EAAA0EF0, &qword_1EAAA0EC0);
        sub_1DCB873D8();
        sub_1DCA33910(v145, v158);
        uint64_t v110 = v149;
        uint64_t v111 = *(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 16);
        uint64_t v185 = v149 + 16;
        v186 = v111;
        uint64_t v112 = v148;
        v111(v148, v161, v160);
        uint64_t v113 = v176;
        sub_1DC8E7D10();
        v114();
        unint64_t v115 = (*(unsigned __int8 *)(v143 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
        uint64_t v116 = *(unsigned __int8 *)(v110 + 80);
        uint64_t v187 = 0;
        unint64_t v117 = (v144 + v116 + v115) & ~v116;
        unint64_t v118 = (v159 + *(unsigned __int8 *)(v113 + 80) + v117) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
        unint64_t v119 = (v141 + v118 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v120 = swift_allocObject();
        sub_1DC901EB8(v158, v120 + v115, (uint64_t *)&unk_1EAAA0D00);
        v184 = *(void (**)(unint64_t, uint64_t, uint64_t))(v110 + 32);
        uint64_t v121 = v160;
        v184(v120 + v117, v112, v160);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v113 + 32))(v120 + v118, v157, v175);
        id v122 = v188;
        *(void *)(v120 + v119) = v188;
        uint64_t v123 = v146;
        sub_1DC8E7D10();
        v124();
        *uint64_t v123 = sub_1DC95835C;
        v123[1] = (void (*)())v120;
        v186(v112, v161, v121);
        uint64_t v125 = swift_allocObject();
        v184(v125 + ((v116 + 16) & ~v116), v112, v121);
        sub_1DC88CF34((unint64_t *)&unk_1EAAA51A0, (uint64_t *)&unk_1EAAA0EA0);
        v188 = v122;
        sub_1DCB873D8();
        swift_release();
        sub_1DC88CC04((uint64_t)v123, (uint64_t *)&unk_1EAAA0EA0);
        sub_1DCB870D8();
        uint64_t v126 = swift_allocObject();
        *(void *)(v126 + 16) = sub_1DC88D45C;
        *(void *)(v126 + 24) = 0;
        *(_OWORD *)(v126 + 32) = xmmword_1DCBC0360;
        uint64_t v127 = swift_allocObject();
        *(void *)(v127 + 16) = 0;
        *(unsigned char *)(v127 + 24) = 1;
        uint64_t v128 = (uint64_t)v156;
        sub_1DC8E7D10();
        v129();
        uint64_t v130 = v153;
        uint64_t v131 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v128 + *(int *)(v153 + 52));
        *uint64_t v131 = sub_1DC9584E0;
        v131[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v127;
        uint64_t v132 = (void *)(v128 + *(int *)(v130 + 56));
        *uint64_t v132 = sub_1DCA33F1C;
        v132[1] = v126;
        sub_1DC95AD00();
        v133();
        sub_1DC88CF34(&qword_1EAAA0F00, (uint64_t *)&unk_1EAAA5150);
        a3 = sub_1DCB873A8();

        swift_release();
        swift_release();
        sub_1DC88CC04(v128, (uint64_t *)&unk_1EAAA5150);
        sub_1DCA36978();
        sub_1DC88D5C8();
        v134();
        sub_1DCA36A84();
        sub_1DC88D5C8();
        v135();
        sub_1DCA36A84();
        sub_1DC88D5C8();
        v136();
        sub_1DCA36A84();
        sub_1DC88D5C8();
        v137();
        sub_1DC88D5C8();
        v138();
        sub_1DC9A4384();
        v139();
      }
      sub_1DC8818D0((uint64_t)&v190);
      return a3;
    }
  }
  sub_1DC8AF148();
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

unsigned __int8 *sub_1DCA30D50@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  if (result[1]) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  *(_WORD *)a2 = v2 | *result;
  *(unsigned char *)(a2 + 2) = 1;
  return result;
}

void sub_1DCA30D78()
{
  sub_1DC88D6B0();
  uint64_t v121 = v0;
  uint64_t v2 = v1;
  BOOL v4 = v3;
  v91[3] = v5;
  uint64_t v93 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v92 = v6;
  MEMORY[0x1F4188790](v7);
  v91[2] = v8;
  sub_1DC888164((uint64_t)v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v95 = sub_1DC87E988(&qword_1EAAA0F08);
  sub_1DC89D4E0();
  uint64_t v94 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1DC888164((uint64_t)v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = sub_1DC87E988(&qword_1EAAA0F10);
  sub_1DC89D4E0();
  uint64_t v98 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC888164((uint64_t)v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v97 = sub_1DC87E988(&qword_1EAAA0F18);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v15);
  sub_1DC888164((uint64_t)v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = sub_1DC87E988(&qword_1EAAA0F20);
  sub_1DC89D4E0();
  uint64_t v102 = v17;
  MEMORY[0x1F4188790](v18);
  sub_1DC9DF580(v19, v91[0]);
  uint64_t v101 = sub_1DC87E988(&qword_1EAAA0F28);
  sub_1DC89D4E0();
  uint64_t v96 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1DCA36AA8(v22, v91[0]);
  sub_1DC87E988(&qword_1EAAA0F30);
  sub_1DC89D4E0();
  uint64_t v113 = v24;
  uint64_t v114 = v23;
  MEMORY[0x1F4188790](v23);
  sub_1DC9DF59C(v25, v91[0]);
  uint64_t v108 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v107 = v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v116 = sub_1DCA36B84((uint64_t)v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC89D4E0();
  uint64_t v105 = v29;
  MEMORY[0x1F4188790](v30);
  sub_1DC88D550();
  sub_1DC888164(v31);
  uint64_t v111 = sub_1DC87E988(&qword_1EAAA0C10);
  sub_1DC89D4E0();
  uint64_t v109 = v32;
  MEMORY[0x1F4188790](v33);
  sub_1DCA367CC(v34, v91[0]);
  uint64_t v112 = sub_1DC87E988(&qword_1EAAA0F38);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v35);
  sub_1DC88D550();
  uint64_t v110 = v36;
  uint64_t v115 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F40);
  sub_1DC89D4E0();
  uint64_t v104 = v37;
  MEMORY[0x1F4188790](v38);
  sub_1DCA36784(v39, v91[0]);
  uint64_t v40 = *(void *)(v2 + 8);
  id v122 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  uint64_t v123 = v42;
  MEMORY[0x1F4188790](v43);
  sub_1DC888120();
  uint64_t v120 = v44;
  MEMORY[0x1F4188790](v45);
  uint64_t v118 = v2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v47 = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  uint64_t v119 = v48;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)v91 - v50;
  uint64_t v52 = *(void (**)(char *, uint64_t))(v40 + 16);
  uint64_t v117 = v40;
  v52(v122, v40);
  uint64_t v53 = v121;
  sub_1DCAA8124(32, AssociatedTypeWitness, AssociatedConformanceWitness, (uint64_t)v51);
  if (!v53)
  {
    v91[1] = v47;
    uint64_t v55 = *(void (**)(void))(v123 + 8);
    v123 += 8;
    sub_1DC9A4384();
    v55();
    v52(v122, v117);
    uint64_t v56 = v118;
    sub_1DCA36B44();
    swift_getAssociatedConformanceWitness();
    sub_1DC9683DC();
    uint64_t v121 = v57;
    uint64_t v59 = v58;
    sub_1DC9A4384();
    v55();
    (*(void (**)(char *, uint64_t))(v56 + 48))(v122, v56);
    id v122 = v51;
    sub_1DC888A00();
    swift_release();
    sub_1DC8BAE70();
    v60();
    char v61 = v106;
    *uint64_t v106 = sub_1DCA2A6DC;
    v61[1] = 0;
    sub_1DCA36BE4();
    sub_1DC8BAE70();
    v62();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
    uint64_t v120 = v59;
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
    sub_1DCB87478();
    sub_1DCA36D64();
    v63();
    sub_1DC95AD00();
    v64();
    swift_release();
    uint64_t v65 = sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
    sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
    sub_1DCB873D8();
    uint64_t v66 = v110;
    sub_1DC8E7D10();
    v67();
    uint64_t v68 = v112;
    *(void *)(v66 + *(int *)(v112 + 60)) = 8;
    *(void *)(v66 + *(int *)(v68 + 64)) = 8;
    *(void *)(v66 + *(int *)(v68 + 68)) = v65;
    sub_1DCA36C34();
    v69();
    sub_1DC88D5C8();
    v70();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D40, &qword_1EAAA0F38);
    sub_1DCB873D8();
    uint64_t v71 = sub_1DC89DCDC();
    sub_1DC88CC04(v71, v72);
    sub_1DC87E988((uint64_t *)&unk_1EAAA0EE0);
    sub_1DCA36BD0();
    sub_1DCB870D8();
    sub_1DCA256B0();
    uint64_t v123 = 0;
    sub_1DC88D5C8();
    v73();
    uint64_t v74 = v92;
    uint64_t v75 = v91[4];
    uint64_t v76 = v93;
    sub_1DC8E7D10();
    v77();
    unint64_t v78 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    uint64_t v79 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v74 + 32))(v79 + v78, v75, v76);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA0F50, &qword_1EAAA0F28);
    sub_1DCB874A8();
    swift_release();
    sub_1DCB87138();
    sub_1DCA36750();
    sub_1DC88D5C8();
    v80();
    uint64_t v81 = (void *)swift_allocObject();
    v81[2] = sub_1DC89D474;
    v81[3] = 0;
    v81[4] = 0;
    v81[5] = 0;
    uint64_t v82 = swift_allocObject();
    *(void *)(v82 + 16) = 0;
    *(unsigned char *)(v82 + 24) = 0;
    sub_1DCA36BE4();
    uint64_t v83 = v99;
    sub_1DC8E7D10();
    v84();
    uint64_t v85 = v97;
    uint64_t v86 = (void *)(v83 + *(int *)(v97 + 52));
    void *v86 = sub_1DC95A970;
    v86[1] = v82;
    uint64_t v87 = (void *)(v83 + *(int *)(v85 + 56));
    *uint64_t v87 = sub_1DCA365C8;
    v87[1] = v81;
    sub_1DCA36D64();
    v88();
    sub_1DC88CF34(&qword_1EAAA52C0, &qword_1EAAA0F18);
    sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DC88CC04(v83, &qword_1EAAA0F18);
    sub_1DCA369B4();
    sub_1DC88D5C8();
    v89();
    sub_1DCA36A84();
    sub_1DC88D5C8();
    v90();
  }
  sub_1DC88D5C8();
  v54();
  sub_1DC88D674();
}

unsigned __int8 *sub_1DCA31A68@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  if (result[1]) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  *(_WORD *)a2 = v2 | *result;
  *(unsigned char *)(a2 + 2) = 0;
  return result;
}

uint64_t sub_1DCA31A8C@<X0>(__int16 *a1@<X0>, char *a2@<X8>)
{
  __int16 v3 = *a1;
  int v4 = *((unsigned __int8 *)a1 + 2);
  uint64_t result = sub_1DCB87298();
  char v6 = v3 & 1;
  if (!v4) {
    char v6 = 2;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1DCA31AF4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)result;
  uint64_t v4 = *(void *)(*(void *)result + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      uint64_t v8 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v6 + 16);
      if (__OFADD__(v9, v8)) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(void *)(v6 + 24) >> 1)
      {
        sub_1DCA72BE4();
        uint64_t v6 = v10;
      }
      if (*(void *)(v7 + 16))
      {
        uint64_t v11 = *(void *)(v6 + 16);
        if ((*(void *)(v6 + 24) >> 1) - v11 < v8) {
          goto LABEL_24;
        }
        uint64_t v12 = (void *)(v6 + 4 * v11 + 32);
        if (v7 + 32 < (unint64_t)v12 + 4 * v8 && (unint64_t)v12 < v7 + 32 + 4 * v8) {
          goto LABEL_26;
        }
        memcpy(v12, (const void *)(v7 + 32), 4 * v8);
        if (v8)
        {
          uint64_t v14 = *(void *)(v6 + 16);
          BOOL v15 = __OFADD__(v14, v8);
          uint64_t v16 = v14 + v8;
          if (v15) {
            goto LABEL_25;
          }
          *(void *)(v6 + 16) = v16;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4 == ++v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    sub_1DC8AF148();
    uint64_t result = sub_1DCB88D08();
    __break(1u);
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_21:
    *a2 = v6;
  }
  return result;
}

uint64_t *sub_1DCA31C98@<X0>(uint64_t *result@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v3 = *result;
  a2[3] = (uint64_t *)MEMORY[0x1E4F277C0];
  a2[4] = (uint64_t *)&off_1F37DF2D0;
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 >> 61)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t *)sub_1DC9E0FCC(v3 + 32, v3 + 32 + 4 * v4);
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1DCA31CF0(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v5 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC981E40();
  unint64_t v9 = sub_1DCA31FE8(*a1);
  if ((v9 & 0x100000000) != 0)
  {
    sub_1DCA33844();
    sub_1DC883884();
    *uint64_t v20 = 3;
    swift_willThrow();
  }
  else
  {
    float v10 = *(float *)&v9;
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    float v11 = v10;
    uint64_t v12 = sub_1DCB86FE8();
    sub_1DC89F57C(v12, (uint64_t)qword_1EAAFF810);
    sub_1DC8E7D10();
    v13();
    uint64_t v14 = sub_1DCB86FC8();
    os_log_type_t v15 = sub_1DCB88458();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      sub_1DC88CBB4();
      uint64_t v17 = sub_1DCB88F98();
      sub_1DC9F8920(v17, v18, &v21);
      sub_1DCB88778();
      swift_bridgeObjectRelease();
      sub_1DC89D710();
      v19();
      *(_WORD *)(v16 + 12) = 1026;
      sub_1DCB88778();
      _os_log_impl(&dword_1DC873000, v14, v15, "[Smoke Alarm Sound Recognition %{public}s] First pass result received. detected: (%{BOOL,public}d)", (uint8_t *)v16, 0x12u);
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
    }

    *a2 = v11 > 0.75;
  }
}

uint64_t sub_1DCA31FA4(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 0;
  }
  uint64_t result = a1[4];
  uint64_t v4 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v5 = a1 + 5;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if (result <= v7) {
        uint64_t result = v6;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

unint64_t sub_1DCA31FE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      uint64_t v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v2 < v5) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_1DCA32040@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *a1;
  long long v8 = *(_OWORD *)(a1 + 1);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DC985F10((uint64_t)&v7, a2, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v5;
  return result;
}

uint64_t sub_1DCA320B8@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  sub_1DCA33844();
  uint64_t result = swift_allocError();
  *a2 = result;
  *uint64_t v5 = a1;
  return result;
}

uint64_t sub_1DCA32100@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  a2[3] = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  a2[4] = &off_1F37F48B0;
  *a2 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t *sub_1DCA32154@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  if (*(void *)(*result + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    int v3 = *(_DWORD *)(v2 + 36);
    *(unsigned char *)a2 = *(float *)(v2 + 32) > 0.5;
    *(_DWORD *)(a2 + 4) = v3;
  }
  return result;
}

void sub_1DCA32184()
{
  sub_1DC89D9F8();
  uint64_t v48 = v1;
  uint64_t v49 = v2;
  v46[12] = v4;
  unint64_t v47 = v3;
  uint64_t v54 = v5;
  uint64_t v55 = v6;
  v46[2] = sub_1DC87E988(&qword_1EAAA51B0);
  sub_1DC89D4E0();
  v46[1] = v7;
  MEMORY[0x1F4188790](v8);
  sub_1DCA36784(v9, v46[0]);
  v46[6] = sub_1DC87E988(&qword_1EAAA51B8);
  sub_1DC89D4E0();
  v46[5] = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC888164((uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC87E988(&qword_1EAAA51C0);
  sub_1DC89D4E0();
  v46[8] = v14;
  v46[9] = v13;
  MEMORY[0x1F4188790](v13);
  sub_1DC888164((uint64_t)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC87E988(&qword_1EAAA51C8);
  sub_1DC89D4E0();
  v46[10] = v17;
  v46[11] = v16;
  MEMORY[0x1F4188790](v16);
  sub_1DCA36868(v18, v46[0]);
  sub_1DC87E988(&qword_1EAAA51D0);
  sub_1DC89D4E0();
  uint64_t v52 = v20;
  uint64_t v53 = v19;
  MEMORY[0x1F4188790](v19);
  sub_1DCA367CC(v21, v46[0]);
  uint64_t v22 = type metadata accessor for SNUltronUtils.UltronReportTemplate(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v23);
  sub_1DCA36AFC(v24, v46[0]);
  uint64_t v25 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  MEMORY[0x1F4188790](v25 - 8);
  sub_1DC89D988();
  uint64_t v26 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v27);
  sub_1DCA3684C(v28, v46[0]);
  sub_1DC87E988(&qword_1EAAA51D8);
  sub_1DC89D4E0();
  uint64_t v30 = v29;
  uint64_t v32 = MEMORY[0x1F4188790](v31);
  MEMORY[0x1F4188790](v32);
  unint64_t v56 = MEMORY[0x1E4FBC860];
  sub_1DC87E988(&qword_1EAAA51E0);
  sub_1DC88CF34(&qword_1EAAA51E8, &qword_1EAAA51E0);
  sub_1DCB87AE8();
  sub_1DCB87178();
  uint64_t v33 = *(void (**)(void))(v30 + 8);
  sub_1DC8881AC();
  v33();
  sub_1DC88CF34(&qword_1EAAA51F0, &qword_1EAAA51D8);
  uint64_t v34 = sub_1DCB873A8();
  sub_1DC8881AC();
  v33();
  sub_1DCA33910(v54, v0);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v26) == 1)
  {
    sub_1DC88CC04(v0, (uint64_t *)&unk_1EAAA0D00);
  }
  else
  {
    uint64_t v35 = v50;
    sub_1DCA33F48(v0, v50);
    uint64_t v36 = v51;
    sub_1DCA33FAC(v35, v51);
    sub_1DCB86B88();
    unint64_t v56 = 0;
    unint64_t v57 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v56 = 0xD00000000000001BLL;
    unint64_t v57 = 0x80000001DCB96710;
    sub_1DCB86BF8();
    sub_1DC88CBB4();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v37 = v57;
    uint64_t v38 = (unint64_t *)(v36 + *(int *)(v22 + 24));
    *uint64_t v38 = v56;
    v38[1] = v37;
    unint64_t v56 = v47;
    sub_1DC87E988(&qword_1EAAA51F8);
    type metadata accessor for SNDetectionResult();
    sub_1DC88CF34(&qword_1EAAA5200, &qword_1EAAA51F8);
    sub_1DCB873D8();
    sub_1DCAEA038();
    sub_1DC88CF34(&qword_1EAAA5208, &qword_1EAAA51B0);
    uint64_t v39 = sub_1DCB873A8();
    sub_1DCA36B34();
    sub_1DC88D5C8();
    v40();
    unint64_t v56 = v39;
    sub_1DC87E988((uint64_t *)&unk_1EAAA5210);
    sub_1DC87E988(&qword_1EAA9E480);
    sub_1DC88CF34(&qword_1EAAA5220, (uint64_t *)&unk_1EAAA5210);
    sub_1DC88CF34(&qword_1EAAA5228, &qword_1EAA9E480);
    sub_1DCA36C74();
    sub_1DCB87438();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA5230, &qword_1EAAA51B8);
    sub_1DCB87488();
    sub_1DC88D5C8();
    v41();
    sub_1DC88CF34(&qword_1EAAA5238, &qword_1EAAA51C0);
    sub_1DCB873D8();
    sub_1DC88D5C8();
    v42();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5240, &qword_1EAAA51C8);
    uint64_t v43 = sub_1DCB873A8();
    swift_release();
    sub_1DC88D5C8();
    v44();
    sub_1DC88D5C8();
    v45();
    sub_1DCA34010(v36, (void (*)(void))type metadata accessor for SNUltronUtils.UltronReportTemplate);
    sub_1DCA34010(v35, (void (*)(void))type metadata accessor for SNUltronUtils.UltronReportingPlan);
    uint64_t v34 = v43;
  }
  uint64_t *v55 = v34;
  sub_1DC89DA54();
}

id sub_1DCA329C4@<X0>(float *a1@<X0>, void *a2@<X8>)
{
  char v3 = *(unsigned char *)a1;
  float v4 = a1[1];
  type metadata accessor for SNDetectionResult();
  uint64_t v5 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  v7[0] = *MEMORY[0x1E4F1FA20];
  v7[1] = *(void *)(MEMORY[0x1E4F1FA20] + 8);
  long long v8 = *(_OWORD *)(MEMORY[0x1E4F1FA20] + 16);
  uint64_t v9 = *(void *)(MEMORY[0x1E4F1FA20] + 32);
  uint64_t v10 = v5;
  double v11 = v4;
  uint64_t v12 = 0x6C4120656B6F6D53;
  unint64_t v13 = 0xEB000000006D7261;
  char v14 = v3;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  id result = sub_1DCACD0EC((uint64_t)v7);
  *a2 = result;
  return result;
}

uint64_t sub_1DCA32A7C()
{
  return sub_1DCB87AE8();
}

void sub_1DCA32B04()
{
}

void sub_1DCA32B50()
{
}

void sub_1DCA32B64()
{
  sub_1DCA36BB8();
  uint64_t v22 = v1;
  uint64_t v23 = v2;
  float v4 = v3;
  float v6 = v5;
  uint64_t v7 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC89D970();
  char v11 = *v4;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DCB86FE8();
  sub_1DC89F57C(v12, (uint64_t)qword_1EAAFF810);
  sub_1DC8E7D10();
  v13();
  char v14 = sub_1DCB86FC8();
  os_log_type_t v15 = sub_1DCB88458();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v20 = v6;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446722;
    sub_1DC88CBB4();
    uint64_t v17 = sub_1DCB88F98();
    sub_1DC9F8920(v17, v18, &v21);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    sub_1DC8881AC();
    v19();
    *(_WORD *)(v16 + 12) = 1026;
    sub_1DCB88778();
    *(_WORD *)(v16 + 18) = 2050;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v14, v15, "[Smoke Alarm Sound Recognition %{public}s] Second pass result received. detected: (%{BOOL,public}d); confidence: %{public}f",
      (uint8_t *)v16,
      0x1Cu);
    swift_arrayDestroy();
    sub_1DC8E7728();
    float v6 = v20;
    sub_1DC8E7728();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v7);
  }

  *float v6 = v11;
}

unint64_t sub_1DCA32DD8(uint64_t a1)
{
  unint64_t result = sub_1DC9BFC20();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCA32E00(uint64_t a1)
{
  unint64_t result = sub_1DC9BFBD4();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1DCA32E28(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DCA32E64(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

double sub_1DCA32EA0()
{
  uint64_t v0 = sub_1DCB87938();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DCB87938();
  uint64_t v5 = v4;
  uint64_t v6 = MGGetProductType();
  sub_1DC983D28(v6, v10);
  sub_1DC901EB8((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1EAA9E950);
  if (v14)
  {
    char v7 = v13[0];
    sub_1DC8CBC38(v10);
    sub_1DC9836F8(v7, (uint64_t)v11);
    uint64_t v8 = v12[2];
    sub_1DC901EB8((uint64_t)v12, (uint64_t)v15, (uint64_t *)&unk_1EAAA4140);
    sub_1DC8CBCC4((uint64_t)v15);
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
  }
  qword_1EAAFF9C0 = v0;
  *(void *)algn_1EAAFF9C8 = v2;
  qword_1EAAFF9D0 = v3;
  unk_1EAAFF9D8 = v5;
  qword_1EAAFF9E0 = 0;
  unk_1EAAFF9E8 = v8;
  *(void *)&double result = 16843008;
  dword_1EAAFF9F0 = 16843008;
  word_1EAAFF9F4 = 0;
  qword_1EAAFF9F8 = 0;
  byte_1EAAFFA00 = 1;
  return result;
}

uint64_t sub_1DCA32FB0()
{
  if (qword_1EAA9D248 != -1) {
    swift_once();
  }
  qword_1EAAFFA08 = qword_1EAAFF9C0;
  unk_1EAAFFA10 = *(void *)algn_1EAAFF9C8;
  qword_1EAAFFA18 = qword_1EAAFF9D0;
  unk_1EAAFFA20 = unk_1EAAFF9D8;
  qword_1EAAFFA28 = qword_1EAAFF9E0;
  unk_1EAAFFA30 = unk_1EAAFF9E8;
  dword_1EAAFFA38 = dword_1EAAFF9F0;
  word_1EAAFFA3C = word_1EAAFF9F4;
  qword_1EAAFFA40 = qword_1EAAFF9F8;
  byte_1EAAFFA48 = byte_1EAAFFA00;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA33084()
{
  if (qword_1EAA9D250 != -1) {
    swift_once();
  }
  uint64_t v0 = unk_1EAAFFA10;
  uint64_t v1 = unk_1EAAFFA20;
  sub_1DC95AD94();
  uint64_t v3 = *(void *)(v2 + 56);
  LOBYTE(v2) = *(unsigned char *)(v2 + 64);
  qword_1EAAFFA50 = v4;
  *(void *)algn_1EAAFFA58 = v0;
  qword_1EAAFFA60 = v5;
  unk_1EAAFFA68 = v1;
  qword_1EAAFFA70 = v7;
  unk_1EAAFFA78 = v6;
  byte_1EAAFFA80 = v8;
  byte_1EAAFFA81 = v9;
  byte_1EAAFFA82 = v10;
  byte_1EAAFFA83 = v11;
  byte_1EAAFFA84 = v12;
  byte_1EAAFFA85 = v13;
  qword_1EAAFFA88 = v3;
  byte_1EAAFFA90 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void *sub_1DCA33144(uint64_t a1, void *a2, void *(*a3)(uint64_t *__return_ptr, uint64_t *), uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *), uint64_t a6, void (*a7)(void **, uint64_t *, uint64_t *))
{
  uint64_t v16 = a1;
  double result = a3(&v15, &v16);
  if (!v7)
  {
    a5(&v14, &v15);
    a7(&v13, &v12, &v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double result = v13;
    *a2 = v12;
  }
  return result;
}

uint64_t sub_1DCA3322C(uint64_t a1, uint64_t a2)
{
  sub_1DC87E988(&qword_1EAAA52A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBBCDA0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 48; i += 8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCB184D0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1DCAE82C8(v5);
  swift_bridgeObjectRelease();
  sub_1DCAF2578();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1DC9377CC();
  return v8;
}

uint64_t sub_1DCA33344(uint64_t a1, void (*a2)(uint64_t *__return_ptr, void *))
{
  swift_retain();
  sub_1DCA24128(a1, a2);
  if (!v2)
  {
    sub_1DCAF2578();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DCA333CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_1DC9637DC(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1DCA33430(char a1, uint64_t *a2, uint64_t (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v9 = a1 & 1;
  char v16 = a1 & 1;
  uint64_t v10 = *a2;
  int v11 = *((unsigned __int8 *)a2 + 8);
  uint64_t result = a3(&v16);
  if (v11 == (result & 1))
  {
    *a2 = 0;
    goto LABEL_11;
  }
  uint64_t v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v11) {
      uint64_t v14 = a5;
    }
    else {
      uint64_t v14 = a6;
    }
    if (v14 < v13)
    {
      *a2 = 0;
      *((unsigned char *)a2 + 8) = v11 ^ 1;
      if ((v11 & 1) == 0)
      {
LABEL_8:
        int v15 = 0;
        return v15 | v9;
      }
LABEL_12:
      int v15 = 256;
      return v15 | v9;
    }
    *a2 = v13;
LABEL_11:
    *((unsigned char *)a2 + 8) = v11;
    if (v11) {
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA334F4()
{
  sub_1DC8818D0(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_1DCA3352C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA2B7B0((void *)*(unsigned __int8 *)(v1 + 16), (void *)(v1 + 24), a1);
}

void *sub_1DCA3354C(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)sub_1DCB867D8();
  uint64_t v5 = (uint64_t)result;
  if (result)
  {
    uint64_t result = (void *)sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - (void)result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_1DCB867F8();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v5 + v9;
  if (v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  return sub_1DCA25AF8(v5, v11);
}

uint64_t sub_1DCA335D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1DCA333CC(*a1, a1[1], a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_1DCA33610(uint64_t a1)
{
  uint64_t v3 = sub_1DCA36CBC(a1);
  uint64_t result = sub_1DCA3322C(v3, *v4);
  if (!v2) {
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_1DCA33640(uint64_t *a1, void *a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t result = a4(*a3);
  if (!v4)
  {
    *a2 = v8;
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DCA33688(uint64_t a1)
{
  uint64_t v3 = sub_1DCA36CBC(a1);
  uint64_t result = v4(v3);
  if (!v2) {
    *uint64_t v1 = result;
  }
  return result;
}

void *sub_1DCA336BC(uint64_t a1)
{
  void *(*v5)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v6;
  void (*v7)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v8;
  void (*v9)(void **, uint64_t *, uint64_t *);
  void *result;

  uint64_t v3 = sub_1DCA36CBC(a1);
  uint64_t result = sub_1DCA33144(v3, v4, v5, v6, v7, v8, v9);
  if (!v2) {
    *uint64_t v1 = result;
  }
  return result;
}

void sub_1DCA336E8()
{
}

uint64_t sub_1DCA3370C()
{
  sub_1DC87E988(&qword_1EAAAA870);
  sub_1DC89D4E0();
  swift_release();
  sub_1DC92F4D8();
  v0();

  return swift_deallocObject();
}

void sub_1DCA337B0(void *a1@<X8>)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAAA870);
  sub_1DC8E77E0(v2);
  sub_1DCB06070();
  *a1 = v3;
}

uint64_t type metadata accessor for SoundRecognition.Session()
{
  uint64_t result = qword_1EAAA5498;
  if (!qword_1EAAA5498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1DCA33844()
{
  unint64_t result = qword_1EAAA5030;
  if (!qword_1EAAA5030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5030);
  }
  return result;
}

void sub_1DCA33890()
{
}

uint64_t sub_1DCA33898()
{
  return sub_1DC88D2B4();
}

uint64_t sub_1DCA338A8()
{
  return sub_1DCB12B84();
}

void sub_1DCA338B8()
{
}

uint64_t sub_1DCA338D0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA33910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCA33978()
{
  sub_1DCA36BB8();
  sub_1DCB86BF8();
  sub_1DC89D4E0();
  unint64_t v3 = ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
     + *(void *)(v2 + 64);
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  sub_1DC89D568(v4);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1DCA36C34();
  v7();
  uint64_t v8 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0 + v6, 1, v8))
  {
    sub_1DCB86A18();
    sub_1DC88819C();
    sub_1DC88D5C8();
    v9();
    swift_bridgeObjectRelease();
  }
  sub_1DCA36D64();
  v10();
  sub_1DC89DCDC();
  sub_1DC89D71C();
  return swift_deallocObject();
}

void sub_1DCA33B20(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = sub_1DCB86BF8();
  sub_1DC89D568(v7);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = v9 + *(void *)(v10 + 64);
  uint64_t v12 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  sub_1DC89D568(v12);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  sub_1DCA2F520(a1, v2 + v9, v2 + v17, v2+ ((v17 + *(void *)(v16 + 64) + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), v5, v6, a2);
}

uint64_t sub_1DCA33C28()
{
  return sub_1DC88389C();
}

uint64_t sub_1DCA33C34()
{
  uint64_t v1 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  sub_1DC89D568(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v18 = *(void *)(v4 + 64);
  sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = *(void *)(v7 + 64);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0EC8);
  sub_1DC89D4E0();
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0 + v3, 1, v12))
  {
    sub_1DCB86A18();
    sub_1DC88819C();
    sub_1DC88D5C8();
    v13();
    swift_bridgeObjectRelease();
  }
  sub_1DC95AD00();
  v14();
  sub_1DC89D710();
  v15();

  sub_1DC89DCDC();

  return swift_deallocObject();
}

void sub_1DCA33DF4()
{
}

void sub_1DCA33E20(uint64_t *a1, uint64_t a2, unint64_t a3)
{
}

uint64_t sub_1DCA33E34(uint64_t a1)
{
  uint64_t v2 = sub_1DCA36CBC(a1);
  uint64_t result = sub_1DC945908(v2);
  *uint64_t v1 = result;
  return result;
}

void *sub_1DCA33E5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DCA259D0(*(void *)a1, *(void *)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1DCA33E8C()
{
}

uint64_t sub_1DCA33EAC@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned char *a7@<X8>)
{
  uint64_t result = sub_1DCA33430(*a1, a2, a3, a4, a5, a6);
  *a7 = result & 1;
  a7[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_1DCA33EE4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA33F1C@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1DCA33EAC(a1, a2, *(uint64_t (**)(char *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), a3);
}

uint64_t sub_1DCA33F3C()
{
  return sub_1DC88389C();
}

uint64_t sub_1DCA33F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCA33FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCA34010(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v3();
  return a1;
}

uint64_t sub_1DCA34068@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC8AF230(a1, (long long *)(v2 + 16), a2);
}

uint64_t sub_1DCA34074(uint64_t *a1, void *a2, void *a3)
{
  return sub_1DCA343F0(a1, a2, a3);
}

uint64_t sub_1DCA3408C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCA34438(a1, a2);
}

void *sub_1DCA340A8(uint64_t a1)
{
  return sub_1DC9587B0(a1);
}

uint64_t sub_1DCA340C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC8AF19C(*(void *)(v1 + 24), a1);
}

uint64_t sub_1DCA340E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC8AF2D8(a1, v2 + 16, a2);
}

unint64_t sub_1DCA34104()
{
  unint64_t result = qword_1EAAA52B0;
  if (!qword_1EAAA52B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA52B0);
  }
  return result;
}

void sub_1DCA34154(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_1DCB86BF8();
  sub_1DC8E77E0(v4);
  sub_1DCA31CF0(a1, a2);
}

uint64_t sub_1DCA341B0()
{
  return sub_1DC88389C();
}

uint64_t sub_1DCA341D0()
{
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

void sub_1DCA34200()
{
}

uint64_t sub_1DCA34208@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCA2A6E0(v1[4], v1[6], v1[2], v1[3], a1);
}

uint64_t sub_1DCA3422C()
{
  swift_bridgeObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

void sub_1DCA3425C()
{
}

void sub_1DCA34264()
{
}

void sub_1DCA3426C(uint64_t *a1)
{
  sub_1DCA33E20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1DCA34274()
{
  unint64_t result = qword_1EAAA53D0;
  if (!qword_1EAAA53D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA53D0);
  }
  return result;
}

unint64_t sub_1DCA342C0()
{
  unint64_t result = qword_1EAAA53D8;
  if (!qword_1EAAA53D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA53D8);
  }
  return result;
}

unint64_t sub_1DCA3430C()
{
  unint64_t result = qword_1EAAA53E0;
  if (!qword_1EAAA53E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA53E0);
  }
  return result;
}

void sub_1DCA34358(uint64_t *a1, uint64_t a2, unint64_t a3)
{
}

void sub_1DCA34370(uint64_t *a1)
{
  sub_1DCA34358(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DCA34380()
{
  swift_release();
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DCA343B8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA343F0(uint64_t *a1, void *a2, void *a3)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 16))(*a3);
  if (!v4)
  {
    *a2 = v8;
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DCA34438@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DCA34478()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA344C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1DCA3450C()
{
}

ValueMetadata *type metadata accessor for SoundRecognition.Detection.CodingKeys()
{
  return &type metadata for SoundRecognition.Detection.CodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.Detection.InactiveCodingKeys()
{
  return &type metadata for SoundRecognition.Detection.InactiveCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.Detection.ActiveCodingKeys()
{
  return &type metadata for SoundRecognition.Detection.ActiveCodingKeys;
}

void type metadata accessor for SoundRecognition.DomainError()
{
}

void type metadata accessor for SoundRecognition.DetectorIdentifier()
{
}

uint64_t sub_1DCA34570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCA34584);
}

uint64_t sub_1DCA34584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DCB86BF8();
  sub_1DC913CA0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1DCA34610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCA34624);
}

void sub_1DCA34624(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DCB86BF8();
  sub_1DC913CA0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void type metadata accessor for SoundRecognition()
{
}

unsigned char *_s13SoundAnalysis16SoundRecognitionV9DetectionO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_1DC89DC0C((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_1DC89DBF4((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA34774);
      case 4:
        uint64_t result = (unsigned char *)sub_1DC89DBFC((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_1DC89DC04(result, a2 + 1);
        break;
    }
  }
  return result;
}

void type metadata accessor for SoundRecognition.Detection()
{
}

unint64_t sub_1DCA347B0()
{
  unint64_t result = qword_1EAAA54B0;
  if (!qword_1EAAA54B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA54B0);
  }
  return result;
}

uint64_t sub_1DCA347FC()
{
  return sub_1DC88CF34(&qword_1EAAA54B8, &qword_1EAAA54C0);
}

unint64_t sub_1DCA3483C()
{
  unint64_t result = qword_1EAAA54C8;
  if (!qword_1EAAA54C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA54C8);
  }
  return result;
}

unint64_t sub_1DCA3488C()
{
  unint64_t result = qword_1EAAA54D0;
  if (!qword_1EAAA54D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA54D0);
  }
  return result;
}

unint64_t sub_1DCA348DC()
{
  unint64_t result = qword_1EAAA54D8;
  if (!qword_1EAAA54D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA54D8);
  }
  return result;
}

unint64_t sub_1DCA3492C()
{
  unint64_t result = qword_1EAAA54E0;
  if (!qword_1EAAA54E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA54E0);
  }
  return result;
}

unint64_t sub_1DCA3497C()
{
  unint64_t result = qword_1EAAA54E8;
  if (!qword_1EAAA54E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA54E8);
  }
  return result;
}

unint64_t sub_1DCA349CC()
{
  unint64_t result = qword_1EAAA54F0;
  if (!qword_1EAAA54F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA54F0);
  }
  return result;
}

unint64_t sub_1DCA34A1C()
{
  unint64_t result = qword_1EAAA54F8;
  if (!qword_1EAAA54F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA54F8);
  }
  return result;
}

unint64_t sub_1DCA34A6C()
{
  unint64_t result = qword_1EAAA5500;
  if (!qword_1EAAA5500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5500);
  }
  return result;
}

unint64_t sub_1DCA34AB8()
{
  unint64_t result = qword_1EAAA5538;
  if (!qword_1EAAA5538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5538);
  }
  return result;
}

unint64_t sub_1DCA34B04()
{
  unint64_t result = qword_1EAAA5540;
  if (!qword_1EAAA5540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5540);
  }
  return result;
}

unint64_t sub_1DCA34B50()
{
  unint64_t result = qword_1EAAA5548;
  if (!qword_1EAAA5548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5548);
  }
  return result;
}

unint64_t sub_1DCA34B9C()
{
  unint64_t result = qword_1EAAA5550;
  if (!qword_1EAAA5550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5550);
  }
  return result;
}

unint64_t sub_1DCA34BE8()
{
  unint64_t result = qword_1EAAA5558;
  if (!qword_1EAAA5558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5558);
  }
  return result;
}

unint64_t sub_1DCA34C34()
{
  unint64_t result = qword_1EAAA5560;
  if (!qword_1EAAA5560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5560);
  }
  return result;
}

unint64_t sub_1DCA34C80()
{
  unint64_t result = qword_1EAAA5628;
  if (!qword_1EAAA5628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5628);
  }
  return result;
}

unint64_t sub_1DCA34CCC()
{
  unint64_t result = qword_1EAAA5630;
  if (!qword_1EAAA5630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5630);
  }
  return result;
}

unint64_t sub_1DCA34D18()
{
  unint64_t result = qword_1EAAA5638;
  if (!qword_1EAAA5638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5638);
  }
  return result;
}

unint64_t sub_1DCA34D64()
{
  unint64_t result = qword_1EAAA5640;
  if (!qword_1EAAA5640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5640);
  }
  return result;
}

unint64_t sub_1DCA34DB0()
{
  unint64_t result = qword_1EAAA5648;
  if (!qword_1EAAA5648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5648);
  }
  return result;
}

unint64_t sub_1DCA34DFC()
{
  unint64_t result = qword_1EAAA5650;
  if (!qword_1EAAA5650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5650);
  }
  return result;
}

unint64_t sub_1DCA34E48()
{
  unint64_t result = qword_1EAAA5658;
  if (!qword_1EAAA5658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5658);
  }
  return result;
}

unint64_t sub_1DCA34E94()
{
  unint64_t result = qword_1EAAA5660;
  if (!qword_1EAAA5660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5660);
  }
  return result;
}

unint64_t sub_1DCA34EE0()
{
  unint64_t result = qword_1EAAA5668;
  if (!qword_1EAAA5668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5668);
  }
  return result;
}

unint64_t sub_1DCA34F2C()
{
  unint64_t result = qword_1EAAA5670;
  if (!qword_1EAAA5670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5670);
  }
  return result;
}

unint64_t sub_1DCA34F78()
{
  unint64_t result = qword_1EAAA5678;
  if (!qword_1EAAA5678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5678);
  }
  return result;
}

unint64_t sub_1DCA34FC4()
{
  unint64_t result = qword_1EAAA5680;
  if (!qword_1EAAA5680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5680);
  }
  return result;
}

unint64_t sub_1DCA35010()
{
  unint64_t result = qword_1EAAA5688;
  if (!qword_1EAAA5688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5688);
  }
  return result;
}

unint64_t sub_1DCA3505C()
{
  unint64_t result = qword_1EAAA5690;
  if (!qword_1EAAA5690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5690);
  }
  return result;
}

unint64_t sub_1DCA350A8()
{
  unint64_t result = qword_1EAAA5698;
  if (!qword_1EAAA5698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5698);
  }
  return result;
}

unint64_t sub_1DCA350F4()
{
  unint64_t result = qword_1EAAA56A0;
  if (!qword_1EAAA56A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA56A0);
  }
  return result;
}

unint64_t sub_1DCA35140()
{
  unint64_t result = qword_1EAAA56A8;
  if (!qword_1EAAA56A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA56A8);
  }
  return result;
}

unint64_t sub_1DCA3518C()
{
  unint64_t result = qword_1EAAA56B0;
  if (!qword_1EAAA56B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA56B0);
  }
  return result;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV25BuiltInDetectorIdentifierOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1DC89DC14(-1);
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 17);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 17);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 17);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1DC89DC14(v8);
}

unsigned char *_s13SoundAnalysis16SoundRecognitionV18DetectorIdentifierO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1DC89DC0C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1DC89DBF4((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA35318);
      case 4:
        unint64_t result = (unsigned char *)sub_1DC89DBFC((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1DC89DC04(result, a2 + 16);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.CodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.SmokeAlarmCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.SmokeAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.DistressedBabyCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.DistressedBabyCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.BeepCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.BeepCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.BuzzerCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.BuzzerCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.CarHornCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.CarHornCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.CatMeowCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.CatMeowCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.CoughCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.CoughCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.DingBellCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.DingBellCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.DogBarkCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.DogBarkCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.DoorBellCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.DoorBellCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.DoorKnockCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.DoorKnockCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.FireAlarmCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.FireAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.GlassBreakingCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.GlassBreakingCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.KettleWhistlingCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.KettleWhistlingCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.ShoutCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.ShoutCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.SirenAlarmCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.SirenAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DetectorIdentifier.WaterRunningCodingKeys()
{
  return &type metadata for SoundRecognition.DetectorIdentifier.WaterRunningCodingKeys;
}

uint64_t _s13SoundAnalysis16SoundRecognitionV11DomainErrorO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1DC89DC14(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1DC89DC14((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1DC89DC14(v8);
}

unsigned char *_s13SoundAnalysis16SoundRecognitionV11DomainErrorO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1DC89DC0C((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1DC89DBF4((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA355A0);
      case 4:
        unint64_t result = (unsigned char *)sub_1DC89DBFC((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1DC89DC04(result, a2 + 4);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundRecognition.DomainError.CodingKeys()
{
  return &type metadata for SoundRecognition.DomainError.CodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DomainError.BadTypeOnWireCodingKeys()
{
  return &type metadata for SoundRecognition.DomainError.BadTypeOnWireCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DomainError.BufferOverflowCodingKeys()
{
  return &type metadata for SoundRecognition.DomainError.BufferOverflowCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DomainError.DroppedResultCodingKeys()
{
  return &type metadata for SoundRecognition.DomainError.DroppedResultCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DomainError.InvalidDetectorOutputCodingKeys()
{
  return &type metadata for SoundRecognition.DomainError.InvalidDetectorOutputCodingKeys;
}

ValueMetadata *type metadata accessor for SoundRecognition.DomainError.UnsupportedCodingKeys()
{
  return &type metadata for SoundRecognition.DomainError.UnsupportedCodingKeys;
}

unint64_t sub_1DCA3562C()
{
  unint64_t result = qword_1EAAA5748;
  if (!qword_1EAAA5748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5748);
  }
  return result;
}

unint64_t sub_1DCA3567C()
{
  unint64_t result = qword_1EAAA5750;
  if (!qword_1EAAA5750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5750);
  }
  return result;
}

unint64_t sub_1DCA356CC()
{
  unint64_t result = qword_1EAAA5758;
  if (!qword_1EAAA5758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5758);
  }
  return result;
}

unint64_t sub_1DCA3571C()
{
  unint64_t result = qword_1EAAA5760;
  if (!qword_1EAAA5760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5760);
  }
  return result;
}

unint64_t sub_1DCA3576C()
{
  unint64_t result = qword_1EAAA5768;
  if (!qword_1EAAA5768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5768);
  }
  return result;
}

unint64_t sub_1DCA357BC()
{
  unint64_t result = qword_1EAAA5770;
  if (!qword_1EAAA5770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5770);
  }
  return result;
}

unint64_t sub_1DCA3580C()
{
  unint64_t result = qword_1EAAA5778;
  if (!qword_1EAAA5778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5778);
  }
  return result;
}

unint64_t sub_1DCA3585C()
{
  unint64_t result = qword_1EAAA5780;
  if (!qword_1EAAA5780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5780);
  }
  return result;
}

unint64_t sub_1DCA358AC()
{
  unint64_t result = qword_1EAAA5788;
  if (!qword_1EAAA5788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5788);
  }
  return result;
}

unint64_t sub_1DCA358FC()
{
  unint64_t result = qword_1EAAA5790;
  if (!qword_1EAAA5790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5790);
  }
  return result;
}

unint64_t sub_1DCA3594C()
{
  unint64_t result = qword_1EAAA5798;
  if (!qword_1EAAA5798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5798);
  }
  return result;
}

unint64_t sub_1DCA3599C()
{
  unint64_t result = qword_1EAAA57A0;
  if (!qword_1EAAA57A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57A0);
  }
  return result;
}

unint64_t sub_1DCA359EC()
{
  unint64_t result = qword_1EAAA57A8;
  if (!qword_1EAAA57A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57A8);
  }
  return result;
}

unint64_t sub_1DCA35A3C()
{
  unint64_t result = qword_1EAAA57B0;
  if (!qword_1EAAA57B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57B0);
  }
  return result;
}

unint64_t sub_1DCA35A8C()
{
  unint64_t result = qword_1EAAA57B8;
  if (!qword_1EAAA57B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57B8);
  }
  return result;
}

unint64_t sub_1DCA35ADC()
{
  unint64_t result = qword_1EAAA57C0;
  if (!qword_1EAAA57C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57C0);
  }
  return result;
}

unint64_t sub_1DCA35B2C()
{
  unint64_t result = qword_1EAAA57C8;
  if (!qword_1EAAA57C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57C8);
  }
  return result;
}

unint64_t sub_1DCA35B7C()
{
  unint64_t result = qword_1EAAA57D0;
  if (!qword_1EAAA57D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57D0);
  }
  return result;
}

unint64_t sub_1DCA35BCC()
{
  unint64_t result = qword_1EAAA57D8;
  if (!qword_1EAAA57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57D8);
  }
  return result;
}

unint64_t sub_1DCA35C1C()
{
  unint64_t result = qword_1EAAA57E0;
  if (!qword_1EAAA57E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57E0);
  }
  return result;
}

unint64_t sub_1DCA35C6C()
{
  unint64_t result = qword_1EAAA57E8;
  if (!qword_1EAAA57E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57E8);
  }
  return result;
}

unint64_t sub_1DCA35CBC()
{
  unint64_t result = qword_1EAAA57F0;
  if (!qword_1EAAA57F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57F0);
  }
  return result;
}

unint64_t sub_1DCA35D0C()
{
  unint64_t result = qword_1EAAA57F8;
  if (!qword_1EAAA57F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA57F8);
  }
  return result;
}

unint64_t sub_1DCA35D5C()
{
  unint64_t result = qword_1EAAA5800;
  if (!qword_1EAAA5800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5800);
  }
  return result;
}

unint64_t sub_1DCA35DAC()
{
  unint64_t result = qword_1EAAA5808;
  if (!qword_1EAAA5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5808);
  }
  return result;
}

unint64_t sub_1DCA35DFC()
{
  unint64_t result = qword_1EAAA5810;
  if (!qword_1EAAA5810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5810);
  }
  return result;
}

unint64_t sub_1DCA35E4C()
{
  unint64_t result = qword_1EAAA5818;
  if (!qword_1EAAA5818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5818);
  }
  return result;
}

unint64_t sub_1DCA35E9C()
{
  unint64_t result = qword_1EAAA5820;
  if (!qword_1EAAA5820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5820);
  }
  return result;
}

unint64_t sub_1DCA35EEC()
{
  unint64_t result = qword_1EAAA5828;
  if (!qword_1EAAA5828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5828);
  }
  return result;
}

unint64_t sub_1DCA35F3C()
{
  unint64_t result = qword_1EAAA5830;
  if (!qword_1EAAA5830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5830);
  }
  return result;
}

unint64_t sub_1DCA35F8C()
{
  unint64_t result = qword_1EAAA5838;
  if (!qword_1EAAA5838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5838);
  }
  return result;
}

unint64_t sub_1DCA35FDC()
{
  unint64_t result = qword_1EAAA5840;
  if (!qword_1EAAA5840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5840);
  }
  return result;
}

unint64_t sub_1DCA3602C()
{
  unint64_t result = qword_1EAAA5848;
  if (!qword_1EAAA5848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5848);
  }
  return result;
}

unint64_t sub_1DCA3607C()
{
  unint64_t result = qword_1EAAA5850;
  if (!qword_1EAAA5850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5850);
  }
  return result;
}

unint64_t sub_1DCA360CC()
{
  unint64_t result = qword_1EAAA5858;
  if (!qword_1EAAA5858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5858);
  }
  return result;
}

unint64_t sub_1DCA3611C()
{
  unint64_t result = qword_1EAAA5860;
  if (!qword_1EAAA5860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5860);
  }
  return result;
}

unint64_t sub_1DCA3616C()
{
  unint64_t result = qword_1EAAA5868;
  if (!qword_1EAAA5868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5868);
  }
  return result;
}

unint64_t sub_1DCA361BC()
{
  unint64_t result = qword_1EAAA5870;
  if (!qword_1EAAA5870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5870);
  }
  return result;
}

unint64_t sub_1DCA3620C()
{
  unint64_t result = qword_1EAAA5878;
  if (!qword_1EAAA5878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5878);
  }
  return result;
}

unint64_t sub_1DCA3625C()
{
  unint64_t result = qword_1EAAA5880;
  if (!qword_1EAAA5880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5880);
  }
  return result;
}

unint64_t sub_1DCA362AC()
{
  unint64_t result = qword_1EAAA5888;
  if (!qword_1EAAA5888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5888);
  }
  return result;
}

unint64_t sub_1DCA362FC()
{
  unint64_t result = qword_1EAAA5890;
  if (!qword_1EAAA5890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5890);
  }
  return result;
}

unint64_t sub_1DCA3634C()
{
  unint64_t result = qword_1EAAA5898;
  if (!qword_1EAAA5898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5898);
  }
  return result;
}

unint64_t sub_1DCA3639C()
{
  unint64_t result = qword_1EAAA58A0;
  if (!qword_1EAAA58A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA58A0);
  }
  return result;
}

unint64_t sub_1DCA363EC()
{
  unint64_t result = qword_1EAAA58A8;
  if (!qword_1EAAA58A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA58A8);
  }
  return result;
}

unint64_t sub_1DCA3643C()
{
  unint64_t result = qword_1EAAA58B0;
  if (!qword_1EAAA58B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA58B0);
  }
  return result;
}

unint64_t sub_1DCA3648C()
{
  unint64_t result = qword_1EAAA58B8;
  if (!qword_1EAAA58B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA58B8);
  }
  return result;
}

unint64_t sub_1DCA364DC()
{
  unint64_t result = qword_1EAAA58C0;
  if (!qword_1EAAA58C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA58C0);
  }
  return result;
}

unint64_t sub_1DCA3652C()
{
  unint64_t result = qword_1EAAA58C8;
  if (!qword_1EAAA58C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA58C8);
  }
  return result;
}

unint64_t sub_1DCA3657C()
{
  unint64_t result = qword_1EAAA58D0;
  if (!qword_1EAAA58D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA58D0);
  }
  return result;
}

uint64_t sub_1DCA3661C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DCA340E8(a1, a2);
}

uint64_t sub_1DCA36638(uint64_t a1)
{
  return sub_1DC958674(a1);
}

uint64_t sub_1DCA36650(uint64_t a1)
{
  return sub_1DC958714(a1);
}

uint64_t sub_1DCA3666C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA340C4(a1);
}

uint64_t sub_1DCA36698@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC9586C8(a1, a2);
}

uint64_t sub_1DCA366B0()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA366D8()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA366FC()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DCA3671C()
{
  return sub_1DCB873C8();
}

uint64_t sub_1DCA36750()
{
  return v0;
}

uint64_t sub_1DCA36760()
{
  return v0;
}

void sub_1DCA36784(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DCA367A0()
{
  return v0;
}

void sub_1DCA367CC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DCA367F8()
{
  return v0;
}

void sub_1DCA36814(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DCA36830(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DCA3684C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DCA36868(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DCA36884@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA320B8(1, a1);
}

void sub_1DCA3688C()
{
  *(void *)(v0 - 256) = v1;
}

uint64_t sub_1DCA368A0(uint64_t a1)
{
  *(void *)(v2 - 72) = a1;
  *(void *)(v2 - 264) = v1;
  return sub_1DCB88778();
}

uint64_t sub_1DCA368D4()
{
  return v0;
}

uint64_t sub_1DCA368EC()
{
  return sub_1DCB873D8();
}

uint64_t sub_1DCA36910()
{
  return v0;
}

uint64_t sub_1DCA36928()
{
  uint64_t v1 = *(void *)(v0 - 104);
  sub_1DC881A8C((void *)(v0 - 128), v1);
  return v1;
}

uint64_t sub_1DCA36964()
{
  return v0;
}

uint64_t sub_1DCA36988()
{
  return sub_1DCB874D8();
}

uint64_t sub_1DCA369B4()
{
  return v0;
}

uint64_t sub_1DCA369C4()
{
  return sub_1DCB88778();
}

uint64_t sub_1DCA36A10@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1DCB86BF8();
}

uint64_t sub_1DCA36A3C()
{
  return swift_release();
}

uint64_t sub_1DCA36A60()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA36A78(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_1DCA36A90()
{
  return v0;
}

uint64_t sub_1DCA36A9C()
{
  return v0;
}

void sub_1DCA36AA8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DCA36AC4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DCA36AE0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DCA36AFC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DCA36B18()
{
  *(void *)(v1 - 88) = v0;
}

uint64_t sub_1DCA36B34()
{
  return v0;
}

uint64_t sub_1DCA36B44()
{
  return v0;
}

uint64_t sub_1DCA36B50()
{
  return v0;
}

uint64_t sub_1DCA36B68()
{
  return sub_1DCB88B08();
}

uint64_t sub_1DCA36B84@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return sub_1DCB870B8();
}

uint64_t sub_1DCA36BA0()
{
  return v0;
}

void sub_1DCA36BDC(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_1DCA36BF0()
{
  return sub_1DCB873D8();
}

void sub_1DCA36C0C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v3 - 72) = v2;
  *(void *)(v3 - 96) = a2;
  *(void *)(v3 - 88) = a1;
}

__n128 sub_1DCA36C1C()
{
  return *(__n128 *)v0;
}

uint64_t sub_1DCA36C40()
{
  return swift_slowAlloc();
}

uint64_t sub_1DCA36C5C()
{
  return v0;
}

uint64_t sub_1DCA36C88()
{
  return v0;
}

uint64_t sub_1DCA36C9C()
{
  return v0;
}

uint64_t sub_1DCA36CBC(uint64_t a1)
{
  return *(void *)a1;
}

void sub_1DCA36CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC889BF4((uint64_t)&a10, v20, a1, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1DCA36D10(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

void sub_1DCA36D30(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_1DCA36D70()
{
  return v0;
}

uint64_t sub_1DCA36D7C()
{
  return swift_slowAlloc();
}

uint64_t sub_1DCA36DA0()
{
  return sub_1DCB87488();
}

uint64_t sub_1DCA36DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    unsigned int v4 = (void *)(a1 + 32);
    while (*v4 != a2)
    {
      ++v3;
      v4 += 2;
      if (v2 == v3)
      {
        uint64_t v3 = 0;
        break;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  swift_unknownObjectRelease();
  return v3;
}

void sub_1DCA36E5C(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1DC987154();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_1DC8970CC(v3 + 24 * a1 + 56, v4 - 1 - a1);
    *(void *)(v3 + 16) = v5;
    *char v1 = v3;
  }
}

void sub_1DCA36EF0(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1DC987204();
    uint64_t v5 = v8;
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v5 + 160 * a1;
    memcpy(a2, (const void *)(v7 + 32), 0xA0uLL);
    sub_1DC8979AC((char *)(v7 + 192), v6 - 1 - a1, (char *)(v7 + 32));
    *(void *)(v5 + 16) = v6 - 1;
    *uint64_t v2 = v5;
  }
}

void sub_1DCA36F94(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1DC987214();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_1DC897128((char *)(v3 + 16 * a1 + 48), v4 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(void *)(v3 + 16) = v5;
    *char v1 = v3;
  }
}

uint64_t sub_1DCA37020(char a1, long long *a2)
{
  uint64_t v3 = v2;
  uint64_t v38 = sub_1DCB86BF8();
  sub_1DC88D538();
  uint64_t v36 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v35 = v7;
  uint64_t v8 = sub_1DCB884C8();
  MEMORY[0x1F4188790](v8);
  sub_1DC8A22D0();
  uint64_t v9 = sub_1DCB875B8();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1DC89D970();
  uint64_t v22 = sub_1DCB884D8();
  sub_1DC88D538();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1DC8A22D0();
  uint64_t v15 = v14 - v13;
  long long v33 = a2[1];
  long long v34 = *a2;
  uint64_t v31 = *((void *)a2 + 5);
  uint64_t v32 = *((void *)a2 + 4);
  char v29 = *((unsigned char *)a2 + 49);
  char v30 = *((unsigned char *)a2 + 48);
  char v27 = *((unsigned char *)a2 + 51);
  char v28 = *((unsigned char *)a2 + 50);
  char v25 = *((unsigned char *)a2 + 53);
  char v26 = *((unsigned char *)a2 + 52);
  uint64_t v24 = *((void *)a2 + 7);
  char v23 = *((unsigned char *)a2 + 64);
  uint64_t v16 = v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_recordingCancellable;
  *(_OWORD *)uint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(void *)(v16 + 32) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) = 0;
  sub_1DC9C573C();
  unsigned int v21 = *MEMORY[0x1E4FBCC68];
  uint64_t v20 = *(void (**)(uint64_t))(v11 + 104);
  v20(v15);
  sub_1DCB875A8();
  sub_1DCA3B11C((unint64_t *)&qword_1EAA9D0F0, MEMORY[0x1E4FBCC10]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9D0D0);
  sub_1DC88CF34((unint64_t *)&qword_1EAA9D0E0, (uint64_t *)&unk_1EAA9D0D0);
  sub_1DCA3B498();
  sub_1DCB88928();
  sub_1DCA3B4C8();
  *(void *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue) = sub_1DCB88508();
  ((void (*)(uint64_t, void, uint64_t))v20)(v15, v21, v22);
  sub_1DCB875A8();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_1DCA3B498();
  sub_1DCB88928();
  sub_1DCA3B4C8();
  *(void *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_analysisQueue) = sub_1DCB88508();
  uint64_t v18 = v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration;
  *(_OWORD *)uint64_t v18 = v34;
  *(_OWORD *)(v18 + 16) = v33;
  *(void *)(v18 + 32) = v32;
  *(void *)(v18 + 40) = v31;
  *(unsigned char *)(v18 + 48) = v30;
  *(unsigned char *)(v18 + 49) = v29;
  *(unsigned char *)(v18 + 50) = v28;
  *(unsigned char *)(v18 + 51) = v27;
  *(unsigned char *)(v18 + 52) = v26;
  *(unsigned char *)(v18 + 53) = v25;
  *(void *)(v18 + 56) = v24;
  *(unsigned char *)(v18 + 64) = v23;
  *(void *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers) = v17;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_allowSuppressionOfMicrophoneUsageIndicator) = a1;
  sub_1DCB86BE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v3 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_id, v35, v38);
  return v3;
}

uint64_t sub_1DCA37438(void *a1, void *a2)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DCB86FE8();
  sub_1DC89F57C(v4, (uint64_t)qword_1EAAFF810);
  swift_retain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v5 = sub_1DCB86FC8();
  os_log_type_t v6 = sub_1DCB88488();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = v23;
    *(_DWORD *)uint64_t v7 = 136315650;
    sub_1DCB86BF8();
    sub_1DCA3B11C(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v8 = sub_1DCB88F98();
    sub_1DC9F8920(v8, v9, &v24);
    sub_1DCB88778();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    id v10 = objc_msgSend(a1, sel_description);
    uint64_t v11 = sub_1DCB87938();
    uint64_t v12 = a2;
    unint64_t v14 = v13;

    uint64_t v15 = sub_1DC9F8920(v11, v14, &v24);
    sub_1DCA3B4B4(v15);
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2080;
    id v16 = objc_msgSend(v12, sel_description);
    uint64_t v17 = sub_1DCB87938();
    unint64_t v19 = v18;

    uint64_t v20 = sub_1DC9F8920(v17, v19, &v24);
    sub_1DCA3B4B4(v20);
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v5, v6, "(SNSystemAudioAnalyzerLocal: %s) addRequest:%s withObserver:%s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v23, -1, -1);
    MEMORY[0x1E01A99C0](v7, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    uint64_t v21 = swift_release_n();
  }
  MEMORY[0x1F4188790](v21);
  return sub_1DCB884E8();
}

void sub_1DCA377C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  aBlock[15] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1DCB87588();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1DCB875B8();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  id v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v2[OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers];
  swift_beginAccess();
  uint64_t v12 = *(void *)(*(void *)v11 + 16);
  if (v12)
  {
    unint64_t v13 = (void *)(*(void *)v11 + 32);
    while (*v13 != a1)
    {
      v13 += 2;
      if (!--v12) {
        goto LABEL_7;
      }
    }
    sub_1DCA38CA8(a1);
  }
LABEL_7:
  uint64_t v35 = v3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = nullsub_1;
  v17[3] = 0;
  v17[4] = sub_1DCA3B0D4;
  v17[5] = v15;
  unint64_t v18 = (void *)swift_allocObject();
  v18[2] = sub_1DCA3B09C;
  v18[3] = v14;
  v18[4] = sub_1DCA3B0DC;
  v18[5] = v16;
  id v19 = objc_allocWithZone((Class)type metadata accessor for SNResultsForwarder());
  swift_unknownObjectRetain();
  swift_retain();
  id v20 = sub_1DC9EA250((uint64_t)sub_1DCA3B0F8, (uint64_t)v18, (uint64_t)sub_1DCA3B0E8, (uint64_t)v17);
  swift_release();
  uint64_t v21 = *(void **)&v4[OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer];
  if (!v21) {
    goto LABEL_10;
  }
  aBlock[0] = 0;
  id v22 = v21;
  if (objc_msgSend(v22, sel_addRequest_withObserver_error_, a1, v20, aBlock))
  {
    id v23 = aBlock[0];

LABEL_10:
    sub_1DC87E988((uint64_t *)&unk_1EAAA6940);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = v20;
    swift_beginAccess();
    swift_unknownObjectRetain();
    id v25 = v20;
    swift_bridgeObjectRetain();
    sub_1DCB19154();
    swift_endAccess();
    swift_setDeallocating();
    sub_1DC9377C0();
    aBlock[4] = sub_1DCA3B494;
    aBlock[5] = v4;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1DC9C881C;
    aBlock[3] = &unk_1F37FAAD0;
    char v26 = _Block_copy(aBlock);
    swift_retain();
    sub_1DCB875A8();
    uint64_t v36 = MEMORY[0x1E4FBC860];
    sub_1DCA3B11C((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
    sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
    sub_1DC88CF34((unint64_t *)&qword_1EAA9E720, (uint64_t *)&unk_1EAA9F660);
    char v27 = v31;
    uint64_t v28 = v34;
    sub_1DCB88928();
    MEMORY[0x1E01A74F0](0, v10, v27, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v32);
    swift_release();
    return;
  }
  id v29 = aBlock[0];
  sub_1DCB86898();

  swift_willThrow();
}

uint64_t sub_1DCA37D58()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16))
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning)) {
      return result;
    }
    swift_retain();
    sub_1DCA37DE0();
  }
  else
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) & 1) == 0) {
      return result;
    }
    swift_retain();
    sub_1DCA38C54();
  }
  return swift_release();
}

void sub_1DCA37DE0()
{
  uint64_t v1 = v0;
  uint64_t v111 = *MEMORY[0x1E4F143B8];
  if (qword_1EAA9CFA8 != -1) {
    swift_once();
  }
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration);
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration + 49);
  if (byte_1EAAFFB70 == 1)
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration + 49) & 1) != 0
      || *((unsigned char *)v2 + 48) == 1)
    {
      if ((*(unsigned char *)(v0
                     + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_allowSuppressionOfMicrophoneUsageIndicator) & 1) == 0)
      {
        type metadata accessor for SNError();
        id v4 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000035, 0x80000001DCB96900);
        swift_willThrow();
LABEL_14:
        if (qword_1EAA9C658 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_1DCB86FE8();
        sub_1DC89F57C(v15, (uint64_t)qword_1EAAFF810);
        id v16 = v4;
        id v17 = v4;
        unint64_t v18 = sub_1DCB86FC8();
        os_log_type_t v19 = sub_1DCB88468();
        if (os_log_type_enabled(v18, v19))
        {
          id v20 = (uint8_t *)swift_slowAlloc();
          uint64_t v21 = (void *)swift_slowAlloc();
          *(_DWORD *)id v20 = 138412290;
          id v22 = v4;
          uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)&long long v98 = v23;
          sub_1DCB88778();
          *uint64_t v21 = v23;

          _os_log_impl(&dword_1DC873000, v18, v19, "failed to start audio with error %@", v20, 0xCu);
          sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
          swift_arrayDestroy();
          MEMORY[0x1E01A99C0](v21, -1, -1);
          MEMORY[0x1E01A99C0](v20, -1, -1);
        }
        else
        {
        }
        id v24 = sub_1DCA39F88();
        sub_1DCA39FF0((uint64_t)v24);
        sub_1DCA39C98();

        return;
      }
    }
    else
    {
      char v3 = 0;
    }
  }
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[5];
  uint64_t v94 = v2[4];
  char v92 = *((unsigned char *)v2 + 51);
  char v93 = *((unsigned char *)v2 + 50);
  char v90 = *((unsigned char *)v2 + 53);
  char v91 = *((unsigned char *)v2 + 52);
  uint64_t v89 = v2[7];
  char v87 = *((unsigned char *)v2 + 48);
  char v88 = *((unsigned char *)v2 + 64);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v10 = sub_1DCAA5180();
  uint64_t v11 = v9;
  if ((v12 & 1) == 0)
  {
    id v13 = v10;
    sub_1DC87E988(&qword_1EAA9C6C0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1DCBB93B0;
    *(void *)(v11 + 32) = v13;
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = sub_1DCAA5264();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v14;
  }
  *(void *)&long long v98 = v6;
  *((void *)&v98 + 1) = v5;
  uint64_t v99 = v8;
  uint64_t v100 = v7;
  uint64_t v101 = v94;
  uint64_t v102 = v11;
  char v103 = v87;
  char v104 = v3;
  char v105 = v93;
  char v106 = v92;
  char v107 = v91;
  char v108 = v90;
  uint64_t v109 = v89;
  char v110 = v88;
  id v25 = (void *)sub_1DCB146B8(&v97, &v98);
  uint64_t v79 = v8;
  uint64_t v80 = v6;
  uint64_t v83 = v11;
  char v81 = v3;
  uint64_t v26 = v97;
  id v85 = v27;
  id v28 = objc_msgSend(objc_allocWithZone((Class)SNAudioStreamAnalyzer), sel_initWithFormat_, v27);
  id v29 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer) = v28;
  id v30 = v28;

  uint64_t v31 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession);
  *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession) = v25;
  id v84 = v25;

  if ((v2[6] & 1) == 0)
  {
    *(void *)&long long v98 = 0;
    if (!objc_msgSend(v84, sel_setActive_error_, 1, &v98))
    {
      id v68 = (id)v98;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v69 = (void *)sub_1DCB86898();

      swift_willThrow();
      type metadata accessor for SNError();
      uint64_t v70 = (void *)sub_1DCB86888();
      *(void *)&long long v98 = 0;
      *((void *)&v98 + 1) = 0xE000000000000000;
      sub_1DCB88A98();
      sub_1DCB87A18();
      uint64_t v97 = (uint64_t)v69;
      sub_1DC87E988(&qword_1EAA9DF60);
      sub_1DCB88C08();
      id v4 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, v70, v98, *((unint64_t *)&v98 + 1));

      swift_bridgeObjectRelease();
      swift_willThrow();

      swift_release();
      goto LABEL_14;
    }
    id v32 = (id)v98;
  }
  uint64_t v82 = v26;
  uint64_t v33 = v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers;
  swift_beginAccess();
  uint64_t v34 = *(void *)(*(void *)v33 + 16);
  if (v34)
  {
    *(void *)type = v7;
    uint64_t v35 = (void **)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v37 = (uint64_t)*(v35 - 1);
      uint64_t v36 = *v35;
      *(void *)&long long v98 = 0;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (objc_msgSend(v30, sel_addRequest_withObserver_error_, v37, v36, &v98))
      {
        id v38 = (id)v98;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        id v39 = v30;
        id v40 = (id)v98;
        uint64_t v41 = (void *)sub_1DCB86898();

        swift_willThrow();
        if (objc_msgSend(v36, sel_respondsToSelector_, sel_request_didFailWithError_))
        {
          swift_unknownObjectRetain();
          uint64_t v42 = (void *)sub_1DCB86888();
          objc_msgSend(v36, sel_request_didFailWithError_, v37, v42);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease_n();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }

        id v30 = v39;
      }
      v35 += 2;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)type;
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_1DCB86FE8();
  sub_1DC89F57C(v43, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain();
  id v86 = v85;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1DCB86FC8();
  os_log_type_t v45 = sub_1DCB88488();
  if (os_log_type_enabled(v44, v45))
  {
    id v78 = v30;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    v96[0] = v77;
    *(_DWORD *)uint64_t v46 = 136315394;
    id v47 = objc_msgSend(v86, sel_description);
    log = v44;
    uint64_t v48 = v7;
    uint64_t v49 = sub_1DCB87938();
    unint64_t v51 = v50;

    *(void *)&long long v98 = sub_1DC9F8920(v49, v51, v96);
    sub_1DCB88778();

    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    *(void *)&long long v98 = v80;
    *((void *)&v98 + 1) = v5;
    uint64_t v99 = v79;
    uint64_t v100 = v48;
    uint64_t v101 = v94;
    uint64_t v102 = v83;
    char v103 = v87;
    char v104 = v81;
    char v105 = v93;
    char v106 = v92;
    char v107 = v91;
    char v108 = v90;
    uint64_t v109 = v89;
    char v110 = v88;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1DCB87988();
    *(void *)&long long v98 = sub_1DC9F8920(v52, v53, v96);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, log, v45, "Starting audio input. %s, %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v77, -1, -1);
    uint64_t v54 = v46;
    id v30 = v78;
    MEMORY[0x1E01A99C0](v54, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v55 = v82;
  uint64_t v56 = swift_allocObject();
  swift_weakInit();
  if (qword_1EAA9CB50 != -1) {
    swift_once();
  }
  uint64_t v57 = v1;
  if (byte_1EAAFF828 == 1 && byte_1EAAFFB70 == 1)
  {
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = 0;
    *(void *)(v58 + 24) = 0;
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = 0;
    uint64_t v60 = (void *)swift_allocObject();
    v60[2] = sub_1DCA3A210;
    v60[3] = 0;
    v60[4] = v58;
    v60[5] = v59;
    v60[6] = v86;
    v60[7] = sub_1DCA3B1FC;
    v60[8] = v56;
    swift_retain_n();
    id v61 = v86;
    swift_retain();
    uint64_t v62 = sub_1DCB86FC8();
    os_log_type_t v63 = sub_1DCB88488();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 136315138;
      *(void *)&long long v98 = v95;
      sub_1DCB86BF8();
      sub_1DCA3B11C(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
      uint64_t v65 = sub_1DCB88F98();
      v96[0] = sub_1DC9F8920(v65, v66, (uint64_t *)&v98);
      sub_1DCB88778();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DC873000, v62, v63, "Analyzer capable of injection (%s).", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01A99C0](v95, -1, -1);
      MEMORY[0x1E01A99C0](v64, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v67 = sub_1DCA3B318;
    uint64_t v55 = v82;
  }
  else
  {
    swift_retain();
    uint64_t v67 = sub_1DCA3B1FC;
    uint64_t v60 = (void *)v56;
  }
  *(void *)&long long v98 = v55;
  swift_allocObject();
  swift_weakInit();
  uint64_t v71 = swift_allocObject();
  swift_weakInit();
  uint64_t v72 = (void *)swift_allocObject();
  v72[2] = v71;
  v72[3] = v67;
  v72[4] = v60;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA5950);
  sub_1DC88CF34((unint64_t *)&unk_1EAAAA6A0, &qword_1EAAA5950);
  uint64_t v73 = sub_1DCB87428();
  swift_release();
  swift_release();
  uint64_t v100 = sub_1DCB87278();
  uint64_t v101 = MEMORY[0x1E4F1AB08];
  swift_release();
  swift_release();

  swift_release();
  *(void *)&long long v98 = v73;
  uint64_t v74 = v57 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_recordingCancellable;
  swift_beginAccess();
  sub_1DCA3B164((uint64_t)&v98, v74);
  swift_endAccess();
  *(unsigned char *)(v57 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) = 1;
}

void sub_1DCA38C54()
{
  uint64_t v1 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DCA3A61C(v0);
}

uint64_t sub_1DCA38CA8(uint64_t a1)
{
  uint64_t v3 = sub_1DCB87588();
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DCB875B8();
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  unint64_t v10 = sub_1DCA36DE0(v9, a1);
  char v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    swift_beginAccess();
    sub_1DCA36F94(v10);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    id v13 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
    if (v13) {
      objc_msgSend(v13, sel_removeRequest_, a1);
    }
  }
  aBlock[4] = sub_1DCA3B494;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC9C881C;
  aBlock[3] = &unk_1F37FAD78;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1DCB875A8();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1DCA3B11C((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
  sub_1DC88CF34((unint64_t *)&qword_1EAA9E720, (uint64_t *)&unk_1EAA9F660);
  sub_1DCB88928();
  MEMORY[0x1E01A74F0](0, v8, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  return swift_release();
}

void sub_1DCA3900C(void *a1, void *a2, void *a3)
{
  v24[1] = *MEMORY[0x1E4F143B8];
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1DCB86FE8();
  sub_1DC89F57C(v6, (uint64_t)qword_1EAAFF810);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v7 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v8 = a2;
  oslog = sub_1DCB86FC8();
  os_log_type_t v9 = sub_1DCB88488();
  if (os_log_type_enabled(oslog, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v24[0] = v22;
    *(_DWORD *)uint64_t v10 = 136315650;
    id v11 = objc_msgSend(a3, sel_description);
    uint64_t v12 = sub_1DCB87938();
    unint64_t v14 = v13;

    sub_1DC9F8920(v12, v14, v24);
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    id v15 = objc_msgSend(a1, sel_description);
    uint64_t v16 = sub_1DCB87938();
    unint64_t v18 = v17;

    sub_1DC9F8920(v16, v18, v24);
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2112;
    if (a2)
    {
      id v19 = a2;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      sub_1DCB88778();
    }
    else
    {
      sub_1DCB88778();
      uint64_t v20 = 0;
    }
    *uint64_t v21 = v20;

    _os_log_impl(&dword_1DC873000, oslog, v9, "Observer %s for request %s completed with error: %@", (uint8_t *)v10, 0x20u);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v21, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v22, -1, -1);
    MEMORY[0x1E01A99C0](v10, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1DCA393C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DCB87588();
  sub_1DC88D538();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  sub_1DCB875B8();
  sub_1DC88D538();
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  uint64_t v29 = v12;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1DCB86FE8();
  sub_1DC89F57C(v13, (uint64_t)qword_1EAAFF810);
  swift_retain_n();
  swift_unknownObjectRetain_n();
  unint64_t v14 = sub_1DCB86FC8();
  os_log_type_t v15 = sub_1DCB88488();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v28 = v6;
    uint64_t v16 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_1DCB86BF8();
    sub_1DCA3B11C(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v17 = sub_1DCB88F98();
    sub_1DC9F8920(v17, v18, aBlock);
    sub_1DCB88778();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    id v19 = objc_msgSend(a1, sel_description);
    uint64_t v20 = sub_1DCB87938();
    uint64_t v21 = v4;
    unint64_t v23 = v22;

    sub_1DC9F8920(v20, v23, aBlock);
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    uint64_t v4 = v21;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v14, v15, "(SNSystemAudioAnalyzerLocal:%s) removeRequest:%s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    sub_1DC8E7728();
    uint64_t v6 = v28;
    sub_1DC8E7728();
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_release_n();
  }
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v2;
  *(void *)(v24 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1DCA3B424;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1DC9C881C;
  aBlock[3] = (uint64_t)&unk_1F37FB228;
  id v25 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  sub_1DCB875A8();
  sub_1DCA3B11C((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
  sub_1DC88CF34((unint64_t *)&qword_1EAA9E720, (uint64_t *)&unk_1EAA9F660);
  sub_1DCB88928();
  MEMORY[0x1E01A74F0](0, v29, v10, v25);
  _Block_release(v25);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  sub_1DC88D5C8();
  v26();
  return swift_release();
}

uint64_t sub_1DCA398A0()
{
  sub_1DCB87588();
  sub_1DC88D538();
  MEMORY[0x1F4188790](v2);
  sub_1DC8A22D0();
  uint64_t v5 = v4 - v3;
  sub_1DCB875B8();
  sub_1DC88D538();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D970();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1DCB86FE8();
  sub_1DC89F57C(v7, (uint64_t)qword_1EAAFF810);
  swift_retain_n();
  uint64_t v8 = sub_1DCB86FC8();
  os_log_type_t v9 = sub_1DCB88488();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    aBlock[0] = v11;
    sub_1DCB86BF8();
    sub_1DCA3B11C(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1DCB88F98();
    sub_1DC9F8920(v12, v13, aBlock);
    sub_1DCB88778();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v8, v9, "(SNSystemAudioAnalyzerLocal:%s) removeAllRequests", v10, 0xCu);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_release_n();
  }
  aBlock[4] = (uint64_t)sub_1DCA3B44C;
  aBlock[5] = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1DC9C881C;
  aBlock[3] = (uint64_t)&unk_1F37FB250;
  unint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1DCB875A8();
  sub_1DCA3B11C((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
  sub_1DC88CF34((unint64_t *)&qword_1EAA9E720, (uint64_t *)&unk_1EAA9F660);
  sub_1DCB88928();
  MEMORY[0x1E01A74F0](0, v1, v5, v14);
  _Block_release(v14);
  sub_1DC88D5C8();
  v15();
  sub_1DC88D5C8();
  v16();
  return swift_release();
}

uint64_t sub_1DCA39C98()
{
  uint64_t v1 = sub_1DCB87588();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DCB875B8();
  uint64_t v5 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers);
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *uint64_t v8 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  if (v10) {
    objc_msgSend(v10, sel_removeAllRequests);
  }
  aBlock[4] = sub_1DCA3B3E0;
  aBlock[5] = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC9C881C;
  aBlock[3] = &unk_1F37FB1B0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1DCB875A8();
  uint64_t v15 = v9;
  sub_1DCA3B11C((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
  sub_1DC88CF34((unint64_t *)&qword_1EAA9E720, (uint64_t *)&unk_1EAA9F660);
  sub_1DCB88928();
  MEMORY[0x1E01A74F0](0, v7, v4, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  return swift_release();
}

id sub_1DCA39F88()
{
  return sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001DLL, 0x80000001DCB96960);
}

void sub_1DCA39FF0(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1DC8BF008();
    sub_1DC8BE764(a1, v5, v6, v7, v8, v9, v10, v11, v5, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29,
      v30,
      v31,
      v32,
      vars0,
      vars8);
  }
  else
  {
    uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_requestsAndObservers);
    swift_beginAccess();
    uint64_t v13 = *v12;
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = (id *)(v13 + 40);
      do
      {
        uint64_t v17 = (uint64_t)*(v15 - 1);
        id v16 = *v15;
        if (objc_msgSend(*v15, sel_respondsToSelector_, sel_request_didFailWithError_))
        {
          swift_unknownObjectRetain_n();
          swift_unknownObjectRetain();
          unint64_t v18 = (void *)sub_1DCB86888();
          objc_msgSend(v16, sel_request_didFailWithError_, v17, v18);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease_n();
        }
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1DCA3A15C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
    if (v5)
    {
      id v6 = v5;
      swift_release();
      objc_msgSend(v6, sel_analyzeAudioBuffer_atAudioFramePosition_, a1, objc_msgSend(a2, sel_sampleTime));
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1DCA3A214()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(NSObject **)(result + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_1DCA3B3D0;
    *(void *)(v3 + 24) = v1;
    aBlock[4] = sub_1DCA3B450;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC8BDDAC;
    aBlock[3] = &unk_1F37FB138;
    id v4 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v2, v4);
    swift_release();
    _Block_release(v4);
    LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v2) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1DCA3A380()
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DCB86FE8();
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF810);
  uint64_t v1 = sub_1DCB86FC8();
  os_log_type_t v2 = sub_1DCB88488();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1DC873000, v1, v2, "SNAudioRecordingQueue interrupted", v3, 2u);
    MEMORY[0x1E01A99C0](v3, -1, -1);
  }

  return sub_1DCA3AA1C();
}

uint64_t sub_1DCA3A46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void **)a1;
  id v6 = *(void **)(a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = *(NSObject **)(result + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = a3;
    v10[3] = a4;
    v10[4] = v7;
    v10[5] = v6;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1DCA3B394;
    *(void *)(v11 + 24) = v10;
    aBlock[4] = sub_1DCA3B3C8;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DC8BDDAC;
    aBlock[3] = &unk_1F37FB0E8;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = v7;
    id v14 = v6;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v12);
    swift_release();
    _Block_release(v12);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

void sub_1DCA3A61C(uint64_t a1)
{
  os_log_type_t v2 = v1;
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession;
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioSession);
  if (!v5) {
    goto LABEL_11;
  }
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioConfiguration + 48) & 1) == 0)
  {
    *(void *)&long long aBlock = 0;
    id v6 = v5;
    if (!objc_msgSend(v6, sel_setActive_error_, 0, &aBlock))
    {
      id v8 = (id)aBlock;
      os_log_type_t v2 = (void *)sub_1DCB86898();

      swift_willThrow();
      if (qword_1EAA9C658 == -1) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
    id v7 = (id)aBlock;
  }
  while (1)
  {
    uint64_t v17 = *(void **)(a1 + v4);
    *(void *)(a1 + v4) = 0;

LABEL_11:
    uint64_t v18 = a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_recordingCancellable;
    swift_beginAccess();
    if (*(void *)(v18 + 24))
    {
      sub_1DC8B9960(v18, (uint64_t)&aBlock);
      sub_1DC881A8C(&aBlock, *((uint64_t *)&v23 + 1));
      sub_1DCB871C8();
      sub_1DC8818D0((uint64_t)&aBlock);
    }
    uint64_t v24 = 0;
    long long aBlock = 0u;
    long long v23 = 0u;
    swift_beginAccess();
    sub_1DCA3B164((uint64_t)&aBlock, v18);
    swift_endAccess();
    *(unsigned char *)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_audioIsRunning) = 0;
    id v19 = *(NSObject **)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_analysisQueue);
    uint64_t v24 = j_nullsub_1;
    uint64_t v25 = 0;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v23 = sub_1DC8BDDAC;
    *((void *)&v23 + 1) = &unk_1F37FAE68;
    id v6 = _Block_copy(&aBlock);
    swift_release();
    dispatch_sync(v19, v6);
    _Block_release(v6);
    if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_16:
    swift_once();
LABEL_6:
    uint64_t v9 = sub_1DCB86FE8();
    sub_1DC89F57C(v9, (uint64_t)qword_1EAAFF810);
    id v10 = v2;
    id v11 = v2;
    uint64_t v12 = sub_1DCB86FC8();
    os_log_type_t v13 = sub_1DCB88468();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)id v14 = 138412290;
      id v15 = v2;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long aBlock = v16;
      sub_1DCB88778();
      *uint64_t v21 = v16;

      _os_log_impl(&dword_1DC873000, v12, v13, "Failed to deactivate AVAudioSession with error %@", v14, 0xCu);
      sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
      swift_arrayDestroy();
      MEMORY[0x1E01A99C0](v21, -1, -1);
      MEMORY[0x1E01A99C0](v14, -1, -1);
    }
    else
    {
    }
    os_log_type_t v2 = 0;
  }
  uint64_t v20 = *(void **)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer);
  *(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_streamAnalyzer) = 0;
}

uint64_t sub_1DCA3AA1C()
{
  uint64_t v1 = sub_1DCB87588();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DCB875B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_dispatchQueue);
  aBlock[4] = sub_1DCA3B3D8;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC9C881C;
  aBlock[3] = &unk_1F37FB160;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1DCB875A8();
  v11[1] = MEMORY[0x1E4FBC860];
  sub_1DCA3B11C((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
  sub_1DC88CF34((unint64_t *)&qword_1EAA9E720, (uint64_t *)&unk_1EAA9F660);
  sub_1DCB88928();
  MEMORY[0x1E01A74F0](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void sub_1DCA3ACC8()
{
  type metadata accessor for SNError();
  id v0 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 6, 0, 0xD000000000000018, 0x80000001DCB96940);
  sub_1DCA39FF0((uint64_t)v0);
  sub_1DCA39C98();
}

uint64_t sub_1DCA3AD60()
{
  sub_1DCB86BF8();
  sub_1DC88D5C8();
  v1();

  sub_1DCA03724(v0 + OBJC_IVAR____TtC13SoundAnalysis26SNSystemAudioAnalyzerLocal_recordingCancellable);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1DCA3AE54()
{
  sub_1DCA3AD60();

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA3AEAC()
{
  return type metadata accessor for SNSystemAudioAnalyzerLocal();
}

uint64_t type metadata accessor for SNSystemAudioAnalyzerLocal()
{
  uint64_t result = qword_1EAAA5930;
  if (!qword_1EAAA5930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCA3AEFC()
{
  uint64_t result = sub_1DCB86BF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCA3AFD4(void *a1, void *a2)
{
  return sub_1DCA37438(a1, a2);
}

uint64_t sub_1DCA3AFF8(void *a1)
{
  return sub_1DCA393C0(a1);
}

uint64_t sub_1DCA3B01C()
{
  return sub_1DCA398A0();
}

void sub_1DCA3B040()
{
  sub_1DCA377C4(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1DCA3B06C()
{
  swift_unknownObjectRelease();
  sub_1DC8C1FB4();

  return swift_deallocObject();
}

void sub_1DCA3B09C(void *a1, void *a2)
{
  sub_1DCA3900C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1DCA3B0A4()
{
  swift_unknownObjectWeakDestroy();
  sub_1DC8C1FB4();

  return swift_deallocObject();
}

void *sub_1DCA3B0D4(uint64_t a1, uint64_t a2)
{
  return sub_1DC9EA6F4(a1, a2, v2);
}

void *sub_1DCA3B0DC(uint64_t a1, void *a2)
{
  return sub_1DC9EA5FC(a1, a2, v2);
}

uint64_t sub_1DCA3B0E8(uint64_t a1, uint64_t a2)
{
  return sub_1DC9EA59C(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32));
}

uint64_t sub_1DCA3B0F8(uint64_t a1, uint64_t a2)
{
  return sub_1DC9EA594(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32));
}

uint64_t sub_1DCA3B104(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCA3B114()
{
  return swift_release();
}

uint64_t sub_1DCA3B11C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCA3B164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA41D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCA3B1CC()
{
  swift_weakDestroy();
  sub_1DC8C1FB4();

  return swift_deallocObject();
}

void sub_1DCA3B1FC(uint64_t a1, void *a2)
{
}

uint64_t sub_1DCA3B204()
{
  return sub_1DCA3A214();
}

uint64_t sub_1DCA3B20C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA3B24C(uint64_t a1)
{
  return sub_1DCA3A46C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DCA3B258()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA3B290()
{
  swift_release();
  sub_1DC8C1FB4();

  return swift_deallocObject();
}

uint64_t sub_1DCA3B2C0()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA3B318(void *a1, void *a2)
{
  return sub_1DCA839B4(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void (**)(void *, id))(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_1DCA3B34C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA3B394()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1DCA3B3C8()
{
  return sub_1DC8BDD84(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1DCA3B3D8()
{
}

uint64_t sub_1DCA3B3E4()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA3B424()
{
  return sub_1DCA38CA8(*(void *)(v0 + 24));
}

uint64_t sub_1DCA3B498()
{
  return v0 - 96;
}

uint64_t sub_1DCA3B4B4(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return v1 - 88;
}

uint64_t sub_1DCA3B4E0()
{
  return sub_1DC961050();
}

uint64_t sub_1DCA3B4EC()
{
  return sub_1DC960FC8();
}

uint64_t sub_1DCA3B4F8(uint64_t a1, double a2)
{
  uint64_t v4 = v2;
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(void *)(v7 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v9 + 8))(a1, ObjectType, v9, a2);
  if (!v3)
  {
    uint64_t v11 = qword_1EAA9CB50;
    swift_unknownObjectRetain();
    if (v11 != -1) {
      swift_once();
    }
    if (byte_1EAAFF828 == 1)
    {
      if (qword_1EAA9CFA8 != -1) {
        swift_once();
      }
      if (byte_1EAAFFB70 == 1)
      {
        uint64_t v12 = *(uint64_t (**)(uint64_t))(v9 + 16);
        uint64_t v13 = sub_1DCA3C14C();
        uint64_t v14 = v12(v13);
        if (v11) {
          return swift_unknownObjectRelease();
        }
        id v15 = (void *)v14;
        uint64_t v16 = self;
        char v28 = sub_1DCB67C0C(v16, v15);

        if ((v28 & 1) == 0)
        {
          uint64_t v23 = sub_1DCA3C14C();
          uint64_t v24 = (void *)v12(v23);
          id v25 = objc_allocWithZone((Class)SNTunableDSPGraphHost);
          id v26 = sub_1DCA3C04C(v24);
          uint64_t v27 = *(void **)(v4 + 72);
          *(void *)(v4 + 72) = v26;
        }
      }
    }
    uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(ObjectType, v7);
    uint64_t v18 = self;
    id v19 = (void *)swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1DCA3C02C;
    void aBlock[5] = v19;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1DCA3BBB8;
    aBlock[3] = &unk_1F37FAAF8;
    uint64_t v20 = _Block_copy(aBlock);
    swift_release();
    aBlock[0] = 0;
    LOBYTE(v18) = sub_1DCB6C8B8(v18, v17, v20, (uint64_t)aBlock);
    _Block_release(v20);

    id v21 = aBlock[0];
    if ((v18 & 1) == 0)
    {
      unint64_t v22 = v21;
      sub_1DCB86898();

      swift_willThrow();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DCA3B808()
{
  if (!*(unsigned char *)(v0 + 80))
  {
    *(unsigned char *)(v0 + 80) = 1;
    return (*(uint64_t (**)(void))(v0 + 56))(0);
  }
  return result;
}

uint64_t sub_1DCA3B844()
{
  if (!*(unsigned char *)(v0 + 80))
  {
    *(unsigned char *)(v0 + 80) = 2;
    return (*(uint64_t (**)(void))(v0 + 56))();
  }
  return result;
}

unint64_t sub_1DCA3B87C(unint64_t result)
{
  if (result >= 3) {
    return 3;
  }
  return result;
}

uint64_t sub_1DCA3B88C(uint64_t result)
{
  return result;
}

uint64_t sub_1DCA3B894()
{
  return sub_1DC9610E4();
}

unint64_t sub_1DCA3B89C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1DCA3B87C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCA3B8C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCA3B88C(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1DCA3B8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a7;
  *(void *)(v7 + 40) = a5;
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = a3;
  *(unsigned char *)(v7 + 80) = 0;
  *(void *)(v7 + 64) = a4;
  *(void *)(v7 + 72) = 0;
  return v7;
}

uint64_t sub_1DCA3B910(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCA3B9D8((unint64_t)sub_1DCA3C110, result, a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCA3B988(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1);
}

unint64_t sub_1DCA3B9D8(unint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(unsigned __int8 *)(v3 + 80) - 1 < 2) {
    return result;
  }
  uint64_t v5 = (void *)((uint64_t (*)(void))result)();
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x1F4188790](ObjectType);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t, void))(v6 + 16))(v5, a3, sub_1DCA3C12C);
  unint64_t v8 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DCB88CC8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_6;
    }
LABEL_12:

    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_12;
  }
LABEL_6:
  if (v9 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = *(void (**)(uint64_t))(v3 + 40);
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = MEMORY[0x1E01A7AE0](v10, v8);
      }
      else
      {
        uint64_t v12 = *(void *)(v8 + 8 * v10 + 32);
        swift_unknownObjectRetain();
      }
      ++v10;
      v11(v12);
      swift_unknownObjectRelease();
    }
    while (v9 != v10);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA3BBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1DCA3BC0C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1DCA3BC38(a1, a2, a3, a4, *(id *)(a5 + 32));
  if (v5) {
    return v7;
  }
  return result;
}

uint64_t sub_1DCA3BC38(uint64_t a1, int a2, int a3, uint64_t a4, id a5)
{
  v16[1] = *(id *)MEMORY[0x1E4F143B8];
  v16[0] = 0;
  id v6 = objc_msgSend(a5, sel_clientSampleTimeFromSampleTime_fromBox_error_, a1, a4, v16);
  id v7 = v16[0];
  if (v6)
  {
    unint64_t v8 = v6;
    id v9 = v16[0];
    objc_msgSend(v8, sel_longLongValue);

    v16[0] = 0;
    id v10 = objc_msgSend(a5, sel_clientSampleRateWithError_, v16);
    id v7 = v16[0];
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = v16[0];
      uint64_t v13 = (uint64_t)objc_msgSend(v11, sel_longLongValue);

      if (v13 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (v13 <= 0x7FFFFFFF)
      {
        return sub_1DCB88628();
      }
      __break(1u);
    }
  }
  id v15 = v7;
  sub_1DCB86898();

  return swift_willThrow();
}

uint64_t sub_1DCA3BD84()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 16))(ObjectType);
}

uint64_t sub_1DCA3BDD8()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1DCA3BE18()
{
  sub_1DCA3BDD8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNAnalyzerHost()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SNAnalyzerHost.SNAnalysisState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA3BF3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAnalyzerHost.SNAnalysisState()
{
  return &type metadata for SNAnalyzerHost.SNAnalysisState;
}

unint64_t sub_1DCA3BF78()
{
  unint64_t result = qword_1EAAA5958;
  if (!qword_1EAAA5958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAAA5958);
  }
  return result;
}

uint64_t sub_1DCA3BFC4(uint64_t a1, double a2)
{
  return sub_1DCA3B4F8(a1, a2);
}

uint64_t sub_1DCA3BFDC()
{
  return sub_1DCA3BD84();
}

uint64_t sub_1DCA3BFF4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1DCA3C02C(uint64_t a1)
{
  return sub_1DCA3B910(a1);
}

uint64_t sub_1DCA3C034(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCA3C044()
{
  return swift_release();
}

id sub_1DCA3C04C(void *a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v3 = objc_msgSend(v1, sel_initWithGraph_error_, a1, v7);
  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    sub_1DCB86898();

    swift_willThrow();
  }

  return v3;
}

uint64_t sub_1DCA3C110()
{
  return sub_1DCA3B988(v0);
}

uint64_t sub_1DCA3C12C(uint64_t a1, int a2, int a3)
{
  return sub_1DCA3BC0C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1DCA3C14C()
{
  return v0;
}

uint64_t sub_1DCA3C168()
{
  sub_1DC883FB8();
  uint64_t v2 = *v0;
  uint64_t v3 = v0[1];
  uint64_t v4 = sub_1DC886810();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = &unk_1EAAA5A10;
  *(void *)(v5 + 24) = v4;
  uint64_t v17 = sub_1DC87E988(&qword_1EAAA5A28);
  uint64_t v18 = sub_1DCA3F428(&qword_1EAAA5A30, &qword_1EAAA5A28);
  id v15 = &unk_1EAAA5A20;
  uint64_t v16 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DC8848AC();
  swift_release();
  sub_1DC8818D0((uint64_t)&v15);
  if (v1)
  {
    swift_release_n();
    return swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v6 = v0[2];
    uint64_t v7 = v0[3];
    uint64_t v8 = sub_1DC886810();
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    uint64_t v9 = sub_1DC87E988(&qword_1EAAA5A40);
    uint64_t v17 = v9;
    uint64_t v10 = sub_1DCA3F428(&qword_1EAAA5A48, &qword_1EAAA5A40);
    uint64_t v18 = v10;
    id v15 = &unk_1EAAA5A38;
    uint64_t v16 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC8848AC();
    swift_release();
    sub_1DC8818D0((uint64_t)&v15);
    swift_release();
    uint64_t v13 = v0[4];
    uint64_t v12 = v0[5];
    uint64_t v14 = sub_1DC886810();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = v12;
    uint64_t v17 = v9;
    uint64_t v18 = v10;
    id v15 = &unk_1EAAA5A50;
    uint64_t v16 = v14;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC8848AC();
    swift_release();
    sub_1DC8818D0((uint64_t)&v15);
    return swift_release_n();
  }
}

uint64_t sub_1DCA3C3D8(uint64_t *a1, int *a2)
{
  uint64_t v3 = *a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DC8D78C0;
  return v6(v3);
}

uint64_t sub_1DCA3C4B0()
{
  sub_1DC886900();
  *(void *)(v0 + 64) = v1;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC8FC064;
  return sub_1DCA3C564();
}

uint64_t sub_1DCA3C564()
{
  sub_1DC8867A8();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DCA3C5F4;
  return sub_1DC964B20();
}

uint64_t sub_1DCA3C5F4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DCA3C6D8()
{
  sub_1DC8867A8();
  uint64_t v11 = (char *)&dword_1EAA9F5B0 + dword_1EAA9F5B0;
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DCA3C780;
  uint64_t v9 = (uint64_t (*)(void))sub_1DCA3F808((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, (uint64_t)v11);
  return v9();
}

uint64_t sub_1DCA3C780()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[8] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[9] = v3;
    v7[10] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DCA3C874()
{
  sub_1DC886900();
  uint64_t v1 = (int8x16_t *)sub_1DC886810();
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 72), *(int8x16_t *)(v0 + 72), 8uLL);
  swift_release();
  uint64_t v2 = sub_1DC886810();
  *(void *)(v0 + 88) = v2;
  *(void *)(v2 + 16) = &unk_1EAAA59E0;
  *(void *)(v2 + 24) = v1;
  sub_1DCA3F834();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DCA3C96C;
  uint64_t v11 = (uint64_t (*)(void))sub_1DCA3F808((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v13);
  return v11();
}

uint64_t sub_1DCA3C96C()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[13] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[14] = v3;
    v7[15] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DCA3CA60()
{
  sub_1DC886900();
  uint64_t v1 = (int8x16_t *)sub_1DC886810();
  v0[8].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[7], v0[7], 8uLL);
  swift_release();
  sub_1DCA3F834();
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DCA3CB34;
  uint64_t v10 = (uint64_t (*)(void))sub_1DCA3F808((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12);
  return v10();
}

uint64_t sub_1DCA3CB34()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[18] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[19] = v3;
    v7[20] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DCA3CC28()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  swift_release_n();
  if (!v1) {
    swift_release();
  }
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DCA3CCB0()
{
  sub_1DC88688C();
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = (int8x16_t *)sub_1DC886810();
  v4[1] = vextq_s8(*(int8x16_t *)(v0 + 152), *(int8x16_t *)(v0 + 152), 8uLL);
  swift_release();
  swift_release();
  swift_release_n();
  swift_release();
  *uint64_t v3 = &unk_1EAAA59F0;
  v3[1] = v2;
  v3[2] = &unk_1EAAA59F8;
  v3[3] = v1;
  v3[4] = &unk_1EAAA5A00;
  v3[5] = v4;
  sub_1DC8BAB84();
  return v5();
}

uint64_t sub_1DCA3CD9C()
{
  sub_1DC886900();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  swift_release();
  swift_release();
  if (!v1) {
    swift_release();
  }
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DCA3CE48(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1DC9BEB3C;
  return v5(v2 + 16);
}

uint64_t sub_1DCA3CF24()
{
  sub_1DC8867A8();
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC9C03BC;
  return sub_1DCA3C4B0();
}

uint64_t sub_1DCA3CFC4()
{
  return sub_1DCA3C168();
}

uint64_t sub_1DCA3CFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1DC8A22D0();
  swift_defaultActor_initialize();
  sub_1DC8B9960(a1, v3 + 112);
  sub_1DCB87E48();
  sub_1DCA3F854();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v8[5] = a3;
  swift_retain();
  uint64_t v9 = sub_1DCA97784();
  *(void *)(v3 + 152) = v9;
  sub_1DCA3F854();
  sub_1DC8B9960(a1, (uint64_t)v12);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v9;
  sub_1DC8BA1CC(v12, (uint64_t)(v10 + 5));
  swift_retain_n();
  sub_1DCA97644();
  swift_release();
  swift_release();
  swift_release();
  sub_1DC8818D0(a1);
  return v3;
}

uint64_t sub_1DCA3D168(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1DCA3D238;
  return v7();
}

uint64_t sub_1DCA3D238()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 32) = v3;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DCA3D308()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return sub_1DC9029C0();
}

uint64_t sub_1DCA3D318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a5;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 32) = v7;
  uint64_t v8 = sub_1DC87E988(&qword_1EAA9FAA0);
  *uint64_t v7 = v5;
  v7[1] = sub_1DCA3D3D8;
  return MEMORY[0x1F4187DC0](v5 + 16, a4, v8);
}

uint64_t sub_1DCA3D3D8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA3D4A0()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void **)(v0 + 16);

  if (v1)
  {
    sub_1DC881A8C(*(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 24));
    sub_1DCB871C8();
  }
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DCA3D520()
{
  sub_1DC87E988(&qword_1EAA9FAA0);
  sub_1DCB87EE8();
  sub_1DC881A8C((void *)(v0 + 112), *(void *)(v0 + 136));
  sub_1DCB871C8();
  sub_1DC8818D0(v0 + 112);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1DCA3D5B4()
{
  sub_1DCA3D520();

  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for CombineSubscriptionToXPCAdapterImpl()
{
  return self;
}

uint64_t sub_1DCA3D604(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_1DC99A434((uint64_t)sub_1DCA3D620, v1);
}

void *sub_1DCA3D620()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t result = sub_1DC881A8C((void *)(*(void *)(v0 + 24) + 112), *(void *)(*(void *)(v0 + 24) + 136));
  if (v1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1DCB87248();
    sub_1DC8BAB84();
    return (void *)v3();
  }
  return result;
}

uint64_t sub_1DCA3D6A8()
{
  *(void *)(v1 + 16) = v0;
  return sub_1DC99A434((uint64_t)sub_1DCA3D6C4, v0);
}

uint64_t sub_1DCA3D6C4()
{
  sub_1DC886900();
  sub_1DC881A8C((void *)(*(void *)(v0 + 16) + 112), *(void *)(*(void *)(v0 + 16) + 136));
  sub_1DCB87218();
  sub_1DCB87248();
  sub_1DC8BAB84();
  return v1();
}

uint64_t sub_1DCA3D744()
{
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1DCA3D774(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1DC8A22D0();
  type metadata accessor for AsyncDispatchQueue();
  swift_allocObject();
  *(void *)(v5 + 64) = sub_1DCA1386C();
  long long v11 = a1[1];
  *(_OWORD *)(v5 + 16) = *a1;
  *(_OWORD *)(v5 + 32) = v11;
  *(_OWORD *)(v5 + 48) = a1[2];
  type metadata accessor for CombineSubscriptionFromXPCAdapter.AsyncState();
  uint64_t v12 = swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_defaultActor_initialize();
  *(unsigned char *)(v12 + 112) = 0;
  *(void *)(v5 + 80) = v12;
  sub_1DCB87E48();
  sub_1DCA3F814();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = 0;
  v13[3] = 0;
  v13[4] = a2;
  v13[5] = a3;
  swift_retain();
  uint64_t v14 = sub_1DCA97784();
  *(void *)(v5 + 72) = v14;
  uint64_t v15 = *(void *)(v5 + 80);
  sub_1DCA3F814();
  uint64_t v16 = (void *)swift_allocObject();
  id v16[2] = 0;
  v16[3] = 0;
  uint64_t v16[4] = v14;
  v16[5] = v15;
  void v16[6] = a4;
  v16[7] = a5;
  swift_retain_n();
  swift_retain_n();
  sub_1DCA97644();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_1DCA3D988(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1DCA3DA58;
  return v7();
}

uint64_t sub_1DCA3DA58()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 32) = v3;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DCA3DB28()
{
  sub_1DC8867A8();
  char v1 = sub_1DCB87F08();
  uint64_t v2 = *(void **)(v0 + 32);
  if (v1)
  {

    uint64_t v2 = 0;
  }
  **(void **)(v0 + 16) = v2;
  sub_1DC8BA978();
  return v3();
}

uint64_t sub_1DCA3DB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[3] = a5;
  uint64_t v9 = (void *)swift_task_alloc();
  v7[6] = v9;
  uint64_t v10 = sub_1DC87E988(&qword_1EAA9FAA0);
  *uint64_t v9 = v7;
  v9[1] = sub_1DCA3DC5C;
  return MEMORY[0x1F4187DC0](v7 + 2, a4, v10);
}

uint64_t sub_1DCA3DC5C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA3DD24()
{
  uint64_t v1 = v0[2];
  v0[7] = v1;
  if (v1) {
    return sub_1DC99A434((uint64_t)sub_1DCA3DD50, v0[3]);
  }
  else {
    return sub_1DC9029C0();
  }
}

uint64_t sub_1DCA3DD50()
{
  *(unsigned char *)(v0 + 72) = *(unsigned char *)(*(void *)(v0 + 24) + 112);
  return sub_1DC99A434((uint64_t)sub_1DCA3DD74, 0);
}

uint64_t sub_1DCA3DD74()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void **)(v0 + 56);
  if (*(unsigned char *)(v0 + 72))
  {

    sub_1DC8BA978();
    return v2();
  }
  else
  {
    uint64_t v4 = *(int **)(v0 + 32);
    id v5 = v1;
    uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1DCA3DE88;
    uint64_t v7 = *(void *)(v0 + 56);
    return v8(v7);
  }
}

uint64_t sub_1DCA3DE88()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = *(void **)(v2 + 56);
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *id v5 = v4;
  swift_task_dealloc();

  if (v0) {
  sub_1DC886854();
  }
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCA3DF88()
{
  sub_1DC8867A8();

  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DCA3DFE0()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1DC8A22D0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 56);
  sub_1DC87E988(&qword_1EAA9FAA0);
  long long v10 = *(_OWORD *)(v0 + 24);
  long long v11 = *(_OWORD *)(v0 + 40);
  sub_1DCB87EE8();
  uint64_t v7 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = v5;
  *(_OWORD *)(v8 + 40) = v10;
  *(_OWORD *)(v8 + 56) = v11;
  *(void *)(v8 + 72) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCB294C4(v4, (uint64_t)&unk_1EAAA5A80, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DCA3E15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t (*)(void))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1DC8D78C0;
  return v7();
}

uint64_t sub_1DCA3E224()
{
  sub_1DCA3DFE0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CombineSubscriptionFromXPCAdapter()
{
  return self;
}

uint64_t type metadata accessor for CombineSubscriptionFromXPCAdapter.AsyncState()
{
  return self;
}

uint64_t destroy for XPCSubscription()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for XPCSubscription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for XPCSubscription(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for XPCSubscription(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for XPCSubscription()
{
  return &type metadata for XPCSubscription;
}

uint64_t sub_1DCA3E430(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v3;
  long long v6 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v5 + 48) = v6;
  *(void *)(v5 + 64) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCA13770((uint64_t)&unk_1EAAA5990, v5);

  return swift_release();
}

uint64_t sub_1DCA3E4F0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1DCA3E510, 0, 0);
}

uint64_t sub_1DCA3E510()
{
  sub_1DC8867A8();
  sub_1DCB87218();
  uint64_t result = sub_1DCB871F8();
  uint64_t v2 = v0[2];
  if (result) {
    goto LABEL_7;
  }
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  if (!v2)
  {
LABEL_7:
    sub_1DCB87218();
    if (sub_1DCB871F8())
    {
      uint64_t v16 = *(void *)(v0[3] + 16) + **(int **)(v0[3] + 16);
      uint64_t v5 = (void *)swift_task_alloc();
      v0[6] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1DCA3E838;
      uint64_t v13 = (uint64_t (*)(void))sub_1DCA3F808((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v16);
      return v13();
    }
    else
    {
      sub_1DC8BA978();
      return v14();
    }
  }
  else
  {
    uint64_t v15 = (uint64_t (*)(uint64_t))(*(void *)v0[3] + **(int **)v0[3]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[4] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1DCA3E6E8;
    uint64_t v4 = v0[2];
    return v15(v4);
  }
}

uint64_t sub_1DCA3E6E8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    sub_1DC8BA978();
    return v10();
  }
}

uint64_t sub_1DCA3E7E0()
{
  sub_1DC8867A8();

  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DCA3E838()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    sub_1DC8BA978();
    return v10();
  }
}

uint64_t sub_1DCA3E930()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  long long v6 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v4 + 48) = v6;
  *(void *)(v4 + 64) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCA13770((uint64_t)&unk_1EAAA59A0, v4);

  return swift_release();
}

uint64_t sub_1DCA3E9FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1DCA3EA20, a1, 0);
}

uint64_t sub_1DCA3EA20()
{
  sub_1DC8867A8();
  uint64_t v1 = v0[3];
  *(unsigned char *)(v0[2] + 112) = 1;
  uint64_t v12 = *(void *)(v1 + 32) + **(int **)(v1 + 32);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DCA3E6E8;
  uint64_t v10 = (uint64_t (*)(void))sub_1DCA3F808((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12);
  return v10();
}

uint64_t sub_1DCA3EAEC(uint64_t a1)
{
  return sub_1DCA3E430(a1);
}

uint64_t sub_1DCA3EB10()
{
  return sub_1DCA3E930();
}

uint64_t sub_1DCA3EB34()
{
  return sub_1DCA3EB9C(&qword_1EAAA5978);
}

uint64_t sub_1DCA3EB68()
{
  return sub_1DCA3EB9C(&qword_1EAAA5980);
}

uint64_t sub_1DCA3EB9C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CombineSubscriptionFromXPCAdapter();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCA3EBDC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA3EC24()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0358();
  return sub_1DCA3E4F0(v3, v4);
}

uint64_t sub_1DCA3ECB0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA3ED00()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0358();
  return sub_1DCA3E9FC(v3, v4);
}

uint64_t sub_1DCA3ED90()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DCA0CA40();
  sub_1DC8BA86C();
  return sub_1DCA3D168(v3, v4, v5, v6);
}

uint64_t sub_1DCA3EE2C()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_1DC8818D0(v0 + 40);

  return swift_deallocObject();
}

uint64_t sub_1DCA3EE74()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DCA0CA40();
  sub_1DC8BA86C();
  return sub_1DCA3D318(v3, v4, v5, v6, v7);
}

uint64_t sub_1DCA3EF14()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8D6930;
  return sub_1DCAA0290();
}

uint64_t sub_1DCA3EFC0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8D78C0;
  return sub_1DC8EB35C();
}

uint64_t sub_1DCA3F06C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA3F0A4()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCA3F13C()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCA3F1D4()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8F0358();
  return sub_1DC8D7670();
}

uint64_t sub_1DCA3F25C()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCA3F2F4()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC8BAA9C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8F040C();
  sub_1DC8BA86C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1DCA3F394()
{
  sub_1DC886900();
  sub_1DC8BAA9C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8F040C();
  return sub_1DC8D7498();
}

uint64_t sub_1DCA3F428(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCA3F494()
{
  sub_1DC886900();
  sub_1DC8BAA9C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D6930;
  sub_1DC8F040C();
  return sub_1DC8D7498();
}

uint64_t sub_1DCA3F52C()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D6930;
  sub_1DCA0CA40();
  sub_1DC8BA86C();
  return sub_1DCA3D988(v3, v4, v5, v6);
}

uint64_t sub_1DCA3F5C8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA3F618(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)sub_1DC8F01B8(v9);
  *uint64_t v10 = v11;
  v10[1] = sub_1DC8D78C0;
  return sub_1DCA3DB98(a1, v3, v4, v5, v6, v8, v7);
}

uint64_t sub_1DCA3F6E8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA3F738()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_1DC8F01B8(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1DC8D78C0;
  return sub_1DCA3E15C(v2, v3, v4, v0 + 32);
}

uint64_t sub_1DCA3F808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t sub_1DCA3F814()
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, 1, 1, v1);
}

uint64_t sub_1DCA3F834()
{
  return swift_retain();
}

uint64_t sub_1DCA3F854()
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, 1, 1, v1);
}

uint64_t sub_1DCA3F874()
{
  unint64_t v0 = sub_1DCB88D48();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

void sub_1DCA3F8C0(uint64_t a1, unint64_t a2)
{
  uint64_t v51 = sub_1DCB886E8();
  uint64_t v5 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v55 = 44;
  unint64_t v56 = 0xE100000000000000;
  unint64_t v53 = &v55;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DCA42708(0x7FFFFFFFFFFFFFFFLL, 1u, sub_1DCA42EB4, (uint64_t)v52, a1, a2);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v45 = v2;
  if (v9)
  {
    unint64_t v55 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v50 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA0148);
    unsigned int v49 = *MEMORY[0x1E4F280B8];
    id v47 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v48 = (void (**)(char *, void, uint64_t))(v5 + 104);
    uint64_t v46 = v8;
    uint64_t v11 = (uint64_t *)(v8 + 56);
    uint64_t v12 = v51;
    while (1)
    {
      uint64_t v14 = *(v11 - 3);
      uint64_t v13 = *(v11 - 2);
      uint64_t v15 = *(v11 - 1);
      uint64_t v16 = *v11;
      swift_bridgeObjectRetain();
      MEMORY[0x1E01A69A0](v14, v13, v15, v16);
      swift_bridgeObjectRetain();
      id v17 = sub_1DC91A738();
      (*v48)(v7, v49, v12);
      uint64_t v18 = sub_1DCB886D8();
      char v20 = v19;
      (*v47)(v7, v12);
      if ((v20 & 1) != 0 || !objc_msgSend(v17, sel_isAtEnd)) {
        break;
      }
      id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&v18);
      swift_bridgeObjectRelease();

      if (!v21) {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      v11 += 4;
      if (!--v9)
      {
        unint64_t v22 = v55;
        swift_bridgeObjectRelease();
        uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();

LABEL_25:
    sub_1DC884E74();
    sub_1DC883884();
    *id v38 = 0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_9:
    if (v22 >> 62) {
      goto LABEL_29;
    }
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23)
    {
      while (1)
      {
        uint64_t v54 = v10;
        uint64_t v10 = &v54;
        sub_1DC89822C();
        if (v23 < 0) {
          break;
        }
        uint64_t v24 = 0;
        id v25 = v54;
        unint64_t v26 = v22 & 0xC000000000000001;
        uint64_t v51 = v22;
        while (v23 != v24)
        {
          if (v26) {
            id v27 = (id)MEMORY[0x1E01A7AE0](v24, v22);
          }
          else {
            id v27 = *(id *)(v22 + 8 * v24 + 32);
          }
          id v28 = v27;
          objc_msgSend(v28, sel_doubleValue);
          id v30 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v29);
          id v31 = objc_msgSend(v28, sel_longLongValue);
          if (v31 != objc_msgSend(v30, sel_longLongValue)
            || (objc_msgSend(v28, sel_doubleValue), double v33 = v32, objc_msgSend(v30, sel_doubleValue), v33 != v34))
          {

LABEL_27:
            type metadata accessor for SNError();
            unint64_t v55 = 0;
            unint64_t v56 = 0xE000000000000000;
            sub_1DCB88A98();
            swift_bridgeObjectRelease();
            unint64_t v55 = 0xD000000000000015;
            unint64_t v56 = 0x80000001DCB91A90;
            id v39 = objc_msgSend(v28, sel_description);
            sub_1DCB87938();

            sub_1DCB87A18();
            swift_bridgeObjectRelease();
            unint64_t v40 = v56;
            sub_1DC8E7B68();
            sub_1DCA14B2C(v41, v42, 1, 0, v43, v40);
            swift_bridgeObjectRelease();
            swift_willThrow();
            swift_bridgeObjectRelease();
            swift_release();

            return;
          }
          uint64_t v10 = objc_msgSend(v28, sel_isEqual_, v30);

          if (!v10) {
            goto LABEL_27;
          }
          objc_msgSend(v28, sel_doubleValue);
          uint64_t v36 = v35;

          uint64_t v54 = v25;
          unint64_t v37 = v25[2];
          if (v37 >= v25[3] >> 1)
          {
            uint64_t v10 = &v54;
            sub_1DC89822C();
            id v25 = v54;
          }
          ++v24;
          v25[2] = v37 + 1;
          v25[v37 + 4] = v36;
          unint64_t v22 = v51;
          if (v23 == v24) {
            goto LABEL_23;
          }
        }
        __break(1u);
LABEL_29:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1DCB88CC8();
        swift_bridgeObjectRelease();
        if (!v23) {
          goto LABEL_23;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_23:
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1DCA3FE9C(uint64_t a1, unint64_t a2)
{
  sub_1DCA3F8C0(a1, a2);
  if (!v3)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      uint64_t v12 = MEMORY[0x1E4FBC860];
      sub_1DC89827C();
      uint64_t v7 = 0;
      uint64_t v2 = v12;
      unint64_t v8 = *(void *)(v12 + 16);
      do
      {
        double v9 = *(double *)(v5 + 8 * v7 + 32);
        if (v8 >= *(void *)(v12 + 24) >> 1) {
          sub_1DC89827C();
        }
        ++v7;
        float v10 = v9;
        *(void *)(v12 + 16) = v8 + 1;
        *(float *)(v12 + 4 * v8++ + 32) = v10;
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
  }
  return v2;
}

void sub_1DCA3FFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  switch((char)a2)
  {
    case 1:
      sub_1DCA4300C(a1, a2, a3, a4, a5);
      if (!sub_1DCA42F1C()) {
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = v24;
      *(void *)(a1 + 24) = v25;
      break;
    case 2:
      sub_1DCA4300C(a1, a2, a3, a4, a5);
      if (!sub_1DCA42F1C()) {
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = v24;
      *(void *)(a1 + 40) = v25;
      break;
    case 3:
      sub_1DCA4300C(a1, a2, a3, a4, a5);
      if (!sub_1DCA42F1C()) {
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = v24;
      *(void *)(a1 + 56) = v25;
      break;
    case 4:
      uint64_t v7 = sub_1DC8D92A0(a3);
      if (!v5)
      {
        unint64_t v8 = (void *)v7;
        sub_1DCA89A70();
        id v9 = objc_msgSend(v8, sel_integerValue);

        *(void *)(a1 + 64) = v9;
      }
      break;
    case 5:
      uint64_t v10 = sub_1DC8D92A0(a3);
      if (!v5)
      {
        uint64_t v11 = (void *)v10;
        sub_1DCA89970();
        objc_msgSend(v11, sel_doubleValue);
        double v21 = v20;

        float v22 = v21;
        *(float *)(a1 + 72) = v22;
      }
      break;
    case 6:
      uint64_t v12 = sub_1DC8D9224(a3);
      if (!v5)
      {
        uint64_t v14 = sub_1DCA3FE9C(v12, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 80) = v14;
      }
      break;
    case 7:
      uint64_t v15 = sub_1DC8D9224(a3);
      if (!v5)
      {
        uint64_t v17 = sub_1DCA3FE9C(v15, v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 88) = v17;
      }
      break;
    case 8:
      uint64_t v18 = sub_1DC8D9224(a3);
      if (!v5)
      {
        uint64_t v23 = sub_1DCA3FE9C(v18, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 96) = v23;
      }
      break;
    default:
      sub_1DCA4300C(a1, a2, a3, a4, a5);
      if (sub_1DCA42F1C())
      {
        swift_bridgeObjectRelease();
        *(void *)a1 = v24;
        *(void *)(a1 + 8) = v25;
      }
      else
      {
LABEL_10:
        sub_1DC8DA330();
        sub_1DC883884();
        swift_willThrow();
      }
      break;
  }
}

uint64_t sub_1DCA40284(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v21 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
LABEL_5:
  uint64_t v12 = *(void *)(a2 + 56);
  unint64_t v13 = (void *)(*(void *)(a2 + 48) + 16 * v11);
  uint64_t v14 = v13[1];
  *(void *)&long long v22 = *v13;
  *((void *)&v22 + 1) = v14;
  sub_1DC87E9DC(v12 + 32 * v11, (uint64_t)v23);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1DCA42E20((uint64_t)&v22, (uint64_t)v24);
    if (!v24[1]) {
      return swift_release();
    }
    sub_1DC87E9CC(&v25, &v22);
    uint64_t v17 = sub_1DCA3F874();
    if (v17 != 9)
    {
      sub_1DCA3FFA8(v26, v17, (uint64_t)&v22, v18, v19);
      if (v2)
      {
        sub_1DC8818D0((uint64_t)&v22);
        return swift_release();
      }
    }
    uint64_t result = sub_1DC8818D0((uint64_t)&v22);
    if (v6) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v15 < v7)
    {
      unint64_t v16 = *(void *)(v21 + 8 * v15);
      if (v16) {
        goto LABEL_9;
      }
      v9 += 2;
      if (v15 + 1 >= v7)
      {
        int64_t v9 = v15;
        goto LABEL_14;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v9);
      if (v16)
      {
        ++v15;
LABEL_9:
        unint64_t v6 = (v16 - 1) & v16;
        unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
        int64_t v9 = v15;
        goto LABEL_5;
      }
      if (v15 + 2 < v7) {
        break;
      }
    }
LABEL_14:
    unint64_t v6 = 0;
    memset(v23, 0, sizeof(v23));
    long long v22 = 0u;
  }
  unint64_t v16 = *(void *)(v21 + 8 * (v15 + 2));
  if (v16)
  {
    v15 += 2;
    goto LABEL_9;
  }
  int64_t v20 = v15 + 3;
  if (v15 + 3 >= v7)
  {
    int64_t v9 = v15 + 2;
    goto LABEL_14;
  }
  unint64_t v16 = *(void *)(v21 + 8 * v20);
  if (v16)
  {
    v15 += 3;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v7)
    {
      int64_t v9 = v7 - 1;
      goto LABEL_14;
    }
    unint64_t v16 = *(void *)(v21 + 8 * v15);
    ++v20;
    if (v16) {
      goto LABEL_9;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1DCA404D0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAA9D240 != -1) {
    swift_once();
  }
  uint64_t v2 = xmmword_1EAAFF990;
  if (byte_1EAAFF9B8)
  {
    id v3 = (id)xmmword_1EAAFF990;
    sub_1DC87E988(&qword_1EAA9DF60);
    return swift_willThrowTypedImpl();
  }
  else
  {
    int v6 = DWORD2(xmmword_1EAAFF990);
    uint64_t v5 = qword_1EAAFF9A0;
    uint64_t v7 = qword_1EAAFF9A8;
    uint64_t v8 = qword_1EAAFF9B0;
    *(void *)a1 = 0x6F696475615F6E69;
    *(void *)(a1 + 8) = 0xE800000000000000;
    *(void *)(a1 + 16) = 0x65746174735F6E69;
    *(void *)(a1 + 24) = 0xE800000000000000;
    strcpy((char *)(a1 + 32), "out_features");
    *(unsigned char *)(a1 + 45) = 0;
    *(_WORD *)(a1 + 46) = -5120;
    *(void *)(a1 + 48) = 0x746174735F74756FLL;
    *(void *)(a1 + 56) = 0xE900000000000065;
    *(void *)(a1 + 64) = v2;
    *(_DWORD *)(a1 + 72) = v6;
    *(void *)(a1 + 80) = v5;
    *(void *)(a1 + 88) = v7;
    *(void *)(a1 + 96) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1DCA40614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DCA404D0((uint64_t)__src);
  if (!v2)
  {
    memcpy(v13, __src, sizeof(v13));
    uint64_t result = sub_1DCA40284((uint64_t)v13, a1);
    long long v6 = *(_OWORD *)&v13[16];
    long long v7 = *(_OWORD *)&v13[32];
    long long v8 = *(_OWORD *)&v13[48];
    uint64_t v9 = *(void *)&v13[64];
    int v10 = *(_DWORD *)&v13[72];
    uint64_t v11 = *(void *)&v13[96];
    long long v12 = *(_OWORD *)&v13[80];
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(_OWORD *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 32) = v7;
    *(_OWORD *)(a2 + 48) = v8;
    *(void *)(a2 + 64) = v9;
    *(_DWORD *)(a2 + 72) = v10;
    *(_OWORD *)(a2 + 80) = v12;
    *(void *)(a2 + 96) = v11;
  }
  return result;
}

uint64_t sub_1DCA40714(uint64_t a1)
{
  sub_1DC97F9DC((long long *)(a1 + 24), (uint64_t)&v15);
  uint64_t v2 = sub_1DC97F9DC(&v15, (uint64_t)&v17);
  if (v18 > 0xFDu
    || (sub_1DCA42F70(v2, v3, v4, v5, v6, v7, v8, v9, v15, *((uint64_t *)&v15 + 1), v16, v17), !v12)
    || (sub_1DC980508(v19, (uint64_t)v20), sub_1DC980508(v20, (uint64_t)&v21), v22)
    || *(void *)(v21 + 16) != 2)
  {
LABEL_13:
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC931D18(v13, v14, (uint64_t)"expected constraint: <NCHAN>x<NSAMPLES> (NCHAN is in range [1, 1])");
    return swift_willThrow();
  }
  uint64_t result = sub_1DCADBD50(v21, 0);
  if (v1) {
    return result;
  }
  if (result == v11)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (__OFSUB__(v11, 1))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  BOOL v12 = result == 1 && v11 == 2;
  if (!v12) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1DCA4080C(uint64_t a1, uint64_t a2)
{
  sub_1DC97F9DC((long long *)(a2 + 24), (uint64_t)&v20);
  uint64_t v4 = sub_1DC97F9DC(&v20, (uint64_t)&v22);
  if (v23 > 0xFDu
    || (sub_1DCA42F70(v4, v5, v6, v7, v8, v9, v10, v11, v20, *((uint64_t *)&v20 + 1), v21, v22), !v15)
    || (sub_1DC980508(v24, (uint64_t)v25), sub_1DC980508(v25, (uint64_t)&v26), v27)
    || (uint64_t v12 = v26, *(void *)(v26 + 16) != 3))
  {
LABEL_13:
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC931D18(v16, v17, (uint64_t)"expected constraint: <NCHAN>x<FILTERS>x<NHOPS> where NCHAN is in range [1, 1], FILTERS is in range [32, 32]");
    return swift_willThrow();
  }
  uint64_t result = sub_1DCADBD50(v26, 0);
  if (v2) {
    return result;
  }
  if (result == v14)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (__OFSUB__(v14, 1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  BOOL v15 = result == 1 && v14 == 2;
  if (!v15) {
    goto LABEL_13;
  }
  uint64_t result = sub_1DCADBD50(v12, 1);
  if (result == v18) {
    goto LABEL_25;
  }
  if (__OFSUB__(v18, 1))
  {
LABEL_26:
    __break(1u);
    return result;
  }
  if (result != a1 || v18 - 1 != a1) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1DCA40954(uint64_t result, uint64_t a2)
{
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v4 = sub_1DCB4EFD4(result);
  uint64_t result = sub_1DCA16CD0(v4, 4);
  if (v2) {
    return result;
  }
  uint64_t v5 = result;
  sub_1DC97F9DC((long long *)(a2 + 24), (uint64_t)&v13);
  sub_1DC97F9DC(&v13, (uint64_t)&v14);
  if (v15 > 0xFDu) {
    goto LABEL_14;
  }
  long long v16 = v14;
  unsigned __int8 v17 = v15;
  if (v14 != 1) {
    goto LABEL_14;
  }
  sub_1DC980508((uint64_t *)&v16 + 1, (uint64_t)v18);
  sub_1DC980508(v18, (uint64_t)&v19);
  if (v20) {
    goto LABEL_14;
  }
  uint64_t v6 = v19;
  if (*(void *)(v19 + 16) != 2) {
    goto LABEL_14;
  }
  uint64_t result = sub_1DCADBD50(v19, 1);
  if (result == v7) {
    goto LABEL_26;
  }
  if (__OFSUB__(v7, 1))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (result != v5 || v7 - 1 != v5) {
    goto LABEL_14;
  }
  uint64_t result = sub_1DCADBD50(v6, 0);
  if (result == v11) {
    goto LABEL_28;
  }
  if (__OFSUB__(v11, 1))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  if (result != 1 || v11 != 2)
  {
LABEL_14:
    type metadata accessor for SNError();
    sub_1DCB88A98();
    sub_1DC8E7B68();
    sub_1DCB87A18();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DC8E7B68();
    sub_1DCA14B2C(0xD000000000000017, v9, 1, 0, v10, 0xE000000000000000);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA40BC8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1DC97EDFC(a2);
  if (v2) {
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = v5;
  uint64_t v8 = sub_1DCA176EC(*(void *)(a1[12] + 16), *(void *)(a1[10] + 16), *(void *)(a1[11] + 16));
  if (*(void *)(v6 + 16) != 2 || *(void *)(v7 + 16) != 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC931D18(v23, v24, (uint64_t)"expected 2 input features, 2 output features");
    return swift_willThrow();
  }
  uint64_t v69 = v8;
  uint64_t v74 = v7;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v77 = v6;
  uint64_t v11 = v6 + 32;
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  while (1)
  {
    char v14 = v9;
    uint64_t v15 = v11 + v10;
    uint64_t v16 = *(void *)(v11 + v10);
    uint64_t v17 = *(void *)(v11 + v10 + 8);
    char v18 = *(unsigned char *)(v11 + v10 + 16);
    uint64_t v20 = *(void *)(v15 + 24);
    uint64_t v19 = *(void *)(v15 + 32);
    LODWORD(v15) = *(unsigned __int8 *)(v15 + 40);
    v93[0] = v16;
    v93[1] = v17;
    char v94 = v18;
    uint64_t v95 = v20;
    uint64_t v96 = v19;
    int v99 = v15;
    char v97 = v15;
    BOOL v21 = v16 == v13 && v17 == v12;
    if (v21 || (sub_1DCB89018() & 1) != 0) {
      break;
    }
    char v9 = 1;
    uint64_t v10 = 48;
    if (v14)
    {
      sub_1DC88CCDC();
      sub_1DC883884();
      *long long v22 = 4;
      swift_willThrow();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v70 = v19;
  sub_1DC937878(v20, v19, v99);
  uint64_t v25 = *(void *)(v77 + 16);
  if (!v25)
  {
LABEL_24:
    sub_1DC88CCDC();
    sub_1DC883884();
    *uint64_t v36 = 4;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_1DC97FA28(v20, v70, v99);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = 0;
  uint64_t v28 = a1[2];
  uint64_t v27 = a1[3];
  while (1)
  {
    uint64_t v29 = *(void *)(v77 + v26 + 40);
    sub_1DCA42FB0();
    v88[0] = v30;
    v88[1] = v29;
    char v89 = v31;
    uint64_t v75 = v33;
    uint64_t v76 = v32;
    uint64_t v90 = v33;
    uint64_t v91 = v32;
    int v98 = v34;
    char v92 = v34;
    BOOL v35 = v30 == v28 && v29 == v27;
    if (v35 || (sub_1DCA42FEC() & 1) != 0) {
      break;
    }
    v26 += 48;
    if (!--v25) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DC937878(v75, v76, v98);
  uint64_t v37 = *(void *)(v74 + 16);
  if (!v37)
  {
LABEL_33:
    sub_1DC88CCDC();
    uint64_t v48 = sub_1DC883884();
    sub_1DCA42F8C(v48, v49);
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_1DC97FA28(v20, v70, v99);
    swift_bridgeObjectRelease();
    uint64_t v50 = v75;
    uint64_t v51 = v76;
    unsigned __int8 v52 = v98;
LABEL_43:
    sub_1DC97FA28(v50, v51, v52);
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  uint64_t v38 = 0;
  uint64_t v40 = a1[4];
  uint64_t v39 = a1[5];
  while (1)
  {
    uint64_t v41 = *(void *)(v74 + v38 + 40);
    sub_1DCA42FB0();
    v83[0] = v42;
    v83[1] = v41;
    char v84 = v43;
    uint64_t v71 = v45;
    uint64_t v72 = v44;
    uint64_t v85 = v45;
    uint64_t v86 = v44;
    unsigned __int8 v73 = v46;
    unsigned __int8 v87 = v46;
    BOOL v47 = v42 == v40 && v41 == v39;
    if (v47 || (sub_1DCA42FEC() & 1) != 0) {
      break;
    }
    v38 += 48;
    if (!--v37) {
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DC937878(v71, v72, v73);
  uint64_t v53 = *(void *)(v74 + 16);
  if (!v53)
  {
LABEL_42:
    sub_1DC88CCDC();
    uint64_t v65 = sub_1DC883884();
    sub_1DCA42F8C(v65, v66);
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_1DC97FA28(v20, v70, v99);
    swift_bridgeObjectRelease();
    sub_1DC97FA28(v75, v76, v98);
    swift_bridgeObjectRelease();
    uint64_t v50 = v71;
    uint64_t v51 = v72;
    unsigned __int8 v52 = v73;
    goto LABEL_43;
  }
  uint64_t v54 = 0;
  while (1)
  {
    uint64_t v55 = *(void *)(v74 + v54 + 40);
    sub_1DCA42FB0();
    v78[0] = v57;
    v78[1] = v55;
    char v79 = v58;
    uint64_t v60 = v59;
    uint64_t v80 = v59;
    uint64_t v81 = v61;
    uint64_t v68 = v61;
    unsigned __int8 v67 = v62;
    unsigned __int8 v82 = v62;
    BOOL v64 = v57 == v63 && v55 == v56;
    if (v64 || (sub_1DCB89018() & 1) != 0) {
      break;
    }
    v54 += 48;
    if (!--v53) {
      goto LABEL_42;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DC937878(v60, v68, v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCA40714((uint64_t)v93);
  swift_bridgeObjectRelease();
  sub_1DC97FA28(v20, v70, v99);
  sub_1DCA40954(v69, (uint64_t)v88);
  swift_bridgeObjectRelease();
  sub_1DC97FA28(v75, v76, v98);
  sub_1DCA4080C(v69, (uint64_t)v83);
  swift_bridgeObjectRelease();
  sub_1DC97FA28(v71, v72, v73);
  sub_1DCA40954(v69, (uint64_t)v78);
  swift_bridgeObjectRelease();
  return sub_1DC97FA28(v60, v68, v67);
}

uint64_t type metadata accessor for EBankCustomModelUtils()
{
  return self;
}

objc_class *sub_1DCA411B4(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for EBankCustomModelUtils();
  id v8 = v4;
  sub_1DCA40614(a2, (uint64_t)v11);
  swift_bridgeObjectRelease();
  if (v3)
  {
  }
  else
  {
    sub_1DCA40BC8(v11, a1);

    id v9 = objc_allocWithZone(ObjectType);
    uint64_t ObjectType = (objc_class *)sub_1DCA4136C(v11);
  }
  swift_getObjectType();
  sub_1DCA43024();
  return ObjectType;
}

id sub_1DCA4136C(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  memcpy(&v1[OBJC_IVAR____SNEBankCustomModel_configuration], a1, 0x68uLL);
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[11];
  uint64_t v7 = v1;
  sub_1DCA42D98((uint64_t)a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DCA17A68(v8);
  uint64_t v16 = ObjectType;
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCA42D10((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v14 = sub_1DCA17A68(v5);
    uint64_t v12 = sub_1DCA17A68(v6);
    sub_1DCA42D10((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = (uint64_t *)&v7[OBJC_IVAR____SNEBankCustomModel_coefAllocations];
    *uint64_t v13 = v10;
    v13[1] = v14;
    void v13[2] = v12;

    v15.receiver = v7;
    v15.super_class = ObjectType;
    return objc_msgSendSuper2(&v15, sel_init);
  }
}

uint64_t sub_1DCA41574(void *a1)
{
  uint64_t v3 = v1;
  id v4 = a1;
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v3 + OBJC_IVAR____SNEBankCustomModel_configuration;
  id v6 = sub_1DC97ED7C(a1);
  if (v2) {
    return (uint64_t)v4;
  }
  uint64_t v7 = v6;
  id v8 = sub_1DC97ED7C(v4);
  sub_1DCA790EC(v7);
  sub_1DCA790EC(v8);
  uint64_t v9 = sub_1DCA176EC(*(void *)(*(void *)(v5 + 96) + 16), *(void *)(*(void *)(v5 + 80) + 16), *(void *)(*(void *)(v5 + 88) + 16));
  uint64_t v10 = v9;
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v9 > 0x7FFFFFFF)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    sub_1DC87E988(&qword_1EAA9C6B8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v69;
    uint64_t v64 = *(void *)(v5 + 40);
    *(void *)(inited + 32) = *(void *)(v5 + 32);
    *(void *)(inited + 40) = v64;
    uint64_t v65 = self;
    swift_bridgeObjectRetain();
    *(void *)(inited + 48) = objc_msgSend(v65, sel_featureValueWithMultiArray_, v70);
    uint64_t v66 = *(void *)(v5 + 56);
    *(void *)(inited + 56) = *(void *)(v5 + 48);
    *(void *)(inited + 64) = v66;
    swift_bridgeObjectRetain();
    *(void *)(inited + 72) = objc_msgSend(v65, sel_featureValueWithMultiArray_, v68);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA18E8);
    sub_1DCB877D8();
    sub_1DC9615EC();
    swift_bridgeObjectRelease();
    id v67 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
    id v4 = sub_1DC99F66C();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return (uint64_t)v4;
  }
  uint64_t v11 = sub_1DCB4EFD4(v9);
  type metadata accessor for FixedAddressMutableRawBuffer();
  swift_allocObject();
  uint64_t v12 = sub_1DCABE73C(v11);
  sub_1DCB883F8();
  uint64_t v14 = v3 + OBJC_IVAR____SNEBankCustomModel_coefAllocations;
  uint64_t v15 = *(void *)(v3 + OBJC_IVAR____SNEBankCustomModel_coefAllocations);
  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____SNEBankCustomModel_coefAllocations + 8);
  uint64_t v17 = v12;
  uint64_t v18 = *(void *)(v14 + 16);
  float v19 = *(float *)(v5 + 72);
  uint64_t v77 = *(void *)(v5 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCA17814(v15, v16, v18, v77, v17, (uint64_t)__src, v19);
  swift_release();
  swift_release();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  id v20 = objc_msgSend(v7, sel_shape);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v74 = sub_1DCB87C38();

  id v21 = objc_msgSend(v7, sel_shape);
  unint64_t v22 = sub_1DCB87C38();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v23 - 1;
  if (__OFSUB__(v23, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = v74;
    sub_1DC8A42E0(v24, (v74 & 0xC000000000000001) == 0, v74);
    if ((v74 & 0xC000000000000001) == 0)
    {
      id v25 = *(id *)(v74 + 8 * v24 + 32);
      goto LABEL_11;
    }
  }
  id v25 = (id)MEMORY[0x1E01A7AE0](v24, v23);
LABEL_11:
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t)objc_msgSend(v26, sel_integerValue);

  if (v27 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v27 > 0x7FFFFFFF)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v28 = (int)sub_1DCB4F0C0((uint64_t)__dst, v27);
  uint64_t v75 = v10 * v28;
  sub_1DC87E988(&qword_1EAA9C6C0);
  uint64_t v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1DCBB9440;
  *(void *)(v29 + 32) = 1;
  *(void *)(v29 + 40) = v10;
  *(void *)(v29 + 48) = v28;
  uint64_t v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = xmmword_1DCBB9440;
  *(void *)(v30 + 32) = v75;
  *(void *)(v30 + 40) = 1;
  *(void *)(v30 + 48) = v10;
  uint64_t v31 = sub_1DCB4EFD4(v10);
  uint64_t v32 = sub_1DCA16CD0(v31, 4);
  sub_1DCA7B4C4(v30);
  sub_1DCA42FD8();
  if (!v55)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v34 = sub_1DCA42FC0(v33);
  id v70 = sub_1DCA78FEC(v34, v35, v36, v37, (id)v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = swift_initStackObject();
  long long v69 = xmmword_1DCBBCDA0;
  *(_OWORD *)(v38 + 16) = xmmword_1DCBBCDA0;
  *(void *)(v38 + 32) = 1;
  *(void *)(v38 + 40) = v32;
  uint64_t v39 = swift_initStackObject();
  *(_OWORD *)(v39 + 16) = xmmword_1DCBBCDA0;
  *(void *)(v39 + 32) = v32;
  *(void *)(v39 + 40) = 1;
  sub_1DCA7B4C4(v39);
  sub_1DCA42FD8();
  if (v55)
  {
    uint64_t v41 = sub_1DCA42FC0(v40);
    id v68 = sub_1DCA78FEC(v41, v42, v43, v44, (id)v39);
    swift_setDeallocating();
    uint64_t v45 = swift_setDeallocating();
    MEMORY[0x1F4188790](v45);
    sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
    sub_1DCB883F8();
    uint64_t v71 = *(void *)(v78 + 16);
    if (v71)
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = 0;
      uint64_t v47 = MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v48 = v47;
        uint64_t v72 = v46;
        uint64_t v49 = v78 + 8 * v46;
        uint64_t v50 = *(void *)(*(void *)(v49 + 32) + 16);
        uint64_t v51 = *(void *)(v47 + 16);
        if (__OFADD__(v51, v50)) {
          goto LABEL_47;
        }
        uint64_t v76 = *(void *)(v49 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!swift_isUniquelyReferenced_nonNull_native()
          || (uint64_t v73 = v48, v51 + v50 > *(void *)(v48 + 24) >> 1))
        {
          sub_1DCA72BE4();
          uint64_t v73 = v52;
        }
        if (*(void *)(v76 + 16))
        {
          uint64_t v47 = v73;
          uint64_t v53 = *(void *)(v73 + 16);
          if ((*(void *)(v73 + 24) >> 1) - v53 < v50) {
            goto LABEL_50;
          }
          uint64_t v54 = (void *)(v73 + 4 * v53 + 32);
          BOOL v55 = v76 + 32 >= (unint64_t)v54 + 4 * v50 || (unint64_t)v54 >= v76 + 32 + 4 * v50;
          if (!v55) {
            goto LABEL_54;
          }
          memcpy(v54, (const void *)(v76 + 32), 4 * v50);
          if (v50)
          {
            uint64_t v56 = *(void *)(v73 + 16);
            BOOL v57 = __OFADD__(v56, v50);
            uint64_t v58 = v56 + v50;
            if (v57) {
              goto LABEL_51;
            }
            *(void *)(v73 + 16) = v58;
          }
        }
        else
        {
          uint64_t v47 = v73;
          if (v50) {
            goto LABEL_48;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v46 = v72 + 1;
        if (v71 == v72 + 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
      }
    }
    uint64_t v73 = MEMORY[0x1E4FBC860];
LABEL_37:
    uint64_t v59 = swift_bridgeObjectRelease();
    if (*(void *)(v73 + 16) >> 61) {
      goto LABEL_53;
    }
    uint64_t v60 = MEMORY[0x1F4188790](v59);
    MEMORY[0x1F4188790](v60);
    sub_1DCB88408();
    uint64_t v61 = swift_bridgeObjectRelease();
    uint64_t v62 = MEMORY[0x1F4188790](v61);
    MEMORY[0x1F4188790](v62);
    sub_1DCB88408();
    goto LABEL_41;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA4204C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = a2 - a1;
  if (!a1) {
    uint64_t v6 = 0;
  }
  if (v4)
  {
    if (v6 == v5 - v4) {
      return sub_1DCB88778();
    }
  }
  else if (!v6)
  {
    return sub_1DCB88778();
  }
  sub_1DC96EDAC();
  swift_allocError();
  *id v8 = 0;
  return swift_willThrow();
}

uint64_t sub_1DCA420D0@<X0>(float32x4_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1) {
    uint64_t v6 = (a2 - (uint64_t)a1) / 4;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t result = sub_1DCAF3014(a1, v6, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1DCA42114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = MEMORY[0x1E01A6B80](*(void *)(*(void *)(a3 + 48) + 16), *(void *)(*(void *)(a3 + 48) + 24));
  return sub_1DCABE230(v5, v6, a1, a2);
}

void sub_1DCA42230()
{
}

uint64_t type metadata accessor for EBankCustomModel()
{
  return self;
}

uint64_t destroy for EBankCustomModelUtils.Configuration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EBankCustomModelUtils.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EBankCustomModelUtils.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for EBankCustomModelUtils.Configuration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for EBankCustomModelUtils.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EBankCustomModelUtils.Configuration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EBankCustomModelUtils.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EBankCustomModelUtils.Configuration()
{
  return &type metadata for EBankCustomModelUtils.Configuration;
}

uint64_t sub_1DCA426C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_1DCB89018() & 1;
  }
}

uint64_t sub_1DCA42708(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v53[3] = a4;
  if (a1 < 0) {
    goto LABEL_38;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v45 = (uint64_t *)(v10 + 16);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v33 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v33 = 11;
    }
    sub_1DCA42B58(v33 | (v11 << 16), v50, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_36;
  }
  uint64_t v44 = a1;
  unint64_t v51 = 4 * v12;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v53[0] = sub_1DCB87AA8();
    v53[1] = v17;
    char v18 = a3(v53);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      unint64_t v14 = sub_1DCB879D8();
      goto LABEL_21;
    }
    int v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14) {
        goto LABEL_38;
      }
      uint64_t v21 = sub_1DCB87AB8();
      uint64_t v46 = v23;
      uint64_t v47 = v22;
      uint64_t v48 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCA73C68(0, *(void *)(v13 + 16) + 1, 1, v13, v24, v25);
        uint64_t v13 = v31;
      }
      unint64_t v28 = *(void *)(v13 + 16);
      unint64_t v27 = *(void *)(v13 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1DCA73C68(v27 > 1, v28 + 1, 1, v13, v24, v25);
        uint64_t v13 = v32;
      }
      *(void *)(v13 + 16) = v28 + 1;
      uint64_t v29 = (void *)(v13 + 32 * v28);
      v29[4] = v21;
      v29[5] = v48;
      v29[6] = v47;
      v29[7] = v46;
      uint64_t *v45 = v13;
    }
    uint64_t v30 = sub_1DCB879D8();
    unint64_t v14 = v30;
    *(void *)(v50 + 16) = v30;
    if ((v20 & 1) == 0 && *(void *)(v13 + 16) == v44) {
      break;
    }
    unint64_t v15 = v30;
    unint64_t v16 = v30;
LABEL_21:
    if (v51 == v14 >> 14) {
      goto LABEL_30;
    }
  }
  unint64_t v16 = v30;
  unint64_t v15 = v30;
LABEL_30:
  if (v51 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v51 < v16 >> 14)
  {
LABEL_38:
    uint64_t result = sub_1DCB88C58();
    __break(1u);
    return result;
  }
  uint64_t v34 = sub_1DCB87AB8();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  sub_1DC9B45E8();
  uint64_t v41 = *(void *)(*v45 + 16);
  sub_1DC9B4740(v41);
  uint64_t v13 = *v45;
  *(void *)(v13 + 16) = v41 + 1;
  uint64_t v42 = (void *)(v13 + 32 * v41);
  v42[4] = v34;
  v42[5] = v36;
  v42[6] = v38;
  v42[7] = v40;
  uint64_t *v45 = v13;
LABEL_35:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_36:
  swift_release();
  return v13;
}

uint64_t sub_1DCA42B58(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1DCB87AB8();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_1DC9B45E8();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_1DC9B4740(v14);
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    unint64_t v16 = (void *)(v15 + 32 * v14);
    uint64_t v16[4] = v7;
    v16[5] = v9;
    void v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

uint64_t sub_1DCA42C60(uint64_t a1, uint64_t a2)
{
  return sub_1DCA4204C(a1, a2, v2);
}

uint64_t sub_1DCA42C7C@<X0>(float32x4_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DCA420D0(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_1DCA42C98(uint64_t a1, uint64_t a2)
{
  return sub_1DCABE9C8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1DCA42CB4()
{
  return sub_1DCA42CE8();
}

uint64_t sub_1DCA42CCC(uint64_t a1, uint64_t a2)
{
  return sub_1DCA42114(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1DCA42CE8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DCA42D10(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCA42D98(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCA42E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAA9C660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCA42E88(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCA426C4(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_1DCA42EB4(uint64_t *a1)
{
  return sub_1DCA42E88(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1DCA42ED4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA42F0C()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA42F1C()
{
  return swift_dynamicCast();
}

uint64_t sub_1DCA42F3C()
{
  sub_1DC97FA28(v2, v0, v1);
  return swift_bridgeObjectRelease();
}

__n128 sub_1DCA42F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long a12)
{
  return (__n128)a12;
}

uint64_t sub_1DCA42F8C(uint64_t a1, unsigned char *a2)
{
  *a2 = 4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA42FC0(uint64_t a1)
{
  return 4 * a1;
}

uint64_t sub_1DCA42FEC()
{
  return sub_1DCB89018();
}

uint64_t sub_1DCA4300C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_1DC87E9DC(a3, (uint64_t)va);
}

uint64_t sub_1DCA43024()
{
  return swift_deallocPartialClassInstance();
}

void sub_1DCA43044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a2 + 16);
  if (v6 >= v5) {
    unint64_t v7 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v7 = *(void *)(a2 + 16);
  }
  uint64_t v55 = MEMORY[0x1E4FBC860];
  sub_1DC8987CC();
  uint64_t v8 = v55;
  unint64_t v49 = v6;
  unint64_t v50 = v5;
  unint64_t v45 = v7;
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  if (!v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = a3;
LABEL_26:
    unint64_t v29 = v49;
    unint64_t v28 = v50;
    if (v50 <= v49)
    {
LABEL_44:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    unint64_t v30 = v45;
    uint64_t v31 = (double *)(v48 + 32 * v45 + 56);
    while (1)
    {
      if (v30 >= v28) {
        goto LABEL_48;
      }
      if (v29 == v30) {
        goto LABEL_44;
      }
      if (v30 >= v29) {
        goto LABEL_49;
      }
      uint64_t v32 = v8;
      uint64_t v34 = *((void *)v31 - 3);
      uint64_t v33 = *((void *)v31 - 2);
      double v35 = *(v31 - 1);
      double v36 = *v31;
      uint64_t v37 = *(void *)(v47 + 32 + 8 * v30);
      uint64_t v38 = *(void *)(v13 + 16);
      swift_bridgeObjectRetain();
      if (v38)
      {
        swift_bridgeObjectRetain();
        unint64_t v39 = sub_1DC9637DC(v34, v33);
        if (v40)
        {
          double v41 = *(double *)(*(void *)(v13 + 56) + 8 * v39);
          swift_bridgeObjectRelease();
          if (v35 < v41) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        swift_bridgeObjectRelease();
      }
      double v41 = 0.0;
      if (v35 < 0.0)
      {
LABEL_38:
        BOOL v24 = __OFADD__(v37, 1);
        *(void *)&double v42 = v37 + 1;
        if (v24) {
          goto LABEL_50;
        }
        if (*(void *)&v42 != *(void *)&v36)
        {
          swift_bridgeObjectRelease();
          uint64_t v34 = 0;
          uint64_t v33 = 0;
          double v41 = 0.0;
          double v36 = v42;
        }
        goto LABEL_41;
      }
LABEL_34:
      if (v36 != 0.0)
      {
        swift_bridgeObjectRelease();
        uint64_t v34 = 0;
        uint64_t v33 = 0;
        double v36 = 0.0;
        double v41 = 0.0;
      }
LABEL_41:
      uint64_t v8 = v32;
      unint64_t v43 = *(void *)(v32 + 16);
      if (v43 >= *(void *)(v32 + 24) >> 1)
      {
        sub_1DC8987CC();
        uint64_t v13 = a3;
        uint64_t v8 = v32;
      }
      ++v30;
      *(void *)(v8 + 16) = v43 + 1;
      uint64_t v44 = v8 + 32 * v43;
      *(void *)(v44 + 32) = v34;
      *(void *)(v44 + 40) = v33;
      *(double *)(v44 + 48) = v41;
      *(double *)(v44 + 56) = v36;
      v31 += 4;
      unint64_t v29 = v49;
      unint64_t v28 = v50;
      if (v50 == v30) {
        goto LABEL_44;
      }
    }
  }
  uint64_t v9 = (uint64_t *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = (double *)(a1 + 56);
  unint64_t v11 = v5;
  unint64_t v12 = v7;
  uint64_t v13 = a3;
  while (v11)
  {
    if (!v6) {
      goto LABEL_46;
    }
    uint64_t v14 = *((void *)v10 - 2);
    uint64_t v51 = v8;
    uint64_t v53 = *((void *)v10 - 3);
    double v15 = *(v10 - 1);
    double v16 = *v10;
    uint64_t v17 = *v9;
    uint64_t v18 = *(void *)(v13 + 16);
    swift_bridgeObjectRetain();
    if (v18)
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1DC9637DC(v53, v14);
      if (v20)
      {
        double v21 = *(double *)(*(void *)(v13 + 56) + 8 * v19);
        swift_bridgeObjectRelease();
        if (v15 < v21) {
          goto LABEL_15;
        }
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
    }
    double v21 = 0.0;
    if (v15 < 0.0)
    {
LABEL_15:
      BOOL v24 = __OFADD__(v17, 1);
      *(void *)&double v25 = v17 + 1;
      if (v24) {
        goto LABEL_47;
      }
      double v23 = v16;
      if (*(void *)&v25 == *(void *)&v16) {
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = 0;
      uint64_t v14 = 0;
      double v21 = 0.0;
      double v23 = v25;
      goto LABEL_18;
    }
LABEL_11:
    if (v16 == 0.0)
    {
      double v23 = 0.0;
LABEL_20:
      uint64_t v8 = v51;
      uint64_t v22 = v53;
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    uint64_t v14 = 0;
    double v23 = 0.0;
    double v21 = 0.0;
LABEL_18:
    uint64_t v8 = v51;
LABEL_21:
    unint64_t v26 = *(void *)(v8 + 16);
    if (v26 >= *(void *)(v8 + 24) >> 1)
    {
      double v52 = v23;
      uint64_t v54 = v22;
      sub_1DC8987CC();
      double v23 = v52;
      uint64_t v22 = v54;
      uint64_t v13 = a3;
    }
    *(void *)(v8 + 16) = v26 + 1;
    uint64_t v27 = v8 + 32 * v26;
    *(void *)(v27 + 32) = v22;
    *(void *)(v27 + 40) = v14;
    --v6;
    *(double *)(v27 + 48) = v21;
    *(double *)(v27 + 56) = v23;
    --v11;
    v10 += 4;
    ++v9;
    if (!--v12) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

uint64_t sub_1DCA433F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = a4;
    uint64_t v5 = a2;
    do
    {
      uint64_t v6 = v4;
      BOOL v7 = v4 == -1;
      if (v4 == -1 && v5 == 0x8000000000000000)
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v4 = v5 % v4;
      uint64_t v5 = v6;
    }
    while (v4);
    if (a4 == 0x8000000000000000 && v6 == -1)
    {
      __break(1u);
      goto LABEL_14;
    }
  }
  else
  {
LABEL_14:
    if (!a2)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    BOOL v7 = a2 == -1;
    uint64_t v6 = a2;
  }
  if (a2 == 0x8000000000000000 && v7) {
    goto LABEL_29;
  }
  uint64_t v10 = a4 / v6;
  if ((unsigned __int128)(a2 * (__int128)(a4 / v6)) >> 64 != (a2 * (a4 / v6)) >> 63) {
    goto LABEL_25;
  }
  uint64_t v11 = result * v10;
  if ((unsigned __int128)(result * (__int128)v10) >> 64 != (result * v10) >> 63)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v12 = a2 / v6;
  uint64_t v13 = a3 * (a2 / v6);
  if ((unsigned __int128)(a3 * (__int128)v12) >> 64 != v13 >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t result = v11 + v13;
  if (__OFADD__(v11, v13))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA434C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    BOOL v7 = (void *)(a1 + 40);
    while (1)
    {
      BOOL v8 = *(v7 - 1) == a2 && *v7 == a3;
      if (v8 || (sub_1DCB89018() & 1) != 0) {
        break;
      }
      v7 += 4;
      if (v4 == ++v6) {
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DCA43564()
{
  return sub_1DCB891B8();
}

BOOL sub_1DCA435E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  if (a1 == a4 && a2 == a5)
  {
    if (a7 != a8) {
      return 0;
    }
    return a3 == a6;
  }
  char v13 = sub_1DCB89018();
  BOOL result = 0;
  if ((v13 & 1) != 0 && a7 == a8) {
    return a3 == a6;
  }
  return result;
}

uint64_t sub_1DCA43660(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB96DC0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB96DE0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DCA4379C(char a1)
{
  if (!a1) {
    return 1701667182;
  }
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return 0xD000000000000011;
}

uint64_t sub_1DCA437F8(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA5B08);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA454E8();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  if (!v1)
  {
    sub_1DCB88EE8();
    sub_1DCB88F08();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1DCA4396C()
{
  return sub_1DCB891F8();
}

double sub_1DCA43A04(void *a1)
{
  sub_1DC87E988(&qword_1EAAA5AF8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA454E8();
  sub_1DCB89298();
  if (v1)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    sub_1DCA45920();
    sub_1DCB88DA8();
    swift_bridgeObjectRetain();
    sub_1DCA45920();
    sub_1DCB88DC8();
    double v2 = v6;
    sub_1DCA45920();
    sub_1DCB88DE8();
    sub_1DCA2403C();
    v7();
    sub_1DC8818D0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1DCA43BD0()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DCA43C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC8DCBB4(a1, a3) & (a2 == a4);
}

uint64_t sub_1DCA43C60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E6F69746361 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DCB96DA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA43D50(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0x736E6F69746361;
  }
}

uint64_t sub_1DCA43D8C(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA5AE0);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA45394();
  sub_1DCB892B8();
  sub_1DC87E988(&qword_1EAAA5AC8);
  sub_1DCA4542C(&qword_1EAAA5AE8, (void (*)(void))sub_1DCA4549C);
  sub_1DCB88F18();
  if (!v1) {
    sub_1DCB88F08();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1DCA43F10()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA43F78(void *a1)
{
  sub_1DC87E988(&qword_1EAAA5AB8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = a1[3];
  sub_1DC881A8C(a1, v4);
  sub_1DCA45394();
  sub_1DCB89298();
  if (v1)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    sub_1DC87E988(&qword_1EAAA5AC8);
    sub_1DCA4542C(&qword_1EAAA5AD0, (void (*)(void))sub_1DCA453E0);
    sub_1DCB88DF8();
    uint64_t v4 = v7;
    swift_bridgeObjectRetain();
    sub_1DCB88DE8();
    sub_1DCA2403C();
    v6();
    sub_1DC8818D0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1DCA44168()
{
  return sub_1DCA4379C(*v0);
}

uint64_t sub_1DCA44170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA43660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA44198(uint64_t a1)
{
  unint64_t v2 = sub_1DCA454E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA441D4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA454E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA44210()
{
  return sub_1DCA4396C();
}

uint64_t sub_1DCA44220()
{
  return sub_1DCA43564();
}

uint64_t sub_1DCA44230()
{
  return sub_1DCB891F8();
}

void sub_1DCA442B8(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v7 = sub_1DCA43A04(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v7;
    *(void *)(a2 + 24) = v6;
  }
}

uint64_t sub_1DCA442EC(void *a1)
{
  return sub_1DCA437F8(a1);
}

BOOL sub_1DCA44310(uint64_t a1, uint64_t a2)
{
  return sub_1DCA435E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 24), *(double *)(a1 + 16), *(double *)(a2 + 16));
}

uint64_t sub_1DCA44334()
{
  return sub_1DCA43D50(*v0);
}

uint64_t sub_1DCA4433C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA43C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA44364(uint64_t a1)
{
  unint64_t v2 = sub_1DCA45394();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA443A0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA45394();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA443DC()
{
  return sub_1DCA43F10();
}

uint64_t sub_1DCA443E4()
{
  return sub_1DCA43BD0();
}

uint64_t sub_1DCA443EC()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA44454@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCA43F78(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1DCA44480(void *a1)
{
  return sub_1DCA43D8C(a1);
}

uint64_t sub_1DCA4449C(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCA43C28(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1DCA444B0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = *a3;
  if (*(void *)(a1 + 16) != *(void *)(*a3 + 16))
  {
    sub_1DCA44F00();
    swift_allocError();
    swift_willThrow();
    return v5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCA43044(a1, v6, a5);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v12[2];
  uint64_t v38 = a4;
  if (v13)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1DC897E1C();
    uint64_t v14 = v39;
    unint64_t v15 = *(void *)(v39 + 16);
    double v16 = v12 + 7;
    do
    {
      uint64_t v18 = *v16;
      v16 += 4;
      uint64_t v17 = v18;
      if (v15 >= *(void *)(v39 + 24) >> 1) {
        sub_1DC897E1C();
      }
      *(void *)(v39 + 16) = v15 + 1;
      *(void *)(v39 + 8 * v15++ + 32) = v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    a4 = v38;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  *a3 = v14;
  uint64_t v19 = v12[2];
  if (v19)
  {
    swift_bridgeObjectRetain();
    char v20 = v12 + 6;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v22 = *(v20 - 1);
      if (v22)
      {
        uint64_t v23 = *(v20 - 2);
        uint64_t v24 = *v20;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DCA73C9C();
          uint64_t v21 = v27;
        }
        unint64_t v25 = *(void *)(v21 + 16);
        if (v25 >= *(void *)(v21 + 24) >> 1)
        {
          sub_1DCA73C9C();
          uint64_t v21 = v28;
        }
        *(void *)(v21 + 16) = v25 + 1;
        unint64_t v26 = (void *)(v21 + 24 * v25);
        v26[4] = v23;
        v26[5] = v22;
        v26[6] = v24;
      }
      v20 += 4;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    a4 = v38;
  }
  else
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v21 + 16);
  if (v29)
  {
    uint64_t v5 = *(void *)(v21 + 32);
    uint64_t v30 = v29 - 1;
    if (v29 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      double v33 = *(double *)(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v34 = (double *)(v21 + 72);
      do
      {
        double v35 = *v34;
        if (v33 <= *v34)
        {
          uint64_t v5 = *((void *)v34 - 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          double v33 = v35;
        }
        v34 += 3;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v36 = *a4;
    if (*a4 >= a2)
    {
      *a4 = 0;
      return v5;
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v32 = v36 + 1;
    goto LABEL_33;
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v32 = *a4 + 1;
  if (!__OFADD__(*a4, 1))
  {
    uint64_t v5 = 0;
LABEL_33:
    *a4 = v32;
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA44800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v51 = *(void *)a6;
  uint64_t v48 = *(unsigned int *)(a6 + 12);
  uint64_t v49 = *(void *)(a6 + 16);
  uint64_t v50 = *(int *)(a6 + 8);
  uint64_t v46 = *(int *)(a6 + 32);
  uint64_t v47 = *(void *)(a6 + 24);
  uint64_t v11 = *(void *)(a6 + 40);
  uint64_t v12 = *a7;
  uint64_t v13 = *((int *)a7 + 2);
  uint64_t v14 = a7[2];
  uint64_t result = sub_1DCA444B0(a1, a2, a3, a4, a5);
  if (!v8)
  {
    uint64_t v17 = v16;
    if (!v16)
    {
      uint64_t v36 = 0;
      uint64_t v23 = 0;
      uint64_t v32 = 0;
      uint64_t v37 = 0;
      uint64_t v35 = 0;
      uint64_t result = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
LABEL_28:
      *a8 = v36;
      a8[1] = v17;
      a8[2] = v23;
      a8[3] = v32;
      a8[4] = v37;
      a8[5] = v35;
      a8[6] = result;
      a8[7] = v38;
      a8[8] = v39;
      return result;
    }
    uint64_t v18 = result;
    swift_bridgeObjectRetain();
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v44 = v18;
    uint64_t v45 = v17;
    unint64_t v20 = sub_1DCA434C4(v19, v18, v17);
    LOBYTE(v18) = v21;
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_42;
    }
    if ((v20 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v20 < *(void *)(*a3 + 16))
    {
      uint64_t v22 = *(void *)(*a3 + 8 * v20 + 32);
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1DC961470(v44, v45, a5);
      char v25 = v24;
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        uint64_t v26 = v22 - 1;
        if (!__OFSUB__(v22, 1))
        {
          uint64_t v27 = v12 * v26;
          if ((unsigned __int128)(v12 * (__int128)v26) >> 64 == (v12 * v26) >> 63)
          {
            uint64_t v28 = v48;
            uint64_t v29 = v49;
            if (v49 != v14)
            {
              uint64_t v32 = 0;
              unsigned int v34 = 0;
              uint64_t v33 = 0;
              uint64_t v35 = 0;
LABEL_16:
              if (v49 != v11)
              {
                uint64_t v40 = 0;
                uint64_t v41 = 0;
                uint64_t v28 = 0;
                uint64_t v29 = 0;
LABEL_21:
                if (v29 != v35)
                {
                  uint64_t result = 0;
                  uint64_t v43 = 0;
                  uint64_t v28 = 0;
                  uint64_t v39 = 0;
                  goto LABEL_27;
                }
                if (!__OFSUB__(0, v32))
                {
                  uint64_t result = sub_1DCA433F0(v40, v41, -v32, (int)v34);
                  if (v42 >= (uint64_t)0xFFFFFFFF80000000)
                  {
                    if (v42 <= 0x7FFFFFFF)
                    {
                      uint64_t v43 = v42;
                      uint64_t v39 = v35;
LABEL_27:
                      uint64_t v37 = v33 | v34;
                      uint64_t v38 = v43 | (v28 << 32);
                      uint64_t v36 = v44;
                      uint64_t v17 = v45;
                      goto LABEL_28;
                    }
                    goto LABEL_41;
                  }
LABEL_40:
                  __break(1u);
LABEL_41:
                  __break(1u);
                  goto LABEL_42;
                }
                goto LABEL_38;
              }
              uint64_t v40 = sub_1DCA433F0(v51, v50, v47, v46);
              if (v41 >= (uint64_t)0xFFFFFFFF80000000)
              {
                if (v41 > 0x7FFFFFFF)
                {
LABEL_39:
                  __break(1u);
                  goto LABEL_40;
                }
                goto LABEL_21;
              }
              goto LABEL_36;
            }
            if (!__OFSUB__(0, v27))
            {
              uint64_t v30 = sub_1DCA433F0(v51, v50, -v27, v13);
              if (v31 >= (uint64_t)0xFFFFFFFF80000000)
              {
                if (v31 > 0x7FFFFFFF)
                {
LABEL_37:
                  __break(1u);
LABEL_38:
                  __break(1u);
                  goto LABEL_39;
                }
                uint64_t v32 = v30;
                uint64_t v33 = v48 << 32;
                unsigned int v34 = v31;
                uint64_t v35 = v49;
                goto LABEL_16;
              }
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
              goto LABEL_37;
            }
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
LABEL_42:
      uint64_t result = sub_1DCB88C68();
      __break(1u);
      return result;
    }
    __break(1u);
    goto LABEL_32;
  }
  return result;
}

double (*sub_1DCA44B0C(uint64_t a1, uint64_t a2, uint64_t *a3))@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a3;
  uint64_t v6 = a3[1];
  uint64_t v7 = a3[2];
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1DC897E1C();
    uint64_t v9 = v15;
    unint64_t v10 = *(void *)(v15 + 16);
    do
    {
      if (v10 >= *(void *)(v15 + 24) >> 1) {
        sub_1DC897E1C();
      }
      *(void *)(v15 + 16) = v10 + 1;
      *(void *)(v15 + 8 * v10++ + 32) = 0;
      --v8;
    }
    while (v8);
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a1;
  v13[3] = a2;
  v13[4] = v11;
  v13[5] = v12;
  v13[6] = v5;
  v13[7] = v6;
  v13[8] = v7;
  swift_bridgeObjectRetain();
  return sub_1DCA44FDC;
}

double sub_1DCA44C80@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15 = *a2;
  uint64_t v16 = a2[5];
  void v24[2] = a10;
  v25[0] = v15;
  uint64_t v17 = (uint64_t *)(a5 + 16);
  uint64_t v18 = (uint64_t *)(a6 + 16);
  v25[1] = a2[1];
  long long v26 = *((_OWORD *)a2 + 1);
  uint64_t v27 = a2[4];
  uint64_t v28 = v16;
  v24[0] = a7;
  v24[1] = a8;
  swift_beginAccess();
  swift_beginAccess();
  sub_1DCA44800(a3, a4, v17, v18, a1, (uint64_t)v25, v24, (uint64_t *)v29);
  swift_endAccess();
  swift_endAccess();
  if (!v10)
  {
    uint64_t v20 = v30;
    double result = *(double *)v29;
    long long v21 = v29[1];
    long long v22 = v29[2];
    long long v23 = v29[3];
    *(_OWORD *)a9 = v29[0];
    *(_OWORD *)(a9 + 16) = v21;
    *(_OWORD *)(a9 + 32) = v22;
    *(_OWORD *)(a9 + 48) = v23;
    *(void *)(a9 + 64) = v20;
  }
  return result;
}

char *sub_1DCA44D9C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr), char *a4)
{
  sub_1DC8D9360();
  if (!v4)
  {
    a3(&v20);
    swift_bridgeObjectRelease();
    uint64_t v8 = v21;
    if (v21)
    {
      uint64_t v9 = v20;
      uint64_t v10 = v22;
      uint64_t v11 = v23;
      int v12 = v24;
      int v13 = v27;
      uint64_t v17 = v26;
      uint64_t v18 = v25;
      uint64_t v19 = v28;
      unint64_t v14 = HIDWORD(v24);
      unint64_t v15 = HIDWORD(v27);
      a4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNSoundActionsResult()), sel_init);
      swift_bridgeObjectRetain();
      SNSoundActionsResult.name.setter(v9, v8);
      uint64_t v16 = &a4[OBJC_IVAR___SNSoundActionsResult_impl];
      *(void *)&a4[OBJC_IVAR___SNSoundActionsResult_impl + 48] = v10;
      swift_bridgeObjectRelease();
      *(void *)uint64_t v16 = v11;
      *((_DWORD *)v16 + 2) = v12;
      *((_DWORD *)v16 + 3) = v14;
      *((void *)v16 + 2) = v18;
      *((void *)v16 + 3) = v17;
      *((_DWORD *)v16 + 8) = v13;
      *((_DWORD *)v16 + 9) = v15;
      *((void *)v16 + 5) = v19;
    }
    else
    {
      return 0;
    }
  }
  return a4;
}

unint64_t sub_1DCA44F00()
{
  unint64_t result = qword_1EAAA5A98;
  if (!qword_1EAAA5A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5A98);
  }
  return result;
}

uint64_t sub_1DCA44F4C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA44F84()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA44F94()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

double sub_1DCA44FDC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DCA44C80(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], a3, v3[8]);
}

void type metadata accessor for SoundActionsUtils()
{
}

void *sub_1DCA4501C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DCA4504C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *sub_1DCA4509C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for SoundActionsUtils.PostProcessingBlueprint()
{
}

uint64_t initializeWithCopy for SoundActionsCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DCA45120(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

void *sub_1DCA45180(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

void type metadata accessor for SoundActionsUtils.PostProcessingBlueprint.Action()
{
}

unsigned char *sub_1DCA451D4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA45270);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SoundActionsUtils.DomainError()
{
}

unint64_t sub_1DCA452A8()
{
  unint64_t result = qword_1EAAA5AA0;
  if (!qword_1EAAA5AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5AA0);
  }
  return result;
}

unint64_t sub_1DCA452F8()
{
  unint64_t result = qword_1EAAA5AA8;
  if (!qword_1EAAA5AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5AA8);
  }
  return result;
}

unint64_t sub_1DCA45348()
{
  unint64_t result = qword_1EAAA5AB0;
  if (!qword_1EAAA5AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5AB0);
  }
  return result;
}

unint64_t sub_1DCA45394()
{
  unint64_t result = qword_1EAAA5AC0;
  if (!qword_1EAAA5AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5AC0);
  }
  return result;
}

unint64_t sub_1DCA453E0()
{
  unint64_t result = qword_1EAAA5AD8;
  if (!qword_1EAAA5AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5AD8);
  }
  return result;
}

uint64_t sub_1DCA4542C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA5AC8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCA4549C()
{
  unint64_t result = qword_1EAAA5AF0;
  if (!qword_1EAAA5AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5AF0);
  }
  return result;
}

unint64_t sub_1DCA454E8()
{
  unint64_t result = qword_1EAAA5B00;
  if (!qword_1EAAA5B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5B00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA45600);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys()
{
  return &type metadata for SoundActionsUtils.PostProcessingBlueprint.Action.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SoundActionsUtils.PostProcessingBlueprint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA45704);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsUtils.PostProcessingBlueprint.CodingKeys()
{
  return &type metadata for SoundActionsUtils.PostProcessingBlueprint.CodingKeys;
}

unint64_t sub_1DCA45740()
{
  unint64_t result = qword_1EAAA5B10;
  if (!qword_1EAAA5B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5B10);
  }
  return result;
}

unint64_t sub_1DCA45790()
{
  unint64_t result = qword_1EAAA5B18;
  if (!qword_1EAAA5B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5B18);
  }
  return result;
}

unint64_t sub_1DCA457E0()
{
  unint64_t result = qword_1EAAA5B20;
  if (!qword_1EAAA5B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5B20);
  }
  return result;
}

unint64_t sub_1DCA45830()
{
  unint64_t result = qword_1EAAA5B28;
  if (!qword_1EAAA5B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5B28);
  }
  return result;
}

unint64_t sub_1DCA45880()
{
  unint64_t result = qword_1EAAA5B30;
  if (!qword_1EAAA5B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5B30);
  }
  return result;
}

unint64_t sub_1DCA458D0()
{
  unint64_t result = qword_1EAAA5B38;
  if (!qword_1EAAA5B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5B38);
  }
  return result;
}

void sub_1DCA45930()
{
  sub_1DC88D6B0();
  uint64_t v74 = v1;
  uint64_t v75 = v0;
  uint64_t v72 = v2;
  uint64_t v73 = v3;
  uint64_t v5 = v4;
  uint64_t v69 = v6;
  sub_1DC87E988(&qword_1EAAAA930);
  sub_1DC89D4E0();
  uint64_t v65 = v8;
  uint64_t v66 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1DCA36AE0(v9, v60);
  sub_1DC87E988(&qword_1EAAA11A0);
  sub_1DC89D4E0();
  uint64_t v67 = v11;
  uint64_t v68 = v10;
  MEMORY[0x1F4188790](v10);
  sub_1DCA36830(v12, v60);
  uint64_t v78 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1DC888120();
  uint64_t v70 = v16;
  sub_1DC9198D0();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v60 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v60 - v21;
  sub_1DCB86BE8();
  sub_1DCA599A4();
  uint64_t v79 = v23;
  unint64_t v80 = v24;
  uint64_t v71 = v5;
  swift_bridgeObjectRetain();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  unint64_t v25 = v80;
  uint64_t v76 = v79;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1DCB86FE8();
  uint64_t v27 = sub_1DC89F57C(v26, (uint64_t)qword_1EAAFF810);
  uint64_t v62 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 16);
  uint64_t v63 = v14 + 16;
  sub_1DC8E7D10();
  v28();
  swift_bridgeObjectRetain_n();
  uint64_t v64 = v27;
  uint64_t v29 = sub_1DCB86FC8();
  os_log_type_t v30 = sub_1DCB88488();
  if (os_log_type_enabled(v29, v30))
  {
    unint64_t v31 = v25;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v79 = v60;
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v77 = v14;
    sub_1DCA545CC(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v33 = v78;
    uint64_t v34 = sub_1DCB88F98();
    sub_1DC9F8920(v34, v35, &v79);
    uint64_t v61 = v22;
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void (**)(void))(v77 + 8);
    ((void (*)(char *, uint64_t))v36)(v20, v33);
    *(_WORD *)(v32 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(v76, v31, &v79);
    uint64_t v22 = v61;
    uint64_t v14 = v77;
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v29, v30, "Started Creating Accessibility Sound Recognition Session %{public}s (%s)", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    sub_1DC8E7728();
    unint64_t v25 = v31;
    uint64_t v37 = v36;
    sub_1DC8E7728();
  }
  else
  {
    uint64_t v37 = *(void (**)(void))(v14 + 8);
    ((void (*)(char *, uint64_t))v37)(v20, v78);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v38 = v75;
  uint64_t v39 = sub_1DCA50C08(v71, v72, v73, v74);
  if (v38)
  {
    ((void (*)(char *, uint64_t))v37)(v22, v78);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = v39;
    uint64_t v74 = 0;
    uint64_t v75 = v37;
    uint64_t v77 = v14;
    uint64_t v41 = (void *)swift_allocObject();
    v41[2] = sub_1DCA5149C;
    v41[3] = 0;
    v41[4] = v40;
    sub_1DC87E988(&qword_1EAAA11A8);
    sub_1DC88CF34(&qword_1EAAA11B0, &qword_1EAAA11A8);
    sub_1DCB87378();
    uint64_t v79 = 0;
    unint64_t v80 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCA595F8();
    uint64_t v79 = v42;
    unint64_t v80 = v43;
    uint64_t v44 = sub_1DCA545CC(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v45 = v78;
    uint64_t v72 = v44;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCA25CEC();
    swift_bridgeObjectRelease();
    sub_1DC88D5C8();
    v46();
    sub_1DC88CF34(&qword_1EAAA11B8, &qword_1EAAA11A0);
    uint64_t v47 = sub_1DCB873A8();
    sub_1DC88D5C8();
    v48();
    uint64_t v49 = v69;
    uint64_t v50 = v62;
    v62(v69, v22, v45);
    *(void *)(v49 + *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20)) = v47;
    v50(v70, v22, v45);
    swift_bridgeObjectRetain();
    uint64_t v73 = v47;
    swift_retain();
    uint64_t v51 = sub_1DCB86FC8();
    os_log_type_t v52 = sub_1DCB88488();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v61 = v22;
      uint64_t v71 = v54;
      uint64_t v79 = v54;
      *(_DWORD *)uint64_t v53 = 136446466;
      uint64_t v55 = sub_1DCB88F98();
      sub_1DC9F8920(v55, v56, &v79);
      sub_1DCB88778();
      swift_bridgeObjectRelease();
      BOOL v57 = v75;
      sub_1DCA5978C();
      v57();
      *(_WORD *)(v53 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1DC9F8920(v76, v25, &v79);
      sub_1DCB88778();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DC873000, v51, v52, "Finished Creating Accessibility Sound Recognition Session %{public}s (%s)", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
      swift_release();

      sub_1DCA5978C();
      v57();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t v58 = v75;
      sub_1DC8881AC();
      v58();
      swift_release();
      uint64_t v59 = sub_1DCA59914();
      ((void (*)(uint64_t))v58)(v59);
    }
  }
  sub_1DC88D674();
}

uint64_t sub_1DCA46178@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v11 = v1[9];
  uint64_t v10 = v1[10];
  uint64_t v13 = v1[11];
  uint64_t v12 = v1[12];
  uint64_t v15 = v1[13];
  uint64_t v16 = v1[14];
  uint64_t v17 = v1[15];
  *a1 = *(int *)v1;
  a1[1] = &unk_1F37F29C8;
  a1[2] = v2;
  a1[3] = &unk_1F37F2828;
  a1[4] = v3;
  a1[5] = v4;
  a1[6] = &unk_1F37F2868;
  a1[7] = v5;
  a1[8] = v6;
  a1[9] = &unk_1F37F28A8;
  a1[10] = v7;
  a1[11] = v9;
  a1[12] = &unk_1F37F28E8;
  a1[13] = v8;
  a1[14] = v11;
  a1[15] = &unk_1F37F2928;
  a1[16] = v10;
  a1[17] = v13;
  a1[18] = &unk_1F37F2968;
  a1[19] = v12;
  a1[20] = v15;
  a1[21] = &unk_1F37F2998;
  a1[22] = v16;
  a1[23] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t *sub_1DCA462DC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  if (*result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (*result <= 0x7FFFFFFF)
  {
    uint64_t v3 = (uint64_t)result;
    uint64_t v19 = result[2];
    uint64_t v16 = result[4];
    uint64_t v17 = result[5];
    uint64_t v4 = result[13];
    uint64_t v5 = result[14];
    uint64_t v6 = result[16];
    uint64_t v7 = result[17];
    uint64_t v8 = result[11];
    uint64_t v9 = result[19];
    uint64_t v10 = result[10];
    uint64_t v11 = result[20];
    uint64_t v12 = result[8];
    uint64_t v13 = result[22];
    uint64_t v14 = result[7];
    uint64_t v15 = result[23];
    uint64_t v18 = *result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = (uint64_t *)sub_1DCA547DC(v3);
    *(_DWORD *)a2 = v18;
    *(void *)(a2 + 8) = v19;
    *(void *)(a2 + 16) = v16;
    *(void *)(a2 + 24) = v17;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v12;
    *(void *)(a2 + 48) = v10;
    *(void *)(a2 + 56) = v8;
    *(void *)(a2 + 64) = v4;
    *(void *)(a2 + 72) = v5;
    *(void *)(a2 + 80) = v6;
    *(void *)(a2 + 88) = v7;
    *(void *)(a2 + 96) = v9;
    *(void *)(a2 + 104) = v11;
    *(void *)(a2 + 112) = v13;
    *(void *)(a2 + 120) = v15;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1DCA46478()
{
}

void sub_1DCA46518()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v15 = v4;
  uint64_t v16 = v5;
  uint64_t v13 = v6;
  uint64_t v14 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_1DCA596B0();
  uint64_t v19 = sub_1DCA596B0();
  uint64_t v20 = sub_1DCA596B0();
  type metadata accessor for SharedSoundPrintK.Configuration();
  sub_1DC89D4E0();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v13 - v9;
  sub_1DCA4E070(v14, v15, AssociatedTypeWitness, (uint64_t)&v13 - v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 40))(v10, v3, v1);
  sub_1DCA59880();
  v12(v11);
  sub_1DCA59874();
  sub_1DC88D674();
}

void sub_1DCA46674()
{
}

uint64_t sub_1DCA46698()
{
  v6[3] = &unk_1F37E2540;
  v6[4] = &off_1F37E24A0;
  uint64_t v2 = swift_allocObject();
  v6[0] = v2;
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(void *)(v2 + 48) = *(void *)(v0 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  char v4 = sub_1DCA96424(v6, 0xD000000000000035, 0x80000001DCB96F70);
  if (!v1) {
    LOBYTE(v0) = v4 & 1;
  }
  sub_1DC8818D0((uint64_t)v6);
  return v0 & 1;
}

uint64_t sub_1DCA46778(uint64_t a1, uint64_t a2)
{
  if (qword_1EAA9D258 != -1) {
    swift_once();
  }
  __src[0] = qword_1EAAFFA50;
  __src[1] = *(void *)algn_1EAAFFA58;
  __src[2] = qword_1EAAFFA60;
  __src[3] = unk_1EAAFFA68;
  __src[4] = qword_1EAAFFA70;
  __src[5] = unk_1EAAFFA78;
  char v7 = byte_1EAAFFA80;
  char v8 = byte_1EAAFFA81;
  char v9 = byte_1EAAFFA82;
  char v10 = byte_1EAAFFA83;
  char v11 = byte_1EAAFFA84;
  char v12 = byte_1EAAFFA85;
  uint64_t v13 = qword_1EAAFFA88;
  char v14 = byte_1EAAFFA90;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DC99BE60(__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1DCA468D8(uint64_t a1, uint64_t a2)
{
  return sub_1DCA46778(a1, a2);
}

void sub_1DCA468F0()
{
}

void sub_1DCA4695C()
{
}

id static AccessibilitySoundRecognition.isSupported.getter()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC8E7B68();
  id v1 = sub_1DCAA49F8();
  char v3 = v2;
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0) {
    return (id)(v1 != 0);
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v5 = result;
    int exclaveCapability = MobileGestalt_get_exclaveCapability();

    if (exclaveCapability)
    {
      uint64_t v7 = MGGetProductType();
      return (id)sub_1DC983400(v7);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA46AC4()
{
  if (static AccessibilitySoundRecognition.isSupported.getter())
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();

    id v1 = sub_1DCAA49F8();
    LOBYTE(v0) = v2;
    swift_bridgeObjectRelease();
    char v3 = v0 | (v1 == 0);
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

BOOL static AccessibilitySoundRecognition.BuiltInDetectorIdentifier.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AccessibilitySoundRecognition.BuiltInDetectorIdentifier.hash(into:)()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DCA46C20(char a1)
{
  uint64_t result = 0x616C41656B6F6D73;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7373657274736964;
      break;
    case 2:
      uint64_t result = 1885693282;
      break;
    case 3:
      uint64_t result = 0x72657A7A7562;
      break;
    case 4:
      uint64_t result = 0x6E726F48726163;
      break;
    case 5:
      uint64_t result = 0x776F654D746163;
      break;
    case 6:
      uint64_t result = 0x6867756F63;
      break;
    case 7:
      unsigned int v3 = 1735289188;
      goto LABEL_11;
    case 8:
      uint64_t result = 0x6B726142676F64;
      break;
    case 9:
      unsigned int v3 = 1919905636;
LABEL_11:
      uint64_t result = v3 | 0x6C6C654200000000;
      break;
    case 10:
      uint64_t result = 0x636F6E4B726F6F64;
      break;
    case 11:
      uint64_t result = 0x72616C4165726966;
      break;
    case 12:
      uint64_t result = 0x6572427373616C67;
      break;
    case 13:
      uint64_t result = 0x6857656C7474656BLL;
      break;
    case 14:
      uint64_t result = 0x74756F6873;
      break;
    case 15:
      uint64_t result = 0x616C416E65726973;
      break;
    case 16:
      uint64_t result = 0x6E75527265746177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCA46E3C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54428();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA46E78(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54428();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA46EB4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA543DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA46EF0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA543DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA46F2C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54390();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA46F68(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54390();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA46FA4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54344();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA46FE0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54344();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4701C()
{
  return sub_1DCA46C20(*v0);
}

uint64_t sub_1DCA47024(uint64_t a1)
{
  unint64_t v2 = sub_1DCA53FB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47060(uint64_t a1)
{
  unint64_t v2 = sub_1DCA53FB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4709C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA542F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA470D8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA542F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA47114(uint64_t a1)
{
  unint64_t v2 = sub_1DCA542AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47150(uint64_t a1)
{
  unint64_t v2 = sub_1DCA542AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4718C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54474();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA471C8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54474();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA47204(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54260();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47240(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54260();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4727C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54214();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA472B8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54214();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA472F4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA541C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47330(uint64_t a1)
{
  unint64_t v2 = sub_1DCA541C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4736C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5417C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA473A8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5417C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA473E4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54130();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47420(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54130();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4745C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA540E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47498(uint64_t a1)
{
  unint64_t v2 = sub_1DCA540E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA474D4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54098();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47510(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54098();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4754C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5404C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47588(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5404C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA475C4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA544C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47600(uint64_t a1)
{
  unint64_t v2 = sub_1DCA544C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4763C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54000();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA47678(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54000();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static AccessibilitySoundRecognition.BuiltInDetectorIdentifier.allCases.getter()
{
  return &unk_1F37E02E8;
}

void AccessibilitySoundRecognition.BuiltInDetectorIdentifier.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v24;
  a20 = v25;
  uint64_t v26 = v20;
  uint64_t v28 = v27;
  sub_1DC87E988(&qword_1EAAA5B40);
  sub_1DC89D4E0();
  v114[6] = v30;
  v114[7] = v29;
  MEMORY[0x1F4188790](v29);
  sub_1DCA36AC4(v31, v86);
  sub_1DC87E988(&qword_1EAAA5B48);
  sub_1DC89D4E0();
  v114[3] = v33;
  v114[4] = v32;
  MEMORY[0x1F4188790](v32);
  sub_1DCA3684C(v34, v87);
  sub_1DC87E988(&qword_1EAAA5B50);
  sub_1DC89D4E0();
  v114[0] = v36;
  v114[1] = v35;
  MEMORY[0x1F4188790](v35);
  sub_1DC9DF580(v37, v88);
  sub_1DC87E988(&qword_1EAAA5B58);
  sub_1DC89D4E0();
  uint64_t v112 = v39;
  uint64_t v113 = v38;
  MEMORY[0x1F4188790](v38);
  sub_1DC9DF59C(v40, v89);
  sub_1DC87E988(&qword_1EAAA5B60);
  sub_1DC89D4E0();
  uint64_t v110 = v42;
  uint64_t v111 = v41;
  MEMORY[0x1F4188790](v41);
  sub_1DCA59818(v43, v90);
  sub_1DC87E988(&qword_1EAAA5B68);
  sub_1DC89D4E0();
  uint64_t v108 = v45;
  uint64_t v109 = v44;
  MEMORY[0x1F4188790](v44);
  sub_1DC88D550();
  sub_1DC888164(v46);
  uint64_t v107 = sub_1DC87E988(&qword_1EAAA5B70);
  sub_1DC89D4E0();
  uint64_t v106 = v47;
  MEMORY[0x1F4188790](v48);
  sub_1DC88D550();
  sub_1DC888164(v49);
  uint64_t v105 = sub_1DC87E988(&qword_1EAAA5B78);
  sub_1DC89D4E0();
  uint64_t v104 = v50;
  MEMORY[0x1F4188790](v51);
  sub_1DC88D550();
  sub_1DC888164(v52);
  uint64_t v103 = sub_1DC87E988(&qword_1EAAA5B80);
  sub_1DC89D4E0();
  uint64_t v102 = v53;
  MEMORY[0x1F4188790](v54);
  sub_1DC88D550();
  sub_1DC888164(v55);
  uint64_t v101 = sub_1DC87E988(&qword_1EAAA5B88);
  sub_1DC89D4E0();
  uint64_t v100 = v56;
  MEMORY[0x1F4188790](v57);
  sub_1DC88D550();
  sub_1DC888164(v58);
  uint64_t v99 = sub_1DC87E988(&qword_1EAAA5B90);
  sub_1DC89D4E0();
  uint64_t v98 = v59;
  MEMORY[0x1F4188790](v60);
  sub_1DC88D550();
  sub_1DC888164(v61);
  uint64_t v97 = sub_1DC87E988(&qword_1EAAA5B98);
  sub_1DC89D4E0();
  uint64_t v96 = v62;
  MEMORY[0x1F4188790](v63);
  sub_1DC88D550();
  sub_1DC888164(v64);
  uint64_t v95 = sub_1DC87E988(&qword_1EAAA5BA0);
  sub_1DC89D4E0();
  uint64_t v94 = v65;
  MEMORY[0x1F4188790](v66);
  sub_1DC88D550();
  sub_1DC888164(v67);
  uint64_t v93 = sub_1DC87E988(&qword_1EAAA5BA8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v68);
  sub_1DC88D550();
  sub_1DC888164(v69);
  sub_1DC87E988(&qword_1EAAA5BB0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v70);
  sub_1DC88D550();
  sub_1DC888164(v71);
  uint64_t v72 = sub_1DC87E988(&qword_1EAAA5BB8);
  sub_1DC89D4E0();
  uint64_t v92 = v73;
  MEMORY[0x1F4188790](v74);
  sub_1DC89D9A0();
  uint64_t v75 = sub_1DC87E988(&qword_1EAAA5BC0);
  sub_1DC89D4E0();
  uint64_t v91 = v76;
  MEMORY[0x1F4188790](v77);
  sub_1DC8C1FC4();
  sub_1DC87E988(&qword_1EAAA5BC8);
  sub_1DC89D4E0();
  uint64_t v116 = v78;
  uint64_t v117 = v79;
  MEMORY[0x1F4188790](v78);
  sub_1DC89D988();
  uint64_t v80 = *v26;
  sub_1DC881A8C(v28, v28[3]);
  sub_1DCA53FB4();
  uint64_t v115 = v21;
  sub_1DCA59798();
  sub_1DCB892B8();
  switch(v80)
  {
    case 1:
      sub_1DCA54474();
      sub_1DCB88E88();
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v23, v72);
      break;
    case 2:
      sub_1DCA54428();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA59938();
      goto LABEL_13;
    case 3:
      sub_1DCA543DC();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA36750();
      uint64_t v83 = v114;
      goto LABEL_13;
    case 4:
      sub_1DCA54390();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA59920();
      goto LABEL_13;
    case 5:
      sub_1DCA54344();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA59ACC();
      goto LABEL_13;
    case 6:
      sub_1DCA542F8();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA598FC();
      goto LABEL_13;
    case 7:
      sub_1DCA542AC();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA36750();
      uint64_t v83 = &v118;
      goto LABEL_13;
    case 8:
      sub_1DCA54260();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA59968();
      goto LABEL_13;
    case 9:
      sub_1DCA54214();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA36750();
      uint64_t v83 = &a14;
      goto LABEL_13;
    case 10:
      sub_1DCA541C8();
      sub_1DCA366FC();
      uint64_t v81 = sub_1DCA598CC();
LABEL_13:
      uint64_t v84 = *(v83 - 32);
      goto LABEL_21;
    case 11:
      sub_1DCA5417C();
      sub_1DCA366FC();
      goto LABEL_20;
    case 12:
      sub_1DCA54130();
      sub_1DCA366FC();
      goto LABEL_20;
    case 13:
      sub_1DCA540E4();
      sub_1DCA366FC();
      goto LABEL_20;
    case 14:
      sub_1DCA54098();
      sub_1DCA366FC();
      goto LABEL_20;
    case 15:
      sub_1DCA5404C();
      sub_1DCA366FC();
      goto LABEL_20;
    case 16:
      sub_1DCA54000();
      sub_1DCA366FC();
LABEL_20:
      uint64_t v81 = sub_1DCA5950C();
LABEL_21:
      v82(v81, v84);
      break;
    default:
      sub_1DCA544C0();
      sub_1DCB88E88();
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v22, v75);
      break;
  }
  sub_1DC88D5C8();
  v85();
  sub_1DC88D674();
}

uint64_t AccessibilitySoundRecognition.BuiltInDetectorIdentifier.hashValue.getter()
{
  return sub_1DCB891F8();
}

void AccessibilitySoundRecognition.BuiltInDetectorIdentifier.init(from:)()
{
  sub_1DC88D6B0();
  unsigned int v3 = v2;
  uint64_t v65 = v4;
  sub_1DC87E988(&qword_1EAAA5C60);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DCA36AC4(v6, v53);
  sub_1DC87E988(&qword_1EAAA5C68);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DCA367CC(v8, v54);
  sub_1DC87E988(&qword_1EAAA5C70);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA5C78);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DCA3684C(v11, v55);
  sub_1DC87E988(&qword_1EAAA5C80);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA5C88);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v13);
  sub_1DCA36AA8(v14, v56);
  sub_1DC87E988(&qword_1EAAA5C90);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v15);
  sub_1DC9DF580(v16, v57);
  sub_1DC87E988(&qword_1EAAA5C98);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v17);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA5CA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v18);
  sub_1DCA597FC(v19, v58);
  sub_1DC87E988(&qword_1EAAA5CA8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v20);
  sub_1DC96FA40(v21, v59);
  sub_1DC87E988(&qword_1EAAA5CB0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v22);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA5CB8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v23);
  sub_1DCA59604(v24, v60);
  sub_1DC87E988(&qword_1EAAA5CC0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v25);
  sub_1DC9DF59C(v26, v61);
  sub_1DC87E988(&qword_1EAAA5CC8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v27);
  sub_1DCA36830(v28, v62);
  sub_1DC87E988(&qword_1EAAA5CD0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v29);
  sub_1DCA36AE0(v30, v63);
  sub_1DC87E988(&qword_1EAAA5CD8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v31);
  sub_1DC95AE60();
  sub_1DC87E988(&qword_1EAAA5CE0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v32);
  sub_1DC89D9A0();
  uint64_t v33 = sub_1DC87E988(&qword_1EAAA5CE8);
  sub_1DC89D4E0();
  uint64_t v35 = v34;
  MEMORY[0x1F4188790](v36);
  sub_1DC89D970();
  uint64_t v66 = (uint64_t)v3;
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA53FB4();
  sub_1DCB89298();
  if (v0) {
    goto LABEL_26;
  }
  uint64_t v37 = sub_1DCB88E58();
  uint64_t v38 = *(void *)(v37 + 16);
  if (!v38)
  {
    uint64_t v46 = v1;
    uint64_t v47 = v33;
LABEL_8:
    sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v49 = v48;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v49 = &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier;
    sub_1DCB88D68();
    sub_1DCA36B68();
    sub_1DC8F0494();
    sub_1DCA598C0();
    v50();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v46, v47);
    goto LABEL_26;
  }
  uint64_t v64 = v1;
  uint64_t v39 = v33;
  uint64_t v40 = *(unsigned __int8 *)(v37 + 32);
  sub_1DC9CFE4C(1, v38, v37, v37 + 32, 0, (2 * v38) | 1);
  uint64_t v42 = v41;
  unint64_t v44 = v43;
  swift_bridgeObjectRelease();
  if (v42 != v44 >> 1)
  {
    uint64_t v46 = v64;
    uint64_t v47 = v39;
    goto LABEL_8;
  }
  switch(v40)
  {
    case 1:
      uint64_t v45 = v65;
      sub_1DCA54474();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
    case 2:
      uint64_t v45 = v65;
      sub_1DCA54428();
      sub_1DCA59450();
      sub_1DCA59938();
      break;
    case 3:
      uint64_t v45 = v65;
      sub_1DCA543DC();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
    case 4:
      uint64_t v45 = v65;
      sub_1DCA54390();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
    case 5:
      uint64_t v45 = v65;
      sub_1DCA54344();
      sub_1DCA59450();
      sub_1DCA59920();
      break;
    case 6:
      uint64_t v45 = v65;
      sub_1DCA542F8();
      sub_1DCA59478();
      sub_1DCA36750();
      break;
    case 7:
      uint64_t v45 = v65;
      sub_1DCA542AC();
      sub_1DCA59450();
      sub_1DCA59ACC();
      break;
    case 8:
      uint64_t v45 = v65;
      sub_1DCA54260();
      sub_1DCA59478();
      sub_1DCA598FC();
      break;
    case 9:
      uint64_t v45 = v65;
      sub_1DCA54214();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
    case 10:
      uint64_t v45 = v65;
      sub_1DCA541C8();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
    case 11:
      uint64_t v45 = v65;
      sub_1DCA5417C();
      sub_1DCA59450();
      sub_1DCA59968();
      break;
    case 12:
      uint64_t v45 = v65;
      sub_1DCA54130();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
    case 13:
      uint64_t v45 = v65;
      sub_1DCA540E4();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
    case 14:
      uint64_t v45 = v65;
      sub_1DCA54098();
      sub_1DCA59450();
      sub_1DCA598CC();
      break;
    case 15:
      uint64_t v45 = v65;
      sub_1DCA5404C();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
    case 16:
      uint64_t v45 = v65;
      sub_1DCA54000();
      sub_1DCA59450();
      sub_1DCA5950C();
      break;
    default:
      uint64_t v45 = v65;
      sub_1DCA544C0();
      sub_1DCA59450();
      sub_1DCA36750();
      break;
  }
  sub_1DC88D5C8();
  v51();
  swift_unknownObjectRelease();
  sub_1DC88D5C8();
  v52();
  unsigned char *v45 = v40;
LABEL_26:
  sub_1DC8818D0(v66);
  sub_1DC88D674();
}

void sub_1DCA48CF0(void *a1@<X8>)
{
  *a1 = &unk_1F37E02E8;
}

void sub_1DCA48D00()
{
}

#error "1DCA48D24: call analysis failed (funcsize=6)"

uint64_t AccessibilitySoundRecognition.DetectorIdentifier.hash(into:)()
{
  uint64_t v1 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DCA597D4();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D988();
  sub_1DCA59AC0();
  sub_1DCA54B00();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC92F630();
    v6();
    sub_1DCB891B8();
    sub_1DCA545CC((unint64_t *)&qword_1EAA9E778, MEMORY[0x1E4F27990]);
    sub_1DCB87818();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  }
  else
  {
    sub_1DCB891B8();
    return sub_1DCB891B8();
  }
}

uint64_t static AccessibilitySoundRecognition.DetectorIdentifier.== infix(_:_:)()
{
  uint64_t v19 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  sub_1DCA597D4();
  sub_1DC88819C();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (unsigned __int8 *)&v18 - v8;
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA5CF0);
  uint64_t v11 = sub_1DC8BADF0(v10);
  MEMORY[0x1F4188790](v11);
  sub_1DC909E14();
  uint64_t v13 = (unsigned __int8 *)(v0 + *(int *)(v12 + 56));
  sub_1DCA54B00();
  sub_1DCA54B00();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DCA54B00();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v15 = *v9 == *v13;
      goto LABEL_6;
    }
LABEL_8:
    sub_1DC88CC04(v0, &qword_1EAAA5CF0);
    char v15 = 0;
    return v15 & 1;
  }
  sub_1DCA54B00();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v19);
    goto LABEL_8;
  }
  sub_1DC92F630();
  v14();
  sub_1DCA59B60();
  char v15 = sub_1DCB86BB8();
  uint64_t v16 = *(void (**)(void))(v2 + 8);
  sub_1DC8881AC();
  v16();
  sub_1DC8881AC();
  v16();
LABEL_6:
  sub_1DCA54A58(v0, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
  return v15 & 1;
}

uint64_t sub_1DCA49138(char a1)
{
  if (a1) {
    return 0x6D6F74737563;
  }
  else {
    return 0x6E49746C697562;
  }
}

uint64_t sub_1DCA4916C()
{
  return sub_1DCA4DC40();
}

uint64_t sub_1DCA49184(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54614();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA491C0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54614();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA491FC()
{
  return sub_1DCA49138(*v0);
}

uint64_t sub_1DCA49204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA49E68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA4922C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54534();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA49268(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54534();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA492A4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54580();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA492E0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54580();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AccessibilitySoundRecognition.DetectorIdentifier.encode(to:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA5CF8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DCA36AC4(v4, v16);
  sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v19 = v6;
  uint64_t v20 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1DCA367CC(v7, v17);
  sub_1DC87E988(&qword_1EAAA5D00);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC8CD750();
  type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v9);
  sub_1DC89D988();
  uint64_t v21 = sub_1DC87E988(&qword_1EAAA5D08);
  sub_1DC89D4E0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  sub_1DC89D9A0();
  sub_1DCA59B18(v2);
  sub_1DCA54534();
  sub_1DCB892B8();
  sub_1DCA54B00();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCA59914();
    sub_1DC92F630();
    v13();
    sub_1DCA54580();
    sub_1DCA59A90();
    sub_1DCA545CC(&qword_1EAAA3410, MEMORY[0x1E4F27990]);
    sub_1DCB88F18();
    sub_1DCA59A3C();
    sub_1DC88D5C8();
    v14();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  else
  {
    sub_1DCA54614();
    sub_1DCA59A90();
    sub_1DCA54660();
    sub_1DCB88F18();
    sub_1DC88D5C8();
    v15();
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v21);
  sub_1DCA59874();
  sub_1DC88D674();
}

uint64_t AccessibilitySoundRecognition.DetectorIdentifier.hashValue.getter()
{
  return sub_1DCB891F8();
}

void AccessibilitySoundRecognition.DetectorIdentifier.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  sub_1DC88D6B0();
  uint64_t v62 = v12;
  uint64_t v14 = v13;
  uint64_t v54 = v15;
  sub_1DC87E988(&qword_1EAAA5D38);
  sub_1DC89D4E0();
  uint64_t v57 = v16;
  uint64_t v58 = v17;
  MEMORY[0x1F4188790](v16);
  sub_1DC96FA40(v18, v52[0]);
  sub_1DC87E988(&qword_1EAAA5D40);
  sub_1DC89D4E0();
  uint64_t v55 = v20;
  uint64_t v56 = v19;
  MEMORY[0x1F4188790](v19);
  sub_1DC88D550();
  uint64_t v60 = v21;
  uint64_t v61 = sub_1DC87E988(&qword_1EAAA5D48);
  sub_1DC89D4E0();
  uint64_t v59 = v22;
  MEMORY[0x1F4188790](v23);
  sub_1DC981E40();
  uint64_t v24 = type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(0);
  sub_1DC88819C();
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)v52 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)v52 - v32;
  sub_1DC881A8C(v14, v14[3]);
  sub_1DCA54534();
  uint64_t v34 = v62;
  sub_1DCB89298();
  if (v34) {
    goto LABEL_8;
  }
  v52[0] = (uint64_t)v31;
  v52[1] = (uint64_t)v33;
  v52[2] = (uint64_t)v28;
  uint64_t v53 = v24;
  uint64_t v62 = v14;
  uint64_t v35 = sub_1DCB88E58();
  uint64_t v36 = *(void *)(v35 + 16);
  if (!v36
    || (char v37 = *(unsigned char *)(v35 + 32),
        sub_1DC9CFE4C(1, v36, v35, v35 + 32, 0, (2 * v36) | 1),
        uint64_t v39 = v38,
        unint64_t v41 = v40,
        swift_bridgeObjectRelease(),
        v39 != v41 >> 1))
  {
    uint64_t v42 = v53;
    sub_1DCB88B18();
    sub_1DC883884();
    unint64_t v44 = v43;
    sub_1DC87E988(&qword_1EAA9E130);
    uint64_t *v44 = v42;
    sub_1DCB88D68();
    sub_1DCA59840();
    sub_1DCA36B68();
    sub_1DC8F0494();
    sub_1DCA598C0();
    v45();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1DC8881AC();
    v46();
    uint64_t v14 = v62;
LABEL_8:
    uint64_t v47 = (uint64_t)v14;
    goto LABEL_9;
  }
  if (v37)
  {
    sub_1DCA54580();
    sub_1DC9D2E60();
    sub_1DCB86BF8();
    sub_1DCA545CC(&qword_1EAAA5D50, MEMORY[0x1E4F27990]);
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v48();
    swift_unknownObjectRelease();
    sub_1DC8881AC();
    v49();
  }
  else
  {
    sub_1DCA54614();
    sub_1DC9D2E60();
    sub_1DCA546AC();
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v50();
    swift_unknownObjectRelease();
    sub_1DC8881AC();
    v51();
    *(unsigned char *)v52[0] = a12;
  }
  swift_storeEnumTagMultiPayload();
  sub_1DCA54AAC();
  sub_1DCA54AAC();
  uint64_t v47 = (uint64_t)v62;
LABEL_9:
  sub_1DC8818D0(v47);
  sub_1DC88D674();
}

uint64_t sub_1DCA49C04()
{
  sub_1DC957B28(v0, (uint64_t)v12);
  sub_1DC957B28((uint64_t)v12, (uint64_t)v13);
  int v1 = sub_1DC957B84((uint64_t)v13);
  uint64_t v2 = nullsub_1(v13);
  if (v1 == 1)
  {
    sub_1DCA59B80(v2, v3, v4, v5, v6, v7, v8, v9, v11);
    sub_1DCB891B8();
    sub_1DCB879B8();
    return sub_1DCA4F660();
  }
  else
  {
    sub_1DCB891B8();
    return sub_1DCB891B8();
  }
}

BOOL sub_1DCA49CB8(uint64_t a1, uint64_t a2)
{
  sub_1DC957B28(a1, (uint64_t)v17);
  sub_1DC957B28(a2, (uint64_t)v18);
  sub_1DC957B28((uint64_t)v17, (uint64_t)v19);
  sub_1DC957B28((uint64_t)v18, (uint64_t)&v20);
  sub_1DC957B28((uint64_t)v17, (uint64_t)v21);
  if (sub_1DC957B84((uint64_t)v21) != 1)
  {
    int v7 = *(unsigned __int8 *)nullsub_1(v21);
    sub_1DC957B28((uint64_t)v18, (uint64_t)v15);
    int v8 = sub_1DC957B84((uint64_t)v15);
    uint64_t v9 = (unsigned __int8 *)nullsub_1(v15);
    if (v8 != 1)
    {
      int v10 = *v9;
      sub_1DCA585D8((uint64_t)v19);
      return v7 == v10;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (void *)nullsub_1(v21);
  sub_1DC957B28((uint64_t)v18, (uint64_t)v15);
  if (sub_1DC957B84((uint64_t)v15) != 1)
  {
    nullsub_1(v15);
    sub_1DC957B28((uint64_t)v17, (uint64_t)v14);
    uint64_t v11 = nullsub_1(v14);
    sub_1DC957B8C(v11);
LABEL_12:
    uint64_t v12 = v18;
LABEL_13:
    sub_1DCA58598((uint64_t)v12);
    sub_1DCA585D8((uint64_t)v19);
    return 0;
  }
  uint64_t v4 = (void *)nullsub_1(v15);
  BOOL v5 = *v3 == *v4 && v3[1] == v4[1];
  if (!v5 && (sub_1DCB89018() & 1) == 0)
  {
    sub_1DCA58598((uint64_t)v18);
    uint64_t v12 = v17;
    goto LABEL_13;
  }
  memcpy(__dst, v3 + 2, sizeof(__dst));
  memcpy(v14, v4 + 2, 0xC0uLL);
  BOOL v6 = sub_1DCA4F75C((uint64_t)__dst, (uint64_t)v14);
  sub_1DCA58598((uint64_t)v18);
  sub_1DCA58598((uint64_t)v17);
  sub_1DCA585D8((uint64_t)v19);
  return v6;
}

uint64_t sub_1DCA49E68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E49746C697562 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6F74737563 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA49F50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F736E6574 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA4A028(char a1)
{
  if (a1) {
    return 0x73726F736E6574;
  }
  else {
    return 25705;
  }
}

void sub_1DCA4A054()
{
  sub_1DC88D6B0();
  uint64_t v3 = v0;
  BOOL v5 = v4;
  sub_1DC87E988(&qword_1EAAA6030);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA6038);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC89D9B8();
  uint64_t v16 = sub_1DC87E988(&qword_1EAAA6040);
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC89D970();
  sub_1DC957B28(v3, (uint64_t)v18);
  sub_1DC881A8C(v5, v5[3]);
  sub_1DCA576A4();
  sub_1DCB892B8();
  sub_1DC957B28((uint64_t)v18, (uint64_t)v19);
  LODWORD(v5) = sub_1DC957B84((uint64_t)v19);
  uint64_t v11 = (unsigned char *)nullsub_1(v19);
  uint64_t v12 = v11;
  if (v5 == 1)
  {
    sub_1DCA576F0();
    sub_1DCB88E88();
    v17[0] = 0;
    sub_1DCB88EC8();
    if (!v1)
    {
      memcpy(v17, v12 + 16, sizeof(v17));
      sub_1DC9BFF4C();
      sub_1DCB88F18();
    }
    sub_1DC88D5C8();
    v13();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v16);
  }
  else
  {
    char v14 = *v11;
    sub_1DCA5773C();
    sub_1DCB88E88();
    v17[0] = v14;
    sub_1DCA54660();
    sub_1DCB88F18();
    sub_1DC88D5C8();
    v15();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v16);
  }
  sub_1DC88D674();
}

uint64_t sub_1DCA4A328()
{
  sub_1DC957B28(v0, (uint64_t)v22);
  sub_1DC89D754();
  uint64_t v1 = sub_1DCA599CC((uint64_t)v22);
  if (v9)
  {
    sub_1DCA59AE0(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
    sub_1DCB891B8();
    sub_1DCB879B8();
    sub_1DCA4F660();
  }
  else
  {
    sub_1DC8A9098();
    sub_1DC89DC30();
  }
  return sub_1DCB891F8();
}

void sub_1DCA4A3B4()
{
  sub_1DC88D6B0();
  int v3 = v2;
  uint64_t v28 = v4;
  sub_1DC87E988(&qword_1EAAA6060);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA6068);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC95AE60();
  uint64_t v7 = sub_1DC87E988((uint64_t *)&unk_1EAAA6070);
  sub_1DC89D4E0();
  uint64_t v29 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA576A4();
  sub_1DCB89298();
  if (v0) {
    goto LABEL_9;
  }
  uint64_t v10 = sub_1DCB88E58();
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = v7;
  if (!v11)
  {
LABEL_7:
    sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v19 = v18;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v19 = &unk_1F37DFAF8;
    sub_1DCB88D68();
    sub_1DCA59840();
    sub_1DCA36B68();
    sub_1DC8F0494();
    sub_1DCA598C0();
    v20();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1, v12);
LABEL_9:
    sub_1DC8818D0((uint64_t)v3);
    goto LABEL_10;
  }
  char v35 = *(unsigned char *)(v10 + 32);
  sub_1DC9CFE4C(1, v11, v10, v10 + 32, 0, (2 * v11) | 1);
  uint64_t v14 = v13;
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v14 != v16 >> 1)
  {
    uint64_t v12 = v7;
    goto LABEL_7;
  }
  if (v35)
  {
    sub_1DCA576F0();
    sub_1DCA59A5C();
    LOBYTE(v31[0]) = 0;
    uint64_t v17 = sub_1DCB88DA8();
    uint64_t v22 = v21;
    uint64_t v30 = v17;
    sub_1DC9C0080();
    sub_1DCA59A1C();
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v26();
    swift_unknownObjectRelease();
    sub_1DC92F4D8();
    v27();
    memcpy(v32, v33, sizeof(v32));
    v31[0] = v30;
    v31[1] = v22;
    sub_1DCA54948((uint64_t)v31);
  }
  else
  {
    LOBYTE(v31[0]) = 0;
    sub_1DCA5773C();
    sub_1DCA59A5C();
    sub_1DCA546AC();
    sub_1DCB88DF8();
    uint64_t v23 = sub_1DCA598E4();
    v24(v23);
    swift_unknownObjectRelease();
    sub_1DCA5978C();
    v25();
    LOBYTE(v31[0]) = v33[0];
    sub_1DCA54940((uint64_t)v31);
  }
  sub_1DC957B28((uint64_t)v31, (uint64_t)v34);
  sub_1DC957B28((uint64_t)v34, v28);
  sub_1DC8818D0((uint64_t)v3);
LABEL_10:
  sub_1DCA59874();
  sub_1DC88D674();
}

void sub_1DCA4A8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AccessibilitySoundRecognition.DetectorIdentifier.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

void sub_1DCA4A8E4()
{
}

uint64_t sub_1DCA4A904()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA4A944(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5773C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4A980(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5773C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4A9BC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA576A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4A9F8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA576A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4AA34()
{
  return sub_1DCA4A028(*v0);
}

uint64_t sub_1DCA4AA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA49F50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA4AA64(uint64_t a1)
{
  unint64_t v2 = sub_1DCA576F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4AAA0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA576F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCA4AADC()
{
}

void sub_1DCA4AAF4()
{
}

uint64_t sub_1DCA4AB14()
{
  sub_1DC957B28(v0, (uint64_t)v5);
  sub_1DCB891A8();
  sub_1DC957B28((uint64_t)v5, (uint64_t)v6);
  int v1 = sub_1DC957B84((uint64_t)v6);
  uint64_t v2 = nullsub_1(v6);
  if (v1 == 1)
  {
    memcpy(__dst, (const void *)(v2 + 16), sizeof(__dst));
    sub_1DCB891B8();
    sub_1DCB879B8();
    sub_1DCA4F660();
  }
  else
  {
    sub_1DCB891B8();
    sub_1DCB891B8();
  }
  return sub_1DCB891F8();
}

BOOL static AccessibilitySoundRecognition.Detection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AccessibilitySoundRecognition.Detection.hash(into:)()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DCA4AC30(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54744();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4AC6C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54744();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4ACA8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA546F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4ACE4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA546F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4AD20(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54790();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4AD5C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54790();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AccessibilitySoundRecognition.Detection.encode(to:)()
{
  sub_1DC88D6B0();
  sub_1DC87E988(&qword_1EAAA5D60);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DCA597FC(v2, v10);
  sub_1DC87E988(&qword_1EAAA5D68);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC95AE60();
  sub_1DC87E988(&qword_1EAAA5D70);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC89D9A0();
  char v5 = *v0;
  uint64_t v6 = (void *)sub_1DCA59914();
  sub_1DC881A8C(v6, v7);
  sub_1DCA546F8();
  sub_1DCB892B8();
  if (v5)
  {
    sub_1DCA54744();
    sub_1DCA59A90();
    sub_1DCA5950C();
  }
  else
  {
    sub_1DCA54790();
    sub_1DCA59A90();
    sub_1DCA59A3C();
  }
  sub_1DC88D5C8();
  v8();
  sub_1DC8881AC();
  v9();
  sub_1DC88D674();
}

uint64_t AccessibilitySoundRecognition.Detection.hashValue.getter()
{
  return sub_1DCB891F8();
}

void AccessibilitySoundRecognition.Detection.init(from:)()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v25 = v4;
  sub_1DC87E988(&qword_1EAAA5D90);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA5D98);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC8CD750();
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA5DA0);
  sub_1DC89D4E0();
  uint64_t v26 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC89D988();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA546F8();
  sub_1DCA59798();
  sub_1DCB89298();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v27 = (uint64_t)v3;
  uint64_t v10 = sub_1DCB88E58();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11
    || (char v12 = *(unsigned char *)(v10 + 32),
        sub_1DC9CFE4C(1, v11, v10, v10 + 32, 0, (2 * v11) | 1),
        uint64_t v14 = v13,
        unint64_t v16 = v15,
        swift_bridgeObjectRelease(),
        v14 != v16 >> 1))
  {
    sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v19 = v18;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v19 = &type metadata for AccessibilitySoundRecognition.Detection;
    sub_1DCB88D68();
    sub_1DCA59840();
    sub_1DCA36B68();
    sub_1DC8F0494();
    sub_1DCA598C0();
    v20();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1DC88D5C8();
    v21();
    uint64_t v3 = (void *)v27;
LABEL_8:
    sub_1DC8818D0((uint64_t)v3);
    goto LABEL_9;
  }
  if (v12)
  {
    sub_1DCA54744();
    sub_1DCA59A1C();
    sub_1DCB88D58();
    uint64_t v17 = v25;
    sub_1DC88D5C8();
    v22();
    swift_unknownObjectRelease();
    sub_1DCA5978C();
    v23();
  }
  else
  {
    sub_1DCA54790();
    sub_1DCA59A1C();
    sub_1DCB88D58();
    uint64_t v17 = v25;
    sub_1DC88D5C8();
    v24();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v7);
  }
  *uint64_t v17 = v12;
  sub_1DC8818D0(v27);
LABEL_9:
  sub_1DC88D674();
}

void sub_1DCA4B36C()
{
}

void sub_1DCA4B384()
{
}

uint64_t AccessibilitySoundRecognition.Request.description.getter()
{
  sub_1DC957B28(v0, (uint64_t)v7);
  sub_1DC957B28((uint64_t)v7, (uint64_t)v8);
  if (sub_1DC957B84((uint64_t)v8) == 1)
  {
    uint64_t v1 = nullsub_1(v8) + 16;
    sub_1DC957B28((uint64_t)v7, (uint64_t)&v6);
    uint64_t v2 = nullsub_1(&v6);
    sub_1DC957B8C(v2);
    sub_1DCA547DC(v1);
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCA595F8();
    uint64_t v5 = v3;
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    return v5;
  }
  else
  {
    nullsub_1(v8);
    sub_1DCB88A98();
    sub_1DC8E7B68();
    sub_1DCB87A18();
    sub_1DCB88C08();
    return 0;
  }
}

uint64_t AccessibilitySoundRecognition.Request.init(detectorIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DCA54B00();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCA54A58((uint64_t)v6, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
    uint64_t result = sub_1DCB88C68();
    __break(1u);
  }
  else
  {
    sub_1DCA54A58(a1, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
    v9[0] = *v6;
    sub_1DCA54940((uint64_t)v9);
    return sub_1DC957B28((uint64_t)v9, a2);
  }
  return result;
}

void AccessibilitySoundRecognition.Request.init(customModel:)()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  sub_1DCB86A18();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC8C1FC4();
  sub_1DC8E7D10();
  v4();
  sub_1DCA4B784();
  if (v0)
  {
    sub_1DC8CD890();
    v5();
  }
  else
  {
    memcpy(v10, v13, sizeof(v10));
    uint64_t v6 = sub_1DCB86938();
    uint64_t v8 = v7;
    sub_1DC8CD890();
    v9();
    memcpy(v12, v10, sizeof(v12));
    v11[0] = v6;
    v11[1] = v8;
    sub_1DCA54948((uint64_t)v11);
    sub_1DC957B28((uint64_t)v11, v2);
  }
  sub_1DC9E970C();
  sub_1DC88D674();
}

void sub_1DCA4B784()
{
  sub_1DC88D6B0();
  uint64_t v5 = v4;
  v253 = v6;
  sub_1DCB86E08();
  sub_1DC89D4E0();
  uint64_t v280 = v8;
  v281 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1DC88D550();
  v279 = v9;
  uint64_t v10 = sub_1DC87E988((uint64_t *)&unk_1EAAA6230);
  uint64_t v11 = sub_1DC8BADF0(v10);
  MEMORY[0x1F4188790](v11);
  sub_1DC888120();
  uint64_t v262 = v12;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v13);
  sub_1DC91990C();
  uint64_t v265 = v14;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v15);
  sub_1DC91990C();
  uint64_t v266 = v16;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v17);
  sub_1DC91990C();
  uint64_t v268 = v18;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v19);
  sub_1DC91990C();
  uint64_t v271 = v20;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v21);
  sub_1DC91990C();
  uint64_t v273 = v22;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v23);
  sub_1DC91990C();
  uint64_t v275 = v24;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v25);
  uint64_t v278 = (uint64_t)&v239 - v26;
  uint64_t v282 = sub_1DCB86E38();
  sub_1DC89D4E0();
  v276 = v27;
  MEMORY[0x1F4188790](v28);
  sub_1DC888120();
  uint64_t v254 = v29;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v30);
  sub_1DC91990C();
  uint64_t v255 = v31;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v32);
  sub_1DC91990C();
  uint64_t v256 = v33;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v34);
  sub_1DC91990C();
  uint64_t v257 = v35;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v36);
  sub_1DC91990C();
  uint64_t v258 = v37;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v38);
  sub_1DC91990C();
  uint64_t v259 = v39;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v40);
  sub_1DC91990C();
  uint64_t v260 = v41;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v42);
  sub_1DC91990C();
  uint64_t v261 = v43;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v44);
  sub_1DC91990C();
  uint64_t v263 = v45;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v46);
  sub_1DC91990C();
  uint64_t v264 = v47;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v48);
  sub_1DC91990C();
  uint64_t v267 = v49;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v50);
  sub_1DC91990C();
  uint64_t v269 = v51;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v52);
  sub_1DC91990C();
  uint64_t v270 = v53;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v54);
  sub_1DC91990C();
  uint64_t v272 = v55;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v56);
  sub_1DC91990C();
  uint64_t v274 = v57;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v58);
  v277 = (char *)&v239 - v59;
  uint64_t v60 = sub_1DC87E988(&qword_1EAAA2DE8);
  uint64_t v61 = sub_1DC8BADF0(v60);
  MEMORY[0x1F4188790](v61);
  sub_1DC89D988();
  uint64_t v62 = sub_1DCB86CB8();
  sub_1DC89D4E0();
  uint64_t v283 = v63;
  MEMORY[0x1F4188790](v64);
  sub_1DC89D9A0();
  sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v66 = v65;
  MEMORY[0x1F4188790](v67);
  sub_1DC89D970();
  uint64_t v68 = type metadata accessor for ModelFeatureExtractor(0);
  uint64_t v69 = sub_1DC8BADF0(v68);
  MEMORY[0x1F4188790](v69);
  sub_1DC909E14();
  sub_1DC8E7D10();
  v70();
  sub_1DC9A1A60();
  if (v1)
  {
    sub_1DC8CD890();
    v71();
    goto LABEL_11;
  }
  uint64_t v251 = v5;
  uint64_t v252 = v66;
  uint64_t v250 = v3;
  sub_1DC9A1B94(0x6F696475615F6474, 0xE800000000000000, v2);
  uint64_t v72 = v0;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v2, 1, v62) == 1)
  {
    sub_1DC88CC04(v2, &qword_1EAAA2DE8);
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC931D18(v73, v74, (uint64_t)"shaped array input feature missing from custom model");
    sub_1DCA5973C();
    sub_1DC88D5C8();
    v75();
LABEL_9:
    uint64_t v91 = v72;
LABEL_10:
    sub_1DCA54A58(v91, (void (*)(void))type metadata accessor for ModelFeatureExtractor);
    goto LABEL_11;
  }
  uint64_t v249 = 0;
  uint64_t v76 = v283;
  uint64_t v77 = v250;
  sub_1DC92F630();
  v78();
  uint64_t v79 = *(void *)(sub_1DCB86CA8() + 16);
  swift_bridgeObjectRelease();
  if (v79 != 3)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC931D18(v88, v89, (uint64_t)"shaped array input feature has unexpected size");
    sub_1DCA5973C();
    sub_1DC88D5C8();
    v90();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v62);
    goto LABEL_9;
  }
  uint64_t v248 = v62;
  uint64_t v80 = (uint64_t)v279;
  sub_1DCA59798();
  sub_1DCB86DF8();
  uint64_t v81 = v278;
  sub_1DC9A1EF8(v72, 0x72616C706D657865, 0xE800000000000000, v80, v278);
  uint64_t v82 = v280;
  uint64_t v83 = v280 + 8;
  uint64_t v247 = *(void *)(v280 + 8);
  sub_1DC92F4D8();
  v84();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v81, 1, v282) == 1)
  {
    sub_1DC88CC04(v81, (uint64_t *)&unk_1EAAA6230);
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC931D18(v85, v86, (uint64_t)"exemplar layer missing from custom model");
    sub_1DCA5973C();
    sub_1DC88D5C8();
    v87();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v250, v248);
    goto LABEL_9;
  }
  uint64_t v245 = v276[4];
  v246 = v276 + 4;
  sub_1DC92F630();
  v92();
  sub_1DCB86D88();
  uint64_t v94 = *(void (**)(void))(v82 + 104);
  uint64_t v93 = v82 + 104;
  LODWORD(v280) = *MEMORY[0x1E4F73680];
  v244 = v94;
  v94(v80);
  uint64_t v278 = v72;
  uint64_t v95 = v72;
  uint64_t v96 = v275;
  sub_1DC9A1EF8(v95, 0xD000000000000010, 0x80000001DCB974A0, v80, v275);
  sub_1DC92F4D8();
  v97();
  sub_1DCA59518(v96);
  if (v108)
  {
    sub_1DC88CC04(v96, (uint64_t *)&unk_1EAAA6230);
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DC931D18(v98, v99, (uint64_t)"feature reduction layer missing from custom model");
    sub_1DCA5973C();
    sub_1DC88D5C8();
    v100();
    sub_1DC89D710();
    v101();
    sub_1DC88D5C8();
    v102();
LABEL_26:
    uint64_t v91 = v278;
    goto LABEL_10;
  }
  sub_1DCA594E4();
  v103();
  sub_1DCB86D88();
  sub_1DCA596A0();
  v104();
  uint64_t v105 = v273;
  uint64_t v106 = v278;
  sub_1DC9A1EF8(v278, 0x31766E6F635F3163, 0xE900000000000064, v80, v273);
  sub_1DC92F4D8();
  v107();
  sub_1DCA59518(v105);
  if (v108)
  {
    sub_1DC88CC04(v105, (uint64_t *)&unk_1EAAA6230);
    type metadata accessor for SNError();
    sub_1DCA59620();
    sub_1DC8E7B68();
    sub_1DC931D18(v109, v110, (uint64_t)"c1_conv1d layer missing from custom model");
    sub_1DCA59AA8();
    sub_1DC88D5C8();
    v111();
    uint64_t v112 = (void (*)(void))v276[1];
    sub_1DCA59558();
    v112();
    sub_1DCA59558();
    v112();
    sub_1DC88D5C8();
    v113();
    uint64_t v91 = v106;
    goto LABEL_10;
  }
  uint64_t v114 = (void (*)(void))v80;
  sub_1DCA594E4();
  v115();
  sub_1DCB86D88();
  sub_1DCA596A0();
  v116();
  sub_1DCA5968C();
  uint64_t v118 = v271;
  sub_1DCA5988C(v106, v117 + 256, v271);
  sub_1DC92F4D8();
  v119();
  sub_1DCA59518(v118);
  if (v120)
  {
    sub_1DC88CC04(v118, (uint64_t *)&unk_1EAAA6230);
    type metadata accessor for SNError();
    sub_1DCA59620();
    sub_1DC8E7B68();
    sub_1DC931D18(v121, v122, (uint64_t)"c2_conv1d layer missing from custom model");
    sub_1DCA59AA8();
    sub_1DC88D5C8();
    v123();
    sub_1DCA599FC();
LABEL_24:
    sub_1DCA59558();
    v114();
    sub_1DCA59558();
    v114();
    ((void (*)(char *, uint64_t))v114)(v277, v83);
LABEL_25:
    sub_1DC89D710();
    v133();
    goto LABEL_26;
  }
  sub_1DCA594E4();
  v124();
  sub_1DCB86D88();
  sub_1DCA596A0();
  v125();
  sub_1DCA5968C();
  uint64_t v127 = v268;
  sub_1DCA5988C(v278, v126 + 512, v268);
  sub_1DC92F4D8();
  v128();
  sub_1DCA59518(v127);
  if (v129)
  {
    sub_1DC88CC04(v127, (uint64_t *)&unk_1EAAA6230);
    type metadata accessor for SNError();
    sub_1DCA59620();
    sub_1DC8E7B68();
    sub_1DC931D18(v130, v131, (uint64_t)"c3_conv1d layer missing from custom model");
    sub_1DCA59AA8();
    sub_1DC88D5C8();
    v132();
    sub_1DCA599FC();
    sub_1DCA59558();
    v114();
    goto LABEL_24;
  }
  uint64_t v134 = v282;
  sub_1DCA594E4();
  v135();
  sub_1DCB86D88();
  sub_1DCA596A0();
  v136();
  sub_1DCA5968C();
  uint64_t v138 = v266;
  sub_1DCA5988C(v278, v137 + 768, v266);
  sub_1DC92F4D8();
  v139();
  sub_1DCA59518(v138);
  if (v140)
  {
    sub_1DC88CC04(v138, (uint64_t *)&unk_1EAAA6230);
    type metadata accessor for SNError();
    sub_1DCA59620();
    sub_1DC8E7B68();
    sub_1DC931D18(v141, v142, (uint64_t)"c4_conv1d layer missing from custom model");
    sub_1DCA59AA8();
    sub_1DC8CD890();
    v143();
    uint64_t v144 = (void (*)(void))v276[1];
    sub_1DC92F4D8();
    v144();
    sub_1DC92F4D8();
    v144();
    sub_1DC92F4D8();
    v144();
    sub_1DC92F4D8();
    v144();
    sub_1DC92F4D8();
    v144();
    goto LABEL_25;
  }
  sub_1DCA594E4();
  v145();
  sub_1DCB86DD8();
  uint64_t v280 = v93;
  sub_1DCA598C0();
  v146();
  uint64_t v147 = v265;
  sub_1DC9A1EF8(v278, 12644, 0xE200000000000000, (uint64_t)v114, v265);
  sub_1DC92F4D8();
  v148();
  sub_1DCA59518(v147);
  if (v149)
  {
    sub_1DC88CC04(v147, (uint64_t *)&unk_1EAAA6230);
    type metadata accessor for SNError();
    sub_1DCA59B6C();
    sub_1DC8E7B68();
    sub_1DC931D18(v150, v151, (uint64_t)"d1 layer missing from custom model");
    sub_1DCA5973C();
    sub_1DC88D5C8();
    v152();
    uint64_t v153 = (void (*)(void))v276[1];
    sub_1DCA594D4();
    v153();
    sub_1DCA594D4();
    v153();
    sub_1DCA594D4();
    v153();
LABEL_36:
    sub_1DCA594D4();
    v153();
    sub_1DCA594D4();
    v153();
    sub_1DCA594D4();
    v153();
    sub_1DC89D710();
    v162();
    goto LABEL_26;
  }
  sub_1DCA594E4();
  v154();
  sub_1DCB86DD8();
  sub_1DC8BAE70();
  v155();
  uint64_t v156 = v262;
  sub_1DC9A1EF8(v278, 12900, 0xE200000000000000, (uint64_t)v114, v262);
  sub_1DC92F4D8();
  v157();
  sub_1DCA59518(v156);
  if (v158)
  {
    sub_1DC88CC04(v156, (uint64_t *)&unk_1EAAA6230);
    type metadata accessor for SNError();
    sub_1DCA59B6C();
    sub_1DC8E7B68();
    sub_1DC931D18(v159, v160, (uint64_t)"d2 layer missing from custom model");
    sub_1DCA5973C();
    sub_1DC88D5C8();
    v161();
    uint64_t v153 = (void (*)(void))v276[1];
    sub_1DCA594D4();
    v153();
    sub_1DCA594D4();
    v153();
    sub_1DCA594D4();
    v153();
    sub_1DCA594D4();
    v153();
    goto LABEL_36;
  }
  sub_1DCA594E4();
  v163();
  uint64_t v164 = sub_1DCB86CA8();
  uint64_t v166 = v277;
  if (*(void *)(v164 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v280 = *(void *)(v164 + 48);
    swift_bridgeObjectRelease();
    uint64_t v167 = v276;
    v281 = (void (*)(uint64_t, char *, uint64_t))v276[2];
    v281(v261, v166, v134);
    uint64_t v168 = v249;
    sub_1DC9A2B78();
    uint64_t v171 = v278;
    uint64_t v249 = v168;
    if (v168)
    {
      uint64_t v172 = (void (*)(void))v167[1];
      sub_1DCA5949C();
      v172();
      sub_1DC88D5C8();
      v173();
      sub_1DCA5949C();
      v172();
      sub_1DCA5949C();
      v172();
      sub_1DCA5949C();
      v172();
      sub_1DCA5949C();
      v172();
      sub_1DCA5949C();
      v172();
      sub_1DCA5949C();
      v172();
      sub_1DCA5949C();
      v172();
      sub_1DCA5949C();
      v172();
      sub_1DC89D710();
      v174();
      sub_1DCA54A58(v171, (void (*)(void))type metadata accessor for ModelFeatureExtractor);
      goto LABEL_11;
    }
    uint64_t v175 = v169;
    uint64_t v176 = MEMORY[0x1E4FBC860];
    if (v170) {
      uint64_t v177 = v170;
    }
    else {
      uint64_t v177 = MEMORY[0x1E4FBC860];
    }
    v279 = (void (*)(void))v167[1];
    sub_1DC8CD890();
    v178();
    sub_1DCA594F8();
    v179();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v180 = v249;
    sub_1DC9A2630();
    uint64_t v275 = v177;
    v276 = v182;
    uint64_t v273 = v183;
    uint64_t v271 = v180;
    if (v180)
    {
      sub_1DCA59914();
      v184 = v279;
      sub_1DC8CD890();
      v184();
      LODWORD(v268) = 0;
      sub_1DCA5970C();
      uint64_t v249 = v180;
      goto LABEL_68;
    }
    v246 = v175;
    if (v181) {
      uint64_t v185 = v181;
    }
    else {
      uint64_t v185 = v176;
    }
    sub_1DCA59914();
    sub_1DC8CD890();
    v186();
    sub_1DCA594F8();
    v187();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v247 = v185;
    swift_bridgeObjectRetain();
    sub_1DC9A2630();
    uint64_t v261 = v190;
    uint64_t v262 = v189;
    uint64_t v249 = 0;
    if (v188) {
      uint64_t v191 = v188;
    }
    else {
      uint64_t v191 = MEMORY[0x1E4FBC860];
    }
    sub_1DC92F4D8();
    v192();
    sub_1DCA594F8();
    v193();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v260 = v191;
    swift_bridgeObjectRetain();
    uint64_t v194 = v249;
    sub_1DC9A2630();
    uint64_t v245 = v196;
    uint64_t v259 = v197;
    uint64_t v249 = v194;
    if (v194)
    {
      v184 = v279;
      sub_1DC92F4D8();
      v184();
      swift_bridgeObjectRelease();
      sub_1DCA596E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v265) = 0;
      LODWORD(v266) = 0;
      LODWORD(v280) = 0;
      sub_1DCA596FC();
      goto LABEL_68;
    }
    if (v195) {
      v198 = v195;
    }
    else {
      v198 = (void (*)(void))MEMORY[0x1E4FBC860];
    }
    sub_1DC92F4D8();
    v199();
    sub_1DCA594F8();
    v200();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v244 = v198;
    swift_bridgeObjectRetain();
    uint64_t v201 = v249;
    sub_1DC9A2630();
    uint64_t v243 = v203;
    uint64_t v258 = v204;
    uint64_t v249 = v201;
    if (v201)
    {
      v184 = v279;
      sub_1DC92F4D8();
      v184();
      swift_bridgeObjectRelease();
      sub_1DCA596E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v266) = 0;
      LODWORD(v280) = 0;
      sub_1DCA596FC();
      LODWORD(v265) = 1;
      goto LABEL_68;
    }
    if (v202) {
      uint64_t v205 = v202;
    }
    else {
      uint64_t v205 = MEMORY[0x1E4FBC860];
    }
    sub_1DC92F4D8();
    v206();
    sub_1DCA594F8();
    v207();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v257 = v205;
    swift_bridgeObjectRetain();
    uint64_t v208 = v249;
    sub_1DC9A2630();
    uint64_t v241 = v210;
    uint64_t v242 = v211;
    uint64_t v249 = v208;
    if (v208)
    {
      v184 = v279;
      sub_1DC92F4D8();
      v184();
      swift_bridgeObjectRelease();
      sub_1DCA596E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v280) = 0;
      sub_1DCA596FC();
      LODWORD(v265) = 1;
      LODWORD(v266) = 1;
      goto LABEL_68;
    }
    if (v209) {
      uint64_t v212 = v209;
    }
    else {
      uint64_t v212 = MEMORY[0x1E4FBC860];
    }
    sub_1DC92F4D8();
    v213();
    sub_1DCA594F8();
    v214();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v256 = v212;
    swift_bridgeObjectRetain();
    uint64_t v215 = v249;
    sub_1DC9A289C();
    uint64_t v240 = v218;
    uint64_t v249 = v215;
    if (v215)
    {
      v184 = v279;
      sub_1DC92F4D8();
      v184();
      swift_bridgeObjectRelease();
      sub_1DCA596E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCA596FC();
      LODWORD(v265) = 1;
      LODWORD(v266) = 1;
      LODWORD(v280) = 1;
      goto LABEL_68;
    }
    uint64_t v166 = v216;
    if (v217) {
      uint64_t v221 = v217;
    }
    else {
      uint64_t v221 = MEMORY[0x1E4FBC860];
    }
    sub_1DC92F4D8();
    v222();
    sub_1DCA594F8();
    v223();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v255 = v221;
    swift_bridgeObjectRetain();
    uint64_t v224 = v249;
    sub_1DC9A289C();
    v281 = v225;
    uint64_t v268 = v226;
    uint64_t v249 = v224;
    if (v224)
    {
      v184 = v279;
      sub_1DC92F4D8();
      v184();
      swift_bridgeObjectRelease();
      sub_1DCA596E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v268) = 1;
      LODWORD(v265) = 1;
      LODWORD(v266) = 1;
      LODWORD(v280) = 1;
      LODWORD(v281) = 1;
LABEL_68:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC88D5C8();
      v219();
      sub_1DCA5949C();
      v184();
      sub_1DCA5949C();
      v184();
      sub_1DCA5949C();
      v184();
      sub_1DCA5949C();
      v184();
      sub_1DCA5949C();
      v184();
      sub_1DCA5949C();
      v184();
      sub_1DCA5949C();
      v184();
      sub_1DCA5949C();
      v184();
      sub_1DC88D5C8();
      v220();
      sub_1DCA54A58(v278, (void (*)(void))type metadata accessor for ModelFeatureExtractor);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v271)
      {
        if (v268) {
          goto LABEL_70;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v268)
        {
LABEL_70:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v265 & 1) == 0) {
            goto LABEL_71;
          }
          goto LABEL_77;
        }
      }
      if (!v265)
      {
LABEL_71:
        if (v266) {
          goto LABEL_72;
        }
        goto LABEL_78;
      }
LABEL_77:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v266)
      {
LABEL_72:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v280 & 1) == 0) {
          goto LABEL_73;
        }
        goto LABEL_79;
      }
LABEL_78:
      if (!v280)
      {
LABEL_73:
        if (!v281) {
          goto LABEL_11;
        }
LABEL_80:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
LABEL_79:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v281 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_80;
    }
  }
  uint64_t v227 = MEMORY[0x1E4FBC860];
  if (v165) {
    uint64_t v227 = v165;
  }
  uint64_t v271 = v227;
  v228 = v279;
  sub_1DC92F4D8();
  v228();
  sub_1DC88D5C8();
  v229();
  sub_1DC92F4D8();
  v228();
  sub_1DC92F4D8();
  v228();
  sub_1DC92F4D8();
  v228();
  sub_1DC92F4D8();
  v228();
  sub_1DC92F4D8();
  v228();
  sub_1DC92F4D8();
  v228();
  sub_1DC92F4D8();
  v228();
  sub_1DC92F4D8();
  v228();
  sub_1DC88D5C8();
  v230();
  sub_1DCA54A58(v278, (void (*)(void))type metadata accessor for ModelFeatureExtractor);
  v284[0] = v280;
  v284[1] = v246;
  v284[2] = v275;
  v284[3] = v276;
  v284[4] = v273;
  v284[5] = v247;
  v284[6] = v262;
  v284[7] = v261;
  v284[8] = v260;
  v284[9] = v245;
  v284[10] = v259;
  v284[11] = v244;
  v284[12] = v243;
  v284[13] = v258;
  v284[14] = v257;
  v284[15] = v241;
  v284[16] = v242;
  v284[17] = v256;
  v284[18] = v240;
  v284[19] = v166;
  v239 = v166;
  uint64_t v231 = v255;
  v284[20] = v255;
  v284[21] = v281;
  v284[22] = v268;
  v284[23] = v271;
  sub_1DC9589C8((uint64_t)v284);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v232 = v245;
  swift_bridgeObjectRelease();
  uint64_t v233 = v257;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v234 = v243;
  swift_bridgeObjectRelease();
  uint64_t v235 = v256;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v236 = v241;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v237 = v239;
  swift_bridgeObjectRelease();
  uint64_t v238 = v240;
  swift_bridgeObjectRelease();
  v285[0] = v280;
  v285[1] = v246;
  v285[2] = v275;
  v285[3] = v276;
  v285[4] = v273;
  v285[5] = v247;
  v285[6] = v262;
  v285[7] = v261;
  v285[8] = v260;
  v285[9] = v232;
  v285[10] = v259;
  v285[11] = v244;
  v285[12] = v234;
  v285[13] = v258;
  v285[14] = v233;
  v285[15] = v236;
  v285[16] = v242;
  v285[17] = v235;
  v285[18] = v238;
  v285[19] = v237;
  v285[20] = v231;
  v285[21] = v281;
  v285[22] = v268;
  v285[23] = v271;
  sub_1DCA547DC((uint64_t)v285);
  memcpy(v253, v284, 0xC0uLL);
LABEL_11:
  sub_1DC88D674();
}

void sub_1DCA4D27C()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v72 = v5;
  sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v70 = v7;
  uint64_t v71 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1DCA3684C(v8, v54[0]);
  sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v67 = v10;
  uint64_t v68 = v9;
  MEMORY[0x1F4188790](v9);
  sub_1DC9DF580(v11, v54[0]);
  uint64_t v59 = sub_1DC87E988(&qword_1EAAA6080);
  sub_1DC89D4E0();
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v14);
  sub_1DC888164((uint64_t)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v61 = sub_1DC87E988(&qword_1EAAAA930);
  sub_1DC89D4E0();
  uint64_t v60 = v16;
  MEMORY[0x1F4188790](v17);
  sub_1DC88D550();
  sub_1DC888164(v18);
  sub_1DC87E988(&qword_1EAAA11A0);
  sub_1DC89D4E0();
  uint64_t v62 = v20;
  uint64_t v63 = v19;
  MEMORY[0x1F4188790](v19);
  sub_1DCA36868(v21, v54[0]);
  sub_1DC87E988(&qword_1EAAA6088);
  sub_1DC89D4E0();
  uint64_t v65 = v23;
  uint64_t v66 = v22;
  MEMORY[0x1F4188790](v22);
  sub_1DC9DF59C(v24, v54[0]);
  uint64_t v78 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v64 = v25;
  MEMORY[0x1F4188790](v26);
  sub_1DC88D550();
  uint64_t v28 = v27;
  uint64_t v30 = v2[3];
  uint64_t v29 = v2[4];
  sub_1DC881A8C(v2, v30);
  (*(void (**)(uint64_t))(*(void *)(v29 + 8) + 8))(v30);
  if (!v0)
  {
    uint64_t v58 = 0;
    uint64_t v31 = sub_1DCAC3258();
    swift_release();
    sub_1DC9DEC34((uint64_t)v2, (uint64_t)&v73);
    uint64_t v32 = swift_allocObject();
    memcpy((void *)(v32 + 16), v4, 0xD0uLL);
    sub_1DC9DECD0(&v73, (_OWORD *)(v32 + 224));
    sub_1DC957B8C((uint64_t)v4);
    uint64_t v55 = v28;
    sub_1DCB86BE8();
    sub_1DCA599A4();
    *(void *)&long long v73 = v33;
    *((void *)&v73 + 1) = v34;
    swift_bridgeObjectRetain();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    v54[1] = v73;
    *(void *)&long long v73 = v31;
    *((void *)&v73 + 1) = sub_1DCA514B4;
    uint64_t v74 = 0;
    uint64_t v75 = sub_1DCA57880;
    uint64_t v76 = v32;
    uint64_t v77 = 1;
    uint64_t v57 = v31;
    swift_retain();
    uint64_t v56 = v32;
    swift_retain();
    sub_1DC87E988((uint64_t *)&unk_1EAAA6090);
    sub_1DC88CF34(&qword_1EAAA5010, (uint64_t *)&unk_1EAAA6090);
    sub_1DCB873D8();
    swift_release();
    swift_release();
    sub_1DC8E7D10();
    v35();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_1DCA5149C;
    *(void *)(v36 + 24) = 0;
    sub_1DC92F630();
    v37();
    sub_1DC87E988(&qword_1EAAA11A8);
    sub_1DC88CF34(&qword_1EAAA11B0, &qword_1EAAA11A8);
    sub_1DCB87378();
    sub_1DCA594D4();
    v38();
    *(void *)&long long v73 = 0;
    *((void *)&v73 + 1) = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCA595F8();
    *(void *)&long long v73 = v39;
    *((void *)&v73 + 1) = v40;
    sub_1DCA545CC(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCA25CEC();
    swift_bridgeObjectRelease();
    sub_1DCA59A3C();
    sub_1DC88D5C8();
    v41();
    sub_1DC88CF34(&qword_1EAAA11B8, &qword_1EAAA11A0);
    uint64_t v42 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAA6100);
    swift_allocObject();
    uint64_t v43 = sub_1DC9C5478(v42);
    sub_1DC88D5C8();
    v44();
    *(void *)&long long v73 = v43;
    sub_1DC8BAE70();
    v45();
    uint64_t v47 = v69;
    uint64_t v46 = v70;
    void *v69 = sub_1DCA5184C;
    v47[1] = 0;
    uint64_t v48 = v71;
    sub_1DC8BAE70();
    v49();
    sub_1DC88CF34(&qword_1EAAA6108, &qword_1EAAA6100);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v46 + 8))(v47, v48);
    sub_1DC8CD890();
    v50();
    swift_release();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA6110, &qword_1EAAA6088);
    uint64_t v51 = sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DC88D5C8();
    v52();
    uint64_t v53 = v72;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v72, v55, v78);
    *(void *)(v53 + *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20)) = v51;
  }
  sub_1DC88D674();
}

uint64_t AccessibilitySoundRecognition.Request.hash(into:)()
{
  sub_1DC957B28(v0, (uint64_t)v12);
  sub_1DC957B28((uint64_t)v12, (uint64_t)v13);
  int v1 = sub_1DC957B84((uint64_t)v13);
  uint64_t v2 = nullsub_1(v13);
  if (v1 == 1)
  {
    sub_1DCA59B80(v2, v3, v4, v5, v6, v7, v8, v9, v11);
    sub_1DCB891B8();
    sub_1DCB879B8();
    return sub_1DCA4F660();
  }
  else
  {
    sub_1DCB891B8();
    return sub_1DCB891B8();
  }
}

BOOL static AccessibilitySoundRecognition.Request.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1DC957B28(a1, (uint64_t)v6);
  sub_1DC957B28(a2, (uint64_t)v7);
  sub_1DC957B28((uint64_t)v6, (uint64_t)v5);
  sub_1DC957B28((uint64_t)v7, (uint64_t)v4);
  return sub_1DCA49CB8((uint64_t)v5, (uint64_t)v4);
}

uint64_t sub_1DCA4DBB8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB96F50)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DCA4DC40()
{
  return sub_1DCB891F8();
}

unint64_t sub_1DCA4DC74()
{
  return 0xD000000000000015;
}

uint64_t sub_1DCA4DC94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA4DBB8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCA4DCC0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54954();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4DCFC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA54954();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AccessibilitySoundRecognition.Request.encode(to:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA5DA8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC981E40();
  sub_1DC957B28(v0, (uint64_t)v6);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA54954();
  sub_1DCB892B8();
  sub_1DC957B28((uint64_t)v6, (uint64_t)&v5);
  sub_1DCA549A0();
  sub_1DCB88F18();
  sub_1DC89D710();
  v4();
  sub_1DCA59874();
  sub_1DC88D674();
}

uint64_t AccessibilitySoundRecognition.Request.hashValue.getter()
{
  sub_1DC957B28(v0, (uint64_t)v22);
  sub_1DC89D754();
  uint64_t v1 = sub_1DCA599CC((uint64_t)v22);
  if (v9)
  {
    sub_1DCA59AE0(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
    sub_1DCB891B8();
    sub_1DCB879B8();
    sub_1DCA4F660();
  }
  else
  {
    sub_1DC8A9098();
    sub_1DC89DC30();
  }
  return sub_1DCB891F8();
}

void AccessibilitySoundRecognition.Request.init(from:)()
{
  sub_1DC88D6B0();
  int v2 = v1;
  char v9 = v3;
  sub_1DC87E988(&qword_1EAAA5DC0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC89D9A0();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA54954();
  sub_1DCB89298();
  if (!v0)
  {
    sub_1DCA549EC();
    sub_1DCB88DF8();
    sub_1DC92F4D8();
    v5();
    sub_1DC957B28((uint64_t)&v8, (uint64_t)v6);
    sub_1DC957B28((uint64_t)v6, (uint64_t)v7);
    memcpy(v9, v7, 0xD1uLL);
  }
  sub_1DC8818D0((uint64_t)v2);
  sub_1DC9E970C();
  sub_1DC88D674();
}

void sub_1DCA4E030()
{
}

void sub_1DCA4E048()
{
}

uint64_t sub_1DCA4E070@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_1DC88D538();
  MEMORY[0x1F4188790](v9);
  sub_1DC89D9A0();
  (*(void (**)(uint64_t))(v10 + 16))(v4);
  return sub_1DC99CADC(v4, a1, a2, a3, a4);
}

void *sub_1DCA4E13C(uint64_t a1, uint64_t a2, void *__src)
{
  uint64_t v4 = v3;
  v4[26] = a1;
  v4[27] = a2;
  memcpy(v4 + 2, __src, 0xC0uLL);
  swift_retain();
  swift_retain();
  sub_1DC9589C8((uint64_t)__src);
  uint64_t v6 = sub_1DCA4E260();
  sub_1DCA547DC((uint64_t)__src);
  v4[28] = v6;
  uint64_t v7 = sub_1DCB87CF8();
  *(void *)(v7 + 16) = 2;
  *(void *)(v7 + 32) = 0;
  sub_1DC87E988(&qword_1EAA9DCC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  *(void *)(inited + 32) = 0x74757074756FLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 48) = v7;
  sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  uint64_t v9 = sub_1DCB877D8();
  swift_release();
  swift_release();
  v4[29] = v9;
  return v4;
}

uint64_t sub_1DCA4E260()
{
  sub_1DC87E988(&qword_1EAA9DCC0);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_1DCBCEFB0;
  sub_1DCA59A10();
  v1[4] = v2;
  v1[5] = v3;
  uint64_t v4 = v0[10];
  uint64_t v40 = v0[11];
  uint64_t v41 = v4;
  v1[6] = v4;
  v1[7] = v5;
  sub_1DCA59A10();
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = v8;
  sub_1DCA59A10();
  v9[10] = v10;
  v9[11] = v11;
  uint64_t v39 = v0[8];
  v9[12] = v39;
  v9[13] = v12;
  sub_1DCA59A10();
  uint64_t v14 = v0[14];
  uint64_t v37 = v0[13];
  uint64_t v13 = v37;
  v15[14] = v16;
  v15[15] = v13;
  unsigned char v15[16] = v17 - 10;
  v15[17] = 0x80000001DCB970F0;
  uint64_t v18 = v0[22];
  uint64_t v35 = v0[23];
  uint64_t v36 = v14;
  v15[18] = v35;
  v15[19] = v17 | 4;
  uint64_t v19 = v0[4];
  uint64_t v33 = v0[5];
  uint64_t v20 = v33;
  v15[20] = 0x80000001DCB97130;
  v15[21] = v20;
  v15[22] = v17;
  v15[23] = 0x80000001DCB97180;
  v15[24] = v14;
  v15[25] = v21;
  uint64_t v23 = v0[17];
  uint64_t v31 = v0[16];
  uint64_t v22 = v31;
  v15[26] = 0x80000001DCB971D0;
  v15[27] = v22;
  uint64_t v24 = v17 - 8;
  v15[28] = v17 - 8;
  v15[29] = 0x80000001DCB97220;
  uint64_t v34 = v18;
  v15[30] = v18;
  v15[31] = v21;
  uint64_t v38 = v25;
  v15[32] = 0x80000001DCB97260;
  v15[33] = v25;
  v15[34] = v17;
  v15[35] = 0x80000001DCB972B0;
  v15[36] = v23;
  v15[37] = v17 | 6;
  uint64_t v32 = v19;
  v15[38] = 0x80000001DCB97300;
  v15[39] = v19;
  v15[40] = v17 - 10;
  v15[41] = 0x80000001DCB97350;
  uint64_t v26 = v0[19];
  uint64_t v29 = v0[20];
  uint64_t v30 = v23;
  v15[42] = v29;
  v15[43] = v24;
  uint64_t v28 = v26;
  v15[44] = 0x80000001DCB97390;
  v15[45] = v26;
  sub_1DC88CD74((uint64_t)&v41);
  sub_1DC88CD74((uint64_t)&v40);
  sub_1DC88CD74((uint64_t)&v39);
  sub_1DC88CD74((uint64_t)&v37);
  sub_1DC88CD74((uint64_t)&v35);
  sub_1DC88CD74((uint64_t)&v33);
  sub_1DC88CD74((uint64_t)&v36);
  sub_1DC88CD74((uint64_t)&v31);
  sub_1DC88CD74((uint64_t)&v34);
  sub_1DC88CD74((uint64_t)&v38);
  sub_1DC88CD74((uint64_t)&v30);
  sub_1DC88CD74((uint64_t)&v32);
  sub_1DC88CD74((uint64_t)&v29);
  sub_1DC88CD74((uint64_t)&v28);
  sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  return sub_1DCB877D8();
}

uint64_t sub_1DCA4E4C8(uint64_t a1)
{
  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1DCA57C54(v5, 0x7475706E69, 0xE500000000000000);
  swift_endAccess();
  uint64_t v6 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  sub_1DC9879DC(a1, v6);
  float v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2 && v8 >= 0.75)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1DC96DE28();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DC9A45DC(*(void *)(v3 + 232));
    if (result)
    {
      if (*(void *)(result + 16) >= 2uLL) {
        return swift_bridgeObjectRelease();
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA4E620()
{
  memcpy(v2, (const void *)(v0 + 16), sizeof(v2));
  sub_1DCA547DC((uint64_t)v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCA4E680()
{
  sub_1DCA4E620();

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA4E6B4()
{
  sub_1DC8A7DAC();
  sub_1DC981E74();

  return sub_1DC8A85A8();
}

uint64_t sub_1DCA4E6F0(void *a1, uint64_t a2, void *a3)
{
  if ((sub_1DC8DCEB4(a1, a3) & 1) == 0) {
    return 0;
  }
  uint64_t v3 = sub_1DC981E74();

  return sub_1DC8DCF18(v3, v4);
}

uint64_t sub_1DCA4E744(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6570616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA4E824(char a1)
{
  if (a1) {
    return 0x7365756C6176;
  }
  else {
    return 0x6570616873;
  }
}

void sub_1DCA4E854()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAA62B8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA58FC0();
  sub_1DCA59798();
  sub_1DCB892B8();
  sub_1DC87E988((uint64_t *)&unk_1EAA9C8C0);
  sub_1DC8CC998(&qword_1EAAA22E8, (uint64_t *)&unk_1EAA9C8C0);
  sub_1DCA596D0();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC8CC998(&qword_1EAAA62D0, (uint64_t *)&unk_1EAAA0CB0);
    sub_1DCA596D0();
    sub_1DCB88F18();
  }
  sub_1DC8CD9A8();
  sub_1DC89D710();
  v4();
  sub_1DC9E970C();
  sub_1DC88D674();
}

uint64_t sub_1DCA4E9E8()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA4EA38(void *a1)
{
  sub_1DC87E988(&qword_1EAAA62E8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = a1[3];
  sub_1DCA59B18(a1);
  sub_1DCA58FC0();
  sub_1DCA59850();
  if (v1)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    sub_1DC87E988((uint64_t *)&unk_1EAA9C8C0);
    sub_1DC8CC998((unint64_t *)&unk_1EAAA62F0, (uint64_t *)&unk_1EAA9C8C0);
    sub_1DCA59980();
    uint64_t v4 = v7;
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC8CC998(&qword_1EAAA2CE0, (uint64_t *)&unk_1EAAA0CB0);
    swift_bridgeObjectRetain();
    sub_1DCB88DF8();
    sub_1DC8CD890();
    v6();
    swift_bridgeObjectRetain();
    sub_1DC8818D0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1DCA4EC50()
{
  sub_1DC8A7DAC();
  sub_1DC8A85A8();

  return sub_1DC8A85A8();
}

uint64_t sub_1DCA4ECA8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if ((sub_1DC8DCEB4(a1, a4) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = sub_1DCA59B60();
  if ((sub_1DC8DCF18(v4, v5) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = sub_1DC981E74();

  return sub_1DC8DCF18(v6, v7);
}

uint64_t sub_1DCA4ED1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5373746867696577 && a2 == 0xEC00000065706168;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x73746867696577 && a2 == 0xE700000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x736573616962 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DCA4EE7C(char a1)
{
  if (!a1) {
    return 0x5373746867696577;
  }
  if (a1 == 1) {
    return 0x73746867696577;
  }
  return 0x736573616962;
}

void sub_1DCA4EED8()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAA62D8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA5900C();
  sub_1DCA59798();
  sub_1DCB892B8();
  sub_1DC87E988((uint64_t *)&unk_1EAA9C8C0);
  sub_1DC8CC998(&qword_1EAAA22E8, (uint64_t *)&unk_1EAA9C8C0);
  sub_1DCA596D0();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC8CC998(&qword_1EAAA62D0, (uint64_t *)&unk_1EAAA0CB0);
    sub_1DC99FFB4();
    sub_1DC99FFB4();
  }
  sub_1DC8CD9A8();
  sub_1DC92F4D8();
  v4();
  sub_1DC9E970C();
  sub_1DC88D674();
}

uint64_t sub_1DCA4F084()
{
  return sub_1DCB891F8();
}

void sub_1DCA4F0EC()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAA6300);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DCA59B18(v2);
  sub_1DCA5900C();
  sub_1DCA59850();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DC87E988((uint64_t *)&unk_1EAA9C8C0);
    sub_1DC8CC998((unint64_t *)&unk_1EAAA62F0, (uint64_t *)&unk_1EAA9C8C0);
    sub_1DCA59980();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC8CC998(&qword_1EAAA2CE0, (uint64_t *)&unk_1EAAA0CB0);
    swift_bridgeObjectRetain();
    sub_1DCA59950();
    sub_1DCB88DF8();
    swift_bridgeObjectRetain();
    sub_1DCA59950();
    sub_1DCB88DF8();
    sub_1DC8CD890();
    v4();
    swift_bridgeObjectRetain();
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DCA59834();
  sub_1DC88D674();
}

uint64_t sub_1DCA4F368()
{
  return sub_1DCA4E824(*v0);
}

uint64_t sub_1DCA4F370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA4E744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA4F398(uint64_t a1)
{
  unint64_t v2 = sub_1DCA58FC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4F3D4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA58FC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA4F410@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCA4EA38(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1DCA4F43C()
{
}

uint64_t sub_1DCA4F458()
{
  return sub_1DCA4E9E8();
}

uint64_t sub_1DCA4F460()
{
  return sub_1DCA4E6B4();
}

uint64_t sub_1DCA4F468()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA4F4B8(uint64_t a1, void **a2)
{
  return sub_1DCA4E6F0(*(void **)a1, *(void *)(a1 + 8), *a2);
}

uint64_t sub_1DCA4F4CC()
{
  return sub_1DCA4EE7C(*v0);
}

uint64_t sub_1DCA4F4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA4ED1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA4F4FC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5900C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA4F538(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5900C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCA4F574(void *a1@<X8>)
{
  sub_1DCA4F0EC();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

void sub_1DCA4F5A4()
{
}

uint64_t sub_1DCA4F5C4()
{
  return sub_1DCA4F084();
}

uint64_t sub_1DCA4F5D0()
{
  return sub_1DCA4EC50();
}

uint64_t sub_1DCA4F5DC()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA4F644(uint64_t a1, void **a2)
{
  return sub_1DCA4ECA8(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *a2);
}

uint64_t sub_1DCA4F660()
{
  sub_1DCB891B8();
  sub_1DC8A7DAC();
  sub_1DCA5965C();
  sub_1DC8A7DAC();
  sub_1DCA5965C();
  sub_1DCA597BC();
  sub_1DC8A7DAC();
  sub_1DCA5965C();
  sub_1DCA597BC();
  sub_1DC8A7DAC();
  sub_1DCA5965C();
  sub_1DCA597BC();
  sub_1DC8A7DAC();
  sub_1DCA5965C();
  sub_1DCA597BC();
  sub_1DC8A7DAC();
  sub_1DCA5965C();
  sub_1DCA597BC();
  sub_1DC8A7DAC();
  sub_1DCA5965C();
  sub_1DCA597BC();
  sub_1DC8A7DAC();
  sub_1DCA5965C();
  sub_1DC981E74();

  return sub_1DC8A85A8();
}

BOOL sub_1DCA4F75C(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(void *)a1 == *(void *)a2
    && (sub_1DC8DCEB4(*(void **)(a1 + 8), *(void **)(a2 + 8)) & 1) != 0
    && (sub_1DCA59674() & 1) != 0
    && (sub_1DC8DCEB4(*(void **)(a1 + 24), *(void **)(a2 + 24)) & 1) != 0
    && (sub_1DCA597A4() & 1) != 0
    && (sub_1DCA59674() & 1) != 0
    && (sub_1DC8DCEB4(*(void **)(a1 + 48), *(void **)(a2 + 48)) & 1) != 0
    && (sub_1DCA597A4() & 1) != 0
    && (sub_1DCA59674() & 1) != 0
    && (sub_1DC8DCEB4(*(void **)(a1 + 72), *(void **)(a2 + 72)) & 1) != 0
    && (sub_1DCA597A4() & 1) != 0
    && (sub_1DCA59674() & 1) != 0
    && (sub_1DC8DCEB4(*(void **)(a1 + 96), *(void **)(a2 + 96)) & 1) != 0
    && (sub_1DCA597A4() & 1) != 0
    && (sub_1DCA59674() & 1) != 0
    && (sub_1DC8DCEB4(*(void **)(a1 + 120), *(void **)(a2 + 120)) & 1) != 0
    && (sub_1DCA597A4() & 1) != 0
    && (sub_1DCA59674() & 1) != 0
    && (sub_1DC8DCEB4(*(void **)(a1 + 144), *(void **)(a2 + 144)) & 1) != 0
    && (sub_1DCA597A4() & 1) != 0
    && (sub_1DCA59674() & 1) != 0
    && (sub_1DC8DCEB4(*(void **)(a1 + 168), *(void **)(a2 + 168)) & 1) != 0
    && (sub_1DCA59674() & 1) != 0)
  {
    uint64_t v4 = sub_1DC981E74();
    if (sub_1DC8DCF18(v4, v5)) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1DCA4F8E8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7A69537475706E69 && a2 == 0xE900000000000065;
  if (v3 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x72616C706D657865 && a2 == 0xEE00726F736E6554;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000017 && a2 == 0x80000001DCB97620 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB97640 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB97660 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB97680 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB976A0 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else
    {
      BOOL v7 = a1 == 0x726F736E65543164 && a2 == 0xE900000000000073;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0x726F736E65543264 && a2 == 0xE900000000000073)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else
      {
        char v9 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v9) {
          return 8;
        }
        else {
          return 9;
        }
      }
    }
  }
}

uint64_t sub_1DCA4FC60()
{
  return 9;
}

unint64_t sub_1DCA4FC68(char a1)
{
  unint64_t result = 0x7A69537475706E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72616C706D657865;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
    case 4:
    case 5:
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x726F736E65543164;
      break;
    case 8:
      unint64_t result = 0x726F736E65543264;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCA4FD88(void *a1)
{
  sub_1DC87E988(&qword_1EAAA61E8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DCA59B18(a1);
  sub_1DCA583A8();
  sub_1DCA59798();
  sub_1DCB892B8();
  sub_1DCB88F08();
  if (!v1)
  {
    sub_1DCA583F4();
    sub_1DCB88F18();
    sub_1DCA58440();
    sub_1DCA594AC();
    sub_1DCA594AC();
    sub_1DCA594AC();
    sub_1DCA594AC();
    sub_1DCA594AC();
    sub_1DCA594AC();
    sub_1DCA594AC();
  }
  sub_1DC8CD9A8();
  sub_1DC8CD890();
  return v7(v4, v5, v6);
}

uint64_t sub_1DCA4FFF0()
{
  return sub_1DCB891F8();
}

void sub_1DCA50028()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA6208);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  uint64_t v6 = v2;
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA583A8();
  sub_1DCB89298();
  if (v0)
  {
    int v7 = 0;
    unsigned int v8 = 0;
    uint64_t v10 = (uint64_t)v6;
  }
  else
  {
    uint64_t v18 = v4;
    LOBYTE(v34) = 0;
    uint64_t v9 = sub_1DCB88DE8();
    sub_1DCA5848C();
    sub_1DCA59B34();
    sub_1DCA59A1C();
    sub_1DCB88DF8();
    uint64_t v10 = (uint64_t)v2;
    sub_1DCA584D8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCA59B34();
    sub_1DCB88DF8();
    uint64_t v25 = v35;
    uint64_t v26 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCA59538();
    uint64_t v23 = v35;
    uint64_t v24 = v34;
    uint64_t v22 = v36;
    uint64_t v11 = v35;
    LOBYTE(v33[0]) = 4;
    uint64_t v32 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCA59B34();
    sub_1DCA59538();
    uint64_t v21 = v36;
    LOBYTE(v33[0]) = 5;
    uint64_t v30 = v34;
    swift_bridgeObjectRetain();
    uint64_t v29 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCA59B34();
    sub_1DCA59538();
    uint64_t v28 = v36;
    if (v35)
    {
      sub_1DC88D5C8();
      v12();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCA59B00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v7 = 0;
      unsigned int v8 = 30;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DCA59538();
      uint64_t v27 = v34;
      LOBYTE(v33[0]) = 7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DCA59538();
      uint64_t v20 = v34;
      if (!v36)
      {
        uint64_t v14 = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DCA59538();
        uint64_t v19 = v34;
        sub_1DC88D5C8();
        v15();
        uint64_t v31 = v58;
        uint64_t v16 = v60;
        uint64_t v17 = v59;
        v33[0] = v9;
        v33[1] = v26;
        _OWORD v33[2] = v25;
        v33[3] = v24;
        v33[4] = v23;
        v33[5] = v22;
        v33[6] = v32;
        v33[7] = v11;
        v33[8] = v21;
        v33[9] = v30;
        v33[10] = v29;
        v33[11] = v28;
        v33[12] = v27;
        v33[13] = 0;
        v33[14] = 0;
        v33[15] = v20;
        v33[16] = 0;
        v33[17] = 0;
        v33[18] = v14;
        v33[19] = 0;
        v33[20] = 0;
        v33[21] = v58;
        v33[22] = v59;
        v33[23] = v60;
        sub_1DC9589C8((uint64_t)v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCA596E4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DC8818D0((uint64_t)v2);
        uint64_t v34 = v9;
        uint64_t v35 = v26;
        uint64_t v36 = v25;
        uint64_t v37 = v24;
        uint64_t v38 = v23;
        uint64_t v39 = v22;
        uint64_t v40 = v32;
        uint64_t v41 = v11;
        uint64_t v42 = v21;
        uint64_t v43 = v30;
        uint64_t v44 = v29;
        uint64_t v45 = v28;
        uint64_t v46 = v27;
        uint64_t v47 = 0;
        uint64_t v48 = 0;
        uint64_t v49 = v21;
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        uint64_t v52 = v19;
        uint64_t v53 = 0;
        uint64_t v54 = 0;
        uint64_t v55 = v31;
        uint64_t v56 = v17;
        uint64_t v57 = v16;
        sub_1DCA547DC((uint64_t)&v34);
        memcpy(v18, v33, 0xC0uLL);
        goto LABEL_17;
      }
      sub_1DC88D5C8();
      v13();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCA59B00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned int v8 = 126;
      int v7 = 1;
    }
  }
  sub_1DC8818D0(v10);
  if ((v8 & 2) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (((v8 >> 2) & 1) == 0)
    {
LABEL_6:
      if ((v8 >> 3)) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else if ((v8 & 4) == 0)
  {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 >> 3))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (((v8 >> 4) & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_14;
  }
LABEL_13:
  if (((v8 >> 4) & 1) == 0)
  {
LABEL_8:
    if ((v8 >> 5)) {
      goto LABEL_9;
    }
    goto LABEL_15;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 >> 5))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_15:
  if (!v7) {
    goto LABEL_17;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  sub_1DCA59834();
  sub_1DC88D674();
}

unint64_t sub_1DCA50A8C()
{
  return sub_1DCA4FC68(*v0);
}

uint64_t sub_1DCA50A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA4F8E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA50ABC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCA4FC60();
  *a1 = result;
  return result;
}

uint64_t sub_1DCA50AE4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA583A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA50B20(uint64_t a1)
{
  unint64_t v2 = sub_1DCA583A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA50B64()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA50BA4(void *a1)
{
  return sub_1DCA4FD88(a1);
}

void sub_1DCA50BBC(void *a1@<X8>)
{
  sub_1DCA50028();
  if (!v1) {
    memcpy(a1, v3, 0xC0uLL);
  }
}

uint64_t sub_1DCA50C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  memcpy(__dst, (const void *)(a1 + 16), sizeof(__dst));
  sub_1DCA50CDC();
  if (!v4)
  {
    sub_1DC87E988(&qword_1EAAA11A8);
    sub_1DC88CF34(&qword_1EAAA11B0, &qword_1EAAA11A8);
    a4 = sub_1DCB873A8();
    swift_release();
  }
  return a4;
}

void sub_1DCA50CDC()
{
  sub_1DC88D6B0();
  uint64_t v66 = v2;
  uint64_t v67 = v4;
  uint64_t v68 = v3;
  uint64_t v6 = v5;
  sub_1DC88D538();
  uint64_t v55 = v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v53 = v9;
  uint64_t v54 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA11C0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v11);
  sub_1DCA36868(v12, v52[0]);
  uint64_t v58 = sub_1DC87E988(&qword_1EAAA11C8);
  sub_1DC89D4E0();
  uint64_t v56 = v13;
  MEMORY[0x1F4188790](v14);
  sub_1DCA367CC(v15, v52[0]);
  sub_1DC87E988(&qword_1EAAA11D0);
  sub_1DC89D4E0();
  uint64_t v59 = v17;
  uint64_t v60 = v16;
  MEMORY[0x1F4188790](v16);
  sub_1DCA59604(v18, v52[0]);
  uint64_t v19 = sub_1DC87E988(&qword_1EAAA11D8);
  sub_1DC89D4E0();
  uint64_t v61 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1DCA3684C(v22, v52[0]);
  sub_1DC87E988(&qword_1EAAA11E0);
  sub_1DC89D4E0();
  uint64_t v62 = v23;
  MEMORY[0x1F4188790](v24);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA11E8);
  sub_1DC89D4E0();
  uint64_t v63 = v26;
  uint64_t v64 = v25;
  MEMORY[0x1F4188790](v25);
  sub_1DC89D9B8();
  sub_1DC87E988(&qword_1EAAA11F0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v27);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA11F8);
  swift_allocObject();
  uint64_t v28 = sub_1DC952A04(20, 0, MEMORY[0x1E4FBC860]);
  uint64_t v57 = v6;
  uint64_t v29 = *v6 - 512;
  if (__OFSUB__(*v6, 512))
  {
    __break(1u);
  }
  else
  {
    v52[2] = v10;
    uint64_t v30 = v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v29 / 160 + 1, 46, v68);
    if (v0)
    {
      swift_release();
    }
    else
    {
      v52[1] = v19;
      sub_1DC99D5C8();
      swift_release();
      uint64_t v65 = v30;
      sub_1DC8CD9A8();
      sub_1DC9516E4();
      swift_release();
      sub_1DC88CF34(&qword_1EAAA1200, &qword_1EAAA11F0);
      uint64_t v31 = sub_1DCB87468();
      sub_1DC87E988(&qword_1EAAA1208);
      swift_allocObject();
      uint64_t v32 = sub_1DC9C5478(v31);
      sub_1DC88CC04(v1, &qword_1EAAA11F0);
      sub_1DC87E988(&qword_1EAA9DF60);
      sub_1DC87E988(&qword_1EAAA1210);
      sub_1DC88CF34(&qword_1EAAA1218, &qword_1EAAA1210);
      sub_1DCB87AE8();
      sub_1DCB87178();
      sub_1DC88D5C8();
      v33();
      sub_1DC88CF34(&qword_1EAAA1220, &qword_1EAAA11E8);
      uint64_t v34 = sub_1DCB873A8();
      sub_1DC88D5C8();
      v35();
      sub_1DCA51EAC();
      uint64_t v36 = v52[3];
      uint64_t v63 = v34;
      sub_1DCA2640C();
      sub_1DC87E988(&qword_1EAAA1228);
      uint64_t v64 = MEMORY[0x1E4F1AAE8];
      sub_1DC88CF34(&qword_1EAAA1230, &qword_1EAAA1228);
      sub_1DC88CF34(&qword_1EAAA1238, &qword_1EAAA11C0);
      sub_1DCB87448();
      sub_1DC88CC04(v36, &qword_1EAAA11C0);
      swift_release();
      uint64_t v37 = v54;
      uint64_t v38 = v55;
      uint64_t v39 = v68;
      sub_1DC8E7D10();
      v40();
      unint64_t v41 = (*(unsigned __int8 *)(v38 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      unint64_t v42 = (v53 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v43 = (char *)swift_allocObject();
      uint64_t v44 = v67;
      *((void *)v43 + 2) = v39;
      *((void *)v43 + 3) = v44;
      v52[0] = v32;
      uint64_t v45 = v65;
      *((void *)v43 + 4) = v32;
      *((void *)v43 + 5) = v45;
      uint64_t v46 = (uint64_t)v57;
      memcpy(v43 + 48, v57, 0xC0uLL);
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v43[v41], v37, v39);
      *(void *)&v43[v42] = v63;
      swift_retain();
      swift_retain();
      sub_1DC9589C8(v46);
      swift_retain();
      sub_1DC87E988(&qword_1EAAA11A8);
      sub_1DC88CF34(&qword_1EAAA1240, &qword_1EAAA11C8);
      sub_1DCB874A8();
      swift_release();
      sub_1DC88D5C8();
      v47();
      uint64_t v48 = sub_1DC88CF34(&qword_1EAAA1248, &qword_1EAAA11D0);
      uint64_t v49 = sub_1DC88CF34(&qword_1EAAA11B0, &qword_1EAAA11A8);
      MEMORY[0x1E01A6390](v60, v48, v49);
      sub_1DC88D5C8();
      v50();
      sub_1DC88CF34(&qword_1EAAA1250, &qword_1EAAA11D8);
      sub_1DCB873A8();
      swift_release();
      swift_release();
      swift_release();
      sub_1DC88D5C8();
      v51();
    }
    sub_1DCA59834();
    sub_1DC88D674();
  }
}

uint64_t sub_1DCA5149C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA5180C(a1);
}

uint64_t sub_1DCA514B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAA6120);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DCA261E0();
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  v19[1] = a1;
  uint64_t v20 = v4;
  uint64_t v21 = v3;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  while ((_BYTE)v11 != 0xFF)
  {
    sub_1DC9D5E74(v10, v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DCA73C0C();
      uint64_t v12 = v16;
    }
    unint64_t v13 = *(void *)(v12 + 16);
    if (v13 >= *(void *)(v12 + 24) >> 1)
    {
      sub_1DCA73C0C();
      uint64_t v12 = v17;
    }
    *(void *)(v12 + 16) = v13 + 1;
    uint64_t v14 = v12 + 16 * v13;
    *(void *)(v14 + 32) = v10;
    *(unsigned char *)(v14 + 40) = v11;
    sub_1DC9D5CB4(v10, v11);
    uint64_t v10 = sub_1DCA261E0();
    uint64_t v11 = v15;
  }
  uint64_t v22 = v12;
  sub_1DC87E988((uint64_t *)&unk_1EAAA5050);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA6130, (uint64_t *)&unk_1EAAA5050);
  sub_1DCB87AE8();
  swift_bridgeObjectRelease();
  sub_1DC87E988(&qword_1EAA9DF60);
  uint64_t v18 = v21;
  sub_1DCB87178();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v18);
}

uint64_t sub_1DCA51710@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  memcpy(__dst, (const void *)(a1 + 16), sizeof(__dst));
  sub_1DC9589C8((uint64_t)__dst);
  sub_1DCA462DC(__dst, (uint64_t)__src);
  memcpy(v15, __src, sizeof(v15));
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[5];
  uint64_t v8 = sub_1DC881A8C(a2, v6);
  v12[3] = v6;
  void v12[4] = v7;
  uint64_t v9 = sub_1DC8EF6AC(v12);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v8, v6);
  uint64_t v10 = sub_1DC9790CC(v15, v12);
  sub_1DCA57F64((uint64_t)__src);
  uint64_t result = sub_1DC8818D0((uint64_t)v12);
  if (!v3) {
    *a3 = v10;
  }
  return result;
}

uint64_t sub_1DCA5180C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = os_transaction_create();
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA5184C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA52E38(6, a1);
}

uint64_t sub_1DCA51854(uint64_t a1)
{
  sub_1DC87E988((uint64_t *)&unk_1EAAA61B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBCEFC0;
  *(void *)(inited + 32) = 0x7475706E69;
  *(void *)(inited + 40) = 0xE500000000000000;
  sub_1DC87E988(&qword_1EAA9C6C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DCBC6B50;
  *(int64x2_t *)(v3 + 32) = vdupq_n_s64(1uLL);
  *(void *)(v3 + 48) = 1024;
  *(void *)(v3 + 56) = a1;
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = 0xD000000000000040;
  sub_1DCA595F8();
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = &unk_1F37DFF00;
  *(void *)(inited + 80) = v4 | 2;
  *(void *)(inited + 88) = 0x80000001DCB97260;
  sub_1DCA595F8();
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 112) = v8;
  *(void *)(inited + 120) = &unk_1F37DFD50;
  *(void *)(inited + 128) = v9;
  *(void *)(inited + 136) = 0x80000001DCB96FB0;
  sub_1DCA595F8();
  *(void *)(inited + 144) = v11;
  *(void *)(inited + 152) = v10;
  *(void *)(inited + 160) = v12;
  *(void *)(inited + 168) = &unk_1F37DFDB0;
  *(void *)(inited + 176) = v13;
  *(void *)(inited + 184) = 0x80000001DCB970A0;
  sub_1DCA595F8();
  *(void *)(inited + 192) = v15;
  *(void *)(inited + 200) = v14;
  *(void *)(inited + 208) = v16;
  *(void *)(inited + 216) = &unk_1F37DFE10;
  *(void *)(inited + 224) = v17;
  *(void *)(inited + 232) = 0x80000001DCB971D0;
  sub_1DCA595F8();
  *(void *)(inited + 240) = v18;
  *(void *)(inited + 248) = v19;
  *(void *)(inited + 256) = v20;
  *(void *)(inited + 264) = &unk_1F37DFE70;
  sub_1DCA595F8();
  *(void *)(inited + 272) = v22;
  *(void *)(inited + 280) = v21;
  *(void *)(inited + 288) = &unk_1F37DFE98;
  *(void *)(inited + 296) = v23 - 10;
  *(void *)(inited + 304) = 0x80000001DCB97350;
  *(void *)(inited + 312) = &unk_1F37DFED8;
  sub_1DCA595F8();
  *(void *)(inited + 320) = v24;
  *(void *)(inited + 328) = v25;
  *(void *)(inited + 336) = &unk_1F37DFCC8;
  *(void *)(inited + 344) = v26;
  *(void *)(inited + 352) = 0x80000001DCB970F0;
  *(void *)(inited + 360) = &unk_1F37DFCF8;
  sub_1DCA595F8();
  *(void *)(inited + 368) = v27;
  *(void *)(inited + 376) = v28;
  *(void *)(inited + 384) = &unk_1F37DFD20;
  sub_1DC87E988((uint64_t *)&unk_1EAA9C8C0);
  return sub_1DCB877D8();
}

uint64_t sub_1DCA51ABC()
{
  int v0 = e5rt_tensor_desc_dtype_create();
  if (v0)
  {
    int v1 = v0;
    sub_1DC96ECAC();
    swift_allocError();
    *(_DWORD *)uint64_t v2 = v1;
    *(unsigned char *)(v2 + 4) = 0;
  }
  else
  {
    sub_1DC96ECF8();
    swift_allocError();
    *uint64_t v4 = 0;
  }
  return swift_willThrow();
}

uint64_t sub_1DCA51CA8(uint64_t result)
{
  if (__OFSUB__(result, 512))
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = sub_1DCA51854((result - 512) / 5120 + 1);
    uint64_t v2 = sub_1DCA578A0(v1);
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

void sub_1DCA51D10()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v18 - v11;
  sub_1DCA51CA8(*v6);
  if (!v0)
  {
    v18[0] = AssociatedTypeWitness;
    v18[1] = v9;
    sub_1DCAA8124(38, v4, v2, (uint64_t)v12);
    _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
    sub_1DC9683DC();
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    type metadata accessor for AccessibilitySoundRecognition.CustomModel();
    swift_allocObject();
    sub_1DC9589C8((uint64_t)v6);
    sub_1DCA4E13C(v14, v16, v6);
    sub_1DC88D5C8();
    v17();
  }
  sub_1DCA59834();
  sub_1DC88D674();
}

void sub_1DCA51EAC()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_1DC87E988(&qword_1EAAA1320);
  sub_1DC89D4E0();
  v29[2] = v7;
  v29[3] = v8;
  MEMORY[0x1F4188790](v7);
  sub_1DCA36AA8(v9, v29[0]);
  sub_1DC87E988(&qword_1EAAA1328);
  sub_1DC89D4E0();
  _OWORD v29[4] = v10;
  v29[5] = v11;
  MEMORY[0x1F4188790](v10);
  sub_1DCA36AC4(v12, v29[0]);
  uint64_t v13 = *(void *)(*(void *)(v2 + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v15);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  v29[8] = v16;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v29 - v18;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
  v29[7] = v6;
  v20(v4, v13);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1DCAA8124(3, AssociatedTypeWitness, AssociatedConformanceWitness, (uint64_t)v19);
  sub_1DCA59880();
  if (!v0)
  {
    v22();
    sub_1DCA2A0DC();
    uint64_t v24 = v23;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_1DC89D474;
    *(void *)(v25 + 24) = 0;
    *(_OWORD *)(v25 + 32) = xmmword_1DCBC0370;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0;
    *(unsigned char *)(v26 + 24) = 0;
    v29[9] = v24;
    v29[10] = (uint64_t)sub_1DC9584E0;
    v29[11] = v26;
    v29[12] = (uint64_t)sub_1DC958BFC;
    v29[13] = v25;
    swift_retain();
    sub_1DC87E988(&qword_1EAAA1330);
    sub_1DC88CF34(&qword_1EAAA1338, &qword_1EAAA1330);
    sub_1DCB873D8();
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA1340, &qword_1EAAA1320);
    sub_1DC958C14();
    sub_1DC8CD9A8();
    sub_1DCB87538();
    sub_1DC88D5C8();
    v27();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA1350, &qword_1EAAA1328);
    sub_1DCB873A8();
    sub_1DCA59A3C();
    sub_1DC88D5C8();
    v28();
    sub_1DC88D5C8();
  }
  v22();
  sub_1DC9E970C();
  sub_1DC88D674();
}

uint64_t sub_1DCA52334@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X5>, void *a3@<X8>)
{
  if (*a1)
  {
    uint64_t result = swift_retain();
  }
  else
  {
    sub_1DC87E988(&qword_1EAAA1208);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA1270, &qword_1EAAA1208);
    sub_1DCB873A8();
    sub_1DCA5242C();
    a2 = v7;
    uint64_t result = swift_release();
    if (v3) {
      return result;
    }
  }
  *a3 = a2;
  return result;
}

void sub_1DCA5242C()
{
  sub_1DC88D6B0();
  sub_1DC87E988(&qword_1EAAA1258);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DC8C1FC4();
  sub_1DC87E988(&qword_1EAAA1260);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA1268);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA61C0);
  sub_1DC87E988((uint64_t *)&unk_1EAAA1280);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA61D0, (uint64_t *)&unk_1EAAA61C0);
  sub_1DCB873B8();
  swift_release();
  swift_release();
  sub_1DC88CF34((unint64_t *)&unk_1EAAA1290, &qword_1EAAA1258);
  sub_1DCB87408();
  sub_1DC89D710();
  v3();
  sub_1DC88CF34(&qword_1EAAA61E0, &qword_1EAAA1260);
  sub_1DCB874A8();
  sub_1DC88D5C8();
  v4();
  sub_1DC88CF34((unint64_t *)&unk_1EAAA12A0, &qword_1EAAA1268);
  sub_1DCB873A8();
  sub_1DCA5950C();
  sub_1DC88D5C8();
  v5();
  sub_1DCA52768();
  swift_release();
  sub_1DCA59834();
  sub_1DC88D674();
}

void sub_1DCA52768()
{
  sub_1DC88D6B0();
  sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC88D550();
  uint64_t v36 = v2;
  uint64_t v37 = sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC88D550();
  uint64_t v7 = v6;
  sub_1DC87E988((uint64_t *)&unk_1EAAA6140);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DCA59818(v9, v31);
  sub_1DC87E988((uint64_t *)&unk_1EAAA12B0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DCA36868(v11, v32);
  sub_1DC87E988((uint64_t *)&unk_1EAAA6150);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v12);
  sub_1DCA36AE0(v13, v33);
  sub_1DC87E988((uint64_t *)&unk_1EAAA12C0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v14);
  sub_1DCA59604(v15, v34);
  sub_1DC87E988((uint64_t *)&unk_1EAAA6160);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v16);
  sub_1DCA367CC(v17, v35);
  swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = sub_1DCA59AC0();
  v20(v19);
  sub_1DCA59B40();
  sub_1DCA59B40();
  sub_1DCA51D10();
  sub_1DCA59880();
  v21();
  if (!v0)
  {
    sub_1DC8BAE70();
    v22();
    *uint64_t v36 = sub_1DCA52E30;
    v36[1] = 0;
    sub_1DC8BAE70();
    v23();
    sub_1DC87E988((uint64_t *)&unk_1EAAA12D0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA6170, (uint64_t *)&unk_1EAAA12D0);
    sub_1DCB87478();
    sub_1DC89D710();
    v24();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v37);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA12E0, (uint64_t *)&unk_1EAAA6140);
    swift_retain();
    sub_1DCB874A8();
    swift_release();
    sub_1DC88D5C8();
    v25();
    sub_1DCB87138();
    sub_1DC88D5C8();
    v26();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA6180, (uint64_t *)&unk_1EAAA6150);
    sub_1DCB87538();
    sub_1DC88D5C8();
    v27();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA12F0, (uint64_t *)&unk_1EAAA12C0);
    sub_1DCB873D8();
    sub_1DC88D5C8();
    v28();
    sub_1DC88CF34(&qword_1EAAA6190, (uint64_t *)&unk_1EAAA6160);
    sub_1DCB873A8();
    swift_release();
    uint64_t v29 = sub_1DC9D30B8();
    v30(v29);
  }
  sub_1DCA59874();
  sub_1DC88D674();
}

BOOL sub_1DCA52DB4(void *a1)
{
  return *a1 == 0;
}

uint64_t sub_1DCA52DC4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (v3)
  {
    uint64_t v4 = a1[1];
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_1DC957ADC();
    sub_1DC883884();
    *uint64_t v6 = 5;
    return swift_willThrow();
  }
}

uint64_t sub_1DCA52E30@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA52E38(5, a1);
}

uint64_t sub_1DCA52E38@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  sub_1DC957ADC();
  uint64_t result = swift_allocError();
  *a2 = result;
  *uint64_t v5 = a1;
  return result;
}

uint64_t sub_1DCA52E80@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1DCA4E4C8(*a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

float *sub_1DCA52EB8@<X0>(float *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result > 0.5;
  return result;
}

uint64_t sub_1DCA52F98()
{
  sub_1DC886900();
  uint64_t v1 = (void *)v0[37];
  v0[32] = &unk_1F37E2448;
  v0[33] = &off_1F37E2428;
  sub_1DC881A8C(v0 + 29, (uint64_t)&unk_1F37E2448);
  memcpy(v1, v0 + 2, 0xD1uLL);
  swift_storeEnumTagMultiPayload();
  sub_1DCA58598((uint64_t)(v0 + 2));
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1EAA9E420 + dword_1EAA9E420);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[38] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DCA53094;
  return v4();
}

uint64_t sub_1DCA53094()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 312) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DCA53170()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 296);
  sub_1DCA54AAC();
  sub_1DCA54A58(v1, (void (*)(void))type metadata accessor for RemoteRequest);
  sub_1DC8818D0(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1DCA5322C()
{
  sub_1DC886900();
  sub_1DCA54A58(*(void *)(v0 + 296), (void (*)(void))type metadata accessor for RemoteRequest);
  sub_1DC8818D0(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

uint64_t AccessibilitySoundRecognition.Session.detectionResults.getter@<X0>(void *a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v2 = type metadata accessor for AccessibilitySoundRecognition.Session(0);
  uint64_t v3 = v2 - 8;
  v17[2] = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  v17[3] = sub_1DC87E988(&qword_1EAAA5DD8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v4);
  sub_1DC95AE60();
  sub_1DC87E988(&qword_1EAAA5DE0);
  sub_1DC89D4E0();
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  v17[1] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v19 = *(void *)(v1 + *(int *)(v3 + 28));
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA11A8);
  uint64_t v10 = sub_1DC88CF34(&qword_1EAAA11B0, &qword_1EAAA11A8);
  MEMORY[0x1E01A64B0](v9, v10);
  sub_1DCA54B00();
  swift_allocObject();
  sub_1DCA54AAC();
  sub_1DC88CF34(&qword_1EAAA5DF8, &qword_1EAAA5DD8);
  sub_1DCB88C18();
  sub_1DCA59AC0();
  sub_1DC8E7D10();
  v11();
  uint64_t v12 = swift_allocObject();
  sub_1DC92F630();
  v13();
  uint64_t v14 = v18;
  *uint64_t v18 = sub_1DCA54D80;
  v14[1] = v12;
  sub_1DCA59B60();
  sub_1DC89D710();
  return v15();
}

uint64_t sub_1DCA535CC(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  uint64_t v5 = sub_1DCB86F38();
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = *(void *)(v5 - 8);
  *(void *)(v3 + 56) = swift_task_alloc();
  *(void *)(v3 + 64) = swift_task_alloc();
  type metadata accessor for AccessibilitySoundRecognition.Session(0);
  *(void *)(v3 + 72) = swift_task_alloc();
  *(unsigned char *)(v3 + 84) = *a2;
  return MEMORY[0x1F4188298](sub_1DCA536D4, 0, 0);
}

uint64_t sub_1DCA536D4()
{
  uint64_t v22 = v0;
  if (qword_1EAA9CB60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DCB86F68();
  sub_1DC89F57C(v1, (uint64_t)qword_1EAAFF838);
  sub_1DCA54B00();
  sub_1DCB86F28();
  uint64_t v2 = sub_1DCB86F48();
  os_signpost_type_t v3 = sub_1DCB88548();
  if (sub_1DCB886F8())
  {
    os_signpost_type_t v20 = v3;
    int v4 = *(unsigned __int8 *)(v0 + 84);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 48);
    sub_1DC8E7D10();
    v7();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v21 = v9;
    *(_DWORD *)uint64_t v8 = 67109378;
    *(_DWORD *)(v0 + 80) = v4;
    sub_1DCB88778();
    *(_WORD *)(v8 + 8) = 2080;
    sub_1DCB86BF8();
    sub_1DCA545CC(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
    uint64_t v10 = sub_1DCB88F98();
    *(void *)(v0 + 16) = sub_1DC9F8920(v10, v11, &v21);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    sub_1DCA54A58(v5, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.Session);
    os_signpost_id_t v12 = sub_1DCB86F18();
    _os_signpost_emit_with_name_impl(&dword_1DC873000, v2, v20, v12, "ClientReadResult_AccessibilitySoundRecognition", "{\"active\":%{BOOL}d,\"workloadID\":\"%s\"}", (uint8_t *)v8, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v9, -1, -1);
    MEMORY[0x1E01A99C0](v8, -1, -1);

    uint64_t v13 = *(void (**)(void))(v6 + 8);
    sub_1DCA59558();
    v13();
    sub_1DCA59558();
    v13();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 48);

    sub_1DCA54A58(v14, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.Session);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  **(unsigned char **)(v0 + 24) = *(unsigned char *)(v0 + 84);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v18();
}

uint64_t sub_1DCA53A08()
{
  sub_1DCAD3260();
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20));
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA11A8);
  uint64_t v7 = (_UNKNOWN **)sub_1DCA58524();
  v5[0] = v2;
  swift_retain();
  sub_1DCAD3334(v5);
  if (!v1)
  {
    sub_1DC8818D0((uint64_t)v5);
    uint64_t v6 = sub_1DCB86BF8();
    uint64_t v7 = &off_1F37DF308;
    sub_1DC8EF6AC(v5);
    sub_1DC8F0494();
    (*(void (**)(void))(v3 + 16))();
    sub_1DCAD3334(v5);
  }
  swift_release();
  return sub_1DC8818D0((uint64_t)v5);
}

uint64_t sub_1DCA53B08()
{
  sub_1DC8867A8();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = sub_1DCB86BF8();
  v0[4] = v3;
  v0[5] = *(void *)(v3 - 8);
  v0[6] = swift_task_alloc();
  swift_retain();
  int v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *int v4 = v0;
  v4[1] = sub_1DCA53C00;
  return sub_1DC9780D0();
}

uint64_t sub_1DCA53C00(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  v5[8] = a1;
  v5[9] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
  else
  {
    os_signpost_id_t v12 = (void *)sub_1DC8BAA00();
    v5[10] = v12;
    *os_signpost_id_t v12 = v7;
    v12[1] = sub_1DCA53D58;
    return v14();
  }
}

uint64_t sub_1DCA53D58()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 96) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DCA53E48()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(int *)(type metadata accessor for AccessibilitySoundRecognition.Session(0) + 20);
  *(_DWORD *)(v0 + 120) = v3;
  *(void *)(v2 + v3) = v1;
  uint64_t v4 = (void *)sub_1DC8BAA00();
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1DC9DD1D4;
  uint64_t v5 = *(void *)(v0 + 48);
  return v7(v5);
}

uint64_t sub_1DCA53F00()
{
  return sub_1DCA53A08();
}

uint64_t sub_1DCA53F18()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8D6930;
  return sub_1DCA53B08();
}

unint64_t sub_1DCA53FB4()
{
  unint64_t result = qword_1EAAA5BD0;
  if (!qword_1EAAA5BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5BD0);
  }
  return result;
}

unint64_t sub_1DCA54000()
{
  unint64_t result = qword_1EAAA5BD8;
  if (!qword_1EAAA5BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5BD8);
  }
  return result;
}

unint64_t sub_1DCA5404C()
{
  unint64_t result = qword_1EAAA5BE0;
  if (!qword_1EAAA5BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5BE0);
  }
  return result;
}

unint64_t sub_1DCA54098()
{
  unint64_t result = qword_1EAAA5BE8;
  if (!qword_1EAAA5BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5BE8);
  }
  return result;
}

unint64_t sub_1DCA540E4()
{
  unint64_t result = qword_1EAAA5BF0;
  if (!qword_1EAAA5BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5BF0);
  }
  return result;
}

unint64_t sub_1DCA54130()
{
  unint64_t result = qword_1EAAA5BF8;
  if (!qword_1EAAA5BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5BF8);
  }
  return result;
}

unint64_t sub_1DCA5417C()
{
  unint64_t result = qword_1EAAA5C00;
  if (!qword_1EAAA5C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C00);
  }
  return result;
}

unint64_t sub_1DCA541C8()
{
  unint64_t result = qword_1EAAA5C08;
  if (!qword_1EAAA5C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C08);
  }
  return result;
}

unint64_t sub_1DCA54214()
{
  unint64_t result = qword_1EAAA5C10;
  if (!qword_1EAAA5C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C10);
  }
  return result;
}

unint64_t sub_1DCA54260()
{
  unint64_t result = qword_1EAAA5C18;
  if (!qword_1EAAA5C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C18);
  }
  return result;
}

unint64_t sub_1DCA542AC()
{
  unint64_t result = qword_1EAAA5C20;
  if (!qword_1EAAA5C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C20);
  }
  return result;
}

unint64_t sub_1DCA542F8()
{
  unint64_t result = qword_1EAAA5C28;
  if (!qword_1EAAA5C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C28);
  }
  return result;
}

unint64_t sub_1DCA54344()
{
  unint64_t result = qword_1EAAA5C30;
  if (!qword_1EAAA5C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C30);
  }
  return result;
}

unint64_t sub_1DCA54390()
{
  unint64_t result = qword_1EAAA5C38;
  if (!qword_1EAAA5C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C38);
  }
  return result;
}

unint64_t sub_1DCA543DC()
{
  unint64_t result = qword_1EAAA5C40;
  if (!qword_1EAAA5C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C40);
  }
  return result;
}

unint64_t sub_1DCA54428()
{
  unint64_t result = qword_1EAAA5C48;
  if (!qword_1EAAA5C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C48);
  }
  return result;
}

unint64_t sub_1DCA54474()
{
  unint64_t result = qword_1EAAA5C50;
  if (!qword_1EAAA5C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C50);
  }
  return result;
}

unint64_t sub_1DCA544C0()
{
  unint64_t result = qword_1EAAA5C58;
  if (!qword_1EAAA5C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5C58);
  }
  return result;
}

uint64_t sub_1DCA5450C(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA5E38);
}

unint64_t sub_1DCA54534()
{
  unint64_t result = qword_1EAAA5D10;
  if (!qword_1EAAA5D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5D10);
  }
  return result;
}

unint64_t sub_1DCA54580()
{
  unint64_t result = qword_1EAAA5D18;
  if (!qword_1EAAA5D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5D18);
  }
  return result;
}

uint64_t sub_1DCA545CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCA54614()
{
  unint64_t result = qword_1EAAA5D28;
  if (!qword_1EAAA5D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5D28);
  }
  return result;
}

unint64_t sub_1DCA54660()
{
  unint64_t result = qword_1EAAA5D30;
  if (!qword_1EAAA5D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5D30);
  }
  return result;
}

unint64_t sub_1DCA546AC()
{
  unint64_t result = qword_1EAAA5D58;
  if (!qword_1EAAA5D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5D58);
  }
  return result;
}

unint64_t sub_1DCA546F8()
{
  unint64_t result = qword_1EAAA5D78;
  if (!qword_1EAAA5D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5D78);
  }
  return result;
}

unint64_t sub_1DCA54744()
{
  unint64_t result = qword_1EAAA5D80;
  if (!qword_1EAAA5D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5D80);
  }
  return result;
}

unint64_t sub_1DCA54790()
{
  unint64_t result = qword_1EAAA5D88;
  if (!qword_1EAAA5D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5D88);
  }
  return result;
}

uint64_t sub_1DCA547DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCA54940(uint64_t result)
{
  *(unsigned char *)(result + 208) = 0;
  return result;
}

uint64_t sub_1DCA54948(uint64_t result)
{
  *(unsigned char *)(result + 208) = 1;
  return result;
}

unint64_t sub_1DCA54954()
{
  unint64_t result = qword_1EAAA5DB0;
  if (!qword_1EAAA5DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5DB0);
  }
  return result;
}

unint64_t sub_1DCA549A0()
{
  unint64_t result = qword_1EAAA5DB8;
  if (!qword_1EAAA5DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5DB8);
  }
  return result;
}

unint64_t sub_1DCA549EC()
{
  unint64_t result = qword_1EAAA5DC8;
  if (!qword_1EAAA5DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5DC8);
  }
  return result;
}

uint64_t type metadata accessor for AccessibilitySoundRecognition.Session(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA5E48);
}

uint64_t sub_1DCA54A58(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v3();
  return a1;
}

uint64_t sub_1DCA54AAC()
{
  uint64_t v2 = sub_1DCA59A48();
  v3(v2);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_1DCA54B00()
{
  uint64_t v2 = sub_1DCA59A48();
  v3(v2);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t sub_1DCA54B54()
{
  type metadata accessor for AccessibilitySoundRecognition.Session(0);
  sub_1DCB86BF8();
  sub_1DC88819C();
  sub_1DC88D5C8();
  v0();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA54C38()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for AccessibilitySoundRecognition.Session(0);
  sub_1DC8E77E0(v6);
  uint64_t v8 = v0 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_1DC8D6930;
  return sub_1DCA535CC(v5, v3, v8);
}

uint64_t sub_1DCA54CFC()
{
  sub_1DC87E988(&qword_1EAAA5DE0);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v0();
  sub_1DC981E74();

  return swift_deallocObject();
}

uint64_t sub_1DCA54D80@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA5DE0);
  sub_1DC8E77E0(v2);

  return sub_1DC9DED04(a1);
}

uint64_t sub_1DCA54DD4()
{
  return sub_1DC88CF34(&qword_1EAAA5E00, &qword_1EAAA5E08);
}

unint64_t sub_1DCA54E14()
{
  unint64_t result = qword_1EAAA5E10;
  if (!qword_1EAAA5E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E10);
  }
  return result;
}

uint64_t sub_1DCA54E60()
{
  return sub_1DCA545CC(&qword_1EAAA5E18, (void (*)(uint64_t))type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
}

unint64_t sub_1DCA54EAC()
{
  unint64_t result = qword_1EAAA5E20;
  if (!qword_1EAAA5E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E20);
  }
  return result;
}

unint64_t sub_1DCA54EFC()
{
  unint64_t result = qword_1EAAA5E28;
  if (!qword_1EAAA5E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E28);
  }
  return result;
}

unint64_t sub_1DCA54F48(uint64_t a1)
{
  unint64_t result = sub_1DC9C02D8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCA54F70(uint64_t a1)
{
  unint64_t result = sub_1DC9C028C();
  *(void *)(a1 + 16) = result;
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition()
{
}

void type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for AccessibilitySoundRecognition.DetectorIdentifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1DCB86BF8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for AccessibilitySoundRecognition.DetectorIdentifier(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1DCB86BF8();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for AccessibilitySoundRecognition.DetectorIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1DCB86BF8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for AccessibilitySoundRecognition.DetectorIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DCA54A58((uint64_t)a1, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1DCB86BF8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for AccessibilitySoundRecognition.DetectorIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1DCB86BF8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AccessibilitySoundRecognition.DetectorIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DCA54A58((uint64_t)a1, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1DCB86BF8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1DCA55454()
{
  uint64_t result = sub_1DCB86BF8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition.Detection()
{
}

void *initializeWithTake for AccessibilitySoundRecognition.Request(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD1uLL);
}

void type metadata accessor for AccessibilitySoundRecognition.Request()
{
}

uint64_t getEnumTagSinglePayload for AccessibilitySoundRecognition.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCA55538);
}

uint64_t sub_1DCA55538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DCB86BF8();
  sub_1DC913CA0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AccessibilitySoundRecognition.Session(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCA555D8);
}

void sub_1DCA555D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DCB86BF8();
  sub_1DC913CA0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for AccessibilitySoundRecognition.CustomModel()
{
  return self;
}

uint64_t sub_1DCA55684()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1DCA55768(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  uint64_t v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DCA558FC(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1DCA55B5C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t sub_1DCA55B64(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCA55CAC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 192))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA55CEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition.CustomModelTensors()
{
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.Request.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.Request.CodingKeys;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwxx_0(uint64_t a1)
{
  return sub_1DC939784(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(void *)(a1 + 160),
           *(void *)(a1 + 168),
           *(void *)(a1 + 176),
           *(void *)(a1 + 184),
           *(void *)(a1 + 192),
           *(void *)(a1 + 200),
           *(unsigned char *)(a1 + 208));
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DCA595C4(a1, a2);
  uint64_t v5 = *(void *)(v4 + 144);
  uint64_t v6 = *(void *)(v4 + 152);
  uint64_t v7 = *(void *)(v4 + 160);
  uint64_t v8 = *(void *)(v4 + 168);
  uint64_t v9 = *(void *)(v4 + 176);
  uint64_t v10 = *(void *)(v4 + 184);
  uint64_t v11 = *(void *)(v4 + 192);
  uint64_t v12 = *(void *)(v4 + 200);
  char v93 = *(unsigned char *)(v4 + 208);
  uint64_t v22 = sub_1DCA59568(v3, v13, v14, v15, v16, v17, v18, v19, v40, v43, v46, v49, v52, v55, v20, v21, *(void *)(v4 + 128), *(void *)(v4 + 136), v5,
          v6,
          v7,
          v8,
          v9,
          v10,
          v11,
          v12,
          v93);
  *(void *)uint64_t v2 = v5;
  *(void *)(v2 + 8) = v6;
  *(void *)(v2 + 16) = v7;
  *(void *)(v2 + 24) = v8;
  *(void *)(v2 + 32) = v9;
  *(void *)(v2 + 40) = v10;
  *(void *)(v2 + 48) = v11;
  *(void *)(v2 + 56) = v12;
  sub_1DCA598A8(v22, v23, v24, v25, v26, v27, v28, v29, v41, v44, v47, v50, v53, v56, v58, v60, v62, v64, v66,
    v68,
    v70,
    v72,
    v74,
    v76,
    v78,
    v80,
    v82,
    v84,
    v86,
    v88);
  sub_1DCA59770(v30, v31, v32, v33, v34, v35, v36, v37, v42, v45, v48, v51, v54, v57, v59, v61, v63, v65, v67,
    v69,
    v71,
    v73,
    v75,
    v77,
    v79,
    v81,
    v83,
    v85,
    v87,
    v89,
    v90,
    v91,
    v92);
  sub_1DCA59720();
  sub_1DCA59A28();
  *(void *)(v2 + 176) = v38;
  *(void *)(v2 + 184) = v10;
  *(void *)(v2 + 192) = v11;
  *(void *)(v2 + 200) = v12;
  *(unsigned char *)(v2 + 208) = v93;
  return v2;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DCA595C4(a1, a2);
  uint64_t v5 = *(void *)(v4 + 144);
  uint64_t v6 = *(void *)(v4 + 152);
  uint64_t v7 = *(void *)(v4 + 160);
  uint64_t v8 = *(void *)(v4 + 168);
  uint64_t v9 = *(void *)(v4 + 176);
  uint64_t v10 = *(void *)(v4 + 184);
  uint64_t v11 = *(void *)(v4 + 192);
  uint64_t v12 = *(void *)(v4 + 200);
  char v120 = *(unsigned char *)(v4 + 208);
  sub_1DCA59568(v3, v13, v14, v15, v16, v17, v18, v19, v48, v52, v56, v60, v64, v68, v20, v21, *(void *)(v4 + 128), *(void *)(v4 + 136), v5,
    v6,
    v7,
    v8,
    v9,
    v10,
    v11,
    v12,
    v120);
  uint64_t v22 = *(void *)v2;
  uint64_t v23 = *(void *)(v2 + 8);
  *(void *)uint64_t v2 = v5;
  *(void *)(v2 + 8) = v6;
  uint64_t v24 = *(void *)(v2 + 16);
  uint64_t v25 = *(void *)(v2 + 24);
  *(void *)(v2 + 16) = v7;
  *(void *)(v2 + 24) = v8;
  uint64_t v26 = *(void *)(v2 + 32);
  uint64_t v27 = *(void *)(v2 + 40);
  *(void *)(v2 + 32) = v9;
  *(void *)(v2 + 40) = v10;
  uint64_t v28 = *(void *)(v2 + 48);
  uint64_t v29 = *(void *)(v2 + 56);
  *(void *)(v2 + 48) = v11;
  *(void *)(v2 + 56) = v12;
  sub_1DCA598A8(v22, v23, v24, v25, v26, v27, v28, v29, v49, v53, v57, v61, v65, v69, v72, v75, v78, v81, v84,
    v87,
    v90,
    v93,
    v96,
    v99,
    v102,
    v105,
    v108,
    v111,
    v113,
    v115);
  sub_1DCA59770(v30, v31, v32, v33, v34, v35, v36, v37, v50, v54, v58, v62, v66, v70, v73, v76, v79, v82, v85,
    v88,
    v91,
    v94,
    v97,
    v100,
    v103,
    v106,
    v109,
    v112,
    v114,
    v116,
    v117,
    v118,
    v119);
  sub_1DCA59720();
  sub_1DCA59A28();
  *(void *)(v2 + 176) = v38;
  *(void *)(v2 + 184) = v10;
  *(void *)(v2 + 192) = v11;
  *(void *)(v2 + 200) = v12;
  *(unsigned char *)(v2 + 208) = v120;
  sub_1DCA59754();
  sub_1DC939784(v39, v40, v41, v42, v43, v44, v45, v46, v51, v55, v59, v63, v67, v71, v74, v77, v80, v83, v86,
    v89,
    v92,
    v95,
    v98,
    v101,
    v104,
    v107,
    v110);
  return v2;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwta_0(uint64_t a1)
{
  __n128 v2 = sub_1DCA59634();
  uint64_t v3 = *(void *)(a1 + 192);
  uint64_t v4 = *(void *)(a1 + 200);
  char v5 = *(unsigned char *)(a1 + 208);
  long long v7 = v6[1];
  *(_OWORD *)a1 = *v6;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = v6[3];
  *(_OWORD *)(a1 + 32) = v6[2];
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = v6[5];
  *(_OWORD *)(a1 + 64) = v6[4];
  *(_OWORD *)(a1 + 80) = v9;
  long long v10 = v6[7];
  *(_OWORD *)(a1 + 96) = v6[6];
  *(_OWORD *)(a1 + 112) = v10;
  long long v11 = v6[9];
  *(_OWORD *)(a1 + 128) = v6[8];
  *(_OWORD *)(a1 + 144) = v11;
  long long v12 = v6[11];
  *(_OWORD *)(a1 + 160) = v6[10];
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 192) = v6[12];
  *(unsigned char *)(a1 + 208) = v13;
  sub_1DC939784(v14, v15, v16, v17, v18, v19, v20, v21, v2.n128_i64[0], v2.n128_i64[1], v22, v23, v24, v25, v26, v27, v28, v29, v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v3,
    v4,
    v5);
  return a1;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return sub_1DC89DC14(-1);
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 209)) {
    return sub_1DC89DC14(*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 208);
  if (v3 > 1) {
    return sub_1DC89DC14(v3 ^ 0xFF);
  }
  else {
    return sub_1DC89DC14(-1);
  }
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 208) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 209) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 209) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 208) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DCA5611C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 208) = a2 & 1;
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition.DetectorSpecification()
{
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.Detection.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.Detection.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.Detection.InactiveCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.Detection.InactiveCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.Detection.ActiveCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.Detection.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier.BuiltInCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.BuiltInCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier.CustomCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorIdentifier.CustomCodingKeys;
}

unsigned char *_s13SoundAnalysis29AccessibilitySoundRecognitionV25BuiltInDetectorIdentifierOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA56260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SmokeAlarmCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SmokeAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DistressedBabyCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DistressedBabyCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BeepCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BeepCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BuzzerCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.BuzzerCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CarHornCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CarHornCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CatMeowCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CatMeowCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CoughCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.CoughCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DingBellCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DingBellCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DogBarkCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DogBarkCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorBellCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorBellCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorKnockCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.DoorKnockCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.FireAlarmCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.FireAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.GlassBreakingCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.GlassBreakingCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.KettleWhistlingCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.KettleWhistlingCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.ShoutCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.ShoutCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SirenAlarmCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.SirenAlarmCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.WaterRunningCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.BuiltInDetectorIdentifier.WaterRunningCodingKeys;
}

unint64_t sub_1DCA563AC()
{
  unint64_t result = qword_1EAAA5E58;
  if (!qword_1EAAA5E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E58);
  }
  return result;
}

unint64_t sub_1DCA563FC()
{
  unint64_t result = qword_1EAAA5E60;
  if (!qword_1EAAA5E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E60);
  }
  return result;
}

unint64_t sub_1DCA5644C()
{
  unint64_t result = qword_1EAAA5E68;
  if (!qword_1EAAA5E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E68);
  }
  return result;
}

unint64_t sub_1DCA5649C()
{
  unint64_t result = qword_1EAAA5E70;
  if (!qword_1EAAA5E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E70);
  }
  return result;
}

unint64_t sub_1DCA564EC()
{
  unint64_t result = qword_1EAAA5E78;
  if (!qword_1EAAA5E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E78);
  }
  return result;
}

unint64_t sub_1DCA5653C()
{
  unint64_t result = qword_1EAAA5E80;
  if (!qword_1EAAA5E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E80);
  }
  return result;
}

unint64_t sub_1DCA5658C()
{
  unint64_t result = qword_1EAAA5E88;
  if (!qword_1EAAA5E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E88);
  }
  return result;
}

unint64_t sub_1DCA565D8(uint64_t a1)
{
  unint64_t result = sub_1DC9C0080();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCA56600(uint64_t a1)
{
  unint64_t result = sub_1DC9BFF4C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCA5662C()
{
  unint64_t result = qword_1EAAA5E90;
  if (!qword_1EAAA5E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5E90);
  }
  return result;
}

uint64_t sub_1DCA56678(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_1DCA566B4()
{
  return &off_1F37EDB60;
}

uint64_t sub_1DCA566C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 8);
}

uint64_t sub_1DCA566C8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DCA56708()
{
  unint64_t result = qword_1EAAA5EA0;
  if (!qword_1EAAA5EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EA0);
  }
  return result;
}

unint64_t sub_1DCA56758()
{
  unint64_t result = qword_1EAAA5EA8;
  if (!qword_1EAAA5EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EA8);
  }
  return result;
}

unint64_t sub_1DCA567A8()
{
  unint64_t result = qword_1EAAA5EB0;
  if (!qword_1EAAA5EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EB0);
  }
  return result;
}

unint64_t sub_1DCA567F8()
{
  unint64_t result = qword_1EAAA5EB8;
  if (!qword_1EAAA5EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EB8);
  }
  return result;
}

unint64_t sub_1DCA56848()
{
  unint64_t result = qword_1EAAA5EC0;
  if (!qword_1EAAA5EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EC0);
  }
  return result;
}

unint64_t sub_1DCA56898()
{
  unint64_t result = qword_1EAAA5EC8;
  if (!qword_1EAAA5EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EC8);
  }
  return result;
}

unint64_t sub_1DCA568E8()
{
  unint64_t result = qword_1EAAA5ED0;
  if (!qword_1EAAA5ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5ED0);
  }
  return result;
}

unint64_t sub_1DCA56938()
{
  unint64_t result = qword_1EAAA5ED8;
  if (!qword_1EAAA5ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5ED8);
  }
  return result;
}

unint64_t sub_1DCA56988()
{
  unint64_t result = qword_1EAAA5EE0;
  if (!qword_1EAAA5EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EE0);
  }
  return result;
}

unint64_t sub_1DCA569D8()
{
  unint64_t result = qword_1EAAA5EE8;
  if (!qword_1EAAA5EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EE8);
  }
  return result;
}

unint64_t sub_1DCA56A28()
{
  unint64_t result = qword_1EAAA5EF0;
  if (!qword_1EAAA5EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EF0);
  }
  return result;
}

unint64_t sub_1DCA56A78()
{
  unint64_t result = qword_1EAAA5EF8;
  if (!qword_1EAAA5EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5EF8);
  }
  return result;
}

unint64_t sub_1DCA56AC8()
{
  unint64_t result = qword_1EAAA5F00;
  if (!qword_1EAAA5F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F00);
  }
  return result;
}

unint64_t sub_1DCA56B18()
{
  unint64_t result = qword_1EAAA5F08;
  if (!qword_1EAAA5F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F08);
  }
  return result;
}

unint64_t sub_1DCA56B68()
{
  unint64_t result = qword_1EAAA5F10;
  if (!qword_1EAAA5F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F10);
  }
  return result;
}

unint64_t sub_1DCA56BB8()
{
  unint64_t result = qword_1EAAA5F18;
  if (!qword_1EAAA5F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F18);
  }
  return result;
}

unint64_t sub_1DCA56C08()
{
  unint64_t result = qword_1EAAA5F20;
  if (!qword_1EAAA5F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F20);
  }
  return result;
}

unint64_t sub_1DCA56C58()
{
  unint64_t result = qword_1EAAA5F28;
  if (!qword_1EAAA5F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F28);
  }
  return result;
}

unint64_t sub_1DCA56CA8()
{
  unint64_t result = qword_1EAAA5F30;
  if (!qword_1EAAA5F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F30);
  }
  return result;
}

unint64_t sub_1DCA56CF8()
{
  unint64_t result = qword_1EAAA5F38;
  if (!qword_1EAAA5F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F38);
  }
  return result;
}

unint64_t sub_1DCA56D48()
{
  unint64_t result = qword_1EAAA5F40;
  if (!qword_1EAAA5F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F40);
  }
  return result;
}

unint64_t sub_1DCA56D98()
{
  unint64_t result = qword_1EAAA5F48;
  if (!qword_1EAAA5F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F48);
  }
  return result;
}

unint64_t sub_1DCA56DE8()
{
  unint64_t result = qword_1EAAA5F50;
  if (!qword_1EAAA5F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F50);
  }
  return result;
}

unint64_t sub_1DCA56E38()
{
  unint64_t result = qword_1EAAA5F58;
  if (!qword_1EAAA5F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F58);
  }
  return result;
}

unint64_t sub_1DCA56E88()
{
  unint64_t result = qword_1EAAA5F60;
  if (!qword_1EAAA5F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F60);
  }
  return result;
}

unint64_t sub_1DCA56ED8()
{
  unint64_t result = qword_1EAAA5F68;
  if (!qword_1EAAA5F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F68);
  }
  return result;
}

unint64_t sub_1DCA56F28()
{
  unint64_t result = qword_1EAAA5F70;
  if (!qword_1EAAA5F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F70);
  }
  return result;
}

unint64_t sub_1DCA56F78()
{
  unint64_t result = qword_1EAAA5F78;
  if (!qword_1EAAA5F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F78);
  }
  return result;
}

unint64_t sub_1DCA56FC8()
{
  unint64_t result = qword_1EAAA5F80;
  if (!qword_1EAAA5F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F80);
  }
  return result;
}

unint64_t sub_1DCA57018()
{
  unint64_t result = qword_1EAAA5F88;
  if (!qword_1EAAA5F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F88);
  }
  return result;
}

unint64_t sub_1DCA57068()
{
  unint64_t result = qword_1EAAA5F90;
  if (!qword_1EAAA5F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F90);
  }
  return result;
}

unint64_t sub_1DCA570B8()
{
  unint64_t result = qword_1EAAA5F98;
  if (!qword_1EAAA5F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5F98);
  }
  return result;
}

unint64_t sub_1DCA57108()
{
  unint64_t result = qword_1EAAA5FA0;
  if (!qword_1EAAA5FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FA0);
  }
  return result;
}

unint64_t sub_1DCA57158()
{
  unint64_t result = qword_1EAAA5FA8;
  if (!qword_1EAAA5FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FA8);
  }
  return result;
}

unint64_t sub_1DCA571A8()
{
  unint64_t result = qword_1EAAA5FB0;
  if (!qword_1EAAA5FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FB0);
  }
  return result;
}

unint64_t sub_1DCA571F8()
{
  unint64_t result = qword_1EAAA5FB8;
  if (!qword_1EAAA5FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FB8);
  }
  return result;
}

unint64_t sub_1DCA57248()
{
  unint64_t result = qword_1EAAA5FC0;
  if (!qword_1EAAA5FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FC0);
  }
  return result;
}

unint64_t sub_1DCA57298()
{
  unint64_t result = qword_1EAAA5FC8;
  if (!qword_1EAAA5FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FC8);
  }
  return result;
}

unint64_t sub_1DCA572E8()
{
  unint64_t result = qword_1EAAA5FD0;
  if (!qword_1EAAA5FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FD0);
  }
  return result;
}

unint64_t sub_1DCA57338()
{
  unint64_t result = qword_1EAAA5FD8;
  if (!qword_1EAAA5FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FD8);
  }
  return result;
}

unint64_t sub_1DCA57388()
{
  unint64_t result = qword_1EAAA5FE0;
  if (!qword_1EAAA5FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FE0);
  }
  return result;
}

unint64_t sub_1DCA573D8()
{
  unint64_t result = qword_1EAAA5FE8;
  if (!qword_1EAAA5FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FE8);
  }
  return result;
}

unint64_t sub_1DCA57428()
{
  unint64_t result = qword_1EAAA5FF0;
  if (!qword_1EAAA5FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FF0);
  }
  return result;
}

unint64_t sub_1DCA57478()
{
  unint64_t result = qword_1EAAA5FF8;
  if (!qword_1EAAA5FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA5FF8);
  }
  return result;
}

unint64_t sub_1DCA574C8()
{
  unint64_t result = qword_1EAAA6000;
  if (!qword_1EAAA6000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6000);
  }
  return result;
}

unint64_t sub_1DCA57518()
{
  unint64_t result = qword_1EAAA6008;
  if (!qword_1EAAA6008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6008);
  }
  return result;
}

unint64_t sub_1DCA57568()
{
  unint64_t result = qword_1EAAA6010;
  if (!qword_1EAAA6010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6010);
  }
  return result;
}

unint64_t sub_1DCA575B8()
{
  unint64_t result = qword_1EAAA6018;
  if (!qword_1EAAA6018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6018);
  }
  return result;
}

unint64_t sub_1DCA57608()
{
  unint64_t result = qword_1EAAA6020;
  if (!qword_1EAAA6020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6020);
  }
  return result;
}

unint64_t sub_1DCA57658()
{
  unint64_t result = qword_1EAAA6028;
  if (!qword_1EAAA6028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6028);
  }
  return result;
}

unint64_t sub_1DCA576A4()
{
  unint64_t result = qword_1EAAA6048;
  if (!qword_1EAAA6048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6048);
  }
  return result;
}

unint64_t sub_1DCA576F0()
{
  unint64_t result = qword_1EAAA6050;
  if (!qword_1EAAA6050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6050);
  }
  return result;
}

unint64_t sub_1DCA5773C()
{
  unint64_t result = qword_1EAAA6058;
  if (!qword_1EAAA6058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6058);
  }
  return result;
}

uint64_t sub_1DCA57788()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC8818D0(v0 + 224);

  return swift_deallocObject();
}

uint64_t sub_1DCA57880@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA51710(v1 + 16, (void *)(v1 + 224), a1);
}

uint64_t sub_1DCA578A0(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA6198);
  uint64_t result = sub_1DCB88CD8();
  unsigned int v4 = (void *)result;
  int64_t v5 = 0;
  uint64_t v26 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  uint64_t v24 = v7;
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = result + 64;
  if ((v10 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v13 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v5 << 6))
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v26 + 48) + 16 * i);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCA51ABC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v4;
    }
    *(void *)(v12 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v21 = (void *)(v4[6] + 16 * i);
    *uint64_t v21 = v19;
    v21[1] = v20;
    *(void *)(v4[7] + 8 * i) = v27;
    uint64_t v22 = v4[2];
    BOOL v15 = __OFADD__(v22, 1);
    uint64_t v23 = v22 + 1;
    if (v15)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v4[2] = v23;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v15 = __OFADD__(v5++, 1);
    if (v15) {
      goto LABEL_27;
    }
    if (v5 >= v25) {
      return (uint64_t)v4;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v5);
    if (!v16) {
      break;
    }
LABEL_15:
    unint64_t v11 = (v16 - 1) & v16;
  }
  int64_t v17 = v5 + 1;
  if (v5 + 1 >= v25) {
    return (uint64_t)v4;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16) {
    goto LABEL_14;
  }
  int64_t v17 = v5 + 2;
  if (v5 + 2 >= v25) {
    return (uint64_t)v4;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16) {
    goto LABEL_14;
  }
  int64_t v17 = v5 + 3;
  if (v5 + 3 >= v25) {
    return (uint64_t)v4;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16)
  {
LABEL_14:
    int64_t v5 = v17;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v25) {
      return (uint64_t)v4;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DCA57ACC()
{
  swift_isUniquelyReferenced_nonNull_native();
  sub_1DCA595AC();
  uint64_t v0 = sub_1DCA59B60();
  uint64_t v3 = sub_1DC8BFED8(v0, v1, v2);
  sub_1DCA599BC(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA57B40(uint64_t a1, uint64_t a2)
{
  return sub_1DCA57B70(a1, a2, (void (*)(uint64_t))sub_1DC8C0148);
}

uint64_t sub_1DCA57B58(uint64_t a1, uint64_t a2)
{
  return sub_1DCA57B70(a1, a2, (void (*)(uint64_t))sub_1DC8C0154);
}

uint64_t sub_1DCA57B70(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_isUniquelyReferenced_nonNull_native();
  sub_1DCA595AC();
  uint64_t v5 = sub_1DCA59AC0();
  a3(v5);
  *uint64_t v3 = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA57BEC()
{
  swift_isUniquelyReferenced_nonNull_native();
  sub_1DCA595AC();
  sub_1DC8C028C();
  sub_1DCA599BC(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA57C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1DC8C03A8(a1, a2, a3);
  *uint64_t v3 = v8;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA57CE4()
{
  swift_isUniquelyReferenced_nonNull_native();
  sub_1DCA595AC();
  sub_1DC8C04AC();
  sub_1DCA599BC(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA57D64()
{
  uint64_t v0 = e5rt_tensor_desc_create();
  if (v0)
  {
    uint64_t v1 = v0;
    sub_1DC96ECAC();
    swift_allocError();
    *(_DWORD *)uint64_t v2 = v1;
    *(unsigned char *)(v2 + 4) = 0;
  }
  else
  {
    uint64_t v1 = 0;
    sub_1DC96ECF8();
    swift_allocError();
    *uint64_t v4 = 0;
  }
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DCA57E74()
{
  sub_1DC87E988(&qword_1EAAA6080);
  sub_1DC89D4E0();
  swift_release();
  sub_1DC92F4D8();
  v0();

  return swift_deallocObject();
}

void sub_1DCA57F18(void *a1@<X8>)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA6080);
  sub_1DC8E77E0(v2);
  sub_1DCB065D8();
  *a1 = v3;
}

uint64_t sub_1DCA57F64(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCA58058@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  if (a1[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  uint64_t result = sub_1DCA5450C(v3 | *a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1DCA5809C@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DCA3342C(*a1);
  *a2 = result & 1;
  a2[1] = BYTE1(result) & 1;
  return result;
}

void *sub_1DCA580D4@<X0>(void *a1@<X8>)
{
  return sub_1DC9571A0(a1);
}

uint64_t sub_1DCA580DC()
{
  sub_1DC88D538();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC92F4D8();
  v0();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA58254@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCA52334(a1, *(void *)(v2+ ((*(void *)(*(void *)(*(void *)(v2 + 16) - 8) + 64)+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_1DCA582D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA58310()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA58320()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA58360()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1DCA583A8()
{
  unint64_t result = qword_1EAAA61F0;
  if (!qword_1EAAA61F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA61F0);
  }
  return result;
}

unint64_t sub_1DCA583F4()
{
  unint64_t result = qword_1EAAA61F8;
  if (!qword_1EAAA61F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA61F8);
  }
  return result;
}

unint64_t sub_1DCA58440()
{
  unint64_t result = qword_1EAAA6200;
  if (!qword_1EAAA6200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6200);
  }
  return result;
}

unint64_t sub_1DCA5848C()
{
  unint64_t result = qword_1EAAA6210;
  if (!qword_1EAAA6210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6210);
  }
  return result;
}

unint64_t sub_1DCA584D8()
{
  unint64_t result = qword_1EAAA6218;
  if (!qword_1EAAA6218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAAA6218);
  }
  return result;
}

unint64_t sub_1DCA58524()
{
  unint64_t result = qword_1EAAA6228;
  if (!qword_1EAAA6228)
  {
    sub_1DC8863A8(&qword_1EAAA11A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6228);
  }
  return result;
}

uint64_t sub_1DCA58598(uint64_t a1)
{
  sub_1DCA59634();
  sub_1DCA59754();
  sub_1DC9393A4(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29);
  return a1;
}

uint64_t sub_1DCA585D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v20 = *(void *)(a1 + 224);
  uint64_t v21 = *(void *)(a1 + 216);
  uint64_t v3 = *(void *)(a1 + 240);
  uint64_t v4 = *(void *)(a1 + 248);
  uint64_t v5 = *(void *)(a1 + 256);
  uint64_t v6 = *(void *)(a1 + 264);
  uint64_t v7 = *(void *)(a1 + 272);
  long long v18 = *(_OWORD *)(a1 + 296);
  long long v19 = *(_OWORD *)(a1 + 280);
  long long v16 = *(_OWORD *)(a1 + 328);
  long long v17 = *(_OWORD *)(a1 + 312);
  long long v15 = *(_OWORD *)(a1 + 344);
  long long v13 = *(_OWORD *)(a1 + 376);
  long long v14 = *(_OWORD *)(a1 + 360);
  long long v12 = *(_OWORD *)(a1 + 392);
  uint64_t v9 = *(void *)(a1 + 408);
  uint64_t v8 = *(void *)(a1 + 416);
  char v10 = *(unsigned char *)(a1 + 424);
  sub_1DC939784(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(unsigned char *)(a1 + 208));
  sub_1DC939784(v21, v20, v2, v3, v4, v5, v6, v7, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA58880);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.CustomModelTensors.CodingKeys;
}

unsigned char *sub_1DCA588B8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA58984);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for AccessibilitySoundRecognition.DomainError()
{
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorSpecification.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CodingKeys;
}

uint64_t _s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestV10CodingKeysOwet_0(unsigned __int8 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *(unsigned int *)a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return sub_1DC88D45C(a1);
}

unsigned char *_s13SoundAnalysis29AccessibilitySoundRecognitionV7RequestV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA58AB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorSpecification.BuiltInCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorSpecification.BuiltInCodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.DetectorSpecification.CustomCodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.DetectorSpecification.CustomCodingKeys;
}

void type metadata accessor for AccessibilitySoundRecognition.WeightsAndBiasTensors()
{
}

void type metadata accessor for AccessibilitySoundRecognition.ConstantParametersTensor()
{
}

unint64_t sub_1DCA58B14()
{
  unint64_t result = qword_1EAAA6240;
  if (!qword_1EAAA6240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6240);
  }
  return result;
}

unint64_t sub_1DCA58B64()
{
  unint64_t result = qword_1EAAA6248;
  if (!qword_1EAAA6248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6248);
  }
  return result;
}

unint64_t sub_1DCA58BB4()
{
  unint64_t result = qword_1EAAA6250;
  if (!qword_1EAAA6250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6250);
  }
  return result;
}

unint64_t sub_1DCA58C04()
{
  unint64_t result = qword_1EAAA6258;
  if (!qword_1EAAA6258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6258);
  }
  return result;
}

unint64_t sub_1DCA58C54()
{
  unint64_t result = qword_1EAAA6260;
  if (!qword_1EAAA6260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6260);
  }
  return result;
}

unint64_t sub_1DCA58CA4()
{
  unint64_t result = qword_1EAAA6268;
  if (!qword_1EAAA6268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6268);
  }
  return result;
}

unint64_t sub_1DCA58CF4()
{
  unint64_t result = qword_1EAAA6270;
  if (!qword_1EAAA6270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6270);
  }
  return result;
}

unint64_t sub_1DCA58D44()
{
  unint64_t result = qword_1EAAA6278;
  if (!qword_1EAAA6278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6278);
  }
  return result;
}

unint64_t sub_1DCA58D94()
{
  unint64_t result = qword_1EAAA6280;
  if (!qword_1EAAA6280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6280);
  }
  return result;
}

unint64_t sub_1DCA58DE4()
{
  unint64_t result = qword_1EAAA6288;
  if (!qword_1EAAA6288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6288);
  }
  return result;
}

unint64_t sub_1DCA58E34()
{
  unint64_t result = qword_1EAAA6290;
  if (!qword_1EAAA6290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6290);
  }
  return result;
}

unint64_t sub_1DCA58E84()
{
  unint64_t result = qword_1EAAA6298;
  if (!qword_1EAAA6298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6298);
  }
  return result;
}

unint64_t sub_1DCA58ED4()
{
  unint64_t result = qword_1EAAA62A0;
  if (!qword_1EAAA62A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA62A0);
  }
  return result;
}

unint64_t sub_1DCA58F24()
{
  unint64_t result = qword_1EAAA62A8;
  if (!qword_1EAAA62A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA62A8);
  }
  return result;
}

unint64_t sub_1DCA58F74()
{
  unint64_t result = qword_1EAAA62B0;
  if (!qword_1EAAA62B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA62B0);
  }
  return result;
}

unint64_t sub_1DCA58FC0()
{
  unint64_t result = qword_1EAAA62C0;
  if (!qword_1EAAA62C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA62C0);
  }
  return result;
}

unint64_t sub_1DCA5900C()
{
  unint64_t result = qword_1EAAA62E0;
  if (!qword_1EAAA62E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA62E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA59124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.WeightsAndBiasTensors.CodingKeys;
}

unsigned char *_s13SoundAnalysis29AccessibilitySoundRecognitionV9DetectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA59228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundRecognition.ConstantParametersTensor.CodingKeys()
{
  return &type metadata for AccessibilitySoundRecognition.ConstantParametersTensor.CodingKeys;
}

unint64_t sub_1DCA59264()
{
  unint64_t result = qword_1EAAA6308;
  if (!qword_1EAAA6308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6308);
  }
  return result;
}

unint64_t sub_1DCA592B4()
{
  unint64_t result = qword_1EAAA6310;
  if (!qword_1EAAA6310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6310);
  }
  return result;
}

unint64_t sub_1DCA59304()
{
  unint64_t result = qword_1EAAA6318;
  if (!qword_1EAAA6318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6318);
  }
  return result;
}

unint64_t sub_1DCA59354()
{
  unint64_t result = qword_1EAAA6320;
  if (!qword_1EAAA6320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6320);
  }
  return result;
}

unint64_t sub_1DCA593A4()
{
  unint64_t result = qword_1EAAA6328;
  if (!qword_1EAAA6328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6328);
  }
  return result;
}

unint64_t sub_1DCA593F4()
{
  unint64_t result = qword_1EAAA6330;
  if (!qword_1EAAA6330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6330);
  }
  return result;
}

uint64_t sub_1DCA59450()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA59478()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA594AC()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DCA5950C()
{
  return v0;
}

uint64_t sub_1DCA59518(uint64_t a1)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v1);
}

uint64_t sub_1DCA59538()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCA59568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  return sub_1DC9393A4(a1, v28, a2, a3, a4, a5, a6, a7, v27, a8, v29, v30, v31, v32, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1DCA595AC()
{
  void *v0 = 0x8000000000000000;
}

uint64_t sub_1DCA595C4(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

void sub_1DCA59604(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

__n128 sub_1DCA59634()
{
  return v0[4];
}

uint64_t sub_1DCA5965C()
{
  return sub_1DC8A85A8();
}

uint64_t sub_1DCA59674()
{
  return sub_1DC8DCF18(v0, v1);
}

uint64_t sub_1DCA596B0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DCA596D0()
{
  return v0 - 72;
}

uint64_t sub_1DCA596E4()
{
  return swift_bridgeObjectRelease();
}

void sub_1DCA596FC()
{
  *(_DWORD *)(v0 + 336) = 0;
  *(_DWORD *)(v0 + 232) = 1;
}

void sub_1DCA5970C()
{
  v0[52] = 0;
  v0[54] = 0;
  v0[82] = 0;
  v0[84] = 0;
}

void sub_1DCA59720()
{
  uint64_t v2 = *(void *)(v1 - 168);
  v0[16] = *(void *)(v1 - 176);
  v0[17] = v2;
  uint64_t v3 = *(void *)(v1 - 152);
  v0[18] = *(void *)(v1 - 160);
  v0[19] = v3;
}

uint64_t sub_1DCA5973C()
{
  return swift_willThrow();
}

void sub_1DCA59770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  v33[12] = a31;
  v33[13] = a32;
  uint64_t v35 = *(void *)(v34 - 184);
  v33[14] = a33;
  v33[15] = v35;
}

uint64_t sub_1DCA597A4()
{
  return sub_1DC8DCF18(v0, v1);
}

uint64_t sub_1DCA597BC()
{
  return sub_1DC8A85A8();
}

uint64_t sub_1DCA597D4()
{
  return type metadata accessor for AccessibilitySoundRecognition.DetectorIdentifier(0);
}

void sub_1DCA597FC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DCA59818(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DCA59850()
{
  return sub_1DCB89298();
}

uint64_t sub_1DCA5988C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DC9A1EF8(a1, a2, 0xE900000000000064, v3, a3);
}

void sub_1DCA598A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  v30[8] = v31;
  v30[9] = a28;
  v30[10] = a29;
  v30[11] = a30;
}

uint64_t sub_1DCA598CC()
{
  return v0;
}

uint64_t sub_1DCA598E4()
{
  return v0;
}

uint64_t sub_1DCA598FC()
{
  return v0;
}

uint64_t sub_1DCA59914()
{
  return v0;
}

uint64_t sub_1DCA59920()
{
  return v0;
}

uint64_t sub_1DCA59938()
{
  return v0;
}

uint64_t sub_1DCA59950()
{
  return v0;
}

uint64_t sub_1DCA59968()
{
  return v0;
}

uint64_t sub_1DCA59980()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCA599BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *char v10 = a10;
  return result;
}

uint64_t sub_1DCA599CC(uint64_t a1)
{
  sub_1DC957B28(a1, v1 - 248);
  sub_1DC957B84(v1 - 248);
  return nullsub_1(v1 - 248);
}

uint64_t sub_1DCA599FC()
{
  return v0;
}

void sub_1DCA59A28()
{
  uint64_t v2 = *(void *)(v1 - 136);
  *(void *)(v0 + 160) = *(void *)(v1 - 144);
  *(void *)(v0 + 168) = v2;
}

uint64_t sub_1DCA59A3C()
{
  return v0;
}

uint64_t sub_1DCA59A48()
{
  return 0;
}

uint64_t sub_1DCA59A5C()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA59A7C()
{
  return v0;
}

uint64_t sub_1DCA59A90()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DCA59AA8()
{
  return swift_willThrow();
}

uint64_t sub_1DCA59AC0()
{
  return v0;
}

uint64_t sub_1DCA59ACC()
{
  return v0;
}

void *sub_1DCA59AE0(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char __dst)
{
  return memcpy(&__dst, (const void *)(a1 + 16), 0xC0uLL);
}

uint64_t sub_1DCA59B00()
{
  return swift_bridgeObjectRelease();
}

void *sub_1DCA59B18(void *a1)
{
  return sub_1DC881A8C(a1, v1);
}

uint64_t sub_1DCA59B40()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DCA59B60()
{
  return v0;
}

void *sub_1DCA59B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return memcpy(&a9, (const void *)(a1 + 16), 0xC0uLL);
}

uint64_t sub_1DCA59BA0()
{
  uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v1 = (void *)result;
    int acousticID = MobileGestalt_get_acousticID();

    if ((acousticID - 8016) >= 4
      && (acousticID - 2021) >= 2
      && (acousticID - 12002) >= 2)
    {
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1DCB86FE8();
      sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
      uint64_t v4 = sub_1DCB86FC8();
      os_log_type_t v5 = sub_1DCB88468();
      if (os_log_type_enabled(v4, v5))
      {
        unsigned int v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unsigned int v6 = 67109120;
        sub_1DCB88778();
        _os_log_impl(&dword_1DC873000, v4, v5, "Acoustic ID %d unknown. Defaulting to 1-channel @ 16kHz", v6, 8u);
        MEMORY[0x1E01A99C0](v6, -1, -1);
      }
    }
    return 1024;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DCA59D44()
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v1 = result;
    unsigned int acousticID = MobileGestalt_get_acousticID();

    return (id)(acousticID >> 1 == 6001);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *AudioConfiguration.init(category:mode:options:channelMap:useSiriAudioRouting:prefersNoMicrophoneUsageIndicator:prefersNoInterruptions:allowHapticsAndSystemSoundsDuringRecording:preferDecoupledIO:smartRoutingConsideration:audioHWControlFlags:)@<X0>(void *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, uint64_t *a12)
{
  uint64_t v12 = result[1];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  uint64_t v15 = *a3;
  uint64_t v16 = *a12;
  char v17 = *((unsigned char *)a12 + 8);
  *(void *)a9 = *result;
  *(void *)(a9 + 8) = v12;
  *(void *)(a9 + 16) = v13;
  *(void *)(a9 + 24) = v14;
  *(void *)(a9 + 32) = v15;
  *(void *)(a9 + 40) = a4;
  *(unsigned char *)(a9 + 48) = a5;
  *(unsigned char *)(a9 + 49) = a6;
  *(unsigned char *)(a9 + 50) = a7;
  *(unsigned char *)(a9 + 51) = a8;
  *(unsigned char *)(a9 + 52) = a10;
  *(unsigned char *)(a9 + 53) = a11;
  *(void *)(a9 + 56) = v16;
  *(unsigned char *)(a9 + 64) = v17;
  return result;
}

uint64_t AudioSessionAudioHardwareControlFlags.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t AudioSessionAudioHardwareControlFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t AudioSessionAudioHardwareControlFlags.hash(into:)()
{
  return sub_1DCB891B8();
}

BOOL static AudioSessionAudioHardwareControlFlags.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DCA59E34(uint64_t a1, uint64_t a2)
{
  if (a1 == 1819307369 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DCA59EAC()
{
  return 1819307369;
}

uint64_t sub_1DCA59EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA59E34(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCA59EEC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5A09C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA59F28(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5A09C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AudioSessionAudioHardwareControlFlags.encode(to:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA6340);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D970();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA5A09C();
  sub_1DCB892B8();
  sub_1DC87E988(&qword_1EAAA6350);
  sub_1DC8CC998(&qword_1EAAA6358, &qword_1EAAA6350);
  sub_1DCB88F18();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_1DC88D674();
}

unint64_t sub_1DCA5A09C()
{
  unint64_t result = qword_1EAAA6348;
  if (!qword_1EAAA6348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6348);
  }
  return result;
}

uint64_t AudioSessionAudioHardwareControlFlags.hashValue.getter()
{
  return sub_1DCB891F8();
}

void AudioSessionAudioHardwareControlFlags.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = sub_1DC87E988(&qword_1EAAA6360);
  sub_1DC89D4E0();
  uint64_t v29 = v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(v24, v24[3]);
  sub_1DCA5A09C();
  sub_1DCB89298();
  if (!v20)
  {
    sub_1DC87E988(&qword_1EAAA6350);
    sub_1DC8CC998(&qword_1EAAA6368, &qword_1EAAA6350);
    sub_1DCB88DF8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
    *uint64_t v26 = a10;
  }
  sub_1DC8818D0((uint64_t)v24);
  sub_1DC88D674();
}

#error "1DCA5A2A4: call analysis failed (funcsize=6)"

void sub_1DCA5A2B0()
{
}

uint64_t AudioConfiguration.category.getter@<X0>(void *a1@<X8>)
{
  return sub_1DCA5D688(*(void *)(v1 + 8), a1);
}

uint64_t AudioConfiguration.category.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*AudioConfiguration.category.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.mode.getter@<X0>(void *a1@<X8>)
{
  return sub_1DCA5D688(*(void *)(v1 + 24), a1);
}

uint64_t AudioConfiguration.mode.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*AudioConfiguration.mode.modify())(void)
{
  return nullsub_1;
}

void AudioConfiguration.options.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
}

void *AudioConfiguration.options.setter(void *result)
{
  *(void *)(v1 + 32) = *result;
  return result;
}

uint64_t (*AudioConfiguration.options.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.channelMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AudioConfiguration.channelMap.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*AudioConfiguration.channelMap.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.useSiriAudioRouting.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t AudioConfiguration.useSiriAudioRouting.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*AudioConfiguration.useSiriAudioRouting.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.prefersNoMicrophoneUsageIndicator.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t AudioConfiguration.prefersNoMicrophoneUsageIndicator.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 49) = result;
  return result;
}

uint64_t (*AudioConfiguration.prefersNoMicrophoneUsageIndicator.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.prefersNoInterruptions.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t AudioConfiguration.prefersNoInterruptions.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 50) = result;
  return result;
}

uint64_t (*AudioConfiguration.prefersNoInterruptions.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.allowHapticsAndSystemSoundsDuringRecording.getter()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t AudioConfiguration.allowHapticsAndSystemSoundsDuringRecording.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 51) = result;
  return result;
}

uint64_t (*AudioConfiguration.allowHapticsAndSystemSoundsDuringRecording.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.preferDecoupledIO.getter()
{
  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t AudioConfiguration.preferDecoupledIO.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 52) = result;
  return result;
}

uint64_t (*AudioConfiguration.preferDecoupledIO.modify())(void)
{
  return nullsub_1;
}

uint64_t AudioConfiguration.smartRoutingConsideration.getter()
{
  return *(unsigned __int8 *)(v0 + 53);
}

uint64_t AudioConfiguration.smartRoutingConsideration.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 53) = result;
  return result;
}

uint64_t (*AudioConfiguration.smartRoutingConsideration.modify())(void)
{
  return nullsub_1;
}

void AudioConfiguration.audioHWControlFlags.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t AudioConfiguration.audioHWControlFlags.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 56) = *(void *)result;
  *(unsigned char *)(v1 + 64) = v2;
  return result;
}

uint64_t (*AudioConfiguration.audioHWControlFlags.modify())(void)
{
  return nullsub_1;
}

uint64_t static AudioConfiguration.create(category:mode:options:channelMap:useSiriAudioRouting:prefersNoMicrophoneUsageIndicator:prefersNoInterruptions:allowHapticsAndSystemSoundsDuringRecording:preferDecoupledIO:smartRoutingConsideration:audioHWControlFlags:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, uint64_t *a12)
{
  uint64_t v12 = a1[1];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  uint64_t v15 = *a3;
  uint64_t v16 = *a12;
  char v17 = *((unsigned char *)a12 + 8);
  *(void *)a9 = *a1;
  *(void *)(a9 + 8) = v12;
  *(void *)(a9 + 16) = v13;
  *(void *)(a9 + 24) = v14;
  *(void *)(a9 + 32) = v15;
  *(void *)(a9 + 40) = a4;
  *(unsigned char *)(a9 + 48) = a5;
  *(unsigned char *)(a9 + 49) = a6;
  *(unsigned char *)(a9 + 50) = a7;
  *(unsigned char *)(a9 + 51) = a8;
  *(unsigned char *)(a9 + 52) = a10;
  *(unsigned char *)(a9 + 53) = a11;
  *(void *)(a9 + 56) = v16;
  *(unsigned char *)(a9 + 64) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA5A60C()
{
  uint64_t v0 = sub_1DCB87938();
  uint64_t v2 = v1;
  uint64_t result = sub_1DCB87938();
  qword_1EAAFFAA0 = v0;
  *(void *)algn_1EAAFFAA8 = v2;
  qword_1EAAFFAB0 = result;
  qword_1EAAFFAB8 = v4;
  qword_1EAAFFAD8 = 0;
  qword_1EAAFFAC0 = 1;
  qword_1EAAFFAC8 = 0;
  *(uint64_t *)((char *)&qword_1EAAFFAC8 + 6) = 0;
  byte_1EAAFFAE0 = 1;
  return result;
}

uint64_t AudioConfiguration.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  int v3 = *(unsigned __int8 *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  sub_1DCB891B8();
  sub_1DCB891C8();
  if (v1) {
    sub_1DC8A7DAC();
  }
  sub_1DCB891C8();
  sub_1DCB891C8();
  sub_1DCB891C8();
  sub_1DCB891C8();
  sub_1DCB891C8();
  sub_1DCB891C8();
  if (v3) {
    return sub_1DCB891C8();
  }
  sub_1DCB891C8();
  return sub_1DCB891B8();
}

uint64_t static AudioConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  int v31 = *(unsigned __int8 *)(a1 + 49);
  int v32 = *(unsigned __int8 *)(a1 + 48);
  int v28 = *(unsigned __int8 *)(a1 + 51);
  int v26 = *(unsigned __int8 *)(a1 + 52);
  int v24 = *(unsigned __int8 *)(a1 + 53);
  char v22 = *(unsigned char *)(a1 + 64);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  int v10 = *(unsigned __int8 *)(a2 + 48);
  int v11 = *(unsigned __int8 *)(a2 + 49);
  int v29 = *(unsigned __int8 *)(a2 + 50);
  int v30 = *(unsigned __int8 *)(a1 + 50);
  int v27 = *(unsigned __int8 *)(a2 + 51);
  int v25 = *(unsigned __int8 *)(a2 + 52);
  int v23 = *(unsigned __int8 *)(a2 + 53);
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v20 = *(void *)(a1 + 56);
  BOOL v12 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  char v21 = *(unsigned char *)(a2 + 64);
  if (v12 || (v13 = sub_1DCB89018(), uint64_t result = 0, (v13 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7)
    {
      if (v4 != v9) {
        return 0;
      }
    }
    else
    {
      char v16 = sub_1DCB89018();
      uint64_t result = 0;
      if ((v16 & 1) == 0 || v4 != v9) {
        return result;
      }
    }
    if (v5)
    {
      if (v8)
      {
        char v17 = sub_1DC8DCEB4(v5, v8);
        uint64_t result = 0;
        if (v17 & 1) == 0 || ((v32 ^ v10)) {
          return result;
        }
LABEL_21:
        if (((v31 ^ v11) & 1) != 0
          || ((v30 ^ v29) & 1) != 0
          || ((v28 ^ v27) & 1) != 0
          || ((v26 ^ v25) & 1) != 0
          || ((v24 ^ v23) & 1) != 0)
        {
          return result;
        }
        if (v22)
        {
          if ((v21 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          char v18 = v21;
          if (v20 != v19) {
            char v18 = 1;
          }
          if (v18) {
            return 0;
          }
        }
        return 1;
      }
    }
    else if (!v8)
    {
      uint64_t result = 0;
      if (v32 != v10) {
        return result;
      }
      goto LABEL_21;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1DCA5A9A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79726F6765746163 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701080941 && a2 == 0xE400000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x4D6C656E6E616863 && a2 == 0xEA00000000007061;
        if (v8 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB97820 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000021 && a2 == 0x80000001DCB97840 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x80000001DCB97870 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001DCB97890 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB978C0 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else if (a1 == 0xD000000000000019 && a2 == 0x80000001DCB978E0 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB97900)
        {
          swift_bridgeObjectRelease();
          return 10;
        }
        else
        {
          char v9 = sub_1DCB89018();
          swift_bridgeObjectRelease();
          if (v9) {
            return 10;
          }
          else {
            return 11;
          }
        }
      }
    }
  }
}

unint64_t sub_1DCA5ADC0(char a1)
{
  unint64_t result = 0x79726F6765746163;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701080941;
      break;
    case 2:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 3:
      unint64_t result = 0x4D6C656E6E616863;
      break;
    case 4:
    case 10:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DCA5AF14()
{
  return sub_1DCA5ADC0(*v0);
}

uint64_t sub_1DCA5AF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA5A9A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA5AF44(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5CDC8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA5AF80(uint64_t a1)
{
  unint64_t v2 = sub_1DCA5CDC8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AudioConfiguration.encode(to:)()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA6370);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA5CDC8();
  sub_1DCB892B8();
  sub_1DC87E988(&qword_1EAAA6380);
  sub_1DC8CC998(&qword_1EAAA6388, &qword_1EAAA6380);
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC87E988(&qword_1EAAA6390);
    sub_1DC8CC998(&qword_1EAAA6398, &qword_1EAAA6390);
    sub_1DCA5D690();
    sub_1DC87E988(&qword_1EAAA63A0);
    sub_1DC8CC998(&qword_1EAAA63A8, &qword_1EAAA63A0);
    sub_1DCA5D690();
    sub_1DC87E988((uint64_t *)&unk_1EAA9C8C0);
    sub_1DC8CC998(&qword_1EAAA22E8, (uint64_t *)&unk_1EAA9C8C0);
    sub_1DCB88EB8();
    sub_1DCA5D67C(4);
    sub_1DCA5D6B8();
    sub_1DCA5D67C(5);
    sub_1DCA5D6B8();
    sub_1DCA5D67C(6);
    sub_1DCA5D6B8();
    sub_1DCA5D67C(7);
    sub_1DCA5D6B8();
    sub_1DCA5D67C(8);
    sub_1DCA5D6B8();
    sub_1DCA5D67C(9);
    sub_1DCA5D6B8();
    sub_1DCA5CE14();
    sub_1DCB88EB8();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1DC88D674();
}

uint64_t AudioConfiguration.hashValue.getter()
{
  return sub_1DCB891F8();
}

void AudioConfiguration.init(from:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA63B8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA5CDC8();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DC87E988(&qword_1EAAA6380);
    sub_1DC8CC998(&qword_1EAAA63C0, &qword_1EAAA6380);
    sub_1DCB88DF8();
    uint64_t v17 = v18;
    sub_1DC87E988(&qword_1EAAA6390);
    sub_1DC8CC998(&qword_1EAAA63C8, &qword_1EAAA6390);
    swift_bridgeObjectRetain();
    sub_1DCB88DF8();
    uint64_t v16 = v4;
    sub_1DC87E988(&qword_1EAAA63A0);
    sub_1DC8CC998((unint64_t *)&unk_1EAAA63D0, &qword_1EAAA63A0);
    swift_bridgeObjectRetain();
    sub_1DCA5D6F4();
    sub_1DCB88DF8();
    uint64_t v15 = v18;
    uint64_t v6 = v18;
    sub_1DC87E988((uint64_t *)&unk_1EAA9C8C0);
    sub_1DC8CC998((unint64_t *)&unk_1EAAA62F0, (uint64_t *)&unk_1EAA9C8C0);
    sub_1DCA5D6F4();
    sub_1DCB88D98();
    uint64_t v7 = v18;
    LOBYTE(v18) = 4;
    swift_bridgeObjectRetain();
    char v20 = sub_1DCB88DB8();
    char v14 = sub_1DCA5D620(5);
    char v13 = sub_1DCA5D620(6);
    char v12 = sub_1DCA5D620(7);
    char v11 = sub_1DCA5D620(8);
    char v10 = sub_1DCA5D620(9);
    sub_1DCA5CE60();
    sub_1DCB88D98();
    uint64_t v8 = sub_1DCA5D730();
    v9(v8);
    *(void *)uint64_t v16 = v17;
    *(void *)(v16 + 8) = v19;
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = v19;
    *(void *)(v16 + 32) = v6;
    *(void *)(v16 + 40) = v7;
    *(unsigned char *)(v16 + 48) = v20 & 1;
    *(unsigned char *)(v16 + 49) = v14 & 1;
    *(unsigned char *)(v16 + 50) = v13 & 1;
    *(unsigned char *)(v16 + 51) = v12 & 1;
    *(unsigned char *)(v16 + 52) = v11 & 1;
    *(unsigned char *)(v16 + 53) = v10 & 1;
    *(void *)(v16 + 56) = v18;
    *(unsigned char *)(v16 + 64) = v19;
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1DC88D674();
}

uint64_t sub_1DCA5B92C()
{
  return sub_1DCB891F8();
}

void sub_1DCA5B9C4()
{
}

void sub_1DCA5B9DC()
{
}

uint64_t sub_1DCA5BA3C()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1DCB87908();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCA5BAE8(void *a1)
{
  uint64_t v3 = sub_1DCB87938();
  uint64_t v5 = v4;

  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl);
  *uint64_t v6 = v3;
  v6[1] = v5;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA5BB88()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1DCB87908();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCA5BC34(void *a1)
{
  uint64_t v3 = sub_1DCB87938();
  uint64_t v5 = v4;

  uint64_t v6 = v1 + OBJC_IVAR___SNAudioConfiguration_impl;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v5;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA5BCB4()
{
  return *(void *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 32);
}

uint64_t sub_1DCA5BCF0(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 32) = result;
  return result;
}

uint64_t sub_1DCA5BD24()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA5BDAC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA5BDF0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 48);
}

uint64_t sub_1DCA5BE2C(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 48) = result;
  return result;
}

uint64_t sub_1DCA5BE68()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 49);
}

uint64_t sub_1DCA5BEA4(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 49) = result;
  return result;
}

uint64_t sub_1DCA5BEE0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 50);
}

uint64_t sub_1DCA5BF1C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 51);
}

uint64_t sub_1DCA5BF58()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 52);
}

uint64_t sub_1DCA5BF94()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 53);
}

id sub_1DCA5BFC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (a3())
  {
    uint64_t v3 = (void *)sub_1DCB87C08();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

double sub_1DCA5C02C()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 64) & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNAudioConfiguration_impl + 56);
    sub_1DC87E988(qword_1EAAA6448);
    uint64_t v2 = swift_allocObject();
    *(void *)&double result = 1;
    *(_OWORD *)(v2 + 16) = xmmword_1DCBB93B0;
    *(void *)(v2 + 32) = v1;
  }
  return result;
}

id sub_1DCA5C090(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 49);
  char v8 = *(unsigned char *)(a1 + 50);
  char v9 = *(unsigned char *)(a1 + 51);
  char v10 = *(unsigned char *)(a1 + 52);
  char v11 = *(unsigned char *)(a1 + 53);
  uint64_t v12 = *(void *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 64);
  char v14 = &v3[OBJC_IVAR___SNAudioConfiguration_impl];
  *(_OWORD *)char v14 = *(_OWORD *)a1;
  *((void *)v14 + 2) = v4;
  *((void *)v14 + 3) = v5;
  *((_OWORD *)v14 + 2) = *(_OWORD *)(a1 + 32);
  v14[48] = v6;
  v14[49] = v7;
  v14[50] = v8;
  v14[51] = v9;
  v14[52] = v10;
  v14[53] = v11;
  *((void *)v14 + 7) = v12;
  v14[64] = v13;
  v16.receiver = v3;
  v16.super_class = v1;
  return objc_msgSendSuper2(&v16, sel_init);
}

id sub_1DCA5C138()
{
  swift_getObjectType();
  if (qword_1EAA9D260 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void *)algn_1EAAFFAA8;
  uint64_t v1 = qword_1EAAFFAB8;
  sub_1DC95AD94();
  uint64_t v3 = *(void *)(v2 + 56);
  LOBYTE(v2) = *(unsigned char *)(v2 + 64);
  v16[0] = v4;
  v16[1] = v0;
  id v16[2] = v5;
  v16[3] = v1;
  uint64_t v16[4] = v7;
  v16[5] = v6;
  char v17 = v8;
  char v18 = v9;
  char v19 = v10;
  char v20 = v11;
  char v21 = v12;
  char v22 = v13;
  uint64_t v23 = v3;
  char v24 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = sub_1DCA5C090((uint64_t)v16);
  swift_deallocPartialClassInstance();
  return v14;
}

uint64_t SNAudioConfiguration.description.getter()
{
  uint64_t v1 = v0;
  sub_1DCB88A98();
  uint64_t v2 = (void *)sub_1DCA5BA3C();
  type metadata accessor for Category(0);
  sub_1DCA5D65C();

  sub_1DCB87A18();
  uint64_t v3 = (void *)sub_1DCA5BB88();
  type metadata accessor for Mode(0);
  sub_1DCA5D65C();

  sub_1DC9311A4();
  uint64_t v4 = v1 + OBJC_IVAR___SNAudioConfiguration_impl;
  type metadata accessor for CategoryOptions(0);
  sub_1DCA5D65C();
  sub_1DC9311A4();
  sub_1DCA5D6D0();
  swift_bridgeObjectRelease();
  sub_1DC9311A4();
  sub_1DCA5D6E8(*(unsigned __int8 *)(v4 + 50));
  sub_1DCA5D6D0();
  swift_bridgeObjectRelease();
  sub_1DC9311A4();
  sub_1DCA5D6E8(*(unsigned __int8 *)(v4 + 51));
  sub_1DCA5D6D0();
  swift_bridgeObjectRelease();
  sub_1DC9311A4();
  sub_1DCA5D6E8(*(unsigned __int8 *)(v4 + 52));
  sub_1DCA5D6D0();
  swift_bridgeObjectRelease();
  sub_1DC9311A4();
  sub_1DCA5D6E8(*(unsigned __int8 *)(v4 + 53));
  sub_1DCA5D6D0();
  swift_bridgeObjectRelease();
  sub_1DCA5D70C();
  sub_1DCA5C02C();
  sub_1DC87E988((uint64_t *)&unk_1EAAA63F0);
  sub_1DCB87988();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCA5D70C();
  sub_1DCA5D6E8(*(unsigned __int8 *)(v4 + 48));
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  if (*(void *)(v4 + 40))
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    MEMORY[0x1E01A6C50](v5, MEMORY[0x1E4FBB550]);
    swift_bridgeObjectRelease();
  }
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return 0;
}

id SNAudioConfiguration.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = v1 + OBJC_IVAR___SNAudioConfiguration_impl;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 8);
  uint64_t v6 = *(void *)(v4 + 24);
  sub_1DC95AD94();
  uint64_t v8 = *(void *)(v7 + 56);
  LOBYTE(v7) = *(unsigned char *)(v7 + 64);
  v20[0] = v9;
  v20[1] = v5;
  uint64_t v20[2] = v10;
  v20[3] = v6;
  v20[4] = v12;
  v20[5] = v11;
  char v21 = v13;
  char v22 = v14;
  char v23 = v15;
  char v24 = v16;
  char v25 = v17;
  char v26 = v18;
  uint64_t v27 = v8;
  char v28 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id result = sub_1DCA5C090((uint64_t)v20);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNAudioConfiguration.hash.getter()
{
  sub_1DC95AD94();
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  AudioConfiguration.hash(into:)();
  uint64_t v0 = sub_1DCB891F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SNAudioConfiguration.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v50);
  if (v51)
  {
    sub_1DC87E9CC(&v50, v49);
    sub_1DC87E9DC((uint64_t)v49, (uint64_t)&v37);
    if (swift_dynamicCast())
    {
      uint64_t v3 = (void *)v25;
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 16);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 24);
      char v6 = *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 48);
      char v7 = *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 49);
      char v8 = *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 50);
      char v9 = *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 51);
      char v10 = *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 52);
      char v11 = *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 53);
      uint64_t v12 = *(void *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 56);
      char v13 = *(unsigned char *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 64);
      long long v37 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl);
      uint64_t v38 = v4;
      uint64_t v39 = v5;
      long long v40 = *(_OWORD *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl + 32);
      char v41 = v6;
      char v42 = v7;
      char v43 = v8;
      char v44 = v9;
      char v45 = v10;
      char v46 = v11;
      uint64_t v47 = v12;
      char v48 = v13;
      uint64_t v14 = v25 + OBJC_IVAR___SNAudioConfiguration_impl;
      uint64_t v15 = *(void *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 16);
      uint64_t v16 = *(void *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 24);
      LOBYTE(v5) = *(unsigned char *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 48);
      char v17 = *(unsigned char *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 49);
      char v18 = *(unsigned char *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 50);
      char v19 = *(unsigned char *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 51);
      char v20 = *(unsigned char *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 52);
      char v21 = *(unsigned char *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 53);
      uint64_t v22 = *(void *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 56);
      LOBYTE(v12) = *(unsigned char *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl + 64);
      long long v25 = *(_OWORD *)(v25 + OBJC_IVAR___SNAudioConfiguration_impl);
      uint64_t v26 = v15;
      uint64_t v27 = v16;
      long long v28 = *(_OWORD *)(v14 + 32);
      char v29 = v5;
      char v30 = v17;
      char v31 = v18;
      char v32 = v19;
      char v33 = v20;
      char v34 = v21;
      uint64_t v35 = v22;
      char v36 = v12;
      char v23 = static AudioConfiguration.== infix(_:_:)((uint64_t)&v37, (uint64_t)&v25);
    }
    else
    {
      char v23 = 0;
    }
    sub_1DC8818D0((uint64_t)v49);
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

id SNAudioConfiguration.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNAudioConfiguration.init(coder:)(a1);
}

id SNAudioConfiguration.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87DC60();
  swift_getObjectType();

  id v4 = sub_1DCA5C090((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNAudioConfiguration.encode(with:)(NSCoder with)
{
  memcpy(__dst, (const void *)(v1 + OBJC_IVAR___SNAudioConfiguration_impl), 0x41uLL);
  sub_1DC882264((uint64_t)__dst);
  sub_1DC87BD50(__dst, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1DC88CABC((uint64_t)__dst);
}

uint64_t static SNAudioConfiguration.supportsSecureCoding.getter()
{
  return 1;
}

id SNAudioConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1DCA5CD08()
{
  v3[0] = sub_1DCB87938();
  v3[1] = v0;
  v3[2] = sub_1DCB87938();
  v3[3] = v1;
  long long v4 = xmmword_1DCBD1540;
  __int16 v5 = 0;
  int v6 = 16843009;
  uint64_t v7 = 2;
  char v8 = 0;
  return sub_1DCA5C090((uint64_t)v3);
}

unint64_t sub_1DCA5CDC8()
{
  unint64_t result = qword_1EAAA6378;
  if (!qword_1EAAA6378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6378);
  }
  return result;
}

unint64_t sub_1DCA5CE14()
{
  unint64_t result = qword_1EAAA63B0;
  if (!qword_1EAAA63B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA63B0);
  }
  return result;
}

unint64_t sub_1DCA5CE60()
{
  unint64_t result = qword_1EAAA63E0;
  if (!qword_1EAAA63E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA63E0);
  }
  return result;
}

unint64_t sub_1DCA5CEB0()
{
  unint64_t result = qword_1EAAA6400;
  if (!qword_1EAAA6400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6400);
  }
  return result;
}

unint64_t sub_1DCA5CF00()
{
  unint64_t result = qword_1EAAA6408;
  if (!qword_1EAAA6408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6408);
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioSessionAudioHardwareControlFlags()
{
  return &type metadata for AudioSessionAudioHardwareControlFlags;
}

uint64_t destroy for AudioConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  return a1;
}

void *initializeWithTake for AudioConfiguration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t assignWithTake for AudioConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioConfiguration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioConfiguration()
{
  return &type metadata for AudioConfiguration;
}

uint64_t type metadata accessor for SNAudioConfiguration()
{
  return self;
}

uint64_t method lookup function for SNAudioConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNAudioConfiguration);
}

unsigned char *storeEnumTagSinglePayload for AudioConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA5D334);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioConfiguration.CodingKeys()
{
  return &type metadata for AudioConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AudioSessionAudioHardwareControlFlags.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA5D408);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioSessionAudioHardwareControlFlags.CodingKeys()
{
  return &type metadata for AudioSessionAudioHardwareControlFlags.CodingKeys;
}

unint64_t sub_1DCA5D444()
{
  unint64_t result = qword_1EAAA6418;
  if (!qword_1EAAA6418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6418);
  }
  return result;
}

unint64_t sub_1DCA5D494()
{
  unint64_t result = qword_1EAAA6420;
  if (!qword_1EAAA6420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6420);
  }
  return result;
}

unint64_t sub_1DCA5D4E4()
{
  unint64_t result = qword_1EAAA6428;
  if (!qword_1EAAA6428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6428);
  }
  return result;
}

unint64_t sub_1DCA5D534()
{
  unint64_t result = qword_1EAAA6430;
  if (!qword_1EAAA6430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6430);
  }
  return result;
}

unint64_t sub_1DCA5D584()
{
  unint64_t result = qword_1EAAA6438;
  if (!qword_1EAAA6438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6438);
  }
  return result;
}

unint64_t sub_1DCA5D5D4()
{
  unint64_t result = qword_1EAAA6440;
  if (!qword_1EAAA6440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6440);
  }
  return result;
}

uint64_t sub_1DCA5D620@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_1DCB88DB8();
}

uint64_t sub_1DCA5D644()
{
  return v0;
}

uint64_t sub_1DCA5D65C()
{
  return sub_1DCB88C08();
}

void sub_1DCA5D67C(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
}

uint64_t sub_1DCA5D688@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = v2;
  a2[1] = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA5D690()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DCA5D6B8()
{
  return sub_1DCB88ED8();
}

uint64_t sub_1DCA5D6D0()
{
  return sub_1DCB87A18();
}

uint64_t sub_1DCA5D6E8@<X0>(int a1@<W8>)
{
  if (a1) {
    return v1;
  }
  else {
    return v2;
  }
}

uint64_t sub_1DCA5D6F4()
{
  return v0;
}

uint64_t sub_1DCA5D70C()
{
  return sub_1DCB87A18();
}

uint64_t sub_1DCA5D730()
{
  return v0;
}

uint64_t sub_1DCA5D744()
{
  return v0;
}

uint64_t sub_1DCA5D758()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCA5D800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1DCA5D838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC88D538();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 32);
  uint64_t v12 = *(void *)(v10 + 40);
  long long v16 = *(_OWORD *)(v10 + 16);
  long long v17 = v16;
  uint64_t v18 = v11;
  uint64_t v19 = v13;
  uint64_t v20 = v12;
  uint64_t v21 = v14;
  type metadata accessor for ExpandResult.Inner();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, a3);
  *(void *)&long long v17 = sub_1DCA5D960((uint64_t)v9);
  swift_getWitnessTable();
  sub_1DCB87518();
  return swift_release();
}

uint64_t sub_1DCA5D960(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DCA5DA7C(a1);
  return v2;
}

uint64_t sub_1DCA5D9A0(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DC8BA1CC(a1, v2 + 16);
  return v2;
}

uint64_t sub_1DCA5D9E4()
{
  sub_1DC881A8C((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1DCB871C8();
}

uint64_t sub_1DCA5DA20()
{
  sub_1DC8818D0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA5DA58()
{
  return sub_1DCA5D9E4();
}

uint64_t *sub_1DCA5DA7C(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 104) - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 128), a1);
  swift_weakAssign();
  *((unsigned char *)v1 + *(void *)(*v1 + 144)) = 0;
  return v1;
}

uint64_t sub_1DCA5DB5C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 120);
  long long v6 = *(_OWORD *)(*v2 + 80);
  uint64_t v12 = *(void *)(*v2 + 96);
  long long v10 = *(_OWORD *)(v4 + 104);
  long long v11 = v6;
  long long v13 = v10;
  uint64_t v14 = v5;
  uint64_t v7 = type metadata accessor for ExpandResult.Inner.WrappedSubscription();
  sub_1DC8B9960(a1, (uint64_t)&v11);
  uint64_t v8 = sub_1DCA5D9A0(&v11);
  swift_weakAssign();
  *(void *)&long long v13 = v7;
  *((void *)&v13 + 1) = swift_getWitnessTable();
  *(void *)&long long v11 = v8;
  swift_retain();
  sub_1DCB871A8();
  swift_release();
  return sub_1DC8818D0((uint64_t)&v11);
}

uint64_t sub_1DCA5DCBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = *v1;
  uint64_t v3 = v33;
  uint64_t v34 = a1;
  uint64_t v4 = *(void *)(v33 + 96);
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1DCB871D8();
  sub_1DC88D538();
  uint64_t v32 = v6;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v31 - v8;
  sub_1DC88D538();
  uint64_t v31 = v10;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v31 - v12;
  uint64_t v14 = *(void *)(v3 + 88);
  sub_1DC88D538();
  uint64_t v16 = v15;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = sub_1DCB89268();
  sub_1DC88D538();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v21);
  char v23 = (char *)&v31 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))((char *)&v31 - v22, v34, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = v32;
    uint64_t v26 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v13, v23, v4);
    sub_1DCA5E788();
    uint64_t v28 = *(void *)(v27 + 144);
    if ((*((unsigned char *)v2 + v28) & 1) == 0)
    {
      *((unsigned char *)v2 + v28) = 1;
      sub_1DCA5E788();
      if (swift_weakLoadStrong())
      {
        sub_1DCA5D9E4();
        swift_release();
      }
      sub_1DCA5E788();
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v9, v13, v4);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 0, 1, v4);
      sub_1DCB87198();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v5);
    }
    uint64_t v29 = sub_1DCB87208();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v23, v14);
    sub_1DCA5E788();
    uint64_t v29 = sub_1DCB871B8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
  }
  return v29;
}

uint64_t sub_1DCA5E06C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  if ((*(unsigned char *)(v0 + v1) & 1) == 0)
  {
    *(unsigned char *)(v0 + v1) = 1;
    return sub_1DCB87198();
  }
  return result;
}

uint64_t sub_1DCA5E0FC()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 104) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 128));
  swift_weakDestroy();
  return v0;
}

uint64_t sub_1DCA5E188()
{
  sub_1DCA5E0FC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExpandResult.Inner()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCA5E1F8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ExpandResult.Inner.WrappedSubscription()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCA5E254()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCA5E2E4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1DCA5E430(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DCA5E634);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for ExpandResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCA5E674()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DCA5E694(uint64_t a1)
{
  return sub_1DCA5DB5C(a1);
}

uint64_t sub_1DCA5E6B8(uint64_t a1)
{
  return sub_1DCA5DCBC(a1);
}

uint64_t sub_1DCA5E6DC()
{
  return sub_1DCA5E06C();
}

uint64_t sub_1DCA5E700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCA5D838(a1, a4, a2);
}

uint64_t sub_1DCA5E714()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCA5E730()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCA5E74C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCA5E768()
{
  return swift_getAssociatedConformanceWitness();
}

double SNSpeechEmotionResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNSpeechEmotionResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double SNSpeechEmotionResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNSpeechEmotionResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

double (*SNSpeechEmotionResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNSpeechEmotionResult.timeRange.getter((uint64_t)v3);
  return sub_1DCA5E918;
}

double sub_1DCA5E918(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNSpeechEmotionResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double SNSpeechEmotionResult.confidence.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 48);
}

void SNSpeechEmotionResult.confidence.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 48) = a1;
}

double (*SNSpeechEmotionResult.confidence.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 48);
  return sub_1DC8FA1F4;
}

double SNSpeechEmotionResult.mood.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 56);
}

void SNSpeechEmotionResult.mood.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 56) = a1;
}

double (*SNSpeechEmotionResult.mood.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 56);
  return sub_1DC9B0900;
}

double SNSpeechEmotionResult.valence.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 64);
}

void SNSpeechEmotionResult.valence.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 64) = a1;
}

double (*SNSpeechEmotionResult.valence.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 64);
  return sub_1DCA5EB4C;
}

double sub_1DCA5EB4C(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + *(void *)(a1 + 16) + 64) = *(void *)a1;
  return result;
}

double SNSpeechEmotionResult.arousal.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 72);
}

void SNSpeechEmotionResult.arousal.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 72) = a1;
}

double (*SNSpeechEmotionResult.arousal.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 72);
  return sub_1DCA5EC08;
}

double sub_1DCA5EC08(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + *(void *)(a1 + 16) + 72) = *(void *)a1;
  return result;
}

double SNSpeechEmotionResult.dominance.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 80);
}

void SNSpeechEmotionResult.dominance.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 80) = a1;
}

double (*SNSpeechEmotionResult.dominance.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNSpeechEmotionResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 80);
  return sub_1DCA5ECC4;
}

double sub_1DCA5ECC4(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + *(void *)(a1 + 16) + 80) = *(void *)a1;
  return result;
}

uint64_t SNSpeechEmotionResult.modelIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SNSpeechEmotionResult.modelIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR___SNSpeechEmotionResult_impl;
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA5EDEC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return SNSpeechEmotionResult.modelIdentifier.setter(v1, v2);
}

uint64_t (*SNSpeechEmotionResult.modelIdentifier.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 96);
  *a1 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 88);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1DCA5EE88;
}

uint64_t sub_1DCA5EE88(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return SNSpeechEmotionResult.modelIdentifier.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  SNSpeechEmotionResult.modelIdentifier.setter(v3, v2);

  return swift_bridgeObjectRelease();
}

id sub_1DCA5EEFC()
{
  swift_getObjectType();
  sub_1DCA60528(MEMORY[0x1E4F1FA20]);
  *(void *)(v2 + 40) = v1;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0xE000000000000000;
  v5.receiver = v0;
  v5.super_class = v3;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1DCA5EF8C(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  double v9 = sub_1DCA60528(MEMORY[0x1E4F1FA20]);
  *(void *)(v11 + 40) = v10;
  *(void *)(v11 + 48) = 0;
  *(double *)(v11 + 56) = a1;
  *(double *)(v11 + 64) = a2;
  *(double *)(v11 + 72) = a3;
  *(double *)(v11 + 80) = a4;
  *(void *)(v11 + 88) = 0;
  *(void *)(v11 + 96) = 0xE000000000000000;
  v14.receiver = v4;
  v14.super_class = v12;
  return objc_msgSendSuper2(&v14, sel_init, v9);
}

id sub_1DCA5F038(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  size_t v8 = &v3[OBJC_IVAR___SNSpeechEmotionResult_impl];
  *(void *)size_t v8 = *(void *)a1;
  *((void *)v8 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v8 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v8 + 4) = *(void *)(a1 + 32);
  *((void *)v8 + 5) = v4;
  long long v9 = *(_OWORD *)(a1 + 64);
  *((_OWORD *)v8 + 3) = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v8 + 4) = v9;
  *((void *)v8 + 10) = v5;
  *((void *)v8 + 11) = v6;
  *((void *)v8 + 12) = v7;
  v11.receiver = v3;
  v11.super_class = v1;
  return objc_msgSendSuper2(&v11, sel_init);
}

id SNSpeechEmotionResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  double v4 = sub_1DCA60598(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl);
  uint64_t v7 = *(void *)(v5 + 88);
  uint64_t v6 = *(void *)(v5 + 96);
  v12[0] = v8;
  v12[1] = *(void *)(v5 + 8);
  long long v13 = *(_OWORD *)(v5 + 16);
  uint64_t v14 = *(void *)(v5 + 32);
  uint64_t v15 = v9;
  long long v10 = *(_OWORD *)(v5 + 64);
  long long v16 = *(_OWORD *)(v5 + 48);
  long long v17 = v10;
  double v18 = v4;
  uint64_t v19 = v7;
  uint64_t v20 = v6;
  swift_bridgeObjectRetain();
  id result = sub_1DCA5F038((uint64_t)v12);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNSpeechEmotionResult.hash.getter()
{
  sub_1DCA60598(v0 + OBJC_IVAR___SNSpeechEmotionResult_impl);
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DCB37794();
  uint64_t v1 = sub_1DCB891F8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t SNSpeechEmotionResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v34);
  if (v35)
  {
    sub_1DC87E9CC(&v34, v33);
    sub_1DC87E9DC((uint64_t)v33, (uint64_t)v25);
    if (swift_dynamicCast())
    {
      float64_t v3 = v17[0].f64[0];
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 40);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 80);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 88);
      uint64_t v7 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 96);
      v25[0] = *(float64x2_t *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl);
      v25[1] = *(float64x2_t *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 16);
      uint64_t v26 = *(void *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 32);
      uint64_t v27 = v4;
      long long v8 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 64);
      long long v28 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechEmotionResult_impl + 48);
      long long v29 = v8;
      uint64_t v30 = v5;
      uint64_t v31 = v6;
      uint64_t v32 = v7;
      double v9 = sub_1DCA60598(*(void *)&v17[0].f64[0] + OBJC_IVAR___SNSpeechEmotionResult_impl);
      uint64_t v11 = *(void *)(v10 + 88);
      uint64_t v12 = *(void *)(v10 + 96);
      v17[0].f64[0] = v13;
      v17[0].f64[1] = *(float64_t *)(v10 + 8);
      v17[1] = *(float64x2_t *)(v10 + 16);
      uint64_t v18 = *(void *)(v10 + 32);
      uint64_t v19 = v14;
      long long v20 = *(_OWORD *)(v10 + 48);
      long long v21 = *(_OWORD *)(v10 + 64);
      double v22 = v9;
      uint64_t v23 = v11;
      uint64_t v24 = v12;
      char v15 = sub_1DCB378BC(v25, v17);
    }
    else
    {
      char v15 = 0;
    }
    sub_1DC8818D0((uint64_t)v33);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

id SNSpeechEmotionResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNSpeechEmotionResult.init(coder:)(a1);
}

id SNSpeechEmotionResult.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
  uint64_t v5 = v2;
  uint64_t v6 = sub_1DCB88658();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    long long v8 = (void *)sub_1DCB87908();
    objc_msgSend(a1, sel_decodeDoubleForKey_, v8);
    uint64_t v10 = v9;

    uint64_t v11 = sub_1DCA605A8();
    sub_1DCA60508(v11);
    uint64_t v13 = v12;

    uint64_t v14 = sub_1DCA60574();
    sub_1DCA60508(v14);
    uint64_t v16 = v15;

    uint64_t v17 = sub_1DCA6054C();
    sub_1DCA60508(v17);
    uint64_t v19 = v18;

    uint64_t v20 = sub_1DC9214D8();
    sub_1DCA60508(v20);
    uint64_t v22 = v21;

    sub_1DC89C89C(0, &qword_1EAAA01C8);
    uint64_t v23 = (void *)sub_1DCB88658();
    if (v23)
    {
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1DCB87928();
    }
    objc_msgSend(v7, sel_CMTimeRangeValue);
    uint64_t v25 = v33;
    uint64_t v26 = v37;
    uint64_t v27 = v34;
    uint64_t v28 = v36;
    long long v31 = v35;

    long long v29 = &v5[OBJC_IVAR___SNSpeechEmotionResult_impl];
    *(void *)long long v29 = v25;
    *((void *)v29 + 1) = v27;
    *((_OWORD *)v29 + 1) = v31;
    *((void *)v29 + 4) = v28;
    *((void *)v29 + 5) = v26;
    *((void *)v29 + 6) = v22;
    *((void *)v29 + 7) = v10;
    *((void *)v29 + 8) = v13;
    *((void *)v29 + 9) = v16;
    *((void *)v29 + 10) = v19;
    *((void *)v29 + 11) = 0;
    *((void *)v29 + 12) = 0xE000000000000000;

    v32.receiver = v5;
    v32.super_class = ObjectType;
    id v24 = objc_msgSendSuper2(&v32, sel_init);
  }
  else
  {

    sub_1DC9214CC();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v24;
}

Swift::Void __swiftcall SNSpeechEmotionResult.encode(with:)(NSCoder with)
{
  SNSpeechEmotionResult.timeRange.getter((uint64_t)v17);
  uint64_t v2 = v17[0];
  uint64_t v3 = v17[2];
  uint64_t v4 = v17[3];
  uint64_t v5 = v17[5];
  uint64_t v6 = self;
  v16[0] = v2;
  v16[1] = v17[1];
  id v16[2] = v3;
  v16[3] = v4;
  uint64_t v16[4] = v17[4];
  v16[5] = v5;
  id v7 = objc_msgSend(v6, sel_valueWithCMTimeRange_, v16);
  long long v8 = (void *)sub_1DCB87908();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  uint64_t v9 = (void *)sub_1DCB87908();
  sub_1DCA604E8();

  uint64_t v10 = (void *)sub_1DCA605A8();
  sub_1DCA604E8();

  uint64_t v11 = (void *)sub_1DCA60574();
  sub_1DCA604E8();

  uint64_t v12 = (void *)sub_1DCA6054C();
  sub_1DCA604E8();

  uint64_t v13 = (void *)sub_1DC9214D8();
  sub_1DCA604E8();

  swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_1DCB87908();
  [(objc_class *)with.super.isa encodeObject:v14 forKey:v15];
}

uint64_t static SNSpeechEmotionResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSpeechEmotionResult.description.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1DCB88A98();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DC95CAA4();
  sub_1DCA605CC();
  sub_1DCB87A18();
  sub_1DC95CAA4();
  sub_1DCA605CC();
  sub_1DCB87A18();
  sub_1DC95CAA4();
  sub_1DCA605CC();
  sub_1DCB87A18();
  sub_1DC95CAA4();
  sub_1DCA605CC();
  sub_1DCB87A18();
  sub_1DC95CAA4();
  sub_1DCA605CC();
  sub_1DCB87A18();
  SNSpeechEmotionResult.timeRange.getter((uint64_t)&v15);
  uint64_t v3 = v15;
  uint64_t v4 = v17;
  uint64_t v5 = v18;
  uint64_t v6 = v20;
  id v7 = self;
  v11[0] = v3;
  v11[1] = v16;
  void v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  id v9 = objc_msgSend(v8, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  swift_bridgeObjectRetain();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v13;
}

id sub_1DCA5FC44()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = sub_1DC9214CC();
  return sub_1DCA5FC84(v2, v3);
}

id sub_1DCA5FC84(uint64_t a1, unint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAAA0230);
  uint64_t v6 = v2;
  uint64_t v7 = sub_1DCB884B8();
  unint64_t v14 = (void *)v7;
  if (v7)
  {
    uint64_t v15 = v7 + OBJC_IVAR___SNSpeechEmotionResult_impl;
    uint64_t v16 = *(void *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl);
    uint64_t v18 = *(void *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 16);
    uint64_t v17 = *(void *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 24);
    uint64_t v30 = *(void *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 40);
    long long v28 = *(_OWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 64);
    long long v29 = *(_OWORD *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 48);
    uint64_t v19 = *(void *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 80);
    uint64_t v20 = *(void *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 96);
    uint64_t v27 = *(void *)(v7 + OBJC_IVAR___SNSpeechEmotionResult_impl + 88);
    swift_bridgeObjectRetain();
    uint64_t v21 = *(void *)(v15 + 8);
    uint64_t v22 = *(void *)(v15 + 32);

    uint64_t v23 = &v6[OBJC_IVAR___SNSpeechEmotionResult_impl];
    *(void *)uint64_t v23 = v16;
    *((void *)v23 + 1) = v21;
    *((void *)v23 + 2) = v18;
    *((void *)v23 + 3) = v17;
    *((void *)v23 + 4) = v22;
    *((void *)v23 + 5) = v30;
    *((_OWORD *)v23 + 3) = v29;
    *((_OWORD *)v23 + 4) = v28;
    *((void *)v23 + 10) = v19;
    *((void *)v23 + 11) = v27;
    *((void *)v23 + 12) = v20;
  }
  else
  {
    sub_1DCA60378();
    uint64_t v26 = (void *)swift_allocError();
    swift_willThrow();
    sub_1DCAC5F78(0xD000000000000046, 0x80000001DCB97990);
    uint64_t v8 = MEMORY[0x1E4F1FA20];
    uint64_t v9 = *MEMORY[0x1E4F1FA20];
    uint64_t v10 = *(void *)(MEMORY[0x1E4F1FA20] + 16);
    uint64_t v11 = *(void *)(MEMORY[0x1E4F1FA20] + 24);
    uint64_t v12 = *(void *)(MEMORY[0x1E4F1FA20] + 40);

    uint64_t v13 = &v6[OBJC_IVAR___SNSpeechEmotionResult_impl];
    *(void *)uint64_t v13 = v9;
    *((void *)v13 + 1) = *(void *)(v8 + 8);
    *((void *)v13 + 2) = v10;
    *((void *)v13 + 3) = v11;
    *((void *)v13 + 4) = *(void *)(v8 + 32);
    *((void *)v13 + 5) = v12;
    *((_OWORD *)v13 + 3) = 0u;
    *((_OWORD *)v13 + 4) = 0u;
    *((_OWORD *)v13 + 5) = 0u;
    *((void *)v13 + 12) = 0xE000000000000000;
  }

  v31.receiver = v6;
  v31.super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v31, sel_init);
  sub_1DC881920(a1, a2);
  return v24;
}

uint64_t sub_1DCA5FEE4()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v1 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v7);
  id v2 = v7[0];
  if (v1)
  {
    uint64_t v3 = sub_1DCB86AD8();
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = (void *)sub_1DCB86898();

    swift_willThrow();
    sub_1DCAC5F78(0xD000000000000042, 0x80000001DCB979E0);

    return 0;
  }
  return v3;
}

id SNSpeechEmotionResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DCA60138@<D0>(uint64_t a1@<X8>)
{
  return SNSpeechEmotionResult.timeRange.getter(a1);
}

double sub_1DCA6015C(uint64_t a1)
{
  return SNSpeechEmotionResult.timeRange.setter(a1);
}

void sub_1DCA60180()
{
  sub_1DC89D5C0();
  double *v0 = SNSpeechEmotionResult.confidence.getter();
}

void sub_1DCA601A8(uint64_t a1)
{
  double v1 = sub_1DCA605D8(a1);
  SNSpeechEmotionResult.confidence.setter(v1);
}

void sub_1DCA601CC()
{
  sub_1DC89D5C0();
  double *v0 = SNSpeechEmotionResult.mood.getter();
}

void sub_1DCA601F4(uint64_t a1)
{
  double v1 = sub_1DCA605D8(a1);
  SNSpeechEmotionResult.mood.setter(v1);
}

void sub_1DCA60218()
{
  sub_1DC89D5C0();
  double *v0 = SNSpeechEmotionResult.valence.getter();
}

void sub_1DCA60240(uint64_t a1)
{
  double v1 = sub_1DCA605D8(a1);
  SNSpeechEmotionResult.valence.setter(v1);
}

void sub_1DCA60264()
{
  sub_1DC89D5C0();
  double *v0 = SNSpeechEmotionResult.arousal.getter();
}

void sub_1DCA6028C(uint64_t a1)
{
  double v1 = sub_1DCA605D8(a1);
  SNSpeechEmotionResult.arousal.setter(v1);
}

void sub_1DCA602B0()
{
  sub_1DC89D5C0();
  double *v0 = SNSpeechEmotionResult.dominance.getter();
}

void sub_1DCA602D8(uint64_t a1)
{
  double v1 = sub_1DCA605D8(a1);
  SNSpeechEmotionResult.dominance.setter(v1);
}

uint64_t sub_1DCA602FC()
{
  sub_1DC89D5C0();
  uint64_t result = SNSpeechEmotionResult.modelIdentifier.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t type metadata accessor for SNSpeechEmotionResult()
{
  return self;
}

uint64_t method lookup function for SNSpeechEmotionResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNSpeechEmotionResult);
}

uint64_t dispatch thunk of SNSpeechEmotionResult.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_1DCA60378()
{
  unint64_t result = qword_1EAAA65E0;
  if (!qword_1EAAA65E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA65E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNSpeechEmotionResult.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA60460);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNSpeechEmotionResult.DomainError()
{
  return &type metadata for SNSpeechEmotionResult.DomainError;
}

unint64_t sub_1DCA6049C()
{
  unint64_t result = qword_1EAAA65E8;
  if (!qword_1EAAA65E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA65E8);
  }
  return result;
}

id sub_1DCA604E8()
{
  return objc_msgSend(v0, (SEL)(v2 + 1048), v1, v4);
}

id sub_1DCA60508(uint64_t a1)
{
  return objc_msgSend(v1, (SEL)(v2 + 408), a1);
}

double sub_1DCA60528@<D0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v3 + v2;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v4 + 32) = result;
  return result;
}

uint64_t sub_1DCA6054C()
{
  return sub_1DCB87908();
}

uint64_t sub_1DCA60574()
{
  return sub_1DCB87908();
}

double sub_1DCA60598@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 80);
}

uint64_t sub_1DCA605A8()
{
  return sub_1DCB87908();
}

uint64_t sub_1DCA605CC()
{
  return 8251;
}

double sub_1DCA605D8(uint64_t a1)
{
  return *(double *)a1;
}

ValueMetadata *type metadata accessor for CredentialManager()
{
  return &type metadata for CredentialManager;
}

uint64_t sub_1DCA605F4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  uint64_t v3 = a1[4];
  sub_1DC881A8C(a1, (uint64_t)v2);
  (*(void (**)(long long *__return_ptr, void *, uint64_t))(v3 + 8))(v9, v2, v3);
  if (v10)
  {
    void v11[6] = *(void *)&v9[0];
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1DC8BA1CC(v9, (uint64_t)v11);
    sub_1DC881A8C(v11, v11[3]);
    sub_1DCB3DF60();
    if (!v1)
    {
      uint64_t v5 = v4;
      sub_1DC8B9960((uint64_t)v11, (uint64_t)v9);
      uint64_t v6 = swift_allocObject();
      sub_1DC8BA1CC(v9, v6 + 16);
      *(void *)(v6 + 56) = v5;
      sub_1DC8B9960((uint64_t)v11, (uint64_t)v9);
      uint64_t v7 = swift_allocObject();
      sub_1DC8BA1CC(v9, v7 + 16);
      *(void *)(v7 + 56) = v5;
      sub_1DC87E988(&qword_1EAAA65F0);
      uint64_t v2 = (void *)swift_allocObject();
      v2[2] = sub_1DCA60800;
      v2[3] = v6;
      v2[4] = sub_1DCA60868;
      v2[5] = v7;
      swift_bridgeObjectRetain();
    }
    sub_1DC8818D0((uint64_t)v11);
    return (uint64_t)v2;
  }
  return result;
}

void sub_1DCA607AC(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB3E8C4();
  if (!v2) {
    *a2 = v4;
  }
}

void sub_1DCA60800(unsigned char *a1@<X8>)
{
  sub_1DCA607AC((void *)(v1 + 16), a1);
}

void sub_1DCA60820(void *a1)
{
}

void sub_1DCA60868()
{
  sub_1DCA60820((void *)(v0 + 16));
}

uint8_t *sub_1DCA60888()
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DCB86FE8();
  sub_1DC89F57C(v1, (uint64_t)qword_1EAAFF810);
  uint64_t v2 = sub_1DCB86FC8();
  os_log_type_t v3 = sub_1DCB88488();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v4 = 0;
    _os_log_impl(&dword_1DC873000, v2, v3, "Starting conclave...", v4, 2u);
    sub_1DCA60C68();
  }

  type metadata accessor for SoundAnalysisService.Service();
  sub_1DCA60C18();
  sub_1DCB87768();
  if (v0)
  {
    id v5 = v0;
    uint64_t v6 = (uint8_t *)sub_1DC87E988(&qword_1EAA9DF60);
    type metadata accessor for TransportError(0);
    if (swift_dynamicCast())
    {
      uint64_t v7 = sub_1DCB86FC8();
      os_log_type_t v8 = sub_1DCB88468();
      uint64_t v6 = (uint8_t *)v8;
      if (!os_log_type_enabled(v7, v8))
      {
LABEL_16:

        swift_willThrow();
        return v6;
      }
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109120;
      sub_1DCB88778();
      _os_log_impl(&dword_1DC873000, v7, (os_log_type_t)v6, "Conclave.service failed with tb_error_t = %u", v9, 8u);
      char v10 = v9;
    }
    else
    {
      id v14 = v0;
      id v15 = v0;
      uint64_t v7 = sub_1DCB86FC8();
      os_log_type_t v16 = sub_1DCB88468();
      if (!os_log_type_enabled(v7, v16))
      {

        goto LABEL_16;
      }
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      id v18 = v0;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_1DCB88778();
      *uint64_t v17 = v21;

      _os_log_impl(&dword_1DC873000, v7, v16, "Conclave.service failed: %@", v6, 0xCu);
      sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
      swift_arrayDestroy();
      sub_1DCA60C68();
      char v10 = v6;
    }
    MEMORY[0x1E01A99C0](v10, -1, -1);
    goto LABEL_16;
  }
  uint64_t v6 = v20;
  uint64_t v11 = sub_1DCB86FC8();
  os_log_type_t v12 = sub_1DCB88488();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1DC873000, v11, v12, "Created SoundAnalysis Tightbeam client", v13, 2u);
    sub_1DCA60C68();
  }

  return v6;
}

unint64_t sub_1DCA60C18()
{
  unint64_t result = qword_1EAAA65F8;
  if (!qword_1EAAA65F8)
  {
    type metadata accessor for SoundAnalysisService.Service();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA65F8);
  }
  return result;
}

void sub_1DCA60C68()
{
  JUMPOUT(0x1E01A99C0);
}

_OWORD *sub_1DCA60C84@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DC8B9F3C(a1, (uint64_t)&v6, &qword_1EAA9CAB0);
  if (v7) {
    return sub_1DC87E9CC(&v6, a2);
  }
  sub_1DC901A64((uint64_t)&v6, &qword_1EAA9CAB0);
  sub_1DC884E74();
  uint64_t v4 = sub_1DC883884();
  return (_OWORD *)sub_1DC981FC0(v4, v5);
}

uint64_t sub_1DCA60D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC8B9F3C(a1, (uint64_t)&v5, &qword_1EAAA6640);
  if (v6) {
    return sub_1DC8BA1CC(&v5, a2);
  }
  sub_1DC901A64((uint64_t)&v5, &qword_1EAAA6640);
  sub_1DC884E74();
  swift_allocError();
  *uint64_t v4 = 0;
  return swift_willThrow();
}

uint64_t sub_1DCA60D98()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1DCB891B8();
  sub_1DCB891C8();
  if (v1 != 1) {
    sub_1DCB891B8();
  }
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  return sub_1DCB891E8();
}

BOOL sub_1DCA60E40(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  float v2 = *(float *)(a1 + 20);
  char v3 = *(unsigned char *)(a2 + 16);
  float v4 = *(float *)(a2 + 20);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v2 != v4) {
      char v3 = 0;
    }
    if (v3) {
      return *(void *)(a1 + 24) == *(void *)(a2 + 24)
    }
          && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
          && *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36)
          && *(void *)(a1 + 40) == *(void *)(a2 + 40);
    return 0;
  }
  if (*(unsigned char *)(a2 + 16)) {
    return 0;
  }
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8) || v2 != v4) {
    return 0;
  }
  return *(void *)(a1 + 24) == *(void *)(a2 + 24)
      && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
      && *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36)
      && *(void *)(a1 + 40) == *(void *)(a2 + 40);
}

uint64_t sub_1DCA60EC4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB97C00 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
    if (v5 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x4670616C7265766FLL && a2 == 0xED0000726F746361;
      if (v6 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7544776F646E6977 && a2 == 0xEE006E6F69746172)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_1DCA610B8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      unint64_t result = 0x4670616C7265766FLL;
      break;
    case 3:
      unint64_t result = 0x7544776F646E6977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCA61168(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA6668);
  sub_1DC88D538();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  uint64_t v10 = v1[1];
  int v22 = *((unsigned __int8 *)v1 + 16);
  uint64_t v17 = v1[3];
  uint64_t v18 = v10;
  uint64_t v12 = v1[4];
  uint64_t v16 = v1[5];
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA67BAC();
  sub_1DCB892B8();
  uint64_t v19 = v11;
  char v23 = 0;
  sub_1DC87E988(&qword_1EAAA6660);
  sub_1DCA67BF8((unint64_t *)&unk_1EAAA6670);
  sub_1DCB88F18();
  if (!v2)
  {
    uint64_t v14 = v16;
    uint64_t v13 = v17;
    LOBYTE(v19) = 1;
    sub_1DCB88EA8();
    LOBYTE(v19) = 2;
    sub_1DCB88EF8();
    uint64_t v19 = v13;
    uint64_t v20 = v12;
    uint64_t v21 = v14;
    char v23 = 3;
    sub_1DC89C18C();
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_1DCA6138C()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1DCB891A8();
  sub_1DCB891B8();
  sub_1DCB891C8();
  if (v1 != 1) {
    sub_1DCB891B8();
  }
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  return sub_1DCB891F8();
}

void sub_1DCA61474()
{
  sub_1DC8E79D0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA6650);
  sub_1DC88D538();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA67BAC();
  sub_1DCB89298();
  if (!v0)
  {
    sub_1DC87E988(&qword_1EAAA6660);
    sub_1DCA67BF8(&qword_1EAAA72A0);
    sub_1DCB88DF8();
    sub_1DCA683C0(1);
    uint64_t v6 = sub_1DCB88D88();
    char v8 = v7;
    uint64_t v13 = v6;
    sub_1DCA683C0(2);
    sub_1DCB88DD8();
    int v10 = v9;
    sub_1DC89C0C0();
    sub_1DCB88DF8();
    uint64_t v11 = sub_1DC8D5364();
    v12(v11);
    *(void *)uint64_t v4 = v14;
    *(void *)(v4 + 8) = v13;
    *(unsigned char *)(v4 + 16) = v8 & 1;
    *(_DWORD *)(v4 + 20) = v10;
    *(void *)(v4 + 24) = v14;
    *(void *)(v4 + 32) = v15;
    *(void *)(v4 + 40) = v16;
  }
  sub_1DC8818D0((uint64_t)v2);
  sub_1DC8E7A74();
}

unint64_t sub_1DCA61670()
{
  return sub_1DCA610B8(*v0);
}

uint64_t sub_1DCA61678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA60EC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA616A0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA67BAC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA616DC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA67BAC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCA61718()
{
}

uint64_t sub_1DCA61730(void *a1)
{
  return sub_1DCA61168(a1);
}

uint64_t sub_1DCA61750()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1DCB891A8();
  sub_1DCB891B8();
  sub_1DCB891C8();
  if (v1 != 1) {
    sub_1DCB891B8();
  }
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  return sub_1DCB891F8();
}

uint64_t sub_1DCA61838()
{
  return *(unsigned int *)(v0 + OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_blockSize);
}

id sub_1DCA61848()
{
  return *(id *)(v0 + OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_graphImpl);
}

id sub_1DCA6187C()
{
  id v4 = objc_allocWithZone((Class)sub_1DCA683D8());
  id result = sub_1DCA618D4(v3);
  if (!v2)
  {
    v0[3] = v1;
    v0[4] = &off_1F37E9850;
    void *v0 = result;
  }
  return result;
}

id sub_1DCA618D4(float a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = swift_allocObject();
  *(float *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = ObjectType;
  uint64_t v6 = v1;
  uint64_t v7 = sub_1DC8A1490();
  int v9 = v8;
  swift_release();
  if (v2)
  {

    return (id)swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)&v6[OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_graphImpl] = v7;
    *(_DWORD *)&v6[OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_blockSize] = v9;

    v11.receiver = v6;
    v11.super_class = ObjectType;
    return objc_msgSendSuper2(&v11, sel_init);
  }
}

void sub_1DCA619D4(uint64_t a1@<X8>, float a2@<S0>)
{
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = self;
  *(void *)&long long v82 = 0;
  id v6 = sub_1DCB6B73C(v5, (uint64_t)&v82);
  if (!v6)
  {
    id v23 = (id)v82;
    sub_1DCB86898();

    swift_willThrow();
    return;
  }
  uint64_t v7 = v6;
  id v8 = (id)v82;
  int v9 = (void *)sub_1DCB87908();
  sub_1DCB60B18((uint64_t)v7, v9);

  int v10 = (void *)sub_1DCB87908();
  *(void *)&long long v82 = 0;
  id v11 = sub_1DCB68494(v5, v7, v10, (uint64_t)&v82);

  if (!v11)
  {
    id v24 = (id)v82;
    sub_1DCB86898();

    swift_willThrow();
LABEL_12:

    return;
  }
  id v12 = (id)v82;
  uint64_t v13 = (void *)sub_1DCB87908();
  *(void *)&long long v82 = 0;
  id v14 = sub_1DCB6A308(v5, v7, v13, (uint64_t)&v82);

  if (!v14)
  {
    id v25 = (id)v82;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_12;
  }
  id v15 = (id)v82;
  uint64_t v16 = (void *)sub_1DCB87908();
  *(void *)&long long v82 = 0;
  id v17 = sub_1DCB6A948(v5, v7, v16, (uint64_t)&v82);

  uint64_t v18 = (void *)v82;
  if (!v17)
  {
    id v26 = (id)v82;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_12;
  }
  type metadata accessor for SNUtils();
  id v19 = v18;
  id v20 = sub_1DCB22448();
  sub_1DCB877D8();
  id v21 = objc_allocWithZone((Class)type metadata accessor for _SNVGGishFrontEndProcessingCustomModel());
  uint64_t v22 = sub_1DCABF460(v20);
  if (v2)
  {

LABEL_7:
    return;
  }
  uint64_t v27 = (void *)v22;
  uint64_t v80 = v14;
  type metadata accessor for SNMLCustomModel();
  long long v28 = v17;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  *(void *)(v29 + 24) = v20;
  id v30 = v20;
  id v31 = v27;
  sub_1DCB2FB74(v28, v29, (uint64_t)&off_1F37FEBE0);
  uint64_t v78 = v31;
  unint64_t v32 = sub_1DCB21C80(v30);
  uint64_t v79 = v30;
  unsigned int v33 = sub_1DCB2395C(v32, 1u);
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)sub_1DCB87908();
  *(void *)&long long v82 = 0;
  id v35 = sub_1DCB6A948(v5, v7, v34, (uint64_t)&v82);

  if (!v35)
  {
    id v37 = (id)v82;
    sub_1DCB86898();

    swift_willThrow();
LABEL_16:
    swift_release();

    uint64_t v38 = v79;
LABEL_17:

    return;
  }
  uint64_t v77 = v35;
  id v36 = (id)v82;
  id v39 = sub_1DC9AD840(0x15u, 0);
  unsigned int v75 = v33;
  uint64_t v76 = v28;
  type metadata accessor for SNMLModelAdapter();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  swift_retain();
  sub_1DCB2FB74(v35, v40, (uint64_t)&off_1F37FEC00);
  id v20 = v79;
  swift_release();
  char v41 = (void *)sub_1DCB87908();
  *(void *)&long long v82 = 0;
  id v42 = sub_1DCB68964(v5, v7, v41, 1, (uint64_t)&v82);

  char v43 = (void *)v82;
  uint64_t v74 = v42;
  if (!v42)
  {
    id v47 = (id)v82;
    sub_1DCB86898();

    swift_willThrow();
    swift_release();
    swift_release();

    goto LABEL_7;
  }
  type metadata accessor for SNModelMetadataUtils();
  id v44 = v43;
  unsigned int v45 = sub_1DCB30BDC(v79, 16000);
  if (a2 < 0.0 || a2 >= 1.0)
  {
    sub_1DCA67978();
    swift_allocError();
    swift_willThrow();

    swift_release();
    swift_release();
    uint64_t v38 = v42;
    goto LABEL_17;
  }
  unsigned int v48 = v45;
  sub_1DCB6BA88(v45, 1, 1, (uint64_t)&v82);
  id v81 = 0;
  uint64_t v49 = v80;
  int v50 = sub_1DCB6B83C(v5, v7, v11, v80, 0, 0, &v82, (uint64_t)&v81);
  id v51 = v81;
  if (!v50) {
    goto LABEL_33;
  }
  float v52 = roundf((float)(1.0 - a2) * (float)v75);
  if ((~LODWORD(v52) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v52 <= -1.0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v52 < 4295000000.0)
  {
    int v53 = v52;
    id v54 = v81;
    unsigned int v72 = v48;
    int v73 = v53;
    sub_1DCB6BB74(v48, v53, v75, 1, (uint64_t)&v82);
    id v81 = 0;
    uint64_t v49 = v80;
    int v55 = sub_1DCB6B83C(v5, v7, v80, v76, 0, 0, &v82, (uint64_t)&v81);
    id v51 = v81;
    if (v55)
    {
      id v56 = v81;
      unint64_t v57 = sub_1DCB22EA4();
      uint64_t v58 = sub_1DCB212CC(v57);
      swift_bridgeObjectRelease();
      id v59 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, v58);
      sub_1DCB22DE0(v59);
      int v61 = v60;

      sub_1DCB6BB74(v72, v73, v61, 1, (uint64_t)&v82);
      id v81 = 0;
      if (sub_1DCB6B83C(v5, v7, v76, v77, 0, 0, &v82, (uint64_t)&v81))
      {
        id v62 = v81;
        unint64_t v63 = sub_1DCB2270C();
        uint64_t v64 = sub_1DCB212CC(v63);
        swift_bridgeObjectRelease();
        id v65 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, v64);
        sub_1DCB22DE0(v65);
        int v67 = v66;

        sub_1DCB6BB74(v72, v73, v67, 1, (uint64_t)&v82);
        id v81 = 0;
        if (sub_1DCB6B83C(v5, v7, v77, v74, 0, 0, &v82, (uint64_t)&v81))
        {
          id v68 = v81;
          sub_1DCB5EC24((uint64_t)v7);
          sub_1DCB5F1F8((uint64_t)v7);

          swift_release();
          swift_release();

          *(void *)a1 = v7;
          *(_DWORD *)(a1 + 8) = v75;
          return;
        }
        id v71 = v81;
        sub_1DCB86898();

        swift_willThrow();
        goto LABEL_35;
      }
      id v70 = v81;
      sub_1DCB86898();

      swift_willThrow();
LABEL_34:

LABEL_35:
      swift_release();
      goto LABEL_16;
    }
LABEL_33:
    id v69 = v51;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_34;
  }
LABEL_40:
  __break(1u);
}

id sub_1DCA62450()
{
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC13SoundAnalysis17SNVGGishExtractor_graphImpl);
  float v3 = (void *)sub_1DCA68330();
  id v4 = sub_1DC8E784C(v3);

  return v4;
}

void sub_1DCA624B0()
{
}

id sub_1DCA62504()
{
  return sub_1DCA6187C();
}

void sub_1DCA6251C()
{
}

double sub_1DCA62534()
{
  return sub_1DCA630B8();
}

id sub_1DCA6254C()
{
  return sub_1DCA62450();
}

id sub_1DCA62570()
{
  return sub_1DCA61848();
}

uint64_t sub_1DCA62594()
{
  return sub_1DCA61838();
}

id sub_1DCA625B8(uint64_t a1, uint64_t a2, void *a3, double a4, float a5)
{
  v79[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v10 = self;
  v79[0] = 0;
  id v11 = sub_1DCB6B73C(v10, (uint64_t)v79);
  if (!v11)
  {
    id v34 = v79[0];
    sub_1DCA68464();

    swift_willThrow();
    return v11;
  }
  id v12 = v79[0];
  uint64_t v13 = (void *)sub_1DCB87908();
  sub_1DCB60B18((uint64_t)v11, v13);

  sub_1DCB87908();
  uint64_t v14 = sub_1DCA68388();
  id v18 = sub_1DCB68494(v14, v15, v16, v17);

  id v19 = v79[0];
  uint64_t v76 = v18;
  if (!v18)
  {
    id v35 = v79[0];
    sub_1DCA68464();

    swift_willThrow();
LABEL_21:

    return v11;
  }
  id v20 = v79[0];
  sub_1DCB87908();
  uint64_t v21 = sub_1DCA68388();
  id v25 = sub_1DCB6A308(v21, v22, v23, v24);

  id v26 = v79[0];
  if (!v25)
  {
    id v36 = v79[0];
    sub_1DCA68464();

    swift_willThrow();
    id v37 = v76;
LABEL_11:

    goto LABEL_21;
  }
  id v27 = v79[0];
  sub_1DCB87908();
  uint64_t v28 = sub_1DCA68388();
  id v32 = sub_1DCB6A948(v28, v29, v30, v31);

  if (!v32)
  {
    id v38 = v79[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_21;
  }
  id v33 = v79[0];
  sub_1DCB2FB74(v32, a1, a2);
  if (!v5)
  {
    id v39 = (void *)sub_1DCB87908();
    v79[0] = 0;
    id v40 = sub_1DCB68964(v10, v11, v39, 1, (uint64_t)v79);

    id v41 = v79[0];
    if (!v40)
    {
      id v44 = v79[0];
      sub_1DCA68464();

      swift_willThrow();
LABEL_20:

      goto LABEL_21;
    }
    if (a5 < 0.0 || a5 >= 1.0)
    {
      sub_1DCA679F0();
      sub_1DC883884();
      id v43 = v41;
      swift_willThrow();

      return v11;
    }
    float v46 = roundf((float)(1.0 - a5) * (float)a3);
    if ((~LODWORD(v46) & 0x7F800000) != 0)
    {
      if (v46 > -1.0)
      {
        if (v46 < 4295000000.0)
        {
          if ((~*(void *)&a4 & 0x7FF0000000000000) != 0)
          {
            if (a4 > -1.0)
            {
              unsigned int v75 = v32;
              if (a4 < 4294967300.0)
              {
                id v47 = v79[0];
                sub_1DCB6BA88(a4, 1, 1, (uint64_t)v79);
                uint64_t v48 = sub_1DCA68300();
                if (sub_1DCB6B83C(v48, v49, v76, v25, 0, 0, v50, v51))
                {
                  id v52 = v78;
                  sub_1DCB6BB74(a4, v46, (int)a3, 1, (uint64_t)v79);
                  uint64_t v53 = sub_1DCA68300();
                  if (sub_1DCB6B83C(v53, v54, v25, v32, 0, 0, v55, v56))
                  {
                    type metadata accessor for SNUtils();
                    uint64_t ObjectType = swift_getObjectType();
                    int v73 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
                    uint64_t v74 = ObjectType;
                    id v58 = v78;
                    id v59 = (void *)v73(v74, a2);
                    unint64_t v60 = sub_1DCB218A8(v59);

                    uint64_t v61 = sub_1DCB212CC(v60);
                    swift_bridgeObjectRelease();
                    id v62 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, v61);
                    sub_1DCB22DE0(v62);
                    int v64 = v63;

                    if (v64) {
                      int v65 = v64;
                    }
                    else {
                      int v65 = 512;
                    }
                    sub_1DCB6BB74(a4, v46, v65, 1, (uint64_t)v79);
                    uint64_t v66 = sub_1DCA68300();
                    id v32 = v40;
                    if (sub_1DCB6B83C(v66, v67, v75, v40, 0, 0, v68, v69))
                    {
                      if (a4 > -9.22337204e18)
                      {
                        if (a4 < 9.22337204e18)
                        {
                          id v70 = v78;
                          sub_1DCB5EC24((uint64_t)v11);
                          sub_1DCB5F1F8((uint64_t)v11);

                          goto LABEL_7;
                        }
LABEL_47:
                        __break(1u);
                      }
LABEL_46:
                      __break(1u);
                      goto LABEL_47;
                    }
                    id v72 = v78;
                    sub_1DCB86898();

                    swift_willThrow();
                    goto LABEL_20;
                  }
                }
                id v71 = v78;
                sub_1DCB86898();

                swift_willThrow();
                id v37 = v40;
                goto LABEL_11;
              }
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
LABEL_44:
            __break(1u);
            goto LABEL_45;
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_42;
  }

LABEL_7:
  return v11;
}

uint64_t sub_1DCA62BE4(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      uint64_t result = type metadata accessor for SNVGGishExtractor();
      break;
    case 2:
      uint64_t result = type metadata accessor for SNLogMelSpectrogramExtractor();
      break;
    case 3:
      uint64_t result = type metadata accessor for SNSoundPrintAExtractor();
      break;
    case 4:
    case 5:
      uint64_t result = type metadata accessor for SNSoundPrintKExtractor();
      break;
    case 6:
      uint64_t result = type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_1DCA62C98()
{
  sub_1DCA683D8();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_1DCA62CF8(v3);
  if (!v2)
  {
    v0[3] = v1;
    v0[4] = (uint64_t)&off_1F37F1E68;
    uint64_t *v0 = v4;
  }
  return result;
}

uint64_t sub_1DCA62CF8(float a1)
{
  sub_1DC89F6D8();
  uint64_t v5 = v4;
  uint64_t v6 = swift_allocObject();
  *(float *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = sub_1DC8A1490();
  int v9 = v8;
  swift_release();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v1 + 16) = v7;
    *(_DWORD *)(v1 + 24) = v9;
  }
  return v1;
}

void sub_1DCA62DBC(uint64_t a1@<X8>, float a2@<S0>)
{
  type metadata accessor for SNUtils();
  id v5 = sub_1DCB22448();
  sub_1DCB877D8();
  id v6 = objc_allocWithZone((Class)type metadata accessor for _SNVGGishFrontEndProcessingCustomModel());
  uint64_t v7 = sub_1DCABF460(v5);
  if (v2)
  {
  }
  else
  {
    int v8 = (void *)v7;
    type metadata accessor for SNMLCustomModel();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = v5;
    type metadata accessor for SNModelMetadataUtils();
    id v10 = v5;
    id v11 = v8;
    unsigned int v12 = sub_1DCB30BDC(v10, 16000);
    unint64_t v13 = sub_1DCB22784();
    uint64_t v14 = sub_1DCB212CC(v13);
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, v14);
    sub_1DCB22DE0(v15);
    uint64_t v17 = v16;

    uint64_t v18 = swift_retain();
    id v19 = sub_1DCA625B8(v18, (uint64_t)&off_1F37FEBE0, v17, (double)v12, a2);
    swift_release_n();

    *(void *)a1 = v19;
    *(_DWORD *)(a1 + 8) = v17;
  }
}

id sub_1DCA62FB0()
{
  id v2 = *(id *)(v0 + 16);
  float v3 = (void *)sub_1DCA68330();
  id v4 = sub_1DC8E784C(v3);

  return v4;
}

void sub_1DCA63008()
{
  type metadata accessor for SNUtils();
  id v0 = sub_1DCB22448();
  unint64_t v1 = sub_1DCB21C80(v0);
  sub_1DCB2395C(v1, 1u);
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 16000);
  sub_1DCB22DE0(v2);
  int v4 = v3;

  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1DCB88628();
  }
}

double sub_1DCA630B8()
{
  sub_1DCA63008();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1DC897AEC();
  uint64_t v6 = v10;
  unint64_t v7 = *(void *)(v10 + 16);
  if (v7 >= *(void *)(v10 + 24) >> 1)
  {
    sub_1DC897AEC();
    uint64_t v6 = v10;
  }
  *(void *)(v6 + 16) = v7 + 1;
  int v8 = (void *)(v6 + 24 * v7);
  v8[4] = v1;
  v8[5] = v3;
  v8[6] = v5;
  return sub_1DCA6842C(v6);
}

uint64_t sub_1DCA6317C()
{
  return sub_1DCA62C98();
}

id sub_1DCA63194()
{
  return sub_1DCA62FB0();
}

uint64_t sub_1DCA631B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, double a6, float a7)
{
  sub_1DC89F6D8();
  uint64_t v15 = v14;
  unint64_t v17 = HIDWORD(v16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(_DWORD *)(v18 + 40) = a4;
  *(_DWORD *)(v18 + 44) = v17;
  *(void *)(v18 + 48) = a5;
  *(float *)(v18 + 56) = a7;
  *(void *)(v18 + 64) = v15;
  swift_unknownObjectRetain();
  uint64_t v19 = sub_1DC8A1490();
  if (v24)
  {
    swift_release();
    swift_unknownObjectRelease();
    type metadata accessor for SNSoundPrintExtractorBase();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v21 = v19;
    int v22 = v20;
    swift_unknownObjectRelease();
    swift_release();
    *(void *)(v7 + 16) = v21;
    *(_DWORD *)(v7 + 24) = v22;
  }
  return v7;
}

uint64_t sub_1DCA632D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, CMTimeValue a3@<X2>, uint64_t a4@<X3>, CMTimeEpoch a5@<X4>, uint64_t a6@<X8>, float a7@<S0>)
{
  type metadata accessor for SNModelMetadataUtils();
  uint64_t ObjectType = swift_getObjectType();
  unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  unint64_t v13 = (void *)v12(ObjectType, a2);
  unsigned int v36 = sub_1DCB30BDC(v13, 16000);

  uint64_t v14 = (void *)v12(ObjectType, a2);
  id v15 = objc_msgSend(v14, sel_inputDescriptionsByName);

  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v16 = sub_1DCB877B8();

  unint64_t v17 = (void *)sub_1DC9A4430(v16);
  swift_bridgeObjectRelease();
  if (!v17
    || (id v18 = objc_msgSend(v17, sel_multiArrayConstraint), v17, !v18))
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v28 = 0;
    return swift_willThrow();
  }
  type metadata accessor for SNUtils();
  id v19 = sub_1DCB21B6C(v18);
  unint64_t v21 = v20;

  id v22 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, v36);
  sub_1DC8AE910(v22);
  int32_t v24 = v23;

  time.CMTimeValue value = a3;
  *(void *)&time.timescale = a4;
  unint64_t v25 = v21;
  time.CMTimeEpoch epoch = a5;
  CMTimeConvertScale(&v38, &time, v24, kCMTimeRoundingMethod_RoundTowardZero);
  CMTimeValue value = v38.value;
  if (v38.value < (unint64_t)v19 || v38.value - (uint64_t)v19 >= v25)
  {
    type metadata accessor for SNError();
    time.CMTimeValue value = 0;
    *(void *)&time.timescale = 0xE000000000000000;
    sub_1DCB88A98();
    sub_1DCB87A18();
    v38.CMTimeValue value = value;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    v38.CMTimeValue value = (CMTimeValue)v19;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DCB87A18();
    if (__OFADD__(v19, v25))
    {
      __break(1u);
      return result;
    }
    v38.CMTimeValue value = (CMTimeValue)v19 + v25;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 2, 0, time.value, *(unint64_t *)&time.timescale);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  id v29 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v38.value);
  sub_1DCB22DE0(v29);
  uint64_t v31 = v30;

  uint64_t result = (uint64_t)sub_1DCA625B8(a1, a2, v31, (double)v36, a7);
  if (!v34)
  {
    *(void *)a6 = result;
    *(_DWORD *)(a6 + 8) = v31;
  }
  return result;
}

uint64_t sub_1DCA636D8()
{
  uint64_t v1 = (void *)sub_1DCA68330();
  id v2 = sub_1DC8E784C(v1);

  return sub_1DC8E7890();
}

uint64_t sub_1DCA63720()
{
  return sub_1DCB88628();
}

void sub_1DCA6372C(uint64_t a1@<X8>)
{
  id v2 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DCA637A0(a1);
}

void sub_1DCA637A0(uint64_t a1@<X8>)
{
  id v3 = sub_1DC9AD840(0x21u, 0);
  if (!v1)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_modelDescription);
    id v6 = objc_msgSend(v5, sel_inputDescriptionsByName);

    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
    uint64_t v7 = sub_1DCB877B8();

    int v8 = (void *)sub_1DC9A4430(v7);
    swift_bridgeObjectRelease();
    if (v8
      && (id v9 = objc_msgSend(v8, sel_multiArrayConstraint), v8, v9)
      && (id v10 = objc_msgSend(v9, sel_shapeConstraint), v9, v10))
    {
      type metadata accessor for SNUtils();
      sub_1DCB227FC(v10, 16000);
      unsigned int v12 = v11;
      unint64_t v21 = (unsigned char *)sub_1DC8A6800();

      uint64_t v13 = *(void *)&v21[OBJC_IVAR____SNTimeDurationConstraint_impl];
      uint64_t v14 = *(void *)&v21[OBJC_IVAR____SNTimeDurationConstraint_impl + 8];
      uint64_t v15 = *(void *)&v21[OBJC_IVAR____SNTimeDurationConstraint_impl + 16];
      uint64_t v16 = *(void *)&v21[OBJC_IVAR____SNTimeDurationConstraint_impl + 24];
      uint64_t v17 = *(void *)&v21[OBJC_IVAR____SNTimeDurationConstraint_impl + 32];
      uint64_t v18 = *(void *)&v21[OBJC_IVAR____SNTimeDurationConstraint_impl + 40];
      char v19 = v21[OBJC_IVAR____SNTimeDurationConstraint_impl + 48];
      sub_1DC88245C(v13, v14, v15, v16, v17, v18, v19);

      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v15;
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = v17;
      *(void *)(a1 + 40) = v18;
      *(unsigned char *)(a1 + 48) = v19;
    }
    else
    {
      sub_1DC884E74();
      swift_allocError();
      *unint64_t v20 = 0;
      swift_willThrow();
    }
  }
}

uint64_t sub_1DCA6398C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DCA639C4()
{
  sub_1DC89F6D8();
  id v1 = sub_1DC9AD840(0x21u, 0);
  if (v0)
  {
    sub_1DCA68444();
  }
  else
  {
    id v2 = v1;
    type metadata accessor for SNMLModelAdapter();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    sub_1DCA683F0(v3, (uint64_t)&off_1F37FEC00, v4);
  }
  return sub_1DC8E7890();
}

void sub_1DCA63A5C()
{
}

uint64_t sub_1DCA63A90()
{
  return sub_1DCA63720();
}

uint64_t sub_1DCA63AAC()
{
  return sub_1DCA636D8();
}

id sub_1DCA63AD0()
{
  return sub_1DC8E7244();
}

uint64_t sub_1DCA63AF4()
{
  return *(unsigned int *)(*(void *)v0 + 24);
}

void sub_1DCA63B00()
{
  sub_1DC8E79D0();
  uint64_t v3 = v2;
  id v5 = v4;
  uint64_t v6 = v0;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = swift_allocObject();
  v5(v12, v10, v8);
  if (!v1)
  {
    v14[3] = v6;
    v14[4] = v3;
    *uint64_t v14 = v15;
  }
  sub_1DC8E7A74();
}

uint64_t sub_1DCA63B8C()
{
  sub_1DC89F6D8();
  id v1 = sub_1DC9AD840(0x22u, (void *)3);
  if (v0)
  {
    sub_1DCA68444();
  }
  else
  {
    id v2 = v1;
    type metadata accessor for SNMLModelAdapter();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    sub_1DCA683F0(v3, (uint64_t)&off_1F37FEC00, v4);
  }
  return sub_1DC8E7890();
}

void sub_1DCA63C24()
{
}

void sub_1DCA63C58()
{
}

uint64_t sub_1DCA63C9C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1DCA63E24(a1, a2 & 1);
  if (!v2)
  {
    id v5 = (void *)MEMORY[0x1E01A8D20](v4);
    uint64_t v6 = (void *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 != -1) {
      swift_once();
    }
    uint64_t v7 = swift_allocObject();
    *(unsigned char *)(v7 + 16) = 39;
    MEMORY[0x1F4188790](v7);
    swift_retain();
    sub_1DCAC3890();
    uint64_t v3 = v9;
    swift_release();
    swift_release();
  }
  return v3;
}

uint64_t sub_1DCA63E24(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0 && a1 != 5)
  {
    sub_1DCA67AA0();
    sub_1DC883884();
    *uint64_t v2 = 3;
    swift_willThrow();
  }
  return 39;
}

void sub_1DCA63E80()
{
  uint64_t v0 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DCA59AC0();
  sub_1DCA63EF0(v1, v2);
}

void sub_1DCA63EF0(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a1 + 16))(ObjectType, a1);
  uint64_t v7 = sub_1DC97EDFC(v6);

  if (!v2)
  {
    if (!*(void *)(v7 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v9 = *(void *)(v7 + 56);
    uint64_t v8 = *(void *)(v7 + 64);
    unsigned int v10 = *(unsigned __int8 *)(v7 + 72);
    swift_bridgeObjectRetain();
    sub_1DC937878(v9, v8, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10 > 0xFD)
    {
      sub_1DC97FA28(v9, v8, v10);
LABEL_13:
      sub_1DCA67AA0();
      swift_allocError();
      *uint64_t v15 = 0;
      swift_willThrow();
      return;
    }
    if (v10)
    {
      if (v10 != 1) {
        goto LABEL_13;
      }
      if (*(void *)(v8 + 16) == 1)
      {
        uint64_t v11 = *(void *)(v8 + 32);
        unint64_t v12 = *(void *)(v11 + 16);
        if (v12 >= 3)
        {
          uint64_t v13 = *(void *)(v11 + 8 * v12 + 16);
          sub_1DC97FA28(v9, v8, 1u);
          uint64_t v14 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
            return;
          }
          if (v14 < v13)
          {
            __break(1u);
            goto LABEL_13;
          }
LABEL_17:
          *a2 = v13;
          a2[1] = v14;
          return;
        }
      }
      sub_1DCA67AA0();
      swift_allocError();
      *uint64_t v18 = 0;
      swift_willThrow();
      uint64_t v19 = v9;
      uint64_t v20 = v8;
      unsigned __int8 v21 = 1;
    }
    else
    {
      unint64_t v16 = *(void *)(v8 + 16);
      if (v16 > 2)
      {
        uint64_t v17 = (uint64_t *)(v8 + 16 * v16);
        uint64_t v13 = *v17;
        uint64_t v14 = v17[1];
        sub_1DC97FA28(v9, v8, 0);
        goto LABEL_17;
      }
      sub_1DCA67AA0();
      swift_allocError();
      *id v22 = 0;
      swift_willThrow();
      uint64_t v19 = v9;
      uint64_t v20 = v8;
      unsigned __int8 v21 = 0;
    }
    sub_1DC97FA28(v19, v20, v21);
  }
}

void sub_1DCA64114()
{
  sub_1DCA63E80();
  if (v0) {
    return;
  }
  if (v1 < 1)
  {
    if (v2 < 1) {
      return;
    }
  }
  else
  {
    sub_1DC909E2C();
    if (!v5) {
      goto LABEL_15;
    }
    uint64_t v6 = v4 + 512;
    if (__OFADD__(v4, 512))
    {
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    if (v3 <= 0)
    {
      uint64_t v7 = 0;
      goto LABEL_12;
    }
  }
  sub_1DC909E2C();
  if (!v5) {
    goto LABEL_17;
  }
  BOOL v9 = __OFADD__(v8, 512);
  uint64_t v7 = v8 + 512;
  if (v9)
  {
LABEL_18:
    __break(1u);
    return;
  }
LABEL_12:
  if (v7 < v6)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
}

double sub_1DCA641A0@<D0>(uint64_t a1@<X8>)
{
  sub_1DCA64114();
  if (!v1)
  {
    sub_1DCB88628();
    sub_1DCB88628();
    sub_1DCB883D8();
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    double result = *(double *)&v6;
    *(_OWORD *)(a1 + 32) = v6;
    *(unsigned char *)(a1 + 48) = 1;
  }
  return result;
}

double sub_1DCA64244@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1DCA63C9C(a1, a2 & 1);
  sub_1DCA641A0((uint64_t)v8);
  swift_unknownObjectRelease();
  char v4 = v9;
  double result = *(double *)v8;
  long long v6 = v8[1];
  long long v7 = v8[2];
  *(_OWORD *)a3 = v8[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = v7;
  *(unsigned char *)(a3 + 48) = v4;
  return result;
}

uint64_t sub_1DCA642E0()
{
  return sub_1DCB88628();
}

uint64_t sub_1DCA642EC(long long *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, double a7)
{
  unint64_t v110 = a6;
  *(void *)&long long v109 = a5;
  uint64_t v108 = a4;
  uint64_t v107 = a1;
  char v9 = a3 & 1;
  uint64_t v99 = sub_1DC87E988(&qword_1EAAA0C68);
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v97 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1DC87E988(&qword_1EAAA0C70);
  MEMORY[0x1F4188790](v101);
  uint64_t v100 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1DC87E988(&qword_1EAAA0C78);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v102 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1DC87E988(&qword_1EAAA0C80);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAAA0C88);
  uint64_t v95 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DC87E988(&qword_1EAAA6690);
  uint64_t v96 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DC87E988(&qword_1EAAA6698);
  MEMORY[0x1F4188790](v21);
  int32_t v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor();
  uint64_t v25 = a2;
  id v26 = (char *)v24;
  id v27 = v123;
  uint64_t v28 = sub_1DCA63C9C(v25, v9);
  if (v27) {
    return (uint64_t)v26;
  }
  uint64_t v30 = v28;
  uint64_t v94 = v14;
  uint64_t v123 = v17;
  uint64_t v91 = v15;
  uint64_t v92 = v20;
  uint64_t v90 = v21;
  uint64_t v93 = v23;
  uint64_t v31 = v29;
  sub_1DCA64114();
  uint64_t v88 = v31;
  uint64_t v87 = v18;
  uint64_t v89 = v30;
  sub_1DCB88628();
  sub_1DCB88628();
  sub_1DCB883D8();
  id v26 = &v112;
  if ((sub_1DCB883B8() & 1) == 0)
  {
    sub_1DCA67AA0();
    swift_allocError();
    *CMTime v38 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();
    return (uint64_t)v26;
  }
  uint64_t result = sub_1DCB885B8();
  double v33 = (double)result * a7;
  if ((~*(void *)&v33 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v34 = v107;
  if (v33 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v33 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v35 = result - (uint64_t)v33;
  if (__OFSUB__(result, (uint64_t)v33))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v36 = result - 512;
  if (__OFSUB__(result, 512))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((v36 & 0x8000000000000000) != 0)
  {
    unint64_t v110 = 0;
LABEL_14:
    uint64_t v39 = v35 / 160;
    uint64_t v40 = sub_1DCB88628();
    unint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v108 = v39;
    uint64_t v45 = sub_1DCB88628();
    unint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v117 = 0x40467A0000;
    uint64_t v118 = 0x45F8700042480000;
    uint64_t v119 = 0x38D1B71700000001;
    char v120 = 1;
    long long v109 = xmmword_1DCBC0340;
    long long v121 = xmmword_1DCBC0340;
    uint64_t v122 = 0x100000000;
    long long v50 = v34[1];
    long long v113 = *v34;
    long long v114 = v50;
    long long v51 = v34[3];
    long long v115 = v34[2];
    long long v116 = v51;
    sub_1DC88D0CC((uint64_t)v34);
    sub_1DC889B00();
    unint64_t v81 = v47;
    uint64_t v82 = v45;
    uint64_t v83 = v49;
    unint64_t v84 = v42;
    uint64_t v85 = v40;
    uint64_t v86 = v44;
    sub_1DC9139C0((uint64_t)v34);
    uint64_t v52 = sub_1DC888A00();
    swift_release();
    uint64_t v111 = v52;
    sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
    uint64_t v53 = sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
    id v54 = v97;
    sub_1DCB873D8();
    uint64_t v55 = v98;
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
    uint64_t v57 = (uint64_t)v100;
    uint64_t v107 = 0;
    uint64_t v58 = v99;
    v56(v100, v54, v99);
    uint64_t v59 = v101;
    unint64_t v60 = v110;
    *(void *)(v57 + *(int *)(v101 + 60)) = v110;
    *(void *)(v57 + *(int *)(v59 + 64)) = v108;
    *(void *)(v57 + *(int *)(v59 + 68)) = v53;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v58);
    swift_release();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA66A0, &qword_1EAAA0C70);
    uint64_t v61 = v102;
    sub_1DCB873D8();
    sub_1DC901A64(v57, &qword_1EAAA0C70);
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = v60;
    *(void *)(v62 + 24) = 0x40467A0000;
    *(void *)(v62 + 32) = 0x45F8700042480000;
    *(void *)(v62 + 40) = 0x38D1B71700000001;
    *(unsigned char *)(v62 + 48) = 1;
    *(_OWORD *)(v62 + 52) = v109;
    *(void *)(v62 + 68) = 0x100000000;
    sub_1DC87E988(&qword_1EAAA0BC0);
    int v63 = v94;
    uint64_t v64 = v104;
    sub_1DCB870D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v61, v64);
    int v65 = v123;
    id v26 = v63;
    uint64_t v66 = v107;
    sub_1DC99C2CC();
    if (v66)
    {
      (*(void (**)(char *, uint64_t))(v105 + 8))(v63, v106);
      swift_unknownObjectRelease();
    }
    else
    {
      int v67 = v84;
      unint64_t v110 = HIDWORD(v84);
      int v68 = v81;
      unint64_t v69 = HIDWORD(v81);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v63, v106);
      sub_1DC89C89C(0, (unint64_t *)&unk_1EAA9DB50);
      sub_1DC88CF34(&qword_1EAAA0CC0, &qword_1EAAA0C88);
      id v70 = v92;
      uint64_t v71 = v91;
      sub_1DCB874A8();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v65, v71);
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v85;
      int v73 = v110;
      *(_DWORD *)(v72 + 24) = v67;
      *(_DWORD *)(v72 + 28) = v73;
      uint64_t v74 = v82;
      *(void *)(v72 + 32) = v86;
      *(void *)(v72 + 40) = v74;
      *(_DWORD *)(v72 + 48) = v68;
      *(_DWORD *)(v72 + 52) = v69;
      *(void *)(v72 + 56) = v83;
      uint64_t v75 = v96;
      uint64_t v76 = (uint64_t)v93;
      uint64_t v77 = v87;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v93, v70, v87);
      uint64_t v78 = v90;
      uint64_t v79 = (double (**)@<D0>(uint64_t@<X8>))(v76 + *(int *)(v90 + 52));
      *uint64_t v79 = sub_1DC8C9A5C;
      v79[1] = 0;
      uint64_t v80 = (void *)(v76 + *(int *)(v78 + 56));
      *uint64_t v80 = sub_1DCA67CE4;
      v80[1] = v72;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v70, v77);
      sub_1DC88CF34(&qword_1EAAA66B0, &qword_1EAAA6698);
      id v26 = (char *)sub_1DCB873A8();
      swift_unknownObjectRelease();
      sub_1DC901A64(v76, &qword_1EAAA6698);
    }
    return (uint64_t)v26;
  }
  unint64_t v37 = v36 / 0xA0;
  uint64_t result = 160 * v37 + 512;
  if (!__OFADD__(160 * v37, 512))
  {
    unint64_t v110 = v37 + 1;
    goto LABEL_14;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1DCA64EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC87E988(&qword_1EAA9C6C0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DCBB9440;
  *(void *)(v5 + 32) = 1;
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = *(unsigned int *)(a3 + 4);
  swift_bridgeObjectRetain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  sub_1DC88CF34(&qword_1EAA9E850, (uint64_t *)&unk_1EAAA0CB0);
  return sub_1DCB87018();
}

void sub_1DCA64F9C(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;
  id v4 = objc_msgSend(*a1, sel_featureNames);
  uint64_t v5 = sub_1DCB87FE8();

  sub_1DC9A4474(v5);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v7
    && (uint64_t v8 = (void *)sub_1DCB87908(),
        swift_bridgeObjectRelease(),
        id v9 = objc_msgSend(v3, sel_featureValueForName_, v8),
        v8,
        v9)
    && (id v10 = objc_msgSend(v9, sel_multiArrayValue), v9, v10))
  {
    *a2 = v10;
  }
  else
  {
    sub_1DCA67AA0();
    swift_allocError();
    *uint64_t v11 = 2;
    swift_willThrow();
  }
}

id sub_1DCA650C8@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  int v7 = a4;
  unint64_t v10 = HIDWORD(a4);
  uint64_t v11 = *a1;
  uint64_t v12 = *a2;
  uint64_t v13 = a2[2];
  int v15 = *((_DWORD *)a2 + 2);
  int v14 = *((_DWORD *)a2 + 3);
  *a2 = sub_1DCB885D8();
  *((_DWORD *)a2 + 2) = v16;
  *((_DWORD *)a2 + 3) = v17;
  a2[2] = v18;
  type metadata accessor for SNFeaturePrint();
  uint64_t v22 = v12;
  int v23 = v15;
  int v24 = v14;
  uint64_t v25 = v13;
  uint64_t v26 = a3;
  int v27 = v7;
  int v28 = v10;
  uint64_t v29 = a5;
  uint64_t v30 = 6;
  uint64_t v31 = v11;
  id v19 = v11;
  id result = sub_1DCA9313C((uint64_t)&v22);
  *a6 = result;
  return result;
}

void sub_1DCA651A0()
{
}

void sub_1DCA651E4()
{
}

void sub_1DCA65228()
{
}

void sub_1DCA65284()
{
}

uint64_t sub_1DCA65294()
{
  return sub_1DCA642E0();
}

double sub_1DCA652AC@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_1DCA64244(a1, a2 & 1, a3);
}

void sub_1DCA652B4()
{
}

void sub_1DCA652C4()
{
}

void sub_1DCA652D4()
{
}

id sub_1DCA65328()
{
  uint64_t v1 = v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl;
  if (sub_1DCA62BE4(*(void *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl)))
  {
    (*(void (**)(id *__return_ptr, void, void))(v2 + 24))(&v14, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
    id v4 = v14;
    uint64_t v3 = v15;
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    uint64_t v7 = v18;
    uint64_t v8 = v19;
    char v9 = v20;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    char v9 = 0;
    id v4 = (id)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = type metadata accessor for _SNTimeDurationConstraint();
  id v14 = v4;
  uint64_t v15 = v3;
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  uint64_t v18 = v7;
  uint64_t v19 = v8;
  char v20 = v9;
  id v11 = sub_1DC8A5DD8((uint64_t)&v14);
  uint64_t v17 = v10;
  id v14 = v11;
  id v12 = objc_allocWithZone((Class)SNTimeDurationConstraint);
  return sub_1DCA21A88(&v14);
}

uint64_t sub_1DCA65420()
{
  return *(void *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
}

uint64_t sub_1DCA6547C(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl) = result;
  return result;
}

float sub_1DCA654B0()
{
  return *(float *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 20);
}

void sub_1DCA6551C(float a1)
{
}

void sub_1DCA65614(float a1)
{
  if (a1 >= 0.0 && a1 < 1.0)
  {
    *(float *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 20) = a1;
  }
  else
  {
    sub_1DCA67C5C();
    uint64_t v3 = sub_1DC883884();
    sub_1DC981FC0(v3, v4);
  }
}

uint64_t sub_1DCA656AC()
{
  return *(void *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 24);
}

void sub_1DCA6572C(uint64_t a1, uint64_t a2, CMTimeEpoch a3)
{
  uint64_t v4 = v3;
  type metadata accessor for SNUtils();
  id v6 = sub_1DCA65328();
  CMTimeValue v7 = sub_1DCA59AC0();
  CMTimeValue v9 = sub_1DCB22068(v7, v8, a3, v6);
  uint64_t v11 = v10;
  uint64_t v13 = v12;

  id v14 = (void *)(v4 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  v14[3] = v9;
  v14[4] = v11;
  v14[5] = v13;
}

double sub_1DCA657C4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  uint64_t v2 = *v1;
  int v3 = *((_DWORD *)v1 + 5);
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[5];
  type metadata accessor for SNFeaturePrintExtractor();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(void *)(v6 + 64) = 0;
  *(void *)(v6 + 72) = v2;
  *(_DWORD *)(v6 + 80) = v3;
  *(void *)(v6 + 84) = v4;
  double result = *((double *)v1 + 4);
  *(double *)(v6 + 92) = result;
  *(void *)(v6 + 100) = v5;
  *(void *)(v6 + 112) = 0;
  return result;
}

id sub_1DCA6585C()
{
  return objc_msgSend(v0, sel_initWithFeaturePrintType_, 1);
}

id sub_1DCA65894(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_1DCA658C8(a1);
}

id sub_1DCA658C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1DCA62BE4(a1);
  if (v5)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    CMTimeValue v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 16);
    uint64_t v10 = v2;
    uint64_t v11 = v9(v7, v8);
    int v13 = v12;
    uint64_t v15 = v14;
    unint64_t v16 = HIDWORD(v12);
  }
  else
  {
    uint64_t v11 = *MEMORY[0x1E4F1F9F8];
    int v13 = *(_DWORD *)(MEMORY[0x1E4F1F9F8] + 8);
    LODWORD(v16) = *(_DWORD *)(MEMORY[0x1E4F1F9F8] + 12);
    uint64_t v15 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
    uint64_t v17 = v2;
  }
  uint64_t v18 = &v2[OBJC_IVAR___SNCreateFeaturePrintRequest_impl];
  *(void *)uint64_t v18 = a1;
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  *((_DWORD *)v18 + 5) = 1056964608;
  *((void *)v18 + 3) = v11;
  *((_DWORD *)v18 + 8) = v13;
  *((_DWORD *)v18 + 9) = v16;
  *((void *)v18 + 5) = v15;

  v20.receiver = v2;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_init);
}

id sub_1DCA659E4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjectType());
  id v5 = sub_1DCA65AEC(a1, a2, 0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id sub_1DCA65AEC(uint64_t a1, uint64_t a2, char a3)
{
  id v5 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  int v10 = a3 & 1;
  if (a1 == 6)
  {
    type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor();
    uint64_t v11 = v5;
    sub_1DCA63E24(a2, v10);
    if (v4)
    {

      return (id)swift_deallocPartialClassInstance();
    }
  }
  else
  {
    if ((a3 & 1) == 0)
    {
      sub_1DCA67C5C();
      sub_1DC883884();
      *uint64_t v18 = 2;
      swift_willThrow();
      return (id)swift_deallocPartialClassInstance();
    }
    unint64_t v12 = v5;
  }
  if (sub_1DCA62BE4(a1))
  {
    uint64_t v14 = (*(uint64_t (**)(void))(v13 + 16))();
    unint64_t v17 = HIDWORD(v15);
  }
  else
  {
    uint64_t v14 = *MEMORY[0x1E4F1F9F8];
    LODWORD(v15) = *(_DWORD *)(MEMORY[0x1E4F1F9F8] + 8);
    LODWORD(v17) = *(_DWORD *)(MEMORY[0x1E4F1F9F8] + 12);
    uint64_t v16 = *(void *)(MEMORY[0x1E4F1F9F8] + 16);
  }
  objc_super v20 = &v5[OBJC_IVAR___SNCreateFeaturePrintRequest_impl];
  *(void *)objc_super v20 = a1;
  *((void *)v20 + 1) = a2;
  v20[16] = v10 != 0;
  *((_DWORD *)v20 + 5) = 1056964608;
  *((void *)v20 + 3) = v14;
  *((_DWORD *)v20 + 8) = v15;
  *((_DWORD *)v20 + 9) = v17;
  *((void *)v20 + 5) = v16;

  v21.receiver = v5;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, sel_init);
}

id sub_1DCA65C54(uint64_t a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  char v4 = *(unsigned char *)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 20);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = &v3[OBJC_IVAR___SNCreateFeaturePrintRequest_impl];
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a1;
  v8[16] = v4;
  *((_DWORD *)v8 + 5) = v5;
  *((void *)v8 + 3) = v6;
  *((void *)v8 + 4) = *(void *)(a1 + 32);
  *((void *)v8 + 5) = v7;
  v10.receiver = v3;
  v10.super_class = v1;
  return objc_msgSendSuper2(&v10, sel_init);
}

id SNCreateFeaturePrintRequest.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DCA682CC(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  id result = sub_1DCA65C54((uint64_t)&v5);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNCreateFeaturePrintRequest.hash.getter()
{
  sub_1DCA682CC(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  return sub_1DCA6138C();
}

BOOL SNCreateFeaturePrintRequest.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC8B9F3C(a1, (uint64_t)&v18, &qword_1EAA9CAB0);
  if (v19)
  {
    sub_1DC87E9CC(&v18, v17);
    sub_1DC87E9DC((uint64_t)v17, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      id v3 = v10;
      char v4 = *(unsigned char *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 16);
      int v5 = *(_DWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 20);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 24);
      uint64_t v7 = *(void *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 40);
      long long v11 = *(_OWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
      char v12 = v4;
      int v13 = v5;
      uint64_t v14 = v6;
      uint64_t v15 = *(void *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 32);
      uint64_t v16 = v7;
      sub_1DCA682CC((uint64_t)v10 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
      BOOL v8 = sub_1DCA60E40((uint64_t)&v11, (uint64_t)&v10);
    }
    else
    {
      BOOL v8 = 0;
    }
    sub_1DC8818D0((uint64_t)v17);
  }
  else
  {
    return 0;
  }
  return v8;
}

id SNCreateFeaturePrintRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNCreateFeaturePrintRequest.init(coder:)(a1);
}

id SNCreateFeaturePrintRequest.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87DD98();
  swift_getObjectType();

  id v4 = sub_1DCA65C54((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNCreateFeaturePrintRequest.encode(with:)(NSCoder with)
{
  long long v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 16);
  v3[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 32);
  sub_1DC87BED0((uint64_t)v3, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNCreateFeaturePrintRequest.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1DCA6621C(long long *a1)
{
  void (*v7)(void *__return_ptr, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  unsigned char *v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned char *v29;
  void v31[6];
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40[8];
  char v41[16];
  uint64_t v42;
  void v43[2];
  char v44[48];
  uint64_t v45;
  unsigned char v46[16];
  void v47[6];
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56[8];

  if (*(void *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl] == 6)
  {
    uint64_t v4 = sub_1DCA642EC(a1, *(void *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 8], v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 16], *(void *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 24], *(void *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 32], *(void *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 40], *(float *)&v1[OBJC_IVAR___SNCreateFeaturePrintRequest_impl + 20]);
    if (!v2) {
      return v4;
    }
  }
  else
  {
    uint64_t v29 = v1;
    uint64_t v5 = MGGetProductType();
    sub_1DC983D28(v5, v40);
    sub_1DC901EB8((uint64_t)v40, (uint64_t)v44, (uint64_t *)&unk_1EAA9E950);
    if (v45)
    {
      char v6 = v44[0];
      sub_1DC8CBC38(v40);
      sub_1DC9836F8(v6, (uint64_t)v41);
      uint64_t v7 = (void (*)(void *__return_ptr, uint64_t))v43[1];
      sub_1DC901EB8((uint64_t)&v42, (uint64_t)v46, (uint64_t *)&unk_1EAAA4140);
      swift_retain();
      sub_1DC8CBCC4((uint64_t)v46);
      sub_1DC901EB8((uint64_t)v43, (uint64_t)v56, &qword_1EAA9E980);
      sub_1DC8CBD50((uint64_t)v56);
      BOOL v8 = swift_release();
      v7(v31, v8);
      swift_release();
      CMTimeValue v9 = v31[0];
      objc_super v10 = v31[1];
      long long v11 = v31[2];
      char v12 = v31[3];
      int v13 = v31[4];
      uint64_t v14 = v31[5];
      uint64_t v15 = v32;
      uint64_t v16 = v33;
      unint64_t v17 = v34;
      long long v18 = v35;
      uint64_t v19 = v36;
      objc_super v20 = v37;
      objc_super v21 = v38;
      uint64_t v22 = v39;
    }
    else
    {
      if (qword_1EAA9D260 != -1) {
        swift_once();
      }
      objc_super v10 = *(void *)algn_1EAAFFAA8;
      char v12 = qword_1EAAFFAB8;
      int v27 = qword_1EAAFFAB0;
      int v28 = qword_1EAAFFAA0;
      uint64_t v14 = qword_1EAAFFAC8;
      uint64_t v26 = qword_1EAAFFAC0;
      uint64_t v25 = byte_1EAAFFAD0;
      uint64_t v16 = byte_1EAAFFAD1;
      unint64_t v17 = byte_1EAAFFAD2;
      long long v18 = byte_1EAAFFAD3;
      uint64_t v19 = byte_1EAAFFAD4;
      objc_super v20 = byte_1EAAFFAD5;
      objc_super v21 = qword_1EAAFFAD8;
      uint64_t v22 = byte_1EAAFFAE0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = v25;
      int v13 = v26;
      long long v11 = v27;
      CMTimeValue v9 = v28;
    }
    v47[0] = v9;
    v47[1] = v10;
    v47[2] = v11;
    v47[3] = v12;
    v47[4] = v13;
    v47[5] = v14;
    uint64_t v48 = v15;
    uint64_t v49 = v16;
    long long v50 = v17;
    long long v51 = v18;
    uint64_t v52 = v19;
    uint64_t v53 = v20;
    id v54 = v21;
    uint64_t v55 = v22;
    int v23 = v29;
    uint64_t v3 = sub_1DC9F26F4((uint64_t)a1, (uint64_t)v47, v23);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

BOOL sub_1DCA66498()
{
  return *(void *)(v0 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl) == 6;
}

void sub_1DCA664B0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DCA66508(a1, a2);
}

void sub_1DCA66508(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl;
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR___SNCreateFeaturePrintRequest_impl);
  if ((unint64_t)(v5 - 4) < 2)
  {
    BOOL v8 = (void *)MEMORY[0x1E01A8D20]();
    CMTimeValue v9 = (void *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 != -1) {
      swift_once();
    }
    uint64_t v10 = swift_allocObject();
    *(unsigned char *)(v10 + 16) = 34;
    MEMORY[0x1F4188790](v10);
    swift_retain();
    goto LABEL_12;
  }
  if (v5 == 3)
  {
    BOOL v8 = (void *)MEMORY[0x1E01A8D20]();
    CMTimeValue v9 = (void *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 != -1) {
      swift_once();
    }
    uint64_t v11 = swift_allocObject();
    *(unsigned char *)(v11 + 16) = 33;
    MEMORY[0x1F4188790](v11);
    swift_retain();
LABEL_12:
    sub_1DCAC3890();
    if (v2)
    {
      swift_release();
      swift_release();
      return;
    }
    uint64_t v7 = v12;
    swift_release();
    swift_release();
    goto LABEL_15;
  }
  if (v5 == 6)
  {
    type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor();
    uint64_t v6 = sub_1DCA63C9C(*(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
    if (v2) {
      return;
    }
    uint64_t v7 = v6;
LABEL_15:
    a2[3] = swift_getObjectType();
    *a2 = v7;
    return;
  }
  sub_1DCA67C5C();
  swift_allocError();
  *int v13 = 1;
  swift_willThrow();
}

uint64_t sub_1DCA668B0(long long *a1)
{
  return sub_1DCA6621C(a1);
}

void sub_1DCA668CC()
{
}

void sub_1DCA668F8()
{
  sub_1DC8E79D0();
  uint64_t v4 = v0;
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v0[14];
  BOOL v6 = v5 < 1;
  uint64_t v7 = v5 - 1;
  if (!v6)
  {
    v0[14] = v7;
    unint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_3:
    swift_bridgeObjectRetain();
    if (v8 >> 62)
    {
      sub_1DC87E988(&qword_1EAA9E960);
      sub_1DCB88C78();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCB89078();
    }
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  CMTimeValue v9 = v3;
  uint64_t v10 = v2;
  uint64_t v11 = self;
  v54.start.CMTimeValue value = 0;
  id v12 = sub_1DCB6B5C0(v11, v10, (uint64_t)&v54);
  CMTimeValue value = (void *)v54.start.value;
  if (!v12)
  {
    id v18 = (id)v54.start.value;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_16;
  }
  uint64_t v52 = v9;
  uint64_t v53 = v12;
  uint64_t v15 = v0[7];
  uint64_t v14 = v0[8];
  swift_bridgeObjectRetain();
  id v16 = value;
  uint64_t v17 = sub_1DCA66EA4(v15, v14, v53);
  if (v1)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    sub_1DC8E7890();
    sub_1DC8E7A74();
    return;
  }
  uint64_t v19 = (void *)v17;
  swift_bridgeObjectRelease();
  uint64_t v20 = v4[9];
  id v21 = objc_allocWithZone((Class)type metadata accessor for SNFeaturePrint());
  id v51 = v19;
  uint64_t v22 = (char *)sub_1DCA94C18(v20, v51);
  v54.start.CMTimeValue value = 0;
  id v23 = sub_1DCB6C41C(v11, v10, (uint64_t)&v54);
  if (!v23)
  {
    id v42 = (id)v54.start.value;
    sub_1DCB86898();

    swift_willThrow();
    swift_unknownObjectRelease();

    goto LABEL_16;
  }
  int v24 = v23;
  long long v50 = v22;
  id v25 = (id)v54.start.value;
  int64_t v26 = sub_1DCB89168();
  int32_t v27 = sub_1DCB5C99C((uint64_t)v10);
  if (v27 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v49 = v24;
  CMTimeMake(&v54.start, v26, v27);
  CMTimeValue v48 = v54.start.value;
  uint64_t v28 = *(void *)&v54.start.timescale;
  CMTimeEpoch epoch = v54.start.epoch;
  sub_1DCA683A4();
  uint64_t v29 = v4[5];
  if (v29)
  {
    sub_1DC881A8C(v4 + 2, v4[5]);
    sub_1DC88D538();
    uint64_t v31 = v30;
    MEMORY[0x1F4188790](v32);
    uint64_t v34 = (char *)&epoch - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v34);
    uint64_t v35 = sub_1DCA59AC0();
    unsigned int v37 = v36(v35);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v29);
    int32_t v38 = sub_1DCB5C99C((uint64_t)v10);
    if ((v38 & 0x80000000) == 0)
    {
      CMTimeMake(&v54.start, v37, v38);
      CMTime start = v54.start;
      v56.CMTimeValue value = v48;
      *(void *)&v56.timescale = v28;
      v56.CMTimeEpoch epoch = epoch;
      CMTimeRangeMake(&v54, &v56, &start);
      CMTimeRange v62 = v54;
      uint64_t v39 = v52;
      v52();
      uint64_t v40 = v51;
      uint64_t v41 = sub_1DCB883C8();
      ((void (*)(uint64_t))v39)(v41);
      sub_1DCB883D8();
      uint64_t v43 = v61;
      uint64_t v44 = v50;
      uint64_t v45 = &v50[OBJC_IVAR___SNFeaturePrint_impl];
      *(void *)uint64_t v45 = v57;
      *((void *)v45 + 1) = v58;
      *((_OWORD *)v45 + 1) = v59;
      *((void *)v45 + 4) = v60;
      *((void *)v45 + 5) = v43;
      sub_1DC87E988(&qword_1EAA9C720);
      CMTimeValue v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1DCBB8670;
      *(void *)(v46 + 32) = v44;
      v54.start.CMTimeValue value = v46;
      sub_1DCB87C68();
      unint64_t v8 = v54.start.value;
      swift_unknownObjectRelease();

      goto LABEL_3;
    }
LABEL_19:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DCA66EA4(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a2)
  {
    CMTimeValue v9 = (void *)sub_1DC8E7890();
    uint64_t v10 = sub_1DCA67594(v9);
    if (v3) {
      return sub_1DC8E7890();
    }
    id v6 = (id)v10;
LABEL_6:
    if (objc_msgSend(v6, sel_type) == (id)5)
    {
      if (objc_msgSend(v6, sel_multiArrayValue))
      {

        return sub_1DC8E7890();
      }
      sub_1DC884E74();
      sub_1DC883884();
      *id v12 = 0;
    }
    else
    {
      type metadata accessor for SNError();
      sub_1DCA6847C();
      sub_1DC931D18(0x80000001DCB90E90, v11, (uint64_t)"Feature extractor should only use MultiArray features");
    }
    swift_willThrow();

    return sub_1DC8E7890();
  }
  uint64_t v5 = (void *)sub_1DCB87908();
  id v6 = objc_msgSend(a3, sel_featureValueForName_, v5);

  if (v6) {
    goto LABEL_6;
  }
  sub_1DC884E74();
  uint64_t v7 = sub_1DC883884();
  sub_1DC981FC0(v7, v8);
  return sub_1DC8E7890();
}

uint64_t sub_1DCA66FD0()
{
  sub_1DCA683A4();
  sub_1DC8B9F3C(v0 + 16, (uint64_t)&v4, &qword_1EAAA6640);
  if (v5)
  {
    sub_1DC8BA1CC(&v4, (uint64_t)v6);
    sub_1DC881A8C(v6, v6[3]);
    uint64_t v1 = sub_1DCA68414();
    v2(v1);
    sub_1DC8818D0((uint64_t)v6);
  }
  else
  {
    sub_1DC901A64((uint64_t)&v4, &qword_1EAAA6640);
    sub_1DCA67AF8();
    sub_1DC883884();
    swift_willThrow();
  }
  return sub_1DC8E7890();
}

void *sub_1DCA670A4(double a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = sub_1DCA62BE4(v5);
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    unint64_t v10 = 0xD000000000000014;
    unint64_t v11 = 0x80000001DCB943A0;
    unint64_t v12 = 0x80000001DCB943C0;
    unint64_t v13 = 0xD000000000000012;
    if (v5 != 4)
    {
      unint64_t v13 = 0;
      unint64_t v12 = 0;
    }
    if (v5 != 5)
    {
      unint64_t v10 = v13;
      unint64_t v11 = v12;
    }
    *(void *)(v3 + 56) = v10;
    *(void *)(v3 + 64) = v11;
    swift_bridgeObjectRelease();
    id result = (*(void *(**)(void *__return_ptr, void, void, void, uint64_t, uint64_t, double, float))(v9 + 8))(v16, *(void *)(v3 + 84), *(void *)(v3 + 92), *(void *)(v3 + 100), v8, v9, a1, *(float *)(v3 + 80));
    if (!v2)
    {
      sub_1DCA60D04((uint64_t)v16, (uint64_t)v17);
      sub_1DC901A64((uint64_t)v16, &qword_1EAAA6640);
      swift_beginAccess();
      sub_1DCA67B44((uint64_t)v17, v3 + 16);
      return (void *)swift_endAccess();
    }
  }
  else
  {
    sub_1DC884E74();
    sub_1DC883884();
    *uint64_t v15 = 0;
    return (void *)swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA6721C()
{
  sub_1DCA683A4();
  uint64_t result = sub_1DC8B9F3C(v0 + 16, (uint64_t)v5, &qword_1EAAA6640);
  if (v6)
  {
    sub_1DC881A8C(v5, v6);
    uint64_t v2 = sub_1DCA68414();
    uint64_t v4 = v3(v2);
    sub_1DC8818D0((uint64_t)v5);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1DCA672B4()
{
  uint64_t v3 = v0;
  v28[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)(v0 + 16);
  sub_1DCA683A4();
  uint64_t v5 = *(void *)(v3 + 40);
  if (!v5) {
LABEL_32:
  }
    __break(1u);
  uint64_t v6 = *(void *)(v3 + 48);
  sub_1DC881A8C(v4, *(void *)(v3 + 40));
  sub_1DC88D538();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC8C1FC4();
  (*(void (**)(uint64_t))(v8 + 16))(v2);
  unsigned int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v5);
  float v11 = *(float *)(v3 + 80) * (float)v10;
  if ((~LODWORD(v11) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v11 <= -9.2234e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 >= 9.2234e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = v10 - (uint64_t)v11;
  if (__OFSUB__(v10, (uint64_t)v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  double v13 = ceil((double)v10 / (double)v12);
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(void *)(v3 + 112) = (uint64_t)v13;
  if (!v12)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v14 = v10 % v12;
  BOOL v15 = __OFSUB__(v12, v14);
  uint64_t v16 = v12 - v14;
  if (v15)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 == -1 && v16 == 0x8000000000000000) {
    goto LABEL_31;
  }
  uint64_t v18 = v16 % v12;
  uint64_t v19 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v20 = (void *)sub_1DCA6721C();
  if (!v1)
  {
    id v21 = v20;
    sub_1DCB5CD10(v20, 1);

    uint64_t v22 = (void *)sub_1DCA66FD0();
    uint64_t v23 = self;
    v28[0] = 0;
    int v24 = sub_1DCB6BD18(v23, v22, v19, (uint64_t)v28);

    if (v24)
    {
      id v25 = v28[0];
      int64_t v26 = (void *)sub_1DCA6721C();
      sub_1DCB5CD10(v26, 0);
    }
    else
    {
      id v27 = v28[0];
      sub_1DCB86898();

      swift_willThrow();
    }
  }
}

uint64_t sub_1DCA67594(void *a1)
{
  id v2 = objc_msgSend(a1, sel_featureNames);
  uint64_t v3 = sub_1DCB87FE8();

  uint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v4 != 1)
  {
    type metadata accessor for SNError();
    sub_1DCA6847C();
    sub_1DC931D18(0x80000001DCB90E90, v12, (uint64_t)"Feature extractor should have only one output feature");
    goto LABEL_6;
  }
  id v5 = objc_msgSend(a1, sel_featureNames);
  uint64_t v6 = sub_1DCB87FE8();

  sub_1DC9A4474(v6);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (!v8
    || (sub_1DCA59AC0(),
        uint64_t v9 = (void *)sub_1DCB87908(),
        swift_bridgeObjectRelease(),
        id v10 = objc_msgSend(a1, sel_featureValueForName_, v9),
        v9,
        !v10))
  {
    sub_1DC884E74();
    sub_1DC883884();
    *float v11 = 0;
LABEL_6:
    swift_willThrow();
  }
  return sub_1DC8E7890();
}

uint64_t sub_1DCA676F4()
{
  sub_1DC901A64(v0 + 16, &qword_1EAAA6640);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1DCA6773C()
{
}

void sub_1DCA67754()
{
}

uint64_t sub_1DCA6776C()
{
  return sub_1DCA6721C();
}

void *sub_1DCA67784(double a1)
{
  return sub_1DCA670A4(a1);
}

uint64_t sub_1DCA6779C()
{
  return sub_1DCA66FD0();
}

uint64_t type metadata accessor for SNVGGishExtractor()
{
  return self;
}

uint64_t type metadata accessor for SNLogMelSpectrogramExtractor()
{
  return self;
}

uint64_t type metadata accessor for SNSoundPrintExtractorBase()
{
  return self;
}

uint64_t type metadata accessor for SNSoundPrintAExtractor()
{
  return self;
}

uint64_t type metadata accessor for SNSoundPrintKExtractor()
{
  return self;
}

uint64_t type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor()
{
  return self;
}

uint64_t type metadata accessor for SNCreateFeaturePrintRequest()
{
  return self;
}

uint64_t method lookup function for SNCreateFeaturePrintRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNCreateFeaturePrintRequest);
}

uint64_t type metadata accessor for SNFeaturePrintExtractor()
{
  return self;
}

ValueMetadata *type metadata accessor for CreateFeaturePrintRequest()
{
  return &type metadata for CreateFeaturePrintRequest;
}

unint64_t sub_1DCA67900()
{
  unint64_t result = qword_1EAAA6620;
  if (!qword_1EAAA6620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6620);
  }
  return result;
}

uint64_t sub_1DCA6794C()
{
  return sub_1DC88389C();
}

void sub_1DCA67958(uint64_t a1@<X8>)
{
  sub_1DCA619D4(a1, *(float *)(v1 + 16));
}

unint64_t sub_1DCA67978()
{
  unint64_t result = qword_1EAAA6628;
  if (!qword_1EAAA6628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6628);
  }
  return result;
}

uint64_t sub_1DCA679C4()
{
  return sub_1DC88389C();
}

void sub_1DCA679D0(uint64_t a1@<X8>)
{
  sub_1DCA62DBC(a1, *(float *)(v1 + 16));
}

unint64_t sub_1DCA679F0()
{
  unint64_t result = qword_1EAAA6630;
  if (!qword_1EAAA6630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6630);
  }
  return result;
}

uint64_t sub_1DCA67A3C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA67A74@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCA632D0(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), a1, *(float *)(v1 + 56));
}

unint64_t sub_1DCA67AA0()
{
  unint64_t result = qword_1EAAA6638;
  if (!qword_1EAAA6638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6638);
  }
  return result;
}

uint64_t sub_1DCA67AEC()
{
  return sub_1DC88389C();
}

unint64_t sub_1DCA67AF8()
{
  unint64_t result = qword_1EAAA6648;
  if (!qword_1EAAA6648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6648);
  }
  return result;
}

uint64_t sub_1DCA67B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA6640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DCA67BAC()
{
  unint64_t result = qword_1EAAA6658;
  if (!qword_1EAAA6658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6658);
  }
  return result;
}

uint64_t sub_1DCA67BF8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA6660);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCA67C5C()
{
  unint64_t result = qword_1EAAA6680;
  if (!qword_1EAAA6680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6680);
  }
  return result;
}

uint64_t sub_1DCA67CA8()
{
  return sub_1DC88389C();
}

uint64_t sub_1DCA67CB4()
{
  return sub_1DC88389C();
}

uint64_t sub_1DCA67CC0()
{
  return sub_1DC88389C();
}

uint64_t sub_1DCA67CCC(uint64_t a1)
{
  return sub_1DCA64EB4(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_1DCA67CD8()
{
  return sub_1DC88389C();
}

id sub_1DCA67CE4@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_1DCA650C8(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a3);
}

unsigned char *storeEnumTagSinglePayload for SNCreateFeaturePrintRequest.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA67DC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNCreateFeaturePrintRequest.DomainError()
{
  return &type metadata for SNCreateFeaturePrintRequest.DomainError;
}

ValueMetadata *type metadata accessor for CreateFeaturePrintRequest.CodingKeys()
{
  return &type metadata for CreateFeaturePrintRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SNFeaturePrintExtractor.DomainError()
{
  return &type metadata for SNFeaturePrintExtractor.DomainError;
}

unsigned char *_s13SoundAnalysis25CreateFeaturePrintRequestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA67EF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNLanguageAlignedAudioEmbeddingFeatureExtractor.DomainError()
{
  return &type metadata for SNLanguageAlignedAudioEmbeddingFeatureExtractor.DomainError;
}

ValueMetadata *type metadata accessor for CreateFeaturePrintUtils.DomainError()
{
  return &type metadata for CreateFeaturePrintUtils.DomainError;
}

unsigned char *_s13SoundAnalysis23SNFeaturePrintExtractorC11DomainErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA67FD4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNVGGishExtractor.DomainError()
{
  return &type metadata for SNVGGishExtractor.DomainError;
}

unint64_t sub_1DCA68010()
{
  unint64_t result = qword_1EAAA66B8;
  if (!qword_1EAAA66B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA66B8);
  }
  return result;
}

unint64_t sub_1DCA68060()
{
  unint64_t result = qword_1EAAA66C0;
  if (!qword_1EAAA66C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA66C0);
  }
  return result;
}

unint64_t sub_1DCA680B0()
{
  unint64_t result = qword_1EAAA66C8;
  if (!qword_1EAAA66C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA66C8);
  }
  return result;
}

unint64_t sub_1DCA68100()
{
  unint64_t result = qword_1EAAA66D0;
  if (!qword_1EAAA66D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA66D0);
  }
  return result;
}

unint64_t sub_1DCA68150()
{
  unint64_t result = qword_1EAAA66D8;
  if (!qword_1EAAA66D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA66D8);
  }
  return result;
}

unint64_t sub_1DCA681A0()
{
  unint64_t result = qword_1EAAA66E0;
  if (!qword_1EAAA66E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA66E0);
  }
  return result;
}

unint64_t sub_1DCA681F0()
{
  unint64_t result = qword_1EAAA66E8;
  if (!qword_1EAAA66E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA66E8);
  }
  return result;
}

unint64_t sub_1DCA68240()
{
  unint64_t result = qword_1EAAA66F0;
  if (!qword_1EAAA66F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA66F0);
  }
  return result;
}

id sub_1DCA68290()
{
  return sub_1DCA63AD0();
}

uint64_t sub_1DCA682A8()
{
  return sub_1DCA63AAC();
}

double sub_1DCA682CC@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 32);
}

uint64_t sub_1DCA68300()
{
  return v0;
}

uint64_t sub_1DCA68330()
{
  return sub_1DCB87908();
}

uint64_t sub_1DCA68360()
{
  return sub_1DCB88C68();
}

uint64_t sub_1DCA68388()
{
  return v0;
}

uint64_t sub_1DCA683A4()
{
  return swift_beginAccess();
}

uint64_t sub_1DCA683C0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_1DCA683D8()
{
  return v0;
}

uint64_t sub_1DCA683F0(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1DCA631B8(a1, a2, v5, v4, v3, a3, v7);
}

uint64_t sub_1DCA68414()
{
  return v0;
}

double sub_1DCA6842C@<D0>(uint64_t a1@<X8>)
{
  *(void *)uint64_t v1 = a1;
  double result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 33) = 0u;
  return result;
}

uint64_t sub_1DCA68444()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1DCA68464()
{
  return sub_1DCB86898();
}

uint64_t sub_1DCA68490()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DCA684C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = nullsub_1(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1DCA684E8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA6A144();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA68524(uint64_t a1)
{
  unint64_t v2 = sub_1DCA6A144();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1DCA68560(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1DC881A8C(a1, a1[3]);
  sub_1DCB89288();
  if (v2)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    sub_1DC881A8C(v11, v11[3]);
    sub_1DCA6C1B0();
    sub_1DCB89038();
    uint64_t v6 = v10;
    uint64_t v9 = v10;
    uint64_t v7 = sub_1DC87E988(&qword_1EAAA6728);
    sub_1DCA073E4((uint64_t)&v9, v7, a2, (uint64_t)&v10);

    uint64_t v5 = v10;
    sub_1DC8818D0((uint64_t)v11);
    sub_1DC8818D0((uint64_t)a1);
  }
  return v5;
}

uint64_t sub_1DCA6867C(void *a1, void *a2)
{
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB892A8();
  sub_1DC89D39C((uint64_t)v5, v6);
  sub_1DCA6C318();
  id v3 = a2;
  sub_1DCB89058();

  return sub_1DC8818D0((uint64_t)v5);
}

uint64_t sub_1DCA68734(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C437463656A626FLL && a2 == 0xEB00000000737361;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F437463656A626FLL && a2 == 0xED0000746E65746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA68860(char a1)
{
  if (a1) {
    return 0x6F437463656A626FLL;
  }
  else {
    return 0x6C437463656A626FLL;
  }
}

void *sub_1DCA688AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_1DCA68560(a1, *(void *)(a2 + 16));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1DCA688DC(void *a1)
{
  return sub_1DCA6867C(a1, *v1);
}

uint64_t sub_1DCA688F8()
{
  return sub_1DCA68860(*v0);
}

uint64_t sub_1DCA68900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA68734(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DCA68928(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DCA68934(uint64_t a1)
{
  unint64_t v2 = sub_1DCA6C4C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA68970(uint64_t a1)
{
  unint64_t v2 = sub_1DCA6C4C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

char *sub_1DCA689AC(void *a1)
{
  sub_1DC87E988(&qword_1EAAA6700);
  sub_1DC89D4E0();
  uint64_t v35 = v3;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  char v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v32 - v8;
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA6748);
  sub_1DC89D4E0();
  uint64_t v36 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC89D970();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA6C4C0();
  uint64_t v13 = (uint64_t)v37;
  sub_1DCB89298();
  if (!v13)
  {
    uint64_t v33 = v7;
    uint64_t v34 = v9;
    unsigned int v37 = a1;
    char v40 = 0;
    sub_1DCB88DA8();
    uint64_t v14 = (NSString *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    Class v15 = NSClassFromString(v14);

    if (v15
      && (swift_getObjCClassMetadata(),
          int32_t v38 = &unk_1F381A838,
          (uint64_t v16 = swift_dynamicCastTypeToObjCProtocolConditional()) != 0)
      && (uint64_t v17 = v16, sub_1DCA6C540(), sub_1DCA6C50C(v17)))
    {
      char v39 = 1;
      sub_1DCA6A144();
      sub_1DCB88D58();
      v32[1] = v10;
      uint64_t v9 = v33;
      sub_1DC8E7D10();
      v18();
      id v19 = objc_allocWithZone((Class)type metadata accessor for DecoderByNSCoding(0));
      id v20 = sub_1DCA6A190((uint64_t)v9);
      uint64_t v23 = v20;
      int v24 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, v20);
      if (v24)
      {
        uint64_t v9 = v24;

        uint64_t v25 = sub_1DCA6C7E8();
        v26(v25);
        sub_1DCA36D64();
        v27();
        sub_1DC8818D0((uint64_t)v37);
        return v9;
      }
      sub_1DC881A40();
      swift_allocError();
      *uint64_t v28 = 1;
      swift_willThrow();

      uint64_t v29 = sub_1DCA6C7E8();
      v30(v29);
      sub_1DCA36D64();
      v31();
    }
    else
    {
      sub_1DC881A40();
      swift_allocError();
      *id v21 = 0;
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v1, v10);
    }
    a1 = v37;
  }
  sub_1DC8818D0((uint64_t)a1);
  return v9;
}

uint64_t sub_1DCA68D4C(void *a1, void *a2)
{
  sub_1DC87E988(&qword_1EAAA6720);
  sub_1DC89D4E0();
  uint64_t v22 = v5;
  uint64_t v23 = v4;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v21 - v7;
  sub_1DC87E988(qword_1EAAA6758);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA6C4C0();
  sub_1DCB892B8();
  id v21 = a2;
  uint64_t v10 = NSStringFromClass((Class)objc_msgSend(a2, sel_classForCoder));
  sub_1DCB87938();

  char v26 = 0;
  uint64_t v11 = v24;
  sub_1DCB88EC8();
  if (v11)
  {
    uint64_t v12 = sub_1DCA6C82C();
    v13(v12);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v25 = 1;
    sub_1DCA6A144();
    sub_1DCB88E88();
    type metadata accessor for EncoderByNSCoding(0);
    uint64_t v16 = v22;
    uint64_t v15 = v23;
    sub_1DC8E7D10();
    v17();
    id v18 = sub_1DCA68FBC();
    objc_msgSend(v21, sel_encodeWithCoder_, v18);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    uint64_t v19 = sub_1DCA6C82C();
    return v20(v19);
  }
}

id sub_1DCA68FBC()
{
  id v1 = objc_allocWithZone(v0);
  sub_1DC87E988(&qword_1EAAA6720);
  sub_1DC913CA0();
  sub_1DC8E7D10();
  v2();
  v6.receiver = v1;
  v6.super_class = v0;
  id v3 = objc_msgSendSuper2(&v6, sel_init);
  sub_1DCA36D64();
  v4();
  return v3;
}

char *sub_1DCA69070@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  uint64_t result = sub_1DCA689AC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DCA6909C(void *a1)
{
  return sub_1DCA68D4C(a1, *v1);
}

uint64_t sub_1DCA690B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA6918C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA69260()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA69364()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA69428()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA694EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA695A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA6966C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA69730()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA69888()
{
  return sub_1DCA6918C();
}

void sub_1DCA69970()
{
}

void sub_1DCA699BC(uint64_t a1)
{
  sub_1DC87E920(a1, (uint64_t)&v5);
  if (v6)
  {
    sub_1DC87E9CC(&v5, v4);
    sub_1DC87E9DC((uint64_t)v4, (uint64_t)v3);
    sub_1DC87E988(&qword_1EAAA6728);
    swift_dynamicCast();
    sub_1DC8818D0((uint64_t)v4);
    id v1 = v7;
  }
  else
  {
    id v1 = 0;
  }
  id v2 = v1;
  sub_1DCA69260();
}

uint64_t sub_1DCA69B98()
{
  return sub_1DCA694EC();
}

uint64_t sub_1DCA69BF0()
{
  return sub_1DCA694EC();
}

uint64_t sub_1DCA69C30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = sub_1DCB87938();
  uint64_t v10 = v9;
  id v11 = a1;
  a5(a3, v8, v10);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA69DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1DC9E1088(a1, a2);
  unint64_t v4 = v3;
  sub_1DCA69730();

  return sub_1DC881920(v2, v4);
}

uint64_t sub_1DCA69EA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = sub_1DCB87938();
  uint64_t v10 = v9;
  id v11 = a1;
  a5(a3, v8, v10);

  return swift_bridgeObjectRelease();
}

void sub_1DCA69F28()
{
}

void sub_1DCA69FC0()
{
}

uint64_t sub_1DCA6A070()
{
  return type metadata accessor for EncoderByNSCoding(0);
}

uint64_t type metadata accessor for EncoderByNSCoding(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAA9D168);
}

void sub_1DCA6A098()
{
  sub_1DCA6C0A0(319, &qword_1EAA9D1A8, MEMORY[0x1E4FBBDE0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_1DCA6A144()
{
  unint64_t result = qword_1EAA9D190;
  if (!qword_1EAA9D190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9D190);
  }
  return result;
}

id sub_1DCA6A190(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA6700);
  sub_1DC913CA0();
  uint64_t v7 = v6;
  sub_1DC8E7D10();
  v8();
  uint64_t v9 = v2;
  sub_1DC87E988(&qword_1EAAA3E30);
  *(void *)&v9[OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decodedByteBuffers] = sub_1DCB877D8();

  v12.receiver = v9;
  v12.super_class = ObjectType;
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
  return v10;
}

id sub_1DCA6A2A0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decodedByteBuffers];
  swift_beginAccess();
  sub_1DCA21AF4(v16, *(void *)v2);
  uint64_t v3 = v16[0];
  uint64_t v4 = v16[1];
  int64_t v5 = v16[3];
  unint64_t v6 = v16[4];
  int64_t v7 = (unint64_t)(v16[2] + 64) >> 6;
  id result = (id)swift_bridgeObjectRetain_n();
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_24;
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v13 = v5 + 6;
              if (v5 + 6 >= v7) {
                goto LABEL_24;
              }
              unint64_t v12 = *(void *)(v4 + 8 * v13);
              if (!v12)
              {
                int64_t v14 = v5 + 7;
                while (v14 < v7)
                {
                  unint64_t v12 = *(void *)(v4 + 8 * v14++);
                  if (v12)
                  {
                    int64_t v13 = v14 - 1;
                    goto LABEL_21;
                  }
                }
LABEL_24:
                swift_bridgeObjectRelease();
                swift_release();
                v15.receiver = v0;
                v15.super_class = ObjectType;
                return objc_msgSendSuper2(&v15, sel_dealloc);
              }
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
LABEL_22:
    id result = *(id *)(*(void *)(v3 + 56) + 16 * v10);
    if (result) {
      id result = (id)MEMORY[0x1E01A99C0](result, -1, -1);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA6A4FC()
{
  return type metadata accessor for DecoderByNSCoding(0);
}

uint64_t type metadata accessor for DecoderByNSCoding(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAA9D150);
}

uint64_t sub_1DCA6A524(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v5);
  v10[0] = a1;
  v10[1] = a2;
  sub_1DC9BFD10();
  sub_1DCB88DF8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DCA6A664(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC87E988(&qword_1EAAA6708);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[1] = a1;
  void v11[2] = a2;
  sub_1DCA6C2A8(&qword_1EAAA6710, (void (*)(void))sub_1DCA6C1B0);
  sub_1DCB88DF8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3) {
    return v11[3];
  }
  return result;
}

uint64_t sub_1DCA6A7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v12[0] = a1;
  v12[1] = a2;
  sub_1DCB88DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3) {
    char v10 = v13;
  }
  return v10 & 1;
}

uint64_t sub_1DCA6A934(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1DCB88DF8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3) {
    return v12;
  }
  return result;
}

uint64_t sub_1DCA6AA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1DCB88DF8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3) {
    return v11[3];
  }
  return result;
}

uint64_t sub_1DCA6ABC4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1DCB88DF8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3) {
    return v11[3];
  }
  return result;
}

double sub_1DCA6AD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1DCB88DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3) {
    return *(double *)&v11[3];
  }
  return result;
}

float sub_1DCA6AE54(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v6);
  v11[0] = a1;
  v11[1] = a2;
  sub_1DCB88DF8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v3) {
    return v12;
  }
  return result;
}

uint64_t sub_1DCA6AF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v5);
  v10[0] = a1;
  v10[1] = a2;
  sub_1DC89C0C0();
  sub_1DCB88DF8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DCA6B0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA6700);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decoder, v5);
  v10[0] = a1;
  v10[1] = a2;
  sub_1DC89C600();
  sub_1DCB88DF8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DCA6B224()
{
  sub_1DC87E988(&qword_1EAAA6700);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v0);
  sub_1DC89D970();
  sub_1DC8E7D10();
  v1();
  char v2 = sub_1DCB88E68();
  sub_1DCA36D64();
  v5(v3, v4);
  return v2 & 1;
}

uint64_t sub_1DCA6B310(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = 0;
  if (sub_1DCA6B224())
  {
    uint64_t v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13SoundAnalysis17DecoderByNSCoding_decodedByteBuffers);
    swift_beginAccess();
    uint64_t v9 = *v8;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1DC96159C(a1, a2, v9);
    uint64_t v11 = v10;
    LOBYTE(v9) = v12;
    swift_bridgeObjectRelease();
    if (v9)
    {
      swift_endAccess();
      sub_1DCA6A524(a1, a2);
      uint64_t v11 = sub_1DCB86AF8();
      uint64_t v7 = swift_slowAlloc();
      switch(v17 >> 62)
      {
        case 1uLL:
          if (v16 >> 32 < (int)v16) {
            __break(1u);
          }
          swift_retain();
          sub_1DCA6C1FC((int)v16, v16 >> 32);
          sub_1DC881920(v16, v17);
          break;
        case 2uLL:
          uint64_t v14 = *(void *)(v16 + 24);
          uint64_t v15 = *(void *)(v16 + 16);
          swift_retain();
          swift_retain();
          sub_1DCA6C1FC(v15, v14);
          swift_release();
          swift_release();
          break;
        default:
          sub_1DCB88778();
          break;
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1DCA57CE4();
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1DC881920(v16, v17);
      if (a3) {
        goto LABEL_4;
      }
    }
    else
    {
      swift_endAccess();
      if (a3) {
LABEL_4:
      }
        *a3 = v11;
    }
  }
  return v7;
}

uint64_t sub_1DCA6B684@<X0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1DCA6B224();
  if (result)
  {
    uint64_t v5 = sub_1DCA6C804();
    uint64_t v7 = sub_1DCA6A664(v5, v6);
    if (a1)
    {
      sub_1DCA6C7C8();
      uint64_t result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      uint64_t v8 = v7;
      if (v7)
      {
        *((void *)&v10 + 1) = swift_getObjectType();
        *(void *)&long long v9 = v8;
      }
      else
      {
        long long v9 = 0u;
        long long v10 = 0u;
      }
      return sub_1DC8819D8((uint64_t)&v9, (uint64_t)a2);
    }
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1DCA6B888()
{
  if ((sub_1DCA6C814() & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v1 = sub_1DCA6C7D8();
  char v3 = sub_1DCA6A7E8(v1, v2);
  if (v0)
  {
    sub_1DCA6C7C8();
    swift_unexpectedError();
    __break(1u);
LABEL_4:
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1DCA6B900(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_1DCB87938();
  uint64_t v8 = v7;
  id v9 = a1;
  LOBYTE(a4) = a4(v6, v8);

  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_1DCA6B98C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  char v6 = sub_1DCA6B224();
  uint64_t result = 0;
  if (v6) {
    return a3(a1, a2);
  }
  return result;
}

uint64_t sub_1DCA6BA24(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_1DCB87938();
  uint64_t v8 = v7;
  id v9 = a1;
  uint64_t v10 = sub_1DCA6B98C(v6, v8, a4);

  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DCA6BA9C(uint64_t a1, uint64_t a2)
{
  if (sub_1DCA6B224())
  {
    uint64_t v3 = sub_1DCA6C804();
    uint64_t result = sub_1DCA6A934(v3, v4);
    if (!a2) {
      return result;
    }
    sub_1DCA6C840();
    __break(1u);
  }
  return 0;
}

uint64_t sub_1DCA6BB04(void *a1)
{
  uint64_t v2 = sub_1DCB87938();
  uint64_t v4 = v3;
  id v5 = a1;
  uint64_t v6 = sub_1DCA6BA9C(v2, v4);

  swift_bridgeObjectRelease();
  return v6;
}

void sub_1DCA6BB6C()
{
  if (sub_1DCA6C814())
  {
    uint64_t v1 = sub_1DCA6C7D8();
    sub_1DCA6AD0C(v1, v2);
    if (v0)
    {
      sub_1DCA6C7C8();
      swift_unexpectedError();
      __break(1u);
    }
  }
}

void sub_1DCA6BC34()
{
  if (sub_1DCA6C814())
  {
    uint64_t v1 = sub_1DCA6C7D8();
    sub_1DCA6AE54(v1, v2);
    if (v0)
    {
      sub_1DCA6C7C8();
      swift_unexpectedError();
      __break(1u);
    }
  }
}

uint64_t sub_1DCA6BCFC()
{
  if ((sub_1DCA6C814() & 1) == 0) {
    return *MEMORY[0x1E4F1F9F8];
  }
  uint64_t v1 = sub_1DCA6C7D8();
  sub_1DCA6AF9C(v1, v2);
  if (!v0) {
    return v4;
  }
  sub_1DCA6C7C8();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1DCA6BE08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DCA6B224();
  if ((result & 1) == 0)
  {
    uint64_t v7 = *MEMORY[0x1E4F1FA20];
    uint64_t v8 = *(void *)(MEMORY[0x1E4F1FA20] + 8);
    long long v9 = *(_OWORD *)(MEMORY[0x1E4F1FA20] + 16);
    uint64_t v10 = *(void *)(MEMORY[0x1E4F1FA20] + 32);
    uint64_t v11 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
    goto LABEL_5;
  }
  uint64_t v5 = sub_1DCA6C804();
  uint64_t result = sub_1DCA6B0DC(v5, v6);
  if (!a1)
  {
    uint64_t v7 = v12;
    uint64_t v8 = v13;
    long long v9 = v14;
    uint64_t v10 = v15;
    uint64_t v11 = v16;
LABEL_5:
    *(void *)a2 = v7;
    *(void *)(a2 + 8) = v8;
    *(_OWORD *)(a2 + 16) = v9;
    *(void *)(a2 + 32) = v10;
    *(void *)(a2 + 40) = v11;
    return result;
  }
  sub_1DCA6C7C8();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1DCA6BF5C()
{
}

void sub_1DCA6BFA8()
{
}

void sub_1DCA6BFE8()
{
  sub_1DCA6C0A0(319, &qword_1EAA9D1A0, MEMORY[0x1E4FBBDC0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1DCA6C0A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1DCA6A144();
    unint64_t v7 = a3(a1, &unk_1F37F4488, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void type metadata accessor for StringKey()
{
}

unint64_t sub_1DCA6C114()
{
  unint64_t result = qword_1EAA9D188;
  if (!qword_1EAA9D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9D188);
  }
  return result;
}

unint64_t sub_1DCA6C164()
{
  unint64_t result = qword_1EAA9D198;
  if (!qword_1EAA9D198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9D198);
  }
  return result;
}

unint64_t sub_1DCA6C1B0()
{
  unint64_t result = qword_1EAAA6718;
  if (!qword_1EAAA6718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6718);
  }
  return result;
}

uint64_t sub_1DCA6C1FC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1DCB867D8();
  if (!result || (uint64_t result = sub_1DCB86808(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1DCB867F8();
      return sub_1DCB88778();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA6C2A8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA6708);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCA6C318()
{
  unint64_t result = qword_1EAAA6738;
  if (!qword_1EAAA6738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6738);
  }
  return result;
}

void type metadata accessor for CodableByNSCoding()
{
}

unsigned char *sub_1DCA6C370(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA6C43CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for CodableUtils.DomainError()
{
}

unint64_t sub_1DCA6C474()
{
  unint64_t result = qword_1EAAA6740;
  if (!qword_1EAAA6740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6740);
  }
  return result;
}

unint64_t sub_1DCA6C4C0()
{
  unint64_t result = qword_1EAAA6750;
  if (!qword_1EAAA6750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6750);
  }
  return result;
}

uint64_t sub_1DCA6C50C(uint64_t a1)
{
  if (swift_dynamicCastMetatype()) {
    return a1;
  }
  else {
    return 0;
  }
}

unint64_t sub_1DCA6C540()
{
  unint64_t result = qword_1EAA9C7B0;
  if (!qword_1EAA9C7B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAA9C7B0);
  }
  return result;
}

unsigned char *sub_1DCA6C580(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA6C64CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for CodableByNSCoding.CodingKeys()
{
}

uint64_t type metadata accessor for TypedCodableByNSCoding()
{
  return sub_1DC8866E4();
}

unint64_t sub_1DCA6C69C()
{
  unint64_t result = qword_1EAAA67E0;
  if (!qword_1EAAA67E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA67E0);
  }
  return result;
}

unint64_t sub_1DCA6C6EC()
{
  unint64_t result = qword_1EAAA67E8;
  if (!qword_1EAAA67E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA67E8);
  }
  return result;
}

unint64_t sub_1DCA6C73C()
{
  unint64_t result = qword_1EAAA67F0;
  if (!qword_1EAAA67F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA67F0);
  }
  return result;
}

uint64_t sub_1DCA6C78C()
{
  return sub_1DCB88C68();
}

uint64_t sub_1DCA6C7C8()
{
  return v0;
}

uint64_t sub_1DCA6C7D8()
{
  return v0;
}

uint64_t sub_1DCA6C7E8()
{
  return v0;
}

uint64_t sub_1DCA6C804()
{
  return v0;
}

uint64_t sub_1DCA6C814()
{
  return sub_1DCA6B224();
}

uint64_t sub_1DCA6C82C()
{
  return v0;
}

uint64_t sub_1DCA6C840()
{
  return swift_unexpectedError();
}

uint64_t sub_1DCA6C860(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1DC8988BC();
    uint64_t v5 = v13;
    unsigned int v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      swift_retain();
      if (v10 >= v9 >> 1) {
        sub_1DC8988BC();
      }
      v6 += 2;
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = (void *)(v13 + 24 * v10);
      void v11[4] = v7;
      v11[5] = v8;
      void v11[6] = a2;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

unsigned __int8 *sub_1DCA6C97C(uint64_t a1, uint64_t a2, uint64_t len, unsigned __int8 *md)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t data = a1;
  __int16 v6 = a2;
  char v7 = BYTE2(a2);
  char v8 = BYTE3(a2);
  char v9 = BYTE4(a2);
  char v10 = BYTE5(a2);
  if (len < 0x100000000) {
    return CC_SHA256(&data, len, md);
  }
  unint64_t result = (unsigned __int8 *)sub_1DCB88C58();
  __break(1u);
  return result;
}

void static SNACIUtils.sha256HashHexString(url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1DC88D6B0();
  sub_1DCB86B18();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v14);
  sub_1DC89D970();
  uint64_t v15 = (void *)MEMORY[0x1E01A8D20]();
  uint64_t v16 = sub_1DCB86A58();
  if (v13)
  {
  }
  else
  {
    uint64_t v18 = v16;
    unint64_t v19 = v17;
    uint64_t v20 = sub_1DCA6F970();
    unint64_t v22 = v21;
    sub_1DC881920(v18, v19);
    uint64_t v23 = sub_1DCA78A08();
    sub_1DC8AF450(v23, v24);
    sub_1DCA78A08();
    sub_1DCB86A78();
    uint64_t v31 = v20;
    uint64_t v25 = sub_1DCA78A08();
    sub_1DC881920(v25, v26);
    sub_1DCA76CE4();
    sub_1DCA789DC();
    if ((a13 & 1) == 0)
    {
      uint64_t v27 = MEMORY[0x1E4FBC358];
      uint64_t v28 = MEMORY[0x1E4FBC3B0];
      do
      {
        sub_1DC87E988((uint64_t *)&unk_1EAA9CBB0);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1DCBB93B0;
        *(void *)(v29 + 56) = v27;
        *(void *)(v29 + 64) = v28;
        *(unsigned char *)(v29 + 32) = a12;
        sub_1DCB87958();
        swift_bridgeObjectRetain();
        sub_1DCB87A18();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCA789DC();
      }
      while (a13 != 1);
    }
    sub_1DC88D5C8();
    v30();
    sub_1DC881920(v31, v22);
  }
  sub_1DCA78A14();
  sub_1DC88D674();
}

#error "1DCA6CD48: call analysis failed (funcsize=117)"

void sub_1DCA6CE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1DC8E79D0();
  uint64_t v99 = v24;
  uint64_t v100 = v22;
  uint64_t v94 = v26;
  uint64_t v95 = v25;
  uint64_t v28 = v27;
  uint64_t v97 = v29;
  uint64_t v98 = v30;
  uint64_t v96 = (unsigned char *)v31;
  uint64_t v88 = v32;
  sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v89 = v34;
  uint64_t v90 = v33;
  uint64_t v36 = *(void *)(v35 + 64);
  MEMORY[0x1F4188790](v33);
  uint64_t v92 = (uint64_t)&v86 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCB86B98();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v37);
  sub_1DC95AE60();
  uint64_t v102 = sub_1DCB86708();
  sub_1DC89D4E0();
  uint64_t v93 = v38;
  uint64_t v40 = *(void *)(v39 + 64);
  uint64_t v42 = MEMORY[0x1F4188790](v41);
  uint64_t v87 = (uint64_t)&v86 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x1F4188790](v42);
  uint64_t v45 = (char *)&v86 - v44;
  MEMORY[0x1F4188790](v43);
  sub_1DC888190();
  uint64_t v101 = v46;
  uint64_t v91 = v28;
  sub_1DCB86B48();
  sub_1DCB86B88();
  unint64_t v47 = v100;
  sub_1DCA6FB10((uint64_t)v96, v97, v98, v99, 0, 5526864, 0xE300000000000000, v23, (uint64_t)v95, v94, a21, a22, v86, v87, v88, v89, v90, v91, v92,
    v93,
    v94,
    (void (*)(uint64_t, void, uint64_t))v95,
    (uint64_t)v96,
    v97);
  if (v47)
  {
    uint64_t v48 = sub_1DCA787EC();
    v49(v48);
  }
  else
  {
    uint64_t v50 = v93;
    id v51 = *(void (**)(void, void, void))(v93 + 32);
    uint64_t v99 = v93 + 32;
    uint64_t v100 = v51;
    v51(v101, v45, v102);
    uint64_t v52 = sub_1DCA787EC();
    v53(v52);
    uint64_t v54 = swift_allocObject();
    *(unsigned char *)(v54 + 16) = 1;
    uint64_t v96 = (unsigned char *)(v54 + 16);
    uint64_t v55 = swift_allocObject();
    uint64_t v97 = v55;
    *(void *)(v55 + 16) = 0;
    uint64_t v95 = (void **)(v55 + 16);
    uint64_t v56 = v89;
    uint64_t v57 = v90;
    sub_1DC8E7D10();
    v58();
    uint64_t v98 = 0;
    uint64_t v59 = v54;
    uint64_t v61 = v50 + 16;
    uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    uint64_t v62 = v87;
    v60(v87, v101, v102);
    unint64_t v63 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    unint64_t v64 = (v36 + *(unsigned __int8 *)(v61 + 64) + v63) & ~(unint64_t)*(unsigned __int8 *)(v61 + 64);
    unint64_t v65 = (v40 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v66 = (char *)swift_allocObject();
    uint64_t v67 = v57;
    uint64_t v68 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(&v66[v63], v92, v67);
    uint64_t v69 = v62;
    uint64_t v70 = v102;
    v100(&v66[v64], v69, v102);
    *(void *)&v66[v65] = v59;
    *(void *)&v66[(v65 + 15) & 0xFFFFFFFFFFFFFFF8] = v68;
    swift_retain();
    uint64_t v71 = swift_retain();
    uint64_t v72 = (void *)MEMORY[0x1E01A8D20](v71);
    uint64_t v73 = v98;
    sub_1DCA70254((void (*)(void))sub_1DCA782E0, v66, v91);
    if (v73)
    {
      sub_1DC88D5C8();
      v74();
    }
    else
    {
      uint64_t v75 = v95;
      uint64_t v76 = v101;
      uint64_t v77 = v93;
      uint64_t v78 = v96;
      sub_1DC921418();
      if ((*v78 & 1) == 0)
      {
        sub_1DC921418();
        uint64_t v79 = *v75;
        if (!*v75)
        {
          type metadata accessor for SNError();
          sub_1DC8E7B68();
          sub_1DCA789C8();
          sub_1DCA14B2C(v80, v81, v82, v83, 0xD000000000000010, v84);
          uint64_t v79 = 0;
        }
        id v85 = v79;
        swift_willThrow();
      }
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v70);
    }
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1DCA59874();
  sub_1DC8E7A74();
}

uint64_t sub_1DCA6D2D8(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t result = sub_1DC95E6C8(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3, a2);
  if (v4) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t S3BucketAddress.endpoint.getter()
{
  return sub_1DC8CD7C8();
}

uint64_t S3BucketAddress.endpoint.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*S3BucketAddress.endpoint.modify())(void)
{
  return nullsub_1;
}

uint64_t S3BucketAddress.bucket.getter()
{
  return sub_1DC8CD7C8();
}

uint64_t S3BucketAddress.bucket.setter()
{
  sub_1DC8E7AFC();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*S3BucketAddress.bucket.modify())(void)
{
  return nullsub_1;
}

uint64_t S3BucketAddress.accessKeyID.getter()
{
  return sub_1DC8CD7C8();
}

uint64_t S3BucketAddress.accessKeyID.setter()
{
  sub_1DC8E7AFC();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  return result;
}

uint64_t (*S3BucketAddress.accessKeyID.modify())(void)
{
  return nullsub_1;
}

uint64_t S3BucketAddress.secretAccessKey.getter()
{
  return sub_1DC8CD7C8();
}

uint64_t S3BucketAddress.secretAccessKey.setter()
{
  sub_1DC8E7AFC();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  return result;
}

uint64_t (*S3BucketAddress.secretAccessKey.modify())(void)
{
  return nullsub_1;
}

void __swiftcall S3BucketAddress.init(endpoint:bucket:accessKeyID:secretAccessKey:)(SoundAnalysis::S3BucketAddress *__return_ptr retstr, Swift::String endpoint, Swift::String bucket, Swift::String accessKeyID, Swift::String secretAccessKey)
{
  retstr->endpoint = endpoint;
  retstr->bucket = bucket;
  retstr->accessKeyID = accessKeyID;
  retstr->secretAccessKey = secretAccessKey;
}

uint64_t S3BucketAddress.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DCA788F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCA78A08();
  sub_1DCB879B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

void static S3BucketAddress.== infix(_:_:)()
{
  sub_1DC89D76C();
  uint64_t v2 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v20 = v0[7];
  uint64_t v21 = v0[6];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  BOOL v10 = *v0 == *v1 && v0[1] == v1[1];
  uint64_t v12 = v1[6];
  uint64_t v11 = v1[7];
  if (!v10)
  {
    sub_1DCB89018();
    sub_1DC8E7A68();
    if ((v13 & 1) == 0) {
      goto LABEL_23;
    }
  }
  BOOL v14 = v2 == v6 && v4 == v7;
  if (v14 || (sub_1DCA78880(), sub_1DC8E7A68(), (v15))
    && (v3 == v8 ? (BOOL v16 = v5 == v9) : (BOOL v16 = 0),
        (v16 || (sub_1DCA788BC(), sub_1DC8E7A68(), (v17 & 1) != 0))
     && (v21 == v12 ? (BOOL v18 = v20 == v11) : (BOOL v18 = 0), !v18)))
  {
    sub_1DC89D71C();
    sub_1DCB89018();
  }
  else
  {
LABEL_23:
    sub_1DC89D71C();
  }
}

uint64_t sub_1DCA6D71C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74656B637562 && a2 == 0xE600000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x654B737365636361 && a2 == 0xEB00000000444979;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6341746572636573 && a2 == 0xEF79654B73736563)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1DCA6D900(char a1)
{
  uint64_t result = 0x746E696F70646E65;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74656B637562;
      break;
    case 2:
      uint64_t result = 0x654B737365636361;
      break;
    case 3:
      uint64_t result = 0x6341746572636573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCA6D9A4()
{
  return sub_1DCA6D900(*v0);
}

uint64_t sub_1DCA6D9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA6D71C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA6D9D4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76D34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA6DA10(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76D34();

  return MEMORY[0x1F41862B0](a1, v2);
}

void S3BucketAddress.encode(to:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA6800);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA76D34();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  if (!v0)
  {
    sub_1DCA78A68();
    sub_1DCA7881C();
    sub_1DCA7881C();
    sub_1DCA7881C();
  }
  sub_1DCA78720();
  v4();
  sub_1DC88D674();
}

uint64_t S3BucketAddress.hashValue.getter()
{
  return sub_1DCB891F8();
}

void S3BucketAddress.init(from:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA6810);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC95AE60();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA76D34();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1DCA78914();
    uint64_t v8 = v7;
    uint64_t v21 = v6;
    sub_1DCA78A68();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DCA78914();
    uint64_t v22 = v10;
    uint64_t v20 = v9;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1DCB88DA8();
    uint64_t v19 = v11;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1DCA78914();
    uint64_t v14 = v13;
    uint64_t v17 = v12;
    uint64_t v15 = sub_1DCA78610();
    v16(v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v21;
    v4[1] = v8;
    _OWORD v4[2] = v20;
    v4[3] = v22;
    v4[4] = v18;
    v4[5] = v19;
    v4[6] = v17;
    v4[7] = v14;
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

uint64_t sub_1DCA6DF50()
{
  return sub_1DCB891F8();
}

void sub_1DCA6E034()
{
}

void sub_1DCA6E04C()
{
}

uint64_t S3Path.key.getter()
{
  return sub_1DC8CD7C8();
}

uint64_t S3Path.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*S3Path.key.modify())(void)
{
  return nullsub_1;
}

uint64_t S3Path.parent.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t S3Path.parent.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_release();
  *(void *)(v1 + 16) = v2;
  return result;
}

uint64_t (*S3Path.parent.modify())(void)
{
  return nullsub_1;
}

uint64_t S3Path.init(key:parent:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t S3Path.hash(into:)()
{
  return S3PathOrBucket.hash(into:)();
}

uint64_t static S3Path.== infix(_:_:)(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  unint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1DCB89018(), char v5 = sub_1DC8E7A68(), (v6 & 1) != 0))
  {
    unint64_t v8 = v3;
    unint64_t v9 = v2;
    char v5 = static S3PathOrBucket.== infix(_:_:)(&v9, &v8);
  }
  return v5 & 1;
}

uint64_t static S3PathOrBucket.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    if ((v3 & 0x8000000000000000) != 0)
    {
      uint64_t v19 = *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v20 = *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
      BOOL v21 = *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10)
         && *(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
      if (v21 || (sub_1DCB89018() & 1) != 0)
      {
        uint64_t v25 = v20;
        uint64_t v26 = v19;
        swift_retain();
        swift_retain();
        char v22 = static S3PathOrBucket.== infix(_:_:)(&v26, &v25);
        swift_release();
        swift_release();
        if (v22) {
          return 1;
        }
      }
    }
  }
  else if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = *(void *)(v2 + 32);
    uint64_t v5 = *(void *)(v2 + 40);
    uint64_t v6 = *(void *)(v2 + 48);
    uint64_t v7 = *(void *)(v2 + 56);
    uint64_t v23 = *(void *)(v2 + 72);
    uint64_t v24 = *(void *)(v2 + 64);
    uint64_t v8 = *(void *)(v3 + 32);
    uint64_t v9 = *(void *)(v3 + 40);
    uint64_t v10 = *(void *)(v3 + 48);
    uint64_t v11 = *(void *)(v3 + 56);
    BOOL v12 = *(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24);
    uint64_t v14 = *(void *)(v3 + 64);
    uint64_t v13 = *(void *)(v3 + 72);
    if (v12 || (sub_1DCB89018() & 1) != 0)
    {
      BOOL v15 = v4 == v8 && v5 == v9;
      if (v15 || (sub_1DCA78880() & 1) != 0)
      {
        BOOL v16 = v6 == v10 && v7 == v11;
        if (v16 || (sub_1DCA788BC() & 1) != 0)
        {
          BOOL v17 = v24 == v14 && v23 == v13;
          if (v17 || (sub_1DCB89018() & 1) != 0) {
            return 1;
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1DCA6E37C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65726170 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA6E454(char a1)
{
  if (a1) {
    return 0x746E65726170;
  }
  else {
    return 7955819;
  }
}

uint64_t sub_1DCA6E480()
{
  return sub_1DCA6E454(*v0);
}

uint64_t sub_1DCA6E488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA6E37C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA6E4B0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76D80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA6E4EC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76D80();

  return MEMORY[0x1F41862B0](a1, v2);
}

void S3Path.encode(to:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA6818);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA76D80();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  if (!v0)
  {
    sub_1DCA78A68();
    sub_1DCA76DCC();
    sub_1DCB88F18();
  }
  sub_1DC88D5C8();
  v4();
  sub_1DC88D674();
}

uint64_t S3Path.hashValue.getter()
{
  return sub_1DCB891F8();
}

void S3Path.init(from:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA6830);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA76D80();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1DCB88DA8();
    uint64_t v8 = v7;
    sub_1DCA78A68();
    sub_1DCA76E18();
    swift_bridgeObjectRetain();
    sub_1DCB88DF8();
    sub_1DC89D710();
    v9();
    *uint64_t v4 = v6;
    v4[1] = v8;
    _OWORD v4[2] = v10;
    swift_retain();
    sub_1DC8818D0((uint64_t)v2);
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

uint64_t sub_1DCA6E8A8()
{
  return sub_1DCB891F8();
}

void sub_1DCA6E91C()
{
}

void sub_1DCA6E934()
{
}

uint64_t S3PathOrBucket.hash(into:)()
{
  sub_1DC89D76C();
  uint64_t v2 = v1;
  if ((*v0 & 0x8000000000000000) != 0)
  {
    sub_1DCB891B8();
    swift_retain();
    swift_bridgeObjectRetain_n();
    sub_1DCA788F8();
    swift_bridgeObjectRelease();
    S3PathOrBucket.hash(into:)(v2);
    swift_release();
  }
  else
  {
    sub_1DCB891B8();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
  }
  sub_1DC89D71C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA6EA8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74656B637562 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA6EB64(char a1)
{
  if (a1) {
    return 1752457584;
  }
  else {
    return 0x74656B637562;
  }
}

uint64_t sub_1DCA6EB90(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76F48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA6EBCC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76F48();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA6EC08()
{
  return sub_1DCA6EB64(*v0);
}

uint64_t sub_1DCA6EC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA6EA8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA6EC38(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76E64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA6EC74(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76E64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA6ECB0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76EB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA6ECEC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA76EB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void S3PathOrBucket.encode(to:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA6840);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA6848);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC95AE60();
  sub_1DC87E988(&qword_1EAAA6850);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D970();
  uint64_t v6 = *v0;
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA76E64();
  sub_1DCB892B8();
  if (v6 < 0)
  {
    sub_1DCA76EB0();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1DCB88E88();
    sub_1DCA76EFC();
    sub_1DCB88F18();
    sub_1DC88D5C8();
    v10();
    uint64_t v11 = sub_1DCA788E0();
    v12(v11);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DCA76F48();
    sub_1DCB88E88();
    sub_1DCA76F94();
    sub_1DCB88F18();
    sub_1DC88D5C8();
    v7();
    uint64_t v8 = sub_1DCA788E0();
    v9(v8);
  }
  sub_1DCA78A14();
  sub_1DC88D674();
}

uint64_t S3PathOrBucket.hashValue.getter()
{
  return sub_1DCB891F8();
}

void S3PathOrBucket.init(from:)()
{
  sub_1DC88D6B0();
  uint64_t v42 = v0;
  uint64_t v3 = v2;
  uint64_t v37 = v4;
  uint64_t v41 = sub_1DC87E988(&qword_1EAAA6880);
  sub_1DC89D4E0();
  uint64_t v39 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D988();
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA6888);
  sub_1DC89D4E0();
  uint64_t v38 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC981E40();
  uint64_t v10 = sub_1DC87E988((uint64_t *)&unk_1EAAA6890);
  sub_1DC89D4E0();
  uint64_t v40 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA76E64();
  BOOL v15 = v42;
  sub_1DCB89298();
  if (v15) {
    goto LABEL_8;
  }
  v36[0] = v7;
  v36[1] = v1;
  uint64_t v42 = v3;
  uint64_t v16 = sub_1DCB88E58();
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = v10;
  if (!v17
    || (char v43 = *(unsigned char *)(v16 + 32),
        sub_1DC9CFE4C(1, v17, v16, v16 + 32, 0, (2 * v17) | 1),
        uint64_t v20 = v19,
        unint64_t v22 = v21,
        swift_bridgeObjectRelease(),
        v20 != v22 >> 1))
  {
    uint64_t v24 = v40;
    sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v26 = v25;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v26 = &type metadata for S3PathOrBucket;
    sub_1DCB88D68();
    sub_1DCB88B08();
    sub_1DC8F0494();
    (*(void (**)(void *))(v27 + 104))(v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v18);
    uint64_t v3 = v42;
LABEL_8:
    uint64_t v28 = (uint64_t)v3;
    goto LABEL_9;
  }
  if (v43)
  {
    sub_1DCA76EB0();
    sub_1DCA789A8();
    uint64_t v38 = v14;
    uint64_t v23 = swift_allocObject();
    sub_1DCA7701C();
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v29();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_1DCA78804();
    v31(v30);
    unint64_t v32 = v23 | 0x8000000000000000;
  }
  else
  {
    sub_1DCA76F48();
    sub_1DCA789A8();
    sub_1DCA789FC();
    unint64_t v32 = swift_allocObject();
    sub_1DCA770B4();
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v33();
    swift_unknownObjectRelease();
    uint64_t v34 = sub_1DCA7866C();
    v35(v34);
  }
  *uint64_t v37 = v32;
  uint64_t v28 = (uint64_t)v42;
LABEL_9:
  sub_1DC8818D0(v28);
  sub_1DC88D674();
}

uint64_t sub_1DCA6F510()
{
  return sub_1DCB891F8();
}

void sub_1DCA6F558()
{
}

void sub_1DCA6F570()
{
}

uint64_t sub_1DCA6F58C()
{
  uint64_t v1 = sub_1DCB86C28();
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC89D970();
  uint64_t v5 = sub_1DC87E988(qword_1EAAA4630);
  uint64_t v6 = sub_1DC8BADF0(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1DC8E7B68();
  sub_1DCA06104(0xD000000000000025, v10, v9);
  sub_1DCB86C38();
  uint64_t v11 = sub_1DCB86C58();
  uint64_t v12 = 0;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v8, 1, v11) != 1)
  {
    uint64_t v12 = (void *)sub_1DCB86C48();
    sub_1DC8F0494();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v11);
  }
  objc_msgSend(v9, sel_setTimeZone_, v12);

  sub_1DCB86C08();
  uint64_t v14 = (void *)sub_1DCB86C18();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  objc_msgSend(v9, sel_setLocale_, v14);

  BOOL v15 = (void *)sub_1DCB86B28();
  id v16 = objc_msgSend(v9, sel_stringFromDate_, v15);

  uint64_t v17 = sub_1DCB87938();
  return v17;
}

void sub_1DCA6F7BC()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_1DCB87978();
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC8C1FC4();
  uint64_t v31 = v7;
  uint64_t v32 = v5;
  sub_1DCB87968();
  sub_1DC91ACCC();
  uint64_t v11 = sub_1DCB887F8();
  uint64_t v12 = *(void (**)(void))(v9 + 8);
  sub_1DC89D710();
  ((void (*)(uint64_t, uint64_t))v12)(v13, v14);
  if (!v11) {
    goto LABEL_5;
  }
  uint64_t v31 = v3;
  uint64_t v32 = v1;
  sub_1DCB87968();
  uint64_t v15 = sub_1DCB887F8();
  sub_1DC89D710();
  v12();
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1DCA77CF0();
    uint64_t v29 = sub_1DC883884();
    sub_1DC981FC0(v29, v30);
    goto LABEL_6;
  }
  uint64_t v16 = sub_1DCA6D2D8(1, v11);
  sub_1DCB11D08(v16, v17, v18, v19);
  uint64_t v21 = v20;
  uint64_t v22 = sub_1DCA6D2D8(1, v15);
  sub_1DCB11D08(v22, v23, v24, v25);
  uint64_t v27 = v26;
  sub_1DCB86818();
  swift_allocObject();
  uint64_t v28 = sub_1DCB867E8();
  uint64_t v31 = 0x1400000000;
  uint64_t v32 = v28 | 0x4000000000000000;
  sub_1DCA7635C(&v31, (void *)(v27 + 32), *(void *)(v27 + 16), (void *)(v21 + 32), *(void *)(v21 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_6:
  sub_1DCA78A14();
  sub_1DC88D674();
}

uint64_t sub_1DCA6F970()
{
  sub_1DC8E7AFC();
  sub_1DCB86818();
  swift_allocObject();
  sub_1DCB867E8();
  sub_1DC8AF450(v1, v0);
  sub_1DCA78790();
  sub_1DCA75F8C(v2, v3, v4);
  return 0x2000000000;
}

unsigned __int8 *sub_1DCA6F9EC(const void *a1, uint64_t a2, unsigned __int8 *a3)
{
  if (!a1) {
    goto LABEL_4;
  }
  uint64_t v3 = a2 - (void)a1;
  if (v3 >= 0x100000000)
  {
    a1 = (const void *)sub_1DCB88C58();
    __break(1u);
LABEL_4:
    LODWORD(v3) = 0;
  }
  return CC_SHA256(a1, v3, a3);
}

void static SNACIUtils.sha256Hash(url:)()
{
  uint64_t v1 = (void *)MEMORY[0x1E01A8D20]();
  uint64_t v2 = sub_1DCB86A58();
  if (!v0)
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    sub_1DCA6F970();
    sub_1DC881920(v4, v5);
  }
}

void sub_1DCA6FB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t, void, uint64_t),uint64_t a23,uint64_t a24)
{
  sub_1DC8E79D0();
  uint64_t v117 = v24;
  uint64_t v114 = v25;
  uint64_t v119 = v26;
  uint64_t v120 = v27;
  int v111 = v28;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v115 = a23;
  uint64_t v116 = a24;
  uint64_t v110 = sub_1DCB868D8();
  sub_1DC89D4E0();
  uint64_t v129 = v33;
  MEMORY[0x1F4188790](v34);
  sub_1DC88D550();
  uint64_t v109 = v35;
  uint64_t v36 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v38 = v37;
  uint64_t v40 = MEMORY[0x1F4188790](v39);
  uint64_t v42 = (char *)&v106 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x1F4188790](v40);
  uint64_t v118 = (char *)&v106 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v46 = MEMORY[0x1F4188790](v45);
  uint64_t v48 = (char *)&v106 - v47;
  MEMORY[0x1F4188790](v46);
  sub_1DC888190();
  uint64_t v124 = v49;
  uint64_t v51 = v50;
  sub_1DCB86968();
  uint64_t v52 = v38[2];
  long long v113 = v48;
  uint64_t v121 = v52;
  uint64_t v122 = v38 + 2;
  sub_1DC8E7D10();
  v53();
  uint64_t v54 = *(void *)(v30 + 16);
  uint64_t v108 = v32;
  uint64_t v112 = v54;
  if (v54)
  {
    uint64_t v107 = v42;
    LODWORD(v128) = *MEMORY[0x1E4F276C0];
    uint64_t v55 = v51;
    uint64_t v56 = *(void (**)(uint64_t, void, uint64_t))(v129 + 104);
    uint64_t v126 = v129 + 8;
    uint64_t v127 = v56;
    uint64_t v125 = v38 + 1;
    uint64_t v123 = v38;
    v129 += 104;
    uint64_t v130 = (uint64_t)(v38 + 4);
    swift_bridgeObjectRetain();
    uint64_t v106 = v30;
    uint64_t v57 = (unint64_t *)(v30 + 40);
    uint64_t v58 = v54;
    uint64_t v59 = v118;
    uint64_t v60 = v110;
    uint64_t v61 = v109;
    do
    {
      uint64_t v62 = v36;
      unint64_t v63 = *v57;
      uint64_t v131 = *(v57 - 1);
      unint64_t v132 = v63;
      v127(v61, v128, v60);
      sub_1DC91ACCC();
      swift_bridgeObjectRetain();
      sub_1DCB86A08();
      sub_1DC88D5C8();
      v65(v64);
      uint64_t v36 = v62;
      swift_bridgeObjectRelease();
      sub_1DC88D5C8();
      v67(v66);
      uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))v130;
      (*(void (**)(uint64_t, char *, uint64_t))v130)(v55, v59, v62);
      v57 += 2;
      --v58;
    }
    while (v58);
    uint64_t v130 = v130 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    swift_bridgeObjectRelease();
    uint64_t v38 = v123;
    uint64_t v42 = v107;
    uint64_t v51 = v55;
  }
  else
  {
    uint64_t v68 = (void (*)(uint64_t, uint64_t, uint64_t))v38[4];
    uint64_t v130 = (unint64_t)(v38 + 4) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  v68(v124, v51, v36);
  uint64_t v69 = (void (*)(uint64_t))v38[1];
  sub_1DCA78720();
  v69(v70);
  uint64_t v71 = sub_1DCA6F58C();
  uint64_t v73 = v72;
  sub_1DC8E7D10();
  v75(v74);
  uint64_t v130 = (uint64_t)v69;
  uint64_t v123 = v38 + 1;
  if (v112 && (v111 & 1) != 0)
  {
    uint64_t v76 = v42;
    uint64_t v77 = v71;
    uint64_t v78 = sub_1DCB869C8();
    uint64_t v80 = sub_1DC95CB14(v78, v79);
    uint64_t v82 = v81;
    swift_bridgeObjectRelease();
    if (!v82)
    {
      ((void (*)(char *, uint64_t))v69)(v76, v36);
      uint64_t v84 = v119;
      goto LABEL_17;
    }
    BOOL v83 = v80 == 47 && v82 == 0xE100000000000000;
    uint64_t v84 = v119;
    if (!v83)
    {
      char v85 = sub_1DCB89018();
      uint64_t v86 = sub_1DCA788A4();
      v69(v86);
      swift_bridgeObjectRelease();
      if (v85) {
        goto LABEL_19;
      }
LABEL_17:
      uint64_t v131 = sub_1DCB869C8();
      unint64_t v132 = v88;
      swift_bridgeObjectRetain();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      uint64_t v90 = v131;
      unint64_t v89 = v132;
      goto LABEL_20;
    }
    uint64_t v91 = sub_1DCA788A4();
    v69(v91);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v87 = v42;
    uint64_t v77 = v71;
    ((void (*)(char *, uint64_t))v69)(v87, v36);
    uint64_t v84 = v119;
  }
LABEL_19:
  uint64_t v90 = sub_1DCB869C8();
  unint64_t v89 = v92;
LABEL_20:
  uint64_t v93 = v120;
  sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_1DCBC1910;
  *(void *)(v94 + 32) = v84;
  *(void *)(v94 + 40) = v93;
  *(void *)(v94 + 48) = 0;
  *(void *)(v94 + 56) = 0xE000000000000000;
  *(void *)(v94 + 64) = 0;
  *(void *)(v94 + 72) = 0xE000000000000000;
  *(void *)(v94 + 80) = v77;
  *(void *)(v94 + 88) = v73;
  *(void *)(v94 + 96) = v90;
  *(void *)(v94 + 104) = v89;
  uint64_t v131 = v94;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC87E988(&qword_1EAA9E7F0);
  sub_1DC91AD18();
  sub_1DCB87858();
  swift_bridgeObjectRelease();
  uint64_t v95 = v117;
  sub_1DCA6F7BC();
  if (v95)
  {
    swift_bridgeObjectRelease();
    sub_1DC88D5C8();
    v99(v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v100 = v96;
    unint64_t v101 = v97;
    uint64_t v127 = a22;
    uint64_t v129 = v36;
    uint64_t v128 = sub_1DCB86AC8();
    sub_1DC881920(v100, v101);
    swift_bridgeObjectRelease();
    uint64_t v131 = 542332737;
    unint64_t v132 = 0xE400000000000000;
    sub_1DCB87A18();
    sub_1DCB87A18();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v102 = v124;
    uint64_t v103 = v129;
    sub_1DC8E7D10();
    v105(v104);
    sub_1DCB866E8();
    swift_bridgeObjectRetain();
    sub_1DCB866B8();
    sub_1DC8E7B68();
    sub_1DCB866F8();
    sub_1DCB866F8();
    swift_bridgeObjectRelease();
    sub_1DCB866F8();
    swift_bridgeObjectRelease();
    sub_1DCB866C8();
    ((void (*)(uint64_t, uint64_t))v130)(v102, v103);
  }
  sub_1DC8E7A74();
}

void sub_1DCA70254(void (*a1)(void), void *a2, uint64_t a3)
{
  id v30 = a2;
  uint64_t v31 = a3;
  uint64_t v29 = a1;
  v34[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DCB87568();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB875E8();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v33 = (char *)&v24 - v11;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  uint64_t v25 = (void **)(v13 + 16);
  dispatch_semaphore_t v14 = dispatch_semaphore_create(0);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v12;
  v15[3] = v13;
  v15[4] = v14;
  v34[0] = 0;
  swift_retain();
  uint64_t v26 = v13;
  swift_retain();
  uint64_t v32 = v14;
  uint64_t v29 = (void (*)(void))((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t), void *, id *))v29)(sub_1DCA77F10, v15, v34);
  id v30 = v34[0];
  sub_1DCB86B48();
  double v17 = v16 * 1000.0;
  if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  if (v17 >= 9.22337204e18) {
    goto LABEL_14;
  }
  uint64_t v31 = v12;
  uint64_t v18 = (uint64_t)v17 & ~((uint64_t)v17 >> 63);
  sub_1DCB875C8();
  *uint64_t v6 = v18;
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCAC8], v3);
  sub_1DCB875D8();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v19 = v28;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v27 + 8);
  v20(v10, v28);
  sub_1DCB88588();
  if (sub_1DCB87578())
  {
    swift_beginAccess();
    if (*(unsigned char *)(v12 + 16))
    {
      v20(v33, v19);
      swift_release();
      swift_release();

      swift_release();
      swift_release();

      return;
    }
    uint64_t v21 = v25;
    swift_beginAccess();
    uint64_t v22 = *v21;
    if (!*v21)
    {
      type metadata accessor for SNError();
      sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001ALL, 0x80000001DCB981C0);
      uint64_t v22 = 0;
    }
    id v23 = v22;
  }
  else
  {
    v29();
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000011, 0x80000001DCB981A0);
  }
  swift_willThrow();

  swift_release();
  swift_release();
  v20(v33, v19);
  swift_release();
  swift_release();
}

uint64_t sub_1DCA7074C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (unsigned char *)(a3 + 16);
  if (a1
    && (self, (uint64_t v6 = (void *)swift_dynamicCastObjCClass()) != 0)
    && objc_msgSend(v6, sel_statusCode) == (id)200)
  {
    swift_beginAccess();
    id v7 = 0;
    *uint64_t v5 = 1;
  }
  else
  {
    swift_beginAccess();
    *uint64_t v5 = 0;
    type metadata accessor for SNError();
    id v7 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0x2074736575716572, 0xEE0064656C696166);
  }
  swift_beginAccess();
  uint64_t v8 = *(void **)(a4 + 16);
  *(void *)(a4 + 16) = v7;

  return sub_1DCB88598();
}

void sub_1DCA7087C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_1DC8E79D0();
  uint64_t v91 = v24;
  uint64_t v92 = v21;
  uint64_t v85 = v26;
  uint64_t v86 = (void **)v25;
  uint64_t v87 = v28;
  unint64_t v88 = v27;
  uint64_t v30 = v29;
  uint64_t v89 = v31;
  uint64_t v90 = v32;
  uint64_t v79 = v33;
  uint64_t v80 = sub_1DC87E988(qword_1EAA9CBC0);
  sub_1DC8F0494();
  MEMORY[0x1F4188790](v34);
  sub_1DC95AD34();
  sub_1DCB86B98();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v35);
  sub_1DC8C1FC4();
  uint64_t v36 = sub_1DCB86708();
  sub_1DC89D4E0();
  uint64_t v84 = v37;
  uint64_t v39 = *(void *)(v38 + 64);
  uint64_t v41 = MEMORY[0x1F4188790](v40);
  uint64_t v81 = (uint64_t)&v79 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1F4188790](v41);
  uint64_t v44 = (char *)&v79 - v43;
  MEMORY[0x1F4188790](v42);
  sub_1DC888190();
  uint64_t v82 = v30;
  uint64_t v83 = v45;
  sub_1DCB86B48();
  sub_1DCB86B78();
  uint64_t v46 = v92;
  sub_1DCA6FB10((uint64_t)v88, v89, v90, (uint64_t)v91, 0, 5522759, 0xE300000000000000, v22, v87, (uint64_t)v86, v85, a21, v79, v80, v81, v82, v83, v84, v85,
    (uint64_t)v86,
    v87,
    v88,
    v89,
    v90);
  if (v46)
  {
    sub_1DCA78720();
    v47();
  }
  else
  {
    uint64_t v89 = v23;
    uint64_t v48 = v84;
    uint64_t v91 = *(void (**)(uint64_t, char *, uint64_t))(v84 + 32);
    uint64_t v92 = 0;
    uint64_t v49 = v83;
    v91(v83, v44, v36);
    sub_1DCA78720();
    v50();
    uint64_t v90 = swift_allocBox();
    uint64_t v52 = v51;
    uint64_t v53 = (void (*)(uint64_t, void, uint64_t))sub_1DCB86A18();
    uint64_t v87 = v52;
    unint64_t v88 = v53;
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v52, 1, 1, (uint64_t)v53);
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    uint64_t v86 = (void **)(v54 + 16);
    uint64_t v56 = v48 + 16;
    uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
    uint64_t v57 = v81;
    v55(v81, v49, v36);
    sub_1DCA78994();
    unint64_t v58 = (v39 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v59 = (char *)swift_allocObject();
    v91((uint64_t)&v59[v56], (char *)v57, v36);
    *(void *)&v59[v58] = v90;
    *(void *)&v59[(v58 + 15) & 0xFFFFFFFFFFFFFFF8] = v54;
    swift_retain();
    uint64_t v60 = swift_retain();
    uint64_t v61 = (void *)MEMORY[0x1E01A8D20](v60);
    uint64_t v62 = v92;
    sub_1DCA70254((void (*)(void))sub_1DCA77E10, v59, v82);
    if (v62)
    {
      sub_1DC88D5C8();
      v63();
    }
    else
    {
      uint64_t v64 = v86;
      uint64_t v65 = v84;
      uint64_t v66 = v87;
      sub_1DC921418();
      uint64_t v67 = v66;
      uint64_t v68 = v89;
      sub_1DC90A3F8(v67, v89);
      uint64_t v69 = v88;
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v68, 1, (uint64_t)v88) == 1)
      {
        sub_1DCA78138(v68, qword_1EAA9CBC0);
        sub_1DC921418();
        uint64_t v70 = *v64;
        if (!*v64)
        {
          type metadata accessor for SNError();
          sub_1DC8E7B68();
          sub_1DCA789C8();
          sub_1DCA14B2C(v72, v73, v74, v75, 0xD000000000000016, v76);
          uint64_t v70 = 0;
        }
        uint64_t v77 = v83;
        id v78 = v70;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v77, v36);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v83, v36);
        sub_1DC8F0494();
        (*(void (**)(uint64_t, uint64_t, void))(v71 + 32))(v79, v68, v69);
      }
    }
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1DCA59874();
  sub_1DC8E7A74();
}

id (*sub_1DCA70D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))()
{
  id v10 = objc_msgSend(self, sel_sharedSession);
  uint64_t v11 = (void *)sub_1DCB866D8();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a5;
  v12[3] = a1;
  void v12[4] = a2;
  uint64_t v12[5] = a6;
  uint64_t v16[4] = sub_1DCA77F64;
  void v16[5] = v12;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  id v16[2] = sub_1DCA712D8;
  v16[3] = &unk_1F37FAB20;
  uint64_t v13 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v10, sel_downloadTaskWithRequest_completionHandler_, v11, v13);
  _Block_release(v13);

  objc_msgSend(v14, sel_resume);
  *(void *)(swift_allocObject() + 16) = v14;
  return sub_1DCA78578;
}

void sub_1DCA70EA4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, void *), uint64_t a6, uint64_t a7)
{
  uint64_t v40 = a6;
  uint64_t v41 = a5;
  uint64_t v39 = a2;
  v42[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = sub_1DCB86A18();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v37 - v21;
  uint64_t v23 = swift_projectBox();
  sub_1DC90A3F8(a1, (uint64_t)v15);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v15, 1, v16) == 1)
  {
    sub_1DCA78138((uint64_t)v15, qword_1EAA9CBC0);
    if (a3)
    {
      uint64_t v24 = (uint64_t)a3;
    }
    else
    {
      type metadata accessor for SNError();
      uint64_t v24 = (uint64_t)sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0x642064656C696166, 0xEF64616F6C6E776FLL);
    }
    id v25 = a3;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
    type metadata accessor for SNFileUtils();
    sub_1DCB3B5DC((uint64_t)v22, 0x2D6465766173, 0xE600000000000000);
    uint64_t v37 = a3;
    uint64_t v38 = a7;
    id v28 = objc_msgSend(self, sel_defaultManager);
    uint64_t v29 = (void *)sub_1DCB86948();
    uint64_t v30 = (void *)sub_1DCB86948();
    v42[0] = 0;
    unsigned int v31 = objc_msgSend(v28, sel_moveItemAtURL_toURL_error_, v29, v30, v42);

    id v32 = v42[0];
    if (v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v20, v16);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, v16);
      swift_beginAccess();
      id v33 = v32;
      sub_1DCA77F88((uint64_t)v13, v23);
      v41(v39, v37);
      uint64_t v34 = *(void (**)(char *, uint64_t))(v17 + 8);
      v34(v20, v16);
      v34(v22, v16);
      return;
    }
    id v35 = v42[0];
    uint64_t v24 = sub_1DCB86898();

    swift_willThrow();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v17 + 8);
    v36(v20, v16);
    v36(v22, v16);
    a7 = v38;
  }
  uint64_t v26 = (void **)(a7 + 16);
  swift_beginAccess();
  uint64_t v27 = *v26;
  *uint64_t v26 = (void *)v24;
}

uint64_t sub_1DCA712D8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, void *, void *))(a1 + 32);
  if (a2)
  {
    sub_1DCB869B8();
    uint64_t v12 = sub_1DCB86A18();
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = sub_1DCB86A18();
    uint64_t v13 = 1;
  }
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, v13, 1, v12);
  swift_retain();
  id v14 = a3;
  id v15 = a4;
  v11(v10, a3, a4);

  swift_release();
  return sub_1DCA78138((uint64_t)v10, qword_1EAA9CBC0);
}

id (*sub_1DCA713FC(uint64_t a1, uint64_t a2))()
{
  uint64_t v4 = sub_1DCB86A58();
  unint64_t v6 = v5;
  id v7 = objc_msgSend(self, sel_sharedSession);
  uint64_t v8 = (void *)sub_1DCB866D8();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  v13[4] = sub_1DCA783E0;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  void v13[2] = sub_1DCA715F4;
  v13[3] = &unk_1F37FB318;
  uint64_t v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  id v11 = sub_1DCA76C74((uint64_t)v8, v4, v6, (uint64_t)v10, v7);
  _Block_release(v10);

  objc_msgSend(v11, sel_resume);
  sub_1DC881920(v4, v6);
  *(void *)(swift_allocObject() + 16) = v11;
  return sub_1DCA78578;
}

uint64_t sub_1DCA715F4(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v6 = a2;
  id v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    unint64_t v6 = (void *)sub_1DCB86AD8();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a3;
  id v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1DC88668C((uint64_t)v6, v10);

  return swift_release();
}

void sub_1DCA716BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_1DC8E79D0();
  uint64_t v103 = v22;
  uint64_t v104 = v21;
  uint64_t v97 = v24;
  uint64_t v98 = v23;
  uint64_t v99 = v26;
  uint64_t v100 = v25;
  uint64_t v28 = v27;
  uint64_t v101 = v29;
  uint64_t v102 = v30;
  uint64_t v111 = *MEMORY[0x1E4F143B8];
  uint64_t v105 = sub_1DCB86B98();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v31);
  id v33 = (char *)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1DCB86708();
  sub_1DC89D4E0();
  uint64_t v94 = v35;
  uint64_t v37 = *(void *)(v36 + 64);
  uint64_t v39 = MEMORY[0x1F4188790](v38);
  uint64_t v93 = (uint64_t)&v90 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x1F4188790](v39);
  MEMORY[0x1F4188790](v40);
  sub_1DC888190();
  uint64_t v96 = v41;
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1DCBD2880;
  uint64_t v95 = v28;
  sub_1DCB86B48();
  sub_1DCB86B78();
  uint64_t v43 = v104;
  sub_1DCA6FB10(v100, v101, v102, v103, 1, 5522759, 0xE300000000000000, (uint64_t)v33, (uint64_t)v99, v98, v97, a21, v90, v91, v92, v93, v94, v95, v96,
    v97,
    v98,
    v99,
    v100,
    v101);
  if (v43)
  {
    uint64_t v44 = sub_1DCA78838();
    v45(v44);
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  uint64_t v103 = v42 + 16;
  uint64_t v92 = v34;
  uint64_t v46 = v94;
  uint64_t v104 = 0;
  uint64_t v47 = *(void (**)(uint64_t))(v94 + 32);
  uint64_t v48 = v96;
  uint64_t v49 = sub_1DC981E74();
  v47(v49);
  uint64_t v50 = sub_1DCA78838();
  v51(v50);
  uint64_t v52 = v93;
  uint64_t v53 = v48;
  uint64_t v54 = v92;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v93, v53, v92);
  sub_1DCA78994();
  unint64_t v55 = (v37 + v46 + 16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = (char *)swift_allocObject();
  ((void (*)(char *, uint64_t, uint64_t))v47)(&v56[v46 + 16], v52, v54);
  *(void *)&v56[v55] = v42;
  uint64_t v57 = swift_retain();
  unint64_t v58 = (void *)MEMORY[0x1E01A8D20](v57);
  uint64_t v59 = v104;
  sub_1DCA70254((void (*)(void))sub_1DCA780BC, v56, v95);
  if (v59)
  {
LABEL_22:
    sub_1DCA78710();
    v81();
    swift_release();
    goto LABEL_23;
  }
  sub_1DC921418();
  if (*(void *)(v42 + 24) >> 60 == 15) {
    goto LABEL_21;
  }
  uint64_t v104 = 0;
  uint64_t v60 = self;
  uint64_t v61 = sub_1DC981E74();
  sub_1DC8AF450(v61, v62);
  sub_1DC981E74();
  unint64_t v63 = (void *)sub_1DCB86AB8();
  uint64_t v64 = sub_1DC981E74();
  sub_1DC88668C(v64, v65);
  *(void *)&long long v109 = 0;
  id v66 = objc_msgSend(v60, sel_JSONObjectWithData_options_error_, v63, 0, &v109);

  if (!v66)
  {
    id v82 = (id)v109;
    sub_1DCB86898();

    swift_willThrow();
    sub_1DCA78710();
    v83();
    swift_release();
    goto LABEL_23;
  }
  id v67 = (id)v109;
  sub_1DCB88808();
  swift_unknownObjectRelease();
  sub_1DC87E988((uint64_t *)&unk_1EAA9C6E0);
  uint64_t v68 = MEMORY[0x1E4FBC840];
  if (!sub_1DCA78A48())
  {
LABEL_21:
    sub_1DC884E74();
    sub_1DC883884();
    *uint64_t v80 = 0;
    swift_willThrow();
    goto LABEL_22;
  }
  sub_1DC96116C(0x73746C75736572, 0xE700000000000000, v106, &v109);
  swift_bridgeObjectRelease();
  if (!v110)
  {
    sub_1DCA78138((uint64_t)&v109, &qword_1EAA9CAB0);
    goto LABEL_27;
  }
  sub_1DC87E988(&qword_1EAAA6A78);
  if ((sub_1DCA78A48() & 1) == 0)
  {
LABEL_27:
    sub_1DC884E74();
    uint64_t v84 = sub_1DC883884();
    sub_1DC981FC0(v84, v85);
    goto LABEL_22;
  }
  uint64_t v105 = v106;
  uint64_t v69 = *(void *)(v106 + 16);
  if (v69)
  {
    uint64_t v108 = MEMORY[0x1E4FBC860];
    sub_1DC897B8C();
    uint64_t v70 = 0;
    uint64_t v103 = v68 + 8;
    uint64_t v91 = v42;
    uint64_t v102 = v69;
    while (1)
    {
      uint64_t v71 = *(void *)(v105 + 8 * v70 + 32);
      uint64_t v72 = *(void *)(v71 + 16);
      swift_bridgeObjectRetain();
      if (!v72) {
        break;
      }
      unint64_t v73 = sub_1DC9637DC(7955819, 0xE300000000000000);
      if ((v74 & 1) == 0) {
        break;
      }
      sub_1DC87E9DC(*(void *)(v71 + 56) + 32 * v73, (uint64_t)&v109);
      if ((swift_dynamicCast() & 1) == 0) {
        break;
      }
      uint64_t v76 = v106;
      uint64_t v75 = v107;
      swift_bridgeObjectRelease();
      uint64_t v77 = v108;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC897B8C();
        uint64_t v77 = v108;
      }
      unint64_t v78 = *(void *)(v77 + 16);
      if (v78 >= *(void *)(v77 + 24) >> 1)
      {
        sub_1DC897B8C();
        uint64_t v77 = v108;
      }
      ++v70;
      *(void *)(v77 + 16) = v78 + 1;
      uint64_t v79 = v77 + 16 * v78;
      *(void *)(v79 + 32) = v76;
      *(void *)(v79 + 40) = v75;
      if (v102 == v70) {
        goto LABEL_29;
      }
    }
    sub_1DC884E74();
    uint64_t v86 = sub_1DC883884();
    sub_1DC981FC0(v86, v87);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1DCA78710();
    v88();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_29:
    sub_1DCA78710();
    v89();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
LABEL_24:
  sub_1DCA59874();
  sub_1DC8E7A74();
}

id (*sub_1DCA71D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  id v8 = objc_msgSend(self, sel_sharedSession);
  unint64_t v9 = (void *)sub_1DCB866D8();
  unint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a5;
  v10[3] = a1;
  v10[4] = a2;
  v14[4] = sub_1DCA781BC;
  v14[5] = v10;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  uint64_t v14[2] = sub_1DCA715F4;
  v14[3] = &unk_1F37FB2C8;
  id v11 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  id v12 = objc_msgSend(v8, sel_dataTaskWithRequest_completionHandler_, v9, v11);
  _Block_release(v11);

  objc_msgSend(v12, sel_resume);
  *(void *)(swift_allocObject() + 16) = v12;
  return sub_1DC9C5D9C;
}

uint64_t sub_1DCA71F08(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t v12 = *(void *)(a5 + 16);
  unint64_t v13 = *(void *)(a5 + 24);
  *(void *)(a5 + 16) = a1;
  *(void *)(a5 + 24) = a2;
  sub_1DC8B9C40(a1, a2);
  sub_1DC88668C(v12, v13);
  return a6(a3, a4);
}

void sub_1DCA71FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v23;
  a20 = v24;
  uint64_t v26 = v25;
  sub_1DCB86B98();
  sub_1DC89D4E0();
  uint64_t v46 = v28;
  uint64_t v47 = v27;
  MEMORY[0x1F4188790](v27);
  sub_1DC88D550();
  uint64_t v51 = v29;
  uint64_t v30 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v31 = sub_1DC8BADF0(v30);
  MEMORY[0x1F4188790](v31);
  sub_1DC95AD34();
  uint64_t v32 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v49 = v33;
  MEMORY[0x1F4188790](v34);
  sub_1DC981E40();
  a10 = *v26;
  uint64_t v48 = static SNACIUtils.keyAndBucket(_:)(v53, &a10);
  uint64_t v35 = v54;
  uint64_t v52 = v55;
  uint64_t v36 = v56;
  uint64_t v37 = v57;
  uint64_t v39 = v58;
  uint64_t v38 = v59;
  sub_1DCB869E8();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v22, 1, v32) == 1)
  {
    sub_1DCA78138(v22, qword_1EAA9CBC0);
    sub_1DCA77CF0();
    uint64_t v40 = sub_1DC883884();
    sub_1DCA78930(v40, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v21, v22, v32);
    sub_1DCB86B38();
    sub_1DCA716BC(v21, v35, v52, v48, v51, v36, v37, v39, v38, v44, v45, v20, v46, v47, v48, v49, v51, v52, v53[0],
      v53[1],
      v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC88D5C8();
    v42();
    if (v20)
    {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v21, v32);
    }
    else
    {
      sub_1DC88D5C8();
      v43();
    }
  }
  sub_1DC88D674();
}

uint64_t static SNACIUtils.keyAndBucket(_:)(void *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    unint64_t v13 = (void *)(v3 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v14 = v13[2];
    uint64_t v15 = v13[3];
    uint64_t v25 = v13[4];
    uint64_t v22 = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = static SNACIUtils.keyAndBucket(_:)(v26, &v25);
    uint64_t v4 = v26[1];
    uint64_t v24 = v26[0];
    uint64_t v7 = v26[2];
    uint64_t v6 = v26[3];
    uint64_t v16 = v26[4];
    uint64_t v8 = v26[5];
    uint64_t v11 = v26[6];
    uint64_t v10 = v26[7];
    swift_bridgeObjectRetain_n();
    uint64_t v23 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DCA7319C();
      uint64_t v12 = v20;
    }
    unint64_t v17 = *(void *)(v12 + 16);
    if (v17 >= *(void *)(v12 + 24) >> 1)
    {
      sub_1DCA7319C();
      uint64_t v12 = v21;
    }
    *(void *)(v12 + 16) = v17 + 1;
    uint64_t v18 = v12 + 16 * v17;
    *(void *)(v18 + 32) = v22;
    *(void *)(v18 + 40) = v15;
    swift_release();
    swift_bridgeObjectRelease_n();
    uint64_t v5 = v24;
    uint64_t v9 = v23;
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v4 = *(void *)(v3 + 24);
    uint64_t v7 = *(void *)(v3 + 32);
    uint64_t v6 = *(void *)(v3 + 40);
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v8 = *(void *)(v3 + 56);
    uint64_t v11 = *(void *)(v3 + 64);
    uint64_t v10 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v6;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v11;
  a1[7] = v10;
  return v12;
}

#error "1DCA72468: call analysis failed (funcsize=31)"

void sub_1DCA724C4()
{
  sub_1DC88D6B0();
  uint64_t v26 = v3;
  uint64_t v25 = v4;
  uint64_t v6 = v5;
  sub_1DCB86B98();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  uint64_t v8 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v9 = sub_1DC8BADF0(v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1DCA7879C();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v11);
  sub_1DCA787C4();
  uint64_t v13 = v6[2];
  uint64_t v12 = v6[3];
  uint64_t v14 = v6[6];
  uint64_t v23 = v6[5];
  uint64_t v24 = v6[4];
  uint64_t v15 = v6[7];
  sub_1DCB869E8();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v2, 1, v10) == 1)
  {
    sub_1DCA78138(v2, qword_1EAA9CBC0);
    sub_1DCA77CF0();
    uint64_t v16 = sub_1DC883884();
    sub_1DCA78930(v16, v17);
  }
  else
  {
    uint64_t v18 = sub_1DCA786D0();
    v19(v18);
    sub_1DCB86B38();
    sub_1DCA6CC8C(v1, v13, v12, v25, v0, v26, v24, v23, v14, v15);
    sub_1DC88D5C8();
    v20();
    uint64_t v21 = sub_1DCA7894C();
    v22(v21);
  }
  sub_1DCA59874();
  sub_1DC88D674();
}

uint64_t static SNACIUtils.downloadObject(path:destination:)()
{
  unint64_t v0 = swift_allocObject();
  sub_1DCA78768(v0);
  swift_bridgeObjectRetain();
  static SNACIUtils.keyAndBucket(_:)(v2, &v3);
  swift_release();
  sub_1DCA78624();
  sub_1DCA724C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

#error "1DCA728B0: call analysis failed (funcsize=107)"

uint64_t static SNACIUtils.downloadObject(path:)()
{
  unint64_t v0 = swift_allocObject();
  sub_1DCA78768(v0);
  swift_bridgeObjectRetain();
  static SNACIUtils.keyAndBucket(_:)(v2, &v3);
  swift_release();
  sub_1DCA78624();
  sub_1DCA72740();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static SNACIUtils.toPathOrBucket(bucket:pathComponents:)()
{
  sub_1DC89D76C();
  uint64_t v1 = v0;
  uint64_t v24 = v2;
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v7 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v9 = v3[4];
  uint64_t v8 = v3[5];
  uint64_t v11 = v3[6];
  uint64_t v10 = v3[7];
  sub_1DCA789FC();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v5;
  v12[3] = v4;
  void v12[4] = v7;
  uint64_t v12[5] = v6;
  v12[6] = v9;
  v12[7] = v8;
  v12[8] = v11;
  v12[9] = v10;
  uint64_t v13 = v1[2];
  if (v13)
  {
    uint64_t v15 = v1[4];
    uint64_t v14 = v1[5];
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = v14;
    *(void *)(v16 + 32) = v12;
    uint64_t v12 = (void *)(v16 | 0x8000000000000000);
    uint64_t v17 = v13 - 1;
    if (v13 != 1)
    {
      uint64_t v18 = v1 + 7;
      do
      {
        uint64_t v19 = *(v18 - 1);
        uint64_t v20 = *v18;
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v19;
        *(void *)(v21 + 24) = v20;
        *(void *)(v21 + 32) = v12;
        uint64_t v12 = (void *)(v21 | 0x8000000000000000);
        swift_bridgeObjectRetain();
        v18 += 2;
        --v17;
      }
      while (v17);
    }
    swift_bridgeObjectRetain();
  }
  *uint64_t v24 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DC89D71C();
  return swift_bridgeObjectRetain();
}

void sub_1DCA72AEC()
{
  sub_1DCA78690();
  if (v2)
  {
    sub_1DC89D540();
    if (v3 != v4)
    {
      sub_1DC89D63C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DCA78600();
  if (v1)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA6AC0);
    uint64_t v5 = (void *)sub_1DCA78730();
    sub_1DCA785B8(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_1DCA787E0();
    sub_1DC896D54(v6, v7, v8);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v9 = sub_1DCA785E0();
    sub_1DCA73E30(v9, v10, v11, v12);
  }
}

void sub_1DCA72B90(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1DCA72BB0()
{
}

void sub_1DCA72BE4()
{
  sub_1DCA78690();
  if (v3)
  {
    sub_1DC89D540();
    if (v4 != v5)
    {
      sub_1DC89D63C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DCA78600();
  if (v2)
  {
    sub_1DC87E988(&qword_1EAA9DD00);
    uint64_t v6 = (void *)sub_1DC89D788();
    size_t v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 4);
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_1DCA787E0();
    sub_1DC896E14(v8, v9, v10);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v11 = sub_1DCA785E0();
    sub_1DCA74048(v11, v12, v13, v14);
  }
}

void sub_1DCA72C98()
{
}

void sub_1DCA72CC0()
{
  sub_1DCA78584();
  if (v3)
  {
    sub_1DC89D540();
    if (v4 != v5)
    {
      sub_1DC89D63C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DC89D520();
  if (v2)
  {
    sub_1DC87E988(v6);
    size_t v7 = (const void *)sub_1DC89D788();
    size_t v8 = j__malloc_size(v7);
    sub_1DC89D62C(v8 - 32);
  }
  if (v1)
  {
    uint64_t v9 = sub_1DCA78684();
    v0(v9);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v10 = sub_1DCA78A20();
    sub_1DCA75A88(v10, v11);
  }
}

void sub_1DCA72D74()
{
}

void sub_1DCA72DA8()
{
  sub_1DCA78584();
  if (v4)
  {
    sub_1DC89D540();
    if (v5 != v6)
    {
      sub_1DC89D63C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DC89D520();
  if (v3)
  {
    sub_1DC87E988(v7);
    size_t v8 = (const void *)sub_1DC89D788();
    size_t v9 = j__malloc_size(v8);
    sub_1DC89D62C(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = sub_1DCA78684();
    v1(v10);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v11 = sub_1DCA785F0();
    v0(v11);
  }
}

void sub_1DCA72E60()
{
}

void sub_1DCA72E94()
{
  sub_1DCA78690();
  if (v2)
  {
    sub_1DC89D540();
    if (v3 != v4)
    {
      sub_1DC89D63C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DCA78600();
  if (v1)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAA9DC40);
    char v5 = (void *)sub_1DCA78730();
    sub_1DCA785B8(v5);
  }
  if (v0)
  {
    char v6 = (char *)sub_1DCA787E0();
    sub_1DC897278(v6, v7, v8);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v9 = sub_1DCA785E0();
    sub_1DCA74238(v9, v10, v11, v12);
  }
}

void sub_1DCA72F38()
{
}

void sub_1DCA72F6C()
{
}

void sub_1DCA72FA0()
{
  sub_1DCA78584();
  if (v4)
  {
    sub_1DC89D540();
    if (v5 != v6)
    {
      sub_1DC89D63C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DC89D520();
  if (v3)
  {
    sub_1DC87E988(v7);
    size_t v8 = (const void *)swift_allocObject();
    size_t v9 = j__malloc_size(v8);
    sub_1DCA78A34(v9);
  }
  if (v2)
  {
    uint64_t v10 = sub_1DCA78684();
    v1(v10);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v11 = sub_1DCA785F0();
    v0(v11);
  }
}

void sub_1DCA73064()
{
}

void sub_1DCA7308C()
{
}

void sub_1DCA730B4()
{
  sub_1DCA78584();
  if (v3)
  {
    sub_1DC89D540();
    if (v4 != v5)
    {
      sub_1DC89D63C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DC89D520();
  if (v2)
  {
    sub_1DC87E988(v6);
    uint64_t v7 = (const void *)sub_1DC89D788();
    size_t v8 = j__malloc_size(v7);
    sub_1DC89D62C(v8 - 32);
  }
  if (v1)
  {
    uint64_t v9 = sub_1DCA78684();
    v0(v9);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v10 = sub_1DCA78A20();
    sub_1DCA74550(v10, v11, v12, v13, v14);
  }
}

void sub_1DCA73168()
{
}

void sub_1DCA7319C()
{
  sub_1DCA78584();
  if (v4)
  {
    sub_1DC89D540();
    if (v5 != v6)
    {
      sub_1DC89D63C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DC89D520();
  if (v3)
  {
    sub_1DC87E988(v7);
    size_t v8 = (const void *)sub_1DC89D788();
    size_t v9 = j__malloc_size(v8);
    sub_1DC89D62C(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = sub_1DCA78684();
    v1(v10);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v11 = sub_1DCA785F0();
    v0(v11);
  }
}

void sub_1DCA73254()
{
}

void sub_1DCA73288()
{
  sub_1DCA78690();
  if (v2)
  {
    sub_1DC89D540();
    if (v3 != v4)
    {
      sub_1DC89D63C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DCA78600();
  if (v1)
  {
    sub_1DC87E988(&qword_1EAAA6998);
    char v5 = (void *)sub_1DCA78730();
    sub_1DCA785B8(v5);
  }
  if (v0)
  {
    char v6 = (char *)sub_1DCA787E0();
    sub_1DC897384(v6, v7, v8);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v9 = sub_1DCA785E0();
    sub_1DCA74838(v9, v10, v11, v12);
  }
}

void sub_1DCA7332C()
{
}

void sub_1DCA73360()
{
  sub_1DCA78584();
  if (v4)
  {
    sub_1DC89D540();
    if (v5 != v6)
    {
      sub_1DC89D63C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DC89D520();
  if (v3)
  {
    sub_1DC87E988(v7);
    size_t v8 = (const void *)sub_1DC89D788();
    size_t v9 = j__malloc_size(v8);
    sub_1DC89D62C(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = sub_1DCA78684();
    v1(v10);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v11 = sub_1DCA785F0();
    v0(v11);
  }
}

void sub_1DCA73418()
{
}

void sub_1DCA7344C(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1DCA73484(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t a6, void (*a7)(uint64_t), void (*a8)(uint64_t))
{
  if (a3)
  {
    sub_1DC89D540();
    if (v13 != v14)
    {
      sub_1DC89D63C();
      if (v13)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  if (v12 <= *(void *)(a4 + 16)) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v12;
  }
  if (v15)
  {
    sub_1DC87E988(a5);
    uint64_t v16 = (const void *)swift_allocObject();
    size_t v17 = j__malloc_size(v16);
    sub_1DC89D62C(v17 - 32);
  }
  if (a1)
  {
    uint64_t v18 = sub_1DCA78684();
    a8(v18);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v19 = sub_1DCA785F0();
    a7(v19);
  }
}

void sub_1DCA73564()
{
}

void sub_1DCA73598(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_1DCA735CC()
{
}

void sub_1DCA73600()
{
}

void sub_1DCA73634(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1DCA73654(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_1DC89D540();
    if (v10 != v11)
    {
      sub_1DC89D63C();
      if (v10)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  else
  {
    uint64_t v9 = a2;
  }
  uint64_t v12 = *(void *)(a4 + 16);
  if (v9 <= v12) {
    uint64_t v13 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v13 = v9;
  }
  if (v13)
  {
    sub_1DC87E988(a5);
    char v14 = (void *)sub_1DC89D788();
    size_t v15 = j__malloc_size(v14);
    uint64_t v14[2] = v12;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 16);
  }
  else
  {
    char v14 = (void *)MEMORY[0x1E4FBC860];
  }
  if (a1)
  {
    a6(a4 + 32, v12, v14 + 4);
    sub_1DCA78598();
  }
  else
  {
    sub_1DCA75068(0, v12);
  }
}

void sub_1DCA7372C()
{
}

void sub_1DCA73760()
{
}

void sub_1DCA73794()
{
}

void sub_1DCA737BC(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_1DCA737F0()
{
}

void sub_1DCA73824()
{
  sub_1DCA78690();
  if (v3)
  {
    sub_1DC89D540();
    if (v4 != v5)
    {
      sub_1DC89D63C();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DCA78600();
  if (v2)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAA9DCA0);
    char v6 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    uint64_t v8 = sub_1DCA787E0();
    sub_1DC897728(v8);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v9 = sub_1DCA785E0();
    sub_1DCA7542C(v9, v10, v11, v12);
  }
}

void sub_1DCA738D4()
{
}

void sub_1DCA73908()
{
}

uint64_t sub_1DCA7393C()
{
  sub_1DCA78690();
  if (v3)
  {
    sub_1DC89D540();
    if (v5 != v6)
    {
      sub_1DC89D63C();
      if (v5)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1DC89D530();
    }
  }
  else
  {
    uint64_t v4 = v2;
  }
  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8)
  {
    char v14 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  sub_1DC87E988(&qword_1EAAA6978);
  uint64_t v9 = sub_1DC87E988((uint64_t *)&unk_1EAAA6980);
  sub_1DC89D568(v9);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  char v14 = (void *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  if (!v11 || (v15 - v13 == 0x8000000000000000 ? (BOOL v16 = v11 == -1) : (BOOL v16 = 0), v16))
  {
LABEL_23:
    sub_1DC8AF148();
    uint64_t result = sub_1DCB88C58();
    __break(1u);
    return result;
  }
  uint64_t v14[2] = v7;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v11);
LABEL_18:
  uint64_t v17 = *(void *)(sub_1DC87E988((uint64_t *)&unk_1EAAA6980) - 8);
  if (v1)
  {
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    sub_1DC897820(v0 + v18, v7, (unint64_t)v14 + v18);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v19 = sub_1DCA785E0();
    sub_1DCA756EC(v19, v20, v21, v22);
  }
  return (uint64_t)v14;
}

void sub_1DCA73B0C()
{
}

void sub_1DCA73B40()
{
}

void sub_1DCA73B68()
{
  sub_1DCA78690();
  if (v2)
  {
    sub_1DC89D540();
    if (v3 != v4)
    {
      sub_1DC89D63C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DCA78600();
  if (v1)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA4210);
    char v5 = (void *)sub_1DCA78730();
    sub_1DCA785B8(v5);
  }
  if (v0)
  {
    char v6 = (char *)sub_1DCA787E0();
    sub_1DC8979AC(v6, v7, v8);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v9 = sub_1DCA785E0();
    sub_1DCA75968(v9, v10, v11, v12);
  }
}

void sub_1DCA73C0C()
{
}

void sub_1DCA73C34()
{
}

void sub_1DCA73C68(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_1DCA73C9C()
{
}

void sub_1DCA73CD0()
{
  sub_1DCA78584();
  if (v4)
  {
    sub_1DC89D540();
    if (v5 != v6)
    {
      sub_1DC89D63C();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1DC89D530();
    }
  }
  sub_1DC89D520();
  if (v3)
  {
    sub_1DC87E988(v7);
    uint64_t v8 = (const void *)swift_allocObject();
    size_t v9 = j__malloc_size(v8);
    sub_1DCA78A34(v9);
  }
  if (v2)
  {
    uint64_t v10 = sub_1DCA78684();
    v1(v10);
    sub_1DCA78598();
  }
  else
  {
    uint64_t v11 = sub_1DCA785F0();
    v0(v11);
  }
}

void sub_1DCA73D94()
{
}

void sub_1DCA73DC8()
{
}

void sub_1DCA73DFC(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t sub_1DCA73E30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA73F30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

char *sub_1DCA74048(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    unint64_t v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

char *sub_1DCA7413C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 48 * a1 + 32);
    uint64_t v6 = 3 * v4;
    uint64_t v7 = &__dst[16 * v6];
    if (v5 >= v7 || &v5[16 * v6] <= __dst)
    {
      memcpy(__dst, v5, 16 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

char *sub_1DCA74238(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 28 * a1 + 32);
    size_t v6 = 28 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

char *sub_1DCA74334(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    uint64_t v6 = 3 * v4;
    uint64_t v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74430(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1DC87E988(&qword_1EAAA6A88);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74550(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1DC8AF148();
    sub_1DCA7865C();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 32 * a1 + 32;
  unint64_t v7 = a3 + 32 * v5;
  if (v6 >= v7 || v6 + 32 * v5 <= a3)
  {
    sub_1DC87E988(a5);
    sub_1DCA786F0();
    swift_bridgeObjectRelease();
    return v7;
  }
  sub_1DC8AF148();
  sub_1DCA7864C();
LABEL_11:
  uint64_t result = sub_1DCA78868();
  __break(1u);
  return result;
}

char *sub_1DCA74624(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    unint64_t v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74718(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1DC87E988(&qword_1EAA9C740);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74838(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      sub_1DC87E988((uint64_t *)&unk_1EAAA69A0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

char *sub_1DCA74958(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    unint64_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74A4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

char *sub_1DCA74B44(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    unint64_t v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74C38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1DC87E988((uint64_t *)&unk_1EAAAA9B0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74D50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74E48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1DC87E988(&qword_1EAAA6A20);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA74F68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75068(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1DC8AF148();
    sub_1DCA7865C();
    goto LABEL_11;
  }
  sub_1DCA7869C();
  if (v5) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v4 > v3;
  }
  if (!v6)
  {
    sub_1DC87E988(&qword_1EAAA6A00);
    sub_1DCA786F0();
    swift_bridgeObjectRelease();
    return v2;
  }
  sub_1DC8AF148();
  sub_1DCA7864C();
LABEL_11:
  uint64_t result = sub_1DCA78868();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75128(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for SNDetectorIdentifier(0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA7523C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75334(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

char *sub_1DCA7542C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA7551C(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1DC8AF148();
    sub_1DCA7865C();
    goto LABEL_11;
  }
  sub_1DCA7874C();
  if (v7) {
    BOOL v8 = 0;
  }
  else {
    BOOL v8 = v6 > (unint64_t)v4;
  }
  if (!v8)
  {
    memcpy(v4, v3, 8 * v5);
    swift_bridgeObjectRelease();
    return v2;
  }
  sub_1DC8AF148();
  sub_1DCA7864C();
LABEL_11:
  uint64_t result = sub_1DCA78868();
  __break(1u);
  return result;
}

uint64_t sub_1DCA755CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1DC87E988(&qword_1EAAA6990);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA756EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_1DC87E988((uint64_t *)&unk_1EAAA6980) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75850(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1DC87E988(&qword_1EAA9DF60);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75968(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 160 * a1 + 32;
    unint64_t v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      sub_1DC87E988(&qword_1EAAA41B0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75A88(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1DC8AF148();
    sub_1DCA7865C();
    goto LABEL_11;
  }
  sub_1DCA7869C();
  if (v6) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v5 > v3;
  }
  if (!v7)
  {
    sub_1DC87E988(v4);
    sub_1DCA786F0();
    swift_bridgeObjectRelease();
    return v2;
  }
  sub_1DC8AF148();
  sub_1DCA7864C();
LABEL_11:
  uint64_t result = sub_1DCA78868();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75B44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1DC87E988((uint64_t *)&unk_1EAAAA7E0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75C5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75D54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1DC87E988(&qword_1EAAAA900);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75E74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1DC87E988(&qword_1EAAA6AB0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1DCB88D08();
  __break(1u);
  return result;
}

uint64_t sub_1DCA75F8C(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  sub_1DC8AF450(a2, a3);
  sub_1DC8AF450(a2, a3);
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      uint64_t v10 = v6 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1DCBC1AB0;
      sub_1DC8AF450(a2, a3);
      sub_1DC8AF450(a2, a3);
      uint64_t v11 = v7 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v11 < (int)v7) {
        goto LABEL_15;
      }
      if (sub_1DCB867D8() && __OFSUB__((int)v7, sub_1DCB86808())) {
        goto LABEL_16;
      }
      sub_1DCB86818();
      swift_allocObject();
      uint64_t v15 = sub_1DCB867C8();
      swift_release();
      uint64_t v10 = v15;
      uint64_t v11 = v7 >> 32;
LABEL_11:
      if (v11 < (int)v7)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      sub_1DC8AF450(a2, a3);
      sub_1DCA76644((int)v7, v11, v10, a2, a3);
      sub_1DC881920(a2, a3);
      sub_1DC881920(a2, a3);
      sub_1DC881920(a2, a3);
      *a1 = v7;
      a1[1] = v10 | 0x4000000000000000;
LABEL_13:
      sub_1DC881920(a2, a3);
      return sub_1DC881920(a2, a3);
    case 2uLL:
      *(void *)&long long v17 = *a1;
      *((void *)&v17 + 1) = v6 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1DC8AF450(a2, a3);
      sub_1DC8AF450(a2, a3);
      sub_1DCB86A38();
      uint64_t v12 = *((void *)&v17 + 1);
      uint64_t v13 = *(void *)(v17 + 16);
      uint64_t v14 = *(void *)(v17 + 24);
      sub_1DC8AF450(a2, a3);
      sub_1DCA76644(v13, v14, *((uint64_t *)&v17 + 1), a2, a3);
      sub_1DC881920(a2, a3);
      sub_1DC881920(a2, a3);
      sub_1DC881920(a2, a3);
      *a1 = v17;
      a1[1] = v12 | 0x8000000000000000;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v17 + 7) = 0;
      *(void *)&long long v17 = 0;
      sub_1DC8AF450(a2, a3);
      sub_1DCA76B38((unsigned __int8 *)&v17, 0, a2, a3);
      sub_1DC881920(a2, a3);
      goto LABEL_13;
    default:
      *(void *)&long long v17 = *a1;
      WORD4(v17) = v6;
      BYTE10(v17) = BYTE2(v6);
      BYTE11(v17) = BYTE3(v6);
      BYTE12(v17) = BYTE4(v6);
      BYTE13(v17) = BYTE5(v6);
      uint64_t v8 = BYTE6(v6);
      BYTE14(v17) = BYTE6(v6);
      sub_1DC8AF450(a2, a3);
      sub_1DCA76B38((unsigned __int8 *)&v17, v8, a2, a3);
      sub_1DC881920(a2, a3);
      unint64_t v9 = DWORD2(v17) | ((unint64_t)BYTE12(v17) << 32) | ((unint64_t)BYTE13(v17) << 40) | ((unint64_t)BYTE14(v17) << 48);
      *a1 = v17;
      a1[1] = v9;
      goto LABEL_13;
  }
}

void sub_1DCA7635C(uint64_t *a1, void *key, size_t a3, void *data, size_t dataLength)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v12 = v5 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1DCBC1AB0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v14 = v6 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_11;
      }
      if (v14 < (int)v6) {
        goto LABEL_16;
      }
      if (sub_1DCB867D8() && __OFSUB__((int)v6, sub_1DCB86808())) {
        goto LABEL_17;
      }
      sub_1DCB86818();
      swift_allocObject();
      uint64_t v17 = sub_1DCB867C8();
      swift_release();
      uint64_t v12 = v17;
      uint64_t v14 = v6 >> 32;
LABEL_11:
      if (v14 < (int)v6)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      sub_1DCA768E4((int)v6, v14, v12, key, a3, data, dataLength);
      unint64_t v16 = v12 | 0x4000000000000000;
      *a1 = v6;
LABEL_13:
      a1[1] = v16;
      return;
    case 2uLL:
      *(void *)&long long macOut = *a1;
      *((void *)&macOut + 1) = v5 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1DCB86A38();
      sub_1DCA768E4(*(void *)(macOut + 16), *(void *)(macOut + 24), *((uint64_t *)&macOut + 1), key, a3, data, dataLength);
      unint64_t v16 = *((void *)&macOut + 1) | 0x8000000000000000;
      *a1 = macOut;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&macOut + 7) = 0;
      *(void *)&long long macOut = 0;
      CCHmac(0, key, a3, data, dataLength, &macOut);
      return;
    default:
      *(void *)&long long macOut = *a1;
      WORD4(macOut) = v5;
      BYTE10(macOut) = BYTE2(v5);
      BYTE11(macOut) = BYTE3(v5);
      BYTE12(macOut) = BYTE4(v5);
      BYTE13(macOut) = BYTE5(v5);
      BYTE14(macOut) = BYTE6(v5);
      CCHmac(0, key, a3, data, dataLength, &macOut);
      unint64_t v11 = DWORD2(macOut) | ((unint64_t)BYTE12(macOut) << 32) | ((unint64_t)BYTE13(macOut) << 40) | ((unint64_t)BYTE14(macOut) << 48);
      *a1 = macOut;
      a1[1] = v11;
      return;
  }
}

uint64_t sub_1DCA76644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  data[2] = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1DCB867D8();
  if (!v10) {
    goto LABEL_17;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_1DCB86808();
  uint64_t v13 = a1 - v12;
  if (__OFSUB__(a1, v12))
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  if (__OFSUB__(a2, a1)) {
    goto LABEL_15;
  }
  sub_1DCB867F8();
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4) {
        goto LABEL_16;
      }
      swift_retain();
      sub_1DCA76BC8((int)a4, a4 >> 32, a5 & 0x3FFFFFFFFFFFFFFFLL, (unsigned __int8 *)(v11 + v13));
      if (v5) {
        goto LABEL_19;
      }
      sub_1DC881920(a4, a5);
      break;
    case 2uLL:
      uint64_t v15 = *(void *)(a4 + 16);
      uint64_t v16 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      sub_1DCA76BC8(v15, v16, a5 & 0x3FFFFFFFFFFFFFFFLL, (unsigned __int8 *)(v11 + v13));
      if (v5)
      {
        swift_release();
        swift_release();
        __break(1u);
LABEL_19:
        sub_1DC881920(a4, a5);
        __break(1u);
        JUMPOUT(0x1DCA768D4);
      }
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(data, 0, 14);
      CC_LONG v14 = 0;
      goto LABEL_9;
    default:
      data[0] = a4;
      LOWORD(data[1]) = a5;
      BYTE2(data[1]) = BYTE2(a5);
      BYTE3(data[1]) = BYTE3(a5);
      BYTE4(data[1]) = BYTE4(a5);
      CC_LONG v14 = BYTE6(a5);
      BYTE5(data[1]) = BYTE5(a5);
LABEL_9:
      CC_SHA256(data, v14, (unsigned __int8 *)(v11 + v13));
      return sub_1DC881920(a4, a5);
  }
  return sub_1DC881920(a4, a5);
}

void sub_1DCA768E4(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, size_t a5, const void *a6, size_t a7)
{
  uint64_t v13 = sub_1DCB867D8();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_1DCB86808();
    uint64_t v16 = a1 - v15;
    if (__OFSUB__(a1, v15))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_1DCB867F8();
      CCHmac(0, a4, a5, a6, a7, (void *)(v14 + v16));
      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DCA76990(unsigned __int8 *md, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4)
      {
        __break(1u);
LABEL_12:
        swift_release();
        swift_release();
        __break(1u);
LABEL_13:
        sub_1DC881920(a4, a5);
        __break(1u);
        JUMPOUT(0x1DCA76B28);
      }
      swift_retain();
      sub_1DCA76BC8((int)a4, a4 >> 32, a5 & 0x3FFFFFFFFFFFFFFFLL, md);
      if (v5) {
        goto LABEL_13;
      }
      sub_1DC881920(a4, a5);
      return sub_1DC881920(a4, a5);
    case 2uLL:
      uint64_t v12 = *(void *)(a4 + 16);
      uint64_t v13 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      sub_1DCA76BC8(v12, v13, a5 & 0x3FFFFFFFFFFFFFFFLL, md);
      if (v5) {
        goto LABEL_12;
      }
      swift_release();
      swift_release();
      return sub_1DC881920(a4, a5);
    case 3uLL:
      uint64_t v11 = 0;
      uint64_t v10 = 0;
      uint64_t v9 = 0;
      goto LABEL_6;
    default:
      uint64_t v9 = BYTE6(a5);
      uint64_t v10 = a5 & 0xFFFFFFFFFFFFLL;
      uint64_t v11 = a4;
LABEL_6:
      sub_1DCA6C97C(v11, v10, v9, md);
      return sub_1DC881920(a4, a5);
  }
}

uint64_t sub_1DCA76B38(unsigned __int8 *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = (uint64_t)(a1 + 14);
  sub_1DC8AF450(a3, a4);
  sub_1DCA76990(a1, v8, a2, a3, a4);
  return sub_1DC881920(a3, a4);
}

unsigned __int8 *sub_1DCA76BC8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t result = (unsigned __int8 *)sub_1DCB867D8();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = (unsigned __int8 *)sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - (void)result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = sub_1DCB867F8();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = &v8[v12];
  if (v8) {
    uint64_t v14 = (uint64_t)v13;
  }
  else {
    uint64_t v14 = 0;
  }
  return sub_1DCA6F9EC(v8, v14, a4);
}

id sub_1DCA76C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (void *)sub_1DCB86AB8();
  id v9 = objc_msgSend(a5, sel_uploadTaskWithRequest_fromData_completionHandler_, a1, v8, a4);

  return v9;
}

unint64_t sub_1DCA76CE4()
{
  unint64_t result = qword_1EAAA0A00;
  if (!qword_1EAAA0A00)
  {
    sub_1DCB86B18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0A00);
  }
  return result;
}

unint64_t sub_1DCA76D34()
{
  unint64_t result = qword_1EAAA6808;
  if (!qword_1EAAA6808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6808);
  }
  return result;
}

unint64_t sub_1DCA76D80()
{
  unint64_t result = qword_1EAAA6820;
  if (!qword_1EAAA6820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6820);
  }
  return result;
}

unint64_t sub_1DCA76DCC()
{
  unint64_t result = qword_1EAAA6828;
  if (!qword_1EAAA6828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6828);
  }
  return result;
}

unint64_t sub_1DCA76E18()
{
  unint64_t result = qword_1EAAA6838;
  if (!qword_1EAAA6838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6838);
  }
  return result;
}

unint64_t sub_1DCA76E64()
{
  unint64_t result = qword_1EAAA6858;
  if (!qword_1EAAA6858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6858);
  }
  return result;
}

unint64_t sub_1DCA76EB0()
{
  unint64_t result = qword_1EAAA6860;
  if (!qword_1EAAA6860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6860);
  }
  return result;
}

unint64_t sub_1DCA76EFC()
{
  unint64_t result = qword_1EAAA6868;
  if (!qword_1EAAA6868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6868);
  }
  return result;
}

unint64_t sub_1DCA76F48()
{
  unint64_t result = qword_1EAAA6870;
  if (!qword_1EAAA6870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6870);
  }
  return result;
}

unint64_t sub_1DCA76F94()
{
  unint64_t result = qword_1EAAA6878;
  if (!qword_1EAAA6878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6878);
  }
  return result;
}

uint64_t sub_1DCA76FE0()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DC8BAD04();

  return swift_deallocObject();
}

unint64_t sub_1DCA7701C()
{
  unint64_t result = qword_1EAAA68A0;
  if (!qword_1EAAA68A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68A0);
  }
  return result;
}

uint64_t sub_1DCA77068()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCA789FC();

  return swift_deallocObject();
}

unint64_t sub_1DCA770B4()
{
  unint64_t result = qword_1EAAA68A8;
  if (!qword_1EAAA68A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68A8);
  }
  return result;
}

unint64_t sub_1DCA77104()
{
  unint64_t result = qword_1EAAA68B0;
  if (!qword_1EAAA68B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68B0);
  }
  return result;
}

unint64_t sub_1DCA77154()
{
  unint64_t result = qword_1EAAA68B8;
  if (!qword_1EAAA68B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68B8);
  }
  return result;
}

unint64_t sub_1DCA771A4()
{
  unint64_t result = qword_1EAAA68C0;
  if (!qword_1EAAA68C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68C0);
  }
  return result;
}

void *initializeWithCopy for FileServerInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FileServerInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FileServerInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileServerInfo(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileServerInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for S3BucketAddress()
{
}

uint64_t destroy for S3Path()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s13SoundAnalysis6S3PathVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for S3Path(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for S3Path(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

void type metadata accessor for S3Path()
{
}

void *initializeBufferWithCopyOfBuffer for S3PathOrBucket(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for S3PathOrBucket()
{
  return swift_release();
}

void *assignWithCopy for S3PathOrBucket(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for S3PathOrBucket(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for S3PathOrBucket()
{
}

void type metadata accessor for SNACIUtils()
{
}

ValueMetadata *type metadata accessor for S3PathOrBucket.CodingKeys()
{
  return &type metadata for S3PathOrBucket.CodingKeys;
}

ValueMetadata *type metadata accessor for S3PathOrBucket.BucketCodingKeys()
{
  return &type metadata for S3PathOrBucket.BucketCodingKeys;
}

unsigned char *_s13SoundAnalysis14S3PathOrBucketO16BucketCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA776F4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for S3PathOrBucket.PathCodingKeys()
{
  return &type metadata for S3PathOrBucket.PathCodingKeys;
}

ValueMetadata *type metadata accessor for S3Path.CodingKeys()
{
  return &type metadata for S3Path.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for S3BucketAddress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA77808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for S3BucketAddress.CodingKeys()
{
  return &type metadata for S3BucketAddress.CodingKeys;
}

unint64_t sub_1DCA77844()
{
  unint64_t result = qword_1EAAA68C8;
  if (!qword_1EAAA68C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68C8);
  }
  return result;
}

unint64_t sub_1DCA77894()
{
  unint64_t result = qword_1EAAA68D0;
  if (!qword_1EAAA68D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68D0);
  }
  return result;
}

unint64_t sub_1DCA778E4()
{
  unint64_t result = qword_1EAAA68D8;
  if (!qword_1EAAA68D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68D8);
  }
  return result;
}

unint64_t sub_1DCA77934()
{
  unint64_t result = qword_1EAAA68E0;
  if (!qword_1EAAA68E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68E0);
  }
  return result;
}

unint64_t sub_1DCA77984()
{
  unint64_t result = qword_1EAAA68E8;
  if (!qword_1EAAA68E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68E8);
  }
  return result;
}

unint64_t sub_1DCA779D4()
{
  unint64_t result = qword_1EAAA68F0;
  if (!qword_1EAAA68F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68F0);
  }
  return result;
}

unint64_t sub_1DCA77A24()
{
  unint64_t result = qword_1EAAA68F8;
  if (!qword_1EAAA68F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA68F8);
  }
  return result;
}

unint64_t sub_1DCA77A74()
{
  unint64_t result = qword_1EAAA6900;
  if (!qword_1EAAA6900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6900);
  }
  return result;
}

unint64_t sub_1DCA77AC4()
{
  unint64_t result = qword_1EAAA6908;
  if (!qword_1EAAA6908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6908);
  }
  return result;
}

unint64_t sub_1DCA77B14()
{
  unint64_t result = qword_1EAAA6910;
  if (!qword_1EAAA6910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6910);
  }
  return result;
}

unint64_t sub_1DCA77B64()
{
  unint64_t result = qword_1EAAA6918;
  if (!qword_1EAAA6918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6918);
  }
  return result;
}

unint64_t sub_1DCA77BB4()
{
  unint64_t result = qword_1EAAA6920;
  if (!qword_1EAAA6920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6920);
  }
  return result;
}

unint64_t sub_1DCA77C04()
{
  unint64_t result = qword_1EAAA6928;
  if (!qword_1EAAA6928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6928);
  }
  return result;
}

unint64_t sub_1DCA77C54()
{
  unint64_t result = qword_1EAAA6930;
  if (!qword_1EAAA6930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6930);
  }
  return result;
}

unint64_t sub_1DCA77CA4()
{
  unint64_t result = qword_1EAAA6938;
  if (!qword_1EAAA6938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6938);
  }
  return result;
}

unint64_t sub_1DCA77CF0()
{
  unint64_t result = qword_1EAAA6A60;
  if (!qword_1EAAA6A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6A60);
  }
  return result;
}

uint64_t sub_1DCA77D3C()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA77D74()
{
  sub_1DCB86708();
  sub_1DCA786BC();
  sub_1DCA78980();
  sub_1DC88D5C8();
  v0();
  swift_release();
  swift_release();
  sub_1DCA78790();

  return swift_deallocObject();
}

id (*sub_1DCA77E10())()
{
  uint64_t v0 = sub_1DCA78960();
  sub_1DC89D568(v0);
  sub_1DCA78850();
  sub_1DCA78790();

  return sub_1DCA70D10(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1DCA77E88()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA77E98()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA77ED0()
{
  swift_release();
  swift_release();

  sub_1DC8BAD04();

  return swift_deallocObject();
}

uint64_t sub_1DCA77F10(uint64_t a1, uint64_t a2)
{
  return sub_1DCA7074C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1DCA77F1C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DCA77F64(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1DCA70EA4(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(uint64_t, void *))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_1DCA77F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCA77F80()
{
  return swift_release();
}

uint64_t sub_1DCA77F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(qword_1EAA9CBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCA77FF0()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 != 15) {
    sub_1DC881920(*(void *)(v0 + 16), v1);
  }

  return swift_deallocObject();
}

uint64_t sub_1DCA78038()
{
  sub_1DCB86708();
  sub_1DCA786BC();
  sub_1DCA78980();
  sub_1DC88D5C8();
  v0();
  swift_release();
  sub_1DCA78790();

  return swift_deallocObject();
}

id (*sub_1DCA780BC())()
{
  uint64_t v0 = sub_1DCA78960();
  sub_1DC89D568(v0);
  sub_1DCA78790();

  return sub_1DCA71D88(v1, v2, v3, v4, v5);
}

uint64_t sub_1DCA78138(uint64_t a1, uint64_t *a2)
{
  sub_1DC87E988(a2);
  sub_1DCA786BC();
  sub_1DC88D5C8();
  v3();
  return a1;
}

uint64_t sub_1DCA78184()
{
  swift_release();
  swift_release();
  sub_1DC8BAD04();

  return swift_deallocObject();
}

uint64_t sub_1DCA781BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCA71F08(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v4 + 24));
}

uint64_t sub_1DCA781C8()
{
  sub_1DC89D76C();
  uint64_t v1 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = sub_1DCB86708();
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  unint64_t v10 = (v4 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v7);
  swift_release();
  swift_release();
  sub_1DC89D71C();
  return swift_deallocObject();
}

id (*sub_1DCA782E0())()
{
  uint64_t v0 = sub_1DCB86A18();
  sub_1DC89D568(v0);
  uint64_t v1 = sub_1DCB86708();
  sub_1DC89D568(v1);
  sub_1DCA78850();
  sub_1DCA78790();

  return sub_1DCA713FC(v2, v3);
}

uint64_t sub_1DCA783A8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA783E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(a3, a4);
}

unsigned char *_s13SoundAnalysis14S3PathOrBucketO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA784DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SNACIUtils.DomainError()
{
}

unint64_t sub_1DCA78514()
{
  unint64_t result = qword_1EAAA6AB8;
  if (!qword_1EAAA6AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6AB8);
  }
  return result;
}

uint64_t sub_1DCA78598()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void sub_1DCA785B0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t a6, void (*a7)(uint64_t), void (*a8)(uint64_t))
{
}

size_t sub_1DCA785B8(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_1DCA785E0()
{
  return 0;
}

uint64_t sub_1DCA785F0()
{
  return 0;
}

uint64_t sub_1DCA78610()
{
  return v0;
}

uint64_t sub_1DCA7866C()
{
  return v0;
}

uint64_t sub_1DCA78684()
{
  return v0 + 32;
}

uint64_t sub_1DCA786D0()
{
  return v0;
}

uint64_t sub_1DCA786F0()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1DCA78730()
{
  return swift_allocObject();
}

uint64_t sub_1DCA78768(unint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = v3;
  *(void *)(v4 - 56) = a1 | 0x8000000000000000;
  return swift_retain();
}

uint64_t sub_1DCA7879C()
{
  return sub_1DCB86A18();
}

uint64_t sub_1DCA787C4()
{
  return *(void *)v0;
}

uint64_t sub_1DCA787E0()
{
  return v0 + 32;
}

uint64_t sub_1DCA787EC()
{
  return v0;
}

uint64_t sub_1DCA78804()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_1DCA7881C()
{
  return sub_1DCB88EC8();
}

uint64_t sub_1DCA78838()
{
  return v0;
}

uint64_t sub_1DCA78868()
{
  return sub_1DCB88D08();
}

uint64_t sub_1DCA78880()
{
  return sub_1DCB89018();
}

uint64_t sub_1DCA788A4()
{
  return v0;
}

uint64_t sub_1DCA788BC()
{
  return sub_1DCB89018();
}

uint64_t sub_1DCA788E0()
{
  return v0;
}

uint64_t sub_1DCA788F8()
{
  return sub_1DCB879B8();
}

uint64_t sub_1DCA78914()
{
  return sub_1DCB88DA8();
}

uint64_t sub_1DCA78930(uint64_t a1, unsigned char *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t sub_1DCA7894C()
{
  return v0;
}

uint64_t sub_1DCA78960()
{
  return sub_1DCB86708();
}

uint64_t sub_1DCA789A8()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA789DC()
{
  return sub_1DCB88758();
}

uint64_t sub_1DCA78A08()
{
  return v0;
}

uint64_t sub_1DCA78A20()
{
  return 0;
}

uint64_t sub_1DCA78A34(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_1DCA78A48()
{
  return swift_dynamicCast();
}

void sub_1DCA78A68()
{
  *(unsigned char *)(v0 - 66) = 1;
}

void sub_1DCA78A74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1DC897E1C();
    uint64_t v5 = (unint64_t *)(a1 + 32);
    while (1)
    {
      unint64_t v7 = *v5++;
      unint64_t v6 = v7;
      if ((v7 & 0x8000000000000000) != 0) {
        break;
      }
      if (v6 >= *(void *)(a2 + 16)) {
        goto LABEL_11;
      }
      uint64_t v8 = *(void *)(a2 + 32 + 8 * v6);
      unint64_t v9 = *(void *)(v10 + 16);
      if (v9 >= *(void *)(v10 + 24) >> 1) {
        sub_1DC897E1C();
      }
      *(void *)(v10 + 16) = v9 + 1;
      *(void *)(v10 + 8 * v9 + 32) = v8;
      if (!--v3) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

id sub_1DCA78B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAA9DB50);
  uint64_t v5 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v5, a2, a3);

  return v6;
}

unint64_t sub_1DCA78C1C(void *a1)
{
  uint64_t v2 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v2 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = sub_1DCB0F884(0, v2);
  uint64_t v4 = v3[2];
  if (v4)
  {
    unint64_t v5 = MEMORY[0x1E4FBC860];
    uint64_t v6 = 1;
    while (v4 <= v3[2])
    {
      uint64_t v7 = v3[v4 + 3];
      sub_1DC87E988(&qword_1EAA9C720);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1DCBB8670;
      *(void *)(v8 + 32) = sub_1DCB88048();
      sub_1DCB87C68();
      sub_1DCB18DBC(v5);
      unint64_t v5 = v8;
      id v9 = objc_msgSend(a1, sel_objectAtIndex_, v7);
      sub_1DCB88808();
      swift_unknownObjectRelease();
      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
      swift_dynamicCast();
      uint64_t v10 = (uint64_t)objc_msgSend(v12, sel_integerValue);

      if ((unsigned __int128)(v6 * (__int128)v10) >> 64 != (v6 * v10) >> 63) {
        goto LABEL_10;
      }
      v6 *= v10;
      if (!--v4)
      {
        swift_release();
        return v5;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_12:
  swift_release();
  return MEMORY[0x1E4FBC860];
}

void sub_1DCA78DE0(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v8 = a1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  unint64_t v10 = a1;
  while (1)
  {
    if (a2 == v10)
    {
      swift_bridgeObjectRelease();
      return;
    }
    if (a2 < a1) {
      break;
    }
    if (v8 < a1) {
      goto LABEL_16;
    }
    if ((uint64_t)v10 >= a2) {
      goto LABEL_17;
    }
    if (v8 < 0) {
      goto LABEL_18;
    }
    if (v10 >= *(void *)(a3 + 16)) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(a3 + 8 * v10++ + 32);
    if (v11 == a4)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DC897E1C();
      }
      unint64_t v12 = *(void *)(v9 + 16);
      if (v12 >= *(void *)(v9 + 24) >> 1) {
        sub_1DC897E1C();
      }
      *(void *)(v9 + 16) = v12 + 1;
      *(void *)(v9 + 8 * v12 + 32) = v10 - 1;
      int64_t v8 = v10;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
}

id sub_1DCA78F1C(void *a1)
{
  if (sub_1DCA7AEE4(a1))
  {
    return a1;
  }
  else
  {
    sub_1DC89C89C(0, (unint64_t *)&unk_1EAA9DB50);
    sub_1DC87E988(&qword_1EAA9C720);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1DCBB8670;
    *(void *)(v2 + 32) = a1;
    uint64_t v4 = v2;
    sub_1DCB87C68();
    return sub_1DCA78B80(v4, 0, (uint64_t)objc_msgSend(a1, sel_dataType));
  }
}

id sub_1DCA78FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, id a5)
{
  uint64_t v8 = sub_1DCB88788();
  if (!v8)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v16 = 0;
    swift_willThrow();
    goto LABEL_5;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  unint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v10;
  v12[3] = v11;
  uint64_t v13 = sub_1DCA7D2F0();
  a5 = sub_1DCA7B5CC(v13, v14, a4, (uint64_t)a5, v15, v12);
  swift_release();
  if (v5)
  {
    MEMORY[0x1E01A99C0](v10, -1, -1);
LABEL_5:
    swift_willThrow();
  }
  return a5;
}

uint64_t sub_1DCA790EC(void *a1)
{
  uint64_t result = (uint64_t)sub_1DCA7AEE4(a1);
  if ((result & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DCA23E10(v2, v3, (uint64_t)"Expected multi array to have standard strides");
    return sub_1DC8BAC20();
  }
  return result;
}

uint64_t sub_1DCA79144(uint64_t a1, uint64_t a2)
{
  uint64_t v106 = (char *)a2;
  uint64_t v107 = (char *)a1;
  sub_1DC87E988(&qword_1EAAA6AD0);
  sub_1DC89D4E0();
  uint64_t v100 = v2;
  uint64_t v101 = v3;
  MEMORY[0x1F4188790](v2);
  sub_1DC888120();
  v96[5] = v4;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v5);
  sub_1DC91990C();
  v96[4] = v6;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v7);
  sub_1DC91990C();
  v96[9] = v8;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v9);
  sub_1DC91990C();
  v96[7] = v10;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v11);
  sub_1DC91990C();
  uint64_t v103 = v12;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v13);
  uint64_t v105 = (char *)v96 - v14;
  sub_1DC87E988(&qword_1EAAA6AD8);
  sub_1DC89D4E0();
  uint64_t v97 = v16;
  uint64_t v98 = v15;
  MEMORY[0x1F4188790](v15);
  sub_1DC888120();
  v96[0] = v17;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v18);
  sub_1DC91990C();
  v96[1] = v19;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v20);
  sub_1DC95AF54();
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v96 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)v96 - v26;
  sub_1DC87E988(&qword_1EAAA0BC0);
  sub_1DC89D4E0();
  uint64_t v99 = v28;
  MEMORY[0x1F4188790](v29);
  sub_1DC888120();
  uint64_t v96[3] = v30;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v31);
  sub_1DC91990C();
  v96[2] = v32;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v33);
  sub_1DC91990C();
  v96[8] = v34;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v35);
  sub_1DC91990C();
  v96[6] = v36;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v37);
  sub_1DC91990C();
  uint64_t v102 = v38;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v39);
  uint64_t v104 = (char *)v96 - v40;
  type metadata accessor for ShapedArray();
  sub_1DC88819C();
  uint64_t v42 = MEMORY[0x1F4188790](v41);
  uint64_t v44 = (char *)v96 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x1F4188790](v42);
  uint64_t v47 = (char *)v96 - v46;
  uint64_t v48 = MEMORY[0x1F4188790](v45);
  uint64_t v50 = (char *)v96 - v49;
  MEMORY[0x1F4188790](v48);
  uint64_t v52 = (char *)v96 - v51;
  sub_1DCA7BFF4((uint64_t)v107, (uint64_t)v96 - v51);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v54 = v99;
      uint64_t v55 = *(void (**)(void))(v99 + 32);
      sub_1DC92F7F0();
      v55();
      sub_1DCA7BFF4((uint64_t)v106, (uint64_t)v50);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1DC92F7F0();
        v55();
        uint64_t v56 = (void *)sub_1DCB87008();
        uint64_t v57 = (void *)sub_1DCB87008();
        char v58 = sub_1DC8DCEB4(v56, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = *(void (**)(void))(v54 + 16);
        sub_1DCA7D26C();
        v59();
        sub_1DCA7D2F0();
        sub_1DCA7D26C();
        v59();
        if (v58)
        {
          sub_1DCB87028();
          sub_1DC996DDC();
          sub_1DCB87028();
          uint64_t v60 = (void *)sub_1DCA7D2FC();
          uint64_t v62 = sub_1DC8DCEB4(v60, v61);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v62 = 0;
        }
        uint64_t v87 = *(void (**)(void))(v54 + 8);
        sub_1DCA7D200();
        v87();
        sub_1DCA7D200();
        v87();
        sub_1DCA7D26C();
        v59();
        sub_1DCA7D26C();
        v59();
        if (v62)
        {
          sub_1DCA7CBCC(&qword_1EAA9FCE8, &qword_1EAAA0BC0);
          sub_1DCB87058();
          sub_1DC996DDC();
          uint64_t v88 = sub_1DCB87058();
          char v79 = sub_1DC8DCF18(v62, v88);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v79 = 0;
        }
        sub_1DCA7D200();
        v87();
        sub_1DCA7D200();
        v87();
        sub_1DCA7D200();
        v87();
        sub_1DCA7D200();
        v87();
        return v79 & 1;
      }
      sub_1DCA7D200();
      v77();
      uint64_t v67 = (uint64_t)v50;
LABEL_13:
      sub_1DCA7C6B4(v67);
      char v79 = 0;
      return v79 & 1;
    }
    uint64_t v68 = v100;
    uint64_t v69 = v101;
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
    v70(v105, v52, v100);
    sub_1DCA7BFF4((uint64_t)v106, (uint64_t)v44);
    sub_1DCA7D2F0();
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_1DCA7D1F0();
      v78();
      uint64_t v67 = (uint64_t)v44;
      goto LABEL_13;
    }
    v70(v103, v44, v68);
    uint64_t v71 = (void *)sub_1DCB87008();
    uint64_t v72 = (void *)sub_1DCB87008();
    uint64_t v73 = sub_1DC8DCEB4(v71, v72);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v74 = *(void (**)(void))(v69 + 16);
    sub_1DCA7D25C();
    v74();
    sub_1DCA7D25C();
    v74();
    if (v73)
    {
      sub_1DCB87028();
      sub_1DCB87028();
      uint64_t v75 = (void *)sub_1DC996DDC();
      char v76 = sub_1DC8DCEB4(v75, (void *)v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v76 = 0;
    }
    uint64_t v89 = *(void (**)(void))(v69 + 8);
    sub_1DCA7D1F0();
    v89();
    sub_1DCA7D1F0();
    v89();
    sub_1DCA7D25C();
    v74();
    sub_1DCA7D25C();
    v74();
    if (v76)
    {
      sub_1DCA7CBCC(&qword_1EAAA6BA0, &qword_1EAAA6AD0);
      uint64_t v90 = sub_1DCB87058();
      uint64_t v91 = sub_1DCB87058();
      char v79 = sub_1DC8DCF7C(v90, v91);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v79 = 0;
    }
    sub_1DCA7D1F0();
    v89();
    sub_1DCA7D1F0();
    v89();
    sub_1DCA7D1F0();
    v89();
    sub_1DCA7D1F0();
    v89();
  }
  else
  {
    uint64_t v107 = v25;
    uint64_t v63 = v97;
    uint64_t v64 = v98;
    unint64_t v65 = *(void (**)(void))(v97 + 32);
    sub_1DC92F7F0();
    v65();
    sub_1DCA7BFF4((uint64_t)v106, (uint64_t)v47);
    uint64_t v66 = v63;
    if (swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v64);
      uint64_t v67 = (uint64_t)v47;
      goto LABEL_13;
    }
    sub_1DC92F7F0();
    v65();
    uint64_t v80 = (void *)sub_1DCB87008();
    uint64_t v81 = (void *)sub_1DCB87008();
    char v82 = sub_1DC8DCEB4(v80, v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v83 = *(void (**)(void))(v66 + 16);
    uint64_t v106 = v27;
    sub_1DCA7D24C();
    v83();
    sub_1DCA7D2FC();
    sub_1DCA7D24C();
    v83();
    if (v82)
    {
      uint64_t v84 = (void *)sub_1DCB87028();
      uint64_t v85 = (void *)sub_1DCB87028();
      char v86 = sub_1DC8DCEB4(v84, v85);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v86 = 0;
    }
    uint64_t v92 = *(void (**)(void))(v66 + 8);
    sub_1DCA7D210();
    v92();
    sub_1DCA7D210();
    v92();
    sub_1DCA7D24C();
    v83();
    sub_1DCA7D24C();
    v83();
    if (v86)
    {
      sub_1DCA7CBCC(&qword_1EAAA6BA8, &qword_1EAAA6AD8);
      sub_1DCA7D27C();
      uint64_t v93 = sub_1DCB87058();
      sub_1DCA7D27C();
      uint64_t v94 = sub_1DCB87058();
      char v79 = sub_1DC8DCCEC(v93, v94);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v79 = 0;
    }
    sub_1DCA7D210();
    v92();
    sub_1DCA7D210();
    v92();
    sub_1DCA7D210();
    v92();
    sub_1DCA7D210();
    v92();
  }
  return v79 & 1;
}

uint64_t sub_1DCA79B34()
{
  uint64_t v4 = v0;
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA6AD0);
  sub_1DC89D4E0();
  uint64_t v25 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA6AD8);
  sub_1DC89D4E0();
  uint64_t v24 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC89D970();
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA0BC0);
  sub_1DC89D4E0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1DC89D9A0();
  type metadata accessor for ShapedArray();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v18);
  sub_1DC95AE60();
  sub_1DCA7BFF4(v4, v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC92F630();
      v20();
      sub_1DCA7CBCC(&qword_1EAA9FCE8, &qword_1EAAA0BC0);
      sub_1DCB87058();
      sub_1DC8A85A8();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v2, v14);
    }
    else
    {
      sub_1DC92F630();
      v23();
      sub_1DCA7CBCC(&qword_1EAAA6BA0, &qword_1EAAA6AD0);
      sub_1DCB87058();
      sub_1DC8A8568();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v10, v5);
    }
  }
  else
  {
    sub_1DC92F630();
    v22();
    sub_1DCA7CBCC(&qword_1EAAA6BA8, &qword_1EAAA6AD8);
    sub_1DCB87058();
    sub_1DC8A7CF4();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v1, v11);
  }
}

uint64_t sub_1DCA79DF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x343674616F6C66 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x323374616F6C66 && a2 == 0xE700000000000000;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x3233746E69 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DCA79F40(char a1)
{
  if (!a1) {
    return 0x343674616F6C66;
  }
  if (a1 == 1) {
    return 0x323374616F6C66;
  }
  return 0x3233746E69;
}

uint64_t sub_1DCA79F94(void *a1)
{
  sub_1DC87E988(&qword_1EAAA6B68);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC9D2F18(v5, v33);
  sub_1DC87E988(&qword_1EAAA6AD0);
  sub_1DC89D4E0();
  uint64_t v39 = v7;
  uint64_t v40 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v38 = v8;
  sub_1DC87E988(&qword_1EAAA6B70);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA0BC0);
  sub_1DC89D4E0();
  uint64_t v36 = v11;
  uint64_t v37 = v10;
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  uint64_t v35 = v12;
  sub_1DC87E988(&qword_1EAAA6B78);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v13);
  sub_1DC89D9A0();
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA6AD8);
  sub_1DC89D4E0();
  uint64_t v34 = v15;
  MEMORY[0x1F4188790](v16);
  sub_1DC8A22D0();
  uint64_t v19 = v18 - v17;
  type metadata accessor for ShapedArray();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v20);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA6B80);
  sub_1DC89D4E0();
  uint64_t v42 = v22;
  uint64_t v43 = v21;
  MEMORY[0x1F4188790](v21);
  sub_1DC981E40();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA7CA38();
  sub_1DCB892B8();
  sub_1DCA7BFF4(v41, v1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v25 = v35;
      uint64_t v24 = v36;
      sub_1DCA7D2DC();
      uint64_t v26 = v37;
      sub_1DC92F630();
      v27();
      sub_1DCA7CB34();
      sub_1DCA7D2A0();
      sub_1DC8CC998(&qword_1EAAA6B90, &qword_1EAAA0BC0);
    }
    else
    {
      uint64_t v25 = v38;
      uint64_t v24 = v39;
      sub_1DCA7D2DC();
      uint64_t v26 = v40;
      sub_1DC92F630();
      v31();
      sub_1DCA7CA84();
      sub_1DCA7D2A0();
      sub_1DC8CC998(&qword_1EAAA6B88, &qword_1EAAA6AD0);
    }
    sub_1DCA7D308();
    sub_1DC88D5C8();
    v32();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v2, v19);
  }
  else
  {
    sub_1DC92F630();
    v28();
    sub_1DCA7CB80();
    sub_1DCB88E88();
    sub_1DC8CC998(&qword_1EAAA6B98, &qword_1EAAA6AD8);
    sub_1DCB88F18();
    sub_1DC88D5C8();
    v29();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v19, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v2, v43);
  }
}

uint64_t sub_1DCA7A498()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA7A4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v70 = sub_1DC87E988(&qword_1EAAA6B10);
  sub_1DC89D4E0();
  uint64_t v67 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v75 = v7;
  uint64_t v69 = sub_1DC87E988(&qword_1EAAA6B18);
  sub_1DC89D4E0();
  uint64_t v66 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  uint64_t v72 = v10;
  uint64_t v68 = sub_1DC87E988(&qword_1EAAA6B20);
  sub_1DC89D4E0();
  uint64_t v65 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC9D2F18(v13, v59);
  sub_1DC87E988(&qword_1EAAA6B28);
  sub_1DC89D4E0();
  uint64_t v73 = v15;
  uint64_t v74 = v14;
  MEMORY[0x1F4188790](v14);
  sub_1DC89D9B8();
  uint64_t v16 = type metadata accessor for ShapedArray();
  sub_1DC88819C();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v59 - v22;
  MEMORY[0x1F4188790](v21);
  sub_1DC95AF54();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v59 - v25;
  uint64_t v76 = a1;
  uint64_t v27 = (void *)sub_1DCA7D2F0();
  sub_1DC881A8C(v27, v28);
  sub_1DCA7CA38();
  uint64_t v29 = v77;
  sub_1DCB89298();
  if (!v29)
  {
    uint64_t v62 = v23;
    uint64_t v63 = v20;
    uint64_t v60 = v2;
    uint64_t v61 = v26;
    uint64_t v31 = v74;
    uint64_t v64 = v16;
    uint64_t v77 = v3;
    uint64_t v32 = sub_1DCB88E58();
    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      uint64_t v34 = v31;
      int v35 = *(unsigned __int8 *)(v32 + 32);
      sub_1DC9CFE4C(1, v33, v32, v32 + 32, 0, (2 * v33) | 1);
      uint64_t v37 = v36;
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      if (v37 == v39 >> 1)
      {
        if (v35)
        {
          if (v35 == 1)
          {
            char v79 = 1;
            sub_1DCA7CB34();
            sub_1DCA7D228();
            sub_1DC87E988(&qword_1EAAA0BC0);
            sub_1DC8CC998(&qword_1EAAA6B50, &qword_1EAAA0BC0);
            sub_1DCB88DF8();
            uint64_t v30 = v76;
            uint64_t v50 = sub_1DCA7D1D8();
            v51(v50);
            swift_unknownObjectRelease();
            uint64_t v52 = sub_1DCA7D288();
            v53(v52);
            uint64_t v54 = (uint64_t)v62;
            swift_storeEnumTagMultiPayload();
LABEL_15:
            uint64_t v58 = (uint64_t)v61;
            sub_1DCA7CAD0(v54, (uint64_t)v61);
            sub_1DCA7CAD0(v58, v71);
            return sub_1DC8818D0(v30);
          }
          char v80 = 2;
          sub_1DCA7CA84();
          sub_1DCA7D228();
          sub_1DC87E988(&qword_1EAAA6AD0);
          sub_1DC8CC998(&qword_1EAAA6B40, &qword_1EAAA6AD0);
          sub_1DCB88DF8();
          uint64_t v30 = v76;
          sub_1DC88D5C8();
          v55();
          swift_unknownObjectRelease();
          uint64_t v56 = sub_1DCA7D2C4();
          v57(v56);
          uint64_t v54 = (uint64_t)v63;
        }
        else
        {
          char v78 = 0;
          sub_1DCA7CB80();
          sub_1DCA7D228();
          sub_1DC87E988(&qword_1EAAA6AD8);
          sub_1DC8CC998(&qword_1EAAA6B60, &qword_1EAAA6AD8);
          uint64_t v54 = v60;
          sub_1DCB88DF8();
          uint64_t v30 = v76;
          uint64_t v47 = sub_1DCA7D1D8();
          v48(v47);
          swift_unknownObjectRelease();
          sub_1DC88D5C8();
          v49();
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_15;
      }
      uint64_t v30 = v76;
      uint64_t v40 = v73;
      uint64_t v31 = v34;
    }
    else
    {
      uint64_t v30 = v76;
      uint64_t v40 = v73;
    }
    uint64_t v41 = v64;
    uint64_t v42 = sub_1DCB88B18();
    swift_allocError();
    uint64_t v44 = v43;
    sub_1DC87E988(&qword_1EAA9E130);
    uint64_t *v44 = v41;
    uint64_t v45 = v77;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x1E4FBBA70], v42);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v45, v31);
    return sub_1DC8818D0(v30);
  }
  uint64_t v30 = v76;
  return sub_1DC8818D0(v30);
}

uint64_t sub_1DCA7AC38()
{
  return sub_1DCA79F40(*v0);
}

uint64_t sub_1DCA7AC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA79DF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA7AC68(uint64_t a1)
{
  unint64_t v2 = sub_1DCA7CA38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA7ACA4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA7CA38();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA7ACE0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA7CB34();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA7AD1C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA7CB34();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA7AD58(uint64_t a1)
{
  unint64_t v2 = sub_1DCA7CB80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA7AD94(uint64_t a1)
{
  unint64_t v2 = sub_1DCA7CB80();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA7ADD0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA7CA84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA7AE0C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA7CA84();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA7AE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCA7A4D8(a1, a2);
}

uint64_t sub_1DCA7AE60(void *a1)
{
  return sub_1DCA79F94(a1);
}

uint64_t sub_1DCA7AE80()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA7AEC0()
{
  return sub_1DCB883F8();
}

id sub_1DCA7AEE4(void *a1)
{
  id result = objc_msgSend(a1, sel_shape);
  if (result)
  {
    uint64_t v4 = result;
    sub_1DCA78C1C(result);
    id result = objc_msgSend(a1, sel_strides);
    if (result)
    {
      uint64_t v5 = result;
      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
      sub_1DCB87C08();
      sub_1DC996DDC();
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(v5, sel_isEqual_, v1);

      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DCA7AFAC(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DCA23E10(v15, v16, (uint64_t)"Expected count to be non-negative");
    sub_1DC8BAC20();
    return;
  }
  uint64_t v2 = a2;
  id v4 = objc_msgSend(a1, sel_shape);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v5 = sub_1DCB87C38();

  unint64_t v26 = v5;
  id v6 = objc_msgSend(a1, sel_strides);
  unint64_t v7 = sub_1DCB87C38();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DCB88CC8();
    if (v8) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v25 = (void *)MEMORY[0x1E4FBC860];
  sub_1DC897E1C();
  if (v8 < 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v9 = 0;
  uint64_t v10 = v25;
  do
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x1E01A7AE0](v9, v7);
    }
    else {
      id v11 = *(id *)(v7 + 8 * v9 + 32);
    }
    uint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_integerValue);

    unint64_t v14 = v25[2];
    if (v14 >= v25[3] >> 1) {
      sub_1DC897E1C();
    }
    ++v9;
    float64x2_t v25[2] = v14 + 1;
    v25[v14 + 4] = v13;
  }
  while (v8 != v9);
  swift_bridgeObjectRelease();
LABEL_16:
  sub_1DCA31FA4(v10);
  char v18 = v17;
  swift_bridgeObjectRelease();
  if (v18)
  {
    if (!v2)
    {
LABEL_29:
      id v21 = a1;
      id v22 = objc_msgSend(v21, sel_dataPointer);
      id v23 = objc_msgSend(v21, sel_dataType);
      id v24 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
      sub_1DCA7C058((uint64_t)v22, v26, (uint64_t)v23, v7, 0, 0);
      return;
    }
  }
  else if (!v2)
  {
    goto LABEL_29;
  }
  if (v2 >= 1)
  {
    while (1)
    {
      sub_1DCB88688();
      if (v26 >> 62)
      {
        sub_1DC8C20C8();
        uint64_t v19 = sub_1DCB88CC8();
        swift_bridgeObjectRelease();
        if (v19 < 0) {
          break;
        }
      }
      sub_1DC8C1290();
      sub_1DCB88048();
      if (v7 >> 62)
      {
        sub_1DC8C20C8();
        uint64_t v20 = sub_1DCB88CC8();
        swift_bridgeObjectRelease();
        if (v20 < 0)
        {
          __break(1u);
          goto LABEL_29;
        }
      }
      sub_1DC8C1290();
      if (!--v2) {
        goto LABEL_29;
      }
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_32:
  __break(1u);
}

void sub_1DCA7B330(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_shape);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  unint64_t v5 = sub_1DCB87C38();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6 <= a2)
  {
    id v9 = objc_msgSend(a1, sel_shape);
    unint64_t v10 = sub_1DCB87C38();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1DCB88CC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (__OFSUB__(a2, v11)) {
      __break(1u);
    }
    else {
      sub_1DCA7AFAC(a1, a2 - v11);
    }
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DCA23E10(v7, v8, (uint64_t)"Expected new dimension count to be at least as large as original");
    sub_1DC8BAC20();
  }
}

uint64_t sub_1DCA7B4C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    id v4 = (uint64_t *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 16);
    do
    {
      uint64_t v7 = *v4++;
      uint64_t v6 = v7;
      if (v7 > v3) {
        uint64_t v3 = v6;
      }
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRetain();
  sub_1DCA78DE0(0, v2, a1, v3);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1DCA7D2FC();
  sub_1DCA78A74(v8, v9);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = 0;
    unint64_t v14 = (uint64_t *)(v11 + 32);
    do
    {
      uint64_t v16 = *v14++;
      uint64_t v15 = v16;
      if (v16 > v13) {
        uint64_t v13 = v15;
      }
      --v12;
    }
    while (v12);
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t result = v3 * v13;
  if ((unsigned __int128)(v3 * (__int128)v13) >> 64 != (v3 * v13) >> 63) {
    __break(1u);
  }
  return result;
}

void sub_1DCA7B5B4(uint64_t a1, uint64_t a2)
{
  if (a2) {
    JUMPOUT(0x1E01A99C0);
  }
}

id sub_1DCA7B5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v20 = a3;
  id v21 = a5;
  uint64_t v19 = a1;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v11 = (uint64_t *)(a2 + 32);
    do
    {
      uint64_t v12 = *v11++;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v12, v19, v20, v21);
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      --v8;
    }
    while (v8);
    uint64_t v9 = v22;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v13)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v15 = (uint64_t *)(a4 + 32);
    do
    {
      uint64_t v16 = *v15++;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v16);
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      --v13;
    }
    while (v13);
    uint64_t v14 = v23;
  }
  id v17 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  swift_retain();
  return sub_1DCA7C058(v19, v9, v20, v14, v21, a6);
}

uint64_t sub_1DCA7B760(void *a1)
{
  id v2 = objc_msgSend(a1, sel_dataType);
  if (v2 == (id)65568 || v2 == (id)131104 || v2 == (id)65600)
  {
    id v3 = a1;
    sub_1DCB87048();
    type metadata accessor for ShapedArray();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DCA14B2C(0xD000000000000017, v5, 1, 0, v6, 0x80000001DCB982C0);
    return sub_1DC8BAC20();
  }
}

id sub_1DCA7B8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void *a7)
{
  uint64_t v10 = a6();
  if (v10) {
    uint64_t v12 = v11 - v10;
  }
  else {
    uint64_t v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA58]), sel_initWithBytes_length_, a1, v12);
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = v13;
  id v14 = v13;
  id v26 = objc_msgSend(v14, sel_mutableBytes);
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    id v17 = (uint64_t *)(a3 + 32);
    do
    {
      uint64_t v18 = *v17++;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v18);
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCA7D27C();
      sub_1DCB88B88();
      sub_1DCB88B58();
      --v15;
    }
    while (v15);
    uint64_t v16 = v30;
  }
  uint64_t v19 = *(void *)(a5 + 16);
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (v19)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    id v21 = (uint64_t *)(a5 + 32);
    do
    {
      uint64_t v22 = *v21++;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v22);
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      --v19;
    }
    while (v19);
    uint64_t v20 = v31;
  }
  id v23 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  id v24 = sub_1DCA7C058((uint64_t)v26, v16, a4, v20, a7, v27);

  return v24;
}

void sub_1DCA7BAB8(uint64_t a1, uint64_t a2)
{
  id v3 = (void **)(a2 + 16);
  swift_beginAccess();
  if (*(void *)(a2 + 16))
  {
    swift_beginAccess();
    id v4 = *v3;
    *id v3 = 0;
  }
}

uint64_t sub_1DCA7BB20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1DC87E988(a3);
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC8A22D0();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10 - v9, a1, v5);
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAA9DB50);
  sub_1DCB86FF8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  if (!v3) {
    return v13;
  }
  return result;
}

id sub_1DCA7BC3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCA7B8B0(*a1, a1[1], a2, a4, a3, sub_1DCB058B0, sub_1DCA7C310);
}

id sub_1DCA7BC8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCA7B8B0(*a1, a1[1], a2, a4, a3, (uint64_t (*)(void))sub_1DCB058DC, sub_1DCA7C310);
}

uint64_t sub_1DCA7BCDC(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA6AD0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA0BC0);
  sub_1DC89D4E0();
  uint64_t v25 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC981E40();
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA6AD8);
  sub_1DC89D4E0();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1DC95AE60();
  type metadata accessor for ShapedArray();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v16);
  sub_1DC89D9B8();
  sub_1DCA7BFF4(a1, v3);
  sub_1DCA7D27C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1DC92F630();
      v18();
      uint64_t v19 = sub_1DCA7BB20(v1, 65568, &qword_1EAAA0BC0);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v9);
    }
    else
    {
      sub_1DC92F630();
      v22();
      uint64_t v19 = sub_1DCA7BB20(v8, 131104, &qword_1EAAA6AD0);
      uint64_t v23 = sub_1DCA7D2FC();
      v24(v23);
    }
  }
  else
  {
    sub_1DC92F630();
    v20();
    uint64_t v19 = sub_1DCA7BB20(v2, 65600, &qword_1EAAA6AD8);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v12);
  }
  return v19;
}

uint64_t type metadata accessor for ShapedArray()
{
  uint64_t result = qword_1EAAA6AE0;
  if (!qword_1EAAA6AE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCA7BFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShapedArray();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1DCA7C058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  void aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  uint64_t v11 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  sub_1DCA7D27C();
  uint64_t v12 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  if (a5)
  {
    aBlock[4] = a5;
    void aBlock[5] = a6;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1DCA7C210;
    aBlock[3] = &unk_1F37FAB48;
    uint64_t v13 = _Block_copy(aBlock);
    swift_release();
  }
  else
  {
    uint64_t v13 = 0;
  }
  aBlock[0] = 0;
  id v14 = objc_msgSend(v6, sel_initWithDataPointer_shape_dataType_strides_deallocator_error_, a1, v11, a3, v12, v13, aBlock);
  _Block_release(v13);

  if (v14)
  {
    id v15 = aBlock[0];
  }
  else
  {
    id v16 = aBlock[0];
    sub_1DCB86898();

    swift_willThrow();
  }
  return v14;
}

uint64_t sub_1DCA7C210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id sub_1DCA7C264@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  id result = sub_1DCA7BC3C(a1, a2, a3, a4);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

id sub_1DCA7C290@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  id result = sub_1DCA7BC8C(a1, a2, a3, a4);
  if (!v5) {
    *a5 = result;
  }
  return result;
}

id sub_1DCA7C2BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1DCA7C290(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_1DCA7C2D8()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA7C314(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCA7C324()
{
  return swift_release();
}

id sub_1DCA7C32C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1DCA7C264(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_1DCA7C348()
{
  return swift_deallocObject();
}

void sub_1DCA7C358(uint64_t a1)
{
  sub_1DCA7B5B4(a1, *(void *)(v1 + 16));
}

uint64_t *sub_1DCA7C360(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_1DC87E988(&qword_1EAAA6AD0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload == 1) {
        uint64_t v7 = sub_1DC87E988(&qword_1EAAA0BC0);
      }
      else {
        uint64_t v7 = sub_1DC87E988(&qword_1EAAA6AD8);
      }
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCA7C4F0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    uint64_t v3 = sub_1DC87E988(off_1E6CA7688[(int)result]);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_1DCA7C574(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_1DC87E988(off_1E6CA7688[EnumCaseMultiPayload]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DCA7C60C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DCA7C6B4(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_1DC87E988(off_1E6CA7688[EnumCaseMultiPayload]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCA7C6B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShapedArray();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCA7C710(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_1DC87E988(off_1E6CA7688[EnumCaseMultiPayload]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DCA7C7A8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DCA7C6B4(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_1DC87E988(off_1E6CA7688[EnumCaseMultiPayload]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1DCA7C850()
{
  sub_1DCA7C998(319, &qword_1EAAA6AF0);
  if (v0 <= 0x3F)
  {
    sub_1DCA7C998(319, &qword_1EAAA6AF8);
    if (v1 <= 0x3F)
    {
      sub_1DCA7C998(319, &qword_1EAAA6B00);
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_1DCA7C998(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1DCB87038();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1DCA7C9E8()
{
  unint64_t result = qword_1EAAA6B08;
  if (!qword_1EAAA6B08)
  {
    type metadata accessor for ShapedArray();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6B08);
  }
  return result;
}

unint64_t sub_1DCA7CA38()
{
  unint64_t result = qword_1EAAA6B30;
  if (!qword_1EAAA6B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6B30);
  }
  return result;
}

unint64_t sub_1DCA7CA84()
{
  unint64_t result = qword_1EAAA6B38;
  if (!qword_1EAAA6B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6B38);
  }
  return result;
}

uint64_t sub_1DCA7CAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShapedArray();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DCA7CB34()
{
  unint64_t result = qword_1EAAA6B48;
  if (!qword_1EAAA6B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6B48);
  }
  return result;
}

unint64_t sub_1DCA7CB80()
{
  unint64_t result = qword_1EAAA6B58;
  if (!qword_1EAAA6B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6B58);
  }
  return result;
}

uint64_t sub_1DCA7CBCC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShapedArray.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA7CCE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShapedArray.CodingKeys()
{
  return &type metadata for ShapedArray.CodingKeys;
}

ValueMetadata *type metadata accessor for ShapedArray.Float64CodingKeys()
{
  return &type metadata for ShapedArray.Float64CodingKeys;
}

ValueMetadata *type metadata accessor for ShapedArray.Float32CodingKeys()
{
  return &type metadata for ShapedArray.Float32CodingKeys;
}

unsigned char *_s13SoundAnalysis11ShapedArrayO17Float64CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA7CDE0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShapedArray.Int32CodingKeys()
{
  return &type metadata for ShapedArray.Int32CodingKeys;
}

unint64_t sub_1DCA7CE1C()
{
  unint64_t result = qword_1EAAA6BB0;
  if (!qword_1EAAA6BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BB0);
  }
  return result;
}

unint64_t sub_1DCA7CE6C()
{
  unint64_t result = qword_1EAAA6BB8;
  if (!qword_1EAAA6BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BB8);
  }
  return result;
}

unint64_t sub_1DCA7CEBC()
{
  unint64_t result = qword_1EAAA6BC0;
  if (!qword_1EAAA6BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BC0);
  }
  return result;
}

unint64_t sub_1DCA7CF0C()
{
  unint64_t result = qword_1EAAA6BC8;
  if (!qword_1EAAA6BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BC8);
  }
  return result;
}

unint64_t sub_1DCA7CF5C()
{
  unint64_t result = qword_1EAAA6BD0;
  if (!qword_1EAAA6BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BD0);
  }
  return result;
}

unint64_t sub_1DCA7CFAC()
{
  unint64_t result = qword_1EAAA6BD8;
  if (!qword_1EAAA6BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BD8);
  }
  return result;
}

unint64_t sub_1DCA7CFFC()
{
  unint64_t result = qword_1EAAA6BE0;
  if (!qword_1EAAA6BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BE0);
  }
  return result;
}

unint64_t sub_1DCA7D04C()
{
  unint64_t result = qword_1EAAA6BE8;
  if (!qword_1EAAA6BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BE8);
  }
  return result;
}

unint64_t sub_1DCA7D09C()
{
  unint64_t result = qword_1EAAA6BF0;
  if (!qword_1EAAA6BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BF0);
  }
  return result;
}

unint64_t sub_1DCA7D0EC()
{
  unint64_t result = qword_1EAAA6BF8;
  if (!qword_1EAAA6BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6BF8);
  }
  return result;
}

unint64_t sub_1DCA7D13C()
{
  unint64_t result = qword_1EAAA6C00;
  if (!qword_1EAAA6C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6C00);
  }
  return result;
}

unint64_t sub_1DCA7D18C()
{
  unint64_t result = qword_1EAAA6C08[0];
  if (!qword_1EAAA6C08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA6C08);
  }
  return result;
}

uint64_t sub_1DCA7D1D8()
{
  return v0;
}

void sub_1DCA7D220(uint64_t a1)
{
  sub_1DCA7BAB8(a1, v1);
}

uint64_t sub_1DCA7D228()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA7D27C()
{
  return v0;
}

uint64_t sub_1DCA7D288()
{
  return v0;
}

uint64_t sub_1DCA7D2A0()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DCA7D2C4()
{
  return v0;
}

uint64_t sub_1DCA7D2DC()
{
  return v0;
}

uint64_t sub_1DCA7D2F0()
{
  return v0;
}

uint64_t sub_1DCA7D2FC()
{
  return v0;
}

uint64_t sub_1DCA7D308()
{
  return sub_1DCB88F18();
}

uint64_t AudioDataAnalysisProvider.withAudioDataAnalysis<A, B>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, uint64_t))(a6 + 24))(a1, *(void *)(a3 + 16), *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t sub_1DCA7D36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return AudioDataAnalysisProvider.withAudioDataAnalysis<A, B>(_:_:)(a1, a2, a6, a3, a5, a5);
}

uint64_t dispatch thunk of static DependencyADAMAudioDataAnalysisType.environmentalDosage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DependencyADAMAudioDataReceiver.init(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of DependencyADAMAudioDataReceiver.startReceivingAudioSampleType(_:withCallback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of DependencyADAMAudioDataReceiver.stopReceivingAudioSampleType(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of GenericThrowingClosureAudioDataAnalysisReceiver.run<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of AudioDataAnalysisProviderProtocol.withAudioDataAnalysis<A, B>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t type metadata accessor for AudioDataAnalysisProvider()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA7D448()
{
  unint64_t v2 = *(void *)(v0 + 24);
  if (v2 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *int v3 = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 16);
    sub_1DC8AF450(v5, *(void *)(v0 + 24));
    uint64_t v6 = sub_1DC9BDBC0();
    uint64_t result = sub_1DC88668C(v5, v2);
    if (!v1)
    {
      type metadata accessor for XPCDataDecoder.UnkeyedContainer();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v6;
      *(void *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_1DCA7D504()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    if (v1 < *(void *)(v2 + 16))
    {
      unint64_t v3 = v1 + 1;
      uint64_t v4 = v2 + 16 * v1;
      uint64_t v6 = *(void *)(v4 + 32);
      unint64_t v5 = *(void *)(v4 + 40);
      *(void *)(v0 + 24) = v3;
      sub_1DC8B9C40(v6, v5);
      return v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA7D574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void *)(v4 + 16);
  uint64_t v12 = *(void *)(v4 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v13;
  *(void *)(inited + 24) = v12;
  uint64_t result = (*(uint64_t (**)(void))(a3 + 16))();
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v9 + 32))(a4, v11, a2);
  }
  return result;
}

uint64_t sub_1DCA7D694()
{
  sub_1DC88668C(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCDataDecoder()
{
  return self;
}

uint64_t type metadata accessor for XPCDataDecoder.KeyedContainer()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for XPCDataDecoder.UnkeyedContainer()
{
  return self;
}

uint64_t type metadata accessor for XPCDataDecoder.SingleValueContainer()
{
  return self;
}

void sub_1DCA7D750()
{
  sub_1DCA82C08();
  sub_1DCA82B30();
  sub_1DCB891A8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  id v1 = v0;
  objc_msgSend(v1, sel_hash);
  sub_1DCB891B8();

  sub_1DCB891E8();
  sub_1DCB891F8();
  sub_1DCA82BD4();
}

BOOL sub_1DCA7D81C(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  v4.i64[0] = *(void *)(a1 + 8);
  v4.i64[1] = *(void *)(a1 + 32);
  v5.i64[0] = *(void *)(a2 + 8);
  v5.i64[1] = *(void *)(a2 + 32);
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(v4, v5)), 0xFuLL))) & 1) != 0
    && *(void *)a1 == *(void *)a2
    && *(void *)(a1 + 16) == *(void *)(a2 + 16)
    && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    && *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    return *(double *)(a1 + 48) == *(double *)(a2 + 48);
  }
  return result;
}

uint64_t sub_1DCA7D8B0()
{
  return sub_1DCB891E8();
}

uint64_t sub_1DCA7D944(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7544776F646E6977 && a2 == 0xEE006E6F69746172;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7544656469727473 && a2 == 0xEE006E6F69746172;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001DCB984D0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DCA7DAD4(char a1)
{
  if (!a1) {
    return 0x7544776F646E6977;
  }
  if (a1 == 1) {
    return 0x7544656469727473;
  }
  return 0xD000000000000012;
}

uint64_t sub_1DCA7DB38(void *a1)
{
  sub_1DC87E988((uint64_t *)&unk_1EAAA6DB0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DCA82BA8();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA81F10();
  sub_1DC89D5E4();
  sub_1DC89C18C();
  sub_1DCA82BF0();
  sub_1DCB88F18();
  if (!v6)
  {
    sub_1DCA82BF0();
    sub_1DCB88F18();
    sub_1DCB88EE8();
  }
  uint64_t v3 = sub_1DC8D5378();
  return v4(v3);
}

void sub_1DCA7DCB4()
{
}

uint64_t sub_1DCA7DD6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA6D98);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8D52C0();
  sub_1DCA81F10();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC89C0C0();
    sub_1DCA82B54();
    sub_1DCA82B54();
    sub_1DCB88DC8();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1DC8D5364();
    v10(v9);
    *a2 = v11;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v11;
    a2[4] = v12;
    a2[5] = v13;
    a2[6] = v8;
  }
  return sub_1DC8818D0(a1);
}

uint64_t sub_1DCA7DF24()
{
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1DCA7E024(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v37 = a1[8];
  uint64_t v38 = a1[7];
  uint64_t v35 = a1[10];
  uint64_t v36 = a1[9];
  uint64_t v33 = a1[12];
  uint64_t v34 = a1[11];
  char v31 = *((unsigned char *)a1 + 105);
  char v32 = *((unsigned char *)a1 + 104);
  char v29 = *((unsigned char *)a1 + 107);
  char v30 = *((unsigned char *)a1 + 106);
  char v27 = *((unsigned char *)a1 + 109);
  char v28 = *((unsigned char *)a1 + 108);
  uint64_t v26 = a1[14];
  char v25 = *((unsigned char *)a1 + 120);
  uint64_t v4 = *a2;
  uint64_t v5 = a2[5];
  uint64_t v6 = a2[6];
  uint64_t v23 = a2[8];
  uint64_t v24 = a2[7];
  uint64_t v7 = a2[11];
  uint64_t v21 = a2[10];
  uint64_t v22 = a2[9];
  uint64_t v8 = a2[12];
  char v9 = *((unsigned char *)a2 + 104);
  char v10 = *((unsigned char *)a2 + 105);
  uint64_t v47 = *a1;
  char v11 = *((unsigned char *)a2 + 106);
  uint64_t v48 = a1[1];
  long long v49 = *((_OWORD *)a1 + 1);
  uint64_t v12 = a1[4];
  char v13 = *((unsigned char *)a2 + 107);
  uint64_t v51 = v2;
  char v14 = *((unsigned char *)a2 + 108);
  uint64_t v39 = v4;
  char v15 = *((unsigned char *)a2 + 109);
  uint64_t v43 = v5;
  uint64_t v16 = a2[14];
  uint64_t v50 = v12;
  uint64_t v52 = v3;
  uint64_t v40 = a2[1];
  uint64_t v17 = a2[4];
  char v18 = *((unsigned char *)a2 + 120);
  long long v41 = *((_OWORD *)a2 + 1);
  uint64_t v42 = v17;
  uint64_t v44 = v6;
  if (sub_1DCA7D81C((uint64_t)&v47, (uint64_t)&v39))
  {
    uint64_t v47 = v38;
    uint64_t v48 = v37;
    *(void *)&long long v49 = v36;
    *((void *)&v49 + 1) = v35;
    uint64_t v50 = v34;
    uint64_t v51 = v33;
    LOBYTE(v52) = v32;
    BYTE1(v52) = v31;
    BYTE2(v52) = v30;
    BYTE3(v52) = v29;
    BYTE4(v52) = v28;
    BYTE5(v52) = v27;
    uint64_t v53 = v26;
    char v54 = v25;
    uint64_t v39 = v24;
    uint64_t v40 = v23;
    *(void *)&long long v41 = v22;
    *((void *)&v41 + 1) = v21;
    uint64_t v42 = v7;
    uint64_t v43 = v8;
    LOBYTE(v44) = v9;
    BYTE1(v44) = v10;
    BYTE2(v44) = v11;
    BYTE3(v44) = v13;
    BYTE4(v44) = v14;
    BYTE5(v44) = v15;
    uint64_t v45 = v16;
    char v46 = v18;
    char v19 = static AudioConfiguration.== infix(_:_:)((uint64_t)&v47, (uint64_t)&v39);
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1DCA7E224(void *a1)
{
  sub_1DC87E988(&qword_1EAAA6E58);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DCA82BA8();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA827F8();
  sub_1DC89D5E4();
  sub_1DC882094();
  sub_1DCA82C8C();
  sub_1DCB88F18();
  if (!v5)
  {
    sub_1DC8821D0();
    sub_1DCA82C8C();
    sub_1DCB88F18();
  }
  sub_1DCA82BC4();
  return v3();
}

uint64_t sub_1DCA7E460()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA7E578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA6E68);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8D52C0();
  sub_1DCA827F8();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC8820EC();
    sub_1DCA82B80();
    sub_1DC8822B0();
    sub_1DCA82B80();
    uint64_t v7 = sub_1DC8CD878();
    v8(v7);
    *(_OWORD *)a2 = v9;
    *(void *)(a2 + 16) = v10;
    *(void *)(a2 + 24) = v11;
    *(_OWORD *)(a2 + 32) = v12;
    *(void *)(a2 + 48) = v13;
    *(_OWORD *)(a2 + 56) = v9;
    *(void *)(a2 + 72) = v10;
    *(void *)(a2 + 80) = v11;
    *(_OWORD *)(a2 + 88) = v12;
    *(_WORD *)(a2 + 104) = v13;
    *(unsigned char *)(a2 + 106) = BYTE2(v13);
    *(unsigned char *)(a2 + 107) = BYTE3(v13);
    *(unsigned char *)(a2 + 108) = BYTE4(v13);
    *(unsigned char *)(a2 + 109) = BYTE5(v13);
    *(void *)(a2 + 112) = v14;
    *(unsigned char *)(a2 + 120) = v15;
  }
  return sub_1DC8818D0(a1);
}

uint64_t sub_1DCA7E764()
{
  id v1 = *(void **)(v0 + 48);
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  id v2 = v1;
  objc_msgSend(v2, sel_hash);
  sub_1DCB891B8();

  return sub_1DCB891E8();
}

uint64_t sub_1DCA7E820(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[5];
  uint64_t v4 = (void *)a1[6];
  uint64_t v5 = a1[7];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[6];
  uint64_t v8 = a2[7];
  uint64_t v13 = a2[5];
  v14[0] = v2;
  v14[1] = a1[1];
  long long v15 = *((_OWORD *)a1 + 1);
  uint64_t v16 = a1[4];
  uint64_t v17 = v3;
  v10[0] = v6;
  v10[1] = a2[1];
  long long v11 = *((_OWORD *)a2 + 1);
  uint64_t v12 = a2[4];
  if (!static TimeRange.== infix(_:_:)((uint64_t)v14, (uint64_t)v10)) {
    return 0;
  }
  LODWORD(result) = objc_msgSend(v4, sel_isEqual_, v7);
  if (v5 == v8) {
    return result;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCA7E8D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x727574616E676973 && a2 == 0xE900000000000065;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65636E6575716573 && a2 == 0xEB000000006D754ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DCA7EA54(char a1)
{
  if (!a1) {
    return 0x676E6152656D6974;
  }
  if (a1 == 1) {
    return 0x727574616E676973;
  }
  return 0x65636E6575716573;
}

uint64_t sub_1DCA7EAB4(void *a1)
{
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAA6DE8);
  sub_1DC89D4E0();
  uint64_t v9 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA81F5C();
  sub_1DCB892B8();
  sub_1DC89C64C();
  sub_1DCA82C8C();
  sub_1DCB88F18();
  if (v8)
  {
    sub_1DCA82BC4();
    return v6();
  }
  else
  {
    sub_1DC87E988(&qword_1EAAA6DD8);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA6DF8, &qword_1EAAA6DD8);
    sub_1DCB88F18();
    sub_1DCA82C8C();
    sub_1DCB88F68();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v1, v3);
  }
}

void sub_1DCA7ECB4(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA6DC0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8D52C0();
  sub_1DCA81F5C();
  sub_1DCB89298();
  if (v2)
  {
    sub_1DC8818D0(a1);
  }
  else
  {
    sub_1DC89C600();
    sub_1DCB88DF8();
    sub_1DC87E988(&qword_1EAAA6DD8);
    sub_1DC88CF34(&qword_1EAAA6DE0, &qword_1EAAA6DD8);
    sub_1DCB88DF8();
    id v6 = v10;
    uint64_t v7 = sub_1DCB88E48();
    uint64_t v8 = sub_1DC8CD878();
    v9(v8);
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v14;
    a2[5] = v15;
    a2[6] = v6;
    a2[7] = v7;
    sub_1DC8818D0(a1);
  }
}

uint64_t sub_1DCA7EEEC()
{
  return sub_1DCA7DAD4(*v0);
}

uint64_t sub_1DCA7EEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA7D944(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA7EF1C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA81F10();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA7EF58(uint64_t a1)
{
  unint64_t v2 = sub_1DCA81F10();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA7EF9C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA7F074@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCA7DD6C(a1, a2);
}

uint64_t sub_1DCA7F08C(void *a1)
{
  return sub_1DCA7DB38(a1);
}

uint64_t sub_1DCA7F0A8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA827F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA7F0E4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA827F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA7F128()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA7F294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCA7E578(a1, a2);
}

uint64_t sub_1DCA7F2AC(void *a1)
{
  return sub_1DCA7E224(a1);
}

uint64_t sub_1DCA7F2C8()
{
  return sub_1DCA7EA54(*v0);
}

uint64_t sub_1DCA7F2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA7E8D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA7F2F8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA81F5C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA7F334(uint64_t a1)
{
  unint64_t v2 = sub_1DCA81F5C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCA7F378()
{
  sub_1DCA82C08();
  sub_1DCA82B30();
  sub_1DCB891A8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  id v1 = v0;
  objc_msgSend(v1, sel_hash);
  sub_1DCB891B8();

  sub_1DCB891E8();
  sub_1DCB891F8();
  sub_1DCA82BD4();
}

void sub_1DCA7F440(uint64_t a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1DCA7F458(void *a1)
{
  return sub_1DCA7EAB4(a1);
}

uint64_t sub_1DCA7F474()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1DCA7F504;
  return sub_1DC977FC0();
}

uint64_t sub_1DCA7F504(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  *id v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  v5[4] = a1;
  v5[5] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1DC8C67E4, 0, 0);
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(void))((char *)&dword_1EAAA27C0 + dword_1EAAA27C0);
    uint64_t v9 = (void *)swift_task_alloc();
    v5[6] = v9;
    *uint64_t v9 = v7;
    v9[1] = sub_1DC8C6678;
    return v11();
  }
}

uint64_t sub_1DCA7F674(uint64_t a1, uint64_t a2)
{
  sub_1DCAD2DD0();
  v4[3] = sub_1DC87E988(&qword_1EAAA4268);
  v4[4] = sub_1DCA82784();
  v4[0] = a2;
  swift_retain();
  sub_1DCAD2E10(v4);
  swift_release();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DCA7F6FC()
{
  sub_1DC8867A8();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8C69C8;
  sub_1DC8CD968();
  return sub_1DCA7F474();
}

uint64_t sub_1DCA7F790(uint64_t a1)
{
  return sub_1DCA7F674(a1, *v1);
}

uint64_t sub_1DCA7F7AC()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1DC8C6B48;
  sub_1DC8CD968();
  return sub_1DCA7F6FC();
}

id sub_1DCA7F83C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[5];
  uint64_t v8 = (void *)a1[6];
  uint64_t v9 = a1[7];
  type metadata accessor for SNShazamSignatureResult();
  v12[0] = v4;
  v12[1] = a1[1];
  void v12[2] = v5;
  v12[3] = v6;
  void v12[4] = a1[4];
  uint64_t v12[5] = v7;
  v12[6] = v8;
  v12[7] = v9;
  id v10 = v8;
  id result = sub_1DC9CB7F0((uint64_t)v12);
  *a2 = result;
  return result;
}

uint64_t sub_1DCA7F8D4(const void *a1, void *a2)
{
  sub_1DC87E988(&qword_1EAAA6D28);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D988();
  memcpy(__dst, a1, 0x79uLL);
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = sub_1DC881A8C(a2, v6);
  memcpy(v17, &__dst[56], sizeof(v17));
  uint64_t v9 = type metadata accessor for SNShazamSignatureResult();
  uint64_t v16 = __dst;
  sub_1DCA81CAC((uint64_t)__dst);
  uint64_t v10 = sub_1DC9EB114((uint64_t)v8, (long long *)v17, v9, sub_1DCA81C90, (uint64_t)v15, v6, v9, v7);
  uint64_t v11 = *(void *)&v17[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    *(void *)uint64_t v17 = v10;
    sub_1DC87E988(&qword_1EAAA6D30);
    sub_1DC88CF34(&qword_1EAAA6D38, &qword_1EAAA6D30);
    sub_1DCB873D8();
    swift_release();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA6D40, &qword_1EAAA6D28);
    uint64_t v11 = sub_1DCB873A8();
    uint64_t v12 = sub_1DC8D5378();
    v13(v12);
  }
  return v11;
}

uint64_t sub_1DCA7FAF8(const void *a1, uint64_t a2)
{
  uint64_t v25 = sub_1DC87E988(&qword_1EAA9E870);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1DC87E988(&qword_1EAAA6D50);
  sub_1DC89D4E0();
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v27 = sub_1DC87E988((uint64_t *)&unk_1EAAA6D58);
  sub_1DC89D4E0();
  uint64_t v29 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a1, 0x79uLL);
  uint64_t v15 = swift_allocObject();
  memcpy((void *)(v15 + 16), a1, 0x79uLL);
  sub_1DC8B9960(a2, (uint64_t)v30);
  uint64_t v16 = swift_allocObject();
  sub_1DC8BA1CC(v30, v16 + 16);
  memcpy((void *)(v16 + 56), __dst, 0x79uLL);
  uint64_t v17 = (void *)swift_allocObject();
  _OWORD v17[2] = sub_1DCA81D40;
  v17[3] = v15;
  void v17[4] = sub_1DCA81DAC;
  v17[5] = v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1DC8CB980;
  *(void *)(v18 + 24) = v17;
  sub_1DCA81CAC((uint64_t)__dst);
  sub_1DCA81CAC((uint64_t)__dst);
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAA9ED90);
  sub_1DC88CF34((unint64_t *)&unk_1EAA9E890, (uint64_t *)&unk_1EAA9ED90);
  sub_1DCB87378();
  type metadata accessor for SNShazamSignatureResult();
  sub_1DC88CF34(&qword_1EAA9EDA0, &qword_1EAA9E870);
  uint64_t v19 = v25;
  sub_1DCB874A8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v19);
  swift_release();
  swift_release();
  sub_1DC88CF34(&qword_1EAAA6D68, &qword_1EAAA6D50);
  sub_1DCB873D8();
  sub_1DCA82BC4();
  v20();
  sub_1DC88CF34(&qword_1EAAA6D70, (uint64_t *)&unk_1EAAA6D58);
  uint64_t v21 = v27;
  uint64_t v22 = sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v21);
  return v22;
}

uint64_t sub_1DCA7FF34(uint64_t a1)
{
  type metadata accessor for SNGenerateShazamSignatureRequest();
  long long v2 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v2;
  id v7[2] = *(_OWORD *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 48);
  id v3 = sub_1DCA7FFD0((uint64_t)v7);
  type metadata accessor for SNShazamSignatureGenerator();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (char *)v3;
  sub_1DCA80C84(v5);

  return v4;
}

id sub_1DCA7FFD0(uint64_t a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = &v3[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl];
  *(void *)uint64_t v6 = *(void *)a1;
  *((void *)v6 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v6 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v6 + 4) = *(void *)(a1 + 32);
  *((void *)v6 + 5) = v4;
  *((void *)v6 + 6) = v5;
  v8.receiver = v3;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t sub_1DCA80050()
{
  type metadata accessor for SNShazamSignatureGenerator();
  uint64_t v1 = swift_allocObject();
  sub_1DCA80C84((char *)v0);
  return v1;
}

id sub_1DCA800AC(uint64_t a1)
{
  type metadata accessor for SNGenerateShazamSignatureRequest();
  long long v2 = *(_OWORD *)(a1 + 16);
  v4[0] = *(_OWORD *)a1;
  v4[1] = v2;
  _OWORD v4[2] = *(_OWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  return sub_1DCA7FFD0((uint64_t)v4);
}

uint64_t sub_1DCA80108@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1DC881A8C(a1, v6);
  memcpy(__dst, (const void *)(a2 + 56), 0x41uLL);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 8))(__dst, v6, v7);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id sub_1DCA80198@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1 + OBJC_IVAR___SNShazamSignatureResult_impl;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v3 = *(void **)(v2 + 48);
  uint64_t v5 = *(void *)(v2 + 56);
  *(void *)a2 = *(void *)v2;
  *(void *)(a2 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v2 + 16);
  *(void *)(a2 + 32) = *(void *)(v2 + 32);
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v3;
  *(void *)(a2 + 56) = v5;
  return v3;
}

uint64_t sub_1DCA801F8()
{
  return *(void *)(v0 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
}

uint64_t sub_1DCA8023C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(v3 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  *uint64_t v4 = result;
  v4[1] = a2;
  _OWORD v4[2] = a3;
  return result;
}

uint64_t sub_1DCA80274@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  *(void *)a2 = result;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v5;
  *(void *)(a2 + 16) = v6;
  return result;
}

uint64_t sub_1DCA802B0()
{
  return *(void *)(v0 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 24);
}

uint64_t sub_1DCA802F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  int v4 = (void *)(v3 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  _OWORD v4[3] = result;
  v4[4] = a2;
  void v4[5] = a3;
  return result;
}

double sub_1DCA80338()
{
  return sub_1DCA82C4C(OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
}

void sub_1DCA80368(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48) = a1;
}

id sub_1DCA8037C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = v0;
  uint64_t v3 = sub_1DCB88628();
  int v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = HIDWORD(v4);
  uint64_t v9 = sub_1DCB88628();
  uint64_t v10 = &v2[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl];
  *(void *)uint64_t v10 = v3;
  *((_DWORD *)v10 + 2) = v5;
  *((_DWORD *)v10 + 3) = v8;
  *((void *)v10 + 2) = v7;
  *((void *)v10 + 3) = v9;
  *((_DWORD *)v10 + 8) = v11;
  *((_DWORD *)v10 + 9) = v12;
  *((void *)v10 + 5) = v13;
  *((void *)v10 + 6) = 0x4014000000000000;

  v15.receiver = v2;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_init);
}

id sub_1DCA80450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v16 = &v7[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl];
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = a2;
  *((void *)v16 + 2) = a3;
  *((void *)v16 + 3) = a4;
  *((void *)v16 + 4) = a5;
  *((void *)v16 + 5) = a6;
  *((double *)v16 + 6) = a7;
  v18.receiver = v7;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

id SNGenerateShazamSignatureRequest.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DCA82A98(OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  id result = sub_1DCA7FFD0((uint64_t)v4);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

void SNGenerateShazamSignatureRequest.hash.getter()
{
}

BOOL SNGenerateShazamSignatureRequest.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v22);
  if (v23)
  {
    sub_1DC87E9CC(&v22, v21);
    sub_1DC87E9DC((uint64_t)v21, (uint64_t)v16);
    if (swift_dynamicCast())
    {
      uint64_t v3 = (void *)v11[0];
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 40);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48);
      v16[0] = *(void *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
      v16[1] = *(void *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 8);
      long long v17 = *(_OWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 16);
      uint64_t v18 = *(void *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 32);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      uint64_t v6 = v11[0] + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl;
      uint64_t v7 = *(void *)(v11[0] + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 40);
      uint64_t v8 = *(void *)(v11[0] + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48);
      v11[0] = *(void *)(v11[0] + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
      v11[1] = *(void *)(v6 + 8);
      long long v12 = *(_OWORD *)(v6 + 16);
      uint64_t v13 = *(void *)(v6 + 32);
      uint64_t v14 = v7;
      uint64_t v15 = v8;
      BOOL v9 = sub_1DCA7D81C((uint64_t)v16, (uint64_t)v11);
    }
    else
    {
      BOOL v9 = 0;
    }
    sub_1DC8818D0((uint64_t)v21);
  }
  else
  {
    return 0;
  }
  return v9;
}

id SNGenerateShazamSignatureRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNGenerateShazamSignatureRequest.init(coder:)(a1);
}

id SNGenerateShazamSignatureRequest.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87DEA8();
  swift_getObjectType();

  id v4 = sub_1DCA7FFD0((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNGenerateShazamSignatureRequest.encode(with:)(NSCoder with)
{
  long long v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 16);
  v3[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 32);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48);
  sub_1DC87C0A8(v3, 1819307369, 0xE400000000000000, with.super.isa);
}

uint64_t static SNGenerateShazamSignatureRequest.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1DCA80AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MGGetProductType();
  sub_1DC983D28(v2, v9);
  uint64_t result = sub_1DC978E04((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_1EAA9E950);
  LOWORD(v4) = v11;
  uint64_t v5 = 0;
  int v6 = 0;
  if (v11)
  {
    unint64_t v7 = v10[0];
    uint64_t result = (uint64_t)sub_1DC8CBC38(v9);
    if (v7 > 3)
    {
      LOWORD(v4) = 0;
      __int16 v8 = 0;
      uint64_t v5 = 0;
    }
    else
    {
      unint64_t v4 = 0x9000700000000uLL >> (16 * v7);
      int v6 = dword_1DCBD38C0[v7];
      HIDWORD(v5) = 1056964608;
      LODWORD(v5) = dword_1DCBD38B0[v7];
      __int16 v8 = 4;
    }
  }
  else
  {
    __int16 v8 = 0;
  }
  *(_WORD *)a1 = v8;
  *(_DWORD *)(a1 + 4) = v6;
  *(_WORD *)(a1 + 8) = v4;
  *(void *)(a1 + 12) = v5;
  return result;
}

id SNGenerateShazamSignatureRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1DCA80C1C()
{
  uint64_t result = (_UNKNOWN **)sub_1DCA80050();
  if (v0) {
    return &off_1F37F10D0;
  }
  return result;
}

uint64_t type metadata accessor for SNGenerateShazamSignatureRequest()
{
  return self;
}

uint64_t method lookup function for SNGenerateShazamSignatureRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNGenerateShazamSignatureRequest);
}

uint64_t sub_1DCA80C84(char *a1)
{
  *(void *)(v1 + 16) = 0;
  sub_1DCA82C78();
  sub_1DCA82C58(v3, v4, v5, v6, v7, v8, v9, v10, v21, v23, v25, v27, v29, v32, v34, v36);
  if ((v30 & 0x8000000000000000) != 0
    || HIDWORD(v30)
    || (*(_DWORD *)(v1 + 24) = v30,
        sub_1DCA82C78(),
        sub_1DCA82C58(v11, v12, v13, v14, v15, v16, v17, v18, v22, v24, v26, v28, v30, v33, v35, v37),
        (v31 & 0x8000000000000000) != 0)
    || HIDWORD(v31))
  {
    uint64_t result = sub_1DCB88C58();
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v1 + 28) = v31;
    uint64_t v19 = *(void *)&a1[OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48];

    *(void *)(v1 + 40) = v19;
    *(void *)(v1 + 32) = 0;
    return v1;
  }
  return result;
}

id sub_1DCA80DBC(int a1, int a2, int a3, double a4)
{
  v45[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v8 = self;
  v45[0] = 0;
  id v9 = sub_1DCB6B73C(v8, (uint64_t)v45);
  if (!v9)
  {
    id v36 = v45[0];
    sub_1DCB86898();

    swift_willThrow();
    return v9;
  }
  id v10 = v45[0];
  uint64_t v11 = (void *)sub_1DCB87908();
  uint64_t v12 = sub_1DCA82C98();
  id v15 = sub_1DCB68494(v12, v13, v11, v14);

  if (!v15)
  {
    id v37 = v45[0];
    sub_1DCB86898();

    swift_willThrow();
LABEL_14:

    return v9;
  }
  id v16 = v45[0];
  uint64_t v17 = (void *)sub_1DCB87908();
  uint64_t v18 = sub_1DCA82C98();
  id v21 = sub_1DCB6A308(v18, v19, v17, v20);

  if (!v21)
  {
    id v38 = v45[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_14;
  }
  int v43 = a1;
  id v22 = v45[0];
  uint64_t v23 = (void *)sub_1DCA82B00();
  v45[0] = 0;
  id v24 = sub_1DCB6B170(a4, v8, v9, v23, 0, a3, (uint64_t)v45);

  if (!v24)
  {
    id v39 = v45[0];
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_14;
  }
  id v25 = v45[0];
  sub_1DCB6BA88(0x3E80u, 1, a3, (uint64_t)v45);
  uint64_t v26 = sub_1DCA82AD0();
  if (!sub_1DCB6B83C(v26, v27, v15, v21, 0, 0, v28, v29))
  {
    id v40 = v44;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_14;
  }
  id v30 = v44;
  sub_1DCB6BB74(0x3E80u, a2, v43, a3, (uint64_t)v45);
  uint64_t v31 = sub_1DCA82AD0();
  if ((sub_1DCB6B83C(v31, v32, v21, v24, 0, 0, v33, v34) & 1) == 0)
  {
    id v41 = v44;
    sub_1DCB86898();

    swift_willThrow();
    goto LABEL_14;
  }
  id v35 = v44;
  sub_1DCB5EC24((uint64_t)v9);
  sub_1DCB5F1F8((uint64_t)v9);

  return v9;
}

void *sub_1DCA81100(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v8 = v3;
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = v9 + 1;
  if (v9 == -1)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(void *)(v8 + 32) = v10;
  uint64_t v13 = self;
  if (sub_1DCB6B448(v13, a1, v10))
  {
    sub_1DCB88808();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(&duration, 0, 32);
  }
  sub_1DC978E04((uint64_t)&duration, (uint64_t)&start, &qword_1EAA9CAB0);
  if (!v47)
  {
    sub_1DC881978((uint64_t)&start);
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1DC87E9CC(&start, &v44);
  sub_1DC9CC30C();
  swift_dynamicCast();
  uint64_t v14 = *(void *)(v8 + 32);
  id v15 = objc_allocWithZone((Class)type metadata accessor for SNShazamSignatureResult());
  id v7 = v38;
  CMTimeValue value = (char *)sub_1DC9CB5F4(v7, v14);
  v44.start.CMTimeValue value = 0;
  id v16 = (void (*)(void))sub_1DCB68148(v13, a1, (uint64_t)&v44);
  if (!v16)
  {
    id v26 = (id)v44.start.value;
    sub_1DC8CD968();
    sub_1DCB86898();

    swift_willThrow();
    id v25 = v7;
    goto LABEL_14;
  }
  uint64_t v6 = v16;
  id v17 = (id)v44.start.value;
  int64_t v18 = sub_1DCB89168();
  int32_t v19 = sub_1DCB5C99C((uint64_t)a1);
  if (v19 < 0) {
    goto LABEL_22;
  }
  id v36 = v6;
  id v37 = value;
  uint64_t v6 = a3;
  CMTimeMake(&v44.start, v18, v19);
  CMTimeValue value = (char *)v44.start.value;
  uint64_t v20 = *(void *)&v44.start.timescale;
  CMTimeEpoch epoch = v44.start.epoch;
  int64_t v22 = *(unsigned int *)(v8 + 24);
  int32_t v23 = sub_1DCB5C99C((uint64_t)a1);
  if (v23 < 0)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    swift_once();
    goto LABEL_17;
  }
  CMTimeMake(&v44.start, v22, v23);
  start.CMTimeValue value = (CMTimeValue)value;
  *(void *)&start.timescale = v20;
  start.CMTimeEpoch epoch = epoch;
  *(_OWORD *)&duration.CMTimeValue value = *(_OWORD *)&v44.start.value;
  duration.CMTimeEpoch epoch = v44.start.epoch;
  CMTimeRangeMake(&v44, &start, &duration);
  v6();
  if (v4)
  {

    id v25 = v36;
    CMTimeValue value = v37;
LABEL_14:

    return v25;
  }
  uint64_t v24 = sub_1DCB883C8();
  ((void (*)(uint64_t))v6)(v24);
  sub_1DCB883D8();
  uint64_t v6 = v36;
  CMTimeValue value = v37;
  uint64_t v28 = &v37[OBJC_IVAR___SNShazamSignatureResult_impl];
  *(void *)uint64_t v28 = v39;
  *((void *)v28 + 1) = v40;
  *((_OWORD *)v28 + 1) = v41;
  *((void *)v28 + 4) = v42;
  *((void *)v28 + 5) = v43;
  if (qword_1EAA9C658 != -1) {
    goto LABEL_24;
  }
LABEL_17:
  uint64_t v29 = sub_1DCB86FE8();
  sub_1DC89F57C(v29, (uint64_t)qword_1EAAFF810);
  id v30 = v7;
  swift_retain();
  uint64_t v31 = sub_1DCB86FC8();
  os_log_type_t v32 = sub_1DCB88488();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 134218240;
    [v30 duration];
    v44.start.CMTimeValue value = v34;
    CMTimeValue value = v37;
    sub_1DCB88778();

    *(_WORD *)(v33 + 12) = 2048;
    v44.start.CMTimeValue value = *(void *)(v8 + 32);
    sub_1DCB88778();
    swift_release();
    _os_log_impl(&dword_1DC873000, v31, v32, "Shazam Signature Duration: %f,    SequenceNum: %llu", (uint8_t *)v33, 0x16u);
    MEMORY[0x1E01A99C0](v33, -1, -1);
  }
  else
  {

    swift_release();
    uint64_t v31 = v30;
  }

  sub_1DC87E988(&qword_1EAA9C720);
  CMTimeValue v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1DCBB8670;
  *(void *)(v35 + 32) = value;
  v44.start.CMTimeValue value = v35;
  sub_1DCB87C68();
  id v25 = (void *)v44.start.value;

  return v25;
}

id sub_1DCA815F0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DCA81E6C();
  swift_allocError();
  return (id)swift_willThrow();
}

void sub_1DCA8164C(int a1, double a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *v2;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DCB86FE8();
  sub_1DC89F57C(v8, (uint64_t)qword_1EAAFF810);
  uint64_t v9 = sub_1DCB86FC8();
  os_log_type_t v10 = sub_1DCB88488();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 67109120;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v9, v10, "Creating Shazam DSPGraph with %u channels.", v11, 8u);
    MEMORY[0x1E01A99C0](v11, -1, -1);
  }

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v4;
  *(double *)(v12 + 24) = a2;
  *(_DWORD *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = v7;
  swift_retain();
  uint64_t v13 = sub_1DC8A12D0();
  swift_release();
  if (!v3)
  {
    uint64_t v14 = (void *)v4[2];
    _OWORD v4[2] = v13;
  }
}

id sub_1DCA81810@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  id result = sub_1DCA80DBC(*(_DWORD *)(a1 + 24), *(_DWORD *)(a1 + 28), a2, *(double *)(a1 + 40));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id sub_1DCA8184C()
{
  id result = sub_1DCA815F0();
  if (!v0)
  {
    uint64_t v3 = result;
    sub_1DCA82B00();
    uint64_t v4 = (void *)sub_1DC8CD968();
    id v5 = sub_1DCB60550(v4, v1);

    return v5;
  }
  return result;
}

uint64_t sub_1DCA818AC()
{
  sub_1DC886828();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNShazamSignatureGenerator()
{
  return self;
}

uint64_t sub_1DCA81900(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCA81920(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

void type metadata accessor for ShazamSignatureGeneration.AudioSourceAgnosticRequest()
{
}

void type metadata accessor for ShazamSignatureGeneration()
{
}

void sub_1DCA81970(uint64_t a1)
{
}

uint64_t sub_1DCA81978(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  id v6 = v4;
  return a1;
}

uint64_t sub_1DCA819B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(void **)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v4;
  id v6 = v4;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t sub_1DCA81A44(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t sub_1DCA81AA4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA81AE4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ShazamSignatureGeneration.Result()
{
}

unint64_t sub_1DCA81B40(uint64_t a1)
{
  unint64_t result = sub_1DC88255C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCA81B68(uint64_t a1)
{
  unint64_t result = sub_1DC8824B4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCA81B94()
{
  unint64_t result = qword_1EAAA6D18;
  if (!qword_1EAAA6D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6D18);
  }
  return result;
}

unint64_t sub_1DCA81BE4()
{
  unint64_t result = qword_1EAAA6D20;
  if (!qword_1EAAA6D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6D20);
  }
  return result;
}

void *sub_1DCA81C30(void *a1, uint64_t a2, void (*a3)(void))
{
  return sub_1DCA81100(a1, a2, a3);
}

id sub_1DCA81C48()
{
  return sub_1DCA8184C();
}

void sub_1DCA81C60(int a1, double a2)
{
}

id sub_1DCA81C78()
{
  return sub_1DCA815F0();
}

uint64_t sub_1DCA81C90()
{
  return sub_1DCA7FF34(*(void *)(v0 + 16));
}

uint64_t sub_1DCA81CAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCA81CF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1DCA81D40()
{
  return sub_1DCA800AC(v0 + 16);
}

uint64_t sub_1DCA81D5C()
{
  sub_1DC8818D0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA81DAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA80108((void *)(v1 + 16), v1 + 56, a1);
}

uint64_t sub_1DCA81DCC()
{
  swift_release();
  swift_release();
  sub_1DC886828();

  return swift_deallocObject();
}

uint64_t sub_1DCA81E04()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA81E3C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCA188C4(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1DCA81E6C()
{
  unint64_t result = qword_1EAAA6D90;
  if (!qword_1EAAA6D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6D90);
  }
  return result;
}

uint64_t sub_1DCA81EB8()
{
  swift_release();
  sub_1DC886828();

  return swift_deallocObject();
}

id sub_1DCA81EE8@<X0>(void *a1@<X8>)
{
  return sub_1DCA81810(*(void *)(v1 + 16), *(_DWORD *)(v1 + 32), a1);
}

unint64_t sub_1DCA81F10()
{
  unint64_t result = qword_1EAAA6DA0;
  if (!qword_1EAAA6DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6DA0);
  }
  return result;
}

unint64_t sub_1DCA81F5C()
{
  unint64_t result = qword_1EAAA6DC8;
  if (!qword_1EAAA6DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6DC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureGeneration.Result.CodingKeys()
{
  return &type metadata for ShazamSignatureGeneration.Result.CodingKeys;
}

unsigned char *_s13SoundAnalysis25ShazamSignatureGenerationV6ResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA82088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureGeneration.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for ShazamSignatureGeneration.AudioSourceAgnosticRequest.CodingKeys;
}

unsigned char *sub_1DCA820C0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA8215CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SNShazamSignatureGenerator.DomainError()
{
}

void type metadata accessor for ShazamSignatureGeneration.Session()
{
}

uint64_t sub_1DCA8219C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA821E0(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_WORD *)(a1 + 108) = *(_WORD *)(a2 + 108);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCA82270(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  uint64_t v4 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v4;
  return a1;
}

void *sub_1DCA82388(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x79uLL);
}

uint64_t sub_1DCA82390(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t sub_1DCA82458(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 121))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 64);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA82498(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 121) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ShazamSignatureGeneration.Request()
{
}

unint64_t sub_1DCA82508()
{
  unint64_t result = qword_1EAAA6E08;
  if (!qword_1EAAA6E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E08);
  }
  return result;
}

unint64_t sub_1DCA82558()
{
  unint64_t result = qword_1EAAA6E10;
  if (!qword_1EAAA6E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E10);
  }
  return result;
}

unint64_t sub_1DCA825A8()
{
  unint64_t result = qword_1EAAA6E18;
  if (!qword_1EAAA6E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E18);
  }
  return result;
}

unint64_t sub_1DCA825F8()
{
  unint64_t result = qword_1EAAA6E20;
  if (!qword_1EAAA6E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E20);
  }
  return result;
}

unint64_t sub_1DCA82648()
{
  unint64_t result = qword_1EAAA6E28;
  if (!qword_1EAAA6E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E28);
  }
  return result;
}

unint64_t sub_1DCA82698()
{
  unint64_t result = qword_1EAAA6E30;
  if (!qword_1EAAA6E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E30);
  }
  return result;
}

unint64_t sub_1DCA826E8()
{
  unint64_t result = qword_1EAAA6E38;
  if (!qword_1EAAA6E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E38);
  }
  return result;
}

unint64_t sub_1DCA82738()
{
  unint64_t result = qword_1EAAA6E40;
  if (!qword_1EAAA6E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E40);
  }
  return result;
}

unint64_t sub_1DCA82784()
{
  unint64_t result = qword_1EAAA6E50;
  if (!qword_1EAAA6E50)
  {
    sub_1DC8863A8(&qword_1EAAA4268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E50);
  }
  return result;
}

unint64_t sub_1DCA827F8()
{
  unint64_t result = qword_1EAAA6E60;
  if (!qword_1EAAA6E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E60);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShazamSignatureGeneration.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA82910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamSignatureGeneration.Request.CodingKeys()
{
  return &type metadata for ShazamSignatureGeneration.Request.CodingKeys;
}

unint64_t sub_1DCA8294C()
{
  unint64_t result = qword_1EAAA6E80;
  if (!qword_1EAAA6E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E80);
  }
  return result;
}

unint64_t sub_1DCA8299C()
{
  unint64_t result = qword_1EAAA6E88;
  if (!qword_1EAAA6E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E88);
  }
  return result;
}

unint64_t sub_1DCA829EC()
{
  unint64_t result = qword_1EAAA6E90;
  if (!qword_1EAAA6E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6E90);
  }
  return result;
}

__n128 sub_1DCA82A38()
{
  return *(__n128 *)(v0 + 72);
}

double sub_1DCA82A98@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1 + 48);
}

uint64_t sub_1DCA82AD0()
{
  return v0;
}

uint64_t sub_1DCA82B00()
{
  return sub_1DCB87908();
}

uint64_t sub_1DCA82B54()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCA82B80()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCA82BF0()
{
  return v0 - 120;
}

uint64_t sub_1DCA82C24()
{
  return v0;
}

double sub_1DCA82C4C@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1 + 48);
}

CMTime *sub_1DCA82C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, CMTime *a5, CMTime *time, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t timea)
{
  return CMTimeConvertScale((CMTime *)&a13, (CMTime *)&timea, 16000, kCMTimeRoundingMethod_RoundTowardZero);
}

uint64_t sub_1DCA82C98()
{
  return v0;
}

uint64_t sub_1DCA82CAC(uint64_t a1, int *a2)
{
  v2[2] = a1;
  sub_1DC8863A8(&qword_1EAA9DF60);
  uint64_t v4 = sub_1DCB89268();
  v2[3] = v4;
  v2[4] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v2[5] = v5;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unsigned int v6 = (void *)swift_task_alloc();
  v2[6] = v6;
  *unsigned int v6 = v2;
  v6[1] = sub_1DCA82E10;
  return v8(v5);
}

uint64_t sub_1DCA82E10()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1DCA82FC0;
  }
  else {
    unint64_t v2 = sub_1DCA82F24;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DCA82F24()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DCA82FC0()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DCA83034(uint64_t result)
{
  if (*(_DWORD *)result > 0x2BF200u
    || *(void *)(*(void *)(result + 8) + 16) != 512
    || *(void *)(*(void *)(result + 16) + 16) != 10240
    || *(void *)(*(void *)(result + 24) + 16) != 10
    || *(void *)(*(void *)(result + 32) + 16) != 200
    || *(void *)(*(void *)(result + 40) + 16) != 4
    || *(void *)(*(void *)(result + 48) + 16) != 160
    || *(void *)(*(void *)(result + 56) + 16) != 8
    || *(void *)(*(void *)(result + 64) + 16) != 320
    || *(void *)(*(void *)(result + 72) + 16) != 8
    || *(void *)(*(void *)(result + 80) + 16) != 320
    || *(void *)(*(void *)(result + 88) + 16) != 8
    || *(void *)(*(void *)(result + 96) + 16) != 256
    || *(void *)(*(void *)(result + 104) + 16) != 32
    || *(void *)(*(void *)(result + 112) + 16) != 64
    || *(void *)(*(void *)(result + 120) + 16) != 2)
  {
    sub_1DC9D5B48();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for XValidation.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA83224);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for XValidation.DomainError()
{
  return &type metadata for XValidation.DomainError;
}

unint64_t sub_1DCA83260()
{
  unint64_t result = qword_1EAAA6EA8;
  if (!qword_1EAAA6EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6EA8);
  }
  return result;
}

uint64_t sub_1DCA832AC(uint64_t a1, uint64_t a2)
{
  return sub_1DCA83388(*(void *)(a2 + 8), *(void *)(a2 + 16), (void (*)(char *__return_ptr, void *, uint64_t *))sub_1DCA840B4) & 1;
}

void *sub_1DCA83300(void *result, char a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, char *, void *))
{
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = a3;
    if (!a3) {
      return (void *)(a2 & 1);
    }
    uint64_t v7 = result;
    while (v5)
    {
      char v8 = a2 & 1;
      unint64_t result = a4(&v9, &v8, v7);
      if (!v4)
      {
        a2 = v9;
        v7 += 2;
        if (--v5) {
          continue;
        }
      }
      return (void *)(a2 & 1);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA83388(uint64_t a1, uint64_t a2, void (*a3)(char *__return_ptr, void *, uint64_t *))
{
  v8[2] = *MEMORY[0x1E4F143B8];
  v8[0] = a1;
  v8[1] = a2;
  a3(&v7, v8, &v6);
  if (!v3) {
    char v4 = v7;
  }
  return v4 & 1;
}

void *sub_1DCA83410(uint64_t a1, void *(*a2)(void *__return_ptr, uint64_t *, uint64_t *))
{
  v6[2] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = a1;
  unint64_t result = a2(v6, &v5, &v4);
  if (!v2) {
    return (void *)v6[0];
  }
  return result;
}

uint64_t sub_1DCA83490(uint64_t result)
{
  uint64_t v1 = *(unsigned __int8 **)(result + 8);
  if (v1)
  {
    uint64_t v2 = *(unsigned int *)(result + 4);
    if (v2)
    {
      LOBYTE(result) = 1;
      do
      {
        int v3 = *v1++;
        unint64_t result = result & (v3 == 0);
        --v2;
      }
      while (v2);
    }
    else
    {
      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1DCA834CC(BOOL result)
{
  uint64_t v1 = *(void *)(result + 8);
  if (v1)
  {
    unint64_t v2 = *(unsigned int *)(result + 4);
    if (v2 >= 4)
    {
      uint64_t v4 = 0;
      unint64_t v5 = v2 >> 2;
      LOBYTE(v3) = 1;
      while (1)
      {
        if (v3)
        {
          int v6 = *(_DWORD *)(v1 + 4 * v4);
          BOOL v3 = (~v6 & 0x7F800000) != 0 || (v6 & 0x7FFFFF) == 0;
        }
        else
        {
          BOOL v3 = 0;
        }
        if (v5 - 1 == v4) {
          break;
        }
        if (++v4 >= v5)
        {
          __break(1u);
          goto LABEL_14;
        }
      }
    }
    else
    {
      BOOL v3 = 1;
    }
    return !v3;
  }
  else
  {
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA83544(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  if (v1)
  {
    unint64_t v2 = *(unsigned int *)(result + 4);
    if (v2 >= 4)
    {
      unint64_t v3 = 0;
      unint64_t v4 = v2 >> 2;
      unint64_t v5 = v4 - 1;
      BOOL v6 = 1;
      do
      {
        if (v6)
        {
          int v7 = *(_DWORD *)(v1 + 4 * v3);
          if ((~v7 & 0x7F800000) != 0)
          {
            if (v5 == v3) {
              return 0;
            }
            BOOL v6 = 1;
          }
          else
          {
            unint64_t result = (v7 & 0x7FFFFF) == 0;
            BOOL v6 = (v7 & 0x7FFFFF) != 0;
            if (v5 == v3) {
              return result;
            }
          }
        }
        else
        {
          if (v5 == v3) {
            return 1;
          }
          BOOL v6 = 0;
        }
        ++v3;
      }
      while (v3 < v4);
      __break(1u);
      return 1;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA835D4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_audioBufferList);
  uint64_t result = sub_1DCA84438((uint64_t)v1, (uint64_t)v1);
  if (result)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC931D18(0x80000001DCB90E90, v3 + 9, (uint64_t)"expected non-silent audio buffer");
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA83680(void *a1)
{
  id v1 = objc_msgSend(a1, sel_audioBufferList);
  uint64_t result = sub_1DCA84438((uint64_t)v1, (uint64_t)v1);
  if (result)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC931D18(0x80000001DCB90E90, v3 + 13, (uint64_t)"expected no NaN-valued audio samples");
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA8372C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_audioBufferList);
  uint64_t result = sub_1DCA84438((uint64_t)v1, (uint64_t)v1);
  if (result)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC931D18(0x80000001DCB90E90, v3 + 11, (uint64_t)"expected no infinite audio samples");
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA837D8(uint64_t a1, void *a2)
{
  sub_1DCA835D4(a2);
  sub_1DCA83680(a2);
  sub_1DCA8372C(a2);
  id v3 = 0;
  swift_release();

  return 0;
}

void sub_1DCA838C4(void *a1, void (*a2)(void *, id), uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  id v7 = *(id *)(a4 + 16);
  a2(a1, v7);

  type metadata accessor for SNTimeUtils();
  LODWORD(a2) = objc_msgSend(a1, sel_frameLength);
  swift_beginAccess();
  id v8 = *(id *)(a4 + 16);
  uint64_t v9 = sub_1DC8AE190(a2, v8);

  swift_beginAccess();
  os_log_type_t v10 = *(void **)(a4 + 16);
  *(void *)(a4 + 16) = v9;
}

uint64_t sub_1DCA839B4(void *a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void (*a8)(void *, id), uint64_t a9)
{
  uint64_t v61 = a8;
  id v57 = a7;
  uint64_t v60 = a2;
  uint64_t v62 = a9;
  uint64_t v13 = sub_1DCB86A18();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v58 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  int64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  id v21 = (char *)&v53 - v20;
  int64_t v22 = (uint64_t *)(a6 + 16);
  uint64_t v63 = a3(v19);
  uint64_t v24 = v23;
  if (v23)
  {
    sub_1DC921418();
    uint64_t v25 = *(void *)(a5 + 24);
    if (!v25 || (v63 == *(void *)(a5 + 16) ? (BOOL v26 = v24 == v25) : (BOOL v26 = 0), !v26 && (sub_1DCB89018() & 1) == 0))
    {
      uint64_t v55 = a5 + 16;
      uint64_t v56 = a1;
      swift_bridgeObjectRetain();
      sub_1DCB86928();
      swift_bridgeObjectRelease();
      char v54 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
      v54(v18, v21, v13);
      type metadata accessor for SNFileInjectOperator();
      swift_allocObject();
      uint64_t v33 = sub_1DCAD3938((uint64_t)v18, v57);
      CMTimeValue v34 = v58;
      sub_1DCA84454();
      *int64_t v22 = (uint64_t)v33;
      swift_release();
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1DCB86FE8();
      sub_1DC89F57C(v35, (uint64_t)qword_1EAAFF810);
      v54(v34, v21, v13);
      swift_retain();
      id v36 = sub_1DCB86FC8();
      os_log_type_t v37 = sub_1DCB88488();
      int v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v39 = swift_slowAlloc();
        id v57 = (id)swift_slowAlloc();
        v65[0] = v57;
        *(_DWORD *)uint64_t v39 = 67109378;
        LODWORD(v54) = v38;
        sub_1DC921418();
        LODWORD(v64) = *(void *)(a6 + 16) != 0;
        sub_1DCB88778();
        swift_release();
        *(_WORD *)(v39 + 8) = 2080;
        sub_1DCA841E4();
        uint64_t v40 = sub_1DCB88F98();
        uint64_t v64 = sub_1DC9F8920(v40, v41, (uint64_t *)v65);
        sub_1DCB88778();
        swift_bridgeObjectRelease();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v59 + 8);
        v42(v58, v13);
        _os_log_impl(&dword_1DC873000, v36, (os_log_type_t)v54, "Try enable injection. Success: %{BOOL}d; URL: %s",
          (uint8_t *)v39,
          0x12u);
        id v43 = v57;
        swift_arrayDestroy();
        MEMORY[0x1E01A99C0](v43, -1, -1);
        MEMORY[0x1E01A99C0](v39, -1, -1);
      }
      else
      {

        uint64_t v42 = *(void (**)(char *, uint64_t))(v59 + 8);
        v42(v34, v13);
        swift_release();
      }
      v42(v21, v13);
      a1 = v56;
    }
  }
  else
  {
    sub_1DC921418();
    if (*(void *)(a5 + 24))
    {
      sub_1DCA84454();
      *int64_t v22 = 0;
      swift_release();
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1DCB86FE8();
      sub_1DC89F57C(v27, (uint64_t)qword_1EAAFF810);
      uint64_t v28 = sub_1DCB86FC8();
      os_log_type_t v29 = sub_1DCB88488();
      if (os_log_type_enabled(v28, v29))
      {
        id v30 = a1;
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_1DC873000, v28, v29, "Disable injection.", v31, 2u);
        os_log_type_t v32 = v31;
        a1 = v30;
        MEMORY[0x1E01A99C0](v32, -1, -1);
      }
    }
  }
  swift_beginAccess();
  *(void *)(a5 + 16) = v63;
  *(void *)(a5 + 24) = v24;
  swift_bridgeObjectRelease();
  sub_1DC921418();
  uint64_t v44 = *v22;
  uint64_t v45 = swift_allocObject();
  char v46 = v60;
  *(void *)(v45 + 16) = v60;
  uint64_t v47 = (void *)swift_allocObject();
  long long v49 = v61;
  uint64_t v48 = v62;
  v47[2] = v61;
  v47[3] = v48;
  v47[4] = v45;
  if (v44)
  {
    swift_retain_n();
    id v50 = v46;
    swift_retain();
    swift_retain();
    sub_1DCAD374C(a1, (uint64_t)sub_1DCA841D8, (uint64_t)v47);
    swift_release();
    swift_release();
  }
  else
  {
    id v51 = v46;
    swift_retain();
    swift_retain();
    sub_1DCA838C4(a1, v49, v48, v45);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1DCA8403C(uint64_t a1)
{
  return sub_1DCA83544(a1) & 1;
}

uint64_t sub_1DCA84058@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1DCA84110(a1, a2, a3);
}

void *sub_1DCA84070@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *(*a4)(uint64_t *__return_ptr, char *, void *)@<X3>, void *a5@<X5>, unsigned char *a6@<X8>)
{
  uint64_t result = sub_1DCA83300(a1, *a2, a3, a4);
  if (v6) {
    *a5 = v6;
  }
  else {
    *a6 = result & 1;
  }
  return result;
}

void *sub_1DCA840B4@<X0>(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1DCA84070(a1, *(char **)(v3 + 16), *(void *)(v3 + 24), *(void *(**)(uint64_t *__return_ptr, char *, void *))(v3 + 32), a2, a3);
}

BOOL sub_1DCA840D8(BOOL a1)
{
  return sub_1DCA834CC(a1);
}

uint64_t sub_1DCA840F4(uint64_t a1)
{
  return sub_1DCA83490(a1) & 1;
}

uint64_t sub_1DCA84110@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (*a1 == 1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 16))(a2);
    if (v4) {
      return result;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCA84160()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA84198()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DCA841D8(void *a1)
{
  sub_1DCA838C4(a1, *(void (**)(void *, id))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_1DCA841E4()
{
  unint64_t result = qword_1EAAA0A28;
  if (!qword_1EAAA0A28)
  {
    sub_1DCB86A18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA0A28);
  }
  return result;
}

uint64_t sub_1DCA84238(uint64_t a1)
{
  return j__swift_bridgeObjectRelease(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_1DCA84250(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = *((unsigned __int8 *)a2 + 24);
  j__swift_bridgeObjectRetain(*a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t *sub_1DCA842B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = *((unsigned __int8 *)a2 + 24);
  j__swift_bridgeObjectRetain(*a2, v4, v5, v6);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = *((unsigned __int8 *)a1 + 24);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  *((unsigned char *)a1 + 24) = v6;
  j__swift_bridgeObjectRelease(v7, v8, v9, v10);
  return a1;
}

__n128 sub_1DCA84320(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *sub_1DCA84334(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v8 = *((unsigned __int8 *)a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  *((unsigned char *)a1 + 24) = v4;
  j__swift_bridgeObjectRelease(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1DCA84384(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA843C4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DCA8440C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1DCA84414(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

uint64_t type metadata accessor for SignalBufferVariant()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA84438(uint64_t a1, uint64_t a2)
{
  return sub_1DCA832AC(1, a2);
}

uint64_t sub_1DCA84454()
{
  return swift_beginAccess();
}

void destroy for DetectorHeadConfiguration(uint64_t a1)
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 56);
  if ((~v2 & 0xF000000000000007) != 0)
  {
  }
}

uint64_t initializeWithCopy for DetectorHeadConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v4 = *(void **)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  id v7 = v4;
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0) {
    id v8 = (id)(v6 & 0x7FFFFFFFFFFFFFFFLL);
  }
  *(void *)(a1 + 56) = v6;
  return a1;
}

uint64_t assignWithCopy for DetectorHeadConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v5;
  id v7 = v5;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  uint64_t v10 = *(void *)(a2 + 56);
  unint64_t v11 = v10 & 0xF000000000000007;
  if ((~v8 & 0xF000000000000007) != 0)
  {
    if (v11 == 0xF000000000000007)
    {
      sub_1DCA84664(a1 + 56);
      *uint64_t v9 = *(void *)(a2 + 56);
    }
    else
    {
      *uint64_t v9 = v10;
      uint64_t v13 = (void *)(v8 & 0x7FFFFFFFFFFFFFFFLL);
      id v14 = (id)(v10 & 0x7FFFFFFFFFFFFFFFLL);
    }
  }
  else
  {
    *uint64_t v9 = v10;
    if (v11 != 0xF000000000000007) {
      id v12 = (id)(v10 & 0x7FFFFFFFFFFFFFFFLL);
    }
  }
  return a1;
}

uint64_t sub_1DCA84664(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for DetectorHeadConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  id v7 = (void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  if ((~v6 & 0xF000000000000007) != 0)
  {
    if ((~v9 & 0xF000000000000007) != 0)
    {
      *id v7 = v9;

      return a1;
    }
    sub_1DCA84664(a1 + 56);
  }
  *id v7 = v9;
  return a1;
}

ValueMetadata *type metadata accessor for DetectorHeadConfiguration()
{
  return &type metadata for DetectorHeadConfiguration;
}

uint64_t _s22InMemoryMockXRWStorageCMa()
{
  return self;
}

_UNKNOWN **sub_1DCA84790()
{
  return &off_1EC8A5378;
}

_UNKNOWN **sub_1DCA8479C()
{
  return &off_1F37EB038;
}

uint64_t *_s22InMemoryMockXRWStorageC4FileV8FileDataVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1DC8AF450(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t _s22InMemoryMockXRWStorageC4FileV8FileDataVwxx(uint64_t a1)
{
  return sub_1DC881920(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s22InMemoryMockXRWStorageC4FileV8FileDataVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1DC8AF450(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1DC881920(v5, v6);
  return a1;
}

uint64_t *_s22InMemoryMockXRWStorageC4FileV8FileDataVwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1DC881920(v3, v4);
  return a1;
}

uint64_t _s22InMemoryMockXRWStorageC4FileV8FileDataVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s22InMemoryMockXRWStorageC4FileV8FileDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)__n128 result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *_s22InMemoryMockXRWStorageC4FileV8FileDataVMa()
{
  return &_s22InMemoryMockXRWStorageC4FileV8FileDataVN;
}

uint64_t _s22InMemoryMockXRWStorageC4FileVwxx()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s22InMemoryMockXRWStorageC4FileVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s22InMemoryMockXRWStorageC4FileVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s22InMemoryMockXRWStorageC4FileVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s22InMemoryMockXRWStorageC4FileVMa()
{
  return &_s22InMemoryMockXRWStorageC4FileVN;
}

id sub_1DCA84A64(void *a1, char a2)
{
  int v2 = a2 & 1;
  id result = objc_msgSend(a1, sel_isOptional);
  if (result != v2)
  {
    sub_1DC9AF87C();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DC9AF8B0();
    sub_1DCA85EFC();
    type metadata accessor for SNError();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    unint64_t v4 = sub_1DCA85EB4();
    sub_1DCA14B2C(v4, v5, v6, v7, v8, v9);
    swift_bridgeObjectRelease();
    return (id)swift_willThrow();
  }
  return result;
}

void sub_1DCA84BE4(void *a1, unint64_t a2)
{
  if (objc_msgSend(a1, sel_type) == (id)3)
  {
    if (a2 >> 62) {
      goto LABEL_32;
    }
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      id v5 = objc_msgSend(a1, sel_sizeRangeForDimension);
      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
      unint64_t v6 = sub_1DCB87C38();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_1DCB88CC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v4 != v7) {
        break;
      }
      if (v4 < 0)
      {
        __break(1u);
        return;
      }
      if (!v4) {
        return;
      }
      unint64_t v8 = 0;
      unint64_t v26 = a2 & 0xC000000000000001;
      unint64_t v9 = a2;
      while (v4 != v8)
      {
        if (v26) {
          id v10 = (id)MEMORY[0x1E01A7AE0](v8, a2);
        }
        else {
          id v10 = *(id *)(a2 + 8 * v8 + 32);
        }
        unint64_t v11 = v10;
        id v12 = objc_msgSend(v10, sel_rangeValue);
        uint64_t v14 = v13;

        id v15 = objc_msgSend(a1, sel_sizeRangeForDimension);
        uint64_t v16 = sub_1DCB87C38();

        if ((v16 & 0xC000000000000001) != 0)
        {
          id v17 = (id)MEMORY[0x1E01A7AE0](v8, v16);
        }
        else
        {
          if (v8 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_31;
          }
          id v17 = *(id *)(v16 + 8 * v8 + 32);
        }
        int64_t v18 = v17;
        swift_bridgeObjectRelease();
        id v19 = objc_msgSend(v18, sel_rangeValue);
        uint64_t v21 = v20;

        if (v12 != v19 || v14 != v21)
        {
          type metadata accessor for SNError();
          sub_1DCA85F24();
          sub_1DCB88A98();
          sub_1DCB87A18();
          sub_1DCB88F98();
          sub_1DCB87A18();
          swift_bridgeObjectRelease();
          sub_1DCB87A18();
          sub_1DCB886C8();
          sub_1DCB87A18();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        ++v8;
        a2 = v9;
        if (v4 == v8) {
          return;
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1DCB88CC8();
      swift_bridgeObjectRelease();
    }
    type metadata accessor for SNError();
    sub_1DCA85F24();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DC9AF8B0();
    uint64_t v27 = v25 + 14;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
LABEL_27:
    sub_1DCA85E84(v27, (uint64_t)"com.apple.SoundAnalysis");
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DC9AF8B0();
    sub_1DC8E7B68();
    sub_1DCA23E10(v23, v24, (uint64_t)"expected shape constraint to have ranged type");
  }
  swift_willThrow();
}

void sub_1DCA85088(void *a1, void *a2)
{
  if (objc_msgSend(a1, sel_type) != (id)2)
  {
    type metadata accessor for SNError();
    sub_1DC9AF8B0();
    sub_1DC8E7B68();
    sub_1DCA23E10(v14, v15, (uint64_t)"expected shape constraint to enumerated type");
    goto LABEL_6;
  }
  id v4 = objc_msgSend(a1, sel_enumeratedShapes);
  if (!v4)
  {
    __break(1u);
    return;
  }
  id v5 = v4;
  unsigned __int8 v6 = objc_msgSend(v4, sel_isEqual_, a2);

  if ((v6 & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DC9AF87C();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DC9AF8B0();
    sub_1DCA85EFC();
    id v7 = objc_msgSend(a2, sel_description);
    sub_1DCB87938();

    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v8 = sub_1DCA85ED8();
    sub_1DCA14B2C(v8, v9, v10, v11, v12, v13);
    swift_bridgeObjectRelease();
LABEL_6:
    swift_willThrow();
  }
}

id sub_1DCA85288(void *a1)
{
  id result = objc_msgSend(a1, sel_type);
  if (result != (id)1)
  {
    type metadata accessor for SNError();
    sub_1DC9AF8B0();
    sub_1DC8E7B68();
    sub_1DCA23E10(v2, v3, (uint64_t)"expected shape constraint to have unspecified type");
    return (id)swift_willThrow();
  }
  return result;
}

id sub_1DCA85310(void *a1, id a2)
{
  id result = objc_msgSend(a1, sel_dataType);
  if (result != a2)
  {
    type metadata accessor for SNError();
    sub_1DC9AF87C();
    sub_1DCB88A98();
    sub_1DC9AF8B0();
    sub_1DC8E7B68();
    sub_1DCB87A18();
    type metadata accessor for MLMultiArrayDataType(0);
    sub_1DCB88C08();
    sub_1DCA85E84(v4, (uint64_t)"com.apple.SoundAnalysis");
    swift_bridgeObjectRelease();
    return (id)swift_willThrow();
  }
  return result;
}

id sub_1DCA85400(void *a1)
{
  id result = objc_msgSend(a1, sel_type);
  if (result != (id)5)
  {
    type metadata accessor for SNError();
    sub_1DC9AF8B0();
    sub_1DC8E7B68();
    sub_1DCA23E10(v2, v3, (uint64_t)"expected feature to have multi array type");
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA85488(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  id v6 = a3;
  a5();

  return 1;
}

void sub_1DCA85504(void *a1, void *a2)
{
  sub_1DCA85310(a1, a2);
  if (!v2)
  {
    objc_msgSend(a1, sel_shapeConstraint);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9CB90);
    sub_1DCB87C18();
    __break(1u);
  }
}

void sub_1DCA855CC(void *a1, void *a2, void *a3)
{
  sub_1DCA85310(a1, a2);
  if (!v3)
  {
    id v6 = objc_msgSend(a1, sel_shapeConstraint);
    sub_1DCA85088(v6, a3);
  }
}

uint64_t sub_1DCA85650(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(id, uint64_t, id))
{
  id v10 = a3;
  id v11 = a5;
  a7(v10, a4, v11);

  return 1;
}

void sub_1DCA856F4(void *a1, void *a2)
{
  sub_1DCA85310(a1, a2);
  if (!v2)
  {
    id v4 = objc_msgSend(a1, sel_shapeConstraint);
    sub_1DCA85288(v4);
  }
}

uint64_t sub_1DCA85768(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  id v7 = a3;
  a6();

  return 1;
}

void sub_1DCA85804(void *a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(id, uint64_t, uint64_t))
{
  sub_1DCA84A64(a1, a2);
  if (!v5)
  {
    sub_1DCA85400(a1);
    id v10 = objc_msgSend(a1, sel_multiArrayConstraint);
    if (v10)
    {
      id v11 = v10;
      a5(v10, a3, a4);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DCA858BC(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, void *a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t))
{
  id v12 = a3;
  id v13 = a6;
  sub_1DCA85804(v12, a4, a5, (uint64_t)v13, a8);

  return 1;
}

void sub_1DCA85970(void *a1, char a2, void *a3)
{
  sub_1DCA84A64(a1, a2);
  if (!v3)
  {
    sub_1DCA85400(a1);
    id v6 = objc_msgSend(a1, sel_multiArrayConstraint);
    if (v6)
    {
      id v7 = v6;
      sub_1DCA856F4(v6, a3);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DCA85A84(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  sub_1DCB877B8();

  sub_1DCB0F7E4();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a1, sel_outputDescriptionsByName);
  sub_1DCB877B8();

  sub_1DCB0F7E4();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1DCB3077C(v8);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DCB3077C(v13);
  sub_1DC96E0B8(v12, v14);
  char v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v17 = sub_1DCB3077C(v11);
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DCB3077C(v18);
    sub_1DC96E0B8(v17, v19);
    char v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v21) {
      return result;
    }
    type metadata accessor for SNError();
    sub_1DC9AF87C();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DC9AF8B0();
    sub_1DCA85EFC();
    MEMORY[0x1E01A6C50](a3, MEMORY[0x1E4FBB1A0]);
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v23 = sub_1DCA85ED8();
  }
  else
  {
    swift_release();
    type metadata accessor for SNError();
    sub_1DC9AF87C();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DC9AF8B0();
    sub_1DCA85EFC();
    MEMORY[0x1E01A6C50](a2, MEMORY[0x1E4FBB1A0]);
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v23 = sub_1DCA85EB4();
  }
  sub_1DCA14B2C(v23, v24, v25, v26, v27, v28);
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

id sub_1DCA85DD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNValidateModel();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1DCA85E2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNValidateModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNValidateModel()
{
  return self;
}

id sub_1DCA85E84@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return sub_1DCA14B2C(0xD000000000000017, (a2 - 32) | 0x8000000000000000, 4, 0, a1, v2);
}

unint64_t sub_1DCA85EB4()
{
  return 0xD000000000000017;
}

unint64_t sub_1DCA85ED8()
{
  return 0xD000000000000017;
}

void sub_1DCA85F0C()
{
}

uint64_t SNSoundActionCommand.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNSoundActionCommand_impl);
  swift_bridgeObjectRetain();
  return v1;
}

double SNSoundActionCommand.confidenceThreshold.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNSoundActionCommand_impl + 24);
}

uint64_t SNSoundActionCommand.minDurationBlocks.getter()
{
  return *(void *)(v0 + OBJC_IVAR___SNSoundActionCommand_impl + 16);
}

uint64_t sub_1DCA85F9C()
{
  return sub_1DCB891E8();
}

BOOL sub_1DCA86018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  if (a1 == a4 && a2 == a5)
  {
    if (a3 != a6) {
      return 0;
    }
    return a7 == a8;
  }
  char v13 = sub_1DCB89018();
  BOOL result = 0;
  if ((v13 & 1) != 0 && a3 == a6) {
    return a7 == a8;
  }
  return result;
}

uint64_t sub_1DCA86098(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB96DE0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB96DC0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DCA861D4(char a1)
{
  if (!a1) {
    return 1701667182;
  }
  if (a1 == 1) {
    return 0xD000000000000011;
  }
  return 0xD000000000000013;
}

uint64_t sub_1DCA86228(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a4;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA6ED0);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA87730();
  sub_1DCB892B8();
  char v16 = 0;
  sub_1DCB88EC8();
  if (!v4)
  {
    char v15 = 1;
    sub_1DCB88F08();
    char v14 = 2;
    sub_1DCB88EE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v6);
}

uint64_t sub_1DCA863A8()
{
  return sub_1DCB891F8();
}

double sub_1DCA86440(void *a1)
{
  sub_1DC87E988(&qword_1EAAA6EC0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA87730();
  sub_1DCB89298();
  if (v1)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    sub_1DCA45920();
    sub_1DCB88DA8();
    swift_bridgeObjectRetain();
    sub_1DCA45920();
    sub_1DCB88DE8();
    sub_1DCA45920();
    sub_1DCB88DC8();
    double v2 = v6;
    uint64_t v7 = sub_1DC99BA44();
    v8(v7);
    sub_1DC8818D0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1DCA86608()
{
  return sub_1DCA861D4(*v0);
}

uint64_t sub_1DCA86610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA86098(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA86638(uint64_t a1)
{
  unint64_t v2 = sub_1DCA87730();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA86674(uint64_t a1)
{
  unint64_t v2 = sub_1DCA87730();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA866B0()
{
  return sub_1DCA863A8();
}

uint64_t sub_1DCA866C0()
{
  return sub_1DCA85F9C();
}

uint64_t sub_1DCA866D0()
{
  return sub_1DCB891F8();
}

void sub_1DCA86758(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v7 = sub_1DCA86440(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(double *)(a2 + 24) = v7;
  }
}

uint64_t sub_1DCA8678C(void *a1)
{
  return sub_1DCA86228(a1, *v1, v1[1], v1[2]);
}

BOOL sub_1DCA867B0(uint64_t a1, uint64_t a2)
{
  return sub_1DCA86018(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(double *)(a1 + 24), *(double *)(a2 + 24));
}

void SNSoundActionCommand.confidenceThreshold.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 24) = a1;
}

double (*SNSoundActionCommand.confidenceThreshold.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNSoundActionCommand_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 24);
  return sub_1DCA86868;
}

double sub_1DCA86868(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + *(void *)(a1 + 16) + 24) = *(void *)a1;
  return result;
}

uint64_t SNSoundActionCommand.minDurationBlocks.setter(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 16) = result;
  return result;
}

void *(*SNSoundActionCommand.minDurationBlocks.modify(void *a1))(void *result)
{
  uint64_t v2 = OBJC_IVAR___SNSoundActionCommand_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 16);
  return sub_1DCA86914;
}

void *sub_1DCA86914(void *result)
{
  *(void *)(result[1] + result[2] + 16) = *result;
  return result;
}

uint64_t SNSoundActionCommand.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR___SNSoundActionCommand_impl);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA86A00(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return SNSoundActionCommand.name.setter(v1, v2);
}

uint64_t (*SNSoundActionCommand.name.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 8);
  *a1 = *(void *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1DCA86A9C;
}

uint64_t sub_1DCA86A9C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return SNSoundActionCommand.name.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  SNSoundActionCommand.name.setter(v3, v2);

  return swift_bridgeObjectRelease();
}

id sub_1DCA86B10()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR___SNSoundActionCommand_impl];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0xE000000000000000;
  *((void *)v2 + 2) = 0;
  *((void *)v2 + 3) = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_1DCA86B84(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v20 = 1701667150;
  unint64_t v21 = 0xE400000000000000;
  uint64_t v5 = v1;
  sub_1DCB88A38();
  uint64_t v6 = sub_1DCAC6C78(a1);
  if (v2)
  {

    swift_bridgeObjectRelease();
    sub_1DC8A8EA0((uint64_t)v22);
    return (id)swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    sub_1DC8A8EA0((uint64_t)v22);
    sub_1DCB88A38();
    uint64_t v10 = (void *)sub_1DCAC6D14(a1);
    sub_1DC8A8EA0((uint64_t)v22);
    unint64_t v20 = 0xD000000000000013;
    unint64_t v21 = 0x80000001DCB98950;
    sub_1DCB88A38();
    uint64_t v12 = (void *)sub_1DCAC6D14(a1);
    swift_bridgeObjectRelease();
    sub_1DC8A8EA0((uint64_t)v22);
    id v13 = v10;
    sub_1DCA89A70();
    id v14 = objc_msgSend(v13, sel_integerValue);

    id v15 = v12;
    sub_1DCA89970();
    objc_msgSend(v15, sel_doubleValue);
    uint64_t v17 = v16;

    uint64_t v18 = (uint64_t *)&v5[OBJC_IVAR___SNSoundActionCommand_impl];
    *uint64_t v18 = v8;
    v18[1] = v9;
    void v18[2] = (uint64_t)v14;
    v18[3] = v17;

    v19.receiver = v5;
    v19.super_class = ObjectType;
    return objc_msgSendSuper2(&v19, sel_init);
  }
}

id SNSoundActionCommand.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = v1 + OBJC_IVAR___SNSoundActionCommand_impl;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 8);
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v9 = (char *)objc_allocWithZone(ObjectType);
  uint64_t v10 = &v9[OBJC_IVAR___SNSoundActionCommand_impl];
  *(void *)uint64_t v10 = v6;
  *((void *)v10 + 1) = v5;
  *((void *)v10 + 2) = v7;
  *((void *)v10 + 3) = v8;
  v12.receiver = v9;
  v12.super_class = ObjectType;
  swift_bridgeObjectRetain();
  id result = objc_msgSendSuper2(&v12, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNSoundActionCommand.hash.getter()
{
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  sub_1DCB891B8();
  sub_1DCB891E8();
  uint64_t v0 = sub_1DCB891F8();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL SNSoundActionCommand.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v14);
  if (v15)
  {
    sub_1DC87E9CC(&v14, v13);
    sub_1DC87E9DC((uint64_t)v13, (uint64_t)v12);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 16);
      double v4 = *(double *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 24);
      uint64_t v5 = *(void *)&v11[OBJC_IVAR___SNSoundActionCommand_impl + 16];
      double v6 = *(double *)&v11[OBJC_IVAR___SNSoundActionCommand_impl + 24];
      if (*(void *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl) != *(void *)&v11[OBJC_IVAR___SNSoundActionCommand_impl]
        || *(void *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl + 8) != *(void *)&v11[OBJC_IVAR___SNSoundActionCommand_impl
                                                                                        + 8])
      {
        char v8 = sub_1DCB89018();

        BOOL v9 = 0;
        if ((v8 & 1) == 0 || v3 != v5) {
          goto LABEL_14;
        }
        goto LABEL_12;
      }

      if (v3 == v5)
      {
LABEL_12:
        BOOL v9 = v4 == v6;
LABEL_14:
        sub_1DC8818D0((uint64_t)v13);
        return v9;
      }
    }
    BOOL v9 = 0;
    goto LABEL_14;
  }
  return 0;
}

id SNSoundActionCommand.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNSoundActionCommand.init(coder:)(a1);
}

id SNSoundActionCommand.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  double v6 = sub_1DC87DF90();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  double v13 = v6;

  long long v14 = (char *)objc_allocWithZone(ObjectType);
  uint64_t v15 = (double *)&v14[OBJC_IVAR___SNSoundActionCommand_impl];
  *(void *)uint64_t v15 = v8;
  *((void *)v15 + 1) = v10;
  *((void *)v15 + 2) = v12;
  v15[3] = v13;
  v18.receiver = v14;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, sel_init);

  swift_getObjectType();
  sub_1DCA87970();
  return v16;
}

Swift::Void __swiftcall SNSoundActionCommand.encode(with:)(NSCoder with)
{
  uint64_t v2 = (double *)(v1 + OBJC_IVAR___SNSoundActionCommand_impl);
  double v4 = *(void **)(v1 + OBJC_IVAR___SNSoundActionCommand_impl);
  uint64_t v3 = *((void *)v2 + 1);
  uint64_t v5 = *((void *)v2 + 2);
  double v6 = v2[3];
  swift_bridgeObjectRetain();
  sub_1DC87C220(v4, v3, v5, v6);

  swift_bridgeObjectRelease();
}

uint64_t static SNSoundActionCommand.supportsSecureCoding.getter()
{
  return 1;
}

id SNSoundActionCommand.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1DCA87500(double *a1@<X8>)
{
  *a1 = SNSoundActionCommand.confidenceThreshold.getter();
}

void sub_1DCA8752C(double *a1)
{
}

uint64_t sub_1DCA87554@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SNSoundActionCommand.minDurationBlocks.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1DCA87580(uint64_t *a1)
{
  return SNSoundActionCommand.minDurationBlocks.setter(*a1);
}

uint64_t sub_1DCA875A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SNSoundActionCommand.name.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t type metadata accessor for SNSoundActionCommand()
{
  return self;
}

uint64_t method lookup function for SNSoundActionCommand(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNSoundActionCommand);
}

void *assignWithCopy for SoundActionsCommand(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

void *assignWithTake for SoundActionsCommand(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for SoundActionsCommand()
{
  return &type metadata for SoundActionsCommand;
}

unint64_t sub_1DCA876E4()
{
  unint64_t result = qword_1EAAA6EB8;
  if (!qword_1EAAA6EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6EB8);
  }
  return result;
}

unint64_t sub_1DCA87730()
{
  unint64_t result = qword_1EAAA6EC8;
  if (!qword_1EAAA6EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6EC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SoundActionsCommand.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA87848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsCommand.CodingKeys()
{
  return &type metadata for SoundActionsCommand.CodingKeys;
}

unint64_t sub_1DCA87884()
{
  unint64_t result = qword_1EAAA6ED8;
  if (!qword_1EAAA6ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6ED8);
  }
  return result;
}

unint64_t sub_1DCA878D4()
{
  unint64_t result = qword_1EAAA6EE0;
  if (!qword_1EAAA6EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6EE0);
  }
  return result;
}

unint64_t sub_1DCA87924()
{
  unint64_t result = qword_1EAAA6EE8;
  if (!qword_1EAAA6EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6EE8);
  }
  return result;
}

uint64_t sub_1DCA87970()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1DCA87990(void *a1, unint64_t a2, void *a3)
{
  uint64_t v3 = a2;
  if (a2 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DCB88CC8();
    if (v5) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return (uint64_t)a1;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_23;
  }
LABEL_3:
  uint64_t v32 = v3;
  unint64_t v33 = v3 & 0xC000000000000001;
  uint64_t v6 = 4;
  uint64_t v31 = v5;
  while (1)
  {
    if (v33) {
      uint64_t v7 = (char *)MEMORY[0x1E01A7AE0](v6 - 4, v3);
    }
    else {
      uint64_t v7 = (char *)*(id *)(v3 + 8 * v6);
    }
    uint64_t v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v10 = *(void *)&v7[OBJC_IVAR___SNModelFeatureConnection_impl + 16];
    uint64_t v11 = *(void *)&v7[OBJC_IVAR___SNModelFeatureConnection_impl + 24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(a3, sel_featureValueForName_, v12);

    if (!v13)
    {
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1DC9637DC(v10, v11);
      char v24 = v23;
      swift_bridgeObjectRelease();
      if (v24)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1DC87E988(&qword_1EAAA6F00);
        sub_1DCB88C28();
        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(a1[7] + 8 * v22);
        sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA18E8);
        sub_1DCB88C48();

        swift_bridgeObjectRelease();
      }
      else
      {
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = v32;
      goto LABEL_22;
    }
    uint64_t v3 = v11;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = v10;
    uint64_t v15 = v3;
    unint64_t v16 = sub_1DC9637DC(v10, v3);
    if (__OFADD__(a1[2], (v17 & 1) == 0)) {
      goto LABEL_25;
    }
    unint64_t v18 = v16;
    uint64_t v3 = v17;
    sub_1DC87E988(&qword_1EAAA6F00);
    if (sub_1DCB88C28()) {
      break;
    }
LABEL_13:
    if (v3)
    {
      uint64_t v21 = a1[7];

      *(void *)(v21 + 8 * v18) = v13;
    }
    else
    {
      a1[(v18 >> 6) + 8] |= 1 << v18;
      unint64_t v26 = (uint64_t *)(a1[6] + 16 * v18);
      *unint64_t v26 = v14;
      v26[1] = v15;
      *(void *)(a1[7] + 8 * v18) = v13;
      uint64_t v27 = a1[2];
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_26;
      }
      a1[2] = v29;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v31;
    uint64_t v3 = v32;
    uint64_t v9 = v6 - 3;
LABEL_22:
    ++v6;
    if (v9 == v5) {
      goto LABEL_23;
    }
  }
  unint64_t v19 = sub_1DC9637DC(v14, v15);
  if ((v3 & 1) == (v20 & 1))
  {
    unint64_t v18 = v19;
    goto LABEL_13;
  }
  uint64_t result = sub_1DCB890E8();
  __break(1u);
  return result;
}

void sub_1DCA87D18(void *a1)
{
  uint64_t v16 = sub_1DCB868A8();
  MEMORY[0x1F4188790](v16);
  unint64_t v2 = (unint64_t)objc_msgSend(a1, sel_count);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1DC897B8C();
  id v3 = a1;
  sub_1DCB88438();

  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  if (v2)
  {
    sub_1DCA89330(&qword_1EAAA6EF0, MEMORY[0x1E4F27660]);
    do
    {
      sub_1DCB88758();
      if (!v22) {
        goto LABEL_22;
      }
      sub_1DC87E9DC((uint64_t)&v21, (uint64_t)&v19);
      if (!swift_dynamicCast())
      {
        sub_1DCA88F38();
        swift_allocError();
        swift_willThrow();
        uint64_t v12 = sub_1DCA894A0();
        v13(v12);
        swift_release();
        sub_1DC8818D0((uint64_t)&v21);
        return;
      }
      sub_1DC8818D0((uint64_t)&v21);
      uint64_t v4 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCA89518();
        uint64_t v4 = v23;
      }
      unint64_t v5 = *(void *)(v4 + 16);
      if (v5 >= *(void *)(v4 + 24) >> 1)
      {
        sub_1DC897B8C();
        uint64_t v4 = v23;
      }
      *(void *)(v4 + 16) = v5 + 1;
      uint64_t v6 = v4 + 16 * v5;
      *(void *)(v6 + 32) = v17;
      *(void *)(v6 + 40) = v18;
    }
    while (--v2);
  }
  sub_1DCA89330(&qword_1EAAA6EF0, MEMORY[0x1E4F27660]);
  sub_1DCA895BC();
  if (v20)
  {
    while (1)
    {
      sub_1DC87E9CC(&v19, &v21);
      sub_1DC87E9DC((uint64_t)&v21, (uint64_t)&v19);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_1DC8818D0((uint64_t)&v21);
      uint64_t v7 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCA89518();
        uint64_t v7 = v23;
      }
      unint64_t v8 = *(void *)(v7 + 16);
      if (v8 >= *(void *)(v7 + 24) >> 1)
      {
        sub_1DC897B8C();
        uint64_t v7 = v23;
      }
      *(void *)(v7 + 16) = v8 + 1;
      uint64_t v9 = v7 + 16 * v8;
      *(void *)(v9 + 32) = v17;
      *(void *)(v9 + 40) = v18;
      sub_1DCA895BC();
      if (!v20) {
        goto LABEL_18;
      }
    }
    sub_1DCA88F38();
    swift_allocError();
    swift_willThrow();
    sub_1DC8818D0((uint64_t)&v21);
    uint64_t v14 = sub_1DCA894A0();
    v15(v14);
    swift_release();
  }
  else
  {
LABEL_18:
    uint64_t v10 = sub_1DCA894A0();
    v11(v10);
    sub_1DC881978((uint64_t)&v19);
  }
}

void sub_1DCA880D8()
{
}

void sub_1DCA880F8()
{
}

void sub_1DCA88118(SEL *a1)
{
  id v3 = [v1 *a1];
  sub_1DCA87D18(v3);
  uint64_t v5 = v4;

  if (!v2) {
    sub_1DCB3077C(v5);
  }
}

void *sub_1DCA8817C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  v2[5] = MEMORY[0x1E4FBC868];
  v2[2] = a1;
  v2[3] = a2;
  swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(a2 + 16);
  swift_unknownObjectRetain();
  uint64_t v6 = sub_1DCA894B8();
  uint64_t v7 = (void *)v5(v6);
  uint64_t v8 = sub_1DCA88254();

  void v3[4] = v8;
  type metadata accessor for SNModelMetadataUtils();
  uint64_t v9 = sub_1DCA894B8();
  uint64_t v10 = (void *)v5(v9);
  uint64_t v11 = sub_1DCB30D3C(v10, MEMORY[0x1E4FBC870]);

  uint64_t v12 = sub_1DCB0F49C(v11);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v3[6] = v12;
  return v3;
}

#error "1DCA883F8: call analysis failed (funcsize=485)"

id sub_1DCA88A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  swift_bridgeObjectRetain();
  sub_1DC9615EC();
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
  id result = sub_1DC99F66C();
  if (!v3)
  {
    uint64_t v9 = result;
    id v10 = objc_msgSend(self, sel_lazyProviderWithFeaturesProvidedBy_addedToFeaturesProvidedBy_, result, a1);
    uint64_t v11 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    id v13 = (void *)(*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v11 + 24))(v10, a2, ObjectType, v11);
    unint64_t v14 = *(void *)(v2 + 48);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1DCA87990(MEMORY[0x1E4FBC868], v14, v13);
    swift_bridgeObjectRelease();
    *(void *)(v4 + 40) = v15;
    swift_bridgeObjectRelease();
    sub_1DCA88118((SEL *)&selRef_outputFeatureNames);
    id v16 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
    id v17 = sub_1DCA88CF4((uint64_t)v13);
    swift_unknownObjectRelease();

    return v17;
  }
  return result;
}

uint64_t sub_1DCA88BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (!v4) {
    return 1;
  }
  for (unint64_t i = (void *)(a4 + 40); ; i += 2)
  {
    BOOL v8 = *(i - 1) == a1 && *i == a2;
    if (v8 || (sub_1DCB89018() & 1) != 0) {
      break;
    }
    if (!--v4) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1DCA88C44()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCA88C7C()
{
  sub_1DCA88C44();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RecursiveMLModel()
{
  return self;
}

id sub_1DCA88CD4()
{
  return *(id *)(v0 + 32);
}

id sub_1DCA88CDC(uint64_t a1, uint64_t a2)
{
  return sub_1DCA88A20(a1, a2);
}

id sub_1DCA88CF4(uint64_t a1)
{
  uint64_t v3 = (void *)sub_1DCB87FD8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithFeatureProvider_featureNames_, a1, v3);

  swift_unknownObjectRelease();
  return v4;
}

id sub_1DCA88D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  id v10 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v12 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    if (a6) {
      goto LABEL_3;
    }
LABEL_6:
    id v13 = 0;
    if (a7) {
      goto LABEL_4;
    }
LABEL_7:
    unint64_t v14 = 0;
    goto LABEL_8;
  }
  uint64_t v12 = 0;
  if (!a6) {
    goto LABEL_6;
  }
LABEL_3:
  id v13 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  if (!a7) {
    goto LABEL_7;
  }
LABEL_4:
  type metadata accessor for MLModelMetadataKey(0);
  sub_1DCA89330((unint64_t *)&unk_1EAA9C780, type metadata accessor for MLModelMetadataKey);
  unint64_t v14 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
LABEL_8:
  id v15 = objc_msgSend(v18, sel_initWithInputDescriptions_outputDescriptions_predictedFeatureName_predictedProbabilitiesName_metadata_, v10, v11, v12, v13, v14, a5);

  return v15;
}

unint64_t sub_1DCA88F38()
{
  unint64_t result = qword_1EAAA6EF8;
  if (!qword_1EAAA6EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA6EF8);
  }
  return result;
}

uint64_t sub_1DCA88F84(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, id), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v9 = (void *)((char *)v14 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1DCAEE710(0, v8, v9);
    sub_1DCA89108(v9, v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (unint64_t *)swift_slowAlloc();
    sub_1DCAEE710(0, v8, v11);
    sub_1DCA89108(v11, v8, v6, a2);
    a3 = v12;
    MEMORY[0x1E01A99C0](v11, -1, -1);
  }
  return a3;
}

void sub_1DCA89108(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, id))
{
  uint64_t v23 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_20;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v25) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v12);
    ++v6;
    if (!v13)
    {
      int64_t v6 = v12 + 1;
      if (v12 + 1 >= v25) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v24 + 8 * v6);
      if (!v13)
      {
        int64_t v6 = v12 + 2;
        if (v12 + 2 >= v25) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v24 + 8 * v6);
        if (!v13) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_20:
    id v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    id v18 = *(void **)(*(void *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    id v19 = v18;
    LOBYTE(v16) = a4(v16, v17, v19);
    swift_bridgeObjectRelease();

    if (v16)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1DCA21EC0(a1, a2, v23, a3);
        return;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v25) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v24 + 8 * v14);
  if (v13)
  {
    int64_t v6 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v25) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1DCA89304(void *a1)
{
  return sub_1DC916688(a1, (SEL *)&selRef_predictedProbabilitiesName);
}

uint64_t sub_1DCA89310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCA88BD0(a1, a2, a3, *(void *)(v3 + 16)) & 1;
}

uint64_t sub_1DCA89330(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s11DomainErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA89414);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s11DomainErrorOMa()
{
  return &_s11DomainErrorON;
}

unint64_t sub_1DCA89450()
{
  unint64_t result = qword_1EAAA6F08[0];
  if (!qword_1EAAA6F08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA6F08);
  }
  return result;
}

uint64_t sub_1DCA894A0()
{
  return v0;
}

uint64_t sub_1DCA894B8()
{
  return v0;
}

void sub_1DCA894D0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 88) = a1;
  sub_1DC897B8C();
}

void sub_1DCA894F4()
{
  sub_1DC897B8C();
}

void sub_1DCA89518()
{
  sub_1DC897B8C();
}

void sub_1DCA8953C()
{
  sub_1DC897B8C();
}

uint64_t sub_1DCA89560()
{
  return sub_1DCB889F8();
}

uint64_t sub_1DCA89580()
{
  return v0;
}

uint64_t sub_1DCA89594()
{
  return v0 - 144;
}

uint64_t sub_1DCA895A8()
{
  return v0;
}

uint64_t sub_1DCA895BC()
{
  return sub_1DCB88758();
}

void sub_1DCA895DC()
{
  sub_1DCA89DDC();
  sub_1DC8AE910(v1);
  int v3 = v2;
  unsigned __int8 v4 = sub_1DCA89DAC(objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, v2));

  if ((v4 & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DCA89DC8();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCA89DE8();
    id v5 = objc_msgSend(v0, sel_description);
    sub_1DCB87938();
    sub_1DCA89E34();
    sub_1DCA89D90();
    swift_bridgeObjectRelease();
    sub_1DCA89D70(0xD000000000000017, 0x80000001DCB90E90, v6, v7, v8);
    sub_1DCA89E1C();
    swift_willThrow();
  }
}

void sub_1DCA896D4()
{
  sub_1DCA89DDC();
  sub_1DCB22DE0(v1);
  int v3 = v2;
  unsigned __int8 v4 = sub_1DCA89DAC(objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, v2));

  if ((v4 & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DCA89DF8();
    swift_bridgeObjectRelease();
    sub_1DCA89DE8();
    id v5 = objc_msgSend(v0, sel_description);
    sub_1DCB87938();
    sub_1DCA89E34();
    sub_1DCA89D90();
    swift_bridgeObjectRelease();
    sub_1DCA89D70(0xD000000000000017, 0x80000001DCB90E90, v6, v7, v8);
    sub_1DCA89E1C();
    swift_willThrow();
  }
}

void sub_1DCA897C4()
{
  sub_1DCA89DDC();
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
  id v2 = objc_msgSend(v0, sel_compare_, v1);

  if (v2 != (id)1)
  {
    type metadata accessor for SNError();
    sub_1DCA89DC8();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    id v3 = objc_msgSend(v0, sel_description);
    sub_1DCB87938();
    sub_1DCA89E34();
    sub_1DCA89D90();
    swift_bridgeObjectRelease();
    sub_1DCA89D70(0xD000000000000017, 0x80000001DCB90E90, v4, v5, 0xD00000000000001ELL);
    sub_1DCA89E1C();
    swift_willThrow();
  }
}

id sub_1DCA898D4(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_longLongValue);
  if (v4 == objc_msgSend(a2, sel_longLongValue)
    && (objc_msgSend(a1, sel_doubleValue), double v6 = v5, objc_msgSend(a2, sel_doubleValue), v6 == v7))
  {
    return objc_msgSend(a1, sel_isEqual_, a2);
  }
  else
  {
    return 0;
  }
}

void sub_1DCA89970()
{
  sub_1DCA89DDC();
  objc_msgSend(v2, sel_doubleValue);
  unsigned __int8 v4 = sub_1DCA89DAC(objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v3));

  if ((v4 & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DCA89DF8();
    swift_bridgeObjectRelease();
    sub_1DCA89DE8();
    id v5 = objc_msgSend(v1, sel_description);
    sub_1DCB87938();
    sub_1DCA89E34();
    sub_1DCA89D90();
    swift_bridgeObjectRelease();
    sub_1DCA89D70(0xD000000000000017, 0x80000001DCB90E90, v6, v7, v8);
    sub_1DCA89E1C();
    swift_willThrow();
  }
}

void sub_1DCA89A70()
{
  sub_1DCA89DDC();
  id v2 = sub_1DC8AE9F0(v1);
  unsigned __int8 v3 = sub_1DCA89DAC(objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v2));

  if ((v3 & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DCA89DC8();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v0, sel_description);
    sub_1DCB87938();
    sub_1DCA89E34();
    sub_1DCA89D90();
    swift_bridgeObjectRelease();
    sub_1DCA89D70(0xD000000000000017, 0x80000001DCB90E90, v5, v6, 0xD00000000000001FLL);
    sub_1DCA89E1C();
    swift_willThrow();
  }
}

unint64_t sub_1DCA89B70(unint64_t a1, unint64_t a2)
{
  if (sub_1DCB879C8() != 4)
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000025, 0x80000001DCB98A60);
    swift_willThrow();
    return v2;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  LODWORD(v2) = 0;
  uint64_t v6 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v6) = 1;
  }
  uint64_t v7 = 4 << v6;
  uint64_t v13 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v8 = 15;
  while (1)
  {
    unint64_t result = v8;
    if ((v8 & 0xC) == v7) {
      unint64_t result = sub_1DC9F8E98(v8, a1, a2);
    }
    unint64_t v10 = result >> 16;
    if (result >> 16 >= v5) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1DCB87A68();
      unsigned __int8 v11 = result;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v12[0] = a1;
      v12[1] = v13;
      unsigned __int8 v11 = *((unsigned char *)v12 + v10);
    }
    else
    {
      unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = sub_1DCB88B28();
      }
      unsigned __int8 v11 = *(unsigned char *)(result + v10);
    }
    if ((v8 & 0xC) == v7)
    {
      unint64_t result = sub_1DC9F8E98(v8, a1, a2);
      unint64_t v8 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_20:
        unint64_t v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_25;
      }
    }
    else if ((a2 & 0x1000000000000000) == 0)
    {
      goto LABEL_20;
    }
    if (v5 <= v8 >> 16) {
      goto LABEL_31;
    }
    unint64_t v8 = sub_1DCB87A48();
LABEL_25:
    uint64_t v2 = v11 | (v2 << 8);
    if (4 * v5 == v8 >> 14) {
      return v2;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

id sub_1DCA89D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DCA14B2C(a1, a2, 1, 0, a5, v5);
}

uint64_t sub_1DCA89D90()
{
  return sub_1DCB87A18();
}

id sub_1DCA89DAC(void *a1)
{
  return sub_1DCA898D4(v1, a1);
}

uint64_t sub_1DCA89DF8()
{
  return sub_1DCB88A98();
}

uint64_t sub_1DCA89E1C()
{
  return swift_bridgeObjectRelease();
}

void sub_1DCA89E34()
{
}

uint64_t sub_1DCA89E4C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DCA89EB0()
{
  sub_1DC978D10();

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA89EE4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCA89F0C()
{
  sub_1DCA89EE4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RollingBuffer()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA89F58()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RollingBuffer.Reader()
{
  return sub_1DC8866E4();
}

BOOL sub_1DCA89FC8()
{
  return sub_1DCA89FE4();
}

BOOL sub_1DCA89FE4()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  id v1 = sub_1DCAA49F8();
  char v3 = v2;
  swift_bridgeObjectRelease();
  return (v3 & 1) == 0 && v1 != 0;
}

uint64_t sub_1DCA8A0E4()
{
  return sub_1DCA8A108();
}

uint64_t sub_1DCA8A108()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A138()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A168()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A198()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A1C8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A1F8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A228()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A258()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A288()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A2B8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A2E8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A318()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A348()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A378()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A3A8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA8A3D8()
{
  return sub_1DCA8A138();
}

uint64_t sub_1DCA8A3FC()
{
  return sub_1DCA8A1C8();
}

uint64_t sub_1DCA8A420()
{
  return sub_1DCA8A348();
}

uint64_t sub_1DCA8A444()
{
  return sub_1DCA8A2E8();
}

uint64_t sub_1DCA8A468()
{
  return sub_1DCA8A258();
}

uint64_t sub_1DCA8A48C()
{
  return sub_1DCA8A1F8();
}

uint64_t sub_1DCA8A4B0()
{
  return sub_1DCA8A3A8();
}

uint64_t sub_1DCA8A4D4()
{
  return sub_1DCA8A168();
}

uint64_t sub_1DCA8A4F8()
{
  return sub_1DCA8A288();
}

uint64_t sub_1DCA8A51C()
{
  return sub_1DCA8A378();
}

uint64_t sub_1DCA8A540(void *a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  sub_1DC87E988((uint64_t *)&unk_1EAA9D0B0);
  swift_allocObject();
  uint64_t v4 = sub_1DCB872B8();
  *(void *)(v2 + 24) = v4;
  swift_retain();
  sub_1DCA8A5F4((unint64_t)a1, v4, &v7);
  swift_release();

  uint64_t v5 = v11;
  *(void *)(v2 + 32) = v7;
  *(_OWORD *)(v2 + 40) = v8;
  *(_OWORD *)(v2 + 56) = v9;
  *(_OWORD *)(v2 + 72) = v10;
  *(void *)(v2 + 88) = v5;
  return v2;
}

id sub_1DCA8A5F4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v33 = a1;
  uint64_t v5 = sub_1DC87E988(&qword_1EAA9D078);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988((uint64_t *)&unk_1EAA9D090);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a2;
  sub_1DC87E988((uint64_t *)&unk_1EAA9CD48);
  sub_1DC88CF34((unint64_t *)&unk_1EAA9D0A0, (uint64_t *)&unk_1EAA9D0B0);
  sub_1DCB874A8();
  sub_1DC87E988(&qword_1EAA9CD58);
  sub_1DCB87128();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1DC88CF34((unint64_t *)&unk_1EAA9D080, (uint64_t *)&unk_1EAA9D090);
  uint64_t v13 = sub_1DCB87468();
  sub_1DC87E988(qword_1EAA9CE98);
  swift_allocObject();
  uint64_t v14 = sub_1DC9C5478(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v34 = v14;
  sub_1DC88CF34(&qword_1EAA9CE90, qword_1EAA9CE98);
  uint64_t v15 = sub_1DCB873A8();
  swift_release();
  swift_retain();
  id v16 = (id)v33;
  unsigned int v17 = objc_msgSend((id)v33, sel_channelCount);
  id result = objc_msgSend(v16, sel_sampleRate);
  if ((~*(void *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v19 < 9.22337204e18)
  {
    unint64_t v33 = v17;
    uint64_t v20 = (uint64_t)v19;
    sub_1DC87E988((uint64_t *)&unk_1EAA9CE80);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1DC87E988(&qword_1EAA9D070);
    swift_allocObject();
    uint64_t v22 = sub_1DC9AE954(v21);
    sub_1DC87E988(&qword_1EAA9CE78);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D060);
    swift_allocObject();
    uint64_t v24 = sub_1DC9AE954(v23);
    sub_1DC87E988(qword_1EAA9CAC8);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D030);
    swift_allocObject();
    uint64_t v26 = sub_1DC9AE954(v25);
    sub_1DC87E988(&qword_1EAA9CE68);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D040);
    swift_allocObject();
    uint64_t v28 = sub_1DC9AE954(v27);
    sub_1DC87E988(&qword_1EAA9CE70);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D050);
    swift_allocObject();
    uint64_t v30 = sub_1DC9AE954(v29);
    id result = (id)swift_release();
    unint64_t v31 = v33;
    *a3 = v15;
    a3[1] = v31;
    a3[2] = v20;
    a3[3] = v22;
    a3[4] = v24;
    a3[5] = v26;
    a3[6] = v28;
    a3[7] = v30;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1DCA8ABA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v41 = a2;
  id v42 = a1;
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA7018);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DC87E988((uint64_t *)&unk_1EAAA7020);
  sub_1DC89D4E0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC87E988(&qword_1EAA9FFC0);
  sub_1DC87E988((uint64_t *)&unk_1EAA9CD48);
  sub_1DC88CF34(&qword_1EAAA7030, &qword_1EAA9FFC0);
  sub_1DCB874A8();
  sub_1DC87E988(&qword_1EAA9CD58);
  sub_1DCB87128();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  sub_1DC88CF34(&qword_1EAAA7038, (uint64_t *)&unk_1EAAA7020);
  sub_1DCB87468();
  sub_1DC87E988(&qword_1EAAA7040);
  sub_1DC886810();
  uint64_t v14 = sub_1DC8BAA7C();
  uint64_t v15 = sub_1DC9C5478(v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  uint64_t v43 = v15;
  sub_1DC88CF34(qword_1EAAA7048, &qword_1EAAA7040);
  uint64_t v16 = sub_1DCB873A8();
  swift_release();
  swift_retain();
  id v17 = v42;
  unsigned int v18 = objc_msgSend(v42, sel_channelCount);
  id result = objc_msgSend(v17, sel_sampleRate);
  if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v20 < 9.22337204e18)
  {
    uint64_t v21 = v18;
    uint64_t v22 = (uint64_t)v20;
    sub_1DC87E988((uint64_t *)&unk_1EAA9CE80);
    uint64_t v23 = sub_1DC8BABC0();
    uint64_t v24 = self;
    *(void *)(v23 + 16) = sub_1DCA8B6B4(v24);
    sub_1DC87E988(&qword_1EAA9D070);
    sub_1DC886810();
    uint64_t v25 = sub_1DC8BAA7C();
    uint64_t v26 = sub_1DC9AE954(v25);
    sub_1DC87E988(&qword_1EAA9CE78);
    sub_1DC8BABC0();
    uint64_t v27 = (void *)sub_1DCA8B6D0();
    *(void *)(v23 + 16) = sub_1DCA8B6B4(v27);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D060);
    sub_1DC886810();
    uint64_t v28 = sub_1DC8BAA7C();
    uint64_t v29 = sub_1DC9AE954(v28);
    sub_1DC87E988(qword_1EAA9CAC8);
    sub_1DC8BABC0();
    uint64_t v30 = (void *)sub_1DCA8B6D0();
    *(void *)(v23 + 16) = sub_1DCA8B6B4(v30);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D030);
    sub_1DC886810();
    uint64_t v31 = sub_1DC8BAA7C();
    uint64_t v32 = sub_1DC9AE954(v31);
    sub_1DC87E988(&qword_1EAA9CE68);
    sub_1DC8BABC0();
    unint64_t v33 = (void *)sub_1DCA8B6D0();
    *(void *)(v23 + 16) = sub_1DCA8B6B4(v33);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D040);
    sub_1DC886810();
    uint64_t v34 = sub_1DC8BAA7C();
    uint64_t v35 = sub_1DC9AE954(v34);
    sub_1DC87E988(&qword_1EAA9CE70);
    sub_1DC8BABC0();
    id v36 = (void *)sub_1DCA8B6D0();
    *(void *)(v23 + 16) = sub_1DCA8B6B4(v36);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D050);
    sub_1DC886810();
    uint64_t v37 = sub_1DC8BAA7C();
    uint64_t v38 = sub_1DC9AE954(v37);
    id result = (id)swift_release();
    uint64_t v39 = v41;
    *unint64_t v41 = v16;
    v39[1] = v21;
    v39[2] = v22;
    v39[3] = v26;
    v39[4] = v29;
    v39[5] = v32;
    v39[6] = v35;
    v39[7] = v38;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1DCA8AFF8(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1DCA8B244(a1);
  uint64_t ObjectType = swift_getObjectType();
  long long v15 = v6[3];
  v23[0] = v6[2];
  v23[1] = v15;
  long long v16 = v6[5];
  _OWORD v23[2] = v6[4];
  v23[3] = v16;
  uint64_t v17 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(a2 + 16))(v23, ObjectType, a2);
  if (v7)
  {
    id v18 = v7;
    a3(v7);
  }
  else
  {
    uint64_t v24 = v17;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = a4;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a5;
    *(void *)(v20 + 24) = a6;
    swift_retain();
    swift_retain();
    sub_1DC87E988((uint64_t *)&unk_1EAAA4200);
    sub_1DC88CF34(&qword_1EAAA3FE0, (uint64_t *)&unk_1EAAA4200);
    uint64_t v21 = sub_1DCB87428();
    swift_release();
    swift_release();
    swift_release();
    sub_1DC87E988(&qword_1EAAA6A18);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    *(void *)(inited + 48) = v21;
    swift_beginAccess();
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCB18A48();
    swift_endAccess();
    swift_release();
    swift_setDeallocating();
    sub_1DC937724();
  }
}

uint64_t sub_1DCA8B244(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unint64_t v6 = 0;
    for (uint64_t i = v4 + 48; *(void *)(i - 16) != a1; i += 24)
    {
      if (v5 == ++v6) {
        return result;
      }
    }
    if (v6 >= v5)
    {
      __break(1u);
    }
    else
    {
      swift_retain();
      sub_1DCB87268();
      swift_beginAccess();
      sub_1DCA36E5C(v6);
      swift_endAccess();
      swift_release();
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DCA8B328()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 48;
    do
    {
      uint64_t v5 = *(void *)(v4 - 16);
      v4 += 24;
      swift_unknownObjectRetain();
      swift_retain();
      sub_1DCA8B244(v5);
      swift_release();
      swift_unknownObjectRelease();
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DCA8B3C8(void *a1)
{
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v2 = a1;
    sub_1DCB87298();
  }
  else
  {
    sub_1DC8DA330();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_1DCA8B468()
{
  return sub_1DCB87288();
}

uint64_t sub_1DCA8B49C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DCA8B518()
{
  sub_1DCA8B49C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioStreamAnalyzer()
{
  return self;
}

uint64_t sub_1DCA8B570()
{
  return MEMORY[0x1E4FBB060];
}

uint64_t sub_1DCA8B57C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AudioStreamAnalyzer();
  uint64_t result = sub_1DCB88AB8();
  *a1 = result;
  return result;
}

uint64_t sub_1DCA8B5BC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA8B5F4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1DCA8B620()
{
  return sub_1DCA8A2B8();
}

uint64_t sub_1DCA8B644()
{
  return sub_1DCA8A198();
}

uint64_t sub_1DCA8B668()
{
  return sub_1DCA8A228();
}

uint64_t sub_1DCA8B68C()
{
  return sub_1DCA8A318();
}

id sub_1DCA8B6B4(void *a1)
{
  return objc_msgSend(a1, (SEL)(v1 + 1432), 0x10000, 5);
}

uint64_t sub_1DCA8B6D0()
{
  return self;
}

uint64_t sub_1DCA8B6E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1DCA8B7B4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1DCA8B988(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_1DCA8BAC4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1DCA8BC38(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_1DCA8BE78(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1DCA8BFEC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_1DCA8C22C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_1DCA8C370(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1DCA8C544);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1DCA8C56C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1DCA8C634(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for TwoPassResult()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA8C774(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646E756F66 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953722220 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA8C84C(char a1)
{
  if (a1) {
    return 1953722220;
  }
  else {
    return 0x646E756F66;
  }
}

uint64_t sub_1DCA8C878(void *a1, char a2)
{
  sub_1DC87E988(&qword_1EAAA7130);
  sub_1DC89D4E0();
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  uint64_t v23 = sub_1DC87E988(&qword_1EAAA7138);
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC8A22D0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA7140);
  sub_1DC89D4E0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1DC8A22D0();
  uint64_t v20 = v19 - v18;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA8D548();
  sub_1DCB892B8();
  int v21 = (uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
  if (a2)
  {
    sub_1DCA8D594();
    sub_1DCB88E88();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v7, v25);
  }
  else
  {
    sub_1DCA8D5E0();
    sub_1DCB88E88();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v23);
  }
  return (*v21)(v20, v14);
}

uint64_t sub_1DCA8CA98(uint64_t a1)
{
  uint64_t v37 = sub_1DC87E988(&qword_1EAAA70F8);
  sub_1DC89D4E0();
  uint64_t v35 = v2;
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA7100);
  sub_1DC89D4E0();
  uint64_t v34 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC8A22D0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA7108);
  sub_1DC89D4E0();
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v15);
  sub_1DC8A22D0();
  uint64_t v18 = v17 - v16;
  sub_1DC881A8C((void *)a1, *(void *)(a1 + 24));
  sub_1DCA8D548();
  sub_1DCB89298();
  if (v38) {
    goto LABEL_8;
  }
  uint64_t v39 = a1;
  uint64_t v19 = sub_1DCB88E58();
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20
    || (a1 = *(unsigned __int8 *)(v19 + 32),
        sub_1DC9CFE4C(1, v20, v19, v19 + 32, 0, (2 * v20) | 1),
        uint64_t v22 = v21,
        unint64_t v24 = v23,
        swift_bridgeObjectRelease(),
        v22 != v24 >> 1))
  {
    uint64_t v27 = v18;
    uint64_t v28 = sub_1DCB88B18();
    swift_allocError();
    uint64_t v30 = v29;
    sub_1DC87E988(&qword_1EAA9E130);
    void *v30 = &type metadata for FileServerDiscoveryState;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x1E4FBBA70], v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v13);
    a1 = v39;
LABEL_8:
    sub_1DC8818D0(a1);
    return a1;
  }
  if (a1)
  {
    sub_1DCA8D594();
    sub_1DC971F5C();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v6, v37);
    swift_unknownObjectRelease();
    uint64_t v25 = sub_1DC971F28();
    v26(v25);
    a1 = a1;
  }
  else
  {
    sub_1DCA8D5E0();
    sub_1DC971F5C();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v7);
    swift_unknownObjectRelease();
    uint64_t v32 = sub_1DC971F28();
    v33(v32);
  }
  sub_1DC8818D0(v39);
  return a1;
}

uint64_t sub_1DCA8CE60()
{
  return sub_1DCA8C84C(*v0);
}

uint64_t sub_1DCA8CE68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA8C774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA8CE90(uint64_t a1)
{
  unint64_t v2 = sub_1DCA8D548();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA8CECC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA8D548();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA8CF08(uint64_t a1)
{
  unint64_t v2 = sub_1DCA8D5E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA8CF44(uint64_t a1)
{
  unint64_t v2 = sub_1DCA8D5E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA8CF80(uint64_t a1)
{
  unint64_t v2 = sub_1DCA8D594();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA8CFBC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA8D594();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA8CFF8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DCA8CA98(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1DCA8D028(void *a1)
{
  return sub_1DCA8C878(a1, *v1);
}

void sub_1DCA8D044(void *a1@<X8>)
{
  *a1 = &unk_1F37EF820;
}

id sub_1DCA8D098()
{
  unint64_t v1 = (void *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl + 8);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl + 16);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl + 24);
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (objc_class *)type metadata accessor for SNFileServerInfo();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  uint64_t v12 = &v11[OBJC_IVAR___SNFileServerInfo_impl];
  *(void *)uint64_t v12 = v3;
  *((void *)v12 + 1) = v2;
  *((void *)v12 + 2) = v5;
  *((void *)v12 + 3) = v4;
  *((void *)v12 + 4) = v7;
  *((void *)v12 + 5) = v6;
  *((void *)v12 + 6) = v9;
  *((void *)v12 + 7) = v8;
  v14.receiver = v11;
  v14.super_class = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t sub_1DCA8D184()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNFileServerDiscoveryResult_impl + 64);
}

id SNFileServerDiscoveryResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNFileServerDiscoveryResult.init()()
{
}

id SNFileServerDiscoveryResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNFileServerDiscoveryResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileServerDiscoveryResult()
{
  return self;
}

uint64_t method lookup function for SNFileServerDiscoveryResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNFileServerDiscoveryResult);
}

uint64_t initializeWithCopy for FileServerDiscoveryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FileServerDiscoveryResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for FileServerDiscoveryResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryResult()
{
  return &type metadata for FileServerDiscoveryResult;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryState()
{
  return &type metadata for FileServerDiscoveryState;
}

unint64_t sub_1DCA8D4A4()
{
  unint64_t result = qword_1EAAA70E0;
  if (!qword_1EAAA70E0)
  {
    sub_1DC8863A8(&qword_1EAAA70E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA70E0);
  }
  return result;
}

unint64_t sub_1DCA8D4FC()
{
  unint64_t result = qword_1EAAA70F0;
  if (!qword_1EAAA70F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA70F0);
  }
  return result;
}

unint64_t sub_1DCA8D548()
{
  unint64_t result = qword_1EAAA7110;
  if (!qword_1EAAA7110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7110);
  }
  return result;
}

unint64_t sub_1DCA8D594()
{
  unint64_t result = qword_1EAAA7120;
  if (!qword_1EAAA7120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7120);
  }
  return result;
}

unint64_t sub_1DCA8D5E0()
{
  unint64_t result = qword_1EAAA7128;
  if (!qword_1EAAA7128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7128);
  }
  return result;
}

unsigned char *_s13SoundAnalysis24FileServerDiscoveryStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA8D6F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryState.CodingKeys()
{
  return &type metadata for FileServerDiscoveryState.CodingKeys;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryState.FoundCodingKeys()
{
  return &type metadata for FileServerDiscoveryState.FoundCodingKeys;
}

ValueMetadata *type metadata accessor for FileServerDiscoveryState.LostCodingKeys()
{
  return &type metadata for FileServerDiscoveryState.LostCodingKeys;
}

unint64_t sub_1DCA8D754()
{
  unint64_t result = qword_1EAAA7148;
  if (!qword_1EAAA7148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7148);
  }
  return result;
}

unint64_t sub_1DCA8D7A4()
{
  unint64_t result = qword_1EAAA7150;
  if (!qword_1EAAA7150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7150);
  }
  return result;
}

unint64_t sub_1DCA8D7F4()
{
  unint64_t result = qword_1EAAA7158;
  if (!qword_1EAAA7158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7158);
  }
  return result;
}

unint64_t sub_1DCA8D844()
{
  unint64_t result = qword_1EAAA7160;
  if (!qword_1EAAA7160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7160);
  }
  return result;
}

unint64_t sub_1DCA8D894()
{
  unint64_t result = qword_1EAAA7168;
  if (!qword_1EAAA7168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7168);
  }
  return result;
}

unint64_t sub_1DCA8D8E4()
{
  unint64_t result = qword_1EAAA7170;
  if (!qword_1EAAA7170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7170);
  }
  return result;
}

unint64_t sub_1DCA8D934()
{
  unint64_t result = qword_1EAAA7178;
  if (!qword_1EAAA7178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7178);
  }
  return result;
}

uint64_t sub_1DCA8D980(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCA8D9AC()
{
  sub_1DC8867A8();
  v0[7] = v1;
  v0[8] = v2;
  v0[5] = v3;
  v0[6] = v4;
  v0[3] = v5;
  v0[4] = v6;
  sub_1DC8863A8(&qword_1EAA9DF60);
  v0[9] = sub_1DCB89268();
  v0[10] = sub_1DCB88718();
  sub_1DC88D538();
  v0[11] = v7;
  v0[12] = swift_task_alloc();
  uint64_t v8 = sub_1DCB88718();
  v0[13] = v8;
  sub_1DC89D568(v8);
  v0[14] = v9;
  v0[15] = sub_1DC996EDC();
  v0[16] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1DCA8DAC0()
{
  sub_1DC8BABB4();
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  swift_getFunctionTypeMetadata0();
  sub_1DCB88FA8();
  swift_allocObject();
  uint64_t v6 = sub_1DCB87C78();
  uint64_t v8 = v7;
  v0[17] = v6;
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = v2;
  v9[3] = v5;
  v9[4] = v3;
  *uint64_t v8 = &unk_1EAAA71E0;
  v8[1] = v9;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v2;
  v10[3] = v4;
  v10[4] = v1;
  v8[2] = &unk_1EAAA71F0;
  void v8[3] = v10;
  sub_1DCB87D78();
  uint64_t v11 = swift_task_alloc();
  v0[18] = v11;
  *(void *)(v11 + 16) = v2;
  swift_retain();
  swift_retain();
  swift_task_alloc();
  sub_1DC8BAD7C();
  v0[19] = v12;
  *uint64_t v12 = v13;
  v12[1] = sub_1DCA8DC60;
  uint64_t v14 = v0[16];
  uint64_t v15 = v0[10];
  return sub_1DCA8F680(v14, v6, (uint64_t)sub_1DCA920A4, v11, v15);
}

uint64_t sub_1DCA8DC60()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA8DD60()
{
  sub_1DC902AC4();
  uint64_t v1 = v0[15];
  uint64_t v2 = v0 + 15;
  uint64_t v3 = v0 + 13;
  uint64_t v4 = v0[10];
  uint64_t v5 = sub_1DCA92B60();
  v6(v5);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v4) == 1)
  {
    uint64_t v7 = *(void (**)(void))(v0[14] + 8);
    sub_1DC9A4384();
    v7();
LABEL_5:
    uint64_t v12 = v0[8];
    ((void (*)(void, void))v7)(*v2, *v3);
    sub_1DCA92B54();
    uint64_t v16 = v12;
    goto LABEL_6;
  }
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[9];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 32))(v8, v0[15], v0[10]);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v8, 1, v9) == 1)
  {
    uint64_t v10 = v0[11];
    sub_1DC9A4384();
    v11();
    uint64_t v7 = *(void (**)(void))(v10 + 8);
    uint64_t v3 = v0 + 10;
    uint64_t v2 = v0 + 12;
    goto LABEL_5;
  }
  sub_1DC9F7610(v0[9], (uint64_t)(v0 + 2), v0[3]);
  uint64_t v19 = v0[8];
  uint64_t v20 = v0[3];
  sub_1DC9A4384();
  v21();
  uint64_t v13 = v20;
  uint64_t v14 = 0;
  uint64_t v15 = 1;
  uint64_t v16 = v19;
LABEL_6:
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v13, v14, v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v17();
}

uint64_t static AsyncUtils.sleepUntilCancelled()()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DCB88B98();
  v0[7] = v1;
  sub_1DC89D568(v1);
  v0[8] = v2;
  v0[9] = sub_1DC996EDC();
  v0[10] = swift_task_alloc();
  uint64_t v3 = sub_1DCB88BB8();
  v0[11] = v3;
  sub_1DC89D568(v3);
  v0[12] = v4;
  v0[13] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DCA8E02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  if (sub_1DCB87F08())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BA978();
    sub_1DC996B04();
    return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
  }
  else
  {
    sub_1DCA92B40();
    sub_1DCB892C8();
    sub_1DCB88BA8();
    sub_1DCA92A90();
    sub_1DCA91A1C(&qword_1EAAA7188, MEMORY[0x1E4FBD1A8]);
    sub_1DCA92B20();
    sub_1DCA91A1C(&qword_1EAAA7190, MEMORY[0x1E4FBD178]);
    sub_1DCA92AFC();
    uint64_t v22 = sub_1DCA92A6C();
    v23(v22);
    unint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v12 + 128) = v24;
    *unint64_t v24 = v12;
    v24[1] = sub_1DCA8E1B0;
    sub_1DCA92AC4();
    sub_1DC996B04();
    return MEMORY[0x1F4188178](v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12);
  }
}

uint64_t sub_1DCA8E1B0()
{
  sub_1DC88688C();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v5[14];
  uint64_t v7 = v5[10];
  uint64_t v8 = v5[7];
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  v6(v7, v8);
  if (!v0)
  {
    sub_1DC9A4384();
    v11();
  }
  sub_1DC886854();
  sub_1DC996C58();
  return MEMORY[0x1F4188298](v12, v13, v14);
}

uint64_t sub_1DCA8E308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  uint64_t v13 = *(void **)(v12 + 136);
  sub_1DC9A4384();
  v14();

  if (sub_1DCB87F08())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BA978();
    sub_1DC996B04();
    return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    uint64_t v25 = *(void *)(v12 + 64);
    uint64_t v24 = *(void *)(v12 + 72);
    uint64_t v26 = *(void *)(v12 + 56);
    uint64_t v27 = sub_1DCB892C8();
    uint64_t v29 = v28;
    sub_1DCB88BA8();
    *(void *)(v12 + 40) = v27;
    *(void *)(v12 + 48) = v29;
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    *(unsigned char *)(v12 + 32) = 1;
    sub_1DCA91A1C(&qword_1EAAA7188, MEMORY[0x1E4FBD1A8]);
    sub_1DCB890F8();
    sub_1DCA91A1C(&qword_1EAAA7190, MEMORY[0x1E4FBD178]);
    sub_1DCB88BC8();
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    *(void *)(v12 + 112) = v30;
    *(void *)(v12 + 120) = (v25 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v30(v24, v26);
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v12 + 128) = v31;
    void *v31 = v12;
    v31[1] = sub_1DCA8E1B0;
    sub_1DC996B04();
    return MEMORY[0x1F4188178](v32, v33, v34, v35, v36, v37, v38, v39, v12 + 40, a10, a11, a12);
  }
}

uint64_t sub_1DCA8E524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBD028];
  uint64_t v3 = sub_1DCB87E68();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1DCA8E59C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a2;
  uint64_t v62 = a1;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v4 - 8);
  id v57 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DCB87E98();
  sub_1DC88D538();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v52 = (char *)&v51 - v13;
  uint64_t v14 = sub_1DCB87E68();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v51 - v15;
  sub_1DCB87EC8();
  sub_1DC88D538();
  uint64_t v59 = v18;
  uint64_t v60 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v21 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v23 = v22;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v51 - v28;
  sub_1DCA92B54();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v30, v31, v32, v6);
  uint64_t v63 = a3;
  uint64_t v64 = v29;
  sub_1DCA8E524((uint64_t)v16);
  char v54 = v20;
  sub_1DCB87ED8();
  uint64_t v56 = v23;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v53 = v29;
  uint64_t v58 = v21;
  v33(v27, v29, v21);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v27, 1, v6) == 1)
  {
    sub_1DC88D5C8();
    v50();
    uint64_t result = sub_1DCB88C68();
    __break(1u);
  }
  else
  {
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v35 = v52;
    v34(v52, v27, v6);
    sub_1DCB87E48();
    sub_1DCA92B54();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v36, v37, v38, v39);
    uint64_t v40 = v55;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v55, v35, v6);
    unint64_t v41 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    id v42 = (char *)swift_allocObject();
    *((void *)v42 + 2) = 0;
    *((void *)v42 + 3) = 0;
    *((void *)v42 + 4) = a3;
    *((void *)v42 + 5) = v61;
    v34(&v42[v41], v40, v6);
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1DCA97644();
    uint64_t v44 = v60;
    uint64_t WitnessTable = swift_getWitnessTable();
    AsyncSequence.toAnyAsyncSequence()(v44, WitnessTable);
    sub_1DC92F4D8();
    v46();
    sub_1DC88D5C8();
    v47();
    *uint64_t v62 = v65;
    sub_1DC88D5C8();
    v48();
    return v43;
  }
  return result;
}

uint64_t sub_1DCA8EA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB87E98();
  uint64_t v5 = sub_1DCB88718();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, 0, 1, v4);
}

uint64_t sub_1DCA8EAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[3] = a5;
  void v6[4] = a6;
  v6[2] = a4;
  return MEMORY[0x1F4188298](sub_1DCA8EB10, 0, 0);
}

uint64_t sub_1DCA8EB10()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1DCA8EBF8;
  return MEMORY[0x1F4187F28]();
}

uint64_t sub_1DCA8EBF8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA8ECDC()
{
  sub_1DC8867A8();
  sub_1DCB87E98();
  sub_1DCB87E88();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCA8ED3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  uint64_t v6 = sub_1DCB87E98();
  v5[13] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[14] = v7;
  v5[15] = *(void *)(v7 + 64);
  v5[16] = swift_task_alloc();
  sub_1DC87E988(&qword_1EAAA2180);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCA8EE4C, 0, 0);
}

uint64_t sub_1DCA8EE4C()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t FunctionTypeMetadata0 = swift_getFunctionTypeMetadata0();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DCB87C48();
  uint64_t v38 = v3;
  if (v3 == MEMORY[0x1E01A6D50](v1, FunctionTypeMetadata0))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v25;
    uint64_t v26 = sub_1DC87E988(&qword_1EAA9FA30);
    void *v25 = v0;
    v25[1] = sub_1DCA8F284;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v31 = *(void *)(v0 + 80) + 32;
    uint64_t v30 = *(void *)(v0 + 120) + 7;
    uint64_t v32 = *(void *)(v0 + 112);
    uint64_t v33 = FunctionTypeMetadata0;
    while (1)
    {
      char v4 = sub_1DCB87D18();
      sub_1DCB87C88();
      if ((v4 & 1) == 0) {
        break;
      }
      uint64_t v34 = *(void *)(v0 + 144);
      uint64_t v37 = *(void *)(v0 + 136);
      uint64_t v5 = *(void *)(v0 + 128);
      uint64_t v6 = *(void *)(v0 + 104);
      uint64_t v35 = *(void *)(v0 + 96);
      uint64_t v7 = *(void *)(v0 + 80);
      uint64_t v8 = *(void *)(v0 + 88);
      long long v36 = *(_OWORD *)(v31 + 16 * v3);
      swift_retain();
      swift_bridgeObjectRetain();
      MEMORY[0x1E01A6D60](&v38, v7, FunctionTypeMetadata0);
      swift_bridgeObjectRelease();
      uint64_t v9 = sub_1DCB87E48();
      sub_1DCA92B54();
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v10, v11, v12, v9);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v5, v8, v6);
      unint64_t v13 = (*(unsigned __int8 *)(v32 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v14 = (char *)swift_allocObject();
      *((void *)v14 + 2) = 0;
      *((void *)v14 + 3) = 0;
      *((void *)v14 + 4) = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v14[v13], v5, v6);
      *(_OWORD *)&v14[(v30 + v13) & 0xFFFFFFFFFFFFFFF8] = v36;
      sub_1DCA92660(v34, v37, &qword_1EAAA2180);
      int v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v37, 1, v9);
      swift_retain();
      if (v15 == 1)
      {
        sub_1DCA929F8(*(void *)(v0 + 136), &qword_1EAAA2180);
      }
      else
      {
        sub_1DCB87E38();
        sub_1DC8F0494();
        sub_1DC88D5C8();
        v16();
      }
      if (*((void *)v14 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v17 = sub_1DCB87DE8();
        uint64_t v19 = v18;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v17 = 0;
        uint64_t v19 = 0;
      }
      uint64_t v20 = **(void **)(v0 + 72);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = &unk_1EAAA7240;
      *(void *)(v21 + 24) = v14;
      uint64_t v22 = v19 | v17;
      if (v19 | v17)
      {
        uint64_t v22 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v17;
        *(void *)(v0 + 40) = v19;
      }
      uint64_t v23 = *(void *)(v0 + 144);
      uint64_t v24 = *(void *)(v0 + 80);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v22;
      *(void *)(v0 + 64) = v20;
      swift_task_create();
      swift_release();
      swift_release();
      sub_1DCA929F8(v23, &qword_1EAAA2180);
      uint64_t v3 = v38;
      uint64_t FunctionTypeMetadata0 = v33;
      if (v3 == MEMORY[0x1E01A6D50](v24, v33)) {
        goto LABEL_13;
      }
    }
    uint64_t v27 = sub_1DCB88AD8();
    __break(1u);
  }
  return MEMORY[0x1F4187C40](v27, v28, v26);
}

uint64_t sub_1DCA8F284()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v3();
}

uint64_t sub_1DCA8F3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  id v7[2] = a4;
  _OWORD v7[3] = a7;
  uint64_t v9 = swift_task_alloc();
  v7[4] = v9;
  uint64_t v10 = sub_1DCB87E58();
  v7[5] = v10;
  v7[6] = *(void *)(v10 - 8);
  v7[7] = swift_task_alloc();
  unint64_t v13 = (uint64_t (*)(uint64_t))((char *)a5 + *a5);
  uint64_t v11 = (void *)swift_task_alloc();
  v7[8] = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_1DCA8F518;
  return v13(v9);
}

uint64_t sub_1DCA8F518()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA8F5E0()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DCB87E98();
  sub_1DCB87E78();
  sub_1DCA36D64();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  sub_1DC8BA86C();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1DCA8F680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCA8F6AC()
{
  sub_1DC8BABB4();
  uint64_t v12 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  long long v10 = *(_OWORD *)(v0 + 48);
  uint64_t v2 = sub_1DCA8E59C(&v11, *(void *)(v0 + 40), v1);
  long long v3 = v11;
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = *((void *)&v3 + 1);
  *(_OWORD *)(v0 + 16) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *(void *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v10;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v5;
  uint64_t v6 = type metadata accessor for AnyAsyncSequence();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v5 = v0;
  v5[1] = sub_1DCA8F7E8;
  uint64_t v8 = *(void *)(v0 + 32);
  return MEMORY[0x1F4187E80](v8, &unk_1EAAA7208, v4, v6, WitnessTable);
}

uint64_t sub_1DCA8F7E8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DCA8F8CC()
{
  sub_1DC8867A8();
  sub_1DCB87EE8();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCA8F954()
{
  sub_1DC8867A8();
  swift_task_dealloc();
  return swift_unexpectedError();
}

uint64_t sub_1DCA8F9BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2() & 1;
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v2 + 8);
  return sub_1DCA92224(v4, v2, v3);
}

uint64_t sub_1DCA8FA48(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[3] = a1;
  v4[4] = a4;
  uint64_t v7 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v5 = (void *)swift_task_alloc();
  void v4[5] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1DCA8FB18;
  return v7();
}

uint64_t sub_1DCA8FB18()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 48) = v3;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1DCA8FBE8()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 16) = *(void *)(v0 + 48);
  *(void *)(swift_task_alloc() + 16) = v2;
  sub_1DC87E988(&qword_1EAA9FAA0);
  sub_1DC8863A8(&qword_1EAA9DF60);
  uint64_t v3 = sub_1DCB89268();
  sub_1DC925A5C((void (*)(uint64_t, uint64_t))sub_1DCA92640, v3, v1);

  swift_task_dealloc();
  sub_1DC8BA978();
  sub_1DC8BA86C();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

id sub_1DCA8FCE0@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  sub_1DC8863A8(&qword_1EAA9DF60);
  sub_1DCB89268();
  swift_storeEnumTagMultiPayload();
  return v2;
}

uint64_t sub_1DCA8FD58(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[2] = a1;
  _OWORD v4[3] = a4;
  uint64_t v7 = (void *)swift_task_alloc();
  v4[4] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1DCA8FE14;
  return sub_1DCA82CAC(a1, a2);
}

uint64_t sub_1DCA8FE14()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA8FEDC()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1DC8863A8(&qword_1EAA9DF60);
  uint64_t v2 = sub_1DCB89268();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 0, 1, v2);
  sub_1DC8BA978();
  return v3();
}

BOOL sub_1DCA8FF68(uint64_t a1)
{
  sub_1DC8863A8(&qword_1EAA9DF60);
  uint64_t v2 = sub_1DCB89268();
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v2) != 1;
}

uint64_t sub_1DCA8FFC8()
{
  sub_1DC8867A8();
  v0[5] = v1;
  v0[6] = v2;
  v0[3] = v3;
  v0[4] = v4;
  v0[2] = v5;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA7248);
  sub_1DC89D568(v6);
  v0[7] = v7;
  v0[8] = *(void *)(v8 + 64);
  v0[9] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DCA9006C()
{
  sub_1DC88688C();
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  sub_1DCA92660(v0[3], v1, &qword_1EAAA7248);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  v0[10] = v7;
  sub_1DCA9278C(v1, v7 + v6);
  uint64_t v8 = (void *)swift_allocObject();
  v0[11] = (uint64_t)v8;
  v8[2] = v3;
  void v8[3] = v5;
  v8[4] = v4;
  swift_retain();
  swift_task_alloc();
  sub_1DC8BAD7C();
  v0[12] = (uint64_t)v9;
  *uint64_t v9 = v10;
  v9[1] = sub_1DCA901BC;
  sub_1DC996C58();
  return sub_1DCA8D9AC();
}

uint64_t sub_1DCA901BC()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  *unint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    sub_1DC8BAB84();
    return v10();
  }
}

uint64_t sub_1DCA902D0()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCA90340(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = sub_1DCB88BB8();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  sub_1DC87E988(&qword_1EAAA7248);
  v1[9] = swift_task_alloc();
  uint64_t v3 = sub_1DCB88B98();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCA9048C, 0, 0);
}

uint64_t sub_1DCA9048C()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  sub_1DCA92660(*(void *)(v0 + 40), v1, &qword_1EAAA7248);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v2) == 1)
  {
    sub_1DCA929F8(*(void *)(v0 + 72), &qword_1EAAA7248);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1DCA9064C;
    return static AsyncUtils.sleepUntilCancelled()();
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 32))(*(void *)(v0 + 96), *(void *)(v0 + 72), *(void *)(v0 + 80));
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    sub_1DCB88BA8();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v5;
    uint64_t v6 = sub_1DCA91A1C(&qword_1EAAA7188, MEMORY[0x1E4FBD1A8]);
    *uint64_t v5 = v0;
    v5[1] = sub_1DCA90794;
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v9 = *(void *)(v0 + 48);
    return MEMORY[0x1F4187DE8](v7, v0 + 16, v8, v9, v6);
  }
}

uint64_t sub_1DCA9064C()
{
  sub_1DC886900();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3(0);
}

uint64_t sub_1DCA90794()
{
  sub_1DC886900();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  sub_1DC92F4D8();
  v7();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1DCA908C8()
{
  sub_1DC886900();
  sub_1DCA91A64();
  uint64_t v0 = swift_allocError();
  *uint64_t v1 = 0;
  sub_1DC92F4D8();
  v2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC996F48();
  return v3(v0);
}

uint64_t sub_1DCA90980()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void **)(v0 + 120);
  sub_1DC9A4384();
  v2();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC996F48();
  return v3(0);
}

uint64_t sub_1DCA90A10(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DC8D6930;
  return v6(a1);
}

uint64_t static AsyncUtils.failAfterTimeoutNoCancel<A>(deadline:_:)()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = sub_1DCB88718();
  v0[4] = v3;
  sub_1DC89D568(v3);
  v0[5] = v4;
  v0[6] = swift_task_alloc();
  v0[7] = swift_task_alloc();
  swift_task_alloc();
  sub_1DC8BAD7C();
  v0[8] = v5;
  *uint64_t v5 = v6;
  v5[1] = sub_1DCA90BF4;
  sub_1DC8BA86C();
  return sub_1DCA8FFC8();
}

uint64_t sub_1DCA90BF4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DCA90CD0()
{
  sub_1DC8BABB4();
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = sub_1DCA92B60();
  v5(v4);
  int v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v3);
  uint64_t v7 = *(void (**)(void))(v2 + 8);
  if (v6 == 1)
  {
    sub_1DCA36D64();
    v7();
    sub_1DCA91A64();
    swift_allocError();
    *uint64_t v8 = 1;
    swift_willThrow();
    sub_1DCA36D64();
    v7();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BA978();
  }
  else
  {
    uint64_t v10 = v0[6];
    uint64_t v11 = v0[3];
    uint64_t v12 = v0[2];
    sub_1DCA36D64();
    v7();
    sub_1DC8F0494();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v10, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BAB84();
  }
  return v9();
}

uint64_t sub_1DCA90E34()
{
  sub_1DC8867A8();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t static AsyncUtils.failAfterTimeoutNoCancel<A>(deadline:mutating:_:)()
{
  sub_1DC8867A8();
  v0[5] = v1;
  v0[6] = v2;
  v0[3] = v3;
  v0[4] = v4;
  v0[2] = v5;
  uint64_t v6 = *(void *)(v2 - 8);
  v0[7] = v6;
  v0[8] = *(void *)(v6 + 64);
  v0[9] = sub_1DC996EDC();
  v0[10] = swift_task_alloc();
  v0[11] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DCA90F60()
{
  sub_1DC996B20();
  sub_1DC902AC4();
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v8(v1, v0[3], v4);
  v8(v2, v1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  v0[12] = v10;
  *(void *)(v10 + 16) = v4;
  uint64_t v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
  v0[13] = v11;
  v0[14] = (v5 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v11(v10 + v9, v2, v4);
  uint64_t v12 = (void *)(v10 + ((v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v12 = v7;
  v12[1] = v6;
  swift_retain();
  swift_task_alloc();
  sub_1DC8BAD7C();
  v0[15] = v13;
  *uint64_t v13 = v14;
  v13[1] = sub_1DCA910D0;
  sub_1DC996B04();
  return static AsyncUtils.failAfterTimeoutNoCancel<A>(deadline:_:)();
}

uint64_t sub_1DCA910D0()
{
  sub_1DC886900();
  uint64_t v2 = (void *)*v1;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v4 = v2[7];
    v2[17] = *(void *)(v4 + 8);
    v2[18] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_1DC9A4384();
    v5();
  }
  swift_release();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCA91220()
{
  sub_1DC8BABB4();
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 24);
  (*(void (**)(void, uint64_t))(v0 + 136))(*(void *)(v0 + 88), v3);
  v1(v4, v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v5();
}

uint64_t sub_1DCA912D4()
{
  sub_1DC886900();
  sub_1DC9A4384();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DCA91364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  void v5[3] = a2;
  v5[4] = a3;
  long long v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1DCA9138C, 0, 0);
}

uint64_t sub_1DCA9138C()
{
  sub_1DC8867A8();
  uint64_t v1 = (int *)v0[4];
  sub_1DC88D538();
  v0[7] = v2;
  (*(void (**)(void))(v3 + 16))();
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1DCA91498;
  uint64_t v5 = v0[2];
  return v7(v5);
}

uint64_t sub_1DCA91498()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    sub_1DC8BA978();
    return v10();
  }
}

uint64_t sub_1DCA91590()
{
  sub_1DC8867A8();
  sub_1DC9A4384();
  v0();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DCA915F8()
{
  sub_1DC88688C();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  *(void *)(v1 + 56) = v0;
  uint64_t v12 = sub_1DCB88B98();
  *(void *)(v1 + 64) = v12;
  sub_1DC89D568(v12);
  *(void *)(v1 + 72) = v13;
  *(void *)(v1 + 80) = sub_1DC996EDC();
  *(void *)(v1 + 88) = swift_task_alloc();
  *(void *)(v1 + 40) = v11;
  *(void *)(v1 + 48) = v9;
  *(void *)(v1 + 16) = v7;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = v3 & 1;
  sub_1DC886854();
  sub_1DC996C58();
  return MEMORY[0x1F4188298](v14, v15, v16);
}

uint64_t sub_1DCA916C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  uint64_t v13 = v12[10];
  uint64_t v14 = v12[8];
  uint64_t v15 = v12[9];
  sub_1DCB88BB8();
  sub_1DCA91A1C(&qword_1EAAA7188, MEMORY[0x1E4FBD1A8]);
  sub_1DCB890F8();
  sub_1DCA91A1C(&qword_1EAAA7190, MEMORY[0x1E4FBD178]);
  sub_1DCB88BC8();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v12[12] = v16;
  v12[13] = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v13, v14);
  uint64_t v17 = (void *)swift_task_alloc();
  v12[14] = v17;
  *uint64_t v17 = v12;
  v17[1] = sub_1DCA91844;
  sub_1DC996B04();
  return MEMORY[0x1F4188178](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

uint64_t sub_1DCA91844()
{
  sub_1DC88688C();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  *uint64_t v4 = v3;
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v5[12];
  uint64_t v7 = v5[11];
  uint64_t v8 = v5[8];
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  v6(v7, v8);
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BAB84();
    sub_1DC996C58();
    __asm { BRAA            X1, X16 }
  }
  sub_1DC886854();
  sub_1DC996C58();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DCA919B8()
{
  sub_1DC8867A8();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCA91A1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCA91A64()
{
  unint64_t result = qword_1EAAA71A8;
  if (!qword_1EAAA71A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA71A8);
  }
  return result;
}

uint64_t sub_1DCA91AB0()
{
  sub_1DC8F0494();
  sub_1DC88D5C8();
  v0();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA91B48()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8BA86C();
  return sub_1DCA91364(v3, v4, v5, v6, v7);
}

ValueMetadata *type metadata accessor for AsyncUtils()
{
  return &type metadata for AsyncUtils;
}

unsigned char *storeEnumTagSinglePayload for AsyncUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA91D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AsyncUtils.DomainError()
{
  return &type metadata for AsyncUtils.DomainError;
}

unint64_t sub_1DCA91D70()
{
  unint64_t result = qword_1EAAA71C8;
  if (!qword_1EAAA71C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAAA71C8);
  }
  return result;
}

uint64_t sub_1DCA91DBC()
{
  sub_1DC886900();
  uint64_t v1 = v0;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  unsigned int v4 = (void *)sub_1DC886800(v3);
  *unsigned int v4 = v5;
  v4[1] = sub_1DCA91E8C;
  return v7(v1);
}

uint64_t sub_1DCA91E8C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v3();
}

uint64_t sub_1DCA91F4C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA91F84()
{
  sub_1DC886900();
  sub_1DCA92AB4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DCA92A54();
  return sub_1DCA8FA48(v3, v4, v5, v6);
}

uint64_t sub_1DCA92014()
{
  sub_1DC886900();
  sub_1DCA92AB4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DCA92A54();
  return sub_1DCA8FD58(v3, v4, v5, v6);
}

BOOL sub_1DCA920A4(uint64_t a1)
{
  return sub_1DCA8FF68(a1);
}

uint64_t sub_1DCA920AC()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DCA92AB4();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DCA9215C;
  sub_1DC8BA86C();
  return v6(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1DCA9215C()
{
  sub_1DC8867A8();
  uint64_t v2 = v1;
  sub_1DC886774();
  uint64_t v3 = *v0;
  sub_1DC88678C();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_1DC996F48();
  return v5(v2);
}

uint64_t sub_1DCA92224(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1DCA92238(uint64_t a1)
{
  return sub_1DCA8EA20(a1, *(void *)(v1 + 24));
}

uint64_t sub_1DCA92240()
{
  sub_1DCB87E98();
  sub_1DC88D538();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC92F4D8();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1DCA922F0()
{
  sub_1DC88688C();
  uint64_t v0 = sub_1DCA92B74();
  sub_1DC8E77E0(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC886800(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC8D6930;
  sub_1DCA92AE0();
  sub_1DC996C58();
  return sub_1DCA8EAEC(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1DCA923A4()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8BA86C();
  return sub_1DCA8ED3C(v3, v4, v5, v6, v7);
}

uint64_t sub_1DCA92454()
{
  sub_1DCB87E98();
  sub_1DC88D538();
  swift_unknownObjectRelease();
  sub_1DC92F4D8();
  v0();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA9251C()
{
  sub_1DC8BABB4();
  uint64_t v2 = sub_1DCA92B74();
  sub_1DC89D568(v2);
  uint64_t v5 = *(void *)(v0
                 + ((*(void *)(v4 + 64)
                   + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC886800(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC8D78C0;
  uint64_t v9 = sub_1DCA92AE0();
  return sub_1DCA8F3A0(v9, v10, v11, v12, v13, v5, v1);
}

uint64_t sub_1DCA92608()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1DCA92640@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  return sub_1DCA8FCE0(a1, a2);
}

uint64_t sub_1DCA92660(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1DC87E988(a3);
  sub_1DC8F0494();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1DCA926C0()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA7248);
  sub_1DC89D568(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = sub_1DCB88B98();
  if (!_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0 + v3, 1, v4))
  {
    sub_1DC8F0494();
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  }

  return swift_deallocObject();
}

uint64_t sub_1DCA9278C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA7248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCA927F4()
{
  sub_1DC8867A8();
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA7248);
  sub_1DC8E77E0(v2);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1DCA928A0;
  return sub_1DCA90340(v4);
}

uint64_t sub_1DCA928A0()
{
  sub_1DC8867A8();
  uint64_t v2 = v1;
  sub_1DC886774();
  uint64_t v3 = *v0;
  sub_1DC88678C();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_1DC996F48();
  return v5(v2);
}

uint64_t sub_1DCA92968()
{
  sub_1DC886900();
  sub_1DCA92AB4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D6930;
  uint64_t v3 = sub_1DCA92A54();
  return sub_1DCA90A10(v3, v4);
}

uint64_t sub_1DCA929F8(uint64_t a1, uint64_t *a2)
{
  sub_1DC87E988(a2);
  sub_1DC8F0494();
  sub_1DC88D5C8();
  v3();
  return a1;
}

uint64_t sub_1DCA92A54()
{
  return v0;
}

uint64_t sub_1DCA92A6C()
{
  *(void *)(v1 + 112) = *(void *)(v2 + 8);
  *(void *)(v1 + 120) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  return v0;
}

void sub_1DCA92A90()
{
  *(void *)(v1 + 40) = v0;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 32) = 1;
}

uint64_t sub_1DCA92AC4()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_1DCA92AE0()
{
  return v0;
}

uint64_t sub_1DCA92AFC()
{
  return sub_1DCB88BC8();
}

uint64_t sub_1DCA92B20()
{
  return sub_1DCB890F8();
}

uint64_t sub_1DCA92B60()
{
  return v0;
}

uint64_t sub_1DCA92B74()
{
  return sub_1DCB87E98();
}

void sub_1DCA92B94()
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_defaultManager);
  sub_1DCB869D8();
  uint64_t v2 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  unsigned int v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  if (v3)
  {
    id v4 = objc_msgSend(v0, sel_defaultManager);
    uint64_t v5 = (void *)sub_1DCB86948();
    v9[0] = 0;
    unsigned int v6 = objc_msgSend(v4, sel_removeItemAtURL_error_, v5, v9);

    if (v6)
    {
      id v7 = v9[0];
    }
    else
    {
      id v8 = v9[0];
      sub_1DCB86898();

      swift_willThrow();
    }
  }
}

uint64_t sub_1DCA92CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB868D8();
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = a1;
  v11[1] = a2;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x1E4F276C0], v4);
  sub_1DC91ACCC();
  sub_1DCB869F8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

ValueMetadata *type metadata accessor for StandardFileInterface()
{
  return &type metadata for StandardFileInterface;
}

_UNKNOWN **sub_1DCA92DF4()
{
  return &off_1F37DF210;
}

uint64_t sub_1DCA92E00()
{
  return sub_1DCB86A58();
}

id sub_1DCA92E1C()
{
  uint64_t v1 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC89D970();
  id v5 = objc_msgSend(self, sel_defaultManager);
  sub_1DCB868C8();
  sub_1DCB869D8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  uint64_t v6 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  return v7;
}

uint64_t sub_1DCA92F30()
{
  return sub_1DCA92E00();
}

id sub_1DCA92F48@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC89D970();
  sub_1DCB86998();
  id v9 = objc_msgSend(self, sel_defaultManager);
  uint64_t v10 = (void *)sub_1DCB86948();
  v15[0] = 0;
  unsigned __int8 v11 = objc_msgSend(v9, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v10, a1 & 1, 0, v15);

  id v12 = v15[0];
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a2, v2, v5);
    return v12;
  }
  else
  {
    id v14 = v15[0];
    sub_1DCB86898();

    swift_willThrow();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
  }
}

uint64_t sub_1DCA930D0()
{
  uint64_t v0 = sub_1DCB86FE8();
  sub_1DCA0E188(v0, qword_1EAAFF810);
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF810);
  return sub_1DCB86FD8();
}

id sub_1DCA9313C(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = &v3[OBJC_IVAR___SNFeaturePrint_impl];
  *(void *)uint64_t v5 = *(void *)a1;
  *((void *)v5 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v5 + 4) = *(void *)(a1 + 32);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(a1 + 40);
  *((void *)v5 + 7) = v4;
  v7.receiver = v3;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

double SNFeaturePrint.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNFeaturePrint_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1DCA931F4(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for ShapedArray();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB892A8();
  sub_1DCA7B760(a2);
  if (!v2)
  {
    sub_1DC89D39C((uint64_t)v10, v11);
    sub_1DCA95C10((unint64_t *)&unk_1EAAA72F0);
    sub_1DCB89058();
    sub_1DCA7C6B4(v8);
  }
  return sub_1DC8818D0((uint64_t)v10);
}

uint64_t sub_1DCA93324(void *a1)
{
  uint64_t v2 = type metadata accessor for ShapedArray();
  MEMORY[0x1F4188790](v2);
  sub_1DC8A22D0();
  uint64_t v5 = v4 - v3;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB89288();
  sub_1DC881A8C(v8, v8[3]);
  sub_1DCA95C10(&qword_1EAAA72E8);
  sub_1DCB89038();
  uint64_t v6 = sub_1DCA7BCDC(v5);
  sub_1DCA7C6B4(v5);
  sub_1DC8818D0((uint64_t)v8);
  sub_1DC8818D0((uint64_t)a1);
  return v6;
}

uint64_t sub_1DCA93488()
{
  return sub_1DCB886A8() & 1;
}

uint64_t sub_1DCA934D8(void *a1)
{
  sub_1DCB891A8();
  id v2 = a1;
  sub_1DCB886B8();

  return sub_1DCB891F8();
}

void sub_1DCA93528()
{
  uint64_t v1 = *(void **)(v0 + 56);
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891B8();
  id v2 = v1;
  sub_1DCB886B8();
}

uint64_t sub_1DCA935FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[6];
  uint64_t v11 = a2[5];
  v12[0] = v2;
  v12[1] = a1[1];
  long long v13 = *((_OWORD *)a1 + 1);
  uint64_t v14 = a1[4];
  uint64_t v15 = v3;
  v8[0] = v5;
  v8[1] = a2[1];
  long long v9 = *((_OWORD *)a2 + 1);
  uint64_t v10 = a2[4];
  if (!static TimeRange.== infix(_:_:)((uint64_t)v12, (uint64_t)v8) || v4 != v6) {
    return 0;
  }
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7B0);
  return sub_1DCB886A8() & 1;
}

uint64_t sub_1DCA936CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB97C00 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5665727574616566 && a2 == 0xED0000726F746365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DCA93848(char a1)
{
  if (!a1) {
    return 0x676E6152656D6974;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x5665727574616566;
}

uint64_t sub_1DCA938B4(void *a1)
{
  sub_1DC87E988(&qword_1EAAA72B0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC8A22D0();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA958D8();
  sub_1DCB892B8();
  sub_1DC89C64C();
  sub_1DCA95CA4();
  sub_1DCB88F18();
  if (!v6)
  {
    sub_1DC87E988(&qword_1EAAA6660);
    sub_1DCA67BF8((unint64_t *)&unk_1EAAA6670);
    sub_1DCA95CA4();
    sub_1DCB88F18();
    sub_1DCA95970();
    sub_1DCA95CA4();
    sub_1DCB88F18();
  }
  uint64_t v3 = sub_1DC981E74();
  return v4(v3);
}

uint64_t sub_1DCA93AB8()
{
  uint64_t v3 = *(void **)(v0 + 56);
  sub_1DCB891A8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891B8();
  id v1 = v3;
  sub_1DCB886B8();

  return sub_1DCB891F8();
}

uint64_t sub_1DCA93BB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA7290);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA958D8();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DC89C600();
    sub_1DCA95C54();
    sub_1DC87E988(&qword_1EAAA6660);
    sub_1DCA67BF8(&qword_1EAAA72A0);
    sub_1DCB88DF8();
    sub_1DCA95924();
    sub_1DCA95C54();
    uint64_t v7 = sub_1DC8D5364();
    v8(v7);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v13;
    a2[5] = v14;
    a2[6] = v9;
    a2[7] = v9;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCA93DBC()
{
  return sub_1DCA934D8(*v0);
}

uint64_t sub_1DCA93DC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCA93324(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DCA93DF0(void *a1)
{
  return sub_1DCA931F4(a1, *v1);
}

uint64_t sub_1DCA93E0C()
{
  return sub_1DCA93488();
}

uint64_t sub_1DCA93E18()
{
  return sub_1DCA93848(*v0);
}

uint64_t sub_1DCA93E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA936CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA93E48(uint64_t a1)
{
  unint64_t v2 = sub_1DCA958D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA93E84(uint64_t a1)
{
  unint64_t v2 = sub_1DCA958D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA93EC8()
{
  uint64_t v3 = *(void **)(v0 + 56);
  sub_1DCB891A8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891B8();
  id v1 = v3;
  sub_1DCB886B8();

  return sub_1DCB891F8();
}

uint64_t sub_1DCA93FBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCA93BB0(a1, a2);
}

uint64_t sub_1DCA93FD4(void *a1)
{
  return sub_1DCA938B4(a1);
}

double SNFeaturePrint.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNFeaturePrint_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNFeaturePrint_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double (*SNFeaturePrint.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNFeaturePrint.timeRange.getter((uint64_t)v3);
  return sub_1DCA9413C;
}

double sub_1DCA9413C(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNFeaturePrint_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

uint64_t SNFeaturePrint.featurePrintType.getter()
{
  return *(void *)(v0 + OBJC_IVAR___SNFeaturePrint_impl + 48);
}

uint64_t SNFeaturePrint.featurePrintType.setter(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 48) = result;
  return result;
}

void *(*SNFeaturePrint.featurePrintType.modify(void *a1))(void *result)
{
  uint64_t v2 = OBJC_IVAR___SNFeaturePrint_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 48);
  return sub_1DCA94224;
}

void *sub_1DCA94224(void *result)
{
  *(void *)(result[1] + result[2] + 48) = *result;
  return result;
}

id SNFeaturePrint.featureVector.getter()
{
  return *(id *)(v0 + OBJC_IVAR___SNFeaturePrint_impl + 56);
}

void SNFeaturePrint.featureVector.setter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 56);
  *(void *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 56) = a1;
}

void sub_1DCA942F4(id *a1)
{
}

uint64_t SNFeaturePrint.featureVector.modify(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 56);
  *a1 = v2;
  a1[1] = v1;
  id v3 = v2;
  return sub_1DC981E74();
}

void sub_1DCA94374(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    SNFeaturePrint.featureVector.setter((uint64_t)v3);
  }
  else
  {
    SNFeaturePrint.featureVector.setter((uint64_t)v2);
  }
}

id sub_1DCA943DC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1DC87E988(&qword_1EAA9C720);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DCBB8670;
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  id v3 = v0;
  *(void *)(v2 + 32) = sub_1DCB88688();
  uint64_t v14 = v2;
  sub_1DCB87C68();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  id v5 = sub_1DCB25FCC(v2, 65568);
  uint64_t v6 = *(void *)(MEMORY[0x1E4F1FA20] + 8);
  uint64_t v7 = *(void *)(MEMORY[0x1E4F1FA20] + 16);
  uint64_t v8 = *(void *)(MEMORY[0x1E4F1FA20] + 24);
  uint64_t v9 = *(void *)(MEMORY[0x1E4F1FA20] + 32);
  uint64_t v10 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v11 = &v3[OBJC_IVAR___SNFeaturePrint_impl];
  *(void *)uint64_t v11 = *MEMORY[0x1E4F1FA20];
  *((void *)v11 + 1) = v6;
  *((void *)v11 + 2) = v7;
  *((void *)v11 + 3) = v8;
  *((void *)v11 + 4) = v9;
  *((void *)v11 + 5) = v10;
  *((void *)v11 + 6) = 0;
  *((void *)v11 + 7) = v5;

  v13.receiver = v3;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

id SNFeaturePrint.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  v8[0] = *(void *)(v1 + OBJC_IVAR___SNFeaturePrint_impl);
  sub_1DC8AA540(v1 + OBJC_IVAR___SNFeaturePrint_impl);
  long long v9 = *(_OWORD *)(v4 + 40);
  uint64_t v10 = v5;
  id v6 = v5;
  id result = sub_1DCA9313C((uint64_t)v8);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNFeaturePrint.hash.getter()
{
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___SNFeaturePrint_impl + 56);
  sub_1DCB891A8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891B8();
  id v1 = v4;
  sub_1DCB886B8();
  uint64_t v2 = sub_1DCB891F8();

  return v2;
}

uint64_t SNFeaturePrint.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v24);
  if (v25)
  {
    sub_1DC87E9CC(&v24, v23);
    sub_1DC87E9DC((uint64_t)v23, (uint64_t)v19);
    if (swift_dynamicCast())
    {
      id v3 = (void *)v18[0];
      uint64_t v4 = v1 + OBJC_IVAR___SNFeaturePrint_impl;
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNFeaturePrint_impl);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 40);
      uint64_t v7 = *(void *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 48);
      uint64_t v8 = *(void **)(v4 + 56);
      uint64_t v9 = v18[0] + OBJC_IVAR___SNFeaturePrint_impl;
      uint64_t v10 = *(void *)(v18[0] + OBJC_IVAR___SNFeaturePrint_impl);
      uint64_t v11 = *(void *)(v18[0] + OBJC_IVAR___SNFeaturePrint_impl + 48);
      uint64_t v12 = *(void **)(v18[0] + OBJC_IVAR___SNFeaturePrint_impl + 56);
      v19[0] = v5;
      v19[1] = *(void *)(v4 + 8);
      long long v20 = *(_OWORD *)(v4 + 16);
      uint64_t v21 = *(void *)(v4 + 32);
      uint64_t v22 = v6;
      v18[0] = v10;
      sub_1DC8AA540(v9);
      v18[5] = v13;
      if (static TimeRange.== infix(_:_:)((uint64_t)v19, (uint64_t)v18) && v7 == v11)
      {
        sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7B0);
        id v14 = v8;
        id v15 = v12;
        char v16 = sub_1DCB886A8();

LABEL_9:
        sub_1DC8818D0((uint64_t)v23);
        return v16 & 1;
      }
    }
    char v16 = 0;
    goto LABEL_9;
  }
  char v16 = 0;
  return v16 & 1;
}

id SNFeaturePrint.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNFeaturePrint.init(coder:)(a1);
}

id SNFeaturePrint.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87E0BC();
  swift_getObjectType();

  id v4 = (id)v7[7];
  id v5 = sub_1DCA9313C((uint64_t)v7);

  swift_deallocPartialClassInstance();
  return v5;
}

Swift::Void __swiftcall SNFeaturePrint.encode(with:)(NSCoder with)
{
  long long v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 16);
  v5[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl);
  v5[1] = v3;
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 48);
  long long v5[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNFeaturePrint_impl + 32);
  void v5[3] = v4;
  sub_1DC881F4C((uint64_t)v5);
  sub_1DC87C3F4((uint64_t)v5, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
  sub_1DCA94B74((uint64_t)v5);
}

uint64_t sub_1DCA94B74(uint64_t a1)
{
  return a1;
}

uint64_t static SNFeaturePrint.supportsSecureCoding.getter()
{
  return 1;
}

id sub_1DCA94C18(uint64_t a1, void *a2)
{
  long long v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = type metadata accessor for ShapedArray();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = v3;
  sub_1DCA7B760(a2);
  uint64_t v12 = sub_1DCA7BCDC(v10);
  sub_1DCA7C6B4(v10);
  uint64_t v13 = MEMORY[0x1E4F1FA20];
  uint64_t v14 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  id v15 = &v11[OBJC_IVAR___SNFeaturePrint_impl];
  *(void *)id v15 = *MEMORY[0x1E4F1FA20];
  *((void *)v15 + 1) = *(void *)(v13 + 8);
  *((_OWORD *)v15 + 1) = *(_OWORD *)(v13 + 16);
  *((void *)v15 + 4) = *(void *)(v13 + 32);
  *((void *)v15 + 5) = v14;
  *((void *)v15 + 6) = a1;
  *((void *)v15 + 7) = v12;

  v18.receiver = v11;
  v18.super_class = ObjectType;
  id v16 = objc_msgSendSuper2(&v18, sel_init);

  return v16;
}

id sub_1DCA94DA0(const float *a1, const float *a2, vDSP_Length a3)
{
  sub_1DC987974(a1, a2, a3);
  sub_1DCA95CD4();
  float v4 = sub_1DCA95CB4();
  float v5 = v3 / sub_1DCA95C7C(v4);
  id v6 = objc_allocWithZone(NSNumber);
  *(float *)&double v7 = v5;
  return objc_msgSend(v6, sel_initWithFloat_, v7);
}

void sub_1DCA94E54(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_shape);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  sub_1DCB87C38();

  id v5 = objc_msgSend(a2, sel_shape);
  sub_1DCB87C38();

  int v17 = sub_1DC8DD0D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(a1, sel_dataType);
  BOOL v7 = v6 != objc_msgSend(a2, sel_dataType) || objc_msgSend(a1, sel_dataType) != (id)65568;
  type metadata accessor for SNUtils();
  id v8 = objc_msgSend(a1, sel_shape);
  unint64_t v9 = sub_1DCB87C38();

  int v10 = sub_1DCB21D88(v9);
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(a1, sel_shape);
  unint64_t v12 = sub_1DCB87C38();

  uint64_t v13 = (void *)sub_1DCB88688();
  char v14 = sub_1DC983594((uint64_t)v13, v12);
  swift_bridgeObjectRelease();

  if ((sub_1DCA7AEE4(a1) & 1) != 0
    && !((v17 ^ 1 | sub_1DCA7AEE4(a2) ^ 1) & 1 | (v10 > 1) | v14 & 1 | v7))
  {
    id v15 = a1;
    sub_1DC987974((const float *)objc_msgSend(v15, sel_dataPointer), (const float *)objc_msgSend(a2, sel_dataPointer), (vDSP_Length)objc_msgSend(v15, sel_count));
    sub_1DCA95CD4();
    float v16 = sub_1DCA95CB4();
    sub_1DCA95C7C(v16);
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000022, 0x80000001DCB98C40);
    swift_willThrow();
  }
}

void sub_1DCA95114(void *a1, void *a2)
{
  sub_1DCA94E54(a1, a2);
  if (!v2)
  {
    int v4 = v3;
    id v5 = objc_allocWithZone(NSNumber);
    LODWORD(v6) = v4;
    objc_msgSend(v5, sel_initWithFloat_, v6);
  }
}

void SNFeaturePrint.description.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_1DCB88A98();
  v25.receiver = v0;
  v25.super_class = ObjectType;
  uint64_t v2 = SNDetectorIdentifierVGGishDoorKnock;
  id v3 = objc_msgSendSuper2(&v25, sel_description);
  uint64_t v4 = sub_1DCB87938();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();

  uint64_t v26 = v4;
  uint64_t v27 = v6;
  sub_1DCB87A18();
  BOOL v7 = (id *)&v0[OBJC_IVAR___SNFeaturePrint_impl];
  uint64_t v28 = *(void *)&v0[OBJC_IVAR___SNFeaturePrint_impl + 48];
  sub_1DCB88F98();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  id v8 = objc_msgSend(v7[7], sel_shape);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  unint64_t v9 = sub_1DCB87C38();

  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_14:
    MEMORY[0x1E01A6C50](v12, MEMORY[0x1E4FBB550]);
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    SNFeaturePrint.timeRange.getter((uint64_t)&v28);
    uint64_t v17 = v28;
    uint64_t v18 = v30;
    uint64_t v19 = v31;
    uint64_t v20 = v33;
    uint64_t v21 = self;
    v24[0] = v17;
    v24[1] = v29;
    void v24[2] = v18;
    uint64_t v24[3] = v19;
    v24[4] = v32;
    v24[5] = v20;
    id v22 = objc_msgSend(v21, sel_valueWithCMTimeRange_, v24);
    id v23 = [v22 (SEL)v2[492]];
    sub_1DCB87938();

    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1DCB88CC8();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1DC897E1C();
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v11 = 0;
    uint64_t v12 = v28;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1E01A7AE0](v11, v9);
      }
      else {
        id v13 = *(id *)(v9 + 8 * v11 + 32);
      }
      char v14 = v13;
      id v15 = objc_msgSend(v13, sel_integerValue);

      uint64_t v28 = v12;
      unint64_t v16 = *(void *)(v12 + 16);
      if (v16 >= *(void *)(v12 + 24) >> 1)
      {
        sub_1DC897E1C();
        uint64_t v12 = v28;
      }
      ++v11;
      *(void *)(v12 + 16) = v16 + 1;
      *(void *)(v12 + 8 * v16 + 32) = v15;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    uint64_t v2 = SNDetectorIdentifierVGGishDoorKnock;
    goto LABEL_14;
  }
  __break(1u);
}

id SNFeaturePrint.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DCA9564C@<D0>(uint64_t a1@<X8>)
{
  return SNFeaturePrint.timeRange.getter(a1);
}

double sub_1DCA95670(uint64_t a1)
{
  return SNFeaturePrint.timeRange.setter(a1);
}

uint64_t sub_1DCA95694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SNFeaturePrint.featurePrintType.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1DCA956C0(uint64_t *a1)
{
  return SNFeaturePrint.featurePrintType.setter(*a1);
}

id sub_1DCA956E8@<X0>(void *a1@<X8>)
{
  id result = SNFeaturePrint.featureVector.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for SNFeaturePrint()
{
  return self;
}

uint64_t method lookup function for SNFeaturePrint(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNFeaturePrint);
}

void destroy for FeaturePrint(uint64_t a1)
{
}

uint64_t initializeWithCopy for FeaturePrint(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for FeaturePrint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v3 = *(void **)(a2 + 56);
  uint64_t v4 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for FeaturePrint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v3 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  return a1;
}

ValueMetadata *type metadata accessor for FeaturePrint()
{
  return &type metadata for FeaturePrint;
}

unint64_t sub_1DCA9588C()
{
  unint64_t result = qword_1EAAA7288;
  if (!qword_1EAAA7288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7288);
  }
  return result;
}

unint64_t sub_1DCA958D8()
{
  unint64_t result = qword_1EAAA7298;
  if (!qword_1EAAA7298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7298);
  }
  return result;
}

unint64_t sub_1DCA95924()
{
  unint64_t result = qword_1EAAA72A8;
  if (!qword_1EAAA72A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA72A8);
  }
  return result;
}

unint64_t sub_1DCA95970()
{
  unint64_t result = qword_1EAAA72B8;
  if (!qword_1EAAA72B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA72B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeaturePrint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA95A88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeaturePrint.CodingKeys()
{
  return &type metadata for FeaturePrint.CodingKeys;
}

ValueMetadata *type metadata accessor for CodableMultiArray()
{
  return &type metadata for CodableMultiArray;
}

unint64_t sub_1DCA95AD4()
{
  unint64_t result = qword_1EAAA72C8;
  if (!qword_1EAAA72C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA72C8);
  }
  return result;
}

unint64_t sub_1DCA95B24()
{
  unint64_t result = qword_1EAAA72D0;
  if (!qword_1EAAA72D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA72D0);
  }
  return result;
}

unint64_t sub_1DCA95B74()
{
  unint64_t result = qword_1EAAA72D8;
  if (!qword_1EAAA72D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA72D8);
  }
  return result;
}

unint64_t sub_1DCA95BC4()
{
  unint64_t result = qword_1EAAA72E0;
  if (!qword_1EAAA72E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA72E0);
  }
  return result;
}

uint64_t sub_1DCA95C10(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ShapedArray();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCA95C54()
{
  return sub_1DCB88DF8();
}

float sub_1DCA95C7C(float a1)
{
  return sqrt(v1 * a1);
}

uint64_t sub_1DCA95C94()
{
  return v0;
}

uint64_t sub_1DCA95CA4()
{
  return v0 - 128;
}

float sub_1DCA95CB4()
{
  return sub_1DC987974(v1, v1, v0);
}

float sub_1DCA95CD4()
{
  return sub_1DC987974(v1, v1, v0);
}

uint64_t sub_1DCA95CF4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = result + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DC87E9DC(v2, (uint64_t)v14);
      sub_1DC87E9DC((uint64_t)v14, (uint64_t)v13);
      sub_1DC87E988(&qword_1EAAA7300);
      uint64_t v3 = swift_dynamicCast();
      if ((v3 & 1) == 0) {
        break;
      }
      sub_1DCA95FE4((uint64_t)v11);
      sub_1DC8818D0((uint64_t)v14);
      v2 += 32;
      if (!--v1) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_1DCA96044(v3, v4, v5, v6, v7, v8, v9, v10, v11[0], v11[1], v12);
    sub_1DC8818D0((uint64_t)v14);
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000028, 0x80000001DCB98C70);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA95E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1DCB88B68();
    uint64_t v12 = a1 + 32;
    while (1)
    {
      sub_1DC87E9DC(v12, (uint64_t)v30);
      sub_1DC87E9DC((uint64_t)v30, (uint64_t)v26);
      sub_1DC87E988(&qword_1EAAA7300);
      uint64_t v13 = swift_dynamicCast();
      if (!v13)
      {
        sub_1DCA96044(v13, v14, v15, v16, v17, v18, v19, v20, *(long long *)v23, *(long long *)&v23[16], v24);
        sub_1DC8DA330();
        swift_allocError();
        swift_willThrow();
        goto LABEL_10;
      }
      sub_1DC8BA1CC((long long *)v23, (uint64_t)v27);
      sub_1DC881A8C(v27, v28);
      sub_1DCACEA94((uint64_t *)v23);
      if (v8) {
        break;
      }
      sub_1DC881A8C(v23, *(uint64_t *)&v23[24]);
      sub_1DCB89008();
      sub_1DC8818D0((uint64_t)v23);
      sub_1DC8818D0((uint64_t)v27);
      sub_1DC8818D0((uint64_t)v30);
      sub_1DCB88B48();
      sub_1DCB88B78();
      sub_1DCB88B88();
      sub_1DCB88B58();
      v12 += 32;
      if (!--v9)
      {
        uint64_t v10 = v31;
        goto LABEL_7;
      }
    }
    sub_1DC8818D0((uint64_t)v27);
LABEL_10:
    sub_1DC8818D0((uint64_t)v30);
    swift_release();
  }
  else
  {
LABEL_7:
    sub_1DCAE8674(v10, a2, a3, a4, a5, a6, a7, a8, *(uint64_t *)v23, *(long long *)&v23[8], *(uint64_t *)&v23[24], v24, v25, v26[0], v26[1], v26[2], v26[3], v27[0], v27[1],
      v27[2],
      v28,
      v29,
      v30[0],
      v30[1],
      v30[2]);
    uint64_t v9 = v21;
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_1DCA95FE4(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA7308);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCA96044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11)
{
  a11 = 0;
  a9 = 0u;
  a10 = 0u;
  return sub_1DCA95FE4((uint64_t)&a9);
}

uint64_t sub_1DCA96064(const void *a1)
{
  *(void *)&uint64_t __dst[24] = &unk_1F37E26A8;
  *(void *)&__dst[32] = &off_1F37E2608;
  uint64_t v4 = swift_allocObject();
  *(void *)__dst = v4;
  uint64_t v5 = *(void *)(v1 + 32);
  long long v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v4 + 32) = v6;
  *(void *)(v4 + 48) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  char v7 = sub_1DCA96424(__dst, 0xD00000000000003CLL, 0x80000001DCB98CA0);
  if (v2) {
    return sub_1DC8818D0((uint64_t)__dst);
  }
  char v9 = v7;
  sub_1DC8818D0((uint64_t)__dst);
  memcpy(__dst, a1, sizeof(__dst));
  type metadata accessor for SNSystemAudioAnalyzerLocal();
  swift_allocObject();
  sub_1DC882264((uint64_t)a1);
  return sub_1DCA37020(v9 & 1, (long long *)__dst);
}

uint64_t sub_1DCA96178(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DCA96684(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  sub_1DC88D604();
  return sub_1DCA961A8(v8);
}

uint64_t sub_1DCA961A8(const void *a1)
{
  uint64_t v3 = swift_allocObject();
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = *(void *)(v1 + 32);
  memcpy(__dst, a1, sizeof(__dst));
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1DC882264((uint64_t)a1);
  uint64_t v5 = sub_1DCAC3660();
  sub_1DC88CABC((uint64_t)a1);
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_1DCA962BC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DCA96684(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  sub_1DC88D604();
  return sub_1DCA962EC(v8);
}

uint64_t sub_1DCA962EC(const void *a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v4;
  void v8[3] = v3;
  void v8[4] = v6;
  void v8[5] = v5;
  v8[6] = v7;
  memcpy(__dst, a1, sizeof(__dst));
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  sub_1DC882264((uint64_t)a1);
  uint64_t v9 = sub_1DCAC3660();
  sub_1DC88CABC((uint64_t)a1);
  swift_release();
  swift_release();
  swift_release_n();
  swift_release();
  return v9;
}

uint64_t sub_1DCA96424(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1DC881A8C(a1, v6);
  uint64_t result = (uint64_t)(*(void *(**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(&v9, a2, a3, v6, v7);
  if (!v3)
  {
    if (v10)
    {
      sub_1DC87E9CC(&v9, v11);
      sub_1DC87E9DC((uint64_t)v11, (uint64_t)&v9);
      if (swift_dynamicCast())
      {
        sub_1DC8818D0((uint64_t)v11);
        return v12;
      }
      else
      {
        sub_1DCA96604();
        swift_allocError();
        swift_willThrow();
        return sub_1DC8818D0((uint64_t)v11);
      }
    }
    else
    {
      sub_1DC881978((uint64_t)&v9);
      return 2;
    }
  }
  return result;
}

uint64_t sub_1DCA9654C(const void *a1)
{
  return sub_1DCA96064(a1);
}

uint64_t sub_1DCA96570@<X0>(void *__src@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  memcpy(__dst, __src, 0x41uLL);
  long long v6 = a2[1];
  long long v9 = *a2;
  long long v10 = v6;
  uint64_t v11 = *((void *)a2 + 4);
  uint64_t result = sub_1DCA9654C(__dst);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1DCA965E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCA96570(a1, (long long *)(v2 + 16), a2);
}

unint64_t sub_1DCA96604()
{
  unint64_t result = qword_1EAAA7310;
  if (!qword_1EAAA7310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7310);
  }
  return result;
}

uint64_t sub_1DCA96654@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCA965E4(a1, a2);
}

uint64_t sub_1DCA9666C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC91B564(a1, a2);
}

void *sub_1DCA96684(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x41uLL);
}

id sub_1DCA966A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(void **__return_ptr, uint64_t, uint64_t);
  void *v7;
  void *v8;
  id v9;
  void *v11;
  void *v12;

  uint64_t v5 = *(void *)(a4 + 8);
  long long v6 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(v5 + 16);
  v6(&v12, a3, v5);
  uint64_t v7 = v12;
  v6(&v11, a3, v5);
  uint64_t v8 = v11;
  long long v9 = objc_msgSend(v7, sel_isEqual_, v11);

  return v9;
}

uint64_t sub_1DCA96758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(id *__return_ptr, uint64_t))(*(void *)(a3 + 8) + 16))(&v5, a2);
  id v3 = v5;
  objc_msgSend(v5, sel_hash);

  return sub_1DCB891B8();
}

uint64_t sub_1DCA967D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = MEMORY[0x1E01A5AE0](a3);
  unint64_t v8 = v4;
  sub_1DCA97048((uint64_t (*)(uint64_t, uint64_t))sub_1DCA974A0);
  uint64_t result = sub_1DC881920(v7, v8);
  if (!v3) {
    return v6;
  }
  return result;
}

uint64_t sub_1DCA96864(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v22 = MEMORY[0x1E01A5AE0](a5);
  unint64_t v23 = v10;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (a3 >> 32 < (int)a3)
      {
        __break(1u);
        JUMPOUT(0x1DCA96A24);
      }
      swift_retain();
      sub_1DCA97638();
      a2 = a4 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1DCA973AC((int)a3, a3 >> 32, v16);
      sub_1DC881920(a3, a4);
      if (v5) {
        goto LABEL_10;
      }
      goto LABEL_7;
    case 2uLL:
      a2 = a4 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)(a3 + 16);
      uint64_t v18 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain();
      sub_1DCA97638();
      sub_1DCA973AC(v17, v18, v19);
      swift_release();
      swift_release();
      if (!v6) {
        goto LABEL_7;
      }
      goto LABEL_10;
    case 3uLL:
      sub_1DCA97638();
      uint64_t v15 = 0;
      uint64_t v11 = 0;
      uint64_t v14 = 0;
      goto LABEL_9;
    default:
      sub_1DCA97638();
      uint64_t v15 = a3;
LABEL_9:
      sub_1DC9E11C8(v15, v11, v12, v13, v14);
      if (v5)
      {
LABEL_10:
        sub_1DC881920(v22, v23);
      }
      else
      {
LABEL_7:
        a2 = v21;
        sub_1DC881920(v22, v23);
      }
      return a2;
  }
}

uint64_t sub_1DCA96A34(uint64_t a1, uint64_t a2, void *a3, unsigned int a4)
{
  v9[1] = *MEMORY[0x1E4F143B8];
  v9[0] = a4;
  uint64_t v6 = a3[3];
  uint64_t v7 = a3[4];
  sub_1DC881A8C(a3, v6);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t))(v7 + 8))(1, v9, 1, a1, a2, 0, 0, 0, 0, v6, v7);
}

unint64_t sub_1DCA96B00@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = a2[3];
  uint64_t v13 = a2[4];
  sub_1DC881A8C(a2, v12);
  unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(2, a1, 1, 0, 0, 0, 0, a3, a4, v12, v13);
  id v15 = v6;
  if (!v6)
  {
    int64_t v16 = HIDWORD(result);
    if (a3)
    {
      if (a4 - a3 >= v16)
      {
        uint64_t v17 = a3 + v16;
LABEL_6:
        *a6 = a3;
        a6[1] = v17;
        return result;
      }
    }
    else
    {
      uint64_t v17 = 0;
      if (!v16) {
        goto LABEL_6;
      }
    }
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    id v15 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000028, 0x80000001DCB98D10);
    swift_bridgeObjectRelease();
    unint64_t result = swift_willThrow();
  }
  *a5 = v15;
  return result;
}

unint64_t sub_1DCA96CF4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, void *a8@<X8>)
{
  uint64_t v16 = a2[3];
  uint64_t v15 = a2[4];
  sub_1DC881A8C(a2, v16);
  unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(3, a1, 1, a3, a4, 0, 0, a5, a6, v16, v15);
  id v18 = v8;
  if (!v8)
  {
    int64_t v19 = HIDWORD(result);
    if (a5)
    {
      if (a6 - a5 >= v19)
      {
        uint64_t v20 = a5 + v19;
LABEL_6:
        *a8 = a5;
        a8[1] = v20;
        return result;
      }
    }
    else
    {
      uint64_t v20 = 0;
      if (!v19) {
        goto LABEL_6;
      }
    }
    sub_1DCB88A98();
    sub_1DCB87A18();
    type metadata accessor for SNError();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    id v18 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    unint64_t result = swift_willThrow();
  }
  *a7 = v18;
  return result;
}

uint64_t sub_1DCA96F08()
{
  return sub_1DCA97048((uint64_t (*)(uint64_t, uint64_t))sub_1DCA97454);
}

uint64_t sub_1DCA96F58()
{
  return sub_1DCA96F08();
}

uint64_t sub_1DCA96F78@<X0>(unsigned int a1@<W3>, uint64_t *a2@<X8>)
{
  uint64_t result = (uint64_t)sub_1DCA83410(a1, (void *(*)(void *__return_ptr, uint64_t *, uint64_t *))sub_1DCA97478);
  if (!v2)
  {
    uint64_t result = sub_1DC9E1140(result, v5);
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1DCA96FE0@<X0>(unsigned int a1@<W3>, uint64_t *a2@<X8>)
{
  uint64_t result = (uint64_t)sub_1DCA83410(a1, (void *(*)(void *__return_ptr, uint64_t *, uint64_t *))sub_1DCA974C0);
  if (!v2)
  {
    uint64_t result = sub_1DC9E1140(result, v5);
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1DCA97048(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *v1;
  unint64_t v2 = v1[1];
  unint64_t v4 = v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v8 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_1DCBC1AB0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = v3 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_11;
      }
      if (v10 < (int)v3) {
        goto LABEL_16;
      }
      if (sub_1DCB867D8() && __OFSUB__((int)v3, sub_1DCB86808())) {
        goto LABEL_17;
      }
      sub_1DCB86818();
      swift_allocObject();
      uint64_t v12 = sub_1DCB867C8();
      swift_release();
      uint64_t v8 = v12;
      uint64_t v10 = v3 >> 32;
LABEL_11:
      if (v10 < (int)v3)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      uint64_t result = sub_1DCA97304((int)v3, v10, a1);
      unint64_t v11 = v8 | 0x4000000000000000;
      *unint64_t v4 = v3;
LABEL_13:
      v4[1] = v11;
      return result;
    case 2uLL:
      *(void *)&long long v13 = *v1;
      *((void *)&v13 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1DCB86A38();
      uint64_t result = sub_1DCA97304(*(void *)(v13 + 16), *(void *)(v13 + 24), a1);
      unint64_t v11 = *((void *)&v13 + 1) | 0x8000000000000000;
      *uint64_t v1 = v13;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v13 + 7) = 0;
      *(void *)&long long v13 = 0;
      return a1((uint64_t)&v13, (uint64_t)&v13);
    default:
      *(void *)&long long v13 = *v1;
      WORD4(v13) = v2;
      BYTE10(v13) = BYTE2(v2);
      BYTE11(v13) = BYTE3(v2);
      BYTE12(v13) = BYTE4(v2);
      BYTE13(v13) = BYTE5(v2);
      BYTE14(v13) = BYTE6(v2);
      uint64_t result = a1((uint64_t)&v13, (uint64_t)&v13 + BYTE6(v2));
      unint64_t v7 = DWORD2(v13) | ((unint64_t)BYTE12(v13) << 32) | ((unint64_t)BYTE13(v13) << 40) | ((unint64_t)BYTE14(v13) << 48);
      *uint64_t v1 = v13;
      v1[1] = v7;
      return result;
  }
}

uint64_t sub_1DCA97304(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = sub_1DCB867D8();
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v7 = result;
  uint64_t result = sub_1DCB86808();
  uint64_t v8 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v11 = sub_1DCB867F8();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  return a3(v7 + v8, v7 + v8 + v12);
}

uint64_t sub_1DCA973AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = sub_1DCB867D8();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_1DCB867F8();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return a3(v7, v13);
}

uint64_t sub_1DCA97454@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA96F78(*(_DWORD *)(v1 + 24), a1);
}

unint64_t sub_1DCA97478@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1DCA96CF4(a1, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), a2, a3);
}

uint64_t sub_1DCA974A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCA96FE0(*(_DWORD *)(v1 + 24), a1);
}

unint64_t sub_1DCA974C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1DCA96B00(a1, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a2, a3);
}

unsigned char *storeEnumTagSinglePayload for SPUServiceUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA975B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SPUServiceUtils.DomainError()
{
  return &type metadata for SPUServiceUtils.DomainError;
}

unint64_t sub_1DCA975EC()
{
  unint64_t result = qword_1EAAA7318;
  if (!qword_1EAAA7318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7318);
  }
  return result;
}

uint64_t sub_1DCA97644()
{
  uint64_t v3 = sub_1DCA9B70C();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v3) == 1)
  {
    sub_1DC999EB8(v1);
  }
  else
  {
    sub_1DCB87E38();
    sub_1DCA9B6F8();
    sub_1DC88D5C8();
    v4();
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DCB87DE8();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v0;
  return swift_task_create();
}

uint64_t sub_1DCA97784()
{
  uint64_t v3 = sub_1DCA9B70C();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v3) == 1)
  {
    sub_1DC999EB8(v1);
  }
  else
  {
    sub_1DCB87E38();
    sub_1DCA9B6F8();
    sub_1DC88D5C8();
    v4();
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DCB87DE8();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v0;
  sub_1DC87E988(&qword_1EAA9FAA0);
  return swift_task_create();
}

uint64_t sub_1DCA978CC()
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    if (qword_1EAA9C658 == -1)
    {
LABEL_3:
      uint64_t v1 = sub_1DCB86FE8();
      sub_1DC89F57C(v1, (uint64_t)qword_1EAAFF810);
      uint64_t v2 = sub_1DCB86FC8();
      os_log_type_t v3 = sub_1DCB88448();
      if (os_log_type_enabled(v2, v3))
      {
        unsigned int v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unsigned int v4 = 0;
        _os_log_impl(&dword_1DC873000, v2, v3, "Queue already running", v4, 2u);
        sub_1DC8E7728();
      }

      return 1;
    }
LABEL_34:
    swift_once();
    goto LABEL_3;
  }
  uint64_t v6 = v0;
  uint64_t v7 = (OpaqueAudioQueue **)(v0 + 104);
  swift_beginAccess();
  *(void *)(v0 + 104) = 0;
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v9 = *(void *)(v6 + 80);
  uint64_t v10 = *(void *)(v6 + 88);
  uint64_t v11 = *(void **)(v6 + 56);
  uint64_t v12 = *(void *)(v6 + 64);
  uint64_t v13 = *(void **)(v6 + 16);
  type metadata accessor for SNAudioRecordingQueueScheduler();
  uint64_t v14 = swift_allocObject();
  swift_retain();
  swift_retain();
  id v15 = v11;
  uint64_t v16 = (void *)v14;
  id v17 = v15;
  id v18 = v13;
  sub_1DCA98028(v12, v8, v9, v10, v17, v18);
  *(void *)(v6 + 112) = v16;
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_streamDescription);
  int64_t v19 = *(void **)(v6 + 48);
  objc_msgSend(v19, sel_opaqueSessionID);
  swift_beginAccess();
  LODWORD(v9) = AudioQueueNewInputWithAudioSession();
  swift_endAccess();
  sub_1DCB2F960(v9);
  unint64_t v20 = 0x1EAA9C000uLL;
  uint64_t v30 = *v7;
  if (*v7)
  {
    (*(void (**)(OpaqueAudioQueue *, void *))(v6 + 32))(v30, v19);
    uint64_t v31 = 5;
    while (1)
    {
      LODWORD(v32) = *((_DWORD *)objc_msgSend(v18, sel_streamDescription) + 6);
      double v33 = (double)v32 * 0.512;
      objc_msgSend(v18, sel_sampleRate);
      double v35 = v33 * v34;
      AudioQueueBufferRef outBuffer = 0;
      if ((~*(void *)&v35 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v35 <= -1.0) {
        goto LABEL_32;
      }
      if (v35 >= 4294967300.0) {
        goto LABEL_33;
      }
      UInt32 v36 = v35;
      OSStatus v37 = AudioQueueAllocateBuffer(v30, v35, &outBuffer);
      if (v37 != sub_1DCB87088()) {
        goto LABEL_28;
      }
      uint64_t v38 = outBuffer;
      if (!outBuffer)
      {
        type metadata accessor for SNError();
        sub_1DC8F65EC();
        sub_1DC8E7B68();
        id v46 = sub_1DC931D18(v55, v56, (uint64_t)"failed to allocate buffer");
        goto LABEL_30;
      }
      outBuffer->mAudioDataByteSize = v36;
      OSStatus v37 = AudioQueueEnqueueBuffer(v30, v38, 0, 0);
      if (v37 != sub_1DCB87088())
      {
LABEL_28:
        type metadata accessor for SNError();
        uint64_t v47 = sub_1DCB87938();
        uint64_t v49 = v48;
        id v50 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
        id v51 = sub_1DCB2FA98(v47, v49, v37, 0);
        unint64_t v58 = 0;
        unint64_t v59 = 0xE000000000000000;
        sub_1DCB88A98();
        swift_bridgeObjectRelease();
        unint64_t v58 = 0xD00000000000001FLL;
        unint64_t v59 = 0x80000001DCB941E0;
        sub_1DCB88F98();
        sub_1DCB87A18();
        swift_bridgeObjectRelease();
        unint64_t v52 = v59;
        sub_1DC8E7B68();
        id v46 = sub_1DCA14B2C(0xD000000000000017, v53, 1, v51, v54, v52);

        swift_bridgeObjectRelease();
LABEL_30:
        swift_willThrow();
        swift_release();
        unint64_t v20 = 0x1EAA9C000;
        goto LABEL_7;
      }
      if (!--v31)
      {
        AudioQueueAddPropertyListener(v30, 0x6171726Eu, (AudioQueuePropertyListenerProc)sub_1DCA9AC3C, v16);
        if (qword_1EAA9C658 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_1DCB86FE8();
        sub_1DC89F57C(v39, (uint64_t)qword_1EAAFF810);
        uint64_t v40 = sub_1DCB86FC8();
        os_log_type_t v41 = sub_1DCB88488();
        if (sub_1DCA9B54C(v41))
        {
          id v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v42 = 0;
          _os_log_impl(&dword_1DC873000, v40, (os_log_type_t)v18, "Starting audio queue", v42, 2u);
          sub_1DC8E7728();
        }

        OSStatus v43 = AudioQueueStart(v30, 0);
        sub_1DCB2F960(v43);
        swift_release();
        uint64_t result = 1;
        *(unsigned char *)(v6 + 96) = 1;
        return result;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  type metadata accessor for SNError();
  sub_1DC8F65EC();
  sub_1DC8E7B68();
  id v46 = sub_1DC931D18(v44, v45, (uint64_t)"Failed to create audio queue");
  swift_willThrow();
  swift_release();
LABEL_7:
  if (*(void *)(v20 + 1624) != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1DCB86FE8();
  sub_1DC89F57C(v21, (uint64_t)qword_1EAAFF810);
  id v22 = v46;
  id v23 = v46;
  uint64_t v24 = sub_1DCB86FC8();
  os_log_type_t v25 = sub_1DCB88468();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138412290;
    id v28 = v46;
    uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
    unint64_t v58 = v29;
    sub_1DCB88778();
    void *v27 = v29;

    _os_log_impl(&dword_1DC873000, v24, v25, "failed to start audio %@", v26, 0xCu);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1DCA98028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  sub_1DCB86BE8();
  uint64_t v13 = (void *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_bufferHandler);
  *uint64_t v13 = a1;
  v13[1] = a2;
  uint64_t v14 = (void *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_interruptionHandler);
  *uint64_t v14 = a3;
  v14[1] = a4;
  *(void *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_recordFormat) = a6;
  swift_retain();
  swift_retain();
  id v15 = a6;
  uint64_t result = os_transaction_create();
  if (result)
  {
    *(void *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_transaction) = result;
    sub_1DCA9B694(*(void *)(MEMORY[0x1E4F1FA48] + 16));
    sub_1DCA9B694(v17);
    objc_msgSend(v15, sel_streamDescription);
    *(void *)(v6 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueue) = a5;
    type metadata accessor for ManagedAtomicInt64();
    sub_1DC8BABC0();
    id v18 = a5;
    sub_1DCB6626C();
  }
  __break(1u);
  return result;
}

void sub_1DCA9823C(uint64_t a1, unint64_t a2, uint64_t *a3, const char *a4)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DCB86FE8();
  sub_1DC89F57C(v8, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1DCB86FC8();
  os_log_type_t v10 = sub_1DCB88488();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = sub_1DCA9B6C8();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v23 = sub_1DCA9B6C8();
    *(_DWORD *)uint64_t v11 = 136446722;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DC9F8920(a1, a2, &v23);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2114;
    uint64_t v13 = *a3;
    uint64_t v14 = a3[2];
    id v15 = self;
    uint64_t v20 = v13;
    uint64_t v21 = a3[1];
    uint64_t v22 = v14;
    id v16 = objc_msgSend(v15, sel_valueWithCMTime_, &v20);
    uint64_t v20 = (uint64_t)v16;
    sub_1DCB88778();
    *uint64_t v12 = v16;
    *(_WORD *)(v11 + 22) = 2114;
    uint64_t v20 = sub_1DCB883C8();
    uint64_t v21 = v17;
    uint64_t v22 = v18;
    id v19 = objc_msgSend(v15, sel_valueWithCMTime_, &v20);
    uint64_t v20 = (uint64_t)v19;
    sub_1DCB88778();
    v12[1] = v19;
    _os_log_impl(&dword_1DC873000, v9, v10, a4, (uint8_t *)v11, 0x20u);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    sub_1DC8E7728();
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1DCA984D0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, const char *a9)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1DCB86FE8();
  sub_1DC89F57C(v16, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1DCB86FC8();
  os_log_type_t v18 = sub_1DCB88488();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = sub_1DCA9B6C8();
    uint64_t v24 = a5;
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v29 = sub_1DCA9B6C8();
    *(_DWORD *)uint64_t v19 = 136446722;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(a1, a2, &v29);
    sub_1DCA9B658();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2114;
    uint64_t v21 = self;
    id v26 = a3;
    uint64_t v27 = a4;
    uint64_t v28 = v24;
    id v22 = objc_msgSend(v21, sel_valueWithCMTime_, &v26);
    sub_1DCA9B658();
    *uint64_t v20 = v22;
    *(_WORD *)(v19 + 22) = 2114;
    id v26 = a6;
    uint64_t v27 = a7;
    uint64_t v28 = a8;
    id v23 = objc_msgSend(v21, sel_valueWithCMTime_, &v26);
    id v26 = v23;
    sub_1DCB88778();
    v20[1] = v23;
    _os_log_impl(&dword_1DC873000, v17, v18, a9, (uint8_t *)v19, 0x20u);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    sub_1DC8E7728();
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1DCA9875C(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v5 - 8);
  sub_1DC8CD750();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1DCB86FE8();
  sub_1DC89F57C(v6, (uint64_t)qword_1EAAFF810);
  id v7 = a2;
  id v8 = a2;
  uint64_t v9 = sub_1DCB86FC8();
  os_log_type_t v10 = sub_1DCB88468();
  if (sub_1DCA9B54C(v10))
  {
    swift_slowAlloc();
    uint64_t v11 = (void *)sub_1DCA9B5D8();
    *(_DWORD *)uint64_t v2 = 134349314;
    sub_1DCB88778();
    *(_WORD *)(v2 + 12) = 2112;
    id v12 = a2;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    sub_1DCB88778();
    *uint64_t v11 = v16;

    _os_log_impl(&dword_1DC873000, v9, v3, "%{public}ld consecutive audio heartbeats detected unhealthy buffers. Error: %@.", (uint8_t *)v2, 0x16u);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    sub_1DCA9B5F4();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
  }
  uint64_t v13 = sub_1DCB87E48();
  sub_1DC99A594(v13);
  uint64_t v14 = sub_1DC886810();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  sub_1DCA97644();
  return swift_release();
}

uint64_t sub_1DCA98974()
{
  return MEMORY[0x1F4188298](sub_1DCA98990, 0, 0);
}

uint64_t sub_1DCA98990()
{
  sub_1DC886900();
  id v1 = objc_msgSend(self, sel_processInfo);
  id v2 = objc_msgSend(v1, sel_processName);

  sub_1DCB87938();
  sub_1DCA9B4E0();
  v0[5] = v3;
  v0[6] = 0x65746E6F43646142;
  sub_1DCA9B67C(0xEA0000000000746ELL);
  unsigned int v4 = (void *)swift_task_alloc();
  v0[16] = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_1DCA98A98;
  uint64_t v5 = sub_1DCA9B5BC();
  return sub_1DC9632EC(v5, v6, v7, v8, v9);
}

uint64_t sub_1DCA98A98()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  *(void *)(v4 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_1DCA98BFC;
  }
  else {
    uint64_t v5 = sub_1DCA98B7C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DCA98B7C()
{
  sub_1DC8867A8();
  sub_1DCA9B52C();
  sub_1DCA9B6E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCA98BFC()
{
  sub_1DCA9B52C();
  sub_1DCA9B6E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  id v1 = *(void **)(v0 + 136);
  uint64_t v2 = sub_1DCB86FE8();
  sub_1DC89F57C(v2, (uint64_t)qword_1EAAFF810);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = (void *)sub_1DCB86FC8();
  os_log_type_t v6 = sub_1DCB88468();
  BOOL v7 = sub_1DCA9B54C(v6);
  char v8 = *(void **)(v0 + 136);
  if (v7)
  {
    sub_1DCA9B634();
    double v9 = (void *)sub_1DCA9B5D8();
    sub_1DCA9B6A8(5.7779e-34);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    sub_1DCA9B594(v10);
    *double v9 = v5;

    sub_1DCA9B610(&dword_1DC873000, v11, v12, "failed to capture unhealthy audio bug: %@", v13, v14, v15, v16, v19);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    sub_1DCA9B5F4();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
  }
  sub_1DC8BA978();
  return v17();
}

uint64_t sub_1DCA98DB4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DC8CD750();
  sub_1DCB66208(*(unint64_t **)(a2 + 16));
  sub_1DCB66208(*(unint64_t **)(a3 + 16));
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1DCB86FE8();
  os_log_type_t v8 = sub_1DC89F57C(v7, (uint64_t)qword_1EAAFF810);
  id v9 = a1;
  uint64_t v10 = sub_1DCB86FC8();
  os_log_type_t v11 = sub_1DCB88468();
  if (sub_1DCA9B54C(v11))
  {
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134218496;
    sub_1DCB88778();
    *(_WORD *)(v12 + 12) = 2048;
    sub_1DCB88778();
    *(_WORD *)(v12 + 22) = 1024;
    objc_msgSend(v9, sel_frameLength);
    sub_1DCB88778();

    _os_log_impl(&dword_1DC873000, v10, v8, "Not enough funds to schedule audio buffer for processing! Queue Funds Spent: %lld. Queue Funds Earned: %lld. Buffer Length: %u.", (uint8_t *)v12, 0x1Cu);
    sub_1DC8E7728();
  }
  else
  {
  }
  uint64_t v13 = sub_1DCB87E48();
  sub_1DC99A594(v13);
  uint64_t v14 = sub_1DC886810();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  sub_1DCA97644();
  return swift_release();
}

uint64_t sub_1DCA98FC4()
{
  return MEMORY[0x1F4188298](sub_1DCA98FE0, 0, 0);
}

uint64_t sub_1DCA98FE0()
{
  sub_1DC886900();
  id v1 = objc_msgSend(self, sel_processInfo);
  id v2 = objc_msgSend(v1, sel_processName);

  sub_1DCB87938();
  sub_1DCA9B4E0();
  v0[5] = v3;
  v0[6] = 0x776F6C667265764FLL;
  sub_1DCA9B67C(0xE800000000000000);
  id v4 = (void *)swift_task_alloc();
  v0[16] = v4;
  *id v4 = v0;
  v4[1] = sub_1DCA990E4;
  uint64_t v5 = sub_1DCA9B5BC();
  return sub_1DC9632EC(v5, v6, v7, v8, v9);
}

uint64_t sub_1DCA990E4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  *(void *)(v4 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_1DCA99244;
  }
  else {
    uint64_t v5 = sub_1DCA991C8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DCA991C8()
{
  sub_1DC8867A8();
  sub_1DCA9B52C();
  sub_1DCA9B6E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCA99244()
{
  sub_1DCA9B52C();
  sub_1DCA9B6E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  id v1 = *(void **)(v0 + 136);
  uint64_t v2 = sub_1DCB86FE8();
  sub_1DC89F57C(v2, (uint64_t)qword_1EAAFF810);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = (void *)sub_1DCB86FC8();
  os_log_type_t v6 = sub_1DCB88468();
  BOOL v7 = sub_1DCA9B54C(v6);
  char v8 = *(void **)(v0 + 136);
  if (v7)
  {
    sub_1DCA9B634();
    double v9 = (void *)sub_1DCA9B5D8();
    sub_1DCA9B6A8(5.7779e-34);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    sub_1DCA9B594(v10);
    *double v9 = v5;

    sub_1DCA9B610(&dword_1DC873000, v11, v12, "failed to capture audio overflow bug: %@", v13, v14, v15, v16, v19);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    sub_1DCA9B5F4();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
  }
  sub_1DC8BA978();
  return v17();
}

uint64_t sub_1DCA993F8()
{
  uint64_t v2 = sub_1DCB87588();
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  BOOL v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DCB875B8();
  sub_1DC89D4E0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1DC89D970();
  uint64_t result = sub_1DCB6623C(*(unsigned __int8 **)(*(void *)(v0
                                                         + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped)
                                             + 16));
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1DC9CC34C(0, 1);
    if (result)
    {
      uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_interruptionHandler);
      uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_interruptionHandler + 8);
      uint64_t v15 = sub_1DC886810();
      *(void *)(v15 + 16) = v14;
      *(void *)(v15 + 24) = v13;
      aBlock[4] = sub_1DC8C1140;
      void aBlock[5] = v15;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DC9C881C;
      aBlock[3] = &unk_1F37FAB70;
      int v16 = _Block_copy(aBlock);
      swift_retain();
      sub_1DCB875A8();
      v17[1] = MEMORY[0x1E4FBC860];
      sub_1DCA9B0F0((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
      sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
      sub_1DCA9AE24();
      sub_1DCB88928();
      MEMORY[0x1E01A74F0](0, v1, v7, v16);
      _Block_release(v16);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DCA99668(uint64_t a1, void *a2)
{
  sub_1DCA9875C(*(void *)(v2 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_unhealthyBufferCount), a2);

  return sub_1DCA993F8();
}

uint64_t sub_1DCA9969C(void *a1)
{
  sub_1DCA98DB4(a1, *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsSpent), *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsEarned));

  return sub_1DCA993F8();
}

uint64_t sub_1DCA996DC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_unhealthyBufferCount;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_unhealthyBufferCount);
  swift_retain();
  uint64_t result = sub_1DCA837D8(v4, a1);
  *(void *)(v1 + v3) = result;
  return result;
}

void sub_1DCA99730()
{
  sub_1DC89F6D8();
  uint64_t v2 = v0 + *v1;
  CMTimeValue v4 = *(void *)v2;
  unint64_t v3 = *(void *)(v2 + 8);
  CMTimeEpoch v5 = *(void *)(v2 + 16);
  uint64_t v15 = v0;
  uint64_t v16 = v6;
  sub_1DCA116DC(v4, v3, v5, v7, 1000, v8, 10.0, (uint64_t)v14, v9);
  *(void *)uint64_t v2 = v10;
  *(_DWORD *)(v2 + 8) = v11;
  *(_DWORD *)(v2 + 12) = v12;
  *(void *)(v2 + 16) = v13;
}

void *sub_1DCA997DC(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9)
{
  sub_1DCB86BF8();
  sub_1DCA9B0F0(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
  uint64_t v15 = sub_1DCB88F98();
  sub_1DCA984D0(v15, v16, a1, a2, a3, a4, a5, a6, a9);
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_1DCA998CC(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, const char *a5)
{
  sub_1DCB86BF8();
  sub_1DCA9B0F0(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
  uint64_t v8 = sub_1DCB88F98();
  sub_1DCA9823C(v8, v9, a1, a5);
  swift_bridgeObjectRelease();
  return sub_1DCA996DC(a3);
}

void sub_1DCA99984(OpaqueAudioQueue *a1, AudioQueueBuffer *a2, uint64_t a3)
{
  BOOL v7 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DCA999F8(v3, a2, a3, a1);
}

void sub_1DCA999F8(uint64_t a1, AudioQueueBuffer *a2, uint64_t a3, OpaqueAudioQueue *a4)
{
  if ((sub_1DCB6623C(*(unsigned __int8 **)(*(void *)(a1
                                                      + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped)
                                          + 16)) & 1) == 0)
  {
    UInt32 mAudioDataByteSize = a2->mAudioDataByteSize;
    if (mAudioDataByteSize)
    {
      id v9 = *(id *)(a1 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_recordFormat);
      unsigned int v10 = *((_DWORD *)objc_msgSend(v9, sel_streamDescription) + 6);
      if (v10)
      {
        int v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, v9, mAudioDataByteSize / v10);

        if (v11)
        {
          [v11 setFrameLength:[v11 frameCapacity]];
          int v12 = (void **)[v11 mutableAudioBufferList];
          if (*(_DWORD *)v12 == 1)
          {
            memcpy(v12[2], a2->mAudioData, a2->mAudioDataByteSize);
            objc_msgSend(v9, sel_sampleRate);
            uint64_t v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153F8]), sel_initWithAudioTimeStamp_sampleRate_, a3, v13);
            sub_1DCA99730();
            sub_1DCA99D28(v11, v14);
            AudioQueueEnqueueBuffer(a4, a2, 0, 0);
          }
          else
          {
            if (qword_1EAA9C658 != -1) {
              swift_once();
            }
            uint64_t v18 = sub_1DCB86FE8();
            sub_1DC89F57C(v18, (uint64_t)qword_1EAAFF810);
            uint64_t v14 = sub_1DCB86FC8();
            os_log_type_t v19 = sub_1DCB88468();
            if (!os_log_type_enabled(v14, v19))
            {

              uint64_t v14 = v11;
              goto LABEL_16;
            }
            uint64_t v20 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v20 = 0;
            _os_log_impl(&dword_1DC873000, v14, v19, "could not handle non-unary buffer count", v20, 2u);
            MEMORY[0x1E01A99C0](v20, -1, -1);
          }

LABEL_16:
          return;
        }
        if (qword_1EAA9C658 == -1)
        {
LABEL_8:
          uint64_t v15 = sub_1DCB86FE8();
          sub_1DC89F57C(v15, (uint64_t)qword_1EAAFF810);
          uint64_t v14 = sub_1DCB86FC8();
          os_log_type_t v16 = sub_1DCB88468();
          if (os_log_type_enabled(v14, v16))
          {
            uint64_t v17 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v17 = 0;
            _os_log_impl(&dword_1DC873000, v14, v16, "could not allocate avaudiobuffer", v17, 2u);
            MEMORY[0x1E01A99C0](v17, -1, -1);
          }
          goto LABEL_16;
        }
      }
      else
      {
        __break(1u);
      }
      swift_once();
      goto LABEL_8;
    }
  }
}

uint64_t sub_1DCA99D28(void *a1, void *a2)
{
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_bufferHandler);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_bufferHandler + 8);
  uint64_t v7 = sub_1DC8BABC0();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v6;
  void v8[3] = v5;
  void v8[4] = a1;
  void v8[5] = a2;
  v8[6] = v7;
  swift_retain();
  id v9 = a1;
  id v10 = a2;
  char v11 = sub_1DCA99F5C((uint64_t)sub_1DCA9AF00, (uint64_t)v8, objc_msgSend(v9, sel_frameLength));
  if ((v11 & 1) == 0) {
    sub_1DCA9969C(v9);
  }
  swift_release();
  return v11 & 1;
}

void sub_1DCA99E14(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DCA99E94(a1, a2, a3, a4);
}

uint64_t sub_1DCA99E94(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  a1(a3, a4);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCA99730();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCA99F5C(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v7 = sub_1DCB87588();
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC89D970();
  sub_1DCB875B8();
  sub_1DC89D4E0();
  uint64_t v40 = v11;
  uint64_t v41 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = *(void *)(v3 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueue);
  uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsSpent);
  uint64_t v16 = *(void *)(v5 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueFundsEarned);
  uint64_t v17 = *(void *)(v5 + OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped);
  unint64_t v18 = sub_1DCB66208(*(unint64_t **)(v16 + 16));
  if ((sub_1DCB6623C(*(unsigned __int8 **)(v17 + 16)) & 1) == 0)
  {
    uint64_t v36 = v5;
    if (a3)
    {
      uint64_t v34 = v9;
      uint64_t v35 = v7;
      os_log_type_t v19 = *(unint64_t **)(v15 + 16);
      do
      {
        unint64_t v20 = sub_1DCB66208(v19);
        int64_t v21 = v18 - v20;
        if ((uint64_t)(v18 - v20) >= a3) {
          int64_t v22 = a3;
        }
        else {
          int64_t v22 = 0;
        }
      }
      while (!sub_1DC9CC3E4(v20, v22 + v20));
      uint64_t v9 = v34;
      uint64_t v7 = v35;
      if (v21 < a3) {
        return 0;
      }
    }
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = v37;
    uint64_t v26 = v38;
    void v24[2] = v17;
    uint64_t v24[3] = v25;
    v24[4] = v26;
    v24[5] = v16;
    void v24[6] = a3;
    uint64_t v47 = sub_1DCA9B028;
    uint64_t v48 = v24;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v44 = 1107296256;
    uint64_t v45 = sub_1DC9C881C;
    id v46 = &unk_1F37FAFA8;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DCB875A8();
    uint64_t v42 = MEMORY[0x1E4FBC860];
    sub_1DCA9B0F0((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
    sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
    sub_1DCA9AE24();
    sub_1DCA9B568();
    MEMORY[0x1E01A74F0](0, v14, v4, v27);
    _Block_release(v27);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v7);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v40);
    swift_release();
    uint64_t v5 = v36;
  }
  uint64_t v28 = v9;
  uint64_t v29 = sub_1DC8BABC0();
  *(void *)(v29 + 16) = v5;
  uint64_t v30 = sub_1DC886810();
  *(void *)(v30 + 16) = sub_1DCA9B090;
  *(void *)(v30 + 24) = v29;
  uint64_t v47 = sub_1DC8C1CB8;
  uint64_t v48 = (void *)v30;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v44 = 1107296256;
  uint64_t v45 = sub_1DC9C881C;
  id v46 = &unk_1F37FB070;
  uint64_t v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain_n();
  sub_1DCB875A8();
  uint64_t v42 = MEMORY[0x1E4FBC860];
  sub_1DCA9B0F0((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
  sub_1DCA9AE24();
  sub_1DCA9B568();
  MEMORY[0x1E01A74F0](0, v14, v4, v31);
  _Block_release(v31);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v4, v7);
  sub_1DC88D5C8();
  v32();
  swift_release();
  swift_release();
  return 1;
}

void sub_1DCA9A3AC(OpaqueAudioQueue *a1, int a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (a2 == 1634824814)
  {
    UInt32 ioDataSize = 4;
    int outData = 0;
    OSStatus Property = AudioQueueGetProperty(a1, 0x6171726Eu, &outData, &ioDataSize);
    sub_1DCB2F960(Property);
    if (ioDataSize == 4)
    {
      if (!outData) {
        sub_1DCA993F8();
      }
    }
    else
    {
      type metadata accessor for SNError();
      sub_1DC8F65EC();
      sub_1DC8E7B68();
      id v5 = sub_1DC931D18(v3, v4, (uint64_t)"bad returned property size");
      swift_willThrow();
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_1DCB86FE8();
      sub_1DC89F57C(v6, (uint64_t)qword_1EAAFF810);
      id v7 = v5;
      id v8 = v5;
      uint64_t v9 = sub_1DCB86FC8();
      os_log_type_t v10 = sub_1DCB88468();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 138412290;
        id v13 = v5;
        uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
        sub_1DCB88778();
        *uint64_t v12 = v14;

        _os_log_impl(&dword_1DC873000, v9, v10, "error checking running status %@", v11, 0xCu);
        sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
        swift_arrayDestroy();
        sub_1DC8E7728();
        sub_1DC8E7728();
      }
      else
      {
      }
    }
  }
}

uint64_t sub_1DCA9A610(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 16))
  {
    swift_beginAccess();
    *uint64_t v2 = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCA9A678()
{
  sub_1DCB86BF8();
  sub_1DC88D5C8();
  v1();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_1DCA9A760()
{
  sub_1DCA9A678();
  sub_1DC89F6D8();

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA9A798()
{
  return type metadata accessor for SNAudioRecordingQueueScheduler();
}

uint64_t type metadata accessor for SNAudioRecordingQueueScheduler()
{
  uint64_t result = qword_1EAAA7328;
  if (!qword_1EAAA7328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCA9A7E8()
{
  uint64_t result = sub_1DCB86BF8();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1DCA9A8C8(uint64_t result, OpaqueAudioQueue *a2, AudioQueueBuffer *a3, uint64_t a4)
{
  if (result)
  {
    swift_retain();
    sub_1DCA99984(a2, a3, a4);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA9A92C(uint64_t result, OpaqueAudioQueue *a2, int a3)
{
  if (result)
  {
    swift_retain();
    sub_1DCA9A3AC(a2, a3);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA9A988(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 104) = 0;
  *(void *)(v10 + 112) = 0;
  *(void *)(v10 + 16) = a1;
  *(_DWORD *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = a6;
  *(void *)(v10 + 64) = a7;
  *(void *)(v10 + 72) = a8;
  *(void *)(v10 + 80) = a9;
  *(void *)(v10 + 88) = a10;
  *(unsigned char *)(v10 + 96) = 0;
  swift_beginAccess();
  *(void *)(v10 + 104) = 0;
  *(void *)(v10 + 112) = 0;
  swift_release();
  return v10;
}

id *sub_1DCA9AA00()
{
  sub_1DCA9AA54();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

void sub_1DCA9AA54()
{
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    uint64_t v1 = v0;
    swift_beginAccess();
    uint64_t v2 = *(OpaqueAudioQueue **)(v0 + 104);
    if (v2)
    {
      uint64_t v3 = *(char **)(v0 + 112);
      if (v3)
      {
        uint64_t v4 = *(unsigned __int8 **)(*(void *)&v3[OBJC_IVAR____TtC13SoundAnalysis30SNAudioRecordingQueueScheduler_eventHandlerQueueStopped]
                                 + 16);
        swift_retain();
        sub_1DCB66248(v4, 1u);
        AudioQueueRemovePropertyListener(v2, 0x6171726Eu, (AudioQueuePropertyListenerProc)sub_1DCA9AC3C, v3);
        swift_release();
      }
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1DCB86FE8();
      sub_1DC89F57C(v5, (uint64_t)qword_1EAAFF810);
      uint64_t v6 = sub_1DCB86FC8();
      os_log_type_t v7 = sub_1DCB88488();
      if (os_log_type_enabled(v6, v7))
      {
        id v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v8 = 0;
        _os_log_impl(&dword_1DC873000, v6, v7, "Stopping audio queue", v8, 2u);
        sub_1DC8E7728();
      }

      AudioQueueStop(v2, 1u);
      AudioQueueDispose(v2, 1u);
    }
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
    swift_release();
    *(unsigned char *)(v1 + 96) = 0;
  }
}

uint64_t sub_1DCA9ABE0()
{
  sub_1DCA9AA00();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNAudioRecordingQueue()
{
  return self;
}

uint64_t sub_1DCA9AC40()
{
  sub_1DC886900();
  uint64_t v1 = v0;
  os_log_type_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1DC886800(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1DCA9AD10;
  return v7(v1);
}

uint64_t sub_1DCA9AD10()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC8BA978();
  return v3();
}

uint64_t sub_1DCA9ADD4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA9AE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCA9AE1C()
{
  return swift_release();
}

unint64_t sub_1DCA9AE24()
{
  unint64_t result = qword_1EAA9E720;
  if (!qword_1EAA9E720)
  {
    sub_1DC8863A8((uint64_t *)&unk_1EAA9F660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9E720);
  }
  return result;
}

uint64_t sub_1DCA9AE78()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1DCA9AEB0()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA9AF00()
{
  return sub_1DCA9B040((uint64_t (*)(void, void, void, void, void))sub_1DCA99E14);
}

uint64_t sub_1DCA9AF18()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA9AF50()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC886898();
  return sub_1DCA98FC4();
}

uint64_t sub_1DCA9AFE0()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA9B028()
{
  return sub_1DCA9B040((uint64_t (*)(void, void, void, void, void))sub_1DCA1187C);
}

uint64_t sub_1DCA9B040(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1DCA9B058()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA9B090()
{
  return sub_1DCA9A610(v0);
}

void *sub_1DCA9B098(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  return sub_1DCA997DC(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24), "Audio Processed Reanchor (%{public}s); time changed from %{public}@ to %{public}@");
}

uint64_t sub_1DCA9B0C8(uint64_t *a1)
{
  return sub_1DCA998CC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), "Audio Processed Heartbeat (%{public}s; time changed from %{public}@ to %{public}@");
}

uint64_t sub_1DCA9B0F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCA9B138()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D6930;
  sub_1DC886898();
  return sub_1DCA98974();
}

void *sub_1DCA9B1C8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  return sub_1DCA997DC(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24), "Audio Heartbeat Reanchor (%{public}s); time changed from %{public}@ to %{public}@");
}

uint64_t sub_1DCA9B1F8(uint64_t *a1)
{
  return sub_1DCA998CC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), "Audio Running Heartbeat (%{public}s); time changed from %{public}@ to %{public}@");
}

uint64_t sub_1DCA9B220(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1DCA9B300;
  return v5(v2 + 16);
}

uint64_t sub_1DCA9B300()
{
  sub_1DC886900();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v3 = *v0;
  sub_1DC88678C();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_1DCA9B424()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D6930;
  uint64_t v3 = sub_1DC886898();
  return v4(v3);
}

void sub_1DCA9B4E0()
{
  *(void *)(v1 + 120) = v0;
  strcpy((char *)(v1 + 16), "SoundAnalysis");
  *(_WORD *)(v1 + 30) = -4864;
  *(void *)(v1 + 32) = 0x6E6964726F636552;
}

uint64_t sub_1DCA9B52C()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_1DCA9B54C(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1DCA9B568()
{
  return sub_1DCB88928();
}

uint64_t sub_1DCA9B594(uint64_t a1)
{
  *uint64_t v1 = a1;
  return sub_1DCB88778();
}

uint64_t sub_1DCA9B5BC()
{
  return v0;
}

uint64_t sub_1DCA9B5D8()
{
  return swift_slowAlloc();
}

uint64_t sub_1DCA9B5F4()
{
  return swift_arrayDestroy();
}

void sub_1DCA9B610(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, os_log_t log)
{
  _os_log_impl(a1, log, v10, a4, v9, 0xCu);
}

uint64_t sub_1DCA9B634()
{
  return swift_slowAlloc();
}

uint64_t sub_1DCA9B658()
{
  return sub_1DCB88778();
}

void sub_1DCA9B67C(uint64_t a1@<X8>)
{
  v3[7] = a1;
  v3[8] = 0;
  v3[9] = 0xE000000000000000;
  v3[10] = v1;
  v3[12] = 0;
  v3[13] = 0;
  v3[11] = v2;
}

void sub_1DCA9B694(uint64_t a1@<X8>)
{
  uint64_t v6 = v5 + v4;
  *(void *)uint64_t v6 = v1;
  *(_DWORD *)(v6 + 8) = v2;
  *(_DWORD *)(v6 + 12) = v3;
  *(void *)(v6 + 16) = a1;
}

id sub_1DCA9B6A8(float a1)
{
  *int v2 = a1;
  return v1;
}

uint64_t sub_1DCA9B6C8()
{
  return swift_slowAlloc();
}

uint64_t sub_1DCA9B6E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA9B70C()
{
  return sub_1DCB87E48();
}

uint64_t sub_1DCA9B72C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCA9B7D0@<X0>(uint64_t a1@<X8>)
{
  sub_1DC8F0494();
  (*(void (**)(uint64_t))(v2 + 32))(a1);
  type metadata accessor for TimestampedValue();
  sub_1DC8F0494();
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 32);

  return v4();
}

uint64_t sub_1DCA9B880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v100 = a3;
  uint64_t v101 = a4;
  uint64_t v91 = a1;
  sub_1DC88D538();
  uint64_t v89 = v4;
  uint64_t v90 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v103 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  sub_1DC88D538();
  uint64_t v99 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  uint64_t v95 = *(void *)(v12 + 48);
  uint64_t v96 = v13;
  uint64_t v14 = *(void *)(v12 + 32);
  uint64_t v15 = v12;
  swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1DCA9DF90();
  uint64_t v81 = v16;
  uint64_t v17 = sub_1DCA9DF90();
  uint64_t v105 = v9;
  uint64_t v106 = v16;
  uint64_t v107 = v17;
  uint64_t v108 = v14;
  uint64_t v82 = type metadata accessor for StatefulTryMap();
  sub_1DC88D538();
  uint64_t v83 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v80 = (uint64_t)&v72 - v20;
  uint64_t v21 = *(void *)(v15 + 24);
  sub_1DC88D538();
  uint64_t v88 = v22;
  MEMORY[0x1F4188790](v23);
  sub_1DC88D550();
  uint64_t v102 = v24;
  uint64_t v93 = *(void *)(v15 + 40);
  uint64_t v25 = v93;
  swift_getAssociatedTypeWitness();
  uint64_t v85 = type metadata accessor for TimestampedValue();
  uint64_t v105 = v21;
  uint64_t v106 = v85;
  uint64_t v107 = v17;
  uint64_t v108 = v25;
  uint64_t v86 = type metadata accessor for StatefulTryMap();
  sub_1DC88D538();
  uint64_t v87 = v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v84 = (uint64_t)&v72 - v28;
  sub_1DC8F0494();
  MEMORY[0x1F4188790](v29);
  type metadata accessor for Locked();
  uint64_t v30 = *(void *)(v15 + 64);
  uint64_t v97 = v17;
  sub_1DCB88CB8();
  uint64_t v31 = sub_1DCA9BF60();
  uint64_t v104 = v31;
  unint64_t v32 = (void (**)(uint64_t))(v98 + *(int *)(v15 + 88));
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  char v79 = v34;
  char v78 = v33;
  uint64_t v35 = (void (*)(uint64_t))v99[2];
  uint64_t v92 = v9;
  v35(v96);
  uint64_t v36 = (void *)swift_allocObject();
  void v36[2] = v9;
  v36[3] = v21;
  uint64_t v77 = v21;
  uint64_t v38 = v100;
  uint64_t v37 = v101;
  v36[4] = v100;
  v36[5] = v14;
  uint64_t v39 = v93;
  v36[6] = v93;
  v36[7] = v37;
  uint64_t v74 = v15;
  uint64_t v94 = *(void *)(v15 + 56);
  uint64_t v40 = v94;
  uint64_t v41 = v95;
  v36[8] = v95;
  v36[9] = v40;
  uint64_t v42 = *(void *)(v15 + 72);
  uint64_t v76 = v30;
  v36[10] = v30;
  id v36[11] = v42;
  uint64_t v43 = v42;
  uint64_t v75 = v42;
  v36[12] = v31;
  uint64_t v44 = (void *)swift_allocObject();
  uint64_t v45 = v92;
  v44[2] = v92;
  v44[3] = v21;
  v44[4] = v38;
  v44[5] = v14;
  uint64_t v46 = v14;
  v44[6] = v39;
  v44[7] = v37;
  uint64_t v47 = v41;
  uint64_t v48 = v94;
  v44[8] = v41;
  v44[9] = v48;
  v44[10] = v30;
  v44[11] = v43;
  uint64_t v49 = v45;
  uint64_t v50 = v46;
  uint64_t v73 = v46;
  sub_1DCAB7978((uint64_t)sub_1DCA9DAFC, (uint64_t)v36, (uint64_t)sub_1DCA9DB40, (uint64_t)v44, v45, v81, v97, v46, v80);
  swift_retain();
  swift_release();
  swift_release();
  sub_1DC88D5C8();
  v51();
  uint64_t v99 = &unk_1DCBD87A8;
  swift_getWitnessTable();
  uint64_t v52 = sub_1DCB873A8();
  sub_1DC88D5C8();
  v53();
  v79(v52);
  swift_release();
  uint64_t v54 = v89;
  uint64_t v55 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v103, v98, v74);
  unint64_t v56 = (*(unsigned __int8 *)(v54 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  id v57 = (char *)swift_allocObject();
  uint64_t v58 = v77;
  *((void *)v57 + 2) = v49;
  *((void *)v57 + 3) = v58;
  uint64_t v59 = v100;
  *((void *)v57 + 4) = v100;
  *((void *)v57 + 5) = v50;
  uint64_t v60 = v101;
  *((void *)v57 + 6) = v39;
  *((void *)v57 + 7) = v60;
  *((void *)v57 + 8) = v47;
  uint64_t v61 = v94;
  uint64_t v62 = v76;
  *((void *)v57 + 9) = v94;
  *((void *)v57 + 10) = v62;
  uint64_t v63 = v75;
  uint64_t v64 = v103;
  uint64_t v65 = v104;
  *((void *)v57 + 11) = v75;
  *((void *)v57 + 12) = v65;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v57[v56], v64, v55);
  uint64_t v66 = (void *)swift_allocObject();
  uint64_t v67 = v93;
  v66[2] = v92;
  v66[3] = v58;
  uint64_t v68 = v73;
  v66[4] = v59;
  v66[5] = v68;
  v66[6] = v67;
  v66[7] = v60;
  v66[8] = v95;
  v66[9] = v61;
  v66[10] = v62;
  v66[11] = v63;
  sub_1DCAB7978((uint64_t)sub_1DCA9DC60, (uint64_t)v57, (uint64_t)sub_1DCA9DB40, (uint64_t)v66, v58, v85, v97, v67, v84);
  swift_retain();
  swift_release();
  swift_release();
  sub_1DC88D5C8();
  v69();
  swift_getWitnessTable();
  sub_1DCB87518();
  swift_release();
  sub_1DC88D5C8();
  return v70();
}

uint64_t sub_1DCA9BF60()
{
  uint64_t v0 = swift_allocObject();
  sub_1DCA9CC54();
  return v0;
}

uint64_t sub_1DCA9BFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v47 = a4;
  uint64_t v9 = a3;
  uint64_t v54 = a9;
  uint64_t v59 = a6;
  uint64_t v60 = a1;
  uint64_t v11 = *a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v50 = (char *)&v41 - v13;
  uint64_t v14 = *(void *)(v11 + 80);
  uint64_t v15 = sub_1DCB88718();
  uint64_t v44 = *(void *)(v15 - 8);
  uint64_t v45 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v53 = (char *)&v41 - v17;
  uint64_t v18 = *(void *)(v14 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v43 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v41 = (char *)&v41 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v41 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v41 - v26;
  uint64_t v46 = v9;
  sub_1DCA9CAA0((uint64_t)v25);
  uint64_t v55 = a8;
  uint64_t v56 = a2;
  uint64_t v28 = *(void *)(a8 + 8);
  sub_1DCB88C88();
  uint64_t v42 = v18;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v18 + 8);
  v29(v25, v14);
  uint64_t v30 = v59;
  uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v59 + 32);
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  uint64_t v31 = v30;
  unint64_t v32 = v48;
  v48(AssociatedTypeWitness, v31);
  uint64_t v49 = v28;
  LOBYTE(v9) = sub_1DCB878C8();
  uint64_t v57 = v18 + 8;
  v29(v25, v14);
  if ((v9 & 1) == 0)
  {
    uint64_t v33 = v41;
    v32(AssociatedTypeWitness, v59);
    sub_1DCB88C98();
    v29(v33, v14);
    sub_1DCA9CB5C((uint64_t)v25);
  }
  uint64_t v34 = *(void (**)(uint64_t))(v59 + 24);
  uint64_t v35 = v50;
  v34(AssociatedTypeWitness);
  uint64_t v36 = v52;
  uint64_t v37 = sub_1DCB880C8();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v36);
  uint64_t v61 = v37;
  sub_1DCA9DD7C();
  uint64_t v38 = (uint64_t)v53;
  sub_1DCB88068();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v38, 1, v14) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v38, v45);
    sub_1DCA9DDC8();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    uint64_t v40 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v43, v38, v14);
    sub_1DCB88CA8();
    ((void (*)(uint64_t, uint64_t))v34)(AssociatedTypeWitness, v59);
    v29(v40, v14);
  }
  return ((uint64_t (*)(char *, uint64_t))v29)(v27, v14);
}

uint64_t sub_1DCA9C4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v41 = a6;
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v55 = a2;
  uint64_t v45 = a9;
  uint64_t v48 = a13;
  uint64_t v49 = a12;
  uint64_t v47 = a15;
  uint64_t v43 = a1;
  uint64_t v44 = a14;
  uint64_t v15 = *(void *)(*(void *)a3 + 80);
  uint64_t v50 = a11;
  uint64_t v42 = a10;
  uint64_t v16 = sub_1DCB88718();
  uint64_t v39 = *(void *)(v16 - 8);
  uint64_t v40 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v46 = (char *)&v34 - v18;
  uint64_t v19 = *(void *)(v15 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v38 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v34 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))((char *)&v34 - v26, v43, AssociatedTypeWitness);
  sub_1DCA9CAA0((uint64_t)v24);
  uint64_t v36 = *(void *)(v44 + 8);
  sub_1DCB88C88();
  uint64_t v37 = v19;
  uint64_t v28 = v24;
  uint64_t v29 = v45;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v19 + 8);
  v35(v28, v15);
  sub_1DCA9B7D0(v29);
  uint64_t v56 = sub_1DCA9C8EC(v51);
  sub_1DCA9DD7C();
  uint64_t v30 = (uint64_t)v46;
  sub_1DCB88068();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v30, 1, v15) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v30, v40);
    sub_1DCA9DDC8();
    swift_allocError();
    swift_willThrow();
    uint64_t v31 = type metadata accessor for TimestampedValue();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v29, v31);
  }
  else
  {
    uint64_t v33 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v38, v30, v15);
    sub_1DCB88CA8();
    return ((uint64_t (*)(char *, uint64_t))v35)(v33, v15);
  }
}

uint64_t sub_1DCA9C8EC(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(_s21CollectionTimestamperVMa() + 84);
  uint64_t v2 = *(void *)v1;
  if (!*(unsigned char *)(v1 + 16)) {
    return v2;
  }
  if (*(unsigned char *)(v1 + 16) != 1)
  {
    swift_getAssociatedTypeWitness();
    return sub_1DCB880C8();
  }
  uint64_t v3 = *(void *)(v1 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_1DCB880C8();
  uint64_t v5 = result * v3;
  if ((unsigned __int128)(result * (__int128)v3) >> 64 != (result * v3) >> 63)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (!v2)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v5 != 0x8000000000000000 || v2 != -1) {
    return v5 / v2;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1DCA9CA04()
{
  return sub_1DCB88CB8();
}

uint64_t sub_1DCA9CA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCA9B880(a1, a4, a2, a3);
}

void sub_1DCA9CAA0(uint64_t a1@<X8>)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(v1 + 16) + 16));
  sub_1DC905D68();
  uint64_t v4 = v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  sub_1DC8F0494();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
  sub_1DCA9CB50(v1);
}

void sub_1DCA9CB50(uint64_t a1)
{
}

uint64_t sub_1DCA9CB5C(uint64_t a1)
{
  uint64_t v3 = *v1;
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1[2] + 16));
  sub_1DC905D68();
  uint64_t v5 = (char *)v1 + *(void *)(v4 + 96);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 24))(v5, a1, v6);
  swift_endAccess();
  sub_1DCA9CB50((uint64_t)v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t sub_1DCA9CC54()
{
  type metadata accessor for SafeLock();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = (_DWORD *)swift_slowAlloc();
  *uint64_t v2 = 0;
  *(void *)(v1 + 16) = v2;
  *(void *)(v0 + 16) = v1;
  sub_1DC905D68();
  sub_1DC8F0494();
  (*(void (**)(void))(v3 + 32))();
  return v0;
}

uint64_t sub_1DCA9CD04()
{
  swift_release();
  sub_1DC905D68();
  sub_1DC8F0494();
  (*(void (**)(void))(v1 + 8))();
  return v0;
}

uint64_t sub_1DCA9CD7C()
{
  sub_1DCA9CD04();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Locked()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA9CDEC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_1DCA9CFC4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1DCA9D250);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t type metadata accessor for TimestampedValue()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA9D290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 80);
}

uint64_t sub_1DCA9D298()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DCA9D340(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    long long v12 = *(_OWORD *)v11;
    *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
    *(_OWORD *)unint64_t v10 = v12;
    uint64_t v13 = (void *)(((unint64_t)v4 + v6 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)a2 + v6 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCA9D458(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

uint64_t sub_1DCA9D4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v11 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = v11;
  long long v12 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

uint64_t sub_1DCA9D56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v11 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = v11;
  long long v12 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DCA9D61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  *(_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DCA9D6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v11 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = v11;
  *(_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1DCA9D764(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCA9D8A0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 31) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DCA9D8B4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 31) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 31) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 31) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 31) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 31) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1DCA9DA84);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 31] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t _s21CollectionTimestamperVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCA9DAC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA9DAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DCA9BFA0(a1, a2, *(void **)(v3 + 96), a3, *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88));
}

uint64_t sub_1DCA9DB40()
{
  return sub_1DCA9DD44();
}

uint64_t sub_1DCA9DB58()
{
  _s21CollectionTimestamperVMa();
  swift_release();
  sub_1DC8F0494();
  sub_1DC88D5C8();
  v0();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DCA9DC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[5];
  uint64_t v17 = v3[4];
  uint64_t v7 = v3[6];
  uint64_t v14 = v3[7];
  uint64_t v9 = v3[8];
  uint64_t v8 = v3[9];
  uint64_t v11 = v3[10];
  uint64_t v10 = v3[11];
  uint64_t v12 = *(void *)(_s21CollectionTimestamperVMa() - 8);
  return sub_1DCA9C4B4(a1, a2, v3[12], (uint64_t)v3 + ((*(unsigned __int8 *)(v12 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v4, v5, v17, v6, a3, v7, v14, v9, v8, v11, v10);
}

uint64_t sub_1DCA9DD44()
{
  return sub_1DCA9CA04();
}

unint64_t sub_1DCA9DD7C()
{
  unint64_t result = qword_1EAAA7478;
  if (!qword_1EAAA7478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7478);
  }
  return result;
}

unint64_t sub_1DCA9DDC8()
{
  unint64_t result = qword_1EAAA7480[0];
  if (!qword_1EAAA7480[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA7480);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TimestampingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA9DEB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimestampingError()
{
  return &type metadata for TimestampingError;
}

uint64_t sub_1DCA9DEE8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1DCA9DF00(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t _s21CollectionTimestamperV18TimestampingPolicyOMa()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1DCA9DF34()
{
  unint64_t result = qword_1EAAA7508;
  if (!qword_1EAAA7508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7508);
  }
  return result;
}

uint64_t sub_1DCA9DF80()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA9DF90()
{
  return swift_getAssociatedTypeWitness();
}

id sub_1DCA9DFB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v5 - 8);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  int v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v29[-v16];
  sub_1DC87E920(a1, (uint64_t)v29);
  id v18 = v30;
  id v19 = v2;
  if (!v18)
  {
    sub_1DC9AEC6C((uint64_t)v29, &qword_1EAA9CAB0);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v8, 1, 1, v9);
    goto LABEL_6;
  }
  int v20 = swift_dynamicCast();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v8, v20 ^ 1u, 1, v9);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v8, 1, v9) == 1)
  {
LABEL_6:

    sub_1DC9AEC6C(v8, qword_1EAA9CBC0);
    sub_1DCA9FAEC();
    swift_allocError();
    swift_willThrow();
    sub_1DC9AEC6C(a1, &qword_1EAA9CAB0);
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 32))(v17, v8, v9);

  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v15, v17, v9);
  id v21 = objc_allocWithZone(ObjectType);
  uint64_t v22 = v31;
  id v23 = sub_1DCA9E2FC((uint64_t)v15);
  if (!v22)
  {
    id v18 = v23;
    sub_1DC9AEC6C(a1, &qword_1EAA9CAB0);
    uint64_t v27 = sub_1DCA9FDF8();
    v28(v27);
    swift_getObjectType();
    sub_1DCA9FE28();
    return v18;
  }
  sub_1DC9AEC6C(a1, &qword_1EAA9CAB0);
  uint64_t v24 = sub_1DCA9FDF8();
  v25(v24);
LABEL_7:
  swift_getObjectType();
  sub_1DCA9FE28();
  return v18;
}

id sub_1DCA9E2FC(uint64_t a1)
{
  int v3 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v33 = sub_1DCB884C8();
  MEMORY[0x1F4188790](v33);
  sub_1DC8A22D0();
  uint64_t v5 = sub_1DCB875B8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1DC89D970();
  uint64_t v6 = sub_1DCB884D8();
  sub_1DC89D4E0();
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1DC8A22D0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1DC8A22D0();
  uint64_t v18 = v17 - v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17 - v16, a1, v12);
  id v19 = objc_allocWithZone(MEMORY[0x1E4F15390]);
  int v20 = v3;
  id v21 = sub_1DCABBC54(v18, 1, 0);
  if (v2)
  {
    type metadata accessor for SNError();
    uint64_t v22 = (void *)sub_1DCB86888();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v36 = 0xD000000000000019;
    unint64_t v37 = 0x80000001DCB99070;
    sub_1DCA9FC88((unint64_t *)&qword_1EAAA0A28, MEMORY[0x1E4F276F0]);
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 5, v22, 0xD000000000000019, 0x80000001DCB99070);

    swift_bridgeObjectRelease();
    swift_willThrow();

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    id v23 = (id)(v14 + 8);
    v24(a1, v12);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v32 = v11;
    uint64_t v25 = OBJC_IVAR____SNAudioFileAnalyzer_audioFile;
    *(void *)&v20[OBJC_IVAR____SNAudioFileAnalyzer_audioFile] = v21;
    id v26 = objc_msgSend(v21, sel_processingFormat);
    sub_1DCABEC20(v26);

    id v28 = objc_msgSend(*(id *)&v20[v25], sel_processingFormat);
    id v29 = objc_msgSend(objc_allocWithZone((Class)SNAudioStreamAnalyzer), sel_initWithFormat_, v28);

    *(void *)&v20[OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer] = v29;
    v20[OBJC_IVAR____SNAudioFileAnalyzer_wasCancelled] = 0;
    sub_1DC9C573C();
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v32, *MEMORY[0x1E4FBCC68], v6);
    sub_1DCB875A8();
    unint64_t v36 = MEMORY[0x1E4FBC860];
    sub_1DCA9FC88((unint64_t *)&qword_1EAA9D0F0, MEMORY[0x1E4FBCC10]);
    sub_1DC87E988((uint64_t *)&unk_1EAA9D0D0);
    sub_1DC8C19F0((unint64_t *)&qword_1EAA9D0E0, (uint64_t *)&unk_1EAA9D0D0);
    sub_1DCB88928();
    *(void *)&v20[OBJC_IVAR____SNAudioFileAnalyzer_queue] = sub_1DCB88508();

    v35.receiver = v20;
    v35.super_class = ObjectType;
    id v23 = objc_msgSendSuper2(&v35, sel_init);
    uint64_t v30 = sub_1DCA9FE10();
    v31(v30);
  }
  return v23;
}

uint64_t sub_1DCA9E7DC(int a1, uint64_t a2, void *a3, uint64_t *a4)
{
  LODWORD(v6) = a1;
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = *(void **)(a2 + OBJC_IVAR____SNAudioFileAnalyzer_audioFile);
  id v8 = objc_msgSend(v7, sel_processingFormat);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F153B0]), sel_initWithPCMFormat_frameCapacity_, v8, 0x2000);

  if (!v9) {
    goto LABEL_24;
  }
  uint64_t v38 = (void *)OBJC_IVAR____SNAudioFileAnalyzer_wasCancelled;
  uint64_t v39 = (uint64_t (*)())OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer;
  do
  {
    uint64_t v10 = objc_msgSend(v7, sel_length);
    uint64_t v11 = objc_msgSend(v7, sel_framePosition);
    unint64_t v12 = v10 - v11;
    if (__OFSUB__(v10, v11))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
    if ((v12 & 0x8000000000000000) != 0 || HIDWORD(v12))
    {

      uint64_t result = sub_1DCB88C58();
      __break(1u);
      return result;
    }
    HIDWORD(v41) = v6;
    if (v12 >= v6) {
      LODWORD(v12) = v6;
    }
    if (v12 >= 0x2000) {
      uint64_t v13 = 0x2000;
    }
    else {
      uint64_t v13 = v12;
    }
    id v44 = 0;
    uint64_t v14 = v9;
    if (!objc_msgSend(v7, sel_readIntoBuffer_frameCount_error_, v9, v13, &v44))
    {
      id v21 = v44;
      uint64_t v22 = (void *)sub_1DCB86898();

      swift_willThrow();
      type metadata accessor for SNError();
      id v23 = (void *)sub_1DCB86888();
      id v24 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 2, v23, 0xD00000000000001FLL, 0x80000001DCB99050);

      uint64_t v25 = (void *)sub_1DC8BF008();
      id v26 = v24;
      sub_1DC8BE764((uint64_t)v26, v27, v28, v29, v30, v31, v32, v33, v35, v36, v37, v38, v39, a2, v41, v43, (uint64_t)v44, v45, v46,
        v47,
        v48,
        v49,
        v50,
        v51);

      uint64_t v6 = v42;
      goto LABEL_20;
    }
    uint64_t v15 = a3;
    uint64_t v16 = *(void **)((char *)v39 + (void)a3);
    uint64_t v17 = *a4;
    id v18 = v44;
    objc_msgSend(v16, sel_analyzeAudioBuffer_atAudioFramePosition_, v14, v17);
    unsigned int v19 = objc_msgSend(v14, sel_frameLength);
    if (__OFADD__(*a4, v19)) {
      goto LABEL_22;
    }
    id v9 = v14;
    *a4 += v19;
    uint64_t v6 = (HIDWORD(v41) - v13);
    if (HIDWORD(v41) < v13) {
      goto LABEL_23;
    }
    id v20 = objc_msgSend(v7, sel_length);
    if (v20 == objc_msgSend(v7, sel_framePosition)) {
      break;
    }
    a3 = v15;
    if (*((unsigned char *)v38 + a2)) {
      break;
    }
  }
  while (v6);

  a3 = v9;
LABEL_20:

  return v6;
}

void sub_1DCA9EB50(uint64_t a1@<X8>)
{
  int v3 = *(void **)(v1 + OBJC_IVAR____SNAudioFileAnalyzer_audioFile);
  id v4 = objc_msgSend(v3, sel_fileFormat);
  objc_msgSend(v4, sel_sampleRate);
  double v6 = v5;

  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 2147483650.0)
  {
    uint64_t v7 = sub_1DCB88628();
    int v9 = v8;
    uint64_t v11 = v10;
    unint64_t v12 = HIDWORD(v8);
    objc_msgSend(v3, sel_length);
    uint64_t v13 = sub_1DCB88628();
    *(void *)a1 = v7;
    *(_DWORD *)(a1 + 8) = v9;
    *(_DWORD *)(a1 + 12) = v12;
    *(void *)(a1 + 16) = v11;
    *(void *)(a1 + 24) = v13;
    *(_DWORD *)(a1 + 32) = v14;
    *(_DWORD *)(a1 + 36) = v15;
    *(void *)(a1 + 40) = v16;
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1DCA9EC58(CMTimeValue *a1)
{
  uint64_t v2 = v1;
  id v4 = *(void **)&v2[OBJC_IVAR____SNAudioFileAnalyzer_audioFile];
  id v5 = objc_msgSend(v4, sel_framePosition);
  id result = objc_msgSend(v4, sel_length);
  if ((uint64_t)v5 < (uint64_t)result)
  {
    id v7 = objc_msgSend(v4, sel_fileFormat);
    objc_msgSend(v7, sel_sampleRate);
    double v9 = v8;

    if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
    {
      if (v9 > -2147483650.0)
      {
        if (v9 < 2147483650.0)
        {
          CMTimeValue v10 = a1[1];
          CMTimeEpoch v11 = a1[2];
          time.CMTimeValue value = *a1;
          *(void *)&time.timescale = v10;
          time.CMTimeEpoch epoch = v11;
          CMTimeConvertScale(&v20, &time, (int)v9, kCMTimeRoundingMethod_RoundAwayFromZero);
          CMTimeValue value = v20.value;
          time.CMTimeValue value = sub_1DCB883C8();
          time.timescale = v13;
          time.flags = v14;
          time.CMTimeEpoch epoch = v15;
          CMTimeConvertScale(&v20, &time, (int)v9, kCMTimeRoundingMethod_RoundTowardZero);
          CMTimeValue v16 = v20.value;
          objc_msgSend(v4, sel_setFramePosition_, value);
          time.CMTimeValue value = (CMTimeValue)objc_msgSend(v4, sel_framePosition);
          BOOL v17 = __OFSUB__(v16, value);
          unint64_t v18 = v16 - value;
          if (!v17)
          {
            if ((v18 & 0x8000000000000000) == 0 && !HIDWORD(v18))
            {
              unsigned int v19 = v2;
              sub_1DCA9E7DC(v18, (uint64_t)v19, v19, &time.value);
              objc_msgSend(v4, sel_setFramePosition_, objc_msgSend(v4, sel_length));
              return objc_msgSend(*(id *)&v19[OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer], sel_completeAnalysis);
            }
LABEL_14:
            sub_1DC8AF148();
            id result = (id)sub_1DCB88C58();
            __break(1u);
            return result;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

id sub_1DCA9EF18()
{
  sub_1DCA9EB50((uint64_t)v1);
  return sub_1DCA9EC58(v1);
}

uint64_t sub_1DCA9EF8C(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    id v5 = sub_1DCA9FBF8;
  }
  else
  {
    id v5 = (uint64_t (*)(unsigned __int8 *))nullsub_1;
    uint64_t v4 = 0;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  sub_1DC8BA198(a1);
  sub_1DCA9F068((uint64_t)sub_1DCA9FBC0, v6);

  return swift_release();
}

uint64_t sub_1DCA9F068(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1DCB87588();
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC8A22D0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1DCB875B8();
  sub_1DC89D4E0();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1DC89D970();
  BOOL v17 = (void *)swift_allocObject();
  void v17[2] = v2;
  v17[3] = a1;
  void v17[4] = a2;
  aBlock[4] = sub_1DCA9FC64;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC9C881C;
  aBlock[3] = &unk_1F37FAB98;
  unint64_t v18 = _Block_copy(aBlock);
  id v19 = v2;
  swift_retain();
  sub_1DCB875A8();
  sub_1DCA9FC88((unint64_t *)&unk_1EAA9E710, MEMORY[0x1E4FBCB00]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9F660);
  sub_1DC8C19F0((unint64_t *)&qword_1EAA9E720, (uint64_t *)&unk_1EAA9F660);
  sub_1DCB88928();
  MEMORY[0x1E01A74F0](0, v3, v12, v18);
  _Block_release(v18);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v13);
  return swift_release();
}

uint64_t sub_1DCA9F378(uint64_t a1, uint64_t (*a2)(BOOL))
{
  sub_1DCA9EB50((uint64_t)v5);
  sub_1DCA9EC58(v5);
  return a2((*(unsigned char *)(a1 + OBJC_IVAR____SNAudioFileAnalyzer_wasCancelled) & 1) == 0);
}

void sub_1DCA9F3E4()
{
  *(unsigned char *)(v0 + OBJC_IVAR____SNAudioFileAnalyzer_wasCancelled) = 1;
}

uint64_t sub_1DCA9F41C(uint64_t a1, uint64_t a2)
{
  sub_1DC87E920(a1, (uint64_t)v5);
  if (!v6) {
    goto LABEL_7;
  }
  sub_1DC87E988((uint64_t *)&unk_1EAA9CBA0);
  if ((sub_1DC8C2094() & 1) == 0) {
    goto LABEL_8;
  }
  sub_1DC87E920(a2, (uint64_t)v5);
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_7:
    sub_1DC9AEC6C((uint64_t)v5, &qword_1EAA9CAB0);
    goto LABEL_8;
  }
  sub_1DC87E988(&qword_1EAA9D110);
  if (sub_1DC8C2094())
  {
    sub_1DCA9F52C(v4, v4);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
LABEL_8:
  sub_1DCA9FAEC();
  swift_allocError();
  return swift_willThrow();
}

id sub_1DCA9F52C(uint64_t a1, uint64_t a2)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer);
  v7[0] = 0;
  if (objc_msgSend(v4, sel_addRequest_withObserver_error_, a1, a2, v7)) {
    return v7[0];
  }
  id v6 = v7[0];
  sub_1DCB86898();

  return (id)swift_willThrow();
}

uint64_t sub_1DCA9F6F0(uint64_t a1)
{
  sub_1DC87E920(a1, (uint64_t)v4);
  if (!v5) {
    return sub_1DC9AEC6C((uint64_t)v4, &qword_1EAA9CAB0);
  }
  sub_1DC87E988((uint64_t *)&unk_1EAA9CBA0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer), sel_removeRequest_, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1DCA9F790(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer), sel_removeRequest_, a1);
}

id sub_1DCA9F824()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____SNAudioFileAnalyzer_streamAnalyzer), sel_removeAllRequests);
}

uint64_t sub_1DCA9F8EC()
{
  uint64_t v0 = (void *)sub_1DC8BF008();
  uint64_t v1 = sub_1DC8BEDBC();

  return v1;
}

id _SNAudioFileAnalyzer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void _SNAudioFileAnalyzer.init()()
{
}

id _SNAudioFileAnalyzer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1DCA9FA44(uint64_t a1, uint64_t a2)
{
  return sub_1DCA9F52C(a1, a2);
}

id sub_1DCA9FA68(uint64_t a1)
{
  return sub_1DCA9F790(a1);
}

id sub_1DCA9FA8C()
{
  return sub_1DCA9F824();
}

uint64_t type metadata accessor for _SNAudioFileAnalyzer()
{
  return self;
}

uint64_t method lookup function for _SNAudioFileAnalyzer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _SNAudioFileAnalyzer);
}

unint64_t sub_1DCA9FAEC()
{
  unint64_t result = qword_1EAAA7538;
  if (!qword_1EAAA7538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7538);
  }
  return result;
}

uint64_t sub_1DCA9FB38()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1DCA9FB70(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1DCA9FB88()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA9FBC0(char a1)
{
  objc_super v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_1DCA9FBF8(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1DCA9FC24()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA9FC64()
{
  return sub_1DCA9F378(*(void *)(v0 + 16), *(uint64_t (**)(BOOL))(v0 + 24));
}

uint64_t sub_1DCA9FC70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCA9FC80()
{
  return swift_release();
}

uint64_t sub_1DCA9FC88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for _SNAudioFileAnalyzer.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA9FD6CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for _SNAudioFileAnalyzer.DomainError()
{
  return &type metadata for _SNAudioFileAnalyzer.DomainError;
}

unint64_t sub_1DCA9FDA8()
{
  unint64_t result = qword_1EAAA7540[0];
  if (!qword_1EAAA7540[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA7540);
  }
  return result;
}

uint64_t sub_1DCA9FDF8()
{
  return v0;
}

uint64_t sub_1DCA9FE10()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_1DCA9FE28()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1DCA9FE48()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCA9FF00()
{
  sub_1DC886900();
  long long v2 = v1[1];
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v2;
  *(_OWORD *)(v0 + 48) = v1[2];
  id v6 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_1DC8EB78C;
  return v6(v0 + 16);
}

uint64_t sub_1DCA9FFE4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *int v3 = v2;
  v3[1] = sub_1DC8EB5B8;
  return v5(v2 + 16);
}

uint64_t sub_1DCAA00C0(_OWORD *a1, int *a2)
{
  long long v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1DC8EB78C;
  return v6(v2 + 16);
}

uint64_t sub_1DCAA01A8(_OWORD *a1, int *a2)
{
  long long v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1DC8EB944;
  return v6(v2 + 16);
}

uint64_t sub_1DCAA0290()
{
  sub_1DC886900();
  *(void *)(v0 + 16) = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *long long v3 = v0;
  v3[1] = sub_1DC8EB41C;
  return v5(v0 + 16);
}

uint64_t sub_1DCAA0368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1DCAA11B4(a1, a2, a3);
  return v6;
}

uint64_t sub_1DCAA03C0()
{
  sub_1DC883FB8();
  uint64_t v2 = *v0;
  uint64_t v3 = v0[1];
  uint64_t v4 = sub_1DC886810();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = &unk_1EAAA76D0;
  *(void *)(v5 + 24) = v4;
  uint64_t v17 = sub_1DC87E988(&qword_1EAAA76E8);
  unint64_t v18 = sub_1DCA3F428(&qword_1EAAA76F0, &qword_1EAAA76E8);
  uint64_t v15 = &unk_1EAAA76E0;
  uint64_t v16 = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DC8848AC();
  swift_release();
  if (!v1)
  {
    sub_1DC8818D0((uint64_t)&v15);
    swift_release();
    swift_release();
    uint64_t v7 = v0[2];
    uint64_t v6 = v0[3];
    uint64_t v8 = sub_1DC886810();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v6;
    uint64_t v9 = sub_1DC886810();
    *(void *)(v9 + 16) = &unk_1EAAA7700;
    *(void *)(v9 + 24) = v8;
    uint64_t v17 = sub_1DC87E988(&qword_1EAAA7718);
    unint64_t v18 = sub_1DCA3F428(&qword_1EAAA7720, &qword_1EAAA7718);
    uint64_t v15 = &unk_1EAAA7710;
    uint64_t v16 = v9;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC8848AC();
    swift_release();
    sub_1DC8818D0((uint64_t)&v15);
    swift_release();
    swift_release();
    uint64_t v12 = v0[4];
    uint64_t v11 = v0[5];
    uint64_t v13 = sub_1DC886810();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = v11;
    uint64_t v14 = sub_1DC886810();
    *(void *)(v14 + 16) = &unk_1EAAA7730;
    *(void *)(v14 + 24) = v13;
    uint64_t v17 = sub_1DC87E988(&qword_1EAAA7748);
    unint64_t v18 = sub_1DCAA34E8();
    uint64_t v15 = &unk_1EAAA7740;
    uint64_t v16 = v14;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC8848AC();
    swift_release();
  }
  sub_1DC8818D0((uint64_t)&v15);
  swift_release_n();
  return swift_release();
}

uint64_t sub_1DCAA06A4(_OWORD *a1, int *a2)
{
  long long v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DC8ED530;
  return v6(v2 + 16);
}

uint64_t sub_1DCAA078C(uint64_t *a1, int *a2)
{
  uint64_t v3 = *a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DC8D78C0;
  return v6(v3);
}

uint64_t sub_1DCAA0864()
{
  sub_1DC886900();
  *(void *)(v0 + 64) = v1;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC8FC064;
  return sub_1DCAA0918();
}

uint64_t sub_1DCAA0918()
{
  sub_1DC8867A8();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DCAA09A8;
  return sub_1DC964B20();
}

uint64_t sub_1DCAA09A8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DCAA0A8C()
{
  sub_1DC8867A8();
  uint64_t v11 = (char *)&dword_1EAA9F558 + dword_1EAA9F558;
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DCAA0B30;
  uint64_t v9 = (uint64_t (*)(void))sub_1DCAA37E4((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, (uint64_t)v11);
  return v9();
}

uint64_t sub_1DCAA0B30()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  void v7[8] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[9] = v3;
    v7[10] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DCAA0C24()
{
  sub_1DC886900();
  uint64_t v1 = (int8x16_t *)sub_1DC886810();
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 72), *(int8x16_t *)(v0 + 72), 8uLL);
  swift_release();
  uint64_t v2 = sub_1DC886810();
  *(void *)(v0 + 88) = v2;
  *(void *)(v2 + 16) = &unk_1EAAA7670;
  *(void *)(v2 + 24) = v1;
  sub_1DCAA37C0();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DCAA0D14;
  uint64_t v11 = (uint64_t (*)(void))sub_1DCAA37E4((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v13);
  return v11();
}

uint64_t sub_1DCAA0D14()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[13] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[14] = v3;
    v7[15] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DCAA0E08()
{
  sub_1DC886900();
  uint64_t v1 = (int8x16_t *)sub_1DC886810();
  v1[1] = vextq_s8(v0[7], v0[7], 8uLL);
  swift_release();
  uint64_t v2 = sub_1DC886810();
  v0[8].i64[0] = v2;
  *(void *)(v2 + 16) = &unk_1EAAA7690;
  *(void *)(v2 + 24) = v1;
  sub_1DCAA37C0();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8].i64[1] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DCAA0EF8;
  uint64_t v11 = (uint64_t (*)(void))sub_1DCAA37E4((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v13);
  return v11();
}

uint64_t sub_1DCAA0EF8()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88678C();
  *uint64_t v10 = v9;
  v7[18] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[19] = v3;
    v7[20] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DCAA0FEC()
{
  sub_1DC88688C();
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = (int8x16_t *)sub_1DC886810();
  v4[1] = vextq_s8(*(int8x16_t *)(v0 + 152), *(int8x16_t *)(v0 + 152), 8uLL);
  swift_release_n();
  swift_release();
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = &unk_1EAAA76B0;
  *(void *)(v5 + 24) = v4;
  swift_release();
  swift_release();
  *uint64_t v3 = &unk_1EAAA7680;
  v3[1] = v2;
  v3[2] = &unk_1EAAA76A0;
  _OWORD v3[3] = v1;
  void v3[4] = &unk_1EAAA76C0;
  v3[5] = v5;
  sub_1DC8BAB84();
  return v6();
}

uint64_t sub_1DCAA10FC()
{
  sub_1DC8867A8();
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC9C03BC;
  return sub_1DCAA0864();
}

uint64_t sub_1DCAA119C()
{
  return sub_1DCAA03C0();
}

uint64_t *sub_1DCAA11B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  swift_defaultActor_initialize();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v7 + 80) - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 104), a1);
  uint64_t v8 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 112));
  *uint64_t v8 = a2;
  v8[1] = a3;
  return v3;
}

uint64_t sub_1DCAA1290(uint64_t a1)
{
  void v2[8] = a1;
  v2[9] = v1;
  sub_1DC89F6D8();
  v2[10] = v3;
  return sub_1DC99A434((uint64_t)sub_1DCAA12BC, v4);
}

uint64_t sub_1DCAA12BC()
{
  sub_1DC8867A8();
  uint64_t v1 = *(_OWORD **)(v0 + 64);
  long long v3 = v1[1];
  long long v2 = v1[2];
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v3;
  *(_OWORD *)(v0 + 48) = v2;
  uint64_t v4 = sub_1DCB871B8();
  if (swift_weakLoadStrong())
  {
    sub_1DCA3E430(v4);
    swift_release();
  }
  sub_1DC8BAB84();
  return v5();
}

uint64_t sub_1DCAA1384()
{
  sub_1DC8867A8();
  v1[7] = v2;
  v1[8] = v0;
  sub_1DC89F6D8();
  v1[9] = v3;
  uint64_t v4 = *v0;
  v1[10] = *v0;
  v1[11] = *(void *)(v4 + 80);
  sub_1DC88D538();
  v1[12] = v5;
  v1[13] = *(void *)(v6 + 64);
  v1[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCAA1460, v0, 0);
}

uint64_t sub_1DCAA1460()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v15 = v0[9];
  uint64_t v6 = (_OWORD *)v0[7];
  uint64_t v7 = (uint64_t *)(v0[8] + *(void *)(*(void *)v0[8] + 112));
  uint64_t v17 = *v7;
  uint64_t v16 = v7[1];
  (*(void (**)(uint64_t))(v4 + 16))(v2);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v9 = (v1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v3;
  *(void *)(v10 + 24) = *(void *)(v5 + 88);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v8, v2, v3);
  *(void *)(v10 + v9) = v15;
  uint64_t v11 = type metadata accessor for CombineSubscriptionFromXPCAdapter();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v12 = sub_1DCA3D774(v6, v17, v16, (uint64_t)&unk_1EAAA7798, v10);
  swift_weakAssign();
  v0[5] = v11;
  v0[6] = sub_1DCAA3748(&qword_1EAAA77A0, 255, (void (*)(uint64_t))type metadata accessor for CombineSubscriptionFromXPCAdapter);
  v0[2] = v12;
  swift_retain();
  sub_1DCB871A8();
  swift_release();
  sub_1DC8818D0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v13();
}

uint64_t sub_1DCAA16CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1DCAA16F0, 0, 0);
}

uint64_t sub_1DCAA16F0()
{
  sub_1DC8867A8();
  sub_1DCAA174C();
  sub_1DC8BAB84();
  return v0();
}

uint64_t sub_1DCAA174C()
{
  return sub_1DCB87198();
}

uint64_t sub_1DCAA1794(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_1DC89F6D8();
  v2[4] = v3;
  return sub_1DC99A434((uint64_t)sub_1DCAA17C0, v4);
}

uint64_t sub_1DCAA17C0()
{
  sub_1DC8867A8();
  sub_1DCAA174C();
  sub_1DC8BAB84();
  return v0();
}

uint64_t sub_1DCAA1834()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 104));
  swift_release();
  swift_weakDestroy();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1DCAA18E8()
{
  sub_1DCAA1834();

  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for CombineSubscriberToXPCAdapterImpl()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCAA192C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  long long v4 = a1[1];
  *(_OWORD *)(v3 + 16) = *a1;
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = a1[2];
  *(void *)(v3 + 64) = a2;
  *(void *)(v3 + 72) = a3;
  type metadata accessor for AsyncDispatchQueue();
  swift_allocObject();
  *(void *)(v3 + 80) = sub_1DCA1386C();
  return v3;
}

uint64_t sub_1DCAA1984(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1DC8B9960(a1, (uint64_t)v10);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  type metadata accessor for CombineSubscriptionToXPCAdapterImpl();
  swift_allocObject();
  swift_retain();
  uint64_t v5 = sub_1DCA3CFDC((uint64_t)v10, v3, v4);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 56);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v2 + 40);
  *(void *)(v8 + 56) = v7;
  *(void *)(v8 + 64) = &unk_1EAAA7620;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = &unk_1EAAA7630;
  *(void *)(v8 + 88) = v5;
  *(void *)(v8 + 96) = &unk_1EAAA7640;
  *(void *)(v8 + 104) = v5;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCA13770((uint64_t)&unk_1EAAA7650, v8);
  swift_release_n();
  return swift_release();
}

uint64_t sub_1DCAA1ADC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DC8D78C0;
  return sub_1DCA3D604(a1);
}

uint64_t sub_1DCAA1B74()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8D78C0;
  return sub_1DCA3D6A8();
}

uint64_t sub_1DCAA1C04(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1DCAA1C24, a1, 0);
}

uint64_t sub_1DCAA1C24()
{
  sub_1DC8867A8();
  sub_1DC881A8C((void *)(*(void *)(v0 + 16) + 112), *(void *)(*(void *)(v0 + 16) + 136));
  sub_1DCB871C8();
  sub_1DC8BAB84();
  return v1();
}

uint64_t sub_1DCAA1C98(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(a1 + 16) + **(int **)(a1 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DC8ECCC4;
  return v6(a2);
}

uint64_t sub_1DCAA1D6C()
{
  sub_1DCAA37F4();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(v4 + 56) = v2;
  long long v5 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)v0;
  *(_OWORD *)(v4 + 80) = v5;
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCAA268C((uint64_t *)v0);
  sub_1DCA13770((uint64_t)&unk_1EAAA7610, v4);
  swift_release();

  return sub_1DCB87208();
}

uint64_t sub_1DCAA1E44(void *a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*a1 + *(int *)*a1);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DCAA1F18;
  return v6(a2);
}

uint64_t sub_1DCAA1F18()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *long long v5 = v4;
  *(void *)(v6 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    sub_1DC8BA978();
    return v10();
  }
}

uint64_t sub_1DCAA2010()
{
  sub_1DCAA37F4();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(v4 + 56) = v2;
  *(void *)(v4 + 64) = v0;
  id v5 = v0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCA13770((uint64_t)&unk_1EAAA7600, v4);

  return swift_release();
}

uint64_t sub_1DCAA20DC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1DCAA20FC, 0, 0);
}

uint64_t sub_1DCAA20FC()
{
  sub_1DC886900();
  uint64_t v1 = *(int **)(*(void *)(v0 + 16) + 32);
  id v2 = *(id *)(v0 + 24);
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DCAA21D8;
  uint64_t v4 = *(void *)(v0 + 24);
  return v6(v4);
}

uint64_t sub_1DCAA21D8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *id v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DCAA22B4()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void **)(v0 + 40);

  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DCAA2318()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DCAA2370()
{
  sub_1DCAA2318();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CombineSubscriberFromXPCAdapter()
{
  return self;
}

ValueMetadata *type metadata accessor for XPCSubscriber()
{
  return &type metadata for XPCSubscriber;
}

uint64_t sub_1DCAA23D8(uint64_t a1)
{
  return sub_1DCAA1984(a1);
}

uint64_t sub_1DCAA23FC()
{
  return sub_1DCAA1D6C();
}

uint64_t sub_1DCAA243C()
{
  return sub_1DCAA2010();
}

uint64_t sub_1DCAA2464(uint64_t a1, uint64_t a2)
{
  return sub_1DCAA3748(&qword_1EAAA75F0, a2, (void (*)(uint64_t))type metadata accessor for CombineSubscriberFromXPCAdapter);
}

uint64_t sub_1DCAA24AC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCAA24FC()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D6930;
  uint64_t v3 = sub_1DC8F0358();
  return sub_1DCAA20DC(v3, v4);
}

uint64_t sub_1DCAA2588()
{
  swift_release();
  swift_release();
  swift_release();
  unint64_t v1 = v0[9];
  if (v1 >> 60 != 15) {
    sub_1DC881920(v0[8], v1);
  }
  if (v0[10])
  {
    swift_release();
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1DCAA2600()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = (void *)sub_1DC8F0358();
  return sub_1DCAA1E44(v3, v4);
}

uint64_t *sub_1DCAA268C(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  sub_1DC8B9C40(*a1, a1[1]);
  sub_1DC884F60(v2);
  return a1;
}

uint64_t sub_1DCAA26E8()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0358();
  return sub_1DCAA1ADC(v3);
}

uint64_t sub_1DCAA2770()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  return sub_1DCAA1B74();
}

uint64_t sub_1DCAA27F8()
{
  sub_1DC8867A8();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F01B8(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC8D78C0;
  return sub_1DCAA1C04(v0);
}

uint64_t sub_1DCAA2880()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCAA28E0()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0358();
  return sub_1DCAA1C98(v3, v4);
}

uint64_t sub_1DCAA296C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1DC8D6930;
  return sub_1DCA9FFE4(v5, a3);
}

uint64_t sub_1DCAA2A18(uint64_t a1, _OWORD *a2, int *a3)
{
  long long v5 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = a2[2];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1DC8F0078;
  return sub_1DCAA00C0((_OWORD *)(v3 + 16), a3);
}

uint64_t sub_1DCAA2AD4(uint64_t a1, _OWORD *a2, int *a3)
{
  long long v5 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = a2[2];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1DC8F0078;
  return sub_1DCAA01A8((_OWORD *)(v3 + 16), a3);
}

uint64_t sub_1DCAA2B90()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DC8D78C0;
  return sub_1DC8EB4F8();
}

uint64_t sub_1DCAA2C3C(_OWORD *a1)
{
  long long v2 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = a1[2];
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DC8F0078;
  return sub_1DC8EB6B0();
}

uint64_t sub_1DCAA2CF8(_OWORD *a1)
{
  long long v2 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = a1[2];
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DC8F0078;
  return sub_1DC8EB868();
}

uint64_t sub_1DCAA2DB4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCAA2DEC()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA2E80()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA2F14()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA2FA8()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA303C()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA30D0()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA3164()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D6930;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA31F8()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC8BAA9C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8BA880();
  sub_1DC8BA86C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1DCAA3290()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA3324()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC8BAA9C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8BA880();
  sub_1DC8BA86C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1DCAA33BC()
{
  sub_1DC886900();
  sub_1DC902A84();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC8F0290();
  return v4(v3);
}

uint64_t sub_1DCAA3450()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC8BAA9C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8BA880();
  sub_1DC8BA86C();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t sub_1DCAA34E8()
{
  unint64_t result = qword_1EAAA7750;
  if (!qword_1EAAA7750)
  {
    sub_1DC8863A8(&qword_1EAAA7748);
    sub_1DCAA3564();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7750);
  }
  return result;
}

unint64_t sub_1DCAA3564()
{
  unint64_t result = qword_1EAAA7758;
  if (!qword_1EAAA7758)
  {
    sub_1DC8863A8(&qword_1EAAA7760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7758);
  }
  return result;
}

uint64_t sub_1DCAA35D0()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1DCAA3664()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC88D538();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC8F01B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC8BA86C();
  return sub_1DCAA16CC(v3, v4, v5);
}

uint64_t sub_1DCAA3748(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCAA37C0()
{
  return swift_retain();
}

uint64_t sub_1DCAA37E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t static SNUserDefaults.overrideXSupportEnabled(userDefaultsSnapshot:)(uint64_t a1)
{
  if (!a1)
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();
  }
  swift_bridgeObjectRetain();
  id v2 = sub_1DCAA5808();
  if (v1)
  {

    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    id v5 = v2;
    char v6 = v3;
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return v5 != 0;
    }
  }
}

double sub_1DCAA391C()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC8E7B68();
  sub_1DCAA4AFC();
  sub_1DCAA5824();
  double result = *(double *)&v1;
  if (v0) {
    return 5.0;
  }
  return result;
}

double sub_1DCAA3A10()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC8E7B68();
  sub_1DCAA4AFC();
  sub_1DCAA5824();
  double result = *(double *)&v1;
  if (v0) {
    return 0.0;
  }
  return result;
}

BOOL static SNUserDefaults.bypassMovieRemixMusicDetection(userDefaultsSnapshot:)(uint64_t a1)
{
  if (!a1)
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();
  }
  swift_bridgeObjectRetain();
  sub_1DCAA5808();
  if (v1)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1DCAA579C();
    return (v2 & 1) == 0 && a1 != 0;
  }
}

BOOL sub_1DCAA3C04()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v2 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC8E7B68();
  sub_1DCAA58C4();
  if (v0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1DCAA5824();
    return (v1 & 1) == 0 && v2 != 0;
  }
}

uint64_t sub_1DCAA3CE8()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DCAA4D8C();
  sub_1DC8E7B68();
  sub_1DCAA4C0C();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return sub_1DC981E74();
}

BOOL static SNUserDefaults.bypassExclaves(userDefaultsSnapshot:)(uint64_t a1)
{
  if (!a1)
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v3 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();
  }
  swift_bridgeObjectRetain();
  sub_1DCAA5868();
  sub_1DCAA49F8();
  sub_1DCAA579C();
  return (v1 & 1) == 0 && a1 != 0;
}

uint64_t static SNUserDefaults.ambientMusicDetectionShortThresholdHigh(userDefaultsSnapshot:)(uint64_t a1)
{
  return sub_1DCAA57B8(a1);
}

uint64_t static SNUserDefaults.ambientMusicDetectionLongThresholdHigh(userDefaultsSnapshot:)(uint64_t a1)
{
  return sub_1DCAA57B8(a1);
}

uint64_t static SNUserDefaults.ambientMusicDetectionThresholdLow(userDefaultsSnapshot:)(uint64_t a1)
{
  return sub_1DCAA57B8(a1);
}

uint64_t sub_1DCAA3F40(uint64_t a1)
{
  if (!a1)
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();
  }
  swift_bridgeObjectRetain();
  sub_1DC981E74();
  uint64_t v2 = sub_1DCAA4AFC();
  swift_bridgeObjectRelease();
  return v2;
}

BOOL static SNUserDefaults.isHomeSoundRecognitionOptimizationEnabled(userDefaultsSnapshot:)(uint64_t a1)
{
  if (!a1)
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();
  }
  swift_bridgeObjectRetain();
  sub_1DCAA5808();
  if (v1)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1DCAA579C();
    return (v2 & 1) == 0 && a1 != 0;
  }
}

uint64_t *sub_1DCAA4154()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  id v1 = sub_1DCAA4C0C();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v3) {
    return v1;
  }
  else {
    return 0;
  }
}

unint64_t SNMicrophoneInjectionFilePathKey.getter()
{
  return sub_1DCAA57C0(23);
}

id sub_1DCAA4270()
{
  uint64_t v0 = sub_1DCB87938();
  uint64_t v2 = v1;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  id result = sub_1DCAA5738(v0, v2);
  if (result) {
    qword_1EAA9CAB8 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

id static SNUserDefaults.singleton.getter()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EAA9CAB8;

  return v0;
}

uint64_t *sub_1DCAA4330(uint64_t a1)
{
  sub_1DC87E9DC(a1, (uint64_t)&v6);
  if (sub_1DCAA57C8()) {
    return (uint64_t *)v5;
  }
  sub_1DC87E9DC(a1, (uint64_t)&v6);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  if (sub_1DCAA57C8())
  {
    id v3 = objc_msgSend(v5, sel_stringValue);
    uint64_t v2 = (uint64_t *)sub_1DCB87938();
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DCAA58E0();
    sub_1DCAA58AC();
    uint64_t v2 = &v6;
    sub_1DCB87A18();
    sub_1DCB88C08();
    sub_1DC8AF09C(v6, (uint64_t)"com.apple.SoundAnalysis");
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v2;
}

uint64_t *sub_1DCAA4478(uint64_t a1)
{
  sub_1DC87E9DC(a1, (uint64_t)&v6);
  if (sub_1DCAA57C8())
  {
    uint64_t v2 = (uint64_t *)sub_1DC91A908(v4, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DC87E9DC(a1, (uint64_t)&v6);
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    if (sub_1DCAA57C8())
    {
      return (uint64_t *)v4;
    }
    else
    {
      type metadata accessor for SNError();
      sub_1DCAA58E0();
      sub_1DCAA58AC();
      uint64_t v2 = &v6;
      sub_1DCB87A18();
      sub_1DCB88C08();
      sub_1DC8AF09C(v6, (uint64_t)"com.apple.SoundAnalysis");
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
  }
  return v2;
}

uint64_t sub_1DCAA45A4(uint64_t a1)
{
  sub_1DC87E9DC(a1, (uint64_t)&v39);
  sub_1DC87E988(&qword_1EAAA10B0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v37 + 16);
    if (v2)
    {
      uint64_t v38 = MEMORY[0x1E4FBC860];
      sub_1DC897E1C();
      uint64_t v36 = v37;
      for (uint64_t i = v37 + 32; ; i += 32)
      {
        sub_1DC87E9DC(i, (uint64_t)&v39);
        uint64_t v4 = sub_1DCAA4478((uint64_t)&v39);
        if (v1) {
          break;
        }
        uint64_t v5 = v4;
        id v6 = objc_allocWithZone(NSNumber);
        uint64_t v7 = v5;
        uint64_t v8 = (uint64_t *)objc_msgSend(v6, sel_initWithLongLong_, 0x7FFFFFFFFFFFFFFFLL);
        uint64_t v9 = (uint64_t *)objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, 0x8000000000000000);
        id v10 = objc_msgSend(v7, sel_compare_, v8);
        uint64_t v11 = v8;
        if (v10 != (id)1)
        {
          if (objc_msgSend(v7, sel_compare_, v9) == (id)-1) {
            uint64_t v11 = v9;
          }
          else {
            uint64_t v11 = v7;
          }
        }
        id v12 = objc_msgSend(v11, sel_longLongValue, v36);

        id v13 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v12);
        id v14 = objc_msgSend(v7, sel_longLongValue);
        if (v14 != objc_msgSend(v13, sel_longLongValue)
          || (objc_msgSend(v7, sel_doubleValue), double v16 = v15, objc_msgSend(v13, sel_doubleValue), v16 != v17))
        {

LABEL_21:
          type metadata accessor for SNError();
          sub_1DCB88A98();
          swift_bridgeObjectRelease();
          id v29 = objc_msgSend(v7, sel_description);
          sub_1DCB87938();

          sub_1DCB87A18();
          swift_bridgeObjectRelease();
          unint64_t v30 = sub_1DC931CFC();
          sub_1DCA14B2C(v30, v31, v32, v33, v34, 0x80000001DCB98A00);
          swift_bridgeObjectRelease();
          swift_willThrow();

          break;
        }
        unsigned int v18 = objc_msgSend(v7, sel_isEqual_, v13);

        if (!v18) {
          goto LABEL_21;
        }
        id v19 = objc_msgSend(v7, sel_integerValue);

        sub_1DC8818D0((uint64_t)&v39);
        uint64_t v20 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DC897E1C();
          uint64_t v20 = v38;
        }
        unint64_t v21 = *(void *)(v20 + 16);
        if (v21 >= *(void *)(v20 + 24) >> 1)
        {
          sub_1DC897E1C();
          uint64_t v20 = v38;
        }
        *(void *)(v20 + 16) = v21 + 1;
        *(void *)(v20 + 8 * v21 + 32) = v19;
        if (!--v2)
        {
          swift_bridgeObjectRelease();
          return v20;
        }
      }
      sub_1DC8818D0((uint64_t)&v39);
      uint64_t v20 = v38;
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v22 = type metadata accessor for SNError();
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_1DCB88A98();
    sub_1DC8E7B68();
    sub_1DCB87A18();
    sub_1DCB88C08();
    unint64_t v23 = v40;
    unint64_t v24 = sub_1DC931CFC();
    uint64_t v20 = v22;
    sub_1DCA14B2C(v24, v25, v26, v27, v28, v23);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v20;
}

id sub_1DCAA49F8()
{
  sub_1DCAA5934();
  if (v2)
  {
    sub_1DCAA57E8();
    unint64_t v3 = sub_1DCAA5904();
    if (v4) {
      sub_1DCAA584C(v3, v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)&v19[0]);
    }
    else {
      sub_1DCAA5840();
    }
    uint64_t v11 = swift_bridgeObjectRelease();
  }
  else
  {
    double v15 = sub_1DCAA5840();
  }
  sub_1DCAA591C(v11, v12, v13, v14, v15);
  if (!v21)
  {
    id v1 = 0;
    goto LABEL_12;
  }
  sub_1DC87E9CC(&v20, v19);
  double v16 = sub_1DCAA4478((uint64_t)v19);
  if (!v0)
  {
    double v17 = v16;
    sub_1DCA89A70();
    id v1 = objc_msgSend(v17, sel_integerValue);

    sub_1DC8818D0((uint64_t)v19);
LABEL_12:
    sub_1DC881978((uint64_t)v22);
    return v1;
  }
  sub_1DC8818D0((uint64_t)v19);
  sub_1DC881978((uint64_t)v22);
  return v1;
}

uint64_t sub_1DCAA4AFC()
{
  sub_1DCAA5934();
  if (v2)
  {
    sub_1DCAA57E8();
    unint64_t v3 = sub_1DCAA5904();
    if (v4) {
      sub_1DCAA584C(v3, v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)&v21[0]);
    }
    else {
      sub_1DCAA5840();
    }
    uint64_t v11 = swift_bridgeObjectRelease();
  }
  else
  {
    double v15 = sub_1DCAA5840();
  }
  sub_1DCAA591C(v11, v12, v13, v14, v15);
  if (!v23)
  {
    uint64_t v1 = 0;
    goto LABEL_12;
  }
  sub_1DC87E9CC(&v22, v21);
  double v16 = sub_1DCAA4478((uint64_t)v21);
  if (!v0)
  {
    double v17 = v16;
    sub_1DCA89970();
    objc_msgSend(v17, sel_doubleValue);
    uint64_t v19 = v18;

    sub_1DC8818D0((uint64_t)v21);
    uint64_t v1 = v19;
LABEL_12:
    sub_1DC881978((uint64_t)v24);
    return v1;
  }
  sub_1DC8818D0((uint64_t)v21);
  sub_1DC881978((uint64_t)v24);
  return v1;
}

uint64_t *sub_1DCAA4C0C()
{
  sub_1DCAA5934();
  if (v2)
  {
    sub_1DCAA57E8();
    unint64_t v3 = sub_1DCAA5904();
    if (v4) {
      sub_1DCAA584C(v3, v4, v5, v6, v7, v8, v9, v10, *(uint64_t *)&v18[0]);
    }
    else {
      sub_1DCAA5840();
    }
    uint64_t v11 = swift_bridgeObjectRelease();
  }
  else
  {
    double v15 = sub_1DCAA5840();
  }
  sub_1DCAA591C(v11, v12, v13, v14, v15);
  if (!v20)
  {
    uint64_t v1 = 0;
LABEL_12:
    sub_1DC881978((uint64_t)v21);
    return v1;
  }
  sub_1DC87E9CC(&v19, v18);
  double v16 = sub_1DCAA4330((uint64_t)v18);
  if (!v0)
  {
    uint64_t v1 = v16;
    sub_1DC8818D0((uint64_t)v18);
    goto LABEL_12;
  }
  sub_1DC8818D0((uint64_t)v18);
  sub_1DC881978((uint64_t)v21);
  return v1;
}

uint64_t sub_1DCAA4CD8()
{
  sub_1DCAA5934();
  if (v0)
  {
    sub_1DCAA57E8();
    unint64_t v1 = sub_1DCAA5904();
    if (v2) {
      sub_1DCAA584C(v1, v2, v3, v4, v5, v6, v7, v8, *(uint64_t *)&v16[0]);
    }
    else {
      sub_1DCAA5840();
    }
    uint64_t v9 = swift_bridgeObjectRelease();
  }
  else
  {
    double v13 = sub_1DCAA5840();
  }
  sub_1DCAA591C(v9, v10, v11, v12, v13);
  if (v18)
  {
    sub_1DC87E9CC(&v17, v16);
    uint64_t v14 = sub_1DCAA45A4((uint64_t)v16);
    sub_1DC8818D0((uint64_t)v16);
  }
  else
  {
    uint64_t v14 = 0;
  }
  sub_1DC881978((uint64_t)v19);
  return v14;
}

uint64_t sub_1DCAA4D8C()
{
  sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DCBC1910;
  unint64_t v1 = NSHomeDirectory();
  uint64_t v2 = sub_1DCB87938();
  uint64_t v4 = v3;

  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = 0x7972617262694CLL;
  *(void *)(v0 + 56) = 0xE700000000000000;
  *(void *)(v0 + 64) = 0x736568636143;
  *(void *)(v0 + 72) = 0xE600000000000000;
  *(void *)(v0 + 80) = 0xD000000000000018;
  *(void *)(v0 + 88) = 0x80000001DCB93290;
  strcpy((char *)(v0 + 96), "AudioCaptures");
  *(_WORD *)(v0 + 110) = -4864;
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_pathWithComponents_, v6);

  uint64_t v8 = sub_1DCB87938();
  return v8;
}

uint64_t sub_1DCAA4ED4()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DCAA4D8C();
  sub_1DC8E7B68();
  sub_1DCAA4C0C();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return sub_1DC981E74();
}

BOOL sub_1DCAA4FEC()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v2 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC8E7B68();
  sub_1DCAA58C4();
  if (v0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1DCAA5824();
    return (v1 & 1) == 0 && v2 != 0;
  }
}

uint64_t sub_1DCAA50D0()
{
  sub_1DCAA4C0C();
  if (!v1) {
    return 0;
  }
  sub_1DC89C89C(0, &qword_1EAAA77A8);
  sub_1DC981E74();
  uint64_t v0 = sub_1DCB883E8();
  swift_bridgeObjectRelease();
  return v0;
}

id sub_1DCAA5180()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC8E7B68();
  sub_1DCAA58C4();
  if (v0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1DCAA5824();
  }
  return v1;
}

uint64_t sub_1DCAA5264()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC8E7B68();
  uint64_t v1 = sub_1DCAA4CD8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static SNUserDefaults.keyBypassExclaves.getter()
{
  return sub_1DCAA5868();
}

uint64_t static SNUserDefaults.keyTuningEnabled.getter()
{
  return sub_1DCAA588C();
}

BOOL static SNUserDefaults.tuningEnabled(userDefaultsSnapshot:)(uint64_t a1)
{
  if (!a1)
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v3 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();
  }
  swift_bridgeObjectRetain();
  sub_1DCAA588C();
  sub_1DCAA49F8();
  sub_1DCAA579C();
  return (v1 & 1) == 0 && a1 != 0;
}

unint64_t static SNUserDefaults.keyEnableHomeSoundRecognitionOptimization.getter()
{
  return sub_1DCAA57C0(38);
}

unint64_t static SNUserDefaults.keyEnableHomeSoundRecognitionUltronReports.getter()
{
  return sub_1DCAA57C0(39);
}

BOOL static SNUserDefaults.homeSoundRecognitionUltronReportsEnabled(userDefaultsSnapshot:)(uint64_t a1)
{
  if (!a1)
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();
  }
  swift_bridgeObjectRetain();
  sub_1DCAA5808();
  if (v1)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1DCAA579C();
    return (v2 & 1) == 0 && a1 != 0;
  }
}

unint64_t static SNUserDefaults.keyOverrideXSupport.getter()
{
  return sub_1DCAA57C0(16);
}

unint64_t static SNUserDefaults.keyBypassLPPostProcessing.getter()
{
  return sub_1DCAA57C0(22);
}

BOOL static SNUserDefaults.isLPPostProcessingBypassed(userDefaultsSnapshot:)(uint64_t a1)
{
  if (!a1)
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();
  }
  swift_bridgeObjectRetain();
  sub_1DCAA5808();
  if (v1)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1DCAA579C();
    return (v2 & 1) == 0 && a1 != 0;
  }
}

unint64_t static SNUserDefaults.keyBypassMovieRemixMusicDetection.getter()
{
  return sub_1DCAA57C0(30);
}

unint64_t static SNUserDefaults.keyAmbientMusicDetectionShortThresholdHigh.getter()
{
  return sub_1DCAA57C0(39);
}

unint64_t static SNUserDefaults.keyAmbientMusicDetectionLongThresholdHigh.getter()
{
  return sub_1DCAA57C0(38);
}

unint64_t static SNUserDefaults.keyAmbientMusicDetectionThresholdLow.getter()
{
  return sub_1DCAA57C0(33);
}

ValueMetadata *type metadata accessor for SNUserDefaults()
{
  return &type metadata for SNUserDefaults;
}

id sub_1DCAA5738(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t sub_1DCAA579C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCAA57B8(uint64_t a1)
{
  return sub_1DCAA3F40(a1);
}

unint64_t sub_1DCAA57C0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t sub_1DCAA57C8()
{
  return swift_dynamicCast();
}

uint64_t sub_1DCAA57E8()
{
  return swift_bridgeObjectRetain();
}

id sub_1DCAA5808()
{
  return sub_1DCAA49F8();
}

uint64_t sub_1DCAA5824()
{
  return swift_bridgeObjectRelease();
}

double sub_1DCAA5840()
{
  return 0.0;
}

uint64_t sub_1DCAA584C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  uint64_t v11 = *(void *)(v9 + 56) + 32 * a1;
  return sub_1DC87E9DC(v11, (uint64_t)va);
}

uint64_t sub_1DCAA5868()
{
  return 0x7845737361707962;
}

uint64_t sub_1DCAA588C()
{
  return 0x7554656C62616E65;
}

unint64_t sub_1DCAA58AC()
{
  return 0xD000000000000021;
}

id sub_1DCAA58C4()
{
  return sub_1DCAA49F8();
}

uint64_t sub_1DCAA58E0()
{
  return sub_1DCB88A98();
}

unint64_t sub_1DCAA5904()
{
  return sub_1DC9637DC(v0, v1);
}

uint64_t sub_1DCAA591C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  return sub_1DC87E920((uint64_t)va1, (uint64_t)va);
}

char *sub_1DCAA5940(uint64_t a1)
{
  uint64_t v2 = sub_1DCB868E8();
  char v4 = sub_1DCAA59E4(v2, v3);
  if (v4 == 3)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v5 = 0;
    swift_willThrow();
    return (char *)swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = v4;
    swift_bridgeObjectRelease();
    return sub_1DCAA5ADC(a1, v7);
  }
}

uint64_t sub_1DCAA59E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = qword_1F37E7AD0;
  if (!qword_1F37E7AD0) {
    return 3;
  }
  uint64_t v5 = &byte_1F37E7AE0;
  while (1)
  {
    unsigned int v7 = *v5++;
    uint64_t v6 = v7;
    BOOL v8 = v7 == 1;
    if (v7 == 1) {
      uint64_t v9 = 0x636C65646F6D6C6DLL;
    }
    else {
      uint64_t v9 = 0x656C646E7562;
    }
    unint64_t v10 = 0xE800000000000000;
    if (!v8) {
      unint64_t v10 = 0xE600000000000000;
    }
    uint64_t v11 = v6 ? v9 : 0x6C65646F6D6C6DLL;
    unint64_t v12 = v6 ? v10 : 0xE700000000000000;
    if (v11 == a1 && v12 == a2) {
      break;
    }
    char v14 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v14) {
      return v6;
    }
    if (!--v2) {
      return 3;
    }
  }
  swift_bridgeObjectRelease();
  return v6;
}

char *sub_1DCAA5ADC(uint64_t a1, char a2)
{
  v31[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1DCB86A18();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)v31 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  double v13 = (char *)v31 - v12;
  MEMORY[0x1F4188790](v11);
  double v15 = (char *)v31 - v14;
  if (a2)
  {
    if (a2 == 1)
    {
      double v13 = (char *)sub_1DCAA5E84();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, a1, v5);
      id v16 = sub_1DCAA5EC4((uint64_t)v10);
      if (!v2) {
        return (char *)v16;
      }
    }
    else
    {
      uint64_t v24 = sub_1DC969B7C();
      if (!v2)
      {
        uint64_t v25 = v24;
        type metadata accessor for E5RTExecutionStream();
        double v13 = (char *)swift_allocObject();
        *((void *)v13 + 2) = v25;
        sub_1DCB868C8();
        sub_1DCB869C8();
        sub_1DCAA601C();
        v26();
        uint64_t v28 = sub_1DC969C30();
        type metadata accessor for E5RTExecutionStreamOperation();
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = v28;
        sub_1DC96BE9C(v29);
        sub_1DC969E30(v29);
      }
    }
  }
  else
  {
    long long v17 = self;
    uint64_t v18 = (void *)sub_1DCB86948();
    v31[0] = 0;
    id v19 = objc_msgSend(v17, sel_compileModelAtURL_error_, v18, v31);

    id v20 = v31[0];
    if (v19)
    {
      sub_1DCB869B8();
      id v21 = v20;

      sub_1DCAA5E84();
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v15, v5);
      long long v22 = (char *)sub_1DCAA5EC4((uint64_t)v13);
      if (!v2) {
        double v13 = v22;
      }
      sub_1DCAA601C();
      v23();
    }
    else
    {
      id v27 = v31[0];
      sub_1DCB86898();

      swift_willThrow();
    }
  }
  return v13;
}

unint64_t sub_1DCAA5E84()
{
  unint64_t result = qword_1EAA9C798;
  if (!qword_1EAA9C798)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAA9C798);
  }
  return result;
}

id sub_1DCAA5EC4(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)sub_1DCB86948();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_1DCB86A18();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_1DCB86898();

    swift_willThrow();
    uint64_t v9 = sub_1DCB86A18();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_1DCAA602C()
{
  return sub_1DCB891D8();
}

BOOL sub_1DCAA6114(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  __int16 v4 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(*(int32x4_t *)(a1 + 28), *(int32x4_t *)(a2 + 28))), 0xFuLL))) & (*(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4));
  BOOL v5 = *(float *)(a1 + 8) == *(float *)(a2 + 8) && *(float *)a1 == *(float *)a2;
  if ((v4 & (*(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
                            && *(_DWORD *)(a1 + 44) == *(_DWORD *)(a2 + 44)
                            && v5
                            && *(float *)(a1 + 12) == *(float *)(a2 + 12)
                            && *(float *)(a1 + 20) == *(float *)(a2 + 20))) == 1
    && ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0)
  {
    return *(_DWORD *)(a1 + 48) == *(_DWORD *)(a2 + 48);
  }
  return result;
}

uint64_t sub_1DCAA61E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x61426C654D6D756ELL && a2 == 0xEB0000000073646ELL;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x75716572466E696DLL && a2 == 0xEC00000079636E65;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x757165724678616DLL && a2 == 0xEC00000079636E65;
        if (v8 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x657079546C656DLL && a2 == 0xE700000000000000;
          if (v9 || (sub_1DCB89018() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6C69737045676F6CLL && a2 == 0xEA00000000006E6FLL;
            if (v10 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6C6F707265746E69 && a2 == 0xEF7A486E49657461;
              if (v11 || (sub_1DCB89018() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x74676E654C706F68 && a2 == 0xE900000000000068;
                if (v12 || (sub_1DCB89018() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x654C776F646E6977 && a2 == 0xEC0000006874676ELL;
                  if (v13 || (sub_1DCB89018() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x664F776F646E6977 && a2 == 0xEC00000074657366;
                    if (v14 || (sub_1DCB89018() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x74676E654C746666 && a2 == 0xE900000000000068;
                      if (v15 || (sub_1DCB89018() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x657366664F746666 && a2 == 0xE900000000000074;
                        if (v16 || (sub_1DCB89018() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB993B0)
                        {
                          swift_bridgeObjectRelease();
                          return 12;
                        }
                        else
                        {
                          char v17 = sub_1DCB89018();
                          swift_bridgeObjectRelease();
                          if (v17) {
                            return 12;
                          }
                          else {
                            return 13;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1DCAA679C()
{
  return 13;
}

uint64_t sub_1DCAA67A4(char a1)
{
  uint64_t result = 0x6152656C706D6173;
  switch(a1)
  {
    case 1:
      return 0x61426C654D6D756ELL;
    case 2:
      unsigned int v3 = 1181641069;
      return v3 | 0x7571657200000000;
    case 3:
      unsigned int v3 = 1182294381;
      return v3 | 0x7571657200000000;
    case 4:
      return 0x657079546C656DLL;
    case 5:
      return 0x6C69737045676F6CLL;
    case 6:
      return 0x6C6F707265746E69;
    case 7:
      unsigned int v4 = 1282436968;
      goto LABEL_13;
    case 8:
      return 0x654C776F646E6977;
    case 9:
      return 0x664F776F646E6977;
    case 10:
      unsigned int v4 = 1282696806;
LABEL_13:
      uint64_t result = v4 | 0x74676E6500000000;
      break;
    case 11:
      uint64_t result = 0x657366664F746666;
      break;
    case 12:
      uint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCAA6958(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA77F0);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(_DWORD *)(v1 + 4);
  int v17 = *(_DWORD *)(v1 + 16);
  int v18 = v9;
  int v10 = *(unsigned __int8 *)(v1 + 24);
  void v16[6] = *(_DWORD *)(v1 + 28);
  v16[7] = v10;
  int v11 = *(_DWORD *)(v1 + 32);
  uint64_t v16[4] = *(_DWORD *)(v1 + 36);
  void v16[5] = v11;
  v16[3] = *(_DWORD *)(v1 + 40);
  int v12 = *(_DWORD *)(v1 + 48);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAA75F8();
  sub_1DCB892B8();
  LOBYTE(v21) = 0;
  uint64_t v13 = v19;
  sub_1DCB88EF8();
  if (!v13)
  {
    int v14 = v17;
    LODWORD(v19) = v12;
    sub_1DCAA7920(1);
    sub_1DCAA7904();
    LOBYTE(v21) = 2;
    sub_1DCAA7944();
    LOBYTE(v21) = 3;
    sub_1DCAA7944();
    int v21 = v14;
    char v20 = 4;
    sub_1DC87E988(&qword_1EAAA77D0);
    sub_1DC8CC998(&qword_1EAAA77F8, &qword_1EAAA77D0);
    sub_1DCB88F18();
    LOBYTE(v21) = 5;
    sub_1DCAA7944();
    sub_1DCAA7920(6);
    sub_1DCB88ED8();
    sub_1DCAA7920(7);
    sub_1DCAA7904();
    sub_1DCAA7920(8);
    sub_1DCAA7904();
    sub_1DCAA7920(9);
    sub_1DCAA7904();
    sub_1DCAA7920(10);
    sub_1DCB88F58();
    sub_1DCAA7920(11);
    sub_1DCB88F28();
    int v21 = v19;
    char v20 = 12;
    sub_1DC87E988(&qword_1EAAA77E0);
    sub_1DC8CC998(&qword_1EAAA7800, &qword_1EAAA77E0);
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1DCAA6D08()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAA6D8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA77C0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCAA75F8();
  sub_1DCB89298();
  if (!v2)
  {
    sub_1DCAA78E4();
    int v7 = v6;
    int v8 = sub_1DCAA78C0(1);
    sub_1DCAA78E4();
    int v10 = v9;
    LOBYTE(v25) = 3;
    sub_1DCAA78E4();
    int v12 = v11;
    sub_1DC87E988(&qword_1EAAA77D0);
    sub_1DC8CC998(&qword_1EAAA77D8, &qword_1EAAA77D0);
    sub_1DCB88DF8();
    int v13 = v25;
    LOBYTE(v25) = 5;
    sub_1DCAA78E4();
    int v15 = v14;
    sub_1DCAA792C(6);
    char v24 = sub_1DCB88DB8();
    int v23 = sub_1DCAA78C0(7);
    int v22 = sub_1DCAA78C0(8);
    int v21 = sub_1DCAA78C0(9);
    int v20 = sub_1DCAA78C0(10);
    sub_1DCAA792C(11);
    int v19 = sub_1DCB88E08();
    sub_1DC87E988(&qword_1EAAA77E0);
    sub_1DC8CC998(&qword_1EAAA77E8, &qword_1EAAA77E0);
    sub_1DCB88DF8();
    uint64_t v17 = sub_1DC9A00C0();
    v18(v17);
    *(_DWORD *)a2 = v7;
    *(_DWORD *)(a2 + 4) = v8;
    *(_DWORD *)(a2 + 8) = v10;
    *(_DWORD *)(a2 + 12) = v12;
    *(_DWORD *)(a2 + 16) = v13;
    *(_DWORD *)(a2 + 20) = v15;
    *(unsigned char *)(a2 + 24) = v24 & 1;
    *(_DWORD *)(a2 + 28) = v23;
    *(_DWORD *)(a2 + 32) = v22;
    *(_DWORD *)(a2 + 36) = v21;
    *(_DWORD *)(a2 + 40) = v20;
    *(_DWORD *)(a2 + 44) = v19;
    *(_DWORD *)(a2 + 48) = v25;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DCAA70CC()
{
  return sub_1DCAA67A4(*v0);
}

uint64_t sub_1DCAA70D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAA61E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAA70FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCAA679C();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAA7124(uint64_t a1)
{
  unint64_t v2 = sub_1DCAA75F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAA7160(uint64_t a1)
{
  unint64_t v2 = sub_1DCAA75F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAA71A4()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAA7224@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCAA6D8C(a1, a2);
}

uint64_t sub_1DCAA723C(void *a1)
{
  return sub_1DCAA6958(a1);
}

uint64_t sub_1DCAA7258(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 4);
  int v3 = *(_DWORD *)(a1 + 16);
  int v4 = *(_DWORD *)(a1 + 20);
  char v5 = *(unsigned char *)(a1 + 24) & 1;
  v9[0] = *(_DWORD *)a1;
  v9[1] = v2;
  uint64_t v10 = *(void *)(a1 + 8);
  int v11 = v3;
  int v12 = v4;
  char v13 = v5;
  long long v14 = *(_OWORD *)(a1 + 28);
  uint64_t v15 = *(void *)(a1 + 44);
  int v6 = sub_1DCB5E9D0((uint64_t)v9);
  if (v6)
  {
    *(void *)(v1 + 16) = v6;
  }
  else
  {
    sub_1DC88CD28();
    swift_allocError();
    *int v7 = 0;
    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v1;
}

uint64_t sub_1DCAA7348()
{
  sub_1DCB5EA48(*(void **)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LogMelState()
{
  return self;
}

uint64_t sub_1DCAA73A4(unint64_t a1, uint64_t a2)
{
  if ((a1 & 0x8000000000000000) == 0 && !HIDWORD(a1)) {
    return sub_1DCB5DE1C(a1, *(_DWORD **)(a2 + 16));
  }
  sub_1DC8AF148();
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for LogMelSpectrogramUtilsError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAA7510);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogMelSpectrogramUtilsError()
{
  return &type metadata for LogMelSpectrogramUtilsError;
}

ValueMetadata *type metadata accessor for LogMelParameters()
{
  return &type metadata for LogMelParameters;
}

unint64_t sub_1DCAA755C()
{
  unint64_t result = qword_1EAAA77B0;
  if (!qword_1EAAA77B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA77B0);
  }
  return result;
}

unint64_t sub_1DCAA75AC()
{
  unint64_t result = qword_1EAAA77B8;
  if (!qword_1EAAA77B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA77B8);
  }
  return result;
}

unint64_t sub_1DCAA75F8()
{
  unint64_t result = qword_1EAAA77C8;
  if (!qword_1EAAA77C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA77C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LogMelParameters.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LogMelParameters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCAA7798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogMelParameters.CodingKeys()
{
  return &type metadata for LogMelParameters.CodingKeys;
}

unint64_t sub_1DCAA77D4()
{
  unint64_t result = qword_1EAAA7808;
  if (!qword_1EAAA7808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7808);
  }
  return result;
}

unint64_t sub_1DCAA7824()
{
  unint64_t result = qword_1EAAA7810;
  if (!qword_1EAAA7810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7810);
  }
  return result;
}

unint64_t sub_1DCAA7874()
{
  unint64_t result = qword_1EAAA7818;
  if (!qword_1EAAA7818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7818);
  }
  return result;
}

uint64_t sub_1DCAA78C0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 68) = a1;
  return sub_1DCB88E38();
}

uint64_t sub_1DCAA78E4()
{
  return sub_1DCB88DD8();
}

uint64_t sub_1DCAA7904()
{
  return sub_1DCB88F58();
}

void sub_1DCAA7920(char a1@<W8>)
{
  *(unsigned char *)(v1 - 68) = a1;
}

uint64_t sub_1DCAA792C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 68) = a1;
  return v1 - 68;
}

uint64_t sub_1DCAA7944()
{
  return sub_1DCB88EF8();
}

id sub_1DCAA7960(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v46 = sub_1DCB868D8();
  uint64_t v8 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v10 - 8);
  int v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DCB86A18();
  long long v14 = *(char **)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  int v19 = (char *)v33 - v18;
  if (!(a1 >> 62))
  {
    uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DCB88CC8();
  if (!v20) {
    goto LABEL_12;
  }
LABEL_3:
  v33[0] = a4;
  v33[1] = v5;
  unsigned int v42 = v19;
  unint64_t v43 = a1 & 0xC000000000000001;
  id v44 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  unsigned int v41 = *MEMORY[0x1E4F276C0];
  uint64_t v39 = (void (**)(char *, uint64_t))(v8 + 8);
  unint64_t v40 = (void (**)(char *, void, uint64_t))(v8 + 104);
  unint64_t v37 = a1;
  uint64_t v38 = (void (**)(char *, char *))(v14 + 8);
  uint64_t v5 = 4;
  uint64_t v34 = v12;
  uint64_t v35 = v20;
  while (1)
  {
    uint64_t v8 = v5 - 4;
    if (v43) {
      int v21 = (char *)MEMORY[0x1E01A7AE0](v5 - 4, a1);
    }
    else {
      int v21 = (char *)*(id *)(a1 + 8 * v5);
    }
    long long v14 = v21;
    a4 = v5 - 3;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    id v22 = objc_msgSend(v21, sel_resourceURL);
    if (!v22) {
      break;
    }
    int v23 = v22;
    uint64_t v49 = v5 - 3;
    uint64_t v50 = v5;
    id v53 = v14;
    sub_1DCB869B8();

    uint64_t v36 = *v44;
    v36(v12, v17, v13);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 0, 1, v13);
    id result = (id)_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v12, 1, v13);
    if (result == 1) {
      goto LABEL_18;
    }
    int v19 = (char *)v13;
    uint64_t v25 = v46;
    uint64_t v51 = v47;
    uint64_t v52 = v48;
    uint64_t v26 = v45;
    (*v40)(v45, v41, v46);
    sub_1DC91ACCC();
    id v27 = v42;
    sub_1DCB869F8();
    (*v39)(v26, v25);
    uint64_t v28 = v12;
    uint64_t v29 = *v38;
    (*v38)(v28, v19);
    id v30 = objc_msgSend(self, sel_defaultManager);
    sub_1DCB868C8();
    sub_1DCB869D8();
    v29(v17, v19);
    uint64_t v31 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    LODWORD(v26) = objc_msgSend(v30, sel_fileExistsAtPath_, v31);

    if (v26)
    {
      uint64_t v32 = v33[0];
      sub_1DC916734(v33[0]);
      v36((char *)v32, v27, (uint64_t)v19);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v32, 0, 1, (uint64_t)v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v53;
    }
    v29(v27, v19);

    uint64_t v5 = v50 + 1;
    int v12 = v34;
    a1 = v37;
    uint64_t v13 = (uint64_t)v19;
    if (v49 == v35) {
      goto LABEL_12;
    }
  }
  id result = (id)_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v12, 1, 1, v13);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DCAA7E54(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAAA7870, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAAEC20);
}

uint64_t sub_1DCAA7E74(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAAA18D8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAAEF50);
}

uint64_t sub_1DCAA7E94(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAAA7838, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAAF23C);
}

uint64_t sub_1DCAA7EB4(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAAA7828, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAAF514);
}

uint64_t sub_1DCAA7ED4(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAAA7848, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAAF824);
}

uint64_t sub_1DCAA7EF4(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAA9C6A0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAAFE34);
}

uint64_t sub_1DCAA7F14(uint64_t a1, uint64_t a2)
{
  return sub_1DCAA8054(a1, a2, &qword_1EAAA0248, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_1DCAB0108);
}

uint64_t sub_1DCAA7F34(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAAA0248, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAB04B8);
}

uint64_t sub_1DCAA7F54(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAAA7860, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAB0780);
}

uint64_t sub_1DCAA7F74(uint64_t a1)
{
  return sub_1DCAA7F94(a1, &qword_1EAAA7858, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAB0A48);
}

uint64_t sub_1DCAA7F94(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  if (*(void *)(a1 + 16))
  {
    sub_1DC87E988(a2);
    uint64_t v4 = sub_1DCB88CF8();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  uint64_t v7 = v4;
  uint64_t v5 = swift_bridgeObjectRetain();
  a3(v5, 1, &v7);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1DCAA8034(uint64_t a1, uint64_t a2)
{
  return sub_1DCAA8054(a1, a2, &qword_1EAAA7848, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_1DCAB0D20);
}

uint64_t sub_1DCAA8054(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t *))
{
  if (*(void *)(a2 + 16) >= *(void *)(a1 + 16)) {
    uint64_t v7 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v7 = *(void *)(a2 + 16);
  }
  if (v7)
  {
    sub_1DC87E988(a3);
    uint64_t v8 = sub_1DCB88CF8();
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC868];
  }
  uint64_t v10 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a4(a1, a2, 1, &v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DCAA8124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1DCB88718();
  sub_1DC89D4E0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v18 - v13;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a1, a2, a3);
  if (!v4)
  {
    uint64_t v16 = v19;
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v14, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
      sub_1DC9AEC20();
      swift_allocError();
      *uint64_t v17 = a1;
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v16, v14, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_1DCAA82B8()
{
  uint64_t v0 = qword_1F37E51A8;
  if (qword_1F37E51A8)
  {
    uint64_t v1 = MEMORY[0x1E4FBC860];
    uint64_t v2 = (unsigned __int8 *)&byte_1F37E51B8;
    do
    {
      unsigned __int8 v4 = *v2++;
      unsigned __int8 v3 = v4;
      unint64_t v5 = sub_1DCAAE748(v4);
      if (v6)
      {
        unint64_t v7 = v5;
        uint64_t v8 = v6;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DCA73254();
          uint64_t v1 = v11;
        }
        unint64_t v9 = *(void *)(v1 + 16);
        if (v9 >= *(void *)(v1 + 24) >> 1)
        {
          sub_1DCA73254();
          uint64_t v1 = v12;
        }
        *(void *)(v1 + 16) = v9 + 1;
        uint64_t v10 = v1 + 24 * v9;
        *(unsigned char *)(v10 + 32) = v3;
        *(void *)(v10 + 40) = v7;
        *(void *)(v10 + 48) = v8;
      }
      --v0;
    }
    while (v0);
  }
  else
  {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return sub_1DCAA7F94(v1, (uint64_t *)&unk_1EAA9C7C0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1DCAAFB08);
}

uint64_t sub_1DCAA83DC@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DC87E988(qword_1EAA9CBC0);
  MEMORY[0x1F4188790](v5 - 8);
  sub_1DC89D970();
  unint64_t v6 = sub_1DCAAE748(a1);
  uint64_t v8 = v7;
  sub_1DC87E988(&qword_1EAA9C720);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DCBB8670;
  type metadata accessor for SoundAnalysisBundleMarker();
  ObjCClassFromMetauint64_t data = swift_getObjCClassFromMetadata();
  *(void *)(v9 + 32) = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DCB87C68();
  sub_1DCAAEBE0();
  id v11 = sub_1DCAA85F8();
  if (v11)
  {
    id v12 = v11;
    MEMORY[0x1E01A6BF0]();
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1DCB87CB8();
    }
    sub_1DCB87D28();
    sub_1DCB87C68();
  }
  uint64_t v13 = sub_1DCB86A18();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v2, 1, 1, v13);
  if (v8)
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = swift_bridgeObjectRetain();
    id v15 = sub_1DCAA7960(v14, v6, v8, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC90A1C4(v2, a2);
  return swift_bridgeObjectRelease();
}

id sub_1DCAA85F8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithPath_, v1);

  return v2;
}

uint64_t sub_1DCAA8670(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001DCB99C10 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DCB99C30 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DCB99C50 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB99C70 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DCB99C90 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB99CB0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DCB99CD0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB99CF0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB99D10 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB99D30 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB99D50 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB99D70 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB99D90 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB99DB0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB99DD0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DCB99DF0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DCB99E10 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB99E30 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DCB99E50 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DCB99E70 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB99E90 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB99EB0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DCB99ED0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DCB99EF0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DCB99F10 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DCB99F30 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DCB99F50 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DCB99F70 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DCB99F90 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DCB99FC0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001DCB99FF0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001DCB9A010 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001DCB9A040 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DCB9A070 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DCB9A090 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001DCB9A0B0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB9A0D0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DCB9A0F0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else
  {
    BOOL v5 = a1 == 0x6F536D6F74737563 && a2 == 0xEF54523545646E75;
    if (v5 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 38;
    }
    else if (a1 == 0xD000000000000021 && a2 == 0x80000001DCB9A110 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 39;
    }
    else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DCB9A140 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 40;
    }
    else
    {
      BOOL v6 = a1 == 0x6465626D45647070 && a2 == 0xEC000000676E6964;
      if (v6 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 41;
      }
      else
      {
        BOOL v7 = a1 == 0x6365746544647070 && a2 == 0xEB00000000726F74;
        if (v7 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 42;
        }
        else if (a1 == 0xD000000000000019 && a2 == 0x80000001DCB9A160)
        {
          swift_bridgeObjectRelease();
          return 43;
        }
        else
        {
          char v8 = sub_1DCB89018();
          swift_bridgeObjectRelease();
          if (v8) {
            return 43;
          }
          else {
            return 44;
          }
        }
      }
    }
  }
}

uint64_t sub_1DCAA9598()
{
  return 44;
}

unint64_t sub_1DCAA95A0(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
    case 23:
    case 27:
    case 33:
    case 34:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 13:
      unint64_t result = 0xD000000000000015;
      break;
    case 14:
      unint64_t result = 0xD000000000000015;
      break;
    case 15:
      unint64_t result = 0xD000000000000019;
      break;
    case 16:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000011;
      break;
    case 18:
      unint64_t result = 0xD000000000000016;
      break;
    case 20:
      unint64_t result = 0xD000000000000010;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 24:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 25:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 26:
      unint64_t result = 0xD000000000000019;
      break;
    case 28:
      unint64_t result = 0xD000000000000021;
      break;
    case 29:
      unint64_t result = 0xD000000000000021;
      break;
    case 30:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 31:
      unint64_t result = 0xD000000000000023;
      break;
    case 32:
      unint64_t result = 0xD000000000000029;
      break;
    case 35:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 36:
      unint64_t result = 0xD000000000000013;
      break;
    case 37:
      unint64_t result = 0xD000000000000012;
      break;
    case 38:
      unint64_t result = 0x6F536D6F74737563;
      break;
    case 39:
      unint64_t result = 0xD000000000000021;
      break;
    case 40:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 41:
      unint64_t result = 0x6465626D45647070;
      break;
    case 42:
      unint64_t result = 0x6365746544647070;
      break;
    case 43:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCAA9974(void *a1, uint64_t a2)
{
  uint64_t v201 = a2;
  sub_1DC87E988(&qword_1EAAA7B68);
  sub_1DC89D4E0();
  uint64_t v196 = v4;
  uint64_t v197 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1DCA367CC(v5, v157[0]);
  sub_1DC87E988(&qword_1EAAA7B70);
  sub_1DC89D4E0();
  uint64_t v193 = v7;
  uint64_t v194 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1DCA36784(v8, v157[0]);
  sub_1DC87E988(&qword_1EAAA7B78);
  sub_1DC89D4E0();
  uint64_t v190 = v10;
  uint64_t v191 = v9;
  MEMORY[0x1F4188790](v9);
  sub_1DCA36814(v11, v157[0]);
  sub_1DC87E988(&qword_1EAAA7B80);
  sub_1DC89D4E0();
  uint64_t v187 = v13;
  uint64_t v188 = v12;
  MEMORY[0x1F4188790](v12);
  sub_1DCA36830(v14, v157[0]);
  sub_1DC87E988(&qword_1EAAA7B88);
  sub_1DC89D4E0();
  uint64_t v184 = v16;
  uint64_t v185 = v15;
  MEMORY[0x1F4188790](v15);
  sub_1DCA36868(v17, v157[0]);
  uint64_t v182 = sub_1DC87E988(&qword_1EAAA7B90);
  sub_1DC89D4E0();
  uint64_t v181 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC888164((uint64_t)v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v180[1] = sub_1DC87E988(&qword_1EAAA7B98);
  sub_1DC89D4E0();
  v180[0] = v21;
  MEMORY[0x1F4188790](v22);
  sub_1DC888164((uint64_t)v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v179[1] = sub_1DC87E988(&qword_1EAAA7BA0);
  sub_1DC89D4E0();
  v179[0] = v24;
  MEMORY[0x1F4188790](v25);
  sub_1DC888164((uint64_t)v157 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v178[1] = sub_1DC87E988(&qword_1EAAA7BA8);
  sub_1DC89D4E0();
  v178[0] = v27;
  MEMORY[0x1F4188790](v28);
  sub_1DC888164((uint64_t)v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v177[1] = sub_1DC87E988(&qword_1EAAA7BB0);
  sub_1DC89D4E0();
  v177[0] = v30;
  MEMORY[0x1F4188790](v31);
  sub_1DC888164((uint64_t)v157 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v176[1] = sub_1DC87E988(&qword_1EAAA7BB8);
  sub_1DC89D4E0();
  v176[0] = v33;
  MEMORY[0x1F4188790](v34);
  sub_1DC888164((uint64_t)v157 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v175[1] = sub_1DC87E988(&qword_1EAAA7BC0);
  sub_1DC89D4E0();
  v175[0] = v36;
  MEMORY[0x1F4188790](v37);
  sub_1DC888164((uint64_t)v157 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v174[1] = sub_1DC87E988(&qword_1EAAA7BC8);
  sub_1DC89D4E0();
  v174[0] = v39;
  MEMORY[0x1F4188790](v40);
  sub_1DC888164((uint64_t)v157 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v173[1] = sub_1DC87E988(&qword_1EAAA7BD0);
  sub_1DC89D4E0();
  v173[0] = v42;
  MEMORY[0x1F4188790](v43);
  sub_1DC88D550();
  sub_1DC888164(v44);
  v172[1] = sub_1DC87E988(&qword_1EAAA7BD8);
  sub_1DC89D4E0();
  v172[0] = v45;
  MEMORY[0x1F4188790](v46);
  sub_1DC88D550();
  sub_1DC888164(v47);
  v171[1] = sub_1DC87E988(&qword_1EAAA7BE0);
  sub_1DC89D4E0();
  v171[0] = v48;
  MEMORY[0x1F4188790](v49);
  sub_1DC88D550();
  sub_1DC888164(v50);
  v170[1] = sub_1DC87E988(&qword_1EAAA7BE8);
  sub_1DC89D4E0();
  v170[0] = v51;
  MEMORY[0x1F4188790](v52);
  sub_1DC88D550();
  sub_1DC888164(v53);
  v169[1] = sub_1DC87E988(&qword_1EAAA7BF0);
  sub_1DC89D4E0();
  v169[0] = v54;
  MEMORY[0x1F4188790](v55);
  sub_1DC88D550();
  sub_1DC888164(v56);
  v168[1] = sub_1DC87E988(&qword_1EAAA7BF8);
  sub_1DC89D4E0();
  v168[0] = v57;
  MEMORY[0x1F4188790](v58);
  sub_1DC88D550();
  sub_1DC888164(v59);
  v167[1] = sub_1DC87E988(&qword_1EAAA7C00);
  sub_1DC89D4E0();
  v167[0] = v60;
  MEMORY[0x1F4188790](v61);
  sub_1DC88D550();
  sub_1DC888164(v62);
  v166[1] = sub_1DC87E988(&qword_1EAAA7C08);
  sub_1DC89D4E0();
  v166[0] = v63;
  MEMORY[0x1F4188790](v64);
  sub_1DC88D550();
  sub_1DC888164(v65);
  v165[1] = sub_1DC87E988(&qword_1EAAA7C10);
  sub_1DC89D4E0();
  v165[0] = v66;
  MEMORY[0x1F4188790](v67);
  sub_1DC88D550();
  sub_1DC888164(v68);
  v164[1] = sub_1DC87E988(&qword_1EAAA7C18);
  sub_1DC89D4E0();
  v164[0] = v69;
  MEMORY[0x1F4188790](v70);
  sub_1DC88D550();
  sub_1DC888164(v71);
  v163[1] = sub_1DC87E988(&qword_1EAAA7C20);
  sub_1DC89D4E0();
  v163[0] = v72;
  MEMORY[0x1F4188790](v73);
  sub_1DC88D550();
  sub_1DC888164(v74);
  v162[1] = sub_1DC87E988(&qword_1EAAA7C28);
  sub_1DC89D4E0();
  v162[0] = v75;
  MEMORY[0x1F4188790](v76);
  sub_1DC88D550();
  sub_1DC888164(v77);
  v161[4] = sub_1DC87E988(&qword_1EAAA7C30);
  sub_1DC89D4E0();
  v161[3] = v78;
  MEMORY[0x1F4188790](v79);
  sub_1DC88D550();
  sub_1DC888164(v80);
  v161[1] = sub_1DC87E988(&qword_1EAAA7C38);
  sub_1DC89D4E0();
  v161[0] = v81;
  MEMORY[0x1F4188790](v82);
  sub_1DC88D550();
  sub_1DC888164(v83);
  v160[1] = sub_1DC87E988(&qword_1EAAA7C40);
  sub_1DC89D4E0();
  v160[0] = v84;
  MEMORY[0x1F4188790](v85);
  sub_1DC88D550();
  sub_1DC888164(v86);
  v159[1] = sub_1DC87E988(&qword_1EAAA7C48);
  sub_1DC89D4E0();
  v159[0] = v87;
  MEMORY[0x1F4188790](v88);
  sub_1DC88D550();
  sub_1DC888164(v89);
  v158[1] = sub_1DC87E988(&qword_1EAAA7C50);
  sub_1DC89D4E0();
  v158[0] = v90;
  MEMORY[0x1F4188790](v91);
  sub_1DC88D550();
  sub_1DC888164(v92);
  v157[37] = sub_1DC87E988(&qword_1EAAA7C58);
  sub_1DC89D4E0();
  v157[36] = v93;
  MEMORY[0x1F4188790](v94);
  sub_1DC88D550();
  sub_1DC888164(v95);
  v157[34] = sub_1DC87E988(&qword_1EAAA7C60);
  sub_1DC89D4E0();
  v157[33] = v96;
  MEMORY[0x1F4188790](v97);
  sub_1DC88D550();
  sub_1DC888164(v98);
  v157[31] = sub_1DC87E988(&qword_1EAAA7C68);
  sub_1DC89D4E0();
  v157[30] = v99;
  MEMORY[0x1F4188790](v100);
  sub_1DC88D550();
  sub_1DC888164(v101);
  v157[28] = sub_1DC87E988(&qword_1EAAA7C70);
  sub_1DC89D4E0();
  v157[27] = v102;
  MEMORY[0x1F4188790](v103);
  sub_1DC88D550();
  sub_1DC888164(v104);
  v157[25] = sub_1DC87E988(&qword_1EAAA7C78);
  sub_1DC89D4E0();
  v157[24] = v105;
  MEMORY[0x1F4188790](v106);
  sub_1DC88D550();
  sub_1DC888164(v107);
  v157[22] = sub_1DC87E988(&qword_1EAAA7C80);
  sub_1DC89D4E0();
  v157[21] = v108;
  MEMORY[0x1F4188790](v109);
  sub_1DC88D550();
  sub_1DC888164(v110);
  v157[19] = sub_1DC87E988(&qword_1EAAA7C88);
  sub_1DC89D4E0();
  v157[18] = v111;
  MEMORY[0x1F4188790](v112);
  sub_1DC88D550();
  sub_1DC888164(v113);
  v157[16] = sub_1DC87E988(&qword_1EAAA7C90);
  sub_1DC89D4E0();
  v157[15] = v114;
  MEMORY[0x1F4188790](v115);
  sub_1DC88D550();
  sub_1DC888164(v116);
  v157[13] = sub_1DC87E988(&qword_1EAAA7C98);
  sub_1DC89D4E0();
  v157[12] = v117;
  MEMORY[0x1F4188790](v118);
  sub_1DC88D550();
  sub_1DC888164(v119);
  v157[10] = sub_1DC87E988(&qword_1EAAA7CA0);
  sub_1DC89D4E0();
  v157[9] = v120;
  MEMORY[0x1F4188790](v121);
  sub_1DC88D550();
  sub_1DC888164(v122);
  v157[7] = sub_1DC87E988(&qword_1EAAA7CA8);
  sub_1DC89D4E0();
  v157[6] = v123;
  MEMORY[0x1F4188790](v124);
  sub_1DC88D550();
  sub_1DC888164(v125);
  v157[4] = sub_1DC87E988(&qword_1EAAA7CB0);
  sub_1DC89D4E0();
  v157[3] = v126;
  MEMORY[0x1F4188790](v127);
  sub_1DC89D988();
  uint64_t v128 = sub_1DC87E988(&qword_1EAAA7CB8);
  sub_1DC89D4E0();
  v157[2] = v129;
  MEMORY[0x1F4188790](v130);
  sub_1DC8A22D0();
  uint64_t v133 = v132 - v131;
  uint64_t v134 = sub_1DC87E988(&qword_1EAAA7CC0);
  sub_1DC89D4E0();
  v157[1] = v135;
  MEMORY[0x1F4188790](v136);
  sub_1DC8A22D0();
  uint64_t v139 = v138 - v137;
  sub_1DC87E988(&qword_1EAAA7CC8);
  sub_1DC89D4E0();
  uint64_t v199 = v140;
  uint64_t v200 = v141;
  MEMORY[0x1F4188790](v140);
  sub_1DC8A22D0();
  uint64_t v144 = (void *)(v143 - v142);
  uint64_t v145 = sub_1DC881A8C(a1, a1[3]);
  sub_1DCAB11C4();
  v198 = v144;
  sub_1DCB892B8();
  switch((char)v201)
  {
    case 1:
      char v204 = 1;
      sub_1DCAB1E88();
      uint64_t v145 = v198;
      uint64_t v134 = v199;
      sub_1DCB88E88();
      sub_1DCA36A84();
      uint64_t v151 = v133;
      uint64_t v152 = v128;
      goto LABEL_41;
    case 2:
      char v204 = 2;
      sub_1DCAB1E3C();
      sub_1DCAB404C();
      uint64_t v151 = sub_1DCAB40B0();
      goto LABEL_40;
    case 3:
      char v204 = 3;
      sub_1DCAB1DF0();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v158;
      goto LABEL_40;
    case 4:
      char v204 = 4;
      sub_1DCAB1DA4();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v159;
      goto LABEL_40;
    case 5:
      char v204 = 5;
      sub_1DCAB1D58();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v160;
      goto LABEL_40;
    case 6:
      char v204 = 6;
      sub_1DCAB1D0C();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v161;
      goto LABEL_40;
    case 7:
      char v204 = 7;
      sub_1DCAB1CC0();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCAB4098();
      goto LABEL_40;
    case 8:
      char v204 = 8;
      sub_1DCAB1C74();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v162;
      goto LABEL_40;
    case 9:
      char v204 = 9;
      sub_1DCAB1C28();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v163;
      goto LABEL_40;
    case 10:
      char v204 = 10;
      sub_1DCAB1BDC();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v164;
      goto LABEL_40;
    case 11:
      char v204 = 11;
      sub_1DCAB1B90();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v165;
      goto LABEL_40;
    case 12:
      char v204 = 12;
      sub_1DCAB1B44();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v166;
      goto LABEL_40;
    case 13:
      char v204 = 13;
      sub_1DCAB1AF8();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v167;
      goto LABEL_40;
    case 14:
      char v204 = 14;
      sub_1DCAB1AAC();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v168;
      goto LABEL_40;
    case 15:
      char v204 = 15;
      sub_1DCAB1A60();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v169;
      goto LABEL_40;
    case 16:
      char v204 = 16;
      sub_1DCAB1A14();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v170;
      goto LABEL_40;
    case 17:
      char v204 = 17;
      sub_1DCAB19C8();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v171;
      goto LABEL_40;
    case 18:
      char v204 = 18;
      sub_1DCAB197C();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v172;
      goto LABEL_40;
    case 19:
      char v204 = 19;
      sub_1DCAB1930();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v173;
      goto LABEL_40;
    case 20:
      char v204 = 20;
      sub_1DCAB18E4();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v174;
      goto LABEL_40;
    case 21:
      char v204 = 21;
      sub_1DCAB1898();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v175;
      goto LABEL_40;
    case 22:
      char v204 = 22;
      sub_1DCAB184C();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v176;
      goto LABEL_40;
    case 23:
      char v204 = 23;
      sub_1DCAB1800();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v177;
      goto LABEL_40;
    case 24:
      char v204 = 24;
      sub_1DCAB17B4();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v178;
      goto LABEL_40;
    case 25:
      char v204 = 25;
      sub_1DCAB1768();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v179;
      goto LABEL_40;
    case 26:
      char v204 = 26;
      sub_1DCAB171C();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = v180;
      goto LABEL_40;
    case 27:
      char v204 = 27;
      sub_1DCAB16D0();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v181;
      goto LABEL_40;
    case 28:
      char v204 = 28;
      sub_1DCAB1684();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v184;
      goto LABEL_40;
    case 29:
      char v204 = 29;
      sub_1DCAB1638();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v187;
      goto LABEL_40;
    case 30:
      char v204 = 30;
      sub_1DCAB15EC();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v190;
      goto LABEL_40;
    case 31:
      char v204 = 31;
      sub_1DCAB15A0();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v193;
      goto LABEL_40;
    case 32:
      char v204 = 32;
      sub_1DCAB1554();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v196;
      goto LABEL_40;
    case 33:
      char v204 = 33;
      sub_1DCAB1508();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v199;
      goto LABEL_40;
    case 34:
      char v204 = 34;
      sub_1DCAB14BC();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v202;
      goto LABEL_40;
    case 35:
      char v204 = 35;
      sub_1DCAB1470();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = (uint64_t *)&v203;
      goto LABEL_40;
    case 36:
      char v204 = 36;
      sub_1DCAB1424();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v205;
      goto LABEL_40;
    case 37:
      char v204 = 37;
      sub_1DCAB13D8();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v153 = &v206;
LABEL_40:
      uint64_t v152 = *(v153 - 32);
      goto LABEL_41;
    case 38:
      char v204 = 38;
      sub_1DCAB138C();
      sub_1DCAB4028();
      uint64_t v151 = sub_1DCA36750();
      uint64_t v152 = v182;
LABEL_41:
      v150(v151, v152);
      goto LABEL_42;
    case 39:
      char v204 = 39;
      sub_1DCAB1340();
      uint64_t v154 = v183;
      sub_1DCAB404C();
      uint64_t v156 = v184;
      uint64_t v155 = v185;
      goto LABEL_50;
    case 40:
      char v204 = 40;
      sub_1DCAB12F4();
      uint64_t v154 = v186;
      sub_1DCAB404C();
      uint64_t v156 = v187;
      uint64_t v155 = v188;
      goto LABEL_50;
    case 41:
      char v204 = 41;
      sub_1DCAB12A8();
      uint64_t v154 = v189;
      sub_1DCAB404C();
      uint64_t v156 = v190;
      uint64_t v155 = v191;
      goto LABEL_50;
    case 42:
      char v204 = 42;
      sub_1DCAB125C();
      uint64_t v154 = v192;
      sub_1DCAB404C();
      uint64_t v156 = v193;
      uint64_t v155 = v194;
      goto LABEL_50;
    case 43:
      char v204 = 43;
      sub_1DCAB1210();
      uint64_t v154 = v195;
      sub_1DCAB404C();
      uint64_t v156 = v196;
      uint64_t v155 = v197;
LABEL_50:
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v154, v155);
LABEL_42:
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v200 + 8))(v145, v134);
      break;
    default:
      char v204 = 0;
      sub_1DCAB1ED4();
      uint64_t v146 = v198;
      uint64_t v147 = v199;
      sub_1DCB88E88();
      sub_1DCA36A84();
      v148(v139, v134);
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v200 + 8))(v146, v147);
      break;
  }
  return result;
}

uint64_t sub_1DCAAB294(void *a1)
{
  sub_1DC87E988(&qword_1EAAA7898);
  sub_1DC89D4E0();
  uint64_t v238 = v5;
  uint64_t v239 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1DCA367CC(v6, v167[0]);
  uint64_t v221 = sub_1DC87E988(&qword_1EAAA78A0);
  sub_1DC89D4E0();
  v220[1] = v7;
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  v237[6] = v9;
  v220[0] = sub_1DC87E988(&qword_1EAAA78A8);
  sub_1DC89D4E0();
  v219[1] = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  v237[5] = v12;
  v219[0] = sub_1DC87E988(&qword_1EAAA78B0);
  sub_1DC89D4E0();
  v218[1] = v13;
  MEMORY[0x1F4188790](v14);
  sub_1DCA36784(v15, v167[0]);
  v218[0] = sub_1DC87E988(&qword_1EAAA78B8);
  sub_1DC89D4E0();
  v217[1] = v16;
  MEMORY[0x1F4188790](v17);
  sub_1DC88D550();
  v237[3] = v18;
  v217[0] = sub_1DC87E988(&qword_1EAAA78C0);
  sub_1DC89D4E0();
  v216[1] = v19;
  MEMORY[0x1F4188790](v20);
  sub_1DC88D550();
  v237[2] = v21;
  v216[0] = sub_1DC87E988(&qword_1EAAA78C8);
  sub_1DC89D4E0();
  v215[1] = v22;
  MEMORY[0x1F4188790](v23);
  sub_1DCA36814(v24, v167[0]);
  v215[0] = sub_1DC87E988(&qword_1EAAA78D0);
  sub_1DC89D4E0();
  v214[1] = v25;
  MEMORY[0x1F4188790](v26);
  sub_1DC88D550();
  v237[0] = v27;
  v214[0] = sub_1DC87E988(&qword_1EAAA78D8);
  sub_1DC89D4E0();
  v213[1] = v28;
  MEMORY[0x1F4188790](v29);
  sub_1DC88D550();
  v236[1] = v30;
  v213[0] = sub_1DC87E988(&qword_1EAAA78E0);
  sub_1DC89D4E0();
  v212[1] = v31;
  MEMORY[0x1F4188790](v32);
  sub_1DCA36830(v33, v167[0]);
  v212[0] = sub_1DC87E988(&qword_1EAAA78E8);
  sub_1DC89D4E0();
  v211[1] = v34;
  MEMORY[0x1F4188790](v35);
  sub_1DC88D550();
  v235[1] = v36;
  v211[0] = sub_1DC87E988(&qword_1EAAA78F0);
  sub_1DC89D4E0();
  v210[1] = v37;
  MEMORY[0x1F4188790](v38);
  sub_1DC88D550();
  v235[0] = v39;
  v210[0] = sub_1DC87E988(&qword_1EAAA78F8);
  sub_1DC89D4E0();
  v209[1] = v40;
  MEMORY[0x1F4188790](v41);
  sub_1DCA36868(v42, v167[0]);
  v209[0] = sub_1DC87E988(&qword_1EAAA7900);
  sub_1DC89D4E0();
  v208[1] = v43;
  MEMORY[0x1F4188790](v44);
  sub_1DC88D550();
  uint64_t v234 = v45;
  v208[0] = sub_1DC87E988(&qword_1EAAA7908);
  sub_1DC89D4E0();
  v207[2] = v46;
  MEMORY[0x1F4188790](v47);
  sub_1DC88D550();
  sub_1DC888164(v48);
  v207[1] = sub_1DC87E988(&qword_1EAAA7910);
  sub_1DC89D4E0();
  v207[0] = v49;
  MEMORY[0x1F4188790](v50);
  sub_1DC888164((uint64_t)v167 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  v206[1] = sub_1DC87E988(&qword_1EAAA7918);
  sub_1DC89D4E0();
  v206[0] = v52;
  MEMORY[0x1F4188790](v53);
  sub_1DC88D550();
  sub_1DC888164(v54);
  v205[1] = sub_1DC87E988(&qword_1EAAA7920);
  sub_1DC89D4E0();
  v205[0] = v55;
  MEMORY[0x1F4188790](v56);
  sub_1DC88D550();
  sub_1DC888164(v57);
  v204[3] = sub_1DC87E988(&qword_1EAAA7928);
  sub_1DC89D4E0();
  v204[2] = v58;
  MEMORY[0x1F4188790](v59);
  sub_1DC888164((uint64_t)v167 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  v204[1] = sub_1DC87E988(&qword_1EAAA7930);
  sub_1DC89D4E0();
  v204[0] = v61;
  MEMORY[0x1F4188790](v62);
  sub_1DC88D550();
  sub_1DC888164(v63);
  uint64_t v203 = sub_1DC87E988(&qword_1EAAA7938);
  sub_1DC89D4E0();
  v202[1] = v64;
  MEMORY[0x1F4188790](v65);
  sub_1DC88D550();
  sub_1DC888164(v66);
  v202[0] = sub_1DC87E988(&qword_1EAAA7940);
  sub_1DC89D4E0();
  v201[1] = v67;
  MEMORY[0x1F4188790](v68);
  sub_1DC888164((uint64_t)v167 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  v201[0] = sub_1DC87E988(&qword_1EAAA7948);
  sub_1DC89D4E0();
  v200[1] = v70;
  MEMORY[0x1F4188790](v71);
  sub_1DC88D550();
  sub_1DC888164(v72);
  v200[0] = sub_1DC87E988(&qword_1EAAA7950);
  sub_1DC89D4E0();
  v199[1] = v73;
  MEMORY[0x1F4188790](v74);
  sub_1DC88D550();
  sub_1DC888164(v75);
  v199[0] = sub_1DC87E988(&qword_1EAAA7958);
  sub_1DC89D4E0();
  v198[1] = v76;
  MEMORY[0x1F4188790](v77);
  sub_1DC888164((uint64_t)v167 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0));
  v198[0] = sub_1DC87E988(&qword_1EAAA7960);
  sub_1DC89D4E0();
  v197[7] = v79;
  MEMORY[0x1F4188790](v80);
  sub_1DC88D550();
  sub_1DC888164(v81);
  v197[6] = sub_1DC87E988(&qword_1EAAA7968);
  sub_1DC89D4E0();
  v197[5] = v82;
  MEMORY[0x1F4188790](v83);
  sub_1DC88D550();
  sub_1DC888164(v84);
  v197[4] = sub_1DC87E988(&qword_1EAAA7970);
  sub_1DC89D4E0();
  v197[3] = v85;
  MEMORY[0x1F4188790](v86);
  sub_1DC888164((uint64_t)v167 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  v197[2] = sub_1DC87E988(&qword_1EAAA7978);
  sub_1DC89D4E0();
  v197[1] = v88;
  MEMORY[0x1F4188790](v89);
  sub_1DC88D550();
  sub_1DC888164(v90);
  v197[0] = sub_1DC87E988(&qword_1EAAA7980);
  sub_1DC89D4E0();
  uint64_t v196 = v91;
  MEMORY[0x1F4188790](v92);
  sub_1DC88D550();
  sub_1DC888164(v93);
  uint64_t v195 = sub_1DC87E988(&qword_1EAAA7988);
  sub_1DC89D4E0();
  uint64_t v194 = v94;
  MEMORY[0x1F4188790](v95);
  sub_1DC888164((uint64_t)v167 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v192 = sub_1DC87E988(&qword_1EAAA7990);
  sub_1DC89D4E0();
  uint64_t v193 = v97;
  MEMORY[0x1F4188790](v98);
  sub_1DC88D550();
  uint64_t v242 = v99;
  uint64_t v190 = sub_1DC87E988(&qword_1EAAA7998);
  sub_1DC89D4E0();
  uint64_t v191 = v100;
  MEMORY[0x1F4188790](v101);
  sub_1DC88D550();
  uint64_t v241 = v102;
  uint64_t v184 = sub_1DC87E988(&qword_1EAAA79A0);
  sub_1DC89D4E0();
  uint64_t v189 = v103;
  MEMORY[0x1F4188790](v104);
  sub_1DC88D550();
  sub_1DC888164(v105);
  uint64_t v188 = sub_1DC87E988(&qword_1EAAA79A8);
  sub_1DC89D4E0();
  uint64_t v187 = v106;
  MEMORY[0x1F4188790](v107);
  sub_1DC88D550();
  sub_1DC888164(v108);
  uint64_t v186 = sub_1DC87E988(&qword_1EAAA79B0);
  sub_1DC89D4E0();
  uint64_t v185 = v109;
  MEMORY[0x1F4188790](v110);
  sub_1DC88D550();
  uint64_t v240 = v111;
  uint64_t v183 = sub_1DC87E988(&qword_1EAAA79B8);
  sub_1DC89D4E0();
  uint64_t v182 = v112;
  MEMORY[0x1F4188790](v113);
  sub_1DC888164((uint64_t)v167 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v181 = sub_1DC87E988(&qword_1EAAA79C0);
  sub_1DC89D4E0();
  uint64_t v180 = v115;
  MEMORY[0x1F4188790](v116);
  sub_1DC88D550();
  sub_1DC888164(v117);
  uint64_t v179 = sub_1DC87E988(&qword_1EAAA79C8);
  sub_1DC89D4E0();
  uint64_t v178 = v118;
  MEMORY[0x1F4188790](v119);
  sub_1DC88D550();
  sub_1DC888164(v120);
  uint64_t v177 = sub_1DC87E988(&qword_1EAAA79D0);
  sub_1DC89D4E0();
  uint64_t v176 = v121;
  MEMORY[0x1F4188790](v122);
  sub_1DC888164((uint64_t)v167 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v175 = sub_1DC87E988(&qword_1EAAA79D8);
  sub_1DC89D4E0();
  uint64_t v174 = v124;
  MEMORY[0x1F4188790](v125);
  sub_1DC88D550();
  sub_1DC888164(v126);
  uint64_t v173 = sub_1DC87E988(&qword_1EAAA79E0);
  sub_1DC89D4E0();
  uint64_t v172 = v127;
  MEMORY[0x1F4188790](v128);
  sub_1DC88D550();
  sub_1DC888164(v129);
  uint64_t v171 = sub_1DC87E988(&qword_1EAAA79E8);
  sub_1DC89D4E0();
  uint64_t v170 = v130;
  MEMORY[0x1F4188790](v131);
  sub_1DC8A22D0();
  uint64_t v134 = v133 - v132;
  uint64_t v135 = sub_1DC87E988(&qword_1EAAA79F0);
  sub_1DC89D4E0();
  uint64_t v169 = v136;
  MEMORY[0x1F4188790](v137);
  sub_1DC89D988();
  uint64_t v138 = sub_1DC87E988(&qword_1EAAA79F8);
  sub_1DC89D4E0();
  uint64_t v140 = v139;
  MEMORY[0x1F4188790](v141);
  sub_1DC89D970();
  uint64_t v142 = a1[3];
  uint64_t v243 = a1;
  sub_1DC881A8C(a1, v142);
  sub_1DCAB11C4();
  uint64_t v143 = v244;
  sub_1DCB89298();
  if (v143)
  {
    uint64_t v144 = (uint64_t)v243;
LABEL_10:
    sub_1DC8818D0(v144);
    return v140;
  }
  v167[3] = v1;
  void v167[2] = v135;
  v167[4] = v134;
  uint64_t v145 = v242;
  uint64_t v244 = v140;
  uint64_t v146 = sub_1DCB88E58();
  uint64_t v147 = *(void *)(v146 + 16);
  if (!v147)
  {
    uint64_t v157 = v2;
    uint64_t v158 = v138;
LABEL_9:
    uint64_t v144 = (uint64_t)v243;
    uint64_t v159 = v244;
    uint64_t v140 = sub_1DCB88B18();
    swift_allocError();
    uint64_t v161 = v160;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v161 = &unk_1F37E51F8;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v140 - 8) + 104))(v161, *MEMORY[0x1E4FBBA70], v140);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v157, v158);
    goto LABEL_10;
  }
  uint64_t v168 = v2;
  v167[1] = 0;
  uint64_t v140 = *(unsigned __int8 *)(v146 + 32);
  sub_1DC9CFE4C(1, v147, v146, v146 + 32, 0, (2 * v147) | 1);
  uint64_t v149 = v148;
  unint64_t v151 = v150;
  swift_bridgeObjectRelease();
  if (v149 != v151 >> 1)
  {
    uint64_t v157 = v168;
    uint64_t v158 = v138;
    goto LABEL_9;
  }
  uint64_t v153 = v238;
  uint64_t v152 = v239;
  switch(v140)
  {
    case 1:
      char v245 = 1;
      sub_1DCAB1E88();
      sub_1DCAB4004();
      uint64_t v154 = sub_1DCAB40B0();
      goto LABEL_54;
    case 2:
      char v245 = 2;
      sub_1DCAB1E3C();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v198;
      goto LABEL_54;
    case 3:
      char v245 = 3;
      sub_1DCAB1DF0();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v199;
      goto LABEL_54;
    case 4:
      char v245 = 4;
      sub_1DCAB1DA4();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v200;
      goto LABEL_54;
    case 5:
      char v245 = 5;
      sub_1DCAB1D58();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v201;
      goto LABEL_54;
    case 6:
      char v245 = 6;
      sub_1DCAB1D0C();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v202;
      goto LABEL_54;
    case 7:
      char v245 = 7;
      sub_1DCAB1CC0();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = &v203;
      goto LABEL_54;
    case 8:
      char v245 = 8;
      sub_1DCAB1C74();
      sub_1DCAB4004();
      uint64_t v154 = sub_1DCAB4098();
      goto LABEL_54;
    case 9:
      char v245 = 9;
      sub_1DCAB1C28();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v205;
      goto LABEL_54;
    case 10:
      char v245 = 10;
      sub_1DCAB1BDC();
      uint64_t v163 = v225;
      sub_1DCAB4004();
      sub_1DCA36A84();
      uint64_t v154 = v163;
      uint64_t v156 = v204;
      goto LABEL_54;
    case 11:
      char v245 = 11;
      sub_1DCAB1B90();
      sub_1DCAB4004();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v206;
      goto LABEL_54;
    case 12:
      char v245 = 12;
      sub_1DCAB1B44();
      sub_1DCAB4004();
      sub_1DCA36A84();
      uint64_t v154 = v145;
      uint64_t v156 = v207;
      goto LABEL_54;
    case 13:
      char v245 = 13;
      sub_1DCAB1AF8();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v208;
      goto LABEL_54;
    case 14:
      char v245 = 14;
      sub_1DCAB1AAC();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v209;
      goto LABEL_54;
    case 15:
      char v245 = 15;
      sub_1DCAB1A60();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v210;
      goto LABEL_54;
    case 16:
      char v245 = 16;
      sub_1DCAB1A14();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v211;
      goto LABEL_54;
    case 17:
      char v245 = 17;
      sub_1DCAB19C8();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v212;
      goto LABEL_54;
    case 18:
      char v245 = 18;
      sub_1DCAB197C();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v213;
      goto LABEL_54;
    case 19:
      char v245 = 19;
      sub_1DCAB1930();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v214;
      goto LABEL_54;
    case 20:
      char v245 = 20;
      sub_1DCAB18E4();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v215;
      goto LABEL_54;
    case 21:
      char v245 = 21;
      sub_1DCAB1898();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v216;
      goto LABEL_54;
    case 22:
      char v245 = 22;
      sub_1DCAB184C();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v217;
      goto LABEL_54;
    case 23:
      char v245 = 23;
      sub_1DCAB1800();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v218;
      goto LABEL_54;
    case 24:
      char v245 = 24;
      sub_1DCAB17B4();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v219;
      goto LABEL_54;
    case 25:
      char v245 = 25;
      sub_1DCAB1768();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v220;
      goto LABEL_54;
    case 26:
      char v245 = 26;
      sub_1DCAB171C();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = &v221;
      goto LABEL_54;
    case 27:
      char v245 = 27;
      sub_1DCAB16D0();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v222;
      goto LABEL_54;
    case 28:
      char v245 = 28;
      sub_1DCAB1684();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v223;
      goto LABEL_54;
    case 29:
      char v245 = 29;
      sub_1DCAB1638();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v224;
      goto LABEL_54;
    case 30:
      char v245 = 30;
      sub_1DCAB15EC();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = &v225;
      goto LABEL_54;
    case 31:
      char v245 = 31;
      sub_1DCAB15A0();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v226;
      goto LABEL_54;
    case 32:
      char v245 = 32;
      sub_1DCAB1554();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v227;
      goto LABEL_54;
    case 33:
      char v245 = 33;
      sub_1DCAB1508();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v228;
      goto LABEL_54;
    case 34:
      char v245 = 34;
      sub_1DCAB14BC();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v229;
      goto LABEL_54;
    case 35:
      char v245 = 35;
      sub_1DCAB1470();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v230;
      goto LABEL_54;
    case 36:
      char v245 = 36;
      sub_1DCAB1424();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v231;
      goto LABEL_54;
    case 37:
      char v245 = 37;
      sub_1DCAB13D8();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v232;
      goto LABEL_54;
    case 38:
      char v245 = 38;
      sub_1DCAB138C();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = (uint64_t *)&v233;
      goto LABEL_54;
    case 39:
      char v245 = 39;
      sub_1DCAB1340();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = &v234;
      goto LABEL_54;
    case 40:
      char v245 = 40;
      sub_1DCAB12F4();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v235;
      goto LABEL_54;
    case 41:
      char v245 = 41;
      sub_1DCAB12A8();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v236;
      goto LABEL_54;
    case 42:
      char v245 = 42;
      sub_1DCAB125C();
      sub_1DCAB3FDC();
      uint64_t v154 = sub_1DCAB406C();
      uint64_t v156 = v237;
      goto LABEL_54;
    case 43:
      char v245 = 43;
      sub_1DCAB1210();
      uint64_t v166 = v237[7];
      sub_1DCAB4004();
      (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v166, v152);
      goto LABEL_55;
    default:
      char v245 = 0;
      sub_1DCAB1ED4();
      sub_1DCAB4004();
      uint64_t v154 = sub_1DCA36750();
      uint64_t v156 = v197;
LABEL_54:
      v155(v154, *(v156 - 32));
LABEL_55:
      swift_unknownObjectRelease();
      uint64_t v164 = sub_1DCAB407C();
      v165(v164);
      sub_1DC8818D0((uint64_t)v243);
      break;
  }
  return v140;
}

uint64_t sub_1DCAAD074()
{
  return sub_1DCB891B8();
}

uint64_t sub_1DCAAD0A8()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCAAD0FC@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1DCAA83DC(a1, a2);
}

uint64_t sub_1DCAAD114(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1DF0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD150(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1DF0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD18C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB13D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD1C8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB13D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD204(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1D58();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD240(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1D58();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD27C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1D0C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD2B8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1D0C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD2F4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1CC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD330(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1CC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD36C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1C74();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD3A8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1C74();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DCAAD3E4()
{
  return sub_1DCAA95A0(*v0);
}

uint64_t sub_1DCAAD3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCAA8670(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCAAD414@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCAA9598();
  *a1 = result;
  return result;
}

uint64_t sub_1DCAAD43C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB11C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD478(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB11C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD4B4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1C28();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD4F0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1C28();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD52C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB138C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD568(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB138C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD5A4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1BDC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD5E0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1BDC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD61C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1DA4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD658(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1DA4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD694(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1B90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD6D0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1B90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD70C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1B44();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD748(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1B44();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD784(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1AF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD7C0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1AF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD7FC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1AAC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD838(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1AAC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD874(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1554();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD8B0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1554();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD8EC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1A60();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD928(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1A60();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD964(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1424();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAD9A0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1424();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAD9DC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1A14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADA18(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1A14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADA54(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB12F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADA90(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB12F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADACC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1340();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADB08(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1340();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADB44(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1210();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADB80(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1210();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADBBC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB125C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADBF8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB125C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADC34(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB12A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADC70(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB12A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADCAC(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB19C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADCE8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB19C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADD24(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB197C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADD60(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB197C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADD9C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1E3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADDD8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1E3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADE14(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB18E4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADE50(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB18E4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADE8C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1470();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADEC8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1470();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADF04(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1508();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADF40(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1508();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADF7C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1E88();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAADFB8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1E88();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAADFF4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1684();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE030(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1684();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE06C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1638();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE0A8(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1638();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE0E4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB15A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE120(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB15A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE15C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB15EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE198(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB15EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE1D4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB14BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE210(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB14BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE24C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1ED4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE288(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1ED4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE2C4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB184C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE300(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB184C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE33C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1800();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE378(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1800();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE3B4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB17B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE3F0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB17B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE42C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1898();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE468(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1898();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE4A4(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1768();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE4E0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1768();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE51C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB171C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE558(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB171C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE594(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB16D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE5D0(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB16D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCAAE60C(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1930();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCAAE648(uint64_t a1)
{
  unint64_t v2 = sub_1DCAB1930();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1DCAAE684(char *a1, char *a2)
{
  return sub_1DCAA866C(*a1, *a2);
}

void sub_1DCAAE690(void *a1@<X8>)
{
  *a1 = &unk_1F37E5198;
}

uint64_t sub_1DCAAE6A0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1DCAAB294(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DCAAE6CC(void *a1)
{
  return sub_1DCAA9974(a1, *v1);
}

uint64_t sub_1DCAAE6E8()
{
  return sub_1DCAAD0A8();
}

uint64_t sub_1DCAAE6F0()
{
  return sub_1DCAAD074();
}

uint64_t sub_1DCAAE6F8()
{
  return sub_1DCB891F8();
}

unint64_t sub_1DCAAE748(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  unint64_t result = 0;
  switch(v1)
  {
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 4:
      unint64_t result = 0xD000000000000029;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000021;
      break;
    case 7:
      unint64_t result = 0xD000000000000022;
      break;
    case 8:
      unint64_t result = 0xD000000000000022;
      break;
    case 9:
      unint64_t result = 0xD000000000000020;
      break;
    case 10:
      unint64_t result = 0xD000000000000023;
      break;
    case 11:
      unint64_t result = 0xD000000000000022;
      break;
    case 12:
      unint64_t result = 0xD000000000000023;
      break;
    case 15:
      unint64_t result = 0xD000000000000028;
      break;
    case 16:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 17:
      unint64_t result = 0xD000000000000020;
      break;
    case 18:
      unint64_t result = 0xD000000000000025;
      break;
    case 19:
      unint64_t result = 0xD000000000000027;
      break;
    case 20:
      unint64_t result = 0xD000000000000029;
      break;
    case 21:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 22:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 23:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 24:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 25:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 26:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 27:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 28:
      unint64_t result = 0xD000000000000023;
      break;
    case 29:
      unint64_t result = 0xD000000000000023;
      break;
    case 30:
      unint64_t result = 0xD000000000000021;
      break;
    case 31:
      unint64_t result = 0xD000000000000025;
      break;
    case 32:
      unint64_t result = 0xD000000000000031;
      break;
    case 35:
      unint64_t result = 0xD000000000000027;
      break;
    case 36:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 37:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 38:
      unint64_t result = 0xD000000000000036;
      break;
    case 39:
      unint64_t result = 0xD000000000000026;
      break;
    case 40:
      unint64_t result = 0xD000000000000026;
      break;
    case 41:
    case 42:
      return result;
    case 43:
      unint64_t result = 0xD000000000000032;
      break;
    default:
      unint64_t result = 0xD000000000000024;
      break;
  }
  return result;
}

unint64_t sub_1DCAAEBE0()
{
  unint64_t result = qword_1EAA9C8D8;
  if (!qword_1EAA9C8D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAA9C8D8);
  }
  return result;
}

void sub_1DCAAEC20(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = (_OWORD *)(swift_bridgeObjectRetain() + 80); ; i += 4)
    {
      uint64_t v6 = *((unsigned __int8 *)i - 48);
      uint64_t v7 = *((void *)i - 2);
      uint64_t v27 = *((void *)i - 5);
      uint64_t v28 = *((void *)i - 3);
      uint64_t v8 = *((void *)i - 1);
      long long v30 = *i;
      char v31 = *((unsigned char *)i - 32);
      uint64_t v9 = (void *)*a3;
      uint64_t v10 = sub_1DC963854(v6);
      uint64_t v12 = v9[2];
      BOOL v13 = (v11 & 1) == 0;
      uint64_t v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        sub_1DCB890E8();
        __break(1u);
        goto LABEL_19;
      }
      unint64_t v15 = v10;
      char v16 = v11;
      uint64_t v17 = v9[3];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v17 >= v14)
      {
        if ((a2 & 1) == 0)
        {
          sub_1DC87E988(&qword_1EAAA7878);
          sub_1DCB88C38();
        }
      }
      else
      {
        sub_1DCAED358();
        uint64_t v18 = sub_1DC963854(v6);
        if ((v16 & 1) != (v19 & 1)) {
          goto LABEL_18;
        }
        unint64_t v15 = v18;
      }
      if (v16) {
        break;
      }
      uint64_t v20 = (void *)*a3;
      *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
      *(unsigned char *)(v20[6] + v15) = v6;
      uint64_t v21 = v20[7] + 56 * v15;
      *(void *)uint64_t v21 = v27;
      *(unsigned char *)(v21 + 8) = v31;
      *(void *)(v21 + 16) = v28;
      *(void *)(v21 + 24) = v7;
      *(void *)(v21 + 32) = v8;
      *(_OWORD *)(v21 + 40) = v30;
      uint64_t v22 = v20[2];
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23) {
        goto LABEL_17;
      }
      uint64_t v20[2] = v24;
      a2 = 1;
      if (!--v3)
      {
        swift_bridgeObjectRelease_n();
        return;
      }
    }
    uint64_t v25 = (void *)swift_allocError();
    swift_willThrow();
    id v26 = v25;
    sub_1DC87E988(&qword_1EAA9DF60);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
LABEL_19:
    sub_1DCB88A98();
    sub_1DCB87A18();
    sub_1DCB88C08();
    sub_1DCB87A18();
    sub_1DCB88C68();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_1DCAAEF50(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1DCAAFDCC(v6, (uint64_t)&v28);
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    uint64_t v26 = v28;
    uint64_t v27 = v29;
    sub_1DC87E9CC(&v30, v25);
    uint64_t v9 = (void *)*a3;
    unint64_t v11 = sub_1DC9637DC(v7, v8);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1DCB890E8();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v10;
    if (v9[3] < v14) {
      break;
    }
    if (a2)
    {
      if (v10) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1DC87E988(&qword_1EAAA7850);
      sub_1DCB88C38();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    char v19 = (uint64_t *)(v18[6] + 16 * v11);
    *char v19 = v7;
    v19[1] = v8;
    sub_1DC87E9CC(v25, (_OWORD *)(v18[7] + 32 * v11));
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_18;
    }
    _OWORD v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1DCAED614(v14, a2 & 1);
  unint64_t v16 = sub_1DC9637DC(v7, v8);
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v11 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  BOOL v23 = (void *)swift_allocError();
  swift_willThrow();
  id v31 = v23;
  id v24 = v23;
  sub_1DC87E988(&qword_1EAA9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1DC8818D0((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_1DCB88A98();
  sub_1DCB87A18();
  sub_1DCB88C08();
  sub_1DCB87A18();
  sub_1DCB88C68();
  __break(1u);
}

#error "1DCAAF2E4: call analysis failed (funcsize=176)"

void sub_1DCAAF514(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v5 = 0;
  uint64_t v6 = (unint64_t *)(a1 + 56);
  while (1)
  {
    if (v5 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1DCB890E8();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *(v6 - 1);
    unint64_t v7 = *v6;
    uint64_t v10 = *(v6 - 3);
    uint64_t v9 = *(v6 - 2);
    swift_bridgeObjectRetain();
    sub_1DC8AF450(v8, v7);
    if (!v9) {
      goto LABEL_18;
    }
    unint64_t v29 = v7;
    unint64_t v11 = (void *)*a3;
    unint64_t v13 = sub_1DC9637DC(v10, v9);
    uint64_t v14 = v11[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      goto LABEL_21;
    }
    char v17 = v12;
    if (v11[3] < v16) {
      break;
    }
    if (a2)
    {
      if (v12) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1DC87E988(&qword_1EAAA7830);
      sub_1DCB88C38();
      if (v17) {
        goto LABEL_16;
      }
    }
LABEL_12:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
    BOOL v21 = (uint64_t *)(v20[6] + 16 * v13);
    *BOOL v21 = v10;
    v21[1] = v9;
    uint64_t v22 = (uint64_t *)(v20[7] + 16 * v13);
    *uint64_t v22 = v8;
    v22[1] = v29;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_22;
    }
    ++v5;
    uint64_t v20[2] = v25;
    v6 += 4;
    a2 = 1;
    if (v4 == v5) {
      goto LABEL_18;
    }
  }
  sub_1DCAED9E4(v16, a2 & 1);
  unint64_t v18 = sub_1DC9637DC(v10, v9);
  if ((v17 & 1) != (v19 & 1)) {
    goto LABEL_23;
  }
  unint64_t v13 = v18;
  if ((v17 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v26 = (void *)swift_allocError();
  swift_willThrow();
  id v27 = v26;
  sub_1DC87E988(&qword_1EAA9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1DC881920(v8, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_1DCB88A98();
  sub_1DCB87A18();
  sub_1DCB88C08();
  sub_1DCB87A18();
  sub_1DCB88C68();
  __break(1u);
}

#error "1DCAAF8D0: call analysis failed (funcsize=179)"

void sub_1DCAAFB08(uint64_t a1, char a2, void *a3)
{
  uint64_t v38 = a3;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v36 = v3;
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v6 = (uint64_t *)(v37 + 48);
  while (1)
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    uint64_t v7 = *((unsigned __int8 *)v6 - 16);
    uint64_t v10 = (void *)*v38;
    uint64_t v11 = sub_1DC963854(v7);
    uint64_t v13 = v10[2];
    BOOL v14 = (v12 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1DCB890E8();
      __break(1u);
      goto LABEL_20;
    }
    unint64_t v16 = v11;
    char v17 = v12;
    uint64_t v18 = v10[3];
    swift_bridgeObjectRetain();
    if (v18 < v15) {
      break;
    }
    if (a2)
    {
      if (v17) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1DC87E988(&qword_1EAAA7820);
      sub_1DCB88C38();
      if (v17) {
        goto LABEL_14;
      }
    }
LABEL_10:
    id v27 = (void *)*v38;
    *(void *)(*v38 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    *(unsigned char *)(v27[6] + v16) = v7;
    uint64_t v28 = (void *)(v27[7] + 16 * v16);
    *uint64_t v28 = v8;
    v28[1] = v9;
    uint64_t v29 = v27[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_18;
    }
    v6 += 3;
    void v27[2] = v31;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1DCAEDE2C(v15, a2 & 1, v19, v20, v21, v22, v23, v24, v34, v35, v36, v37, (int)v38, SBYTE4(v38));
  uint64_t v25 = sub_1DC963854(v7);
  if ((v17 & 1) != (v26 & 1)) {
    goto LABEL_19;
  }
  unint64_t v16 = v25;
  if ((v17 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v32 = (void *)swift_allocError();
  swift_willThrow();
  id v33 = v32;
  sub_1DC87E988(&qword_1EAA9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1DCB88A98();
  sub_1DCB87A18();
  sub_1DCB88C08();
  sub_1DCB87A18();
  sub_1DCB88C68();
  __break(1u);
}

uint64_t sub_1DCAAFDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAAA8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1DCAAFE34(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v36 = v3;
  uint64_t v37 = swift_bridgeObjectRetain();
  for (uint64_t i = (void **)(v37 + 48); ; i += 3)
  {
    uint64_t v8 = (uint64_t)*(i - 2);
    uint64_t v7 = (uint64_t)*(i - 1);
    uint64_t v9 = *i;
    uint64_t v10 = (void *)*a3;
    swift_bridgeObjectRetain();
    id v11 = v9;
    unint64_t v19 = sub_1DC9637DC(v8, v7);
    uint64_t v20 = v10[2];
    BOOL v21 = (v12 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1DCB890E8();
      __break(1u);
      goto LABEL_20;
    }
    char v23 = v12;
    if (v10[3] < v22) {
      break;
    }
    if (a2)
    {
      if (v12) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1DC87E988(&qword_1EAAA6F00);
      sub_1DCB88C38();
      if (v23) {
        goto LABEL_14;
      }
    }
LABEL_10:
    char v26 = (void *)*a3;
    *(void *)(*a3 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    id v27 = (uint64_t *)(v26[6] + 16 * v19);
    uint64_t *v27 = v8;
    v27[1] = v7;
    *(void *)(v26[7] + 8 * v19) = v11;
    uint64_t v28 = v26[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_18;
    }
    v26[2] = v30;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1DCAEE038(v22, a2 & 1, v13, v14, v15, v16, v17, v18, v33, v34, v35, v36, v37, SBYTE4(v37));
  unint64_t v24 = sub_1DC9637DC(v8, v7);
  if ((v23 & 1) != (v25 & 1)) {
    goto LABEL_19;
  }
  unint64_t v19 = v24;
  if ((v23 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v31 = (void *)swift_allocError();
  swift_willThrow();
  id v32 = v31;
  sub_1DC87E988(&qword_1EAA9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_20:
  sub_1DCB88A98();
  sub_1DCB87A18();
  sub_1DCB88C08();
  sub_1DCB87A18();
  sub_1DCB88C68();
  __break(1u);
}

void sub_1DCAB0108(void *a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v4 = a1[2];
  if (!v4 || !*(void *)(a2 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v33 = *(void *)(a2 + 16);
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = *(void *)(a2 + 32);
  id v11 = (void *)*a4;
  unint64_t v13 = sub_1DC9637DC(v8, v7);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (!__OFADD__(v14, v15))
  {
    char v17 = v12;
    uint64_t v18 = 0;
    uint64_t v32 = v33 - 1;
    uint64_t v34 = v4 - 1;
    unint64_t v19 = a1 + 7;
    do
    {
      if (v11[3] >= v16)
      {
        if (a3)
        {
          if (v17) {
            goto LABEL_19;
          }
        }
        else
        {
          sub_1DC87E988(&qword_1EAA9E800);
          sub_1DCB88C38();
          if (v17) {
            goto LABEL_19;
          }
        }
      }
      else
      {
        sub_1DCAEE1CC();
        unint64_t v20 = sub_1DC9637DC(v8, v7);
        if ((v17 & 1) != (v21 & 1)) {
          goto LABEL_26;
        }
        unint64_t v13 = v20;
        if (v17)
        {
LABEL_19:
          uint64_t v30 = (void *)swift_allocError();
          swift_willThrow();
          id v31 = v30;
          sub_1DC87E988(&qword_1EAA9DF60);
          if (swift_dynamicCast()) {
            goto LABEL_27;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();

          return;
        }
      }
      uint64_t v22 = (void *)*a4;
      *(void *)(*a4 + 8 * (v13 >> 6) + 64) |= 1 << v13;
      char v23 = (uint64_t *)(v22[6] + 16 * v13);
      *char v23 = v8;
      v23[1] = v7;
      *(void *)(v22[7] + 8 * v13) = v10;
      uint64_t v24 = v22[2];
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_24;
      }
      v22[2] = v26;
      if (v34 == v18) {
        goto LABEL_22;
      }
      if ((unint64_t)(v18 + 1) >= a1[2]) {
        goto LABEL_25;
      }
      if (v32 == v18)
      {
LABEL_22:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return;
      }
      uint64_t v8 = *(v19 - 1);
      uint64_t v7 = *v19;
      swift_bridgeObjectRetain();
      uint64_t v10 = *(void *)(a2 + 40 + 8 * v18);
      id v11 = (void *)*a4;
      unint64_t v13 = sub_1DC9637DC(v8, v7);
      char v17 = v27;
      uint64_t v28 = v11[2];
      BOOL v29 = (v27 & 1) == 0;
      ++v18;
      v19 += 2;
      a3 = 1;
      uint64_t v16 = v28 + v29;
    }
    while (!__OFADD__(v28, v29));
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  sub_1DCB890E8();
  __break(1u);
LABEL_27:
  sub_1DCB88A98();
  sub_1DCB87A18();
  sub_1DCB88C08();
  sub_1DCB87A18();
  sub_1DCB88C68();
  __break(1u);
}

void sub_1DCAB04B8(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (uint64_t i = (uint64_t *)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    uint64_t v8 = *(i - 2);
    uint64_t v7 = *(i - 1);
    uint64_t v9 = *i;
    uint64_t v10 = (void *)*a3;
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1DC9637DC(v8, v7);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1DCB890E8();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v11;
    if (v10[3] < v13 + v14) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1DC87E988(&qword_1EAA9E800);
      sub_1DCB88C38();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    unint64_t v19 = (uint64_t *)(v18[6] + 16 * v12);
    *unint64_t v19 = v8;
    v19[1] = v7;
    *(void *)(v18[7] + 8 * v12) = v9;
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_18;
    }
    _OWORD v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1DCAEE1CC();
  unint64_t v16 = sub_1DC9637DC(v8, v7);
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v12 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  char v23 = (void *)swift_allocError();
  swift_willThrow();
  id v24 = v23;
  sub_1DC87E988(&qword_1EAA9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1DCB88A98();
  sub_1DCB87A18();
  sub_1DCB88C08();
  sub_1DCB87A18();
  sub_1DCB88C68();
  __break(1u);
}

void sub_1DCAB0780(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v35 = v3;
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v6 = (unsigned char *)(v36 + 48);
  while (1)
  {
    uint64_t v8 = *((void *)v6 - 2);
    uint64_t v7 = *((void *)v6 - 1);
    char v9 = *v6;
    uint64_t v10 = (void *)*a3;
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1DC9637DC(v8, v7);
    uint64_t v19 = v10[2];
    BOOL v20 = (v11 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1DCB890E8();
      __break(1u);
      goto LABEL_20;
    }
    char v22 = v11;
    if (v10[3] < v21) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1DC87E988(&qword_1EAAA7868);
      sub_1DCB88C38();
      if (v22) {
        goto LABEL_14;
      }
    }
LABEL_10:
    BOOL v25 = (void *)*a3;
    *(void *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    uint64_t v26 = (uint64_t *)(v25[6] + 16 * v18);
    *uint64_t v26 = v8;
    v26[1] = v7;
    *(unsigned char *)(v25[7] + v18) = v9;
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_18;
    }
    v6 += 24;
    _OWORD v25[2] = v29;
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1DCAEE3C8(v21, a2 & 1, v12, v13, v14, v15, v16, v17, v32, v33, v34, v35, v36, SBYTE4(v36));
  unint64_t v23 = sub_1DC9637DC(v8, v7);
  if ((v22 & 1) != (v24 & 1)) {
    goto LABEL_19;
  }
  unint64_t v18 = v23;
  if ((v22 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v30 = (void *)swift_allocError();
  swift_willThrow();
  id v31 = v30;
  sub_1DC87E988(&qword_1EAA9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1DCB88A98();
  sub_1DCB87A18();
  sub_1DCB88C08();
  sub_1DCB87A18();
  sub_1DCB88C68();
  __break(1u);
}

#error "1DCAB0AF0: call analysis failed (funcsize=176)"

void sub_1DCAB0D20(void *a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a4;
  uint64_t v6 = a2;
  uint64_t v44 = a1[2];
  if (v44 && (uint64_t v41 = *(void *)(a2 + 16)) != 0)
  {
    HIDWORD(v45) = a3;
    uint64_t v40 = v5;
    uint64_t v8 = a1[4];
    uint64_t v7 = a1[5];
    uint64_t v43 = (uint64_t)a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    unint64_t v10 = 1;
    uint64_t v42 = v6;
    while (1)
    {
      uint64_t v11 = v6 + v9;
      swift_bridgeObjectRetain();
      uint64_t v12 = *(void *)(v11 + 32);
      uint64_t v13 = *(void *)(v11 + 40);
      uint64_t v14 = (void *)*v46;
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1DC9637DC(v8, v7);
      uint64_t v23 = v14[2];
      BOOL v24 = (v15 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24)) {
        break;
      }
      char v26 = v15;
      if (v14[3] >= v25)
      {
        if ((v45 & 0x100000000) != 0)
        {
          if (v15) {
            goto LABEL_17;
          }
        }
        else
        {
          sub_1DC87E988(&qword_1EAA9C698);
          sub_1DCB88C38();
          if (v26) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        sub_1DCAEDC18(v25, BYTE4(v45) & 1, v16, v17, v18, v19, v20, v21, v37, v38, v39, v40, v41, SBYTE4(v41), SHIWORD(v41), v42, v43, v44, v45,
          (uint64_t)v46,
          v47,
          v48,
          v8,
          v7,
          v49,
          v50,
          v51,
          v52,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          vars0,
          vars8);
        unint64_t v27 = sub_1DC9637DC(v8, v7);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_24;
        }
        unint64_t v22 = v27;
        if (v26)
        {
LABEL_17:
          uint64_t v35 = (void *)swift_allocError();
          swift_willThrow();
          id v36 = v35;
          sub_1DC87E988(&qword_1EAA9DF60);
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();

            return;
          }
          goto LABEL_25;
        }
      }
      uint64_t v29 = (void *)*v46;
      *(void *)(*v46 + 8 * (v22 >> 6) + 64) |= 1 << v22;
      uint64_t v30 = (uint64_t *)(v29[6] + 16 * v22);
      uint64_t *v30 = v8;
      v30[1] = v7;
      id v31 = (void *)(v29[7] + 16 * v22);
      void *v31 = v12;
      v31[1] = v13;
      uint64_t v32 = v29[2];
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33) {
        goto LABEL_22;
      }
      v29[2] = v34;
      if (v44 == v10) {
        goto LABEL_20;
      }
      uint64_t v6 = v42;
      if (v10 >= *(void *)(v43 + 16)) {
        goto LABEL_23;
      }
      if (v41 == v10)
      {
LABEL_20:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return;
      }
      ++v10;
      uint64_t v8 = *(void *)(v43 + v9 + 48);
      uint64_t v7 = *(void *)(v43 + v9 + 56);
      v9 += 16;
      HIDWORD(v45) = 1;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    sub_1DCB890E8();
    __break(1u);
LABEL_25:
    sub_1DCB88A98();
    sub_1DCB87A18();
    sub_1DCB88C08();
    sub_1DCB87A18();
    sub_1DCB88C68();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void type metadata accessor for StaticAssetDescriptor()
{
}

void type metadata accessor for AssetUtils.DomainError()
{
}

void type metadata accessor for StaticAsset()
{
}

unint64_t sub_1DCAB10D0()
{
  unint64_t result = qword_1EAA9C730;
  if (!qword_1EAA9C730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9C730);
  }
  return result;
}

unint64_t sub_1DCAB1120()
{
  unint64_t result = qword_1EAAA7880;
  if (!qword_1EAAA7880)
  {
    sub_1DC8863A8(&qword_1EAAA7888);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7880);
  }
  return result;
}

unint64_t sub_1DCAB1178()
{
  unint64_t result = qword_1EAAA7890;
  if (!qword_1EAAA7890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7890);
  }
  return result;
}

unint64_t sub_1DCAB11C4()
{
  unint64_t result = qword_1EAAA7A00;
  if (!qword_1EAAA7A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A00);
  }
  return result;
}

unint64_t sub_1DCAB1210()
{
  unint64_t result = qword_1EAAA7A08;
  if (!qword_1EAAA7A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A08);
  }
  return result;
}

unint64_t sub_1DCAB125C()
{
  unint64_t result = qword_1EAAA7A10;
  if (!qword_1EAAA7A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A10);
  }
  return result;
}

unint64_t sub_1DCAB12A8()
{
  unint64_t result = qword_1EAAA7A18;
  if (!qword_1EAAA7A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A18);
  }
  return result;
}

unint64_t sub_1DCAB12F4()
{
  unint64_t result = qword_1EAAA7A20;
  if (!qword_1EAAA7A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A20);
  }
  return result;
}

unint64_t sub_1DCAB1340()
{
  unint64_t result = qword_1EAAA7A28;
  if (!qword_1EAAA7A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A28);
  }
  return result;
}

unint64_t sub_1DCAB138C()
{
  unint64_t result = qword_1EAAA7A30;
  if (!qword_1EAAA7A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A30);
  }
  return result;
}

unint64_t sub_1DCAB13D8()
{
  unint64_t result = qword_1EAAA7A38;
  if (!qword_1EAAA7A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A38);
  }
  return result;
}

unint64_t sub_1DCAB1424()
{
  unint64_t result = qword_1EAAA7A40;
  if (!qword_1EAAA7A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A40);
  }
  return result;
}

unint64_t sub_1DCAB1470()
{
  unint64_t result = qword_1EAAA7A48;
  if (!qword_1EAAA7A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA7A48);
  }
  return result;
}