uint64_t sub_1DC98AE4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC996C44();
  v26 = v2;
  sub_1DC88688C();
  v4 = v3;
  sub_1DC886774();
  v6 = v5;
  sub_1DC88679C();
  *v7 = v6;
  v8 = *v1;
  sub_1DC88679C();
  *v9 = v8;
  v6[22] = v4;
  v6[23] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    v14 = (void *)sub_1DC8BAA00();
    v6[24] = v14;
    *v14 = v8;
    v14[1] = sub_1DC98AF94;
    v22 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v24, v25);
    return v22();
  }
}

uint64_t sub_1DC98AF94()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    sub_1DC996FA4();
    v10 = (void *)sub_1DC8F022C();
    *(void *)(v3 + 208) = v10;
    void *v10 = v5;
    v10[1] = sub_1DC98B0E0;
    uint64_t v11 = sub_1DC996F90();
    return v12(v11);
  }
}

uint64_t sub_1DC98B0E0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC98B1C0()
{
  sub_1DC8BABB4();
  sub_1DC996D90();
  swift_release();
  uint64_t v3 = sub_1DC996E08();
  v4(v3);
  sub_1DC9960C8(v0, v1, (void (*)(void))type metadata accessor for AccessibilitySoundActions.Session);
  uint64_t v5 = swift_setDeallocating();
  sub_1DC978D0C(v5);
  sub_1DC996984();
  sub_1DC9960C8(v1, v2, (void (*)(void))type metadata accessor for AccessibilitySoundActions.Session);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v6();
}

uint64_t sub_1DC98B29C(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC98B2B4);
}

uint64_t sub_1DC98B2B4()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98B3C8;
  sub_1DC996DDC();
  sub_1DC8BAB0C();
  return sub_1DC993A1C();
}

uint64_t sub_1DC98B3C8()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 216) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 224) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC98B4BC(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC98B4D4);
}

uint64_t sub_1DC98B4D4()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98B3C8;
  sub_1DC996DDC();
  sub_1DC8BAB0C();
  return sub_1DC8C6478();
}

uint64_t sub_1DC98B5E8(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC98B600);
}

uint64_t sub_1DC98B600()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98B3C8;
  sub_1DC996DDC();
  sub_1DC8BAB0C();
  return sub_1DCA7F474();
}

uint64_t sub_1DC98B714(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC98B72C);
}

uint64_t sub_1DC98B72C()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98B3C8;
  sub_1DC996DDC();
  sub_1DC8BAB0C();
  return sub_1DCB1DEC8();
}

uint64_t sub_1DC98B840(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC98B858);
}

uint64_t sub_1DC98B858()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98B3C8;
  sub_1DC996DDC();
  sub_1DC8BAB0C();
  return sub_1DCB38500();
}

uint64_t sub_1DC98B96C(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC98B984);
}

uint64_t sub_1DC98B984()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98B3C8;
  sub_1DC996DDC();
  sub_1DC8BAB0C();
  return sub_1DC8D2268();
}

uint64_t sub_1DC98BA98(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return sub_1DC8BA8F8((uint64_t)sub_1DC98BAB0);
}

uint64_t sub_1DC98BAB0()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC996968();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[23] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[24] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[25] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996CA8(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98BBC4;
  sub_1DC996DDC();
  sub_1DC8BAB0C();
  return sub_1DCA1C564();
}

uint64_t sub_1DC98BBC4()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 216) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 224) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC98BCB8()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC996E84();
  sub_1DC978D0C(v1);
  sub_1DC996984();
  sub_1DC996F48();
  uint64_t v3 = *(void *)(v0 + 224);
  return v2(v3);
}

uint64_t sub_1DC98BD1C()
{
  sub_1DC8867A8();
  uint64_t v0 = sub_1DC996E84();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC98BD7C()
{
  sub_1DC8867A8();
  v0[12] = v1;
  v0[13] = v2;
  uint64_t v3 = sub_1DCB86BF8();
  sub_1DC996C80(v3);
  v0[15] = v4;
  v0[16] = sub_1DC8BAE7C();
  uint64_t v5 = type metadata accessor for AccessibilitySoundRecognition.Session(0);
  v0[17] = v5;
  sub_1DC8BADF0(v5);
  v0[18] = sub_1DC996EDC();
  v0[19] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC98BE34()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  sub_1DC996FCC();
  sub_1DC8B9CD4(v3, v0, (uint64_t *)&unk_1EAAA2640);
  type metadata accessor for XPCDataDecoder();
  uint64_t v4 = swift_allocObject();
  sub_1DC996FE0(v4);
  sub_1DC8B9CD4(v3 + 16, (uint64_t)v1, &qword_1EAA9E478);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v5 = swift_allocObject();
  sub_1DC9970E0(v5);
  type metadata accessor for XPCDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC997098(inited);
  sub_1DC8B9C54(v1);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 168) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DC98BF50;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC9780D0();
}

uint64_t sub_1DC98BF50()
{
  sub_1DC996C44();
  uint64_t v26 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  v6[22] = v4;
  v6[23] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = (void *)sub_1DC8BAA00();
    v6[24] = v14;
    *uint64_t v14 = v8;
    v14[1] = sub_1DC98C098;
    v22 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v24, v25);
    return v22();
  }
}

uint64_t sub_1DC98C098()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    sub_1DC996FA4();
    uint64_t v10 = (void *)sub_1DC8F022C();
    *(void *)(v3 + 208) = v10;
    void *v10 = v5;
    v10[1] = sub_1DC98C26C;
    uint64_t v11 = sub_1DC996F90();
    return v12(v11);
  }
}

uint64_t sub_1DC98C1E4()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  swift_release();
  uint64_t v0 = sub_1DC996DE8();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC996CFC();
  sub_1DC8BA86C();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1DC98C26C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC98C34C()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1DC996DE8();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC996CFC();
  sub_1DC8BA86C();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1DC98C3E0()
{
  sub_1DC8BABB4();
  sub_1DC996D90();
  swift_release();
  uint64_t v3 = sub_1DC996E08();
  v4(v3);
  sub_1DC9960C8(v0, v1, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.Session);
  uint64_t v5 = swift_setDeallocating();
  sub_1DC978D0C(v5);
  sub_1DC996984();
  sub_1DC9960C8(v1, v2, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.Session);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v6();
}

uint64_t sub_1DC98C4BC()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = sub_1DC996DE8();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC996CFC();
  sub_1DC8BA86C();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1DC98C560(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return sub_1DC8BA8F8((uint64_t)sub_1DC98C578);
}

uint64_t sub_1DC98C578()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  sub_1DC99694C();
  sub_1DC9969B8();
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  v1[24] = inited;
  sub_1DC99699C(inited);
  sub_1DC996A30(v2 + 16);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[25] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[26] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996C9C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98C68C;
  sub_1DC996A6C();
  sub_1DC8BAB0C();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98C68C()
{
  sub_1DC996C44();
  uint64_t v26 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  v6[28] = v4;
  v6[29] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = (void *)sub_1DC8BAA00();
    v6[30] = v14;
    *uint64_t v14 = v8;
    v14[1] = sub_1DC98C7D4;
    v22 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v24, v25);
    return v22();
  }
}

uint64_t sub_1DC98C7D4()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 248) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 256) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC98C8C8()
{
  sub_1DC8867A8();
  swift_release();
  uint64_t v0 = swift_setDeallocating();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  sub_1DC996CFC();
  return v1();
}

uint64_t sub_1DC98C938()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void **)(v0 + 176);
  swift_release();
  swift_release();
  uint64_t v3 = swift_setDeallocating();
  sub_1DC978D0C(v3);
  sub_1DC996984();
  *uint64_t v2 = v1;
  sub_1DC8BAB84();
  return v4();
}

uint64_t sub_1DC98C9C8()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  uint64_t v0 = swift_setDeallocating();
  sub_1DC978D0C(v0);
  sub_1DC996984();
  sub_1DC996CFC();
  return v1();
}

uint64_t sub_1DC98CA40()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC98CAD0;
  uint64_t v2 = sub_1DC996D0C();
  return sub_1DC978C3C(v2);
}

uint64_t sub_1DC98CAD0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88679C();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v4();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v6, v7, v8);
  }
}

uint64_t sub_1DC98CBCC()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC996E9C();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996F24(inited);
  sub_1DC996A30((uint64_t)(v1 + 4));
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[30] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[31] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[32] = v6;
  void *v6 = v1;
  v6[1] = sub_1DC98CCD0;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98CCD0()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  *(void *)(v3 + 264) = v5;
  swift_task_dealloc();
  if (v0) {
    *(void *)(v3 + 312) = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC98CDC4()
{
  sub_1DC886900();
  v0[34] = *(void *)(v0[33] + 24);
  sub_1DC996C10();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[35] = v1;
  void *v1 = v0;
  v1[1] = sub_1DC98CE64;
  uint64_t v9 = (uint64_t (*)(void))sub_1DC99706C((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  return v9();
}

uint64_t sub_1DC98CE64()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88679C();
  void *v10 = v9;
  v7[36] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    v7[37] = v3;
    v7[38] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DC98CF64()
{
  sub_1DC8867A8();
  swift_release();
  uint64_t v1 = swift_setDeallocating();
  sub_1DC978D0C(v1);
  sub_1DC996984();
  sub_1DC886630(v0 + 2);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v4 = v0[37];
  uint64_t v3 = v0[38];
  return v2(v3, v4);
}

uint64_t sub_1DC98CFE8()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  *(void *)(v0 + 312) = *(void *)(v0 + 288);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_1DC98D058()
{
  sub_1DC8867A8();
  uint64_t v1 = swift_setDeallocating();
  sub_1DC978D0C(v1);
  sub_1DC996984();
  sub_1DC886630((uint64_t *)(v0 + 16));
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DC98D0CC()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA27C8);
  sub_1DC996C34(v1);
  *(void *)(v0 + 264) = sub_1DC8BAE7C();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC996BC4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC98D178;
  uint64_t v5 = sub_1DC996D0C();
  return sub_1DC978C3C(v5);
}

uint64_t sub_1DC98D178()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC916A20();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC98D288()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996A48(inited);
  sub_1DC996A30(v1 + 32);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  *(void *)(v1 + 288) = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  *(void *)(v1 + 296) = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996D6C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98D394;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98D394()
{
  sub_1DC996C44();
  uint64_t v28 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  *(void *)(v6 + 312) = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = sub_1DC8BAA00();
    uint64_t v15 = (void *)sub_1DC996D18(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_1DC98D4D8;
    uint64_t v24 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v15, v17, v18, v19, v20, v21, v22, v23, v26, v27);
    return v24();
  }
}

uint64_t sub_1DC98D4D8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DC98D5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  sub_1DC996B90();
  if (v13)
  {
    sub_1DC9969F0();
    sub_1DC996A78();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA27D0, &qword_1EAAA27C8);
    sub_1DC996B74();
    sub_1DC996D24();
    swift_release();
    sub_1DC996D78();
    uint64_t v14 = swift_setDeallocating();
    sub_1DC978D0C(v14);
    sub_1DC996984();
    sub_1DC886630(v12);
    swift_task_dealloc();
    sub_1DC996AF0();
    sub_1DC996B04();
    v17(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC98D6B0()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA2758);
  sub_1DC996C34(v1);
  *(void *)(v0 + 264) = sub_1DC8BAE7C();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC996BC4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC98D75C;
  uint64_t v5 = sub_1DC996D0C();
  return sub_1DC978C3C(v5);
}

uint64_t sub_1DC98D75C()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC916A20();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC98D86C()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996A48(inited);
  sub_1DC996A30(v1 + 32);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  *(void *)(v1 + 288) = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  *(void *)(v1 + 296) = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996D6C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98D978;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98D978()
{
  sub_1DC996C44();
  uint64_t v28 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  *(void *)(v6 + 312) = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = sub_1DC8BAA00();
    uint64_t v15 = (void *)sub_1DC996D18(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_1DC98DABC;
    uint64_t v24 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v15, v17, v18, v19, v20, v21, v22, v23, v26, v27);
    return v24();
  }
}

uint64_t sub_1DC98DABC()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DC98DB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  sub_1DC996B90();
  if (v13)
  {
    sub_1DC9969F0();
    sub_1DC996A78();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA2760, &qword_1EAAA2758);
    sub_1DC996B74();
    sub_1DC996D24();
    swift_release();
    sub_1DC996D78();
    uint64_t v14 = swift_setDeallocating();
    sub_1DC978D0C(v14);
    sub_1DC996984();
    sub_1DC886630(v12);
    swift_task_dealloc();
    sub_1DC996AF0();
    sub_1DC996B04();
    v17(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC98DC94()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA2720);
  sub_1DC996C34(v1);
  *(void *)(v0 + 264) = sub_1DC8BAE7C();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC996BC4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC98DD40;
  uint64_t v5 = sub_1DC996D0C();
  return sub_1DC978C3C(v5);
}

uint64_t sub_1DC98DD40()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC916A20();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC98DE50()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996A48(inited);
  sub_1DC996A30(v1 + 32);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  *(void *)(v1 + 288) = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  *(void *)(v1 + 296) = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996D6C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98DF5C;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98DF5C()
{
  sub_1DC996C44();
  uint64_t v28 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  *(void *)(v6 + 312) = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = sub_1DC8BAA00();
    uint64_t v15 = (void *)sub_1DC996D18(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_1DC98E0A0;
    uint64_t v24 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v15, v17, v18, v19, v20, v21, v22, v23, v26, v27);
    return v24();
  }
}

uint64_t sub_1DC98E0A0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DC98E17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  sub_1DC996B90();
  if (v13)
  {
    sub_1DC9969F0();
    sub_1DC996A78();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA2728, &qword_1EAAA2720);
    sub_1DC996B74();
    sub_1DC996D24();
    swift_release();
    sub_1DC996D78();
    uint64_t v14 = swift_setDeallocating();
    sub_1DC978D0C(v14);
    sub_1DC996984();
    sub_1DC886630(v12);
    swift_task_dealloc();
    sub_1DC996AF0();
    sub_1DC996B04();
    v17(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC98E278()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA28D0);
  sub_1DC996C34(v1);
  *(void *)(v0 + 264) = sub_1DC8BAE7C();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC996BC4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC98E324;
  uint64_t v5 = sub_1DC996D0C();
  return sub_1DC978C3C(v5);
}

uint64_t sub_1DC98E324()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC916A20();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC98E434()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996A48(inited);
  sub_1DC996A30(v1 + 32);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  *(void *)(v1 + 288) = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  *(void *)(v1 + 296) = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996D6C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98E540;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98E540()
{
  sub_1DC996C44();
  uint64_t v28 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  *(void *)(v6 + 312) = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = sub_1DC8BAA00();
    uint64_t v15 = (void *)sub_1DC996D18(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_1DC98E684;
    uint64_t v24 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v15, v17, v18, v19, v20, v21, v22, v23, v26, v27);
    return v24();
  }
}

uint64_t sub_1DC98E684()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DC98E760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  sub_1DC996B90();
  if (v17)
  {
    sub_1DC9969F0();
    sub_1DC991608(v16, v15, v13, v14);
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA28D8, &qword_1EAAA28D0);
    sub_1DC996B74();
    sub_1DC996D24();
    swift_release();
    sub_1DC996D78();
    uint64_t v18 = swift_setDeallocating();
    sub_1DC978D0C(v18);
    sub_1DC996984();
    sub_1DC886630(v12);
    swift_task_dealloc();
    sub_1DC996AF0();
    sub_1DC996B04();
    v21(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC98E854()
{
  v0[32] = sub_1DC87E988(&qword_1EAAA2638);
  v0[33] = swift_task_alloc();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[34] = v1;
  void *v1 = v0;
  v1[1] = sub_1DC98E920;
  return sub_1DC978C3C((uint64_t)(v0 + 2));
}

uint64_t sub_1DC98E920()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC916A20();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC98EA30()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996A48(inited);
  sub_1DC996A30(v1 + 32);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  *(void *)(v1 + 288) = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  *(void *)(v1 + 296) = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996D6C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98EB3C;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98EB3C()
{
  sub_1DC996C44();
  uint64_t v28 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  *(void *)(v6 + 312) = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = sub_1DC8BAA00();
    uint64_t v15 = (void *)sub_1DC996D18(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_1DC98EC80;
    uint64_t v24 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v15, v17, v18, v19, v20, v21, v22, v23, v26, v27);
    return v24();
  }
}

uint64_t sub_1DC98EC80()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DC98ED5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  sub_1DC996B90();
  if (v13)
  {
    sub_1DC9969F0();
    sub_1DC996A78();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA2658, &qword_1EAAA2638);
    sub_1DC996B74();
    sub_1DC996D24();
    swift_release();
    sub_1DC996D78();
    uint64_t v14 = swift_setDeallocating();
    sub_1DC978D0C(v14);
    sub_1DC996984();
    sub_1DC886630(v12);
    swift_task_dealloc();
    sub_1DC996AF0();
    sub_1DC996B04();
    v17(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC98EE58()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA2790);
  sub_1DC996C34(v1);
  *(void *)(v0 + 264) = sub_1DC8BAE7C();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC996BC4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC98EF04;
  uint64_t v5 = sub_1DC996D0C();
  return sub_1DC978C3C(v5);
}

uint64_t sub_1DC98EF04()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC916A20();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC98F014()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996A48(inited);
  sub_1DC996A30(v1 + 32);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  *(void *)(v1 + 288) = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  *(void *)(v1 + 296) = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996D6C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98F120;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98F120()
{
  sub_1DC996C44();
  uint64_t v28 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  *(void *)(v6 + 312) = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = sub_1DC8BAA00();
    uint64_t v15 = (void *)sub_1DC996D18(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_1DC98F264;
    uint64_t v24 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v15, v17, v18, v19, v20, v21, v22, v23, v26, v27);
    return v24();
  }
}

uint64_t sub_1DC98F264()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DC98F340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  sub_1DC996B90();
  if (v13)
  {
    sub_1DC9969F0();
    sub_1DC996A78();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA2798, &qword_1EAAA2790);
    sub_1DC996B74();
    sub_1DC996D24();
    swift_release();
    sub_1DC996D78();
    uint64_t v14 = swift_setDeallocating();
    sub_1DC978D0C(v14);
    sub_1DC996984();
    sub_1DC886630(v12);
    swift_task_dealloc();
    sub_1DC996AF0();
    sub_1DC996B04();
    v17(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC98F43C()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA2800);
  sub_1DC996C34(v1);
  *(void *)(v0 + 264) = sub_1DC8BAE7C();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC996BC4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC98F4E8;
  uint64_t v5 = sub_1DC996D0C();
  return sub_1DC978C3C(v5);
}

uint64_t sub_1DC98F4E8()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC916A20();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC98F5F8()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996A48(inited);
  sub_1DC996A30(v1 + 32);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  *(void *)(v1 + 288) = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  *(void *)(v1 + 296) = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996D6C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98F704;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98F704()
{
  sub_1DC996C44();
  uint64_t v28 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  *(void *)(v6 + 312) = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = sub_1DC8BAA00();
    uint64_t v15 = (void *)sub_1DC996D18(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_1DC98F848;
    uint64_t v24 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v15, v17, v18, v19, v20, v21, v22, v23, v26, v27);
    return v24();
  }
}

uint64_t sub_1DC98F848()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1DC98F924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  sub_1DC996B90();
  if (v13)
  {
    sub_1DC9969F0();
    sub_1DC996A78();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA2808, &qword_1EAAA2800);
    sub_1DC996B74();
    sub_1DC996D24();
    swift_release();
    sub_1DC996D78();
    uint64_t v14 = swift_setDeallocating();
    sub_1DC978D0C(v14);
    sub_1DC996984();
    sub_1DC886630(v12);
    swift_task_dealloc();
    sub_1DC996AF0();
    sub_1DC996B04();
    v17(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC98FA20()
{
  sub_1DC8867A8();
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA26E8);
  sub_1DC996C34(v1);
  *(void *)(v0 + 264) = sub_1DC8BAE7C();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC996BC4(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC98FACC;
  uint64_t v5 = sub_1DC996D0C();
  return sub_1DC978C3C(v5);
}

uint64_t sub_1DC98FACC()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_1DC916A20();
    return v7();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
}

uint64_t sub_1DC98FBDC()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC9969D4();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996A48(inited);
  sub_1DC996A30(v1 + 32);
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  *(void *)(v1 + 288) = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  *(void *)(v1 + 296) = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  swift_retain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC996D6C(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC98FCE8;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC98FCE8()
{
  sub_1DC996C44();
  uint64_t v28 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  *(void *)(v6 + 312) = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    uint64_t v14 = sub_1DC8BAA00();
    uint64_t v15 = (void *)sub_1DC996D18(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_1DC98FE2C;
    uint64_t v24 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v15, v17, v18, v19, v20, v21, v22, v23, v26, v27);
    return v24();
  }
}

uint64_t sub_1DC98FE2C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  sub_1DC996ADC(v4, v5);
  uint64_t v6 = *v1;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  *(void *)(v8 + 336) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC98FF08()
{
  sub_1DC886900();
  swift_release();
  uint64_t v1 = swift_setDeallocating();
  sub_1DC978D0C(v1);
  sub_1DC996984();
  sub_1DC886630((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1DC98FF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1DC996B20();
  sub_1DC902AC4();
  sub_1DC996B90();
  if (v13)
  {
    sub_1DC9969F0();
    sub_1DC996A78();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA26F0, &qword_1EAAA26E8);
    sub_1DC996B74();
    sub_1DC996D24();
    swift_release();
    sub_1DC996D78();
    uint64_t v14 = swift_setDeallocating();
    sub_1DC978D0C(v14);
    sub_1DC996984();
    sub_1DC886630(v12);
    swift_task_dealloc();
    sub_1DC996AF0();
    sub_1DC996B04();
    v17(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC990098()
{
  sub_1DC886900();
  swift_release();
  swift_release();
  uint64_t v1 = swift_setDeallocating();
  sub_1DC978D0C(v1);
  sub_1DC996984();
  sub_1DC886630((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1DC990134()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9901C4;
  uint64_t v2 = sub_1DC996D0C();
  return sub_1DC978C3C(v2);
}

uint64_t sub_1DC9901C4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88679C();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4(0);
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v6, v7, v8);
  }
}

uint64_t sub_1DC9902C8()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  uint64_t v2 = sub_1DC996E9C();
  sub_1DC996CB4(v2);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  sub_1DC996F24(inited);
  sub_1DC996A30((uint64_t)(v1 + 4));
  type metadata accessor for XPCProxyDecoder();
  uint64_t v4 = swift_initStackObject();
  v1[30] = v4;
  sub_1DC996930(v4);
  type metadata accessor for XPCDecoder();
  uint64_t v5 = swift_initStackObject();
  v1[31] = v5;
  sub_1DC996A18(v5);
  sub_1DC8B9C54(v0);
  uint64_t v6 = (void *)swift_task_alloc();
  v1[32] = v6;
  void *v6 = v1;
  v6[1] = sub_1DC9903CC;
  sub_1DC996A6C();
  sub_1DC996C58();
  return sub_1DC977FC0();
}

uint64_t sub_1DC9903CC()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  void *v4 = *v1;
  v3[33] = v5;
  v3[34] = v0;
  swift_task_dealloc();
  if (v0) {
    v3[35] = v0;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DC9904C0()
{
  sub_1DC996C44();
  sub_1DC88688C();
  uint64_t v1 = v0[34];
  sub_1DC996BD4();
  sub_1DC9BCDEC();
  if (v1)
  {
    swift_release();
    swift_release();
    v0[35] = v1;
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v2, v3, v4);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v6 = swift_setDeallocating();
    sub_1DC978D0C(v6);
    sub_1DC996984();
    sub_1DC886630(v0 + 2);
    sub_1DC996F48();
    sub_1DC8F03BC();
    return v9(v7, v8, v9, v10, v11, v12, v13, v14);
  }
}

uint64_t sub_1DC9905B4()
{
  sub_1DC8867A8();
  uint64_t v1 = swift_setDeallocating();
  sub_1DC978D0C(v1);
  sub_1DC996984();
  sub_1DC886630((uint64_t *)(v0 + 16));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1DC990630()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9906BC;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9906BC()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 24) = v4;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v5();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
}

uint64_t sub_1DC9907BC()
{
  sub_1DC886900();
  v0[4] = *(void *)(v0[3] + 24);
  sub_1DC996C10();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_1DC99085C;
  uint64_t v9 = (uint64_t (*)(void))sub_1DC99706C((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  return v9();
}

uint64_t sub_1DC99085C()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88679C();
  void *v10 = v9;
  v7[6] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    v7[7] = v3;
    v7[8] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DC99095C()
{
  sub_1DC8867A8();
  swift_release();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  return v1(v2, v3);
}

uint64_t sub_1DC9909C0()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC990A24()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC990AB0;
  return sub_1DC977FC0();
}

uint64_t sub_1DC990AB0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 24) = v4;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v5();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
}

uint64_t sub_1DC990BB0()
{
  sub_1DC886900();
  v0[4] = *(void *)(v0[3] + 24);
  sub_1DC996C10();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_1DC990C50;
  uint64_t v9 = (uint64_t (*)(void))sub_1DC99706C((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  return v9();
}

uint64_t sub_1DC990C50()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_1DC886774();
  uint64_t v11 = v10;
  sub_1DC88679C();
  *uint64_t v12 = v11;
  uint64_t v13 = *v1;
  sub_1DC88679C();
  *uint64_t v14 = v13;
  v11[6] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    v11[7] = v3;
    v11[8] = v5;
    v11[9] = v7;
    v11[10] = v9;
  }
  sub_1DC886854();
  sub_1DC8BAB0C();
  return MEMORY[0x1F4188298](v15, v16, v17);
}

uint64_t sub_1DC990D5C()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DC997000();
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  return v1(v2, v3, v4, v5);
}

uint64_t sub_1DC990DC0()
{
  sub_1DC8867A8();
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC990E50;
  return sub_1DC977FC0();
}

uint64_t sub_1DC990E50()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 80) = v4;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v5();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
}

uint64_t sub_1DC990F50()
{
  sub_1DC886900();
  sub_1DC996FB8();
  sub_1DC996EB8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC990FF0;
  uint64_t v2 = sub_1DC9970CC();
  return v3(v2);
}

uint64_t sub_1DC990FF0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9910D8()
{
  sub_1DC8867A8();
  uint64_t v1 = *(_OWORD **)(v0 + 64);
  swift_release();
  long long v2 = *(_OWORD *)(v0 + 16);
  long long v3 = *(_OWORD *)(v0 + 48);
  v1[1] = *(_OWORD *)(v0 + 32);
  v1[2] = v3;
  _OWORD *v1 = v2;
  sub_1DC8BAB84();
  return v4();
}

uint64_t sub_1DC991144()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9911A8()
{
  sub_1DC8867A8();
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC991238;
  return sub_1DC977FC0();
}

uint64_t sub_1DC991238()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *long long v3 = v2;
  *long long v3 = *v1;
  *(void *)(v2 + 80) = v4;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v5();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
}

uint64_t sub_1DC991338()
{
  sub_1DC886900();
  sub_1DC996FB8();
  sub_1DC996EB8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9913D8;
  uint64_t v2 = sub_1DC9970CC();
  return v3(v2);
}

uint64_t sub_1DC9913D8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88679C();
  void *v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9914C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC87E988((uint64_t *)&unk_1EAAA2660);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v8);
  sub_1DC8C1FC4();
  uint64_t v9 = type metadata accessor for CombinePublisherFromXPCAdapter();
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_1DC8EC868(a3, a4, a1, a2);
  unint64_t v10 = sub_1DC9956B0();
  MEMORY[0x1E01A64B0](v9, v10);
  swift_release();
  sub_1DC88CF34((unint64_t *)&qword_1EAA9F438, (uint64_t *)&unk_1EAAA2660);
  return sub_1DCB88FD8();
}

uint64_t sub_1DC991608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1DC87E988((uint64_t *)&unk_1EAAA2660);
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = type metadata accessor for CombinePublisherFromXPCAdapter();
  swift_allocObject();
  swift_retain();
  swift_retain();
  sub_1DC8EC868(a3, a4, a1, a2);
  unint64_t v10 = sub_1DC9956B0();
  MEMORY[0x1E01A64B0](v9, v10);
  swift_release();
  sub_1DC996088();
  sub_1DC88CF34((unint64_t *)&qword_1EAA9F438, (uint64_t *)&unk_1EAAA2660);
  return sub_1DCB88FD8();
}

uint64_t sub_1DC991780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC9914C0(a1, a2, a3, a4);
}

uint64_t sub_1DC9917A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC9914C0(a1, a2, a3, a4);
}

uint64_t sub_1DC9917C0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA27E8 + dword_1EAAA27E8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8BA814;
  return v7(a1, a2);
}

uint64_t sub_1DC991878(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA2778 + dword_1EAAA2778);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8BA814;
  return v7(a1, a2);
}

uint64_t sub_1DC991930(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA2740 + dword_1EAAA2740);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8BA814;
  return v7(a1, a2);
}

uint64_t sub_1DC9919E8(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EAAA28F8 + dword_1EAAA28F8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DC991A90;
  return v5(a1);
}

uint64_t sub_1DC991A90()
{
  sub_1DC8867A8();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  sub_1DC996F48();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1DC991B60(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA2688 + dword_1EAAA2688);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8BA814;
  return v7(a1, a2);
}

uint64_t sub_1DC991C18(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA27B0 + dword_1EAAA27B0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8BA814;
  return v7(a1, a2);
}

uint64_t sub_1DC991CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA2820 + dword_1EAAA2820);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8BA814;
  return v7(a1, a2);
}

uint64_t sub_1DC991D88(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA2708 + dword_1EAAA2708);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8BA814;
  return v7(a1, a2);
}

uint64_t sub_1DC991E40(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA2898 + dword_1EAAA2898);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8BA814;
  return v7(a1, a2);
}

uint64_t sub_1DC991EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAAA2880 + dword_1EAAA2880);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC8B9ADC;
  return v7(a1, a2);
}

uint64_t sub_1DC991FB0()
{
  *(void *)(v1 + 64) = v0;
  return sub_1DC8BA8F8((uint64_t)sub_1DC991FC8);
}

uint64_t sub_1DC991FC8()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC996BEC();
  uint64_t inited = (void *)swift_initStackObject();
  sub_1DC996AAC(inited);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC997078(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC99206C;
  sub_1DC8BA86C();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1DC99206C()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88679C();
  void *v10 = v9;
  v7[11] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[12] = v3;
    v7[13] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DC992164()
{
  sub_1DC8867A8();
  sub_1DC996F78();
  sub_1DC96677C();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  return v1(v2, v3);
}

uint64_t sub_1DC9921C8()
{
  sub_1DC8867A8();
  sub_1DC996F78();
  sub_1DC96677C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DC992228()
{
  *(void *)(v1 + 64) = v0;
  return MEMORY[0x1F4188298](sub_1DC992248, 0, 0);
}

uint64_t sub_1DC992248()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC996BEC();
  uint64_t inited = (void *)swift_initStackObject();
  sub_1DC996AAC(inited);
  swift_retain();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC997078(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9922F0;
  sub_1DC8CD968();
  sub_1DC8BA86C();
  return sub_1DC8EBE84();
}

uint64_t sub_1DC9922F0()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  sub_1DC88679C();
  void *v10 = v9;
  v7[11] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[12] = v3;
    v7[13] = v5;
  }
  sub_1DC886854();
  sub_1DC8BA86C();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DC9923E8()
{
  *(void *)(v1 + 64) = v0;
  return sub_1DC8BA8F8((uint64_t)sub_1DC992400);
}

uint64_t sub_1DC992400()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC996BEC();
  uint64_t inited = (void *)swift_initStackObject();
  sub_1DC996AAC(inited);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC997078(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC99249C;
  sub_1DC8CD968();
  sub_1DC8BA86C();
  return sub_1DCADEE7C(v4);
}

uint64_t sub_1DC99249C()
{
  sub_1DC8BAB24();
  sub_1DC8BABB4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_1DC886774();
  uint64_t v11 = v10;
  sub_1DC88679C();
  *uint64_t v12 = v11;
  uint64_t v13 = *v1;
  sub_1DC88679C();
  *uint64_t v14 = v13;
  v11[11] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v11[12] = v3;
    v11[13] = v5;
    v11[14] = v7;
    v11[15] = v9;
  }
  sub_1DC886854();
  sub_1DC8BAB0C();
  return MEMORY[0x1F4188298](v15, v16, v17);
}

uint64_t sub_1DC9925A0()
{
  sub_1DC8867A8();
  sub_1DC996F78();
  sub_1DC96677C();
  sub_1DC997000();
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  return v1(v2, v3, v4, v5);
}

uint64_t sub_1DC992604(uint64_t a1)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = v1;
  return MEMORY[0x1F4188298](sub_1DC992624, 0, 0);
}

uint64_t sub_1DC992624()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  sub_1DC996E5C();
  uint64_t inited = (void *)swift_initStackObject();
  sub_1DC996D3C(inited);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC9926DC;
  sub_1DC996C58();
  return sub_1DCAA0918();
}

uint64_t sub_1DC9926DC()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9927BC()
{
  sub_1DC8867A8();
  uint64_t v1 = *(_OWORD **)(v0 + 112);
  swift_setDeallocating();
  sub_1DC96677C();
  long long v2 = *(_OWORD *)(v0 + 16);
  long long v3 = *(_OWORD *)(v0 + 48);
  v1[1] = *(_OWORD *)(v0 + 32);
  v1[2] = v3;
  _OWORD *v1 = v2;
  sub_1DC8BAB84();
  return v4();
}

uint64_t sub_1DC992830()
{
  sub_1DC8867A8();
  swift_setDeallocating();
  sub_1DC96677C();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC992894(uint64_t a1)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = v1;
  return MEMORY[0x1F4188298](sub_1DC9928B4, 0, 0);
}

uint64_t sub_1DC9928B4()
{
  sub_1DC996C6C();
  sub_1DC88688C();
  sub_1DC996E5C();
  uint64_t inited = (void *)swift_initStackObject();
  sub_1DC996D3C(inited);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC99296C;
  sub_1DC996C58();
  return sub_1DCA3C564();
}

uint64_t sub_1DC99296C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88679C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC992A4C()
{
  *(void *)(v1 + 64) = v0;
  return sub_1DC8BA8F8((uint64_t)sub_1DC992A64);
}

uint64_t sub_1DC992A64()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC996BEC();
  uint64_t inited = (void *)swift_initStackObject();
  sub_1DC996AAC(inited);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC997078(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9922F0;
  sub_1DC8BA86C();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1DC992B08()
{
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC992B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  }
  else {
    return sub_1DCB89018();
  }
}

uint64_t sub_1DC992B7C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656372756F736572 && a2 == 0xEC00000068746150)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DC992C1C()
{
  return 0x656372756F736572;
}

void sub_1DC992C3C()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DC87E988((uint64_t *)&unk_1EAAA2860);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC995DFC();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_1DC88D674();
}

uint64_t sub_1DC992D30()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC992D90(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA2850);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = (uint64_t)sub_1DC881A8C(a1, a1[3]);
  sub_1DC995DFC();
  sub_1DCB89298();
  if (!v1)
  {
    uint64_t v10 = sub_1DCB88DA8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  }
  sub_1DC8818D0((uint64_t)a1);
  return v10;
}

uint64_t sub_1DC992EB8()
{
  long long v12 = *(_OWORD *)(v0 + 32);
  LODWORD(v11) = *(unsigned __int8 *)(v0 + 69);
  HIDWORD(v11) = *(unsigned __int8 *)(v0 + 68);
  uint64_t v10 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  uint64_t v1 = swift_bridgeObjectRelease();
  sub_1DC997020(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12);
  sub_1DC99700C();
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1DC992F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  long long v6 = *(_OWORD *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 65);
  char v9 = *(unsigned char *)(a1 + 66);
  char v10 = *(unsigned char *)(a1 + 67);
  char v11 = *(unsigned char *)(a1 + 68);
  char v12 = *(unsigned char *)(a1 + 69);
  uint64_t v13 = *(void *)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 80);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v17 = *(void *)(a2 + 32);
  uint64_t v18 = *(void *)(a2 + 40);
  long long v19 = *(_OWORD *)(a2 + 48);
  char v20 = *(unsigned char *)(a2 + 64);
  char v21 = *(unsigned char *)(a2 + 65);
  char v22 = *(unsigned char *)(a2 + 66);
  char v23 = *(unsigned char *)(a2 + 67);
  char v24 = *(unsigned char *)(a2 + 68);
  char v25 = *(unsigned char *)(a2 + 69);
  uint64_t v26 = *(void *)(a2 + 72);
  BOOL v27 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  char v28 = *(unsigned char *)(a2 + 80);
  if (v27) {
    goto LABEL_6;
  }
  char v55 = *(unsigned char *)(a1 + 68);
  long long v56 = *(_OWORD *)(a1 + 48);
  uint64_t v50 = *(void *)(a2 + 32);
  uint64_t v51 = *(void *)(a2 + 24);
  uint64_t v29 = *(void *)(a1 + 16);
  uint64_t v54 = *(void *)(a1 + 24);
  char v47 = *(unsigned char *)(a2 + 65);
  char v48 = *(unsigned char *)(a2 + 64);
  uint64_t v30 = *(void *)(a1 + 32);
  uint64_t v52 = *(void *)(a1 + 40);
  char v46 = *(unsigned char *)(a2 + 66);
  char v31 = *(unsigned char *)(a1 + 64);
  char v42 = *(unsigned char *)(a1 + 65);
  char v44 = *(unsigned char *)(a2 + 69);
  char v45 = *(unsigned char *)(a2 + 68);
  char v32 = *(unsigned char *)(a1 + 66);
  char v33 = *(unsigned char *)(a1 + 67);
  char v34 = *(unsigned char *)(a1 + 69);
  uint64_t v43 = *(void *)(a2 + 72);
  uint64_t v35 = *(void *)(a1 + 72);
  uint64_t v49 = *(void *)(a2 + 40);
  char v36 = *(unsigned char *)(a1 + 80);
  long long v53 = *(_OWORD *)(a2 + 48);
  uint64_t v37 = *(void *)(a2 + 16);
  char v38 = sub_1DCB89018();
  uint64_t v15 = v37;
  long long v19 = v53;
  char v14 = v36;
  uint64_t v13 = v35;
  uint64_t v26 = v43;
  char v12 = v34;
  uint64_t v16 = v51;
  uint64_t v5 = v52;
  char v11 = v55;
  char v10 = v33;
  char v9 = v32;
  char v25 = v44;
  char v24 = v45;
  char v8 = v42;
  char v7 = v31;
  char v22 = v46;
  char v21 = v47;
  uint64_t v4 = v30;
  char v20 = v48;
  uint64_t v3 = v54;
  uint64_t v2 = v29;
  uint64_t v18 = v49;
  uint64_t v17 = v50;
  long long v6 = v56;
  char v39 = v38;
  char v40 = 0;
  if (v39)
  {
LABEL_6:
    v67[0] = v2;
    v67[1] = v3;
    v67[2] = v4;
    v67[3] = v5;
    long long v68 = v6;
    char v69 = v7;
    char v70 = v8;
    char v71 = v9;
    char v72 = v10;
    char v73 = v11;
    char v74 = v12;
    uint64_t v75 = v13;
    char v76 = v14;
    v57[0] = v15;
    v57[1] = v16;
    v57[2] = v17;
    v57[3] = v18;
    long long v58 = v19;
    char v59 = v20;
    char v60 = v21;
    char v61 = v22;
    char v62 = v23;
    char v63 = v24;
    char v64 = v25;
    uint64_t v65 = v26;
    char v66 = v28;
    char v40 = static AudioConfiguration.== infix(_:_:)((uint64_t)v67, (uint64_t)v57);
  }
  return v40 & 1;
}

void sub_1DC993178()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA2948);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC9966B0();
  sub_1DCB892B8();
  sub_1DC882640();
  sub_1DC8CD948();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC8821D0();
    sub_1DC8CD948();
    sub_1DCB88F18();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  sub_1DC88D674();
}

uint64_t sub_1DC99336C()
{
  long long v12 = *(_OWORD *)(v0 + 32);
  HIDWORD(v11) = *(unsigned __int8 *)(v0 + 69);
  uint64_t v10 = *(void *)(v0 + 72);
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  uint64_t v1 = swift_bridgeObjectRelease();
  sub_1DC997020(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12);
  sub_1DC99700C();
  AudioConfiguration.hash(into:)();
  return sub_1DCB891F8();
}

void sub_1DC993450()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA2958);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC9966B0();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DC88268C();
    sub_1DC997084();
    sub_1DCB88DF8();
    sub_1DC8822B0();
    swift_bridgeObjectRetain();
    sub_1DC997084();
    sub_1DCB88DF8();
    uint64_t v6 = sub_1DC9970B8();
    v7(v6);
    *(void *)uint64_t v4 = v8;
    *(void *)(v4 + 8) = v9;
    *(void *)(v4 + 16) = v8;
    *(void *)(v4 + 24) = v9;
    *(void *)(v4 + 32) = v10;
    *(void *)(v4 + 40) = v11;
    *(void *)(v4 + 48) = v12;
    *(void *)(v4 + 56) = v13;
    *(unsigned char *)(v4 + 64) = v14;
    *(unsigned char *)(v4 + 65) = v15;
    *(unsigned char *)(v4 + 66) = v16;
    *(unsigned char *)(v4 + 67) = v17;
    *(unsigned char *)(v4 + 68) = v18;
    *(unsigned char *)(v4 + 69) = v19;
    *(void *)(v4 + 72) = v20;
    *(unsigned char *)(v4 + 80) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

uint64_t sub_1DC993668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC992B7C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC993694(uint64_t a1)
{
  unint64_t v2 = sub_1DC995DFC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9936D0(uint64_t a1)
{
  unint64_t v2 = sub_1DC995DFC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC99370C()
{
  return sub_1DC992D30();
}

uint64_t sub_1DC993714()
{
  return sub_1DC992B08();
}

uint64_t sub_1DC99371C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC993774@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC992D90(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1DC9937A0()
{
}

uint64_t sub_1DC9937BC(uint64_t *a1, uint64_t *a2)
{
  return sub_1DC992B64(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1DC9937D0(uint64_t a1)
{
  unint64_t v2 = sub_1DC9966B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC99380C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9966B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC993850()
{
  return sub_1DCB891F8();
}

void sub_1DC993948()
{
}

void sub_1DC993960()
{
}

id sub_1DC99397C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[7];
  type metadata accessor for SNDirectionOfArrivalResult();
  v10[0] = v4;
  v10[1] = a1[1];
  v10[2] = v5;
  v10[3] = v6;
  v10[4] = a1[4];
  v10[5] = v7;
  v10[6] = a1[6];
  v10[7] = v8;
  swift_bridgeObjectRetain();
  id result = sub_1DC917230((uint64_t)v10);
  *a2 = result;
  return result;
}

uint64_t sub_1DC993A1C()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_1DC993AAC;
  return sub_1DC977FC0();
}

uint64_t sub_1DC993AAC()
{
  sub_1DC996C44();
  uint64_t v26 = v2;
  sub_1DC88688C();
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v6 = v5;
  sub_1DC88679C();
  *uint64_t v7 = v6;
  uint64_t v8 = *v1;
  sub_1DC88679C();
  *uint64_t v9 = v8;
  v6[4] = v4;
  v6[5] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    sub_1DC8F03BC();
    return MEMORY[0x1F4188298](v10, v11, v12);
  }
  else
  {
    char v14 = (void *)sub_1DC8BAA00();
    v6[6] = v14;
    *char v14 = v8;
    v14[1] = sub_1DC993BF4;
    char v22 = (uint64_t (*)(void))sub_1DC996A9C((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v24, v25);
    return v22();
  }
}

uint64_t sub_1DC993BF4()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 56) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 64) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC993CE8()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  sub_1DC996F48();
  uint64_t v2 = *(void *)(v0 + 64);
  return v1(v2);
}

uint64_t sub_1DC993D54()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC993DB8(uint64_t a1, uint64_t a2)
{
  sub_1DCAD2DD0();
  v4[3] = sub_1DC87E988(&qword_1EAAA2610);
  v4[4] = sub_1DC99563C();
  v4[0] = a2;
  swift_retain();
  sub_1DCAD2E10(v4);
  swift_release();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DC993E40()
{
  sub_1DC8867A8();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC991A90;
  sub_1DC8CD968();
  return sub_1DC993A1C();
}

uint64_t sub_1DC993ED4(uint64_t a1)
{
  return sub_1DC993DB8(a1, *v1);
}

uint64_t sub_1DC993EF0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC993F88;
  return sub_1DC993E40();
}

uint64_t sub_1DC993F88()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

void *sub_1DC9940BC()
{
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8);
  type metadata accessor for SNDirectionOfArrivalEstimator();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = 0;
  v3[3] = v2;
  v3[4] = v1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1DC99412C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v4 = sub_1DC8BADF0(v3);
  MEMORY[0x1F4188790](v4);
  sub_1DC8C1FC4();
  id v5 = v0;
  MGGetProductType();
  if (qword_1EAAABBB8 == -1)
  {

    sub_1DC9841C4();
    uint64_t v16 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v5, sel_initWithTuningPrefix_, v16);

    return (uint64_t)v17;
  }
  else
  {
    type metadata accessor for SNFileUtils();
    swift_getObjectType();
    sub_1DCB3B520(v1);
    uint64_t v6 = sub_1DCB86A18();
    uint64_t result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v1, 1, v6);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = sub_1DCB869D8();
      unint64_t v10 = v9;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v1, v6);
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1DCB86FE8();
      sub_1DC89F57C(v11, (uint64_t)qword_1EAAFF810);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1DCB86FC8();
      os_log_type_t v13 = sub_1DCB88488();
      if (os_log_type_enabled(v12, v13))
      {
        char v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v21 = v15;
        *(_DWORD *)char v14 = 136315138;
        swift_bridgeObjectRetain();
        sub_1DC9F8920(v8, v10, &v21);
        sub_1DCB88778();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DC873000, v12, v13, "Attempting to load Direction of Arrival tunings from %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01A99C0](v15, -1, -1);
        MEMORY[0x1E01A99C0](v14, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v18 = (char *)objc_allocWithZone(ObjectType);
      uint64_t v19 = (uint64_t *)&v18[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
      *uint64_t v19 = v8;
      v19[1] = v10;
      v22.receiver = v18;
      v22.super_class = ObjectType;
      id v20 = objc_msgSendSuper2(&v22, sel_init);
      swift_deallocPartialClassInstance();
      return (uint64_t)v20;
    }
  }
  return result;
}

id sub_1DC994490(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  id v7 = v3;
  unint64_t v8 = sub_1DC984260(a1, a2);
  unint64_t v10 = v9;

  swift_bridgeObjectRelease();
  uint64_t v11 = (char *)objc_allocWithZone(ObjectType);
  uint64_t v12 = (unint64_t *)&v11[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
  *uint64_t v12 = v8;
  v12[1] = v10;
  v15.receiver = v11;
  v15.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_getObjectType();
  sub_1DC996DBC();
  return v13;
}

id SNEstimateDirectionOfArrivalRequest.copy(with:)@<X0>(void *a1@<X8>)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8);
  uint64_t v6 = (char *)objc_allocWithZone(ObjectType);
  id v7 = &v6[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
  *(void *)id v7 = v5;
  *((void *)v7 + 1) = v4;
  v9.receiver = v6;
  v9.super_class = ObjectType;
  swift_bridgeObjectRetain();
  id result = objc_msgSendSuper2(&v9, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNEstimateDirectionOfArrivalRequest.hash.getter()
{
  sub_1DCB891A8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();
  uint64_t v0 = sub_1DCB891F8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SNEstimateDirectionOfArrivalRequest.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v9);
  if (v10)
  {
    sub_1DC87E9CC(&v9, v8);
    sub_1DC87E9DC((uint64_t)v8, (uint64_t)v7);
    if (swift_dynamicCast())
    {
      if (*(void *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl) == *(void *)&v6[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl]
        && *(void *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8) == *(void *)&v6[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8])
      {

        char v4 = 1;
      }
      else
      {
        char v4 = sub_1DCB89018();
      }
    }
    else
    {
      char v4 = 0;
    }
    sub_1DC8818D0((uint64_t)v8);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

id SNEstimateDirectionOfArrivalRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNEstimateDirectionOfArrivalRequest.init(coder:)(a1);
}

id SNEstimateDirectionOfArrivalRequest.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  id v6 = sub_1DC87D81C();
  uint64_t v8 = v7;

  long long v9 = (char *)objc_allocWithZone(ObjectType);
  uint64_t v10 = &v9[OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl];
  *(void *)uint64_t v10 = v6;
  *((void *)v10 + 1) = v8;
  v13.receiver = v9;
  v13.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v13, sel_init);

  swift_getObjectType();
  sub_1DC996DBC();
  return v11;
}

Swift::Void __swiftcall SNEstimateDirectionOfArrivalRequest.encode(with:)(NSCoder with)
{
  uint64_t v3 = v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
  uint64_t v4 = *(void *)(v3 + 8);
  swift_bridgeObjectRetain();
  sub_1DC87B774(v5, v4, 1819307369, 0xE400000000000000, with.super.isa);

  swift_bridgeObjectRelease();
}

void sub_1DC994AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v32)(long long *__return_ptr, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  long long v50;
  long long v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  long long *v67;
  uint64_t v68;
  uint64_t v69;
  long long v70;
  long long v71;
  long long v72;
  long long v73;
  char v74;
  uint64_t v75[8];
  uint64_t v76;
  uint64_t v77;
  void v78[3];
  char v79[48];
  uint64_t v80;
  unsigned char v81[16];
  void v82[6];
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  uint64_t v89;
  char v90;

  sub_1DC88D6B0();
  a19 = v22;
  a20 = v23;
  char v69 = v21;
  v67 = v24;
  sub_1DC87E988((uint64_t *)&unk_1EAAA28B0);
  sub_1DC89D4E0();
  char v64 = v26;
  uint64_t v65 = v25;
  MEMORY[0x1F4188790](v25);
  sub_1DC8A22D0();
  char v63 = v28 - v27;
  uint64_t v29 = *(void *)(v20 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl + 8);
  char v66 = *(void *)(v20 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
  long long v68 = v29;
  swift_bridgeObjectRetain();
  uint64_t v30 = MGGetProductType();
  sub_1DC983D28(v30, v75);
  sub_1DC8B9CD4((uint64_t)v75, (uint64_t)v79, (uint64_t *)&unk_1EAA9E950);
  if (v80)
  {
    char v31 = v79[0];
    sub_1DC8CBC38(v75);
    sub_1DC9836F8(v31, (uint64_t)&v76);
    char v32 = (void (*)(long long *__return_ptr, uint64_t))v78[1];
    sub_1DC8B9CD4((uint64_t)&v77, (uint64_t)v81, (uint64_t *)&unk_1EAAA4140);
    swift_retain();
    sub_1DC8CBCC4((uint64_t)v81);
    sub_1DC8B9CD4((uint64_t)v78, (uint64_t)&a10, &qword_1EAA9E980);
    sub_1DC8CBD50((uint64_t)&a10);
    char v33 = swift_release();
    v32(&v70, v33);
    char v34 = swift_release();
    char v36 = *((void *)&v70 + 1);
    uint64_t v35 = v70;
    char v38 = *((void *)&v71 + 1);
    uint64_t v37 = v71;
    char v40 = *((void *)&v72 + 1);
    char v39 = v72;
    v41 = v73;
    char v42 = BYTE1(v73);
    uint64_t v43 = BYTE2(v73);
    char v44 = BYTE3(v73);
    char v45 = BYTE4(v73);
    char v46 = BYTE5(v73);
    char v47 = *((void *)&v73 + 1);
    char v48 = v74;
  }
  else
  {
    if (qword_1EAA9D260 != -1) {
      swift_once();
    }
    char v36 = *(void *)algn_1EAAFFAA8;
    char v38 = qword_1EAAFFAB8;
    char v61 = qword_1EAAFFAB0;
    char v62 = qword_1EAAFFAA0;
    char v40 = qword_1EAAFFAC8;
    char v60 = qword_1EAAFFAC0;
    long long v58 = byte_1EAAFFAD1;
    char v59 = byte_1EAAFFAD0;
    uint64_t v49 = byte_1EAAFFAD2;
    char v44 = byte_1EAAFFAD3;
    char v45 = byte_1EAAFFAD4;
    char v46 = byte_1EAAFFAD5;
    char v47 = qword_1EAAFFAD8;
    char v48 = byte_1EAAFFAE0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v34 = swift_bridgeObjectRetain();
    uint64_t v43 = v49;
    char v42 = v58;
    v41 = v59;
    char v39 = v60;
    uint64_t v37 = v61;
    uint64_t v35 = v62;
  }
  v82[0] = v35;
  v82[1] = v36;
  v82[2] = v37;
  v82[3] = v38;
  v82[4] = v39;
  v82[5] = v40;
  v83 = v41;
  v84 = v42;
  v85 = v43;
  v86 = v44;
  v87 = v45;
  v88 = v46;
  v89 = v47;
  v90 = v48;
  uint64_t v50 = v67[1];
  char v70 = *v67;
  char v71 = v50;
  uint64_t v51 = v67[3];
  char v72 = v67[2];
  char v73 = v51;
  MEMORY[0x1F4188790](v34);
  *(&v57 - 2) = (uint64_t)&v70;
  *(&v57 - 1) = (uint64_t)v82;
  uint64_t v52 = v68;
  swift_bridgeObjectRetain();
  long long v53 = v69;
  uint64_t v54 = sub_1DC8D93EC((void (*)(void, uint64_t))sub_1DC99606C, (uint64_t)(&v57 - 4), v66, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v53)
  {
    *(void *)&char v70 = v54;
    swift_retain();
    sub_1DC87E988(&qword_1EAAA2610);
    sub_1DC87E988(&qword_1EAA9E960);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA4250, &qword_1EAAA2610);
    char v55 = v63;
    sub_1DCB873D8();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA28C0, (uint64_t *)&unk_1EAAA28B0);
    long long v56 = v65;
    sub_1DCB873A8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v55, v56);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC994EE0()
{
  return sub_1DC994F24();
}

uint64_t sub_1DC994F24()
{
  sub_1DC87E988((uint64_t *)&unk_1EAA9C700);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB9440;
  *(void *)(inited + 32) = sub_1DC8CF7B4();
  *(void *)(inited + 40) = sub_1DC8CF7B4();
  *(void *)(inited + 48) = sub_1DC8CF7B4();
  uint64_t v1 = sub_1DCAE854C(inited);
  swift_setDeallocating();
  sub_1DC937718();
  id v2 = objc_allocWithZone((Class)type metadata accessor for SNDSPConfiguration());
  swift_bridgeObjectRetain();
  id v3 = sub_1DC9B3224(v1);
  uint64_t v4 = type metadata accessor for SNDSPGraphLoader();
  uint64_t v5 = sub_1DC9B1474((uint64_t)v3);
  if (v5)
  {
    uint64_t v4 = v5;
    sub_1DCB5EC24(v5);
    sub_1DCB5F1F8(v4);
  }
  else
  {
    sub_1DC884E74();
    swift_allocError();
    unsigned char *v6 = 0;
    swift_willThrow();
  }

  return v4;
}

id SNEstimateDirectionOfArrivalRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

#error "1DC9950D8: call analysis failed (funcsize=6)"

void *sub_1DC9950E4()
{
  id result = sub_1DC9940BC();
  if (v0) {
    return &off_1F37F2400;
  }
  return result;
}

id sub_1DC995110()
{
  id result = sub_1DC995318();
  if (!v0)
  {
    id v3 = result;
    sub_1DCB87908();
    uint64_t v4 = (void *)sub_1DC8CD968();
    id v5 = sub_1DCB60550(v4, v1);

    return v5;
  }
  return result;
}

void sub_1DC995178(void *a1, uint64_t a2, void (*a3)(void))
{
  sub_1DC8D8BC8(a1, a2, (uint64_t)&v16);
  if (!v3)
  {
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    uint64_t v7 = v18;
    uint64_t v8 = v19;
    uint64_t v9 = v20;
    type metadata accessor for SNDirectionOfArrivalResult();
    uint64_t v16 = v5;
    uint64_t v17 = v6;
    uint64_t v18 = v7;
    uint64_t v19 = v8;
    uint64_t v20 = v9;
    uint64_t v10 = (char *)sub_1DC917230((uint64_t)&v16);
    double v11 = SNDirectionOfArrivalResult.timeRange.getter((uint64_t)v21);
    ((void (*)(void, void, void, double))a3)(v21[0], v21[1], v21[2], v11);
    uint64_t v12 = sub_1DCB883C8();
    a3(v12);
    sub_1DCB883D8();
    uint64_t v13 = v24;
    char v14 = &v10[OBJC_IVAR___SNDirectionOfArrivalResult_impl];
    *(void *)char v14 = v21[6];
    *((void *)v14 + 1) = v21[7];
    *((_OWORD *)v14 + 1) = v22;
    *((void *)v14 + 4) = v23;
    *((void *)v14 + 5) = v13;
    sub_1DC87E988(&qword_1EAA9C720);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DCBB8670;
    *(void *)(v15 + 32) = v10;
    uint64_t v16 = v15;
    sub_1DCB87C68();
  }
}

id sub_1DC995318()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1) {
    return v1;
  }
  sub_1DC995B48();
  swift_allocError();
  return (id)swift_willThrow();
}

void sub_1DC995374()
{
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = *v0;
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DC8A12D0();
  swift_release();
  if (!v1)
  {
    uint64_t v7 = (void *)v0[2];
    v0[2] = v6;
  }
}

uint64_t sub_1DC99543C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC994F24();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DC995468()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC995490()
{
  sub_1DC995468();

  return swift_deallocClassInstance();
}

void sub_1DC9954C4(void *a1, uint64_t a2, void (*a3)(void))
{
}

id sub_1DC9954DC()
{
  return sub_1DC995110();
}

void sub_1DC9954F4()
{
}

id sub_1DC99550C()
{
  return sub_1DC995318();
}

uint64_t type metadata accessor for SNEstimateDirectionOfArrivalRequest()
{
  return self;
}

uint64_t method lookup function for SNEstimateDirectionOfArrivalRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNEstimateDirectionOfArrivalRequest);
}

uint64_t type metadata accessor for SNDirectionOfArrivalEstimator()
{
  return self;
}

void type metadata accessor for AnalyzerDirectionOfArrival()
{
}

void type metadata accessor for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest()
{
}

unint64_t sub_1DC9955A0()
{
  unint64_t result = qword_1EAAA25F0;
  if (!qword_1EAAA25F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA25F0);
  }
  return result;
}

unint64_t sub_1DC9955EC(uint64_t a1)
{
  unint64_t result = sub_1DC8828BC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DC995614(uint64_t a1)
{
  unint64_t result = sub_1DC882814();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DC99563C()
{
  unint64_t result = qword_1EAAA2618;
  if (!qword_1EAAA2618)
  {
    sub_1DC8863A8(&qword_1EAAA2610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAAA2618);
  }
  return result;
}

unint64_t sub_1DC9956B0()
{
  unint64_t result = qword_1EAA9F440;
  if (!qword_1EAA9F440)
  {
    type metadata accessor for CombinePublisherFromXPCAdapter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAA9F440);
  }
  return result;
}

uint64_t sub_1DC995700(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC996908;
  return sub_1DC9917C0(a1, v2 + 16);
}

uint64_t sub_1DC9957B0(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC996908;
  return sub_1DC991878(a1, v2 + 16);
}

uint64_t sub_1DC995860(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC996908;
  return sub_1DC991930(a1, v2 + 16);
}

uint64_t sub_1DC995910(uint64_t a1, _OWORD *a2)
{
  *(void *)(v2 + 64) = a1;
  long long v3 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a2[2];
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v4;
  void *v4 = v2;
  v4[1] = sub_1DC9959B8;
  return sub_1DC9919E8(v2 + 16);
}

uint64_t sub_1DC9959B8()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 64) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1DC995A98(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC996908;
  return sub_1DC991B60(a1, v2 + 16);
}

unint64_t sub_1DC995B48()
{
  unint64_t result = qword_1EAAA26C8;
  if (!qword_1EAAA26C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA26C8);
  }
  return result;
}

uint64_t sub_1DC995B94()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC995BCC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC99543C(a1);
}

uint64_t sub_1DC995BEC(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC996908;
  return sub_1DC991C18(a1, v2 + 16);
}

uint64_t sub_1DC995C9C(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC996908;
  return sub_1DC991CD0(a1, v2 + 16);
}

uint64_t sub_1DC995D4C(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC996908;
  return sub_1DC991D88(a1, v2 + 16);
}

unint64_t sub_1DC995DFC()
{
  unint64_t result = qword_1EAAA2858;
  if (!qword_1EAAA2858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2858);
  }
  return result;
}

uint64_t sub_1DC995E48(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC996908;
  return sub_1DC991E40(a1, v2 + 16);
}

uint64_t sub_1DC995EF8(uint64_t a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a2[2];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC995FA8;
  return sub_1DC991EF8(a1, v2 + 16);
}

uint64_t sub_1DC995FA8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88679C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC8BA978();
  return v3();
}

uint64_t sub_1DC99606C(uint64_t a1, uint64_t a2)
{
  return sub_1DC911BB4(a1, a2, *(_OWORD **)(v2 + 16));
}

unint64_t sub_1DC996088()
{
  unint64_t result = qword_1EAAA4DB0;
  if (!qword_1EAAA4DB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAA4DB0);
  }
  return result;
}

uint64_t sub_1DC9960C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1DC88819C();
  uint64_t v4 = sub_1DC8BAE5C();
  v5(v4);
  return a2;
}

ValueMetadata *type metadata accessor for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for AnalyzerDirectionOfArrival.AudioSourceAgnosticRequest.CodingKeys;
}

unsigned char *_s13SoundAnalysis26AnalyzerDirectionOfArrivalV26AudioSourceAgnosticRequestV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC9961CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SNDirectionOfArrivalEstimator.DomainError()
{
}

uint64_t destroy for FileServerInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC99624C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(unsigned char *)(a1 + 69) = *(unsigned char *)(a2 + 69);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC9962DC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(unsigned char *)(a1 + 69) = *(unsigned char *)(a2 + 69);
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  return a1;
}

void *sub_1DC9963CC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t sub_1DC9963D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(unsigned char *)(a1 + 69) = *(unsigned char *)(a2 + 69);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t sub_1DC99647C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 81))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DC9964BC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AnalyzerDirectionOfArrival.Request()
{
}

unint64_t sub_1DC996524()
{
  unint64_t result = qword_1EAAA2920;
  if (!qword_1EAAA2920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2920);
  }
  return result;
}

unint64_t sub_1DC996574()
{
  unint64_t result = qword_1EAAA2928;
  if (!qword_1EAAA2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2928);
  }
  return result;
}

unint64_t sub_1DC9965C4()
{
  unint64_t result = qword_1EAAA2930;
  if (!qword_1EAAA2930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2930);
  }
  return result;
}

unint64_t sub_1DC996614()
{
  unint64_t result = qword_1EAAA2938;
  if (!qword_1EAAA2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2938);
  }
  return result;
}

unint64_t sub_1DC996664()
{
  unint64_t result = qword_1EAAA2940;
  if (!qword_1EAAA2940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2940);
  }
  return result;
}

unint64_t sub_1DC9966B0()
{
  unint64_t result = qword_1EAAA2950;
  if (!qword_1EAAA2950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2950);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnalyzerDirectionOfArrival.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9967C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyzerDirectionOfArrival.Request.CodingKeys()
{
  return &type metadata for AnalyzerDirectionOfArrival.Request.CodingKeys;
}

unint64_t sub_1DC996804()
{
  unint64_t result = qword_1EAAA2978;
  if (!qword_1EAAA2978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2978);
  }
  return result;
}

unint64_t sub_1DC996854()
{
  unint64_t result = qword_1EAAA2980;
  if (!qword_1EAAA2980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2980);
  }
  return result;
}

unint64_t sub_1DC9968A4()
{
  unint64_t result = qword_1EAAA2988[0];
  if (!qword_1EAAA2988[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA2988);
  }
  return result;
}

uint64_t sub_1DC996930(uint64_t a1)
{
  return sub_1DC8B9CD4(v1, a1 + 16, v2);
}

uint64_t sub_1DC996984()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DC99699C(uint64_t a1)
{
  return sub_1DC8B9CD4(v1, a1 + 16, v2);
}

uint64_t sub_1DC9969B8()
{
  return sub_1DC8B9CD4(v1, v0, v2);
}

uint64_t sub_1DC9969D4()
{
  return v0 + 16;
}

uint64_t sub_1DC9969F0()
{
  return swift_retain();
}

uint64_t sub_1DC996A18(uint64_t a1)
{
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  return sub_1DC8B9C10(v1);
}

uint64_t sub_1DC996A30(uint64_t a1)
{
  return sub_1DC8B9CD4(a1, v1, v2);
}

uint64_t sub_1DC996A48(uint64_t a1)
{
  *(void *)(v2 + 280) = a1;
  return sub_1DC8B9CD4(v1, a1 + 16, v3);
}

uint64_t sub_1DC996A78()
{
  return sub_1DC9914C0(v3, v2, v0, v1);
}

uint64_t sub_1DC996A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_1DC996AAC(void *a1)
{
  *(void *)(v3 + 72) = a1;
  a1[2] = v1;
  a1[3] = v2;
  a1[4] = v4;
  a1[5] = v5;
  return sub_1DC884F60(v1);
}

uint64_t sub_1DC996ADC(uint64_t result, uint64_t a2)
{
  v2[26] = v4;
  v2[27] = result;
  v2[28] = a2;
  v2[29] = v3;
  return result;
}

uint64_t sub_1DC996AF0()
{
  return v0;
}

uint64_t sub_1DC996B3C()
{
  return swift_release();
}

uint64_t sub_1DC996B58()
{
  return swift_retain();
}

uint64_t sub_1DC996B74()
{
  return sub_1DCB873A8();
}

uint64_t sub_1DC996BC4(uint64_t result)
{
  *(void *)(v1 + 272) = result;
  return result;
}

uint64_t sub_1DC996BD4()
{
  return swift_retain();
}

uint64_t sub_1DC996BEC()
{
  return type metadata accessor for XPCProxyDecoder();
}

uint64_t sub_1DC996C10()
{
  return swift_retain();
}

uint64_t sub_1DC996C34(uint64_t a1)
{
  *(void *)(v1 + 256) = a1;
  return a1 - 8;
}

uint64_t sub_1DC996C80(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
  return a1 - 8;
}

uint64_t sub_1DC996C9C(uint64_t result)
{
  *(void *)(v1 + 216) = result;
  return result;
}

uint64_t sub_1DC996CA8(uint64_t result)
{
  *(void *)(v1 + 208) = result;
  return result;
}

uint64_t sub_1DC996CB4(uint64_t a1)
{
  return sub_1DC8B9CD4(a1, v1, v2);
}

void sub_1DC996CCC()
{
  *uint64_t v0 = v1;
  v0[1] = v5;
  v0[2] = v2;
  v0[3] = v3;
  v0[4] = v6;
  v0[5] = v4;
}

uint64_t sub_1DC996CE4(uint64_t a1)
{
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = v1;
  return swift_task_dealloc();
}

uint64_t sub_1DC996CFC()
{
  return v0 + 8;
}

uint64_t sub_1DC996D0C()
{
  return v0;
}

uint64_t sub_1DC996D18(uint64_t result)
{
  *(void *)(v1 + 328) = result;
  return result;
}

uint64_t sub_1DC996D24()
{
  return swift_release();
}

uint64_t sub_1DC996D3C(void *a1)
{
  *(void *)(v2 + 128) = a1;
  a1[2] = v1;
  a1[3] = v3;
  a1[4] = v4;
  a1[5] = v5;
  return sub_1DC884F60(v1);
}

uint64_t sub_1DC996D6C(uint64_t result)
{
  *(void *)(v1 + 304) = result;
  return result;
}

uint64_t sub_1DC996D78()
{
  return sub_1DC901A64(v0, v1);
}

uint64_t sub_1DC996D90()
{
  return swift_release();
}

uint64_t sub_1DC996DBC()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1DC996DDC()
{
  return v0;
}

uint64_t sub_1DC996DE8()
{
  return swift_setDeallocating();
}

uint64_t sub_1DC996E08()
{
  return v0;
}

__n128 sub_1DC996E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  *(void *)uint64_t v9 = v10;
  *(void *)(v9 + 8) = v13;
  *(void *)(v9 + 16) = v11;
  *(void *)(v9 + 24) = v12;
  *(void *)(v9 + 32) = v14;
  __n128 result = a9;
  *(__n128 *)(v9 + 40) = a9;
  return result;
}

void sub_1DC996E40()
{
  *uint64_t v0 = v1;
  v0[1] = v6;
  v0[2] = v2;
  v0[3] = v3;
  v0[4] = v7;
  v0[5] = v4;
  v0[6] = v5;
}

uint64_t sub_1DC996E5C()
{
  return type metadata accessor for XPCProxyDecoder();
}

uint64_t sub_1DC996E84()
{
  return swift_setDeallocating();
}

uint64_t sub_1DC996E9C()
{
  return v0 + 16;
}

uint64_t sub_1DC996EB8()
{
  return swift_retain();
}

uint64_t sub_1DC996EDC()
{
  return swift_task_alloc();
}

uint64_t sub_1DC996EF8()
{
  return swift_setDeallocating();
}

uint64_t sub_1DC996F24(uint64_t a1)
{
  *(void *)(v2 + 232) = a1;
  return sub_1DC8B9CD4(v1, a1 + 16, v3);
}

uint64_t sub_1DC996F78()
{
  return swift_setDeallocating();
}

uint64_t sub_1DC996F90()
{
  return *(void *)(v0 + 128);
}

void sub_1DC996FA4()
{
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(int *)(*(void *)(v1 + 136) + 20);
  *(_DWORD *)(v1 + 224) = v3;
  *(void *)(v2 + v3) = v0;
}

void sub_1DC996FB8()
{
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 80) + 24);
}

uint64_t sub_1DC996FE0(uint64_t a1)
{
  return sub_1DC8B9CD4(v1, a1 + 16, v2);
}

__n128 sub_1DC997020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11)
{
  return (__n128)a11;
}

__n128 sub_1DC997034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, long long a16)
{
  return (__n128)a16;
}

uint64_t sub_1DC99706C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_1DC997078(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t sub_1DC997098(uint64_t a1)
{
  *(void *)(v2 + 160) = a1;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  return sub_1DC8B9C10(v1);
}

uint64_t sub_1DC9970B8()
{
  return v0;
}

uint64_t sub_1DC9970CC()
{
  return v0;
}

uint64_t sub_1DC9970E0(uint64_t a1)
{
  return sub_1DC8B9CD4(v1, a1 + 16, v2);
}

uint64_t sub_1DC997100()
{
  return v0;
}

uint64_t sub_1DC997138()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC997180()
{
  sub_1DC88D538();
  MEMORY[0x1F4188790](v0);
  sub_1DC8A22D0();
  sub_1DC8E7D10();
  v1();
  uint64_t v2 = sub_1DC99A550();
  return v3(v2);
}

uint64_t sub_1DC997224()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC997264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1DC9972B4(a1, a2);
  return v4;
}

uint64_t sub_1DC9972B4(uint64_t a1, uint64_t a2)
{
  swift_defaultActor_initialize();
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 112) = sub_1DCB87208();
  *(unsigned char *)(v2 + 120) = 0;
  *(void *)(v2 + 128) = 0;
  swift_release();
  uint64_t v4 = v2 + *(void *)(*(void *)v2 + 144);
  swift_getAssociatedTypeWitness();
  sub_1DC8F0494();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v4, a2);
  sub_1DC8F0494();
  (*(void (**)(void))(v6 + 32))();
  return v2;
}

void sub_1DC9973F0(uint64_t a1)
{
  sub_1DC99A524();
  uint64_t v3 = *(void *)(v1 + 112);
  sub_1DCB87218();
  if (sub_1DCB871F8()) {
    goto LABEL_10;
  }
  sub_1DCB87218();
  char v4 = sub_1DCB871F8();
  uint64_t v5 = sub_1DCB87218();
  if (v4)
  {
LABEL_9:
    *(void *)(v1 + 112) = v5;
LABEL_10:
    swift_endAccess();
    sub_1DC997534();
    return;
  }
  if (sub_1DCB871F8()) {
    goto LABEL_7;
  }
  if ((v3 | a1) < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = v3 + a1;
  if (__OFADD__(v3, a1))
  {
LABEL_7:
    uint64_t v5 = sub_1DCB87218();
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
}

void sub_1DC9974B4()
{
  if (!*(unsigned char *)(v0 + 120))
  {
    if (*(void *)(v0 + 128))
    {
      swift_retain();
      sub_1DCB87EE8();
      swift_release();
    }
    *(unsigned char *)(v0 + 120) = 1;
    sub_1DC997534();
  }
}

void sub_1DC997534()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA2180);
  uint64_t v2 = sub_1DC8BADF0(v1);
  MEMORY[0x1F4188790](v2);
  sub_1DC8A22D0();
  if (!*(void *)(v0 + 128))
  {
    uint64_t v3 = sub_1DCB87E48();
    sub_1DC99A594(v3);
    type metadata accessor for AsyncSequencePublisher.Subscription.Impl();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v5 = (void *)swift_allocObject();
    v5[2] = v0;
    v5[3] = WitnessTable;
    v5[4] = v0;
    swift_retain_n();
    *(void *)(v0 + 128) = sub_1DCA97644();
    swift_release();
  }
}

uint64_t sub_1DC997668()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8D78C0;
  return sub_1DC9976F8();
}

uint64_t sub_1DC9976F8()
{
  v1[22] = v0;
  uint64_t v2 = (void *)*v0;
  v1[23] = *v0;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA2180);
  sub_1DC8BADF0(v3);
  v1[24] = swift_task_alloc();
  v1[25] = v2[11];
  sub_1DC88D538();
  v1[26] = v4;
  v1[27] = swift_task_alloc();
  v1[28] = v2[12];
  v1[29] = v2[10];
  v1[30] = sub_1DC99A504();
  sub_1DC88D538();
  v1[31] = v5;
  v1[32] = swift_task_alloc();
  uint64_t v6 = sub_1DCB88718();
  v1[33] = v6;
  sub_1DC89D568(v6);
  v1[34] = v7;
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  uint64_t v8 = sub_1DC99A504();
  v1[37] = v8;
  sub_1DC89D568(v8);
  v1[38] = v9;
  v1[39] = *(void *)(v10 + 64);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DC997930, v0, 0);
}

uint64_t sub_1DC997930()
{
  uint64_t v1 = *(void *)(v0 + 176);
  if (*(unsigned char *)(v1 + 120))
  {
    if (*(unsigned char *)(v1 + 120) == 1)
    {
      uint64_t v2 = *(void *)(v0 + 320);
      uint64_t v3 = *(void *)(v0 + 328);
      uint64_t v4 = *(void *)(v0 + 304);
      uint64_t v5 = *(void *)(v0 + 296);
      uint64_t v31 = *(void *)(v0 + 232);
      uint64_t v32 = *(void *)(v0 + 224);
      uint64_t v29 = *(void *)(v0 + 184);
      uint64_t v30 = *(void *)(v0 + 200);
      uint64_t v6 = v1 + *(void *)(*(void *)v1 + 144);
      swift_beginAccess();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
      v7(v3, v6, v5);
      sub_1DC87E988(&qword_1EAAA2BC8);
      swift_allocObject();
      uint64_t v8 = sub_1DC9000EC();
      *(void *)(v0 + 368) = v8;
      uint64_t v9 = sub_1DCB87E48();
      sub_1DC99A594(v9);
      v7(v2, v3, v5);
      unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v11 = (char *)swift_allocObject();
      *((void *)v11 + 2) = 0;
      *((void *)v11 + 3) = 0;
      *((void *)v11 + 4) = v31;
      *((void *)v11 + 5) = v30;
      *((void *)v11 + 6) = v32;
      *((void *)v11 + 7) = *(void *)(v29 + 104);
      *((void *)v11 + 8) = v8;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v11[v10], v2, v5);
      swift_retain();
      *(void *)(v0 + 376) = sub_1DCA97644();
      sub_1DCB87EE8();
      uint64_t v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_1DC998238;
      sub_1DC99A4BC();
      return MEMORY[0x1F4187DC0]();
    }
LABEL_8:
    *(void *)(v1 + 128) = 0;
    swift_release();
    sub_1DC99A404();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1DC8BA978();
    sub_1DC99A4BC();
    __asm { BRAA            X1, X16 }
  }
  swift_beginAccess();
  sub_1DCB87208();
  char v14 = sub_1DCB871F8();
  *(unsigned char *)(v0 + 392) = v14 & 1;
  if (v14)
  {
    uint64_t v1 = *(void *)(v0 + 176);
    goto LABEL_8;
  }
  uint64_t v17 = *(void *)(v0 + 336);
  uint64_t v18 = *(void *)(v0 + 296);
  uint64_t v19 = *(void *)(v0 + 304);
  uint64_t v20 = *(void *)(v0 + 176);
  uint64_t v21 = *(void *)(*(void *)v20 + 144);
  *(void *)(v0 + 344) = v21;
  uint64_t v22 = v20 + v21;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v22, v18);
  swift_getAssociatedConformanceWitness();
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1DC997D10;
  sub_1DC99A4BC();
  return MEMORY[0x1F4187C78](v24, v25, v26);
}

uint64_t sub_1DC997D10()
{
  sub_1DC886900();
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v4 = sub_1DC998400;
  }
  else {
    uint64_t v4 = sub_1DC997E38;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1DC997E38()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v42 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 176) + *(void *)(v0 + 344);
  sub_1DC99A524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24))(v8, v1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v5, 1, v42) != 1)
  {
    uint64_t v17 = *(void *)(v0 + 176);
    (*(void (**)(void, void, void))(*(void *)(v0 + 248) + 32))(*(void *)(v0 + 256), *(void *)(v0 + 280), *(void *)(v0 + 240));
    sub_1DC99A524();
    uint64_t v18 = *(void *)(v17 + 112);
    sub_1DCB87218();
    if (sub_1DCB871F8())
    {
LABEL_10:
      uint64_t v22 = *(void *)(v0 + 208);
      uint64_t v21 = *(void *)(v0 + 216);
      uint64_t v23 = *(void *)(v0 + 200);
      uint64_t v24 = *(void *)(v0 + 176);
      swift_endAccess();
      sub_1DC8E7D10();
      v25();
      uint64_t v26 = sub_1DCB871B8();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      sub_1DC99A524();
      uint64_t v27 = *(void *)(v24 + 112);
      sub_1DCB87218();
      if (sub_1DCB871F8())
      {
LABEL_19:
        uint64_t v30 = *(void *)(v0 + 288);
        uint64_t v31 = *(void *)(v0 + 264);
        uint64_t v32 = *(void *)(v0 + 272);
        uint64_t v33 = *(void *)(v0 + 248);
        uint64_t v34 = *(void *)(v0 + 256);
        uint64_t v35 = *(void *)(v0 + 240);
        swift_endAccess();
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v35);
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
        uint64_t v36 = sub_1DC99A550();
        v37(v36);
        goto LABEL_20;
      }
      sub_1DCB87218();
      char v28 = sub_1DCB871F8();
      uint64_t v29 = sub_1DCB87218();
      if (v28)
      {
LABEL_18:
        *(void *)(*(void *)(v0 + 176) + 112) = v29;
        goto LABEL_19;
      }
      uint64_t result = sub_1DCB871F8();
      if (result)
      {
LABEL_16:
        uint64_t v29 = sub_1DCB87218();
        goto LABEL_18;
      }
      if (((v27 | v26) & 0x8000000000000000) == 0)
      {
        uint64_t v29 = v27 + v26;
        if (!__OFADD__(v27, v26))
        {
          if ((v29 & 0x8000000000000000) == 0) {
            goto LABEL_18;
          }
LABEL_28:
          __break(1u);
          return result;
        }
        goto LABEL_16;
      }
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    sub_1DCB87218();
    uint64_t result = sub_1DCB871F8();
    if (result)
    {
      uint64_t v20 = sub_1DCB87218();
LABEL_9:
      *(void *)(*(void *)(v0 + 176) + 112) = v20;
      goto LABEL_10;
    }
    if (v18 < 0)
    {
      __break(1u);
    }
    else if (v18)
    {
      uint64_t v20 = v18 - 1;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)(v0 + 304);
  uint64_t v41 = *(void *)(v0 + 296);
  uint64_t v43 = *(void *)(v0 + 336);
  uint64_t v40 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 264);
  uint64_t v12 = *(void *)(v0 + 208);
  uint64_t v11 = *(void *)(v0 + 216);
  uint64_t v13 = *(void *)(v0 + 200);
  uint64_t v14 = *(void *)(v0 + 176);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 272) + 8);
  v15(*(void *)(v0 + 280), v10);
  *(unsigned char *)(v14 + 120) = 2;
  sub_1DC8E7D10();
  v16();
  *(void *)(v0 + 160) = 0;
  sub_1DCB87198();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  v15(v40, v10);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v43, v41);
LABEL_20:
  char v38 = *(unsigned char *)(v0 + 392);
  sub_1DC99A4E8();
  if ((v38 & 1) == 0) {
    sub_1DC997534();
  }
  sub_1DC99A404();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v39();
}

uint64_t sub_1DC998238()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *v0;
  sub_1DC88678C();
  void *v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DC998318, v2, 0);
}

uint64_t sub_1DC998318()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[22];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  *(unsigned char *)(v4 + 120) = 2;
  sub_1DC99A4E8();
  sub_1DC99A404();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v5();
}

uint64_t sub_1DC998400()
{
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 176);
  sub_1DC99A4D8();
  v3();
  *(unsigned char *)(v2 + 120) = 2;
  sub_1DC8E7D10();
  v4();
  *(void *)(v0 + 168) = v1;
  sub_1DCB87198();

  uint64_t v5 = sub_1DC99A550();
  v6(v5);
  char v7 = *(unsigned char *)(v0 + 392);
  sub_1DC99A4E8();
  if ((v7 & 1) == 0) {
    sub_1DC997534();
  }
  sub_1DC99A404();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v8();
}

uint64_t sub_1DC998548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a6;
  v8[4] = a8;
  _OWORD v8[2] = a5;
  v8[5] = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1DCB88718();
  v8[6] = v9;
  v8[7] = *(void *)(v9 - 8);
  v8[8] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[9] = AssociatedTypeWitness;
  v8[10] = *(void *)(AssociatedTypeWitness - 8);
  v8[11] = swift_task_alloc();
  uint64_t v13 = (uint64_t (*)(void))((char *)&dword_1EAA9FAC8 + dword_1EAA9FAC8);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[12] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_1DC998704;
  return v13();
}

uint64_t sub_1DC998704()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DC9987D0, 0, 0);
}

uint64_t sub_1DC9987D0()
{
  sub_1DC886900();
  sub_1DC8E7D10();
  v1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DC9988B8;
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  return MEMORY[0x1F4187C78](v4, v5, AssociatedConformanceWitness);
}

uint64_t sub_1DC9988B8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v4 = sub_1DC998A20;
  }
  else
  {
    sub_1DC99A4D8();
    v5();
    uint64_t v4 = sub_1DC9989B0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1DC9989B0()
{
  sub_1DC8867A8();
  uint64_t v0 = sub_1DC902A50();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v2();
}

uint64_t sub_1DC998A20()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_1DC99A4D8();
  v3();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 1, 1, v2);
  uint64_t v4 = sub_1DC902A50();
  v5(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v6();
}

uint64_t sub_1DC998ABC()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  swift_getAssociatedTypeWitness();
  sub_1DC8F0494();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  sub_1DC8F0494();
  (*(void (**)(void))(v3 + 8))();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1DC998BCC()
{
  sub_1DC998ABC();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1DC998BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1DC998C48(a1, a2);
  return v4;
}

uint64_t sub_1DC998C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 96);
  uint64_t v6 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = v4[11];
  sub_1DC88D538();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v19 = v4[13];
  uint64_t v28 = v6;
  uint64_t v29 = v13;
  uint64_t v30 = v5;
  uint64_t v31 = v19;
  type metadata accessor for AsyncSequencePublisher.Subscription.Impl();
  uint64_t v20 = v26;
  sub_1DC8E7D10();
  v21();
  uint64_t v22 = v27;
  sub_1DC8E7D10();
  v23();
  uint64_t v24 = sub_1DC997264((uint64_t)v18, (uint64_t)v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v20, v13);
  *(void *)(v3 + 16) = v24;
  return v3;
}

uint64_t sub_1DC998E34(uint64_t a1)
{
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA2180);
  uint64_t v6 = sub_1DC8BADF0(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1DC99A458();
  sub_1DC99A498(v7);
  uint64_t v8 = (void *)swift_allocObject();
  sub_1DC99A5B4(v8)[5] = a1;
  sub_1DC99A55C();
  if (a1 == 1)
  {
    sub_1DC999EB8(v2);
  }
  else
  {
    sub_1DCB87E38();
    sub_1DC8F0494();
    uint64_t v9 = sub_1DC99A53C();
    v10(v9);
    if (*v3)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1DCB87DE8();
      swift_unknownObjectRelease();
    }
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &unk_1EAAA2BA0;
  *(void *)(v11 + 24) = v1;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1DC998FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1DC998FF8, 0, 0);
}

uint64_t sub_1DC998FF8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 32) = v1;
  return sub_1DC99A434((uint64_t)sub_1DC999018, v1);
}

uint64_t sub_1DC999018()
{
  sub_1DC8867A8();
  sub_1DC9973F0(*(void *)(v0 + 24));
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC999070()
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2180);
  uint64_t v5 = sub_1DC8BADF0(v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1DC99A458();
  sub_1DC99A498(v6);
  uint64_t v7 = (void *)swift_allocObject();
  sub_1DC99A5B4(v7);
  sub_1DC99A55C();
  if (v2 == 1)
  {
    sub_1DC999EB8(v1);
  }
  else
  {
    sub_1DCB87E38();
    sub_1DC8F0494();
    uint64_t v8 = sub_1DC99A53C();
    v9(v8);
    if (*v3)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1DCB87DE8();
      swift_unknownObjectRelease();
    }
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &unk_1EAAA2BB8;
  *(void *)(v10 + 24) = v0;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1DC99920C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1DC99922C, 0, 0);
}

uint64_t sub_1DC99922C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 24) = v1;
  return sub_1DC99A434((uint64_t)sub_1DC99924C, v1);
}

uint64_t sub_1DC99924C()
{
  sub_1DC8867A8();
  sub_1DC9974B4();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9992A4()
{
  swift_release();
  return v0;
}

uint64_t sub_1DC9992C4()
{
  sub_1DC9992A4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AsyncSequencePublisher.Subscription()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC999310()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncSequencePublisher.Subscription.Impl()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_1DC999438(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC999504);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncSequencePublisher.Subscription.Impl.TerminationState()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC999544()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC9995D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1DC99968C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1DC9996DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1DC99972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1DC99977C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1DC9997CC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1DC999918(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DC999B1CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for AsyncSequencePublisher()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC999B5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC999B78(uint64_t a1)
{
  return sub_1DC998E34(a1);
}

uint64_t sub_1DC999B9C()
{
  return sub_1DC999070();
}

uint64_t sub_1DC999BC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC999BDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC999BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v29[1] = a4;
  uint64_t v7 = *(void *)(a2 + 16);
  sub_1DC88D538();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC8A22D0();
  uint64_t v13 = v12 - v11;
  uint64_t v15 = *(void *)(v14 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_1DC8BADF0(AssociatedTypeWitness);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v29 - v18;
  sub_1DC88D538();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  sub_1DC8A22D0();
  uint64_t v25 = v24 - v23;
  v30[0] = v7;
  v30[1] = a3;
  v30[2] = v15;
  uint64_t v31 = a4;
  uint64_t v26 = type metadata accessor for AsyncSequencePublisher.Subscription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v25, a1, a3);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 16))(v13, v29[2], v7);
  sub_1DCB87F28();
  uint64_t v27 = sub_1DC998BF8(v25, (uint64_t)v19);
  uint64_t v31 = v26;
  uint64_t WitnessTable = swift_getWitnessTable();
  v30[0] = v27;
  sub_1DCB871A8();
  return sub_1DC8818D0((uint64_t)v30);
}

uint64_t sub_1DC999DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC999BF8(a1, a4, a2, a3);
}

uint64_t sub_1DC999DF8()
{
  return sub_1DC99A31C();
}

uint64_t sub_1DC999E00(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_1DC886800(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_1DC8D78C0;
  return sub_1DC998FD8(a1, v3, v4, v6, v5);
}

uint64_t sub_1DC999EB8(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA2180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC999F18()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC99A43C();
  return v4(v3);
}

uint64_t sub_1DC999FB4()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC99A480();
  return sub_1DC99920C(v3, v4, v5, v6);
}

uint64_t sub_1DC99A04C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC99A084()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D6930;
  uint64_t v3 = sub_1DC99A43C();
  return v4(v3);
}

uint64_t sub_1DC99A11C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);
  sub_1DC99A550();

  return swift_deallocObject();
}

uint64_t sub_1DC99A1E0(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[8];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)sub_1DC886800(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_1DC8D78C0;
  return sub_1DC998548(a1, v7, v8, v9, v10, v3, v4, v5);
}

uint64_t sub_1DC99A31C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC99A368()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D6930;
  sub_1DC99A480();
  return sub_1DC997668();
}

uint64_t sub_1DC99A404()
{
  return swift_task_dealloc();
}

uint64_t sub_1DC99A42C()
{
  return sub_1DC99A31C();
}

uint64_t sub_1DC99A434(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4188298](a1, a2, 0);
}

uint64_t sub_1DC99A43C()
{
  return v0;
}

uint64_t sub_1DC99A458()
{
  return sub_1DCB87E48();
}

uint64_t sub_1DC99A480()
{
  return v0;
}

uint64_t sub_1DC99A498(uint64_t a1)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1DC99A4E8()
{
  *(void *)(*(void *)(v0 + 176) + 128) = 0;
  return swift_release();
}

uint64_t sub_1DC99A504()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1DC99A524()
{
  return swift_beginAccess();
}

uint64_t sub_1DC99A53C()
{
  return v0;
}

uint64_t sub_1DC99A550()
{
  return v0;
}

uint64_t sub_1DC99A55C()
{
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v1);
  return swift_retain();
}

uint64_t sub_1DC99A594(uint64_t a1)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 1, 1, a1);
}

void *sub_1DC99A5B4(void *result)
{
  result[2] = 0;
  result[3] = 0;
  result[4] = v1;
  return result;
}

uint64_t sub_1DC99A5C8()
{
  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeInputNode()
{
  return self;
}

double TimeRange.asCMTimeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = *(void *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  double result = *(double *)(v1 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v2;
  return result;
}

uint64_t Time.asCMTime.getter()
{
  return *(void *)v0;
}

uint64_t Time.hash(into:)()
{
  return sub_1DCB891E8();
}

BOOL static Time.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8)
      && *(_DWORD *)(a1 + 12) == *(_DWORD *)(a2 + 12)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t sub_1DC99A718(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C616373656D6974 && a2 == 0xE900000000000065;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7367616C66 && a2 == 0xE500000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x68636F7065 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1DC99A8C4(char a1)
{
  uint64_t result = 0x65756C6176;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C616373656D6974;
      break;
    case 2:
      uint64_t result = 0x7367616C66;
      break;
    case 3:
      uint64_t result = 0x68636F7065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DC99A948()
{
  return sub_1DC99A8C4(*v0);
}

uint64_t sub_1DC99A950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC99A718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC99A978(uint64_t a1)
{
  unint64_t v2 = sub_1DC99AB90();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC99A9B4(uint64_t a1)
{
  unint64_t v2 = sub_1DC99AB90();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Time.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2BF0);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC99AB90();
  sub_1DCB892B8();
  sub_1DCB88F38();
  if (!v1)
  {
    sub_1DCB88F28();
    sub_1DCB88F58();
    sub_1DCB88F38();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_1DC99AB90()
{
  unint64_t result = qword_1EAAA2BF8;
  if (!qword_1EAAA2BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2BF8);
  }
  return result;
}

uint64_t Time.hashValue.getter()
{
  return sub_1DCB891F8();
}

uint64_t Time.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA2C00);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC99AB90();
  sub_1DC99BA88();
  if (!v2)
  {
    uint64_t v6 = sub_1DCB88E18();
    int v7 = sub_1DCB88E08();
    int v12 = sub_1DCB88E38();
    uint64_t v9 = sub_1DCB88E18();
    uint64_t v10 = sub_1DC99BA44();
    v11(v10);
    *(void *)a2 = v6;
    *(_DWORD *)(a2 + 8) = v7;
    *(_DWORD *)(a2 + 12) = v12;
    *(void *)(a2 + 16) = v9;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DC99AE0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Time.init(from:)(a1, a2);
}

uint64_t sub_1DC99AE24(void *a1)
{
  return Time.encode(to:)(a1);
}

uint64_t sub_1DC99AE44()
{
  return sub_1DCB891F8();
}

uint64_t TimeRange.hash(into:)()
{
  return sub_1DCB891E8();
}

BOOL static TimeRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8)
    || *(_DWORD *)(a1 + 12) != *(_DWORD *)(a2 + 12)
    || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    return 0;
  }
  return *(void *)(a1 + 24) == *(void *)(a2 + 24)
      && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
      && *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36)
      && *(void *)(a1 + 40) == *(void *)(a2 + 40);
}

uint64_t sub_1DC99AFB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC99B09C(char a1)
{
  if (a1) {
    return 0x6E6F697461727564;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_1DC99B0D0()
{
  return sub_1DC99B09C(*v0);
}

uint64_t sub_1DC99B0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC99AFB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC99B100(uint64_t a1)
{
  unint64_t v2 = sub_1DC99B2E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC99B13C(uint64_t a1)
{
  unint64_t v2 = sub_1DC99B2E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TimeRange.encode(to:)(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA2C08);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC99B2E8();
  sub_1DCB892B8();
  sub_1DC89C18C();
  sub_1DC99BAAC();
  sub_1DCB88F18();
  if (!v8)
  {
    sub_1DC99BAAC();
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

unint64_t sub_1DC99B2E8()
{
  unint64_t result = qword_1EAAA2C10;
  if (!qword_1EAAA2C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C10);
  }
  return result;
}

uint64_t TimeRange.hashValue.getter()
{
  return sub_1DCB891F8();
}

uint64_t TimeRange.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA2C18);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC99B2E8();
  sub_1DC99BA88();
  if (!v2)
  {
    sub_1DC89C0C0();
    sub_1DC99BA5C();
    sub_1DC99BA5C();
    uint64_t v6 = sub_1DC99BA44();
    v7(v6);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v9;
    a2[4] = v10;
    a2[5] = v11;
  }
  return sub_1DC8818D0((uint64_t)a1);
}

uint64_t sub_1DC99B560@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return TimeRange.init(from:)(a1, a2);
}

uint64_t sub_1DC99B578(void *a1)
{
  return TimeRange.encode(to:)(a1);
}

unint64_t sub_1DC99B59C()
{
  unint64_t result = qword_1EAAA2C20;
  if (!qword_1EAAA2C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C20);
  }
  return result;
}

unint64_t sub_1DC99B5EC()
{
  unint64_t result = qword_1EAAA2C28;
  if (!qword_1EAAA2C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C28);
  }
  return result;
}

ValueMetadata *type metadata accessor for Time()
{
  return &type metadata for Time;
}

ValueMetadata *type metadata accessor for TimeRange()
{
  return &type metadata for TimeRange;
}

unsigned char *storeEnumTagSinglePayload for TimeRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC99B728);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeRange.CodingKeys()
{
  return &type metadata for TimeRange.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Time.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC99B82CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Time.CodingKeys()
{
  return &type metadata for Time.CodingKeys;
}

unint64_t sub_1DC99B868()
{
  unint64_t result = qword_1EAAA2C30;
  if (!qword_1EAAA2C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C30);
  }
  return result;
}

unint64_t sub_1DC99B8B8()
{
  unint64_t result = qword_1EAAA2C38;
  if (!qword_1EAAA2C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C38);
  }
  return result;
}

unint64_t sub_1DC99B908()
{
  unint64_t result = qword_1EAAA2C40;
  if (!qword_1EAAA2C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C40);
  }
  return result;
}

unint64_t sub_1DC99B958()
{
  unint64_t result = qword_1EAAA2C48;
  if (!qword_1EAAA2C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C48);
  }
  return result;
}

unint64_t sub_1DC99B9A8()
{
  unint64_t result = qword_1EAAA2C50;
  if (!qword_1EAAA2C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C50);
  }
  return result;
}

unint64_t sub_1DC99B9F8()
{
  unint64_t result = qword_1EAAA2C58;
  if (!qword_1EAAA2C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C58);
  }
  return result;
}

uint64_t sub_1DC99BA44()
{
  return v0;
}

uint64_t sub_1DC99BA5C()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC99BA88()
{
  return sub_1DCB89298();
}

uint64_t sub_1DC99BAAC()
{
  return v0 - 104;
}

uint64_t sub_1DC99BAC4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC99FF64(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  sub_1DC88D604();
  return sub_1DC99BB48(v8);
}

uint64_t sub_1DC99BAF4(void *a1)
{
  swift_retain();
  uint64_t v2 = sub_1DC99BE60(a1);
  swift_release();
  return v2;
}

uint64_t sub_1DC99BB48(void *a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v2 = sub_1DC99BE60(a1);
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

void sub_1DC99BBC8()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v5, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 40))(v7, AssociatedTypeWitness, v1);
  uint64_t v10 = sub_1DC99FFE0();
  v11(v10);
  sub_1DC88D674();
}

void *sub_1DC99BCD0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC99FF64(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10[0]);
  return sub_1DC99BD08(v10);
}

void *sub_1DC99BD08(void *a1)
{
  v2[2] = &v3;
  return sub_1DC99DC3C(a1, (uint64_t (*)(void *))sub_1DC88CB08, v2);
}

void sub_1DC99BD4C()
{
}

uint64_t sub_1DC99BE28(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC99FF64(a1, a2, a3, a4, a5, a6, a7, a8, v9, __src[0]);
  return sub_1DC99BE60(__src);
}

uint64_t sub_1DC99BE60(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  sub_1DC882264((uint64_t)__src);
  uint64_t v2 = sub_1DCAC356C();
  sub_1DC88CABC((uint64_t)__src);
  swift_release();
  swift_release();
  return v2;
}

void sub_1DC99BF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1DC88D538();
  uint64_t v29 = v28;
  uint64_t v31 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v32);
  uint64_t v33 = (char *)v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
  sub_1DC909E58();
  sub_1DC8E7D10();
  v37();
  unint64_t v38 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v25;
  *(void *)(v39 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v39 + v38, v33, v25);
  sub_1DC909E58();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = sub_1DC88D624();
  uint64_t v42 = sub_1DC88D624();
  uint64_t v43 = sub_1DC88D624();
  v47[2] = AssociatedTypeWitness;
  v47[3] = v41;
  v47[4] = v42;
  v47[5] = v43;
  uint64_t v44 = type metadata accessor for SharedSoundPrintK.Configuration();
  uint64_t v45 = type metadata accessor for SharedSoundPrintK.Instance();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DCACBE9C(v27, v36, (uint64_t)sub_1DC99F9E8, v39, v44, v45, WitnessTable, (uint64_t)&a10);
  swift_release();
  swift_release();
  sub_1DC88D674();
}

uint64_t sub_1DC99C128(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC99FF64(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  sub_1DC88D604();
  return sub_1DC99BAF4(v8);
}

void sub_1DC99C158()
{
  sub_1DC9A0058();
  sub_1DC9A001C();
  uint64_t v4 = (void *)v3();
  uint64_t v5 = sub_1DC9A4654(v4);
  uint64_t v7 = v6;

  if (!v1)
  {
    uint64_t v8 = sub_1DC886810();
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v7;
    uint64_t v9 = sub_1DC886810();
    *(void *)(v9 + 16) = v0;
    *(void *)(v9 + 24) = v2;
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = sub_1DC99FF4C;
    v10[3] = v9;
    v10[4] = sub_1DC99FF34;
    v10[5] = v8;
    uint64_t v11 = sub_1DC886810();
    *(void *)(v11 + 16) = sub_1DC99FF04;
    *(void *)(v11 + 24) = v10;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1DC87E988(&qword_1EAAA0B48);
    sub_1DC87E988(&qword_1EAAA2C98);
    sub_1DC88CF34(&qword_1EAAA2CA0, &qword_1EAAA0B48);
    sub_1DC9A0034();
    swift_release();
    swift_release();
  }
}

void sub_1DC99C2CC()
{
  sub_1DC9A0058();
  sub_1DC9A001C();
  uint64_t v4 = (void *)v3();
  uint64_t v5 = sub_1DC9A4654(v4);
  uint64_t v7 = v6;

  if (!v1)
  {
    uint64_t v8 = sub_1DC886810();
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v7;
    uint64_t v9 = sub_1DC886810();
    *(void *)(v9 + 16) = v0;
    *(void *)(v9 + 24) = v2;
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = sub_1DC99FF4C;
    v10[3] = v9;
    v10[4] = sub_1DC99FF34;
    v10[5] = v8;
    uint64_t v11 = sub_1DC886810();
    *(void *)(v11 + 16) = sub_1DC99FF04;
    *(void *)(v11 + 24) = v10;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1DC87E988(&qword_1EAAA0C80);
    sub_1DC87E988(&qword_1EAAA2C98);
    sub_1DC88CF34(&qword_1EAAA2CA8, &qword_1EAAA0C80);
    sub_1DC9A0034();
    swift_release();
    swift_release();
  }
}

void sub_1DC99C440(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  uint64_t v7 = sub_1DC9A4654(v6);
  uint64_t v9 = v8;

  if (!v2)
  {
    uint64_t v10 = sub_1DC886810();
    *(void *)(v10 + 16) = v7;
    *(void *)(v10 + 24) = v9;
    uint64_t v11 = sub_1DC886810();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    int v12 = (void *)swift_allocObject();
    v12[2] = sub_1DC99FF4C;
    v12[3] = v11;
    v12[4] = sub_1DC99FF34;
    v12[5] = v10;
    uint64_t v13 = sub_1DC886810();
    *(void *)(v13 + 16) = sub_1DC99FF04;
    *(void *)(v13 + 24) = v12;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1DC87E988(&qword_1EAAA2CB0);
    sub_1DC87E988(&qword_1EAAA2C98);
    sub_1DC88CF34(&qword_1EAAA2CB8, &qword_1EAAA2CB0);
    sub_1DCB874A8();
    swift_release();
    swift_release();
  }
}

void sub_1DC99C5EC(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  uint64_t v7 = sub_1DC9A4654(v6);
  uint64_t v9 = v8;

  if (!v2)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v7;
    *(void *)(v10 + 24) = v9;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    int v12 = (void *)swift_allocObject();
    v12[2] = sub_1DC909948;
    v12[3] = v11;
    v12[4] = sub_1DC9098FC;
    v12[5] = v10;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1DC99F8F8;
    *(void *)(v13 + 24) = v12;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1DC87E988(&qword_1EAA9FCA0);
    sub_1DC87E988(&qword_1EAAA2C98);
    sub_1DC88CF34(&qword_1EAA9FCC0, &qword_1EAA9FCA0);
    sub_1DCB874A8();
    swift_release();
    swift_release();
  }
}

void sub_1DC99C7B0()
{
}

void sub_1DC99C830()
{
}

#error "1DC99C8A4: call analysis failed (funcsize=16)"

BOOL sub_1DC99C8B8(uint64_t a1, uint64_t a2)
{
  if ((sub_1DCB878C8() & 1) != 0
    && (uint64_t v4 = type metadata accessor for SharedSoundPrintK.Configuration(),
        *(void *)(a1 + *(int *)(v4 + 52)) == *(void *)(a2 + *(int *)(v4 + 52))))
  {
    return *(void *)(a1 + *(int *)(v4 + 56)) == *(void *)(a2 + *(int *)(v4 + 56));
  }
  else
  {
    return 0;
  }
}

void sub_1DC99C954()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v3 + 32);
  long long v12 = *(_OWORD *)(v3 + 16);
  long long v13 = v4;
  v11[1] = v3;
  long long v14 = v12;
  long long v15 = v4;
  type metadata accessor for SharedSoundPrintK.Configuration.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v7 = v6;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v11 - v9;
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB892B8();
  LOBYTE(v14) = 0;
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC909DD8(1);
    sub_1DC909DD8(2);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_1DC88D674();
}

uint64_t sub_1DC99CADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for SharedSoundPrintK.Configuration();
  *(void *)(a5 + *(int *)(result + 52)) = a2;
  *(void *)(a5 + *(int *)(result + 56)) = a3;
  return result;
}

void sub_1DC99CB8C()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v33 = v11;
  sub_1DC88D538();
  uint64_t v35 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  uint64_t v37 = v14;
  type metadata accessor for SharedSoundPrintK.Configuration.CodingKeys();
  swift_getWitnessTable();
  sub_1DC909E58();
  uint64_t v38 = sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v34 = v15;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v16);
  uint64_t v39 = v8;
  uint64_t v40 = v6;
  uint64_t v36 = v6;
  uint64_t v41 = v4;
  uint64_t v42 = v2;
  uint64_t v17 = type metadata accessor for SharedSoundPrintK.Configuration();
  sub_1DC88D538();
  uint64_t v32 = v18;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v31 - v20;
  sub_1DC881A8C(v10, v10[3]);
  sub_1DC909E58();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v10);
  }
  else
  {
    uint64_t v22 = v21;
    uint64_t v23 = v35;
    LOBYTE(v39) = 0;
    uint64_t v24 = v37;
    sub_1DCB88DF8();
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v22, v24, v8);
    uint64_t v25 = v17;
    *(void *)&v22[*(int *)(v17 + 52)] = sub_1DC909DB4(1);
    uint64_t v26 = sub_1DC909DB4(2);
    uint64_t v27 = sub_1DC909D3C();
    v28(v27);
    *(void *)&v22[*(int *)(v17 + 56)] = v26;
    uint64_t v29 = v32;
    sub_1DC8E7D10();
    v30();
    sub_1DC8818D0((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v25);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC99CE70()
{
  sub_1DC8A85A8();

  return sub_1DC8A85A8();
}

uint64_t sub_1DC99CEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((sub_1DC8DCF18(a1, a3) & 1) == 0) {
    return 0;
  }

  return sub_1DC8DCF18(a2, a4);
}

uint64_t sub_1DC99CF08(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB943A0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DCB943E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1DC99CFF4(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0xD000000000000014;
  }
}

void sub_1DC99D030()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  sub_1DC87E988(qword_1EAAA2CE8);
  sub_1DC88D538();
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC99FADC();
  sub_1DCB892B8();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  sub_1DC99FB28(&qword_1EAAA62D0);
  sub_1DC99FFB4();
  if (!v0) {
    sub_1DC99FFB4();
  }
  uint64_t v4 = sub_1DC99FFE0();
  v5(v4);
  sub_1DC88D674();
}

uint64_t sub_1DC99D16C()
{
  return sub_1DCB891F8();
}

void sub_1DC99D1C4()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA2CD0);
  sub_1DC88D538();
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC99FADC();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC99FB28(&qword_1EAAA2CE0);
    sub_1DC99FF84();
    swift_bridgeObjectRetain();
    sub_1DC99FF84();
    uint64_t v4 = sub_1DC9A00C0();
    v5(v4);
    swift_bridgeObjectRetain();
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC88D674();
}

uint64_t sub_1DC99D370(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DC99D3C4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void sub_1DC99D418()
{
}

void sub_1DC99D43C()
{
}

BOOL sub_1DC99D454(uint64_t a1, uint64_t a2)
{
  return sub_1DC99C8B8(a1, a2);
}

unint64_t sub_1DC99D464()
{
  return sub_1DC99CFF4(*v0);
}

uint64_t sub_1DC99D46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC99CF08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC99D494(uint64_t a1)
{
  unint64_t v2 = sub_1DC99FADC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC99D4D0(uint64_t a1)
{
  unint64_t v2 = sub_1DC99FADC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DC99D50C(void *a1@<X8>)
{
  sub_1DC99D1C4();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_1DC99D538()
{
}

uint64_t sub_1DC99D554()
{
  return sub_1DC99D16C();
}

uint64_t sub_1DC99D55C()
{
  return sub_1DC99CE70();
}

uint64_t sub_1DC99D564()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC99D5B4(uint64_t *a1, uint64_t *a2)
{
  return sub_1DC99CEB0(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1DC99D5C8()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA2CC0);
  sub_1DC88D538();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = sub_1DC88CEC8;
  v9[3] = v0;
  v9[4] = v8;
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA12D0);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA6170, (uint64_t *)&unk_1EAAA12D0);
  sub_1DCB87378();
  sub_1DC88CF34(&qword_1EAAA2CC8, &qword_1EAAA2CC0);
  uint64_t v10 = sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v10;
}

uint64_t type metadata accessor for SharedSoundPrintK.Instance()
{
  return self;
}

uint64_t destroy for SharedSoundPrintK.Output()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s13SoundAnalysis17SharedSoundPrintKV6OutputVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SharedSoundPrintK.Output(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SharedSoundPrintK.Output(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SharedSoundPrintK.Output()
{
  return &type metadata for SharedSoundPrintK.Output;
}

ValueMetadata *type metadata accessor for SharedSoundPrintK()
{
  return &type metadata for SharedSoundPrintK;
}

uint64_t sub_1DC99D8AC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC99D9B8);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_1DC99D9CC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
  }
  else
  {
    int v9 = a3 - v7;
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v13 = a2 - v7;
    }
    else {
      int v13 = 1;
    }
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DC99DB6CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for SharedSoundPrintK.Configuration()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC99DBAC()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DC99DBCC()
{
  unint64_t result = qword_1EAAA2C60;
  if (!qword_1EAAA2C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2C60);
  }
  return result;
}

void *sub_1DC99DC18(void *a1)
{
  return sub_1DC99BD08(a1);
}

void *sub_1DC99DC3C(void *a1, uint64_t (*a2)(void *), void *a3)
{
  uint64_t v75 = a3;
  char v76 = a2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9DA50);
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  MEMORY[0x1F4188790](v4);
  char v73 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1DC87E988(&qword_1EAA9DA48);
  MEMORY[0x1F4188790](v72);
  char v71 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1DC87E988(&qword_1EAA9FCA0);
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  char v74 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1DC87E988(&qword_1EAAA2C68);
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v65 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAAA7C0);
  uint64_t v63 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA2C70);
  uint64_t v64 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  int v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DCB86BF8();
  uint64_t v68 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = objc_allocWithZone(NSNumber);
  sub_1DC882264((uint64_t)a1);
  LODWORD(v19) = 1182400512;
  uint64_t v20 = objc_msgSend(v18, sel_initWithFloat_, v19);
  uint64_t v21 = v78;
  sub_1DCA89A70();
  if (!v21)
  {
    long long v56 = v11;
    uint64_t v57 = v9;
    long long v58 = v14;
    uint64_t v59 = v12;
    v78 = v17;
    uint64_t v60 = v15;
    memcpy(__dst, a1, 0x41uLL);
    id v22 = objc_msgSend(v20, sel_integerValue);

    __dst[9] = 1;
    __dst[10] = v22;
    uint64_t v23 = (void *)v76(__dst);
    sub_1DC88CABC((uint64_t)a1);
    sub_1DCB86BE8();
    __dst[0] = sub_1DC9A7A54();
    uint64_t v24 = (int *)sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    uint64_t v25 = sub_1DC87E988(&qword_1EAA9E860);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    uint64_t v26 = v73;
    char v76 = (uint64_t (*)(void *))v25;
    sub_1DCB873D8();
    swift_release();
    uint64_t v27 = a1[9];
    BOOL v28 = __OFSUB__(v27, 1);
    uint64_t v29 = v27 - 1;
    if (v28)
    {
      __break(1u);
    }
    else
    {
      uint64_t v30 = (unsigned __int128)(v29 * (__int128)160) >> 64;
      uint64_t v31 = 160 * v29;
      uint64_t v32 = (uint64_t)v71;
      uint64_t v24 = (int *)v72;
      uint64_t v34 = v69;
      uint64_t v33 = v70;
      if (v30 == v31 >> 63)
      {
        uint64_t v35 = v31 + 512;
        if (!__OFADD__(v31, 512))
        {
          uint64_t v36 = a1[10];
          uint64_t v37 = 160 * v36;
          if ((unsigned __int128)(v36 * (__int128)160) >> 64 == (160 * v36) >> 63)
          {
            uint64_t v75 = v23;
            (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v71, v26, v70);
            *(void *)(v32 + v24[15]) = v35;
            *(void *)(v32 + v24[16]) = v37;
            *(void *)(v32 + v24[17]) = v76;
            (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v33);
            sub_1DC87E988(&qword_1EAAA0BC0);
            sub_1DC88CF34(&qword_1EAA9FCB8, &qword_1EAA9DA48);
            sub_1DCB873D8();
            uint64_t v38 = sub_1DC99F7FC(v32);
            uint64_t v24 = (int *)MEMORY[0x1E01A8D20](v38);
            uint64_t v23 = (void *)MEMORY[0x1E01A8D20]();
            if (qword_1EAA9D1E0 == -1)
            {
LABEL_8:
              uint64_t v39 = swift_allocObject();
              *(unsigned char *)(v39 + 16) = 34;
              LOWORD(__dst[0]) = 34;
              uint64_t v40 = MEMORY[0x1F4188790](v39);
              *(&v55 - 4) = (uint64_t)sub_1DC909814;
              *(&v55 - 3) = v40;
              *(&v55 - 2) = (uint64_t)__dst;
              swift_retain();
              sub_1DCAC3890();
              uint64_t v41 = v68;
              uint64_t v42 = v78;
              uint64_t v44 = v43;
              swift_release();
              swift_release();
              uint64_t v45 = v65;
              char v46 = v74;
              sub_1DC99C5EC(v44, (uint64_t)&off_1F37FEC20);
              (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v67);
              swift_release();
              sub_1DC88CF34(&qword_1EAAA2C78, &qword_1EAAA2C68);
              char v48 = v56;
              uint64_t v49 = v62;
              sub_1DCB873D8();
              (*(void (**)(char *, uint64_t))(v61 + 8))(v45, v49);
              __dst[0] = 0;
              __dst[1] = 0xE000000000000000;
              sub_1DCB88A98();
              swift_bridgeObjectRelease();
              __dst[0] = 0xD000000000000019;
              __dst[1] = 0x80000001DCB94380;
              sub_1DC88CBB4();
              sub_1DCB88F98();
              sub_1DCB87A18();
              swift_bridgeObjectRelease();
              sub_1DCB87A18();
              uint64_t v50 = v58;
              sub_1DCB0497C();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v57);
              sub_1DC88CF34(&qword_1EAAA2C80, &qword_1EAAA2C70);
              uint64_t v51 = v59;
              uint64_t v52 = sub_1DCB87468();
              sub_1DC87E988(&qword_1EAAA2C88);
              swift_allocObject();
              uint64_t v53 = sub_1DC9C5478(v52);
              (*(void (**)(char *, uint64_t))(v64 + 8))(v50, v51);
              __dst[0] = v53;
              sub_1DC88CF34(&qword_1EAAA2C90, &qword_1EAAA2C88);
              uint64_t v54 = sub_1DCB873A8();
              swift_release();
              swift_release();
              type metadata accessor for SharedSoundPrintK.Instance();
              uint64_t v20 = (void *)swift_allocObject();
              v20[2] = v54;
              (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v60);
              return v20;
            }
LABEL_14:
            swift_once();
            goto LABEL_8;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  sub_1DC88CABC((uint64_t)a1);

  return v20;
}

void sub_1DC99E6E4()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  unint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v104 = v10;
  v105 = v9;
  uint64_t v12 = v11;
  sub_1DC87E988(&qword_1EAA9DA50);
  sub_1DC88D538();
  uint64_t v97 = v14;
  uint64_t v98 = v13;
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  uint64_t v102 = v15;
  uint64_t v100 = sub_1DC87E988(&qword_1EAA9DA48);
  MEMORY[0x1F4188790](v100);
  sub_1DC88D550();
  uint64_t v99 = v16;
  sub_1DC87E988(&qword_1EAA9FCA0);
  sub_1DC88D538();
  uint64_t v94 = v18;
  uint64_t v95 = v17;
  MEMORY[0x1F4188790](v17);
  sub_1DC88D550();
  v101 = v19;
  uint64_t v85 = sub_1DC87E988(&qword_1EAAA2C68);
  sub_1DC88D538();
  uint64_t v84 = v20;
  MEMORY[0x1F4188790](v21);
  sub_1DC88D550();
  uint64_t v92 = v22;
  uint64_t v88 = sub_1DC87E988(&qword_1EAAAA7C0);
  sub_1DC88D538();
  uint64_t v87 = v23;
  MEMORY[0x1F4188790](v24);
  sub_1DC88D550();
  uint64_t v86 = v25;
  uint64_t v91 = sub_1DC87E988(&qword_1EAAA2C70);
  sub_1DC88D538();
  uint64_t v90 = v26;
  MEMORY[0x1F4188790](v27);
  sub_1DC88D550();
  uint64_t v89 = v28;
  uint64_t v93 = sub_1DCB86BF8();
  sub_1DC88D538();
  uint64_t v96 = v29;
  MEMORY[0x1F4188790](v30);
  sub_1DC8A22D0();
  uint64_t v33 = v32 - v31;
  sub_1DC88D538();
  uint64_t v35 = v34;
  MEMORY[0x1F4188790](v36);
  sub_1DC8A22D0();
  uint64_t v39 = v38 - v37;
  uint64_t v109 = (uint64_t)v8;
  unint64_t v110 = v6;
  unint64_t v106 = v6;
  uint64_t v107 = v4;
  uint64_t v111 = v4;
  uint64_t v112 = v2;
  uint64_t v108 = v2;
  type metadata accessor for SharedReformattedAudioSource.Configuration();
  sub_1DC88D538();
  uint64_t v103 = v40;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v41);
  uint64_t v43 = (char *)&v82 - v42;
  uint64_t v44 = v8;
  sub_1DC8E7D10();
  v45();
  id v46 = objc_allocWithZone(NSNumber);
  LODWORD(v47) = 1182400512;
  id v48 = objc_msgSend(v46, sel_initWithFloat_, v47);
  sub_1DCA89A70();
  if (v0)
  {
    (*(void (**)(uint64_t, int *))(v35 + 8))(v39, v8);

    goto LABEL_11;
  }
  uint64_t v83 = v12;
  id v49 = objc_msgSend(v48, sel_integerValue);

  sub_1DC9A79A8(1, (uint64_t)v49, (uint64_t)v43);
  v105(v43);
  v105 = 0;
  sub_1DC909E44();
  sub_1DC88D5C8();
  v50();
  sub_1DCB86BE8();
  uint64_t v109 = sub_1DC9A7A54();
  uint64_t v51 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  uint64_t v52 = sub_1DC87E988(&qword_1EAA9E860);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  sub_1DCB873D8();
  swift_release();
  uint64_t v109 = (uint64_t)v8;
  unint64_t v110 = v106;
  uint64_t v111 = v107;
  uint64_t v112 = v108;
  uint64_t v53 = type metadata accessor for SharedSoundPrintK.Configuration();
  uint64_t v54 = *(void *)(v83 + *(int *)(v53 + 52));
  BOOL v55 = __OFSUB__(v54, 1);
  uint64_t v56 = v54 - 1;
  if (v55)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v57 = (unsigned __int128)(v56 * (__int128)160) >> 64;
  uint64_t v58 = 160 * v56;
  uint64_t v44 = (int *)v100;
  uint64_t v51 = v101;
  uint64_t v59 = v99;
  if (v57 != v58 >> 63)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v60 = v58 + 512;
  uint64_t v61 = v102;
  if (__OFADD__(v58, 512))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v62 = *(void *)(v83 + *(int *)(v53 + 56));
  uint64_t v63 = 160 * v62;
  if ((unsigned __int128)(v62 * (__int128)160) >> 64 == (160 * v62) >> 63)
  {
    uint64_t v108 = v33;
    uint64_t v64 = v98;
    uint64_t v65 = v97;
    sub_1DC8E7D10();
    v66();
    *(void *)(v59 + v44[15]) = v60;
    *(void *)(v59 + v44[16]) = v63;
    *(void *)(v59 + v44[17]) = v52;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v61, v64);
    sub_1DC87E988(&qword_1EAAA0BC0);
    sub_1DC88CF34(&qword_1EAA9FCB8, &qword_1EAA9DA48);
    sub_1DCB873D8();
    uint64_t v67 = sub_1DC99F7FC(v59);
    uint64_t v44 = (int *)MEMORY[0x1E01A8D20](v67);
    uint64_t v51 = (void *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 == -1) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  swift_once();
LABEL_8:
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 34;
  LOWORD(v109) = 34;
  uint64_t v69 = MEMORY[0x1F4188790](v68);
  *(&v82 - 4) = (uint64_t)sub_1DC909D14;
  *(&v82 - 3) = v69;
  *(&v82 - 2) = (uint64_t)&v109;
  swift_retain();
  uint64_t v70 = v105;
  sub_1DCAC3890();
  if (v70)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88D5C8();
    v73();
    (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v108, v93);
  }
  else
  {
    uint64_t v72 = v71;
    swift_release();
    swift_release();
    sub_1DC99C5EC(v72, (uint64_t)&off_1F37FEC20);
    sub_1DC88D5C8();
    v74();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA2C78, &qword_1EAAA2C68);
    sub_1DCB873D8();
    sub_1DC88D5C8();
    v75();
    uint64_t v109 = 0;
    unint64_t v110 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    uint64_t v109 = 0xD000000000000019;
    unint64_t v110 = 0x80000001DCB94380;
    sub_1DC88CBB4();
    sub_1DCB88F98();
    v105 = 0;
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB0497C();
    swift_bridgeObjectRelease();
    sub_1DC88D5C8();
    v76();
    sub_1DC88CF34(&qword_1EAAA2C80, &qword_1EAAA2C70);
    uint64_t v77 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAA2C88);
    sub_1DC886810();
    uint64_t v78 = sub_1DC9C5478(v77);
    sub_1DC88D5C8();
    v79();
    uint64_t v109 = v78;
    sub_1DC88CF34(&qword_1EAAA2C90, &qword_1EAAA2C88);
    uint64_t v80 = sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DC88D5C8();
    v81();
    type metadata accessor for SharedSoundPrintK.Instance();
    *(void *)(swift_allocObject() + 16) = v80;
  }
LABEL_11:
  sub_1DC88D674();
}

void sub_1DC99F118(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9FCF0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = (void *)sub_1DCB87908();
  id v12 = objc_msgSend(v10, sel_featureValueForName_, v11);

  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1DCB88498();

  uint64_t v13 = sub_1DC87E988(&qword_1EAAA0BC0);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v9, 1, v13) == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1DC88CF34(&qword_1EAA9FCE8, &qword_1EAAA0BC0);
  uint64_t v14 = sub_1DCB87058();
  uint64_t v15 = *(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8);
  v15(v9, v13);
  uint64_t v16 = (void *)sub_1DCB87908();
  id v17 = objc_msgSend(v10, sel_featureValueForName_, v16);

  if (!v17)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1DCB88498();

  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v7, 1, v13) != 1)
  {
    uint64_t v18 = sub_1DCB87058();
    v15(v7, v13);
    *a2 = v14;
    a2[1] = v18;
    return;
  }
LABEL_9:
  __break(1u);
}

id sub_1DC99F38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA0BC0);
  sub_1DC88D538();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC8A22D0();
  uint64_t v12 = v11 - v10;
  sub_1DC87E988(&qword_1EAAA0900);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  *(void *)(inited + 32) = a2;
  *(void *)(inited + 40) = a3;
  unint64_t v14 = sub_1DC982F9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, a1, v6);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1DCB884A8();
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 48) = v15;
  sub_1DCB877D8();
  id v16 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
  return sub_1DC99F66C();
}

uint64_t sub_1DC99F4EC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5)
{
  a4();
  if (!v5)
  {
    a5 = a2();
    swift_unknownObjectRelease();
  }
  return a5;
}

void sub_1DC99F564()
{
}

#error "1DC99F5D8: call analysis failed (funcsize=16)"

void sub_1DC99F5EC()
{
}

id sub_1DC99F66C()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1DCB86898();

    swift_willThrow();
  }
  return v2;
}

void *sub_1DC99F754@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  unint64_t result = sub_1DC99DC18(__dst);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void *sub_1DC99F7B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC99F754(a1, a2);
}

uint64_t sub_1DC99F7DC@<X0>(void *a1@<X8>)
{
  return sub_1DC957008(*(void **)(v1 + 32), a1);
}

uint64_t sub_1DC99F7FC(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAA9DA48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC99F860(void *a1@<X8>)
{
  sub_1DCB06754();
  *a1 = v2;
}

uint64_t sub_1DC99F88C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAC48C8(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC99F8C4()
{
  swift_unknownObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC99F8F8(uint64_t a1)
{
  return sub_1DC99F4EC(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1DC99F918()
{
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC99F948@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9A497C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1DC99F964()
{
  sub_1DC88D5C8();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1DC99F9E8@<X0>(uint64_t *a1@<X8>)
{
  sub_1DC9A00D4();
  uint64_t result = v3();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DC99FA54()
{
  swift_bridgeObjectRelease();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC99FA90()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC99FAD0(void *a1@<X8>)
{
}

unint64_t sub_1DC99FADC()
{
  unint64_t result = qword_1EAAA2CD8;
  if (!qword_1EAAA2CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2CD8);
  }
  return result;
}

uint64_t sub_1DC99FB28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8((uint64_t *)&unk_1EAAA0CB0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SharedSoundPrintK.Configuration.CodingKeys()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_1DC99FBA4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC99FC70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharedSoundPrintK.Output.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC99FD64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedSoundPrintK.Output.CodingKeys()
{
  return &type metadata for SharedSoundPrintK.Output.CodingKeys;
}

unint64_t sub_1DC99FDA0()
{
  unint64_t result = qword_1EAAA2D70;
  if (!qword_1EAAA2D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2D70);
  }
  return result;
}

uint64_t sub_1DC99FDEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC99FE08()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC99FE24()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DC99FE44()
{
  unint64_t result = qword_1EAAA2D78;
  if (!qword_1EAAA2D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2D78);
  }
  return result;
}

unint64_t sub_1DC99FE94()
{
  unint64_t result = qword_1EAAA2D80;
  if (!qword_1EAAA2D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2D80);
  }
  return result;
}

uint64_t sub_1DC99FF04(uint64_t a1)
{
  return sub_1DC99F8F8(a1);
}

uint64_t sub_1DC99FF1C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC99F948(a1);
}

id sub_1DC99FF34(uint64_t a1)
{
  return sub_1DC9098FC(a1);
}

uint64_t sub_1DC99FF4C(uint64_t a1)
{
  return sub_1DC909948(a1);
}

void *sub_1DC99FF64(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x58uLL);
}

uint64_t sub_1DC99FF84()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC99FFB4()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DC99FFE0()
{
  return v0;
}

void sub_1DC99FFF8()
{
  sub_1DC99BD4C();
}

uint64_t sub_1DC9A0034()
{
  return sub_1DCB874A8();
}

uint64_t sub_1DC9A0058()
{
  return swift_getObjectType();
}

void sub_1DC9A007C()
{
  sub_1DC99BBC8();
}

void sub_1DC9A00A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC99BF34(v21, v20, a1, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1DC9A00C0()
{
  return v0;
}

void sub_1DC9A00E8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  int v8 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v9 = v6;
  if (*(unsigned char *)(a1 + 16) && (uint64_t v9 = *(void *)a1, v8 == 1))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1DCB87908();
    sub_1DC882BC4(v7, v6, 1);
    uint64_t v11 = sub_1DC9A05C4();
    uint64_t v13 = v12;

    if (v3) {
      return;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = *(void *)(v9 + 16);
    swift_retain();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = &off_1F37FEC20;
    off_1F37FEC28(ObjectType, &off_1F37FEC20);
  }
  uint64_t v39 = v7;
  uint64_t v40 = v6;
  LOBYTE(v41) = v8;
  unint64_t v15 = sub_1DC9A0E94((uint64_t)&v39, a2);
  if (!v3)
  {
    id v16 = (void *)v15;
    if ((~v15 & 0xF000000000000007) != 0)
    {
      unint64_t v38 = v15;
      if ((v15 & 0x8000000000000000) != 0)
      {
        uint64_t v19 = (void *)(v15 & 0x7FFFFFFFFFFFFFFFLL);
        uint64_t v17 = type metadata accessor for SNSoundPrintFeatureExtractorConfiguration();
        uint64_t v18 = &off_1F37F3370;
      }
      else
      {
        uint64_t v17 = type metadata accessor for SNLogMelBasedFeatureExtractorConfiguration();
        uint64_t v18 = &off_1F37F3398;
        uint64_t v19 = v16;
      }
      *((void *)&v46 + 1) = v17;
      double v47 = v18;
      *(void *)&long long v45 = v19;
      sub_1DC8BA1CC(&v45, (uint64_t)&v39);
      uint64_t v21 = v42;
      unint64_t v22 = v43;
      sub_1DC881A8C(&v39, v42);
      uint64_t v23 = *(double (**)(uint64_t, unint64_t))(v22 + 8);
      id v24 = v19;
      double v25 = v23(v21, v22);
      uint64_t v26 = v42;
      unint64_t v27 = v43;
      sub_1DC881A8C(&v39, v42);
      LODWORD(v23) = (*(uint64_t (**)(uint64_t, unint64_t))(v27 + 16))(v26, v27);
      unint64_t v32 = v42;
      unint64_t v28 = v43;
      sub_1DC881A8C(&v39, v42);
      uint64_t v29 = *(uint64_t (**)(unint64_t, unint64_t))(v28 + 24);
      unint64_t v30 = v28;
      int v31 = (int)v23;
      LODWORD(v32) = v29(v32, v30);
      sub_1DC8818D0((uint64_t)&v39);
      id v16 = (void *)v38;
    }
    else
    {
      double v47 = 0;
      long long v45 = 0u;
      long long v46 = 0u;
      sub_1DC9A100C((uint64_t)&v45);
      type metadata accessor for SNModelMetadataUtils();
      sub_1DCB30700(v11, (uint64_t)v13);
      if (v42) {
        goto LABEL_19;
      }
      if ((v41 & 0x8000000000000000) != 0 || HIDWORD(v41)) {
        goto LABEL_26;
      }
      if (v40 & 1) != 0 || (v44)
      {
LABEL_19:
        sub_1DC884E74();
        swift_allocError();
        *uint64_t v20 = 0;
        swift_willThrow();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      int v37 = v41;
      uint64_t v36 = v39;
      unint64_t v32 = v43;
      swift_bridgeObjectRelease();
      if ((v32 & 0x8000000000000000) != 0 || HIDWORD(v32))
      {
LABEL_26:
        sub_1DC8AF148();
        sub_1DCB88C58();
        __break(1u);
        return;
      }
      double v25 = (double)v36;
      int v31 = v37;
    }
    uint64_t v33 = sub_1DCB87908();
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_1DCB87938();
    *(void *)a3 = v11;
    *(void *)(a3 + 8) = v13;
    *(void *)(a3 + 16) = v33;
    *(void *)(a3 + 24) = v34;
    *(void *)(a3 + 32) = v35;
    *(double *)(a3 + 40) = v25;
    *(_DWORD *)(a3 + 48) = v31;
    *(_DWORD *)(a3 + 52) = v32;
    *(void *)(a3 + 56) = v16;
    return;
  }
  swift_unknownObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
}

uint64_t sub_1DC9A04C8(uint64_t result, unsigned int a2, unsigned int a3, double a4)
{
  if (a4 < 0.0 || a4 >= 1.0)
  {
    char v5 = 0;
LABEL_11:
    sub_1DC9A133C();
    swift_allocError();
    char *v6 = v5;
    return swift_willThrow();
  }
  if (a2 - 1 >= result)
  {
    char v5 = 1;
    goto LABEL_11;
  }
  if (!a3 || a2 % a3)
  {
    char v5 = 2;
    goto LABEL_11;
  }
  double v7 = (double)result * a4;
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v7 <= -1.0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v7 >= 4294967300.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unsigned int v8 = result - v7;
  if (result < v7)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  BOOL v9 = v8 >= v8 % a3;
  unsigned int v10 = v8 - v8 % a3;
  if (!v9) {
    goto LABEL_25;
  }
  if (v10 <= a2) {
    return a2;
  }
  else {
    return v10;
  }
}

uint64_t sub_1DC9A05C4()
{
  uint64_t v2 = sub_1DCB87938();
  char v4 = sub_1DC9AC3CC(v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = v4;
    uint64_t v6 = swift_bridgeObjectRelease();
    double v7 = (void *)MEMORY[0x1E01A8D20](v6);
    unsigned int v8 = (void *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 != -1) {
      swift_once();
    }
    uint64_t v9 = swift_allocObject();
    *(unsigned char *)(v9 + 16) = v5;
    MEMORY[0x1F4188790](v9);
    swift_retain();
    sub_1DCAC3890();
    uint64_t v0 = v11;
    swift_release();
    swift_release();
  }
  return v0;
}

uint64_t sub_1DC9A0774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 24)) {
    unint64_t v4 = 15360;
  }
  else {
    unint64_t v4 = *(void *)(a3 + 16);
  }
  if ((v4 & 0x8000000000000000) != 0 || HIDWORD(v4)) {
    goto LABEL_14;
  }
  unint64_t v6 = *(void *)(a3 + 32);
  int v7 = *(unsigned __int8 *)(a3 + 40);
  uint64_t result = sub_1DC9A04C8(v4, 1u, 1u, 0.5);
  if (v3) {
    return result;
  }
  if (v7) {
    unint64_t v6 = result;
  }
  if ((v6 & 0x8000000000000000) != 0 || HIDWORD(v6))
  {
LABEL_14:
    sub_1DC8AF148();
    uint64_t result = sub_1DCB88C58();
    __break(1u);
    return result;
  }
  objc_allocWithZone((Class)type metadata accessor for SNSoundPrintFeatureExtractorConfiguration());
  uint64_t v9 = swift_unknownObjectRetain();
  uint64_t result = (uint64_t)sub_1DCB20DF4(v9, a2, v4, v6);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1DC9A08B4()
{
  sub_1DC87E988((uint64_t *)&unk_1EAA9C648);
  sub_1DC9A12C0();
  uint64_t v0 = sub_1DCB877D8();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1DC8BFA78((uint64_t)sub_1DC9A130C, 0, 0);
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1DC8BFA78((uint64_t)sub_1DC9A1324, 0, 1);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC9A098C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  uint64_t result = sub_1DC9A04C8(15360, 0x140u, 0xA0u, 0.5);
  if (!v3)
  {
    if (v7) {
      unint64_t v6 = result;
    }
    if ((v6 & 0x8000000000000000) == 0 && !HIDWORD(v6))
    {
      objc_allocWithZone((Class)type metadata accessor for SNLogMelBasedFeatureExtractorConfiguration());
      uint64_t v9 = swift_unknownObjectRetain();
      uint64_t result = (uint64_t)sub_1DC9318EC(v9, v5, v6);
      if (result)
      {
        *a3 = result;
        return result;
      }
      __break(1u);
    }
    uint64_t result = sub_1DCB88C58();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC9A0AC0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  char v7 = *((unsigned char *)a2 + 8);
  char v8 = *((unsigned char *)a2 + 9);
  uint64_t v9 = a2[2];
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = a2[4];
  char v12 = *((unsigned char *)a2 + 40);
  uint64_t v14 = *a2;
  char v15 = v7;
  char v16 = v8;
  uint64_t v17 = v9;
  char v18 = v10;
  uint64_t v19 = v11;
  char v20 = v12;
  long long v21 = *((_OWORD *)a2 + 3);
  uint64_t result = sub_1DC9A0774(v5, v6, (uint64_t)&v14);
  if (!v3) {
    *a3 = result | 0x8000000000000000;
  }
  return result;
}

uint64_t sub_1DC9A0B48(char a1, uint64_t *a2, char a3)
{
  void (*v10)(uint64_t *__return_ptr, void *, uint64_t *);
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  void v31[2];
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  uint64_t v5 = *a2;
  int v6 = a1 & 1;
  char v7 = *((unsigned char *)a2 + 8);
  char v8 = *((unsigned char *)a2 + 9);
  uint64_t v29 = a2[2];
  unint64_t v28 = *((unsigned char *)a2 + 24);
  unint64_t v27 = a2[4];
  uint64_t v26 = *((unsigned char *)a2 + 40);
  id v24 = a2[7];
  double v25 = a2[6];
  uint64_t v9 = sub_1DC9A08B4();
  char v10 = (void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1DC961274(v6, v9);
  uint64_t v11 = swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v23 = v8;
    if (v6) {
      char v12 = 33;
    }
    else {
      char v12 = 21;
    }
    unint64_t v30 = (void *)MEMORY[0x1E01A8D20](v11);
    uint64_t v13 = (void *)MEMORY[0x1E01A8D20]();
    if (qword_1EAA9D1E0 != -1) {
      swift_once();
    }
    uint64_t v14 = swift_allocObject();
    *(unsigned char *)(v14 + 16) = v12;
    LOBYTE(v32) = v12;
    BYTE1(v32) = a3;
    MEMORY[0x1F4188790](v14);
    swift_retain();
    sub_1DCAC3890();
    if (v3)
    {
      swift_release();
      swift_release();
      return sub_1DC884EC0((uint64_t)v10);
    }
    else
    {
      unint64_t v22 = v15;
      swift_release();
      swift_release();
      unint64_t v32 = v5;
      uint64_t v33 = v7;
      uint64_t v34 = v23;
      uint64_t v35 = v29;
      uint64_t v36 = v28;
      int v37 = v27;
      unint64_t v38 = v26;
      uint64_t v39 = v25;
      uint64_t v40 = v24;
      v31[0] = v22;
      v31[1] = &off_1F37FEC20;
      v10(&v41, v31, &v32);
      sub_1DC884EC0((uint64_t)v10);
      swift_release();
      return v41;
    }
  }
  else
  {
    type metadata accessor for SNError();
    unint64_t v32 = 0;
    sub_1DCB88A98();
    sub_1DCB87A18();
    LOBYTE(v31[0]) = v6;
    sub_1DCB88C08();
    uint64_t v17 = sub_1DC8CD9C0();
    sub_1DCA14B2C(v17, v18, v19, v20, v21, 0xE000000000000000);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
}

unint64_t sub_1DC9A0E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v6 == 1)
    {
      swift_bridgeObjectRetain();
      char v7 = (void *)sub_1DCB87908();
      sub_1DC882BC4(v4, v5, 1);
      char v8 = sub_1DC9ABEEC(v7);
      char v10 = v9;
      char v12 = v11;

      if (v2) {
        return a2;
      }
    }
    else
    {
      char v10 = *(unsigned char *)(a1 + 16);
    }
  }
  else
  {
    char v10 = v4 & 1;
  }
  v14[0] = v4;
  v14[1] = v5;
  char v15 = v6;
  sub_1DC9A106C((uint64_t)v14, (uint64_t)&v16);
  if (!v2)
  {
    if (v10 == 2)
    {
      swift_bridgeObjectRelease();
      return 0xF000000000000007;
    }
    else
    {
      a2 = sub_1DC9A0B48(v10 & 1, &v16, a2);
      swift_bridgeObjectRelease();
    }
  }
  return a2;
}

uint64_t sub_1DC9A100C(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA2D88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC9A106C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v5 = *(void *)a1;
    if (*(unsigned char *)(a1 + 16) == 1)
    {
      swift_bridgeObjectRetain();
      int v6 = (void *)sub_1DCB87908();
      sub_1DC882BC4(v5, v4, 1);
      uint64_t v7 = sub_1DC9A05C4();
      char v9 = v8;

      if (v2) {
        return;
      }
      goto LABEL_8;
    }
    uint64_t v7 = *(void *)(v5 + 16);
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 16);
  }
  swift_retain();
  char v9 = &off_1F37FEC20;
LABEL_8:
  type metadata accessor for SNModelMetadataUtils();
  sub_1DCB30700(v7, (uint64_t)v9);
  swift_unknownObjectRelease();
  if (!v2)
  {
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 9) = v12;
    *(void *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v15;
    *(unsigned char *)(a2 + 40) = v16;
    *(_OWORD *)(a2 + 48) = v17;
  }
}

uint64_t sub_1DC9A11A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SNModelMetadataUtils();
  sub_1DCB30700(a1, a2);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    if (v15 == 2)
    {
      uint64_t v5 = type metadata accessor for SNError();
      unint64_t v6 = sub_1DC8CD9C0();
      sub_1DCA14B2C(v6, v7, v8, v9, v10, v11);
      swift_willThrow();
    }
    else
    {
      uint64_t v5 = v15 & 1;
      uint64_t v12 = type metadata accessor for SNMLModelHashableUncodableWrapper();
      uint64_t ObjectType = swift_getObjectType();
      sub_1DC971A2C(a1, v12, ObjectType, a2);
      swift_unknownObjectRetain();
    }
  }
  return v5;
}

unint64_t sub_1DC9A12C0()
{
  unint64_t result = qword_1EAA9C758;
  if (!qword_1EAA9C758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9C758);
  }
  return result;
}

uint64_t sub_1DC9A130C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DC9A098C(a1, a2, a3);
}

uint64_t sub_1DC9A1324@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_1DC9A0AC0(a1, a2, a3);
}

unint64_t sub_1DC9A133C()
{
  unint64_t result = qword_1EAAA2D90;
  if (!qword_1EAAA2D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2D90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNSoundDetectionUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9A1454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNSoundDetectionUtils.DomainError()
{
  return &type metadata for SNSoundDetectionUtils.DomainError;
}

unint64_t sub_1DC9A1490()
{
  unint64_t result = qword_1EAAA2D98;
  if (!qword_1EAAA2D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2D98);
  }
  return result;
}

uint64_t sub_1DC9A14DC()
{
  uint64_t v0 = sub_1DC87E988(&qword_1EAAA2DD0);
  uint64_t v1 = sub_1DC8BADF0(v0);
  MEMORY[0x1F4188790](v1);
  sub_1DC8A22D0();
  uint64_t v4 = v3 - v2;
  uint64_t v6 = v3 - v2 + *(int *)(v5 + 56);
  uint64_t v7 = sub_1DCB86E08();
  uint64_t v8 = *(void **)(v7 - 8);
  char v9 = (void (*)(void))v8[2];
  sub_1DC8E7C9C();
  v9();
  sub_1DC8E7C9C();
  v9();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))v8[11];
  int v11 = v10(v4, v7);
  if (v11 == *MEMORY[0x1E4F73778]
    || v11 == *MEMORY[0x1E4F736F8]
    || v11 == *MEMORY[0x1E4F73678]
    || v11 == *MEMORY[0x1E4F73670]
    || v11 == *MEMORY[0x1E4F73690]
    || v11 == *MEMORY[0x1E4F73720]
    || v11 == *MEMORY[0x1E4F73768]
    || v11 == *MEMORY[0x1E4F73790]
    || v11 == *MEMORY[0x1E4F73770]
    || v11 == *MEMORY[0x1E4F736B8]
    || v11 == *MEMORY[0x1E4F73748]
    || v11 == *MEMORY[0x1E4F73750]
    || v11 == *MEMORY[0x1E4F73698]
    || v11 == *MEMORY[0x1E4F736E8]
    || v11 == *MEMORY[0x1E4F737A8]
    || v11 == *MEMORY[0x1E4F73728]
    || v11 == *MEMORY[0x1E4F73740]
    || v11 == *MEMORY[0x1E4F73780]
    || v11 == *MEMORY[0x1E4F736A8]
    || v11 == *MEMORY[0x1E4F73758]
    || v11 == *MEMORY[0x1E4F73798]
    || v11 == *MEMORY[0x1E4F736C0]
    || v11 == *MEMORY[0x1E4F73718]
    || v11 == *MEMORY[0x1E4F73688]
    || v11 == *MEMORY[0x1E4F73660]
    || v11 == *MEMORY[0x1E4F73730]
    || v11 == *MEMORY[0x1E4F73700]
    || v11 == *MEMORY[0x1E4F73708]
    || v11 == *MEMORY[0x1E4F73680]
    || v11 == *MEMORY[0x1E4F73710]
    || v11 == *MEMORY[0x1E4F736F0]
    || v11 == *MEMORY[0x1E4F73788]
    || v11 == *MEMORY[0x1E4F736B0]
    || v11 == *MEMORY[0x1E4F736D8]
    || v11 == *MEMORY[0x1E4F736D0]
    || v11 == *MEMORY[0x1E4F736C8]
    || v11 == *MEMORY[0x1E4F73668]
    || v11 == *MEMORY[0x1E4F736A0]
    || v11 == *MEMORY[0x1E4F73760]
    || v11 == *MEMORY[0x1E4F737A0]
    || v11 == *MEMORY[0x1E4F736E0]
    || v11 == *MEMORY[0x1E4F73738])
  {
    if (v10(v6, v7) == v11)
    {
      uint64_t v12 = (void (*)(void))v8[1];
      sub_1DC9A4390();
      v12();
      sub_1DC9A4390();
      v12();
      return 1;
    }
    char v14 = (void (*)(void))v8[1];
    sub_1DC9A4390();
    v14();
    ((void (*)(uint64_t, uint64_t))v14)(v6, v7);
  }
  else
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1DCB86FE8();
    sub_1DC89F57C(v15, (uint64_t)qword_1EAAFF810);
    os_log_type_t v16 = sub_1DCB88468();
    long long v17 = sub_1DCB86FC8();
    if (os_log_type_enabled(v17, v16))
    {
      char v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v18 = 0;
      _os_log_impl(&dword_1DC873000, v17, v16, "Unexpected neural network layer kind", v18, 2u);
      MEMORY[0x1E01A99C0](v18, -1, -1);
    }

    sub_1DC88CC04(v4, &qword_1EAAA2DD0);
  }
  return 0;
}

void sub_1DC9A1A60()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  sub_1DCB86A18();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DCB86EF8();
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC8C1FC4();
  sub_1DC8E7D10();
  v9();
  sub_1DCB86EB8();
  uint64_t v10 = sub_1DC9A43F8();
  v11(v10);
  if (!v0) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, v1, v5);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC9A1B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = sub_1DCB86CC8();
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA2DE8);
  uint64_t v12 = sub_1DC8BADF0(v11);
  MEMORY[0x1F4188790](v12);
  sub_1DC8C1FC4();
  sub_1DCB86E88();
  sub_1DC89D4E0();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  sub_1DC8A22D0();
  uint64_t v16 = sub_1DCB86EE8();
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v39 = a3;
  uint64_t v18 = v14 + 16;
  unint64_t v19 = v16 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
  uint64_t v20 = v18;
  long long v21 = (unsigned int (**)(uint64_t, uint64_t))(v6 + 88);
  int v40 = *MEMORY[0x1E4F73658];
  uint64_t v42 = *(void *)(v20 + 56);
  do
  {
    sub_1DC8E7D10();
    v22();
    BOOL v24 = sub_1DCB86E68() == a1 && v23 == a2;
    if (v24)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        sub_1DC9A4344();
        v26();
        goto LABEL_16;
      }
    }
    sub_1DCB86E78();
    if ((*v21)(v10, v41) == v40)
    {
      uint64_t v27 = sub_1DC9A4410();
      v28(v27);
      uint64_t v29 = sub_1DCB86CB8();
      sub_1DC88819C();
      sub_1DC92F47C();
      v30();
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v3, 0, 1, v29);
    }
    else
    {
      uint64_t v29 = sub_1DCB86CB8();
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v3, 1, 1, v29);
      uint64_t v31 = sub_1DC9A4410();
      v32(v31);
    }
    sub_1DC9A4344();
    v33();
    sub_1DCB86CB8();
    sub_1DC92F3B0(v3, 1, v29);
    if (!v24)
    {
      swift_bridgeObjectRelease();
      sub_1DC92F47C();
      v34();
      uint64_t v35 = v39;
      uint64_t v36 = 0;
      uint64_t v37 = v29;
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v35, v36, 1, v37);
    }
    sub_1DC88CC04(v3, &qword_1EAAA2DE8);
LABEL_16:
    v19 += v42;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  a3 = v39;
LABEL_19:
  uint64_t v37 = sub_1DCB86CB8();
  uint64_t v35 = a3;
  uint64_t v36 = 1;
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v35, v36, 1, v37);
}

uint64_t sub_1DC9A1EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v104 = a3;
  uint64_t v105 = a4;
  uint64_t v103 = a2;
  uint64_t v95 = a5;
  uint64_t v102 = sub_1DCB86EF8();
  sub_1DC89D4E0();
  uint64_t v99 = v7;
  MEMORY[0x1F4188790](v8);
  sub_1DC8C1FC4();
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA2DB8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  uint64_t v98 = v11;
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA2DC0);
  uint64_t v13 = sub_1DC8BADF0(v12);
  MEMORY[0x1F4188790](v13);
  sub_1DC888120();
  uint64_t v107 = v14;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v86 - v16;
  uint64_t v18 = sub_1DC87E988((uint64_t *)&unk_1EAAA6230);
  uint64_t v19 = sub_1DC8BADF0(v18);
  MEMORY[0x1F4188790](v19);
  sub_1DC888120();
  uint64_t v100 = v20;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v86 - v22;
  uint64_t v106 = sub_1DCB86E38();
  sub_1DC89D4E0();
  uint64_t v89 = v24;
  MEMORY[0x1F4188790](v25);
  sub_1DC888120();
  uint64_t v87 = v26;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v27);
  uint64_t v88 = (char *)v86 - v28;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v86 - v30;
  uint64_t v90 = sub_1DCB86EA8();
  sub_1DC89D4E0();
  uint64_t v97 = v32;
  MEMORY[0x1F4188790](v33);
  sub_1DC88D550();
  uint64_t v96 = v34;
  sub_1DC9A4424();
  uint64_t v35 = sub_1DCB86F08();
  sub_1DC89D4E0();
  uint64_t v37 = v36;
  uint64_t v39 = MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)v86 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  unint64_t v43 = (char *)v86 - v42;
  uint64_t v91 = a1;
  sub_1DCB86ED8();
  uint64_t v93 = v43;
  sub_1DC8E7D10();
  v44();
  int v45 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v41, v35);
  int v46 = *MEMORY[0x1E4F737B0];
  uint64_t v94 = v35;
  uint64_t v92 = v37;
  if (v45 == v46)
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v41, v35);
    uint64_t v47 = v90;
    (*(void (**)(uint64_t, char *, uint64_t))(v97 + 32))(v96, v41, v90);
    uint64_t v48 = sub_1DCB86E98();
    uint64_t v49 = *(void *)(v48 + 16);
    if (v49)
    {
      v86[0] = v5;
      uint64_t v101 = *(void *)(v89 + 16);
      unint64_t v50 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
      v86[1] = v48;
      unint64_t v51 = v48 + v50;
      uint64_t v52 = *(void *)(v89 + 72);
      uint64_t v53 = v106;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v101)(v31, v51, v53);
        sub_1DC9A2E80((uint64_t)v31, v103, v104, v105, (uint64_t)v23);
        sub_1DC8881AC();
        v54();
        sub_1DC92F3B0((uint64_t)v23, 1, v53);
        if (!v55) {
          break;
        }
        sub_1DC88CC04((uint64_t)v23, (uint64_t *)&unk_1EAAA6230);
        v51 += v52;
        if (!--v49)
        {
          swift_bridgeObjectRelease();
          uint64_t v56 = v102;
          uint64_t v5 = v86[0];
          uint64_t v47 = v90;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      sub_1DC88D5C8();
      v78();
      sub_1DC88D5C8();
      v79();
      uint64_t v80 = *(void (**)(void))(v89 + 32);
      sub_1DC9A43B8();
      v80();
      uint64_t v81 = v95;
      sub_1DC9A43B8();
      v80();
LABEL_26:
      uint64_t v77 = 0;
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v81, v77, 1, v106);
    }
    swift_bridgeObjectRelease();
    uint64_t v56 = v102;
LABEL_10:
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v47);
  }
  else
  {
    sub_1DC9A4384();
    v57();
    uint64_t v56 = v102;
  }
  uint64_t result = sub_1DCB86EC8();
  uint64_t v101 = result;
  unint64_t v59 = *(void *)(result + 16);
  if (v59 == 1)
  {
    sub_1DC8881AC();
    v60();
    swift_bridgeObjectRelease();
LABEL_25:
    uint64_t v77 = 1;
    uint64_t v81 = v95;
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v81, v77, 1, v106);
  }
  unint64_t v61 = 0;
  uint64_t v97 = v99 + 16;
  uint64_t v62 = (void (**)(uint64_t, char *, uint64_t))(v99 + 32);
  uint64_t v63 = (uint64_t)v107;
  while (1)
  {
    if (v61 == v59)
    {
      uint64_t v64 = 1;
      unint64_t v61 = v59;
      goto LABEL_18;
    }
    if (v61 >= *(void *)(v101 + 16)) {
      break;
    }
    uint64_t v65 = v5;
    uint64_t v66 = v99;
    uint64_t v67 = v98 + *(int *)(v9 + 48);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v99 + 16))(v67, v101+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v61, v102);
    uint64_t v68 = (char *)v107 + *(int *)(v9 + 48);
    *uint64_t v107 = v61;
    uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 32);
    uint64_t v5 = v65;
    uint64_t v63 = (uint64_t)v107;
    uint64_t v70 = v67;
    uint64_t v56 = v102;
    v69(v68, v70, v102);
    uint64_t v64 = 0;
    ++v61;
LABEL_18:
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v63, v64, 1, v9);
    sub_1DC9A3858(v63, (uint64_t)v17, &qword_1EAAA2DC0);
    sub_1DC92F3B0((uint64_t)v17, 1, v9);
    if (v55)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
      goto LABEL_25;
    }
    uint64_t v71 = *(void *)v17;
    (*v62)(v5, &v17[*(int *)(v9 + 48)], v56);
    if (v71)
    {
      uint64_t v72 = v100;
      sub_1DC9A1EF8(v5, v103, v104, v105);
      uint64_t v73 = sub_1DC9A43E0();
      v74(v73);
      sub_1DC92F3B0(v72, 1, v106);
      if (!v55)
      {
        swift_bridgeObjectRelease();
        sub_1DC88D5C8();
        v82();
        uint64_t v83 = *(void (**)(void))(v89 + 32);
        uint64_t v84 = v87;
        uint64_t v85 = v106;
        sub_1DC9A43B8();
        v83();
        uint64_t v81 = v95;
        ((void (*)(uint64_t, uint64_t, uint64_t))v83)(v95, v84, v85);
        goto LABEL_26;
      }
      uint64_t result = sub_1DC88CC04(v72, (uint64_t *)&unk_1EAAA6230);
    }
    else
    {
      uint64_t v75 = sub_1DC9A43E0();
      uint64_t result = v76(v75);
    }
  }
  __break(1u);
  return result;
}

void sub_1DC9A2630()
{
  sub_1DC88D6B0();
  uint64_t v0 = sub_1DC87E988(&qword_1EAAA2DA0);
  uint64_t v1 = sub_1DC8BADF0(v0);
  MEMORY[0x1F4188790](v1);
  sub_1DC9A42F8(v2, v31);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC9A421C();
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v7);
  sub_1DC9A4354();
  sub_1DCB86D98();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC9A4244();
  uint64_t v9 = sub_1DC9A426C();
  int v11 = v10(v9);
  unint64_t v12 = *MEMORY[0x1E4F73680];
  if (v11 == v12)
  {
    uint64_t v13 = sub_1DC9A43A0();
    v14(v13);
    uint64_t v15 = sub_1DC9A41FC();
    v16(v15);
    sub_1DCB86D58();
    sub_1DCB86D78();
    sub_1DCB86CD8();
    uint64_t v17 = sub_1DC9A42C8();
    ((void (*)(uint64_t))v12)(v17);
    sub_1DCB86D68();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v32, 1, v5) == 1)
    {
      uint64_t v18 = sub_1DC9A41E4();
      v19(v18);
      sub_1DC88CC04(v32, &qword_1EAAA2DA0);
    }
    else
    {
      sub_1DCB86CD8();
      uint64_t v29 = sub_1DC9A41E4();
      v30(v29);
      ((void (*)(uint64_t, uint64_t))v12)(v32, v5);
    }
  }
  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    sub_1DC9A42E8();
    v20(v21, v22);
    sub_1DCB86D88();
    uint64_t v23 = sub_1DC9A42A8();
    v24(v23);
    type metadata accessor for ModelFeatureExtractorError(0);
    sub_1DC9A2B28();
    sub_1DC9A4324();
    sub_1DC87E988(&qword_1EAAA2DB0);
    uint64_t v25 = sub_1DC9A4284();
    v26(v25);
    sub_1DCB86E18();
    swift_willThrow();
    sub_1DC9A42E8();
    v20(v27, v28);
  }
  sub_1DC9A43C8();
  sub_1DC88D674();
}

void sub_1DC9A289C()
{
  sub_1DC88D6B0();
  uint64_t v0 = sub_1DC87E988(&qword_1EAAA2DA0);
  uint64_t v1 = sub_1DC8BADF0(v0);
  MEMORY[0x1F4188790](v1);
  sub_1DC9A42F8(v2, v31);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC9A421C();
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v7);
  sub_1DC9A4354();
  sub_1DCB86DE8();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC9A4244();
  uint64_t v9 = sub_1DC9A426C();
  int v11 = v10(v9);
  unint64_t v12 = *MEMORY[0x1E4F73688];
  if (v11 == v12)
  {
    uint64_t v13 = sub_1DC9A43A0();
    v14(v13);
    uint64_t v15 = sub_1DC9A41FC();
    v16(v15);
    sub_1DCB86DA8();
    sub_1DCB86DC8();
    sub_1DCB86CD8();
    uint64_t v17 = sub_1DC9A42C8();
    ((void (*)(uint64_t))v12)(v17);
    sub_1DCB86DB8();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v32, 1, v5) == 1)
    {
      uint64_t v18 = sub_1DC9A41E4();
      v19(v18);
      sub_1DC88CC04(v32, &qword_1EAAA2DA0);
    }
    else
    {
      sub_1DCB86CD8();
      uint64_t v29 = sub_1DC9A41E4();
      v30(v29);
      ((void (*)(uint64_t, uint64_t))v12)(v32, v5);
    }
  }
  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    sub_1DC9A42E8();
    v20(v21, v22);
    sub_1DCB86DD8();
    uint64_t v23 = sub_1DC9A42A8();
    v24(v23);
    type metadata accessor for ModelFeatureExtractorError(0);
    sub_1DC9A2B28();
    sub_1DC9A4324();
    sub_1DC87E988(&qword_1EAAA2DB0);
    uint64_t v25 = sub_1DC9A4284();
    v26(v25);
    sub_1DCB86E18();
    swift_willThrow();
    sub_1DC9A42E8();
    v20(v27, v28);
  }
  sub_1DC9A43C8();
  sub_1DC88D674();
}

uint64_t type metadata accessor for ModelFeatureExtractorError(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA2DF0);
}

unint64_t sub_1DC9A2B28()
{
  unint64_t result = qword_1EAAA2DA8;
  if (!qword_1EAAA2DA8)
  {
    type metadata accessor for ModelFeatureExtractorError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2DA8);
  }
  return result;
}

void sub_1DC9A2B78()
{
  sub_1DC88D6B0();
  uint64_t v35 = v1;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2DA0);
  uint64_t v5 = sub_1DC8BADF0(v4);
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  uint64_t v36 = sub_1DCB86CE8();
  sub_1DC89D4E0();
  uint64_t v34 = v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1DC9A421C();
  sub_1DC89D4E0();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  sub_1DC9A4354();
  uint64_t v37 = sub_1DCB86D48();
  sub_1DC89D4E0();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  sub_1DC9A4244();
  uint64_t v21 = sub_1DC9A426C();
  if (v22(v21) == *MEMORY[0x1E4F73778])
  {
    uint64_t v23 = v34;
    (*(void (**)(char *, uint64_t))(v13 + 96))(v0, v11);
    uint64_t v24 = sub_1DC9A41FC();
    v25(v24);
    sub_1DCB86D38();
    uint64_t v26 = v36;
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v8, 1, v36) == 1)
    {
      uint64_t v27 = sub_1DC88CC04(v8, &qword_1EAAA2DA0);
      MEMORY[0x1E01A5D20](v27);
      uint64_t v28 = sub_1DC9A41E4();
      v29(v28);
    }
    else
    {
      uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v2, v8, v26);
      MEMORY[0x1E01A5D20](v32);
      sub_1DCB86CD8();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v2, v26);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v3, v37);
    }
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v13 + 8);
    v30(v0, v11);
    sub_1DCB86DF8();
    type metadata accessor for ModelFeatureExtractorError(0);
    sub_1DC9A2B28();
    sub_1DC9A4324();
    sub_1DC87E988(&qword_1EAAA2DB0);
    sub_1DC8E7C9C();
    v31();
    sub_1DCB86E18();
    swift_willThrow();
    v30(v17, v11);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC9A2E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v86 = a4;
  uint64_t v87 = (unsigned char *)a5;
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA2DC8);
  uint64_t v9 = sub_1DC8BADF0(v8);
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  uint64_t v74 = v10;
  sub_1DC9A4424();
  sub_1DCB86E58();
  sub_1DC89D4E0();
  uint64_t v77 = v11;
  uint64_t v78 = v12;
  MEMORY[0x1F4188790](v11);
  sub_1DC888120();
  uint64_t v71 = v13;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v14);
  uint64_t v75 = &v68[-v15];
  uint64_t v16 = sub_1DC87E988((uint64_t *)&unk_1EAAA6230);
  uint64_t v17 = sub_1DC8BADF0(v16);
  MEMORY[0x1F4188790](v17);
  sub_1DC888120();
  uint64_t v72 = v18;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v19);
  char v76 = &v68[-v20];
  sub_1DC9A4424();
  uint64_t v81 = sub_1DCB86D18();
  sub_1DC89D4E0();
  uint64_t v85 = v21;
  MEMORY[0x1F4188790](v22);
  sub_1DC88D550();
  uint64_t v82 = v23;
  sub_1DC9A4424();
  uint64_t v24 = sub_1DCB86E08();
  sub_1DC89D4E0();
  uint64_t v84 = v25;
  MEMORY[0x1F4188790](v26);
  sub_1DC888120();
  uint64_t v83 = v27;
  sub_1DC9198D0();
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v30 = sub_1DCB86E38();
  sub_1DC89D4E0();
  uint64_t v32 = v31;
  MEMORY[0x1F4188790](v33);
  sub_1DC888120();
  uint64_t v70 = v34;
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v35);
  uint64_t v73 = &v68[-v36];
  sub_1DC9198D0();
  MEMORY[0x1F4188790](v37);
  uint64_t v88 = a1;
  BOOL v39 = sub_1DCB86E28() == a2 && v38 == a3;
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  if (v39) {
    char v40 = 1;
  }
  else {
    char v40 = sub_1DCB89018();
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void (**)(void))(v32 + 16);
  sub_1DC8E7C9C();
  v41();
  uint64_t v42 = v84;
  sub_1DC8E7D10();
  v43();
  if ((v40 & 1) == 0)
  {
    char v44 = *(void (**)(void))(v42 + 8);
    sub_1DC9A4384();
    v44();
    sub_1DC9A4384();
    v47();
    uint64_t v46 = v85;
LABEL_11:
    uint64_t v48 = v83;
    sub_1DCB86E18();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v42 + 88))(v48, v24) == *MEMORY[0x1E4F73738])
    {
      uint64_t v88 = v32;
      (*(void (**)(uint64_t, uint64_t))(v42 + 96))(v48, v24);
      uint64_t v49 = v81;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v82, v48, v81);
      sub_1DCB86CF8();
      unint64_t v50 = v76;
      sub_1DC9A3494(v79, v80, v86, (uint64_t)v76);
      uint64_t v51 = v46;
      uint64_t v52 = *(void (**)(void))(v78 + 8);
      uint64_t v53 = v77;
      sub_1DC8881AC();
      v52();
      sub_1DC92F3B0((uint64_t)v50, 1, v30);
      if (!v39)
      {
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v82, v49);
        uint64_t v58 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 32);
        unint64_t v59 = v73;
        v58(v73, v50, v30);
        v58(v87, v59, v30);
        goto LABEL_19;
      }
      sub_1DC88CC04((uint64_t)v50, (uint64_t *)&unk_1EAAA6230);
      uint64_t v54 = v74;
      sub_1DCB86D08();
      sub_1DC92F3B0(v54, 1, v53);
      if (v39)
      {
        uint64_t v55 = sub_1DC9A4368();
        v56(v55);
        uint64_t v57 = &qword_1EAAA2DC8;
      }
      else
      {
        sub_1DC92F47C();
        v61();
        uint64_t v54 = v72;
        sub_1DC9A3494(v79, v80, v86, v72);
        sub_1DC8881AC();
        v52();
        uint64_t v62 = sub_1DC9A4368();
        v63(v62);
        sub_1DC92F3B0(v54, 1, v30);
        if (!v64)
        {
          uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32);
          uint64_t v67 = v70;
          v66(v70, v54, v30);
          v66((uint64_t)v87, v67, v30);
          goto LABEL_19;
        }
        uint64_t v57 = (uint64_t *)&unk_1EAAA6230;
      }
      sub_1DC88CC04(v54, v57);
    }
    else
    {
      sub_1DC9A4384();
      v44();
    }
    uint64_t v60 = 1;
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v87, v60, 1, v30);
  }
  sub_1DCB86E18();
  int v69 = sub_1DC9A14DC();
  char v44 = *(void (**)(void))(v42 + 8);
  sub_1DC9A4344();
  v44();
  sub_1DC9A4344();
  v44();
  sub_1DC9A4384();
  v45();
  uint64_t v46 = v85;
  if ((v69 & 1) == 0) {
    goto LABEL_11;
  }
  sub_1DC8E7C9C();
  v41();
LABEL_19:
  uint64_t v60 = 0;
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v87, v60, 1, v30);
}

uint64_t sub_1DC9A3494@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v41 = a3;
  uint64_t v39 = a2;
  v33[0] = a4;
  uint64_t v4 = sub_1DC87E988((uint64_t *)&unk_1EAAA6230);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DCB86E38();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v38 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA2DD8);
  MEMORY[0x1F4188790](v10);
  uint64_t v34 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA2DE0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (void *)((char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v33 - v16;
  uint64_t result = sub_1DCB86E48();
  unint64_t v19 = 0;
  unint64_t v20 = *(void *)(result + 16);
  v33[1] = v8 + 16;
  uint64_t v21 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v35 = v8;
  unint64_t v36 = v20;
  uint64_t v37 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v42 = result;
  uint64_t v43 = v7;
  while (1)
  {
    if (v19 == v20)
    {
      uint64_t v22 = 1;
      unint64_t v19 = v20;
      goto LABEL_6;
    }
    if (v19 >= *(void *)(result + 16)) {
      break;
    }
    uint64_t v23 = v35;
    uint64_t v24 = v6;
    uint64_t v25 = &v34[*(int *)(v10 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v25, result+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, v7);
    uint64_t v26 = (char *)v15 + *(int *)(v10 + 48);
    *uint64_t v15 = v19;
    uint64_t v27 = v25;
    uint64_t v6 = v24;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v27, v7);
    uint64_t v22 = 0;
    ++v19;
LABEL_6:
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v15, v22, 1, v10);
    sub_1DC9A3858((uint64_t)v15, (uint64_t)v17, &qword_1EAAA2DE0);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v17, 1, v10) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = 1;
      uint64_t v32 = v33[0];
      uint64_t v7 = v43;
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v32, v31, 1, v7);
    }
    uint64_t v28 = (uint64_t)v6;
    uint64_t v29 = *v21;
    uint64_t v30 = v38;
    uint64_t v7 = v43;
    (*v21)(v38, &v17[*(int *)(v10 + 48)], v43);
    sub_1DC9A2E80(v30, v40, v39, v41);
    (*v37)(v30, v7);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v28, 1, v7) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v33[0];
      v29((char *)v33[0], (char *)v28, v7);
      uint64_t v31 = 0;
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v32, v31, 1, v7);
    }
    sub_1DC88CC04(v28, (uint64_t *)&unk_1EAAA6230);
    uint64_t v6 = (char *)v28;
    uint64_t result = v42;
    unint64_t v20 = v36;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC9A3858(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1DC87E988(a3);
  sub_1DC88819C();
  sub_1DC92F47C();
  v4();
  return a2;
}

uint64_t *sub_1DC9A38B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1DCB86E08();
    uint64_t v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    uint64_t v8 = sub_1DC87E988(&qword_1EAAA2DB0);
    v7((uint64_t *)((char *)a1 + *(int *)(v8 + 48)), (uint64_t *)((char *)a2 + *(int *)(v8 + 48)), v6);
  }
  return a1;
}

uint64_t sub_1DC9A399C(uint64_t a1)
{
  uint64_t v2 = sub_1DCB86E08();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v5)((void *)(v2 - 8), a1, v2);
  uint64_t v3 = a1 + *(int *)(sub_1DC87E988(&qword_1EAAA2DB0) + 48);

  return v5(v3, v2);
}

uint64_t sub_1DC9A3A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86E08();
  int v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2DB0);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1DC9A3ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86E08();
  int v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24);
  v5(a1, a2, v4);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2DB0);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1DC9A3B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86E08();
  int v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2DB0);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1DC9A3C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86E08();
  int v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  v5(a1, a2, v4);
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2DB0);
  v5(a1 + *(int *)(v6 + 48), a2 + *(int *)(v6 + 48), v4);
  return a1;
}

uint64_t sub_1DC9A3CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2DB0);

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v4);
}

uint64_t sub_1DC9A3D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2DB0);

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a3, v6);
}

uint64_t sub_1DC9A3D64(uint64_t a1)
{
  uint64_t result = sub_1DCB86E08();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_1DC9A3E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86EF8();
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1DC9A3E88(uint64_t a1)
{
  uint64_t v2 = sub_1DCB86EF8();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1DC9A3EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86EF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC9A3F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86EF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC9A3FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86EF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC9A4018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86EF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1DC9A407C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DC9A4090);
}

uint64_t sub_1DC9A4090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86EF8();

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v4);
}

uint64_t sub_1DC9A40D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DC9A40EC);
}

uint64_t sub_1DC9A40EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86EF8();

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ModelFeatureExtractor(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA2E00);
}

uint64_t sub_1DC9A4158()
{
  uint64_t result = sub_1DCB86EF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC9A41E4()
{
  return v0;
}

uint64_t sub_1DC9A41FC()
{
  return v0;
}

uint64_t sub_1DC9A421C()
{
  return sub_1DCB86E08();
}

uint64_t sub_1DC9A4244()
{
  return sub_1DCB86E18();
}

uint64_t sub_1DC9A426C()
{
  return v0;
}

uint64_t sub_1DC9A4284()
{
  return v0;
}

uint64_t sub_1DC9A42A8()
{
  return v0;
}

uint64_t sub_1DC9A42C8()
{
  return v0;
}

uint64_t sub_1DC9A42F8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1DCB86CE8();
}

uint64_t sub_1DC9A4324()
{
  return swift_allocError();
}

uint64_t sub_1DC9A4354()
{
  return 0;
}

uint64_t sub_1DC9A4368()
{
  return v0;
}

uint64_t sub_1DC9A43A0()
{
  return v0;
}

uint64_t sub_1DC9A43C8()
{
  return v0;
}

uint64_t sub_1DC9A43E0()
{
  return v0;
}

uint64_t sub_1DC9A43F8()
{
  return v0;
}

uint64_t sub_1DC9A4410()
{
  return v0;
}

uint64_t sub_1DC9A4424()
{
  return 0;
}

uint64_t sub_1DC9A4430(uint64_t a1)
{
  return sub_1DC9A45F4(a1, (uint64_t (*)(void))sub_1DC9A4BD4);
}

uint64_t sub_1DC9A4448(uint64_t a1)
{
  return sub_1DC9A44A0(a1, (uint64_t (*)(void))sub_1DC9A4A30, (uint64_t (*)(void))sub_1DC9A49B0);
}

uint64_t sub_1DC9A4474(uint64_t a1)
{
  return sub_1DC9A44A0(a1, (uint64_t (*)(void))sub_1DC9A4F34, (uint64_t (*)(void))sub_1DC9A4EB4);
}

uint64_t sub_1DC9A44A0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t result = a2();
  if (v7) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v6)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1DC9A510C();
  if (v8) {
    return 0;
  }
  else {
    return a3();
  }
}

void *sub_1DC9A4508(uint64_t a1)
{
  uint64_t result = (void *)sub_1DC9A4B60(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_1DC9A4AD0(&v5, (uint64_t)result, v3, 0, a1);
  }
}

uint64_t sub_1DC9A4594(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1DCB87AA8();
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC9A45DC(uint64_t a1)
{
  return sub_1DC9A45F4(a1, (uint64_t (*)(void))sub_1DC9A4C24);
}

uint64_t sub_1DC9A45F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result = sub_1DC9A4B60(a1);
  if (v6) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1DC9A510C();
  if (v7) {
    return 0;
  }
  else {
    return a2();
  }
}

uint64_t sub_1DC9A4654(void *a1)
{
  return sub_1DC9A4694(a1, (SEL *)&selRef_inputDescriptionsByName);
}

uint64_t sub_1DC9A4674(void *a1)
{
  return sub_1DC9A4694(a1, (SEL *)&selRef_outputDescriptionsByName);
}

uint64_t sub_1DC9A4694(void *a1, SEL *a2)
{
  int v3 = a1;
  id v4 = [a1 *a2];
  sub_1DC8CFEF4();
  uint64_t v5 = sub_1DCB877B8();

  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v6 != 1)
  {
    sub_1DC9099EC();
    swift_allocError();
    *uint64_t v15 = 0;
    swift_willThrow();
    return (uint64_t)v3;
  }
  id v7 = [v3 *a2];
  uint64_t v8 = sub_1DCB877B8();

  uint64_t v9 = (void *)sub_1DC9A45F4(v8, (uint64_t (*)(void))sub_1DC9A4BD4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v9)
  {
    if (objc_msgSend(v9, sel_type) != (id)5)
    {
      sub_1DC9099EC();
      swift_allocError();
      *uint64_t v16 = 1;
      swift_willThrow();

      return (uint64_t)v3;
    }
    id v11 = [v3 *a2];
    uint64_t v12 = sub_1DCB877B8();

    int v3 = (void *)sub_1DC9A44A0(v12, (uint64_t (*)(void))sub_1DC9A4A30, (uint64_t (*)(void))sub_1DC9A49B0);
    uint64_t v14 = v13;
    uint64_t result = swift_bridgeObjectRelease();
    if (v14)
    {

      return (uint64_t)v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC9A489C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  uint64_t ObjectType = swift_getObjectType();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(a3 + 24))(a1, v7, ObjectType, a3);

  return v8;
}

uint64_t sub_1DC9A4954(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1DC9A497C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9A49B0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    uint64_t v4 = *(void *)(*(void *)(a4 + 48) + 16 * result);
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1DC9A4A30(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
LABEL_3:
    uint64_t v3 = __clz(__rbit64(v1)) + v2;
    return sub_1DC9A50FC(v3);
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return sub_1DC9A50FC(v3);
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    goto LABEL_3;
  }
  if (v6 < 8) {
    return sub_1DC9A50FC(v3);
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    goto LABEL_3;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    goto LABEL_3;
  }
  uint64_t v2 = 192;
  uint64_t v7 = 12;
  while (v7 - 8 < (unint64_t)(v3 + 63) >> 6)
  {
    unint64_t v1 = *(void *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1) {
      goto LABEL_3;
    }
  }
  return sub_1DC9A50FC(v3);
}

void *sub_1DC9A4AD0(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    unsigned int v6 = *(void **)(*(void *)(a5 + 56) + 8 * a2);
    *uint64_t result = v6;
    swift_bridgeObjectRetain();
    id v7 = v6;
    return (void *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1DC9A4B60(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
LABEL_3:
    uint64_t v3 = __clz(__rbit64(v1)) + v2;
    return sub_1DC9A50FC(v3);
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return sub_1DC9A50FC(v3);
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    goto LABEL_3;
  }
  uint64_t v2 = 64;
  uint64_t v7 = 10;
  while (v7 - 8 < (unint64_t)(v3 + 63) >> 6)
  {
    unint64_t v1 = *(void *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1) {
      goto LABEL_3;
    }
  }
  return sub_1DC9A50FC(v3);
}

uint64_t sub_1DC9A4BD4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return (uint64_t)*(id *)(*(void *)(a4 + 56) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1DC9A4C24(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return swift_bridgeObjectRetain();
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1DC9A4C74(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1E01A79D0](a1, a2, v7);
      type metadata accessor for SNModelFeatureConnection();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1DCB88998() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1DCB889A8();
  type metadata accessor for SNModelFeatureConnection();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v19;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1DCB88698();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v6 = v8 & ~v9;
  sub_1DC9A5120();
  if ((v10 & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v12 = sub_1DCB886A8();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v9;
    do
    {
      uint64_t v6 = (v6 + 1) & v13;
      sub_1DC9A5120();
      if ((v14 & 1) == 0) {
        goto LABEL_26;
      }
      id v15 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v16 = sub_1DCB886A8();
    }
    while ((v16 & 1) == 0);
  }

LABEL_20:
  uint64_t v17 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v18 = v17;
}

uint64_t sub_1DC9A4EB4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    uint64_t v4 = *(void *)(*(void *)(a4 + 48) + 16 * result);
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1DC9A4F34(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
LABEL_3:
    uint64_t v3 = __clz(__rbit64(v1)) + v2;
    return sub_1DC9A50FC(v3);
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return sub_1DC9A50FC(v3);
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    goto LABEL_3;
  }
  uint64_t v2 = 64;
  uint64_t v7 = 9;
  while (v7 - 7 < (unint64_t)(v3 + 63) >> 6)
  {
    unint64_t v1 = *(void *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1) {
      goto LABEL_3;
    }
  }
  return sub_1DC9A50FC(v3);
}

unsigned char *storeEnumTagSinglePayload for SNCoreMLError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9A5074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNCoreMLError()
{
  return &type metadata for SNCoreMLError;
}

unint64_t sub_1DC9A50B0()
{
  unint64_t result = qword_1EAAA2E10[0];
  if (!qword_1EAAA2E10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA2E10);
  }
  return result;
}

uint64_t sub_1DC9A50FC@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1DC9A5134()
{
  return sub_1DCB891B8();
}

BOOL sub_1DC9A517C(uint64_t a1, uint64_t a2)
{
  if ((sub_1DCB878C8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SharedVGGish.Configuration();
  return *(void *)(a1 + *(int *)(v4 + 52)) == *(void *)(a2 + *(int *)(v4 + 52));
}

uint64_t sub_1DC9A5204(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001DCB90540 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB925E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1DC9A52F4(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_1DC9A5330(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v14 = v3;
  long long v15 = v13;
  long long v16 = v3;
  type metadata accessor for SharedVGGish.Configuration.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCB892B8();
  LOBYTE(v15) = 0;
  uint64_t v10 = v17;
  sub_1DCB88F18();
  if (!v10)
  {
    LOBYTE(v15) = 1;
    sub_1DCB88F08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_1DC9A54C4()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9A550C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a6;
  sub_1DC88D538();
  uint64_t v38 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v41 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  uint64_t v44 = v16;
  uint64_t v45 = v17;
  type metadata accessor for SharedVGGish.Configuration.CodingKeys();
  swift_getWitnessTable();
  uint64_t v40 = sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v37 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v39 = a3;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v20 = type metadata accessor for SharedVGGish.Configuration();
  sub_1DC88D538();
  uint64_t v35 = v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v34 - v23;
  sub_1DC881A8C(a1, a1[3]);
  uint64_t v25 = v46;
  sub_1DCB89298();
  if (v25) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  uint64_t v34 = v20;
  uint64_t v46 = v24;
  uint64_t v26 = v38;
  LOBYTE(v42) = 0;
  sub_1DCB88DF8();
  uint64_t v27 = v46;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v46, v41, a2);
  LOBYTE(v42) = 1;
  uint64_t v28 = sub_1DCB88DE8();
  uint64_t v29 = sub_1DC9A6A28();
  v30(v29);
  uint64_t v31 = v34;
  *(void *)&v27[*(int *)(v34 + 52)] = v28;
  uint64_t v32 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v36, v27, v31);
  sub_1DC8818D0((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v27, v31);
}

unint64_t sub_1DC9A5818()
{
  return sub_1DC9A52F4(*v0);
}

uint64_t sub_1DC9A582C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9A5204(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9A5860(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DC9A58B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1DC9A5908@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DC9A550C(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_1DC9A592C(void *a1, uint64_t a2)
{
  return sub_1DC9A5330(a1, a2);
}

uint64_t sub_1DC9A594C()
{
  return sub_1DCB891F8();
}

BOOL sub_1DC9A5990(uint64_t a1, uint64_t a2)
{
  return sub_1DC9A517C(a1, a2);
}

uint64_t sub_1DC9A59A0()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAA9DAB8);
  sub_1DC88D538();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = sub_1DC88CEC8;
  v8[3] = v0;
  v8[4] = v7;
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
  sub_1DCB87378();
  sub_1DC88CF34(qword_1EAA9DAC0, &qword_1EAA9DAB8);
  uint64_t v9 = sub_1DCB873A8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  return v9;
}

uint64_t type metadata accessor for SharedVGGish.Instance()
{
  return self;
}

ValueMetadata *type metadata accessor for SharedVGGish()
{
  return &type metadata for SharedVGGish;
}

uint64_t sub_1DC9A5B64()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC9A5C00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1DC9A5CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9A5D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9A5DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9A5E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9A5EE8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC9A5FECLL);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_1DC9A6000(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
  }
  else
  {
    int v9 = a3 - v7;
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v13 = a2 - v7;
    }
    else {
      int v13 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DC9A6198);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for SharedVGGish.Configuration()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC9A61D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9A61F4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)result;
  uint64_t v4 = *(void *)(*(void *)result + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      uint64_t v8 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v6 + 16);
      if (__OFADD__(v9, v8)) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(void *)(v6 + 24) >> 1)
      {
        sub_1DCA72BE4();
        uint64_t v6 = v10;
      }
      if (*(void *)(v7 + 16))
      {
        uint64_t v11 = *(void *)(v6 + 16);
        if ((*(void *)(v6 + 24) >> 1) - v11 < v8) {
          goto LABEL_24;
        }
        int v12 = (void *)(v6 + 4 * v11 + 32);
        if (v7 + 32 < (unint64_t)v12 + 4 * v8 && (unint64_t)v12 < v7 + 32 + 4 * v8) {
          goto LABEL_26;
        }
        memcpy(v12, (const void *)(v7 + 32), 4 * v8);
        if (v8)
        {
          uint64_t v14 = *(void *)(v6 + 16);
          BOOL v15 = __OFADD__(v14, v8);
          uint64_t v16 = v14 + v8;
          if (v15) {
            goto LABEL_25;
          }
          *(void *)(v6 + 16) = v16;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4 == ++v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = sub_1DCB88D08();
    __break(1u);
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_21:
    *a2 = v6;
  }
  return result;
}

uint64_t sub_1DC9A63A4()
{
  return sub_1DCB87018();
}

uint64_t sub_1DC9A644C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9FCF0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v17 - v8;
  uint64_t v10 = *a1;
  uint64_t v11 = (void *)sub_1DCB87908();
  id v12 = objc_msgSend(v10, sel_featureValueForName_, v11);

  if (v12)
  {
    sub_1DCB88498();
  }
  else
  {
    uint64_t v13 = sub_1DC87E988(&qword_1EAAA0BC0);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 1, 1, v13);
  }
  sub_1DC9A66AC((uint64_t)v9, (uint64_t)v7);
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA0BC0);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v7, 1, v14) == 1)
  {
    sub_1DC9A6714((uint64_t)v7);
    sub_1DC957A28();
    swift_allocError();
    *BOOL v15 = 0;
    swift_willThrow();
    return sub_1DC9A6714((uint64_t)v9);
  }
  else
  {
    sub_1DC9A6714((uint64_t)v9);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a2, v7, v14);
  }
}

void sub_1DC9A6634(void *a1@<X8>)
{
  sub_1DCB05BFC();
  *a1 = v2;
}

uint64_t sub_1DC9A6660()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC9A66A0(void *a1@<X8>)
{
}

uint64_t sub_1DC9A66AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAA9FCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC9A6714(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAA9FCF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SharedVGGish.Configuration.CodingKeys()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_1DC9A678C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9A6858);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharedVGGish.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9A694CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedVGGish.DomainError()
{
  return &type metadata for SharedVGGish.DomainError;
}

unint64_t sub_1DC9A6988()
{
  unint64_t result = qword_1EAAA2E98;
  if (!qword_1EAAA2E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2E98);
  }
  return result;
}

uint64_t sub_1DC9A69D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9A69F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9A6A0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9A6A28()
{
  return v0;
}

uint64_t sub_1DC9A6A40@<X0>(id a1@<X1>, void *a2@<X8>)
{
  id v3 = a1;
  sub_1DC87E988(&qword_1EAA9DF60);
  uint64_t v4 = sub_1DCB87988();
  uint64_t v6 = v5;
  sub_1DC9A6AC0();
  uint64_t result = swift_allocError();
  *uint64_t v8 = v4;
  v8[1] = v6;
  *a2 = result;
  return result;
}

unint64_t sub_1DC9A6AC0()
{
  unint64_t result = qword_1EAAA2EA0;
  if (!qword_1EAAA2EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2EA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for KeepAliveWhileSubscribedDomainError()
{
  return &type metadata for KeepAliveWhileSubscribedDomainError;
}

unint64_t sub_1DC9A6B20()
{
  unint64_t result = qword_1EAAA2EA8;
  if (!qword_1EAAA2EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2EA8);
  }
  return result;
}

uint64_t sub_1DC9A6B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1DC884350();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a2;
  v10[5] = a3;
  swift_retain();
  swift_retain();
  sub_1DC8D6D28((void (*)(void *))sub_1DC9A76C8, v9, (uint64_t)&unk_1EAAA2EC0, (uint64_t)v10, a4);
  swift_release_n();
  return swift_release();
}

uint64_t sub_1DC9A6C4C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DC886510;
  return v6(a1);
}

uint64_t sub_1DC9A6D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9A6B6C(a1, *v3, v3[1], *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_1DC9A6D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1DC9A6D74, 0, 0);
}

uint64_t sub_1DC9A6D74()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  id v3 = (void *)v0[2];
  uint64_t v4 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  uint64_t v7 = v3[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  uint64_t v8 = (void *)swift_allocObject();
  v0[5] = v8;
  _OWORD v8[2] = v4;
  v8[3] = v5;
  v8[4] = v6;
  v8[5] = v7;
  sub_1DC884F60(v4);
  sub_1DC9A707C((uint64_t)v8, v1, v2);
  v0[6] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[7] = v10;
  void *v10 = v0;
  v10[1] = sub_1DC9A6E88;
  return sub_1DC8D721C();
}

uint64_t sub_1DC9A6E88(uint64_t a1, uint64_t a2)
{
  sub_1DC886774();
  uint64_t v7 = v6;
  uint64_t v8 = *v3;
  sub_1DC88678C();
  *uint64_t v9 = v8;
  v7[8] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v10 = sub_1DC9A7008;
  }
  else
  {
    swift_release();
    v7[9] = a2;
    v7[10] = a1;
    uint64_t v10 = sub_1DC9A6F98;
  }
  return MEMORY[0x1F4188298](v10, 0, 0);
}

uint64_t sub_1DC9A6F98()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  return v1(v2, v3);
}

uint64_t sub_1DC9A7008()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_1DC9A707C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  id v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return &unk_1EAAA2EE0;
}

uint64_t sub_1DC9A70F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)swift_task_alloc();
  v3[6] = v5;
  type metadata accessor for XPCFunction();
  v3[4] = &off_1F37F3BD0;
  v3[5] = a3;
  swift_getWitnessTable();
  *uint64_t v5 = v3;
  v5[1] = sub_1DC9A71F8;
  return sub_1DC965FE4();
}

uint64_t sub_1DC9A71F8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  *(void *)(v4 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_1DC885978;
  }
  else {
    uint64_t v5 = sub_1DC9A72DC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1DC9A72DC()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DC9A72F8()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1DC9A73A8;
  return sub_1DC9A6D50(v6, v4, v2);
}

uint64_t sub_1DC9A73A8()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_1DC886774();
  uint64_t v6 = *v1;
  sub_1DC88678C();
  *uint64_t v7 = v6;
  uint64_t v8 = swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v0)
  {
    uint64_t v8 = v5;
    uint64_t v9 = v3;
  }
  return v10(v8, v9);
}

uint64_t sub_1DC9A7488(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC9A7538;
  return sub_1DC9A72F8();
}

uint64_t sub_1DC9A7538(uint64_t a1, uint64_t a2)
{
  sub_1DC886774();
  uint64_t v7 = v6;
  uint64_t v8 = *v3;
  sub_1DC88678C();
  *uint64_t v9 = v8;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v10 = *(void **)(v7 + 16);
    void *v10 = a1;
    v10[1] = a2;
  }
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_1DC9A7628(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC9A7678(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1DC9A76C8()
{
  return sub_1DC8849DC();
}

uint64_t sub_1DC9A76E0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9A7718(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DC886510;
  return sub_1DC9A6C4C(a1, v4);
}

uint64_t sub_1DC9A77D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9A7810()
{
  sub_1DC886900();
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1DC9A78B4;
  return sub_1DC9A70F0(v4, v2, v3);
}

uint64_t sub_1DC9A78B4()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC886774();
  uint64_t v5 = *v0;
  sub_1DC88678C();
  void *v6 = v5;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  return v7(v4, v2);
}

uint64_t type metadata accessor for AnyInfiniteAsyncIterator()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC9A79A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1DC8F0494();
  (*(void (**)(uint64_t))(v6 + 32))(a3);
  uint64_t result = type metadata accessor for SharedReformattedAudioSource.Configuration();
  *(void *)(a3 + *(int *)(result + 52)) = a1;
  *(void *)(a3 + *(int *)(result + 56)) = a2;
  return result;
}

uint64_t sub_1DC9A7A54()
{
  uint64_t v1 = sub_1DC87E988(qword_1EAAA2FA8);
  sub_1DC88D538();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790]();
  sub_1DC8A22D0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = sub_1DC88CEC8;
  v8[3] = v0;
  v8[4] = v7;
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
  sub_1DCB87378();
  sub_1DC88CF34((unint64_t *)&unk_1EAAAAA90, qword_1EAAA2FA8);
  uint64_t v9 = sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v1);
  return v9;
}

uint64_t sub_1DC9A7BDC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC99FF64(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  sub_1DC88D604();
  return sub_1DC9A7C60(v8);
}

uint64_t sub_1DC9A7C0C(void *a1)
{
  swift_retain();
  uint64_t v2 = sub_1DC9A7F88(a1);
  swift_release();
  return v2;
}

uint64_t sub_1DC9A7C60(void *a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v2 = sub_1DC9A7F88(a1);
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

void sub_1DC9A7CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC88D538();
  uint64_t v32 = v31;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&a9 - v34;
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v27, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40))(v29, AssociatedTypeWitness, v23);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, AssociatedTypeWitness);
  sub_1DC88D674();
}

uint64_t sub_1DC9A7DF8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC99FF64(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10[0]);
  return sub_1DC9A7E30(v10);
}

uint64_t sub_1DC9A7E30(void *a1)
{
  v2[2] = &v3;
  return sub_1DC9A9208(a1, (void (*)(void *__return_ptr, void *))sub_1DC9AB2C4, (uint64_t)v2);
}

void sub_1DC9A7E74()
{
}

uint64_t sub_1DC9A7F50(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC99FF64(a1, a2, a3, a4, a5, a6, a7, a8, v9, __src[0]);
  return sub_1DC9A7F88(__src);
}

uint64_t sub_1DC9A7F88(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  swift_retain();
  swift_retain();
  sub_1DC882264((uint64_t)__src);
  uint64_t v2 = sub_1DCAC33E4();
  sub_1DC88CABC((uint64_t)__src);
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1DC9A805C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = v2[1];
  v5[1] = *v2;
  v5[2] = v6;
  long long v7 = v2[3];
  v5[3] = v2[2];
  v5[4] = v7;
  v11[0] = a1;
  v11[1] = a2;
  v10[2] = sub_1DC9AB774;
  v10[3] = v5;
  v10[4] = v11;
  swift_retain();
  sub_1DC88D0CC((uint64_t)v2);
  uint64_t v8 = sub_1DCAC347C(a1, a2, (void (*)(uint64_t *__return_ptr, id *))sub_1DC9AB790, (uint64_t)v10);
  swift_release();
  swift_release();
  return v8;
}

void sub_1DC9A8144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_1DC88D538();
  uint64_t v29 = v28;
  uint64_t v31 = *(void *)(v30 + 64);
  MEMORY[0x1F4188790](v32);
  uint64_t v33 = (char *)v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
  sub_1DC909E58();
  v37();
  unint64_t v38 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v25;
  *(void *)(v39 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v39 + v38, v33, v25);
  sub_1DC909E58();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = sub_1DC88D624();
  uint64_t v42 = sub_1DC88D624();
  uint64_t v43 = sub_1DC88D624();
  v47[2] = AssociatedTypeWitness;
  v47[3] = v41;
  v47[4] = v42;
  v47[5] = v43;
  uint64_t v44 = type metadata accessor for SharedReformattedAudioSource.Configuration();
  uint64_t v45 = type metadata accessor for SharedReformattedAudioSource.Instance();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DCACBE9C(v27, v36, (uint64_t)sub_1DC9AB5F0, v39, v44, v45, WitnessTable, (uint64_t)&a10);
  swift_release();
  swift_release();
  sub_1DC88D674();
}

uint64_t sub_1DC9A833C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC99FF64(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  sub_1DC88D604();
  return sub_1DC9A7C0C(v8);
}

uint64_t sub_1DC9A836C()
{
  return swift_retain();
}

#error "1DC9A83FC: call analysis failed (funcsize=30)"

void sub_1DC9A8414()
{
}

#error "1DC9A8488: call analysis failed (funcsize=16)"

BOOL sub_1DC9A849C(uint64_t a1, uint64_t a2)
{
  if ((sub_1DCB878C8() & 1) != 0
    && (uint64_t v4 = type metadata accessor for SharedReformattedAudioSource.Configuration(),
        *(void *)(a1 + *(int *)(v4 + 52)) == *(void *)(a2 + *(int *)(v4 + 52))))
  {
    return *(void *)(a1 + *(int *)(v4 + 56)) == *(void *)(a2 + *(int *)(v4 + 56));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1DC9A8538(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001DCB90540 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x436C656E6E616863 && a2 == 0xEC000000746E756FLL;
    if (v5 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1DC9A86A8(char a1)
{
  if (!a1) {
    return 0xD000000000000018;
  }
  if (a1 == 1) {
    return 0x436C656E6E616863;
  }
  return 0x6152656C706D6173;
}

void sub_1DC9A8710()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(v3 + 32);
  long long v12 = *(_OWORD *)(v3 + 16);
  long long v13 = v4;
  v11[1] = v3;
  long long v14 = v12;
  long long v15 = v4;
  type metadata accessor for SharedReformattedAudioSource.Configuration.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1DCB88F78();
  sub_1DC88D538();
  uint64_t v7 = v6;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v11 - v9;
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCB892B8();
  LOBYTE(v14) = 0;
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC909DD8(1);
    sub_1DC909DD8(2);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_1DC88D674();
}

void sub_1DC9A8898()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v32 = v11;
  sub_1DC88D538();
  uint64_t v34 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  uint64_t v36 = v14;
  type metadata accessor for SharedReformattedAudioSource.Configuration.CodingKeys();
  swift_getWitnessTable();
  sub_1DC909E58();
  uint64_t v37 = sub_1DCB88E78();
  sub_1DC88D538();
  uint64_t v33 = v15;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v16);
  uint64_t v38 = v8;
  uint64_t v39 = v6;
  uint64_t v35 = v6;
  uint64_t v40 = v4;
  uint64_t v41 = v2;
  uint64_t v17 = type metadata accessor for SharedReformattedAudioSource.Configuration();
  sub_1DC88D538();
  uint64_t v31 = v18;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v30 - v20;
  sub_1DC881A8C(v10, v10[3]);
  sub_1DC909E58();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v10);
  }
  else
  {
    uint64_t v22 = v21;
    uint64_t v23 = v34;
    LOBYTE(v38) = 0;
    uint64_t v24 = v36;
    sub_1DCB88DF8();
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v22, v24, v8);
    uint64_t v25 = v17;
    *(void *)&v22[*(int *)(v17 + 52)] = sub_1DC909DB4(1);
    uint64_t v26 = sub_1DC909DB4(2);
    uint64_t v27 = sub_1DC909D3C();
    v28(v27);
    *(void *)&v22[*(int *)(v17 + 56)] = v26;
    uint64_t v29 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v32, v22, v25);
    sub_1DC8818D0((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v25);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC9A8B80()
{
  return sub_1DC9A86A8(*v0);
}

uint64_t sub_1DC9A8B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9A8538(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9A8BC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1DC9A8C18(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void sub_1DC9A8C6C()
{
}

void sub_1DC9A8C90()
{
}

BOOL sub_1DC9A8CA8(uint64_t a1, uint64_t a2)
{
  return sub_1DC9A849C(a1, a2);
}

uint64_t type metadata accessor for SharedReformattedAudioSource.Instance()
{
  return self;
}

ValueMetadata *type metadata accessor for SharedReformattedAudioSource()
{
  return &type metadata for SharedReformattedAudioSource;
}

uint64_t sub_1DC9A8CEC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC9A8DF8);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_1DC9A8E0C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
  }
  else
  {
    int v9 = a3 - v7;
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v13 = a2 - v7;
    }
    else {
      int v13 = 1;
    }
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DC9A8FACLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for SharedReformattedAudioSource.Configuration()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC9A8FEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9A9008(void *a1)
{
  return sub_1DC9A7E30(a1);
}

uint64_t sub_1DC9A902C(uint64_t a1, uint64_t a2)
{
  return sub_1DC9A99D4(a1, a2, (void (*)(void *__return_ptr, uint64_t))sub_1DC9AB7E4);
}

uint64_t sub_1DC9A907C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = type metadata accessor for SharedBuiltInMicrophone.Instance();
  a2[4] = (uint64_t)&off_1F37EF080;
  uint64_t result = sub_1DC91B018(a1);
  if (v2) {
    return sub_1DC8E6BC8((uint64_t)a2);
  }
  *a2 = result;
  return result;
}

uint64_t sub_1DC9A90EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 24) = &type metadata for StaticAudioSourceInstance;
  *(void *)(a2 + 32) = &off_1F37F0C78;
  uint64_t v2 = *a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 1);
  *(void *)a2 = v2;
  return swift_retain();
}

uint64_t sub_1DC9A912C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 56);
  a4[3] = swift_getAssociatedTypeWitness();
  a4[4] = swift_getAssociatedConformanceWitness();
  sub_1DC8EF6AC(a4);
  uint64_t result = v9(a1, a2, a3);
  if (v4) {
    return sub_1DC8E6BC8((uint64_t)a4);
  }
  return result;
}

uint64_t sub_1DC9A9208(void *a1, void (*a2)(void *__return_ptr, void *), uint64_t a3)
{
  void (*v27)(void *__return_ptr, void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (**v38)@<X0>(uint64_t *@<X8>);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(void *__return_ptr, void *);
  uint64_t v62;
  unint64_t v63;
  void v64[3];
  uint64_t v65;
  uint64_t v66;
  void __dst[12];
  uint64_t v68;

  unint64_t v61 = a2;
  unint64_t v59 = sub_1DC87E988(&qword_1EAAA2F68);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v57 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1DC87E988(&qword_1EAAA2F70);
  MEMORY[0x1F4188790]();
  uint64_t v60 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC87E988(&qword_1EAAA2F78);
  MEMORY[0x1F4188790]();
  size_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA2F80);
  uint64_t v55 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790]();
  int v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DCB86BF8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1;
  memcpy(__dst, a1, 0x58uLL);
  uint64_t v17 = v68;
  v61(v64, __dst);
  if (!v17)
  {
    uint64_t v53 = v8;
    uint64_t v51 = v11;
    uint64_t v52 = v9;
    uint64_t v68 = 0;
    uint64_t v54 = v13;
    unint64_t v61 = (void (*)(void *__return_ptr, void *))v12;
    uint64_t v18 = a1[10];
    sub_1DCB86BE8();
    uint64_t v19 = v65;
    uint64_t v20 = v66;
    sub_1DC881A8C(v64, v65);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20) == v18)
    {
      uint64_t v21 = v16[9];
      uint64_t v22 = v65;
      uint64_t v23 = v66;
      sub_1DC881A8C(v64, v65);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23) == v21)
      {
        uint64_t v24 = v65;
        uint64_t v25 = v66;
        sub_1DC881A8C(v64, v65);
        uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
        uint64_t v27 = (void (*)(void *__return_ptr, void))v61;
LABEL_9:
        unint64_t v50 = v54;
        type metadata accessor for SharedReformattedAudioSource.Instance();
        a3 = swift_allocObject();
        *(void *)(a3 + 16) = v26;
        (*(void (**)(char *, void))(v50 + 8))(v15, v27);
        sub_1DC8818D0((uint64_t)v64);
        return a3;
      }
    }
    uint64_t v28 = v65;
    uint64_t v29 = v66;
    sub_1DC881A8C(v64, v65);
    uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_1DC8D9B90;
    *(void *)(v30 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    uint64_t v31 = v57;
    sub_1DCB873D8();
    swift_release();
    swift_release();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = 0x4000;
    uint64_t v33 = v58;
    uint64_t v34 = v59;
    uint64_t v35 = (uint64_t)v60;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v60, v31, v59);
    uint64_t v36 = v56;
    uint64_t v37 = v35 + *(int *)(v56 + 84);
    *(void *)uint64_t v37 = 0;
    *(void *)(v37 + 8) = 0;
    *(unsigned char *)(v37 + 16) = 2;
    uint64_t v38 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v35 + *(int *)(v36 + 88));
    *uint64_t v38 = sub_1DC9AB3C4;
    v38[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v32;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v34);
    uint64_t v39 = v65;
    uint64_t v40 = v66;
    sub_1DC881A8C(v64, v65);
    (*(void (**)(uint64_t, uint64_t))(v40 + 24))(v39, v40);
    uint64_t v41 = v65;
    uint64_t v42 = v66;
    sub_1DC881A8C(v64, v65);
    (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
    uint64_t v43 = (uint64_t)v53;
    a3 = v35;
    uint64_t v44 = v68;
    sub_1DC9AA814((uint64_t)v53);
    if (!v44)
    {
      uint64_t v68 = 0;
      sub_1DC9AB3CC(v35, &qword_1EAAA2F70);
      uint64_t v62 = 0;
      uint64_t v63 = 0xE000000000000000;
      sub_1DCB88A98();
      swift_bridgeObjectRelease();
      uint64_t v62 = 0xD000000000000026;
      uint64_t v63 = 0x80000001DCB94500;
      sub_1DC88CBB4();
      uint64_t v27 = (void (*)(void *__return_ptr, void))v61;
      sub_1DCB88F98();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      uint64_t v46 = v51;
      sub_1DCB0447C();
      swift_bridgeObjectRelease();
      sub_1DC9AB3CC(v43, &qword_1EAAA2F78);
      sub_1DC88CF34(&qword_1EAAA2F88, &qword_1EAAA2F80);
      uint64_t v47 = v52;
      uint64_t v48 = sub_1DCB87468();
      sub_1DC87E988(&qword_1EAAA2F90);
      swift_allocObject();
      uint64_t v49 = sub_1DC9C5478(v48);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v46, v47);
      uint64_t v62 = v49;
      sub_1DC88CF34(&qword_1EAAA2F98, &qword_1EAAA2F90);
      uint64_t v26 = sub_1DCB873A8();
      swift_release();
      goto LABEL_9;
    }
    sub_1DC9AB3CC(v35, &qword_1EAAA2F70);
    (*(void (**)(char *, void))(v54 + 8))(v15, v61);
    sub_1DC8818D0((uint64_t)v64);
  }
  return a3;
}

uint64_t sub_1DC9A99D4(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  void (*v29)(void *__return_ptr, void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (**v39)@<X0>(uint64_t *@<X8>);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void *__return_ptr, uint64_t);
  uint64_t v65;
  unint64_t v66;
  void v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  uint64_t v63 = a1;
  char v64 = a3;
  uint64_t v62 = a2;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA2F68);
  uint64_t v60 = *(void *)(v3 - 8);
  unint64_t v61 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v59 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA2F70);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA2F78);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA2F80);
  uint64_t v58 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DCB86BF8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v70;
  v64(v67, v16);
  uint64_t v70 = v19;
  if (!v19)
  {
    uint64_t v55 = v7;
    uint64_t v56 = v10;
    uint64_t v52 = v13;
    uint64_t v53 = v11;
    uint64_t v57 = v15;
    char v64 = (void (*)(void *__return_ptr, uint64_t))v14;
    sub_1DCB86BE8();
    uint64_t v21 = v68;
    uint64_t v20 = v69;
    sub_1DC881A8C(v67, v68);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v21, v20);
    uint64_t v23 = v63;
    if (v22 == v62)
    {
      uint64_t v24 = v68;
      uint64_t v25 = v69;
      sub_1DC881A8C(v67, v68);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25) == v23)
      {
        uint64_t v26 = v68;
        uint64_t v27 = v69;
        sub_1DC881A8C(v67, v68);
        uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
        uint64_t v29 = v64;
LABEL_9:
        unint64_t v50 = v57;
        type metadata accessor for SharedReformattedAudioSource.Instance();
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = v28;
        (*(void (**)(char *, void))(v50 + 8))(v18, v29);
        sub_1DC8818D0((uint64_t)v67);
        return v11;
      }
    }
    uint64_t v54 = v18;
    uint64_t v30 = v68;
    uint64_t v31 = v69;
    sub_1DC881A8C(v67, v68);
    uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_1DC8D9B90;
    *(void *)(v32 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    uint64_t v33 = v59;
    sub_1DCB873D8();
    swift_release();
    swift_release();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = 0x4000;
    uint64_t v36 = v60;
    uint64_t v35 = v61;
    uint64_t v37 = (uint64_t)v55;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v55, v33, v61);
    uint64_t v38 = v37 + *(int *)(v5 + 84);
    *(void *)uint64_t v38 = 0;
    *(void *)(v38 + 8) = 0;
    *(unsigned char *)(v38 + 16) = 2;
    uint64_t v39 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v37 + *(int *)(v5 + 88));
    *uint64_t v39 = sub_1DC9AB94C;
    v39[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v34;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
    uint64_t v40 = v68;
    uint64_t v41 = v69;
    sub_1DC881A8C(v67, v68);
    (*(void (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41);
    uint64_t v42 = v68;
    uint64_t v43 = v69;
    sub_1DC881A8C(v67, v68);
    (*(void (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
    uint64_t v11 = (uint64_t)v56;
    uint64_t v44 = v70;
    sub_1DC9AA814((uint64_t)v56);
    uint64_t v70 = v44;
    if (!v44)
    {
      sub_1DC9AB3CC(v37, &qword_1EAAA2F70);
      uint64_t v65 = 0;
      uint64_t v66 = 0xE000000000000000;
      sub_1DCB88A98();
      swift_bridgeObjectRelease();
      uint64_t v65 = 0xD000000000000026;
      uint64_t v66 = 0x80000001DCB94500;
      sub_1DC88CBB4();
      uint64_t v18 = v54;
      uint64_t v29 = v64;
      sub_1DCB88F98();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      uint64_t v46 = v52;
      sub_1DCB0447C();
      swift_bridgeObjectRelease();
      sub_1DC9AB3CC(v11, &qword_1EAAA2F78);
      sub_1DC88CF34(&qword_1EAAA2F88, &qword_1EAAA2F80);
      uint64_t v47 = v53;
      uint64_t v48 = sub_1DCB87468();
      sub_1DC87E988(&qword_1EAAA2F90);
      swift_allocObject();
      uint64_t v49 = sub_1DC9C5478(v48);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v47);
      uint64_t v65 = v49;
      sub_1DC88CF34(&qword_1EAAA2F98, &qword_1EAAA2F90);
      uint64_t v28 = sub_1DCB873A8();
      swift_release();
      goto LABEL_9;
    }
    sub_1DC9AB3CC(v37, &qword_1EAAA2F70);
    (*(void (**)(char *, void))(v57 + 8))(v54, v64);
    sub_1DC8818D0((uint64_t)v67);
  }
  return v11;
}

void sub_1DC9AA124()
{
  void (*v1)(void *__return_ptr, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)@<X0>(uint64_t *@<X8>);
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void *__return_ptr, uint64_t);
  void v61[3];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_1DC88D6B0();
  uint64_t v60 = v1;
  uint64_t v3 = v2;
  sub_1DC87E988(&qword_1EAAA2F68);
  sub_1DC88D538();
  uint64_t v57 = v5;
  uint64_t v58 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1DC88D550();
  uint64_t v56 = v6;
  uint64_t v55 = sub_1DC87E988(&qword_1EAAA2F70);
  sub_1DC8F0494();
  MEMORY[0x1F4188790](v7);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA2F78);
  MEMORY[0x1F4188790](v11 - 8);
  sub_1DC8A22D0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1DC87E988(&qword_1EAAA2F80);
  sub_1DC88D538();
  uint64_t v54 = v16;
  MEMORY[0x1F4188790](v17);
  sub_1DC8A22D0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_1DCB86BF8();
  sub_1DC88D538();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v24);
  sub_1DC8A22D0();
  uint64_t v27 = v26 - v25;
  unint64_t v59 = v3;
  v60(v61, v3);
  if (!v0)
  {
    uint64_t v51 = v10;
    uint64_t v52 = v14;
    unint64_t v50 = v20;
    uint64_t v53 = v23;
    char v64 = v21;
    sub_1DCB86BE8();
    uint64_t v28 = v62;
    uint64_t v29 = v63;
    sub_1DC881A8C(v61, v62);
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
    uint64_t v31 = type metadata accessor for SharedReformattedAudioSource.Configuration();
    if (v30 == *(void *)(v59 + *(int *)(v31 + 56))
      && (sub_1DC881A8C(v61, v62), uint64_t v32 = sub_1DC9AB9CC(), v33(v32) == *(void *)(v59 + *(int *)(v31 + 52))))
    {
      sub_1DC881A8C(v61, v62);
      uint64_t v34 = sub_1DC9AB9E0();
      uint64_t v36 = v35(v34);
      uint64_t v37 = sub_1DC9AB964();
      v38(v37);
    }
    else
    {
      sub_1DC881A8C(v61, v62);
      uint64_t v39 = sub_1DC9AB9CC();
      v40(v39);
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = sub_1DC8D9B90;
      *(void *)(v41 + 24) = 0;
      sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
      sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
      sub_1DCB873D8();
      swift_release();
      swift_release();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = 0x4000;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v10, v56, v58);
      uint64_t v43 = v10 + *(int *)(v55 + 84);
      *(void *)uint64_t v43 = 0;
      *(void *)(v43 + 8) = 0;
      *(unsigned char *)(v43 + 16) = 2;
      uint64_t v44 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v10 + *(int *)(v55 + 88));
      *uint64_t v44 = sub_1DC9AB94C;
      v44[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v42;
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
      sub_1DC881A8C(v61, v62);
      uint64_t v45 = sub_1DC9AB9E0();
      v46(v45);
      uint64_t v47 = v62;
      uint64_t v48 = v63;
      sub_1DC881A8C(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
      sub_1DC9AA814(v52);
      sub_1DC9AB3CC(v51, &qword_1EAAA2F70);
      sub_1DCB88A98();
      swift_bridgeObjectRelease();
      sub_1DC88CBB4();
      sub_1DCB88F98();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      sub_1DCB0447C();
      swift_bridgeObjectRelease();
      sub_1DC9AB3CC(v52, &qword_1EAAA2F78);
      sub_1DC88CF34(&qword_1EAAA2F88, &qword_1EAAA2F80);
      uint64_t v49 = sub_1DCB87468();
      sub_1DC87E988(&qword_1EAAA2F90);
      swift_allocObject();
      sub_1DC9C5478(v49);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v15);
      sub_1DC88CF34(&qword_1EAAA2F98, &qword_1EAAA2F90);
      uint64_t v36 = sub_1DCB873A8();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v27, v64);
    }
    type metadata accessor for SharedReformattedAudioSource.Instance();
    *(void *)(swift_allocObject() + 16) = v36;
    sub_1DC8818D0((uint64_t)v61);
  }
  sub_1DC88D674();
}

void sub_1DC9AA814(uint64_t a1@<X8>)
{
  sub_1DCB88A98();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DC87E988(&qword_1EAA9DC78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBC6B50;
  *(void *)(inited + 32) = 0x7461527475706E69;
  *(void *)(inited + 40) = 0xE900000000000065;
  *(void *)(inited + 48) = sub_1DCB88F98();
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = 0xD000000000000011;
  *(void *)(inited + 72) = 0x80000001DCB91CC0;
  *(void *)(inited + 80) = sub_1DCB88F98();
  *(void *)(inited + 88) = v3;
  *(void *)(inited + 96) = 0x615274757074756FLL;
  *(void *)(inited + 104) = 0xEA00000000006574;
  *(void *)(inited + 112) = sub_1DCB88F98();
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 128) = 0xD000000000000012;
  *(void *)(inited + 136) = 0x80000001DCB94530;
  *(void *)(inited + 144) = sub_1DCB88F98();
  *(void *)(inited + 152) = v5;
  sub_1DCB877D8();
  uint64_t v6 = self;
  uint64_t v7 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1DCB87C08();
  id v10 = sub_1DCB6F82C(v6, v7, v8, v9);

  if (v10)
  {
    sub_1DCB5EC24((uint64_t)v10);
    sub_1DCB5F1F8((uint64_t)v10);
    sub_1DC9AAE50(v10, a1);
  }
  else
  {
    sub_1DC9AB424();
    swift_allocError();
    *uint64_t v11 = 0xD000000000000020;
    v11[1] = 0x80000001DCB945F0;
    swift_willThrow();
  }
}

double sub_1DC9AACB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t *__return_ptr, void *)@<X4>, uint64_t a6@<X8>)
{
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  swift_bridgeObjectRetain();
  a5(&v11, v10);
  swift_bridgeObjectRelease();
  *(void *)a6 = v11;
  *(_OWORD *)(a6 + 8) = v12;
  *(_OWORD *)(a6 + 24) = v13;
  double result = *(double *)&v14;
  *(_OWORD *)(a6 + 40) = v14;
  *(void *)(a6 + 56) = a4;
  return result;
}

void sub_1DC9AAD48()
{
}

#error "1DC9AADBC: call analysis failed (funcsize=16)"

#error "1DC9AAE38: call analysis failed (funcsize=30)"

id sub_1DC9AAE50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_1DCB60C88((uint64_t)a1) == 1 && sub_1DCB60FFC((uint64_t)a1) == 1 && sub_1DCB5F080((uint64_t)a1))
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    sub_1DC9AB4E0(v2, a2);
    uint64_t v7 = sub_1DC87E988(&qword_1EAAA2F78);
    uint64_t v8 = (void *)(a2 + *(int *)(v7 + 52));
    *uint64_t v8 = sub_1DC9AB4C4;
    v8[1] = v6;
    uint64_t v9 = (void *)(a2 + *(int *)(v7 + 56));
    *uint64_t v9 = sub_1DC9AB4A8;
    v9[1] = v5;
    return a1;
  }
  else
  {
    sub_1DC987224();
    swift_allocError();
    *uint64_t v11 = 1;
    return (id)swift_willThrow();
  }
}

uint64_t sub_1DC9AAF78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  long long v4 = *(_OWORD *)(a1 + 16);
  v22[0] = *(_OWORD *)a1;
  v22[1] = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v23 = *(void *)(a1 + 32);
  uint64_t v24 = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v25 = v6;
  unint64_t v21 = 0;
  if (v6 < v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (__OFSUB__(v6, v5))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  sub_1DC88CD74(a1);
  sub_1DCB61B48((uint64_t)a3);
  uint64_t v9 = *(void *)(a2 + 8);
  unint64_t v10 = v21;
  uint64_t v11 = v9 * v21;
  if ((unsigned __int128)(v9 * (__int128)(uint64_t)v21) >> 64 != (uint64_t)(v9 * v21) >> 63) {
    goto LABEL_14;
  }
  if (v11 < 0
    || (!v11 ? (uint64_t v12 = MEMORY[0x1E4FBC860]) : (uint64_t v12 = sub_1DCB87CF8(), *(void *)(v12 + 16) = v11),
        *(void *)(v12 + 16) = v11,
        uint64_t v18 = v12,
        uint64_t v19 = v9,
        unint64_t v20 = v10,
        uint64_t v17 = 0,
        HIDWORD(v10)))
  {
    uint64_t result = sub_1DCB88C58();
    __break(1u);
  }
  else
  {
    int v16 = v10;
    id v13 = a3;
    sub_1DC985030((uint64_t)v22, v13, (uint64_t)&v21, (uint64_t)&v16, (uint64_t)&v17, v14);
    swift_bridgeObjectRelease();
    if (v3) {
      return swift_bridgeObjectRelease();
    }
    else {
      return v18;
    }
  }
  return result;
}

void sub_1DC9AB1B4(void *a1@<X8>)
{
  sub_1DCB05A80();
  *a1 = v2;
}

uint64_t sub_1DC9AB1E0@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t result = sub_1DC9A9008(__dst);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9AB240@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC9AB1E0(a1, a2);
}

uint64_t sub_1DC9AB268@<X0>(void *__src@<X0>, uint64_t *a2@<X8>)
{
  memcpy(__dst, __src, 0x41uLL);
  return sub_1DC9A907C(__dst, a2);
}

uint64_t sub_1DC9AB2C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC9AB268(a1, a2);
}

uint64_t sub_1DC9AB2E0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  long long v6 = a1[1];
  v12[0] = *a1;
  v12[1] = v6;
  long long v7 = a1[3];
  v12[2] = a1[2];
  v12[3] = v7;
  uint64_t result = sub_1DC9AAF78((uint64_t)v12, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v9;
    a4[2] = v10;
    a4[3] = v11;
  }
  return result;
}

uint64_t sub_1DC9AB32C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC9A836C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double sub_1DC9AB354@<D0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, void *)@<X1>, uint64_t a3@<X8>)
{
  return sub_1DC9AACB8(*a1, a1[1], a1[2], a1[3], a2, a3);
}

uint64_t sub_1DC9AB380()
{
  swift_release();

  return swift_deallocObject();
}

double sub_1DC9AB3B8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9AB354(a1, *(void (**)(uint64_t *__return_ptr, void *))(v2 + 16), a2);
}

uint64_t sub_1DC9AB3C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9AB32C(a1);
}

uint64_t sub_1DC9AB3CC(uint64_t a1, uint64_t *a2)
{
  sub_1DC87E988(a2);
  sub_1DC8F0494();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_1DC9AB424()
{
  unint64_t result = qword_1EAAA2FA0;
  if (!qword_1EAAA2FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA2FA0);
  }
  return result;
}

uint64_t sub_1DC9AB470()
{
  return swift_deallocObject();
}

uint64_t sub_1DC9AB4A8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DC9AB2E0(a1, a2, *(void **)(v3 + 16), a3);
}

void *sub_1DC9AB4C4@<X0>(void *a1@<X8>)
{
  return sub_1DCAD3CA4(*(void **)(v1 + 16), a1);
}

uint64_t sub_1DC9AB4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC9AB54C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC9A912C(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), a2);
}

uint64_t sub_1DC9AB56C()
{
  sub_1DC8F0494();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t sub_1DC9AB5F0@<X0>(uint64_t *a1@<X8>)
{
  sub_1DC9AB9F4();
  uint64_t result = v3();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DC9AB65C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC9AB69C(void *a1@<X8>)
{
}

uint64_t type metadata accessor for SharedReformattedAudioSource.Configuration.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC9AB6C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9A902C(*a1, a1[1]);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9AB714()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9AB774@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC9AB6C0(a1, a2);
}

uint64_t sub_1DC9AB790@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC957938(a1, a2);
}

uint64_t sub_1DC9AB7B0@<X0>(_OWORD *a1@<X1>, uint64_t a2@<X8>)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  long long v3 = a1[3];
  v5[2] = a1[2];
  v5[3] = v3;
  return sub_1DC9A90EC((uint64_t *)v5, a2);
}

uint64_t sub_1DC9AB7E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC9AB7B0(*(_OWORD **)(v1 + 16), a1);
}

unsigned char *sub_1DC9AB804(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9AB8D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1DC9AB8F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9AB914()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9AB930()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9AB964()
{
  return *(void *)(v0 - 264);
}

void sub_1DC9AB984()
{
  sub_1DC9A7E74();
}

void sub_1DC9AB9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC9A7CE0(v21, v20, v22, a4, a1, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1DC9AB9CC()
{
  return v0;
}

uint64_t sub_1DC9AB9E0()
{
  return v0;
}

void sub_1DC9ABA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC9A8144(v21, v20, a1, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

id sub_1DC9ABA28(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
      objc_msgSend(v1, sel_setComputeUnits_, 0);
    }
    else
    {
      id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
      objc_msgSend(v1, sel_setComputeUnits_, 3);
    }
    return v1;
  }
  else
  {
    id v2 = objc_allocWithZone(MEMORY[0x1E4F1E990]);
    return objc_msgSend(v2, sel_init);
  }
}

uint64_t sub_1DC9ABAE0(void *a1)
{
  id v2 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DC9AD714((char *)&v8);
  uint64_t result = v8;
  if (v8 == 3)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1DCB86FE8();
    sub_1DC89F57C(v4, (uint64_t)qword_1EAAFF810);
    uint64_t v5 = sub_1DCB86FC8();
    os_log_type_t v6 = sub_1DCB88468();
    if (os_log_type_enabled(v5, v6))
    {
      long long v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v7 = 0;
      _os_log_impl(&dword_1DC873000, v5, v6, "Forgiving an unsupported model configuration.", v7, 2u);
      MEMORY[0x1E01A99C0](v7, -1, -1);
    }

    if (objc_msgSend(a1, sel_computeUnits)) {
      return 2 * (objc_msgSend(a1, sel_computeUnits) == (id)3);
    }
    else {
      return 1;
    }
  }
  return result;
}

__CFString *sub_1DC9ABC24()
{
  sub_1DCB87938();
  if (v1 == sub_1DC9AF7A8() && v0 == v2)
  {
    sub_1DC9AF82C();
    goto LABEL_38;
  }
  sub_1DC9AF764();
  sub_1DC9AF864();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_38:
    uint64_t v22 = SNDetectorIdentifierVGGishApplause;
    return *v22;
  }
  sub_1DCB87938();
  if (v1 == sub_1DC9AF7A8() && v0 == v4)
  {
    sub_1DC9AF82C();
    goto LABEL_41;
  }
  sub_1DC9AF764();
  sub_1DC9AF864();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_41:
    uint64_t v22 = SNDetectorIdentifierVGGishBabble;
    return *v22;
  }
  sub_1DCB87938();
  if (v1 == sub_1DC9AF7A8() && v0 == v6)
  {
    sub_1DC9AF82C();
    goto LABEL_43;
  }
  sub_1DC9AF764();
  sub_1DC9AF864();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_43:
    uint64_t v22 = SNDetectorIdentifierVGGishCheering;
    return *v22;
  }
  sub_1DCB87938();
  if (v1 == sub_1DC9AF7A8() && v0 == v8)
  {
    sub_1DC9AF82C();
    goto LABEL_45;
  }
  sub_1DC9AF764();
  sub_1DC9AF864();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_45:
    uint64_t v22 = SNDetectorIdentifierVGGishLaughter;
    return *v22;
  }
  sub_1DCB87938();
  if (v1 == sub_1DC9AF7A8() && v0 == v10)
  {
    sub_1DC9AF82C();
    goto LABEL_47;
  }
  sub_1DC9AF764();
  sub_1DC9AF864();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_47:
    uint64_t v22 = SNDetectorIdentifierVGGishMusic;
    return *v22;
  }
  sub_1DCB87938();
  if (v1 == sub_1DC9AF7A8() && v0 == v12)
  {
    sub_1DC9AF82C();
    goto LABEL_49;
  }
  sub_1DC9AF764();
  sub_1DC9AF864();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_49:
    uint64_t v22 = SNDetectorIdentifierVGGishSpeech;
    return *v22;
  }
  sub_1DCB87938();
  if (v1 == sub_1DC9AF7A8() && v0 == v14)
  {
    sub_1DC9AF82C();
  }
  else
  {
    sub_1DC9AF764();
    sub_1DC9AF864();
    swift_bridgeObjectRelease();
    if ((v1 & 1) == 0)
    {
      type metadata accessor for SNError();
      sub_1DC9AF87C();
      sub_1DCB88A98();
      sub_1DC9AF8B0();
      sub_1DCB87A18();
      type metadata accessor for SNSoundIdentifier(0);
      sub_1DCB88C08();
      unint64_t v16 = sub_1DC8CD9C0();
      sub_1DCA14B2C(v16, v17, v18, v19, v20, v23);
      swift_bridgeObjectRelease();
      return (__CFString *)swift_willThrow();
    }
  }
  uint64_t v22 = SNDetectorIdentifierSoundPrintASmokeAlarm;
  return *v22;
}

void *sub_1DC9ABEEC(void *a1)
{
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v4)
  {
    sub_1DC9AF7C4();
    goto LABEL_53;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_53:
    uint64_t v30 = SNSoundIdentifierApplause;
LABEL_54:
    uint64_t v31 = *v30;
    id v32 = a1;
    uint64_t v33 = v31;
    return a1;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v6)
  {
    sub_1DC9AF7C4();
    goto LABEL_57;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_57:
    uint64_t v30 = SNSoundIdentifierBabble;
    goto LABEL_54;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v8)
  {
    sub_1DC9AF7C4();
    goto LABEL_59;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_59:
    uint64_t v30 = SNSoundIdentifierCheering;
    goto LABEL_54;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v10)
  {
    sub_1DC9AF7C4();
    goto LABEL_61;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_61:
    uint64_t v30 = SNSoundIdentifierLaughter;
    goto LABEL_54;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v12)
  {
    sub_1DC9AF7C4();
    goto LABEL_63;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_63:
    uint64_t v30 = SNSoundIdentifierMusic;
    goto LABEL_54;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v14)
  {
    sub_1DC9AF7C4();
    goto LABEL_65;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_65:
    uint64_t v30 = SNSoundIdentifierSpeech;
    goto LABEL_54;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v16)
  {
    sub_1DC9AF7C4();
    goto LABEL_67;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_67:
    uint64_t v35 = SNSoundIdentifierLaughter;
LABEL_68:
    uint64_t v36 = *v35;
    id v37 = a1;
    uint64_t v38 = v36;
    return a1;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v18)
  {
    sub_1DC9AF7C4();
    goto LABEL_71;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_71:
    id v39 = a1;
    uint64_t v40 = sub_1DCB66320();
    return a1;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v20)
  {
    sub_1DC9AF7C4();
    goto LABEL_73;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_73:
    uint64_t v35 = SNSoundIdentifierSpeech;
    goto LABEL_68;
  }
  sub_1DCB87938();
  if (v2 == sub_1DC9AF78C() && v1 == v22)
  {
    sub_1DC9AF7C4();
    goto LABEL_75;
  }
  sub_1DC9AF73C();
  sub_1DC9AF7DC();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_75:
    uint64_t v35 = SNSoundIdentifierSmokeAlarm;
    goto LABEL_68;
  }
  type metadata accessor for SNError();
  sub_1DC9AF87C();
  sub_1DCB88A98();
  sub_1DC9AF8B0();
  sub_1DCB87A18();
  type metadata accessor for SNDetectorIdentifier(0);
  sub_1DCB88C08();
  a1 = v41;
  unint64_t v24 = sub_1DC9AF80C();
  sub_1DCA14B2C(v24, v25, v26, v27, v28, v29);
  swift_bridgeObjectRelease();
  swift_willThrow();
  return a1;
}

uint64_t sub_1DC9AC2A0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v6 = sub_1DC8BADF0(v5);
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  uint64_t result = sub_1DCAA83DC(a1, v8 - v7);
  if (!v2)
  {
    uint64_t v11 = sub_1DCB86A18();
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v9, 1, v11) == 1)
    {
      sub_1DC9AEC6C(v9, qword_1EAA9CBC0);
      sub_1DC9AEC20();
      swift_allocError();
      *uint64_t v12 = a1;
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a2, v9, v11);
    }
  }
  return result;
}

uint64_t sub_1DC9AC3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DC9AE138();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 48);
    while (1)
    {
      uint64_t v2 = *((unsigned __int8 *)v7 - 16);
      BOOL v8 = *(v7 - 1) == a1 && *v7 == a2;
      if (v8 || (sub_1DCB89018() & 1) != 0) {
        break;
      }
      v7 += 3;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1DC9AF87C();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DC9AF8B0();
    sub_1DCB87A18();
    unint64_t v9 = sub_1DC9AF80C();
    sub_1DCA14B2C(v9, v10, v11, v12, v13, v14);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1DC9AC4EC()
{
  uint64_t v0 = sub_1DCB88D48();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

unint64_t sub_1DC9AC540(char a1)
{
  if (a1) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_1DC9AC57C()
{
  return sub_1DC8C21EC();
}

uint64_t sub_1DC9AC588@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DC9AC4EC();
  *a1 = result;
  return result;
}

unint64_t sub_1DC9AC5B8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DC9AC540(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1DC9AC5E4(void *a1@<X8>)
{
  *a1 = &unk_1F37F1D60;
}

uint64_t sub_1DC9AC5F4()
{
  return sub_1DCB87BD8();
}

uint64_t sub_1DC9AC654()
{
  return sub_1DCB87BB8();
}

uint64_t sub_1DC9AC6A4()
{
  return sub_1DCA3B4EC();
}

uint64_t sub_1DC9AC6AC()
{
  return sub_1DC960ED8();
}

uint64_t sub_1DC9AC6B4()
{
  return sub_1DC960FC8();
}

uint64_t sub_1DC9AC6BC()
{
  sub_1DCB891B8();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9AC750(unsigned __int16 a1, __int16 a2)
{
  if (a2 != a1)
  {
    char v2 = 0;
  }
  else
  {
    int v3 = HIBYTE(a1);
    unint64_t v4 = 0xE300000000000000;
    unint64_t v5 = 0xE300000000000000;
    uint64_t v6 = 7696483;
    if (v3 != 1)
    {
      uint64_t v6 = 0x4E41646E41757063;
      unint64_t v5 = 0xE900000000000045;
    }
    if (v3) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 7105633;
    }
    if (v3) {
      unint64_t v8 = v5;
    }
    else {
      unint64_t v8 = 0xE300000000000000;
    }
    uint64_t v9 = 7696483;
    if (HIBYTE(a2) != 1)
    {
      uint64_t v9 = 0x4E41646E41757063;
      unint64_t v4 = 0xE900000000000045;
    }
    if (HIBYTE(a2)) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 7105633;
    }
    if (HIBYTE(a2)) {
      unint64_t v11 = v4;
    }
    else {
      unint64_t v11 = 0xE300000000000000;
    }
    if (v7 == v10 && v8 == v11) {
      char v2 = 1;
    }
    else {
      char v2 = sub_1DCB89018();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t sub_1DC9AC858(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7465737361 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC9AC964(char a1)
{
  if (a1) {
    return 0x72756769666E6F63;
  }
  else {
    return 0x7465737361;
  }
}

uint64_t sub_1DC9AC9A4(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA30C8);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9AF294();
  sub_1DCB892B8();
  sub_1DC9AF32C();
  sub_1DCB88F18();
  if (!v1)
  {
    sub_1DC8CBBEC();
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1DC9ACB00()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9ACBB0(void *a1)
{
  sub_1DC87E988(&qword_1EAAA30B0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9AF294();
  sub_1DC9AF88C();
  if (v1) {
    return sub_1DC8818D0((uint64_t)a1);
  }
  sub_1DC9AF2E0();
  sub_1DC9AF844();
  sub_1DC8CBB54();
  sub_1DC9AF844();
  uint64_t v4 = sub_1DC9AF7F4();
  v5(v4);
  sub_1DC8818D0((uint64_t)a1);
  return v8 | (v7 << 8);
}

uint64_t sub_1DC9ACD04()
{
  return sub_1DC9AC964(*v0);
}

uint64_t sub_1DC9ACD0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9AC858(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9ACD34(uint64_t a1)
{
  unint64_t v2 = sub_1DC9AF294();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9ACD70(uint64_t a1)
{
  unint64_t v2 = sub_1DC9AF294();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9ACDAC@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_1DC9ACBB0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9ACDD8(void *a1)
{
  return sub_1DC9AC9A4(a1);
}

uint64_t sub_1DC9ACDF4()
{
  return sub_1DC9ACB00();
}

uint64_t sub_1DC9ACDFC()
{
  return sub_1DC9AC6BC();
}

uint64_t sub_1DC9ACE04()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9ACEB0(unsigned __int16 *a1, __int16 *a2)
{
  return sub_1DC9AC750(*a1, *a2);
}

uint64_t sub_1DC9ACEBC()
{
  sub_1DC87E988(&qword_1EAAA3040);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = objc_msgSend(self, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
  sub_1DC87E988(&qword_1EAAA3048);
  swift_allocObject();
  uint64_t result = sub_1DC9AE958(v0);
  qword_1EAAA3030 = result;
  return result;
}

uint64_t sub_1DC9ACF4C()
{
  unint64_t v0 = sub_1DCB88D48();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DC9ACF98(char a1)
{
  if (!a1) {
    return 7105633;
  }
  if (a1 == 1) {
    return 7696483;
  }
  return 0x4E41646E41757063;
}

uint64_t sub_1DC9ACFE4(unsigned __int8 *a1, char *a2)
{
  return sub_1DC8C2280(*a1, *a2);
}

uint64_t sub_1DC9ACFF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DC9ACF4C();
  *a1 = result;
  return result;
}

uint64_t sub_1DC9AD020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC9ACF98(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DC9AD04C()
{
  return sub_1DCB87BD8();
}

uint64_t sub_1DC9AD0AC()
{
  return sub_1DCB87BB8();
}

uint64_t sub_1DC9AD0FC()
{
  return sub_1DCA3B4E0();
}

uint64_t sub_1DC9AD104()
{
  return sub_1DC960F48();
}

uint64_t sub_1DC9AD10C()
{
  return sub_1DC961050();
}

uint64_t sub_1DC9AD114(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7105633;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 7696483;
    }
    else {
      uint64_t v4 = 0x4E41646E41757063;
    }
    if (v3 == 1) {
      unint64_t v5 = 0xE300000000000000;
    }
    else {
      unint64_t v5 = 0xE900000000000045;
    }
  }
  else
  {
    unint64_t v5 = 0xE300000000000000;
    uint64_t v4 = 7105633;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v2 = 7696483;
    }
    else {
      uint64_t v2 = 0x4E41646E41757063;
    }
    if (a2 == 1) {
      unint64_t v6 = 0xE300000000000000;
    }
    else {
      unint64_t v6 = 0xE900000000000045;
    }
  }
  else
  {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v4 == v2 && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DCB89018();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC9AD208(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x55657475706D6F63 && a2 == 0xEB0000000074696ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DC9AD2A8()
{
  return 0x55657475706D6F63;
}

uint64_t sub_1DC9AD2C8(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA3090);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC981E40();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9AF118();
  sub_1DCB892B8();
  sub_1DC9AF1B0();
  sub_1DCB88F18();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t sub_1DC9AD3D4()
{
  return sub_1DCB891F8();
}

unint64_t sub_1DC9AD46C(void *a1)
{
  sub_1DC87E988(&qword_1EAAA3078);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  unint64_t v4 = (unint64_t)sub_1DC881A8C(a1, a1[3]);
  sub_1DC9AF118();
  sub_1DC9AF88C();
  if (v1)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    sub_1DC9AF164();
    sub_1DC9AF844();
    uint64_t v5 = sub_1DC9AF7F4();
    v6(v5);
    unint64_t v4 = v8;
    sub_1DC8818D0((uint64_t)a1);
  }
  return v4;
}

uint64_t sub_1DC9AD580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9AD208(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC9AD5AC(uint64_t a1)
{
  unint64_t v2 = sub_1DC9AF118();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9AD5E8(uint64_t a1)
{
  unint64_t v2 = sub_1DC9AF118();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DC9AD624@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1DC9AD46C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9AD650(void *a1)
{
  return sub_1DC9AD2C8(a1);
}

uint64_t sub_1DC9AD66C()
{
  return sub_1DC9AD3D4();
}

uint64_t sub_1DC9AD674()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9AD708(unsigned __int8 *a1, char *a2)
{
  return sub_1DC9AD114(*a1, *a2);
}

void sub_1DC9AD714(char *a1@<X8>)
{
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7B0);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
  char v3 = sub_1DCB886A8();

  if (v3)
  {
    char v4 = 0;
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
    objc_msgSend(v5, sel_setComputeUnits_, 0);
    char v6 = sub_1DCB886A8();

    if (v6)
    {
      char v4 = 1;
    }
    else
    {
      id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
      objc_msgSend(v7, sel_setComputeUnits_, 3);
      char v8 = sub_1DCB886A8();

      if (v8) {
        char v4 = 2;
      }
      else {
        char v4 = 3;
      }
    }
  }
  *a1 = v4;
}

id sub_1DC9AD840(unsigned __int8 a1, void *a2)
{
  id v4 = a2;
  int v6 = a2;
  uint64_t v7 = sub_1DCB86A18();
  uint64_t v8 = sub_1DC8BADF0(v7);
  MEMORY[0x1F4188790](v8);
  sub_1DC909E14();
  if (v6 == 3) {
    char v9 = 0;
  }
  else {
    char v9 = (char)v4;
  }
  id v10 = sub_1DC9ABA28(v9);
  sub_1DC9AC2A0(a1, v2);
  if (v3)
  {
  }
  else
  {
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C798);
    id v11 = v10;
    id v4 = sub_1DC9ADAE8(v2, v11);
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1DCB86FE8();
    sub_1DC89F57C(v13, (uint64_t)qword_1EAAFF810);
    unint64_t v14 = sub_1DCB86FC8();
    os_log_type_t v15 = sub_1DCB88488();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = v21;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v17 = sub_1DCB87988();
      sub_1DC9F8920(v17, v18, &v22);
      sub_1DCB88778();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v19 = sub_1DCB87988();
      sub_1DC9F8920(v19, v20, &v22);
      sub_1DCB88778();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DC873000, v14, v15, "Sucessfuly created model from asset %s for execution on %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01A99C0](v21, -1, -1);
      MEMORY[0x1E01A99C0](v16, -1, -1);
    }
    else
    {
    }
  }
  return v4;
}

id sub_1DC9ADAE8(uint64_t a1, void *a2)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = (void *)sub_1DCB86948();
  v10[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v10);

  if (v5)
  {
    id v6 = v10[0];
  }
  else
  {
    id v7 = v10[0];
    sub_1DCB86898();

    swift_willThrow();
  }

  uint64_t v8 = sub_1DCB86A18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v5;
}

uint64_t sub_1DC9ADC08@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v6 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  sub_1DC909E14();
  uint64_t result = (uint64_t)sub_1DC9AD840(*a1, (void *)a1[1]);
  if (!v3)
  {
    uint64_t v11 = result;
    type metadata accessor for SNMLModelAdapter();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    sub_1DCB86BE8();
    uint64_t v13 = sub_1DCB86BA8();
    unint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87988();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    type metadata accessor for SNMLLockedModel();
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = sub_1DC9AEA08(v13, v15, v12, v16);
    type metadata accessor for AnySNMLModel();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v17;
    *(void *)(result + 24) = &off_1F37FEBC0;
    *a2 = result;
  }
  return result;
}

void sub_1DC9ADDA0()
{
  uint64_t v36 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v1 = v0;
  MEMORY[0x1F4188790](v2);
  sub_1DC8A22D0();
  uint64_t v35 = v4 - v3;
  uint64_t v5 = sub_1DCAA82B8();
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1DCA21AF4(v41, v5);
  uint64_t v37 = v41[0];
  int64_t v39 = v41[3];
  uint64_t v32 = v41[1];
  int64_t v33 = (unint64_t)(v41[2] + 64) >> 6;
  uint64_t v34 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  unint64_t v6 = v41[4];
  while (1)
  {
LABEL_2:
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v8 = v7 | (v39 << 6);
      goto LABEL_26;
    }
    int64_t v9 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v9 >= v33) {
      goto LABEL_50;
    }
    unint64_t v10 = *(void *)(v32 + 8 * v9);
    int64_t v11 = v39 + 1;
    if (!v10)
    {
      sub_1DC9AF8DC();
      if (v12 == v13) {
        goto LABEL_50;
      }
      sub_1DC9AF8D0();
      if (!v10)
      {
        sub_1DC9AF8DC();
        if (v12 == v13) {
          goto LABEL_50;
        }
        sub_1DC9AF8D0();
        if (!v10)
        {
          sub_1DC9AF8DC();
          if (v12 == v13) {
            goto LABEL_50;
          }
          sub_1DC9AF8D0();
          if (!v10)
          {
            sub_1DC9AF8DC();
            if (v12 == v13) {
              goto LABEL_50;
            }
            sub_1DC9AF8D0();
            if (!v10)
            {
              int64_t v11 = v14 + 5;
              if (v14 + 5 >= v33) {
                goto LABEL_50;
              }
              unint64_t v10 = *(void *)(v32 + 8 * v11);
              if (!v10)
              {
                int64_t v15 = v39 + 7;
                while (v15 < v33)
                {
                  unint64_t v10 = *(void *)(v32 + 8 * v15++);
                  if (v10)
                  {
                    int64_t v11 = v15 - 1;
                    goto LABEL_25;
                  }
                }
LABEL_50:
                swift_release();
                sub_1DCAE840C(v40);
                swift_release();
                return;
              }
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v39 = v11;
LABEL_26:
    char v38 = *(unsigned char *)(*(void *)(v37 + 48) + v8);
    uint64_t v16 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v8);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    swift_bridgeObjectRetain();
    sub_1DCB86928();
    uint64_t v19 = sub_1DCB868E8();
    uint64_t v21 = v20;
    (*v34)(v35, v36);
    uint64_t v22 = 0;
    while (1)
    {
      int v23 = byte_1F37E8E28[v22 + 32];
      if (byte_1F37E8E28[v22 + 32])
      {
        uint64_t v24 = v23 == 1 ? 0x636C65646F6D6C6DLL : 0x656C646E7562;
        unint64_t v25 = v23 == 1 ? 0xE800000000000000 : 0xE600000000000000;
      }
      else
      {
        unint64_t v25 = 0xE700000000000000;
        uint64_t v24 = 0x6C65646F6D6C6DLL;
      }
      if (v24 == v19 && v25 == v21) {
        break;
      }
      char v27 = sub_1DCB89018();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_43;
      }
      if (++v22 == 3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_2;
      }
    }
    swift_bridgeObjectRelease();
LABEL_43:
    swift_bridgeObjectRelease();
    if (v23 == 1)
    {
      uint64_t v28 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC897F0C();
        uint64_t v28 = v40;
      }
      unint64_t v30 = *(void *)(v28 + 16);
      unint64_t v29 = *(void *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1DC8AF114(v29);
        sub_1DC897F0C();
        uint64_t v28 = v40;
      }
      *(void *)(v28 + 16) = v30 + 1;
      unint64_t v31 = v28 + 24 * v30;
      *(unsigned char *)(v31 + 32) = v38;
      *(void *)(v31 + 40) = v18;
      *(void *)(v31 + 48) = v17;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  __break(1u);
}

uint64_t sub_1DC9AE138()
{
  uint64_t v24 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v1 = v0;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v23 - v6;
  sub_1DC9ADDA0();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1DC897F5C();
    int64_t v11 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v23 = v9;
    uint64_t v12 = v9 + 48;
    do
    {
      int v25 = *(unsigned __int8 *)(v12 - 16);
      swift_bridgeObjectRetain();
      sub_1DCB86928();
      sub_1DCB86958();
      uint64_t v13 = sub_1DCB86938();
      uint64_t v15 = v14;
      uint64_t v16 = *v11;
      uint64_t v17 = v24;
      (*v11)(v5, v24);
      v16(v7, v17);
      swift_bridgeObjectRelease();
      uint64_t v18 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DC897F5C();
        uint64_t v18 = v26;
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1DC8AF114(v19);
        sub_1DC897F5C();
        uint64_t v18 = v26;
      }
      *(void *)(v18 + 16) = v20 + 1;
      uint64_t v21 = v18 + 24 * v20;
      *(unsigned char *)(v21 + 32) = v25;
      v12 += 24;
      *(void *)(v21 + 40) = v13;
      *(void *)(v21 + 48) = v15;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v18;
}

uint64_t sub_1DC9AE340()
{
  uint64_t v1 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v2 = sub_1DC8BADF0(v1);
  MEMORY[0x1F4188790](v2);
  sub_1DC981E40();
  uint64_t v3 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC888120();
  uint64_t v66 = v7;
  MEMORY[0x1F4188790](v8);
  char v64 = (char *)&v60 - v9;
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA3050);
  uint64_t v11 = sub_1DC8BADF0(v10);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v60 - v15;
  uint64_t v17 = (uint64_t *)&unk_1EAAA6980;
  uint64_t v18 = sub_1DC87E988((uint64_t *)&unk_1EAAA6980);
  sub_1DC89D4E0();
  uint64_t v65 = v19;
  MEMORY[0x1F4188790](v20);
  sub_1DC888120();
  uint64_t v68 = v21;
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  uint64_t v63 = (uint64_t)&v60 - v24;
  int v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v61 = v5;
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v70 = v23;
  do
  {
    LODWORD(v71) = v25;
    char v29 = *((unsigned char *)&unk_1F37E8E50 + v26 + 32);
    if (v29) {
      unsigned __int8 v30 = 33;
    }
    else {
      unsigned __int8 v30 = 21;
    }
    sub_1DCAA83DC(v30, v0);
    if (v27)
    {
      uint64_t result = swift_unexpectedError();
      __break(1u);
      return result;
    }
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v0, 1, v3) == 1)
    {
      sub_1DC9AEC6C(v0, qword_1EAA9CBC0);
      uint64_t v31 = 1;
    }
    else
    {
      uint64_t v69 = v28;
      uint64_t v32 = *v62;
      uint64_t v67 = 0;
      int64_t v33 = v17;
      uint64_t v34 = v16;
      uint64_t v35 = v64;
      v32(v64, v0, v3);
      uint64_t v36 = &v14[*(int *)(v18 + 48)];
      *uint64_t v14 = v29;
      uint64_t v37 = v35;
      uint64_t v16 = v34;
      uint64_t v17 = v33;
      uint64_t v27 = v67;
      v32(v36, (uint64_t)v37, v3);
      uint64_t v28 = v69;
      uint64_t v31 = 0;
    }
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v14, v31, 1, v18);
    sub_1DC978E04((uint64_t)v14, (uint64_t)v16, &qword_1EAAA3050);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v16, 1, v18) == 1)
    {
      sub_1DC9AEC6C((uint64_t)v16, &qword_1EAAA3050);
    }
    else
    {
      uint64_t v38 = v63;
      sub_1DC978E04((uint64_t)v16, v63, v17);
      sub_1DC978E04(v38, v68, v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v28 = sub_1DCA7393C();
      }
      unint64_t v40 = *(void *)(v28 + 16);
      unint64_t v39 = *(void *)(v28 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1DC8AF114(v39);
        uint64_t v28 = sub_1DCA7393C();
      }
      *(void *)(v28 + 16) = v40 + 1;
      sub_1DC9AF8BC();
      sub_1DC978E04(v68, v28 + v41 + *(void *)(v42 + 72) * v40, v17);
      uint64_t v18 = v70;
    }
    int v25 = 1;
    uint64_t v26 = 1u;
  }
  while ((v71 & 1) == 0);
  uint64_t v43 = *(void *)(v28 + 16);
  if (v43)
  {
    uint64_t v71 = v3;
    uint64_t v72 = MEMORY[0x1E4FBC860];
    sub_1DC89868C();
    uint64_t v44 = v72;
    sub_1DC9AF8BC();
    uint64_t v46 = (char *)(v28 + v45);
    uint64_t v68 = *(void *)(v47 + 72);
    uint64_t v69 = v28;
    uint64_t v48 = (void (**)(uint64_t, uint64_t))(v61 + 8);
    do
    {
      char v49 = *v46;
      uint64_t v50 = v66;
      sub_1DCB86958();
      uint64_t v51 = sub_1DCB86938();
      uint64_t v53 = v52;
      (*v48)(v50, v71);
      uint64_t v72 = v44;
      unint64_t v55 = *(void *)(v44 + 16);
      unint64_t v54 = *(void *)(v44 + 24);
      if (v55 >= v54 >> 1)
      {
        sub_1DC8AF114(v54);
        sub_1DC89868C();
        uint64_t v44 = v72;
      }
      *(void *)(v44 + 16) = v55 + 1;
      uint64_t v56 = v44 + 24 * v55;
      *(unsigned char *)(v56 + 32) = v49;
      *(void *)(v56 + 40) = v51;
      *(void *)(v56 + 48) = v53;
      v46 += v68;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = MEMORY[0x1E4FBC860];
  }
  sub_1DC87E988((uint64_t *)&unk_1EAA9DC50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  *(unsigned char *)(inited + 32) = 1;
  *(void *)(inited + 40) = sub_1DCB87938();
  *(void *)(inited + 48) = v58;
  uint64_t v72 = v44;
  sub_1DCB18FFC();
  return v72;
}

uint64_t sub_1DC9AE868(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DC9AE340();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 48);
    while (1)
    {
      uint64_t v2 = *((unsigned __int8 *)v7 - 16);
      BOOL v8 = *(v7 - 1) == a1 && *v7 == a2;
      if (v8 || (sub_1DCB89018() & 1) != 0) {
        break;
      }
      v7 += 3;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    type metadata accessor for SNError();
    sub_1DC9AF8B0();
    unint64_t v9 = sub_1DC8CD9C0();
    sub_1DCA14B2C(v9, v10, v11, v12, v13, v14);
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1DC9AE958(uint64_t a1)
{
  type metadata accessor for SafeLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (_DWORD *)swift_slowAlloc();
  _DWORD *v4 = 0;
  *(void *)(v3 + 16) = v4;
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v3;
  return v1;
}

uint64_t sub_1DC9AE9B4(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

BOOL sub_1DC9AE9BC(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_1DC9AE9E8(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_1DC9AE9F8(uint64_t result)
{
  *v1 &= result;
  return result;
}

void *sub_1DC9AEA08(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  a4[4] = a3;
  a4[5] = &off_1F37FEC00;
  type metadata accessor for SafeLock();
  uint64_t v7 = swift_allocObject();
  swift_retain();
  BOOL v8 = (_DWORD *)swift_slowAlloc();
  *BOOL v8 = 0;
  *(void *)(v7 + 16) = v8;
  a4[6] = v7;
  a4[2] = a1;
  a4[3] = a2;
  uint64_t v9 = qword_1EAA9C658;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DCB86FE8();
  sub_1DC89F57C(v10, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DCB86FC8();
  os_log_type_t v12 = sub_1DCB88488();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(a1, a2, &v16);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v11, v12, "Locked Model created with id %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v14, -1, -1);
    MEMORY[0x1E01A99C0](v13, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
    swift_bridgeObjectRelease_n();
  }
  return a4;
}

unint64_t sub_1DC9AEC20()
{
  unint64_t result = qword_1EAAA3038;
  if (!qword_1EAAA3038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3038);
  }
  return result;
}

uint64_t sub_1DC9AEC6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1DC87E988(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for SNFeatureExtractorIdentifier()
{
}

void type metadata accessor for SNMLModelFactory.ModelConfiguration.SNMLModelComputeUnit()
{
}

uint64_t sub_1DC9AECE8(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 65282 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65282 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65283;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_1DC9AED74(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9AEE40);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for SNMLModelFactory.ModelCacheKey()
{
}

void type metadata accessor for SNMLModelFactory()
{
}

unsigned char *sub_1DC9AEE80(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9AEF4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for SNMLModelFactory.ModelConfiguration()
{
}

unint64_t sub_1DC9AEF84()
{
  unint64_t result = qword_1EAAA3058;
  if (!qword_1EAAA3058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3058);
  }
  return result;
}

unint64_t sub_1DC9AEFD4()
{
  unint64_t result = qword_1EAA9C8E0[0];
  if (!qword_1EAA9C8E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAA9C8E0);
  }
  return result;
}

unint64_t sub_1DC9AF024()
{
  unint64_t result = qword_1EAAA3060;
  if (!qword_1EAAA3060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3060);
  }
  return result;
}

unint64_t sub_1DC9AF074()
{
  unint64_t result = qword_1EAAA3068;
  if (!qword_1EAAA3068)
  {
    sub_1DC8863A8(&qword_1EAAA3070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3068);
  }
  return result;
}

unint64_t sub_1DC9AF0CC()
{
  unint64_t result = qword_1EAA9C760;
  if (!qword_1EAA9C760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9C760);
  }
  return result;
}

unint64_t sub_1DC9AF118()
{
  unint64_t result = qword_1EAAA3080;
  if (!qword_1EAAA3080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3080);
  }
  return result;
}

unint64_t sub_1DC9AF164()
{
  unint64_t result = qword_1EAAA3088;
  if (!qword_1EAAA3088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3088);
  }
  return result;
}

unint64_t sub_1DC9AF1B0()
{
  unint64_t result = qword_1EAAA3098;
  if (!qword_1EAAA3098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3098);
  }
  return result;
}

unint64_t sub_1DC9AF1FC()
{
  unint64_t result = qword_1EAAA30A0;
  if (!qword_1EAAA30A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30A0);
  }
  return result;
}

unint64_t sub_1DC9AF248()
{
  unint64_t result = qword_1EAAA30A8;
  if (!qword_1EAAA30A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30A8);
  }
  return result;
}

unint64_t sub_1DC9AF294()
{
  unint64_t result = qword_1EAAA30B8;
  if (!qword_1EAAA30B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30B8);
  }
  return result;
}

unint64_t sub_1DC9AF2E0()
{
  unint64_t result = qword_1EAAA30C0;
  if (!qword_1EAAA30C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30C0);
  }
  return result;
}

unint64_t sub_1DC9AF32C()
{
  unint64_t result = qword_1EAAA30D0;
  if (!qword_1EAAA30D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30D0);
  }
  return result;
}

unsigned char *_s13SoundAnalysis16SNMLModelFactoryV13ModelCacheKeyV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9AF444);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNMLModelFactory.ModelCacheKey.CodingKeys()
{
  return &type metadata for SNMLModelFactory.ModelCacheKey.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SNMLModelFactory.ModelConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC9AF518);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNMLModelFactory.ModelConfiguration.CodingKeys()
{
  return &type metadata for SNMLModelFactory.ModelConfiguration.CodingKeys;
}

unint64_t sub_1DC9AF554()
{
  unint64_t result = qword_1EAAA30D8;
  if (!qword_1EAAA30D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30D8);
  }
  return result;
}

unint64_t sub_1DC9AF5A4()
{
  unint64_t result = qword_1EAAA30E0;
  if (!qword_1EAAA30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30E0);
  }
  return result;
}

unint64_t sub_1DC9AF5F4()
{
  unint64_t result = qword_1EAAA30E8;
  if (!qword_1EAAA30E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30E8);
  }
  return result;
}

unint64_t sub_1DC9AF644()
{
  unint64_t result = qword_1EAAA30F0;
  if (!qword_1EAAA30F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30F0);
  }
  return result;
}

unint64_t sub_1DC9AF694()
{
  unint64_t result = qword_1EAAA30F8;
  if (!qword_1EAAA30F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA30F8);
  }
  return result;
}

unint64_t sub_1DC9AF6E4()
{
  unint64_t result = qword_1EAAA3100[0];
  if (!qword_1EAAA3100[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA3100);
  }
  return result;
}

uint64_t sub_1DC9AF73C()
{
  return sub_1DCB89018();
}

uint64_t sub_1DC9AF764()
{
  return sub_1DCB89018();
}

uint64_t sub_1DC9AF78C()
{
  return sub_1DCB87938();
}

uint64_t sub_1DC9AF7A8()
{
  return sub_1DCB87938();
}

uint64_t sub_1DC9AF7C4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1DC9AF7DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9AF7F4()
{
  return v0;
}

unint64_t sub_1DC9AF80C()
{
  return 0xD000000000000017;
}

uint64_t sub_1DC9AF82C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1DC9AF844()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC9AF864()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9AF88C()
{
  return sub_1DCB89298();
}

uint64_t sub_1DC9AF8E8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = sub_1DC886810();
  *(void *)(v6 + 16) = sub_1DC9B0318;
  *(void *)(v6 + 24) = v5;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(v2 + 24);
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v9 = 1;
    sub_1DC8B9C40(a1, a2);
    swift_willThrow();
    *(void *)(v2 + 16) = v7;
    *(void *)(v2 + 24) = v8;
    swift_endAccess();
    return swift_release();
  }
  else
  {
    uint64_t v11 = sub_1DC886810();
    *(void *)(v11 + 16) = sub_1DC9B0320;
    *(void *)(v11 + 24) = v6;
    *(void *)(v2 + 16) = sub_1DC9B051C;
    *(void *)(v2 + 24) = v11;
    swift_endAccess();
    return sub_1DC8B9C40(a1, a2);
  }
}

uint64_t sub_1DC9AFA20()
{
  return sub_1DC9AFF34();
}

uint64_t sub_1DC9AFA38@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void *sub_1DC9AFA6C(void *(*a1)(uint64_t *__return_ptr))
{
  uint64_t result = a1(&v3);
  if (!v1) {
    return (void *)v3;
  }
  return result;
}

uint64_t sub_1DC9AFAAC()
{
  type metadata accessor for XPCDataEncoder.UnkeyedContainer();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v2 = sub_1DC886810();
  *(void *)(v2 + 16) = sub_1DC9B0504;
  *(void *)(v2 + 24) = v1;
  uint64_t v3 = sub_1DC886810();
  *(void *)(v3 + 16) = sub_1DC9B0360;
  *(void *)(v3 + 24) = v2;
  sub_1DC8868AC();
  if (*(void *)(v0 + 16))
  {
    uint64_t v8 = *(void *)(v0 + 24);
    uint64_t v9 = *(void *)(v0 + 16);
    sub_1DC884E74();
    uint64_t v10 = swift_allocError();
    sub_1DC8868CC(v10, v11);
    swift_willThrow();
    *(void *)(v0 + 16) = v9;
    *(void *)(v0 + 24) = v8;
    swift_endAccess();
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v4 = sub_1DC886810();
    *(void *)(v4 + 16) = sub_1DC9B02A4;
    *(void *)(v4 + 24) = v3;
    *(void *)(v0 + 16) = sub_1DC9B051C;
    *(void *)(v0 + 24) = v4;
    swift_endAccess();
    uint64_t v5 = sub_1DC886810();
    *(void *)(v5 + 16) = sub_1DC9B03BC;
    *(void *)(v5 + 24) = v1;
    uint64_t v6 = *(void *)(v0 + 16);
    *(void *)(v0 + 16) = sub_1DC9B0534;
    *(void *)(v0 + 24) = v5;
    swift_retain_n();
    sub_1DC884EC0(v6);
    return v1;
  }
  return result;
}

uint64_t sub_1DC9AFC50()
{
  void (*v7)(long long *__return_ptr, uint64_t);
  uint64_t v8;
  long long v9;
  unint64_t v10;
  long long v12;
  long long v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DC8986DC();
    uint64_t v4 = v16;
    uint64_t v5 = (uint64_t *)(v2 + 40);
    while (1)
    {
      uint64_t v7 = (void (*)(long long *__return_ptr, uint64_t))*(v5 - 1);
      uint64_t v6 = *v5;
      uint64_t v8 = swift_retain();
      v7(&v13, v8);
      if (v1) {
        break;
      }
      swift_release();
      uint64_t v9 = v13;
      uint64_t v16 = v4;
      uint64_t v10 = *(void *)(v4 + 16);
      if (v10 >= *(void *)(v4 + 24) >> 1)
      {
        os_log_type_t v12 = v13;
        sub_1DC8986DC();
        uint64_t v9 = v12;
        uint64_t v4 = v16;
      }
      *(void *)(v4 + 16) = v10 + 1;
      *(_OWORD *)(v4 + 16 * v10 + 32) = v9;
      v5 += 2;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
LABEL_9:
    uint64_t v14 = sub_1DC87E988(&qword_1EAAA3188);
    uint64_t v15 = sub_1DC9B0410(&qword_1EAAA3190, &qword_1EAAA3188, (void (*)(void))sub_1DC9B03D4);
    *(void *)&uint64_t v13 = v4;
    uint64_t v6 = sub_1DCB2912C(&v13);
    sub_1DC8818D0((uint64_t)&v13);
  }
  return v6;
}

uint64_t sub_1DC9AFE10()
{
  type metadata accessor for XPCDataEncoder.SingleValueContainer();
  uint64_t v1 = sub_1DC886810();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  uint64_t v2 = sub_1DC886810();
  *(void *)(v2 + 16) = sub_1DC9B04EC;
  *(void *)(v2 + 24) = v1;
  sub_1DC8868AC();
  if (*(void *)(v0 + 16))
  {
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v6 = *(void *)(v0 + 16);
    sub_1DC884E74();
    uint64_t v7 = swift_allocError();
    sub_1DC8868CC(v7, v8);
    swift_willThrow();
    *(void *)(v0 + 16) = v6;
    *(void *)(v0 + 24) = v5;
    swift_endAccess();
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v3 = sub_1DC886810();
    *(void *)(v3 + 16) = sub_1DC9B02A4;
    *(void *)(v3 + 24) = v2;
    *(void *)(v0 + 16) = sub_1DC9B02BC;
    *(void *)(v0 + 24) = v3;
    swift_endAccess();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1DC9AFF34()
{
  swift_beginAccess();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = swift_retain();
  uint64_t v5 = v3;
  uint64_t v6 = v2(v4);
  if (!v1) {
    uint64_t v5 = v6;
  }
  sub_1DC884EC0((uint64_t)v2);
  return v5;
}

uint64_t sub_1DC9AFFE8()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC9B0020(void *a1)
{
  uint64_t v3 = v1;
  type metadata accessor for XPCDataEncoder();
  uint64_t v5 = sub_1DC886810();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1DC881A8C(a1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v6, v7);
  if (v2) {
    return swift_release();
  }
  uint64_t v8 = sub_1DC886810();
  *(void *)(v8 + 16) = sub_1DC9AFA20;
  *(void *)(v8 + 24) = v5;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(v3 + 24);
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v11 = 1;
    swift_retain();
    swift_willThrow();
    *(void *)(v3 + 16) = v9;
    *(void *)(v3 + 24) = v10;
    swift_endAccess();
    swift_release();
    return swift_release();
  }
  uint64_t v13 = sub_1DC886810();
  *(void *)(v13 + 16) = sub_1DC9B02A4;
  *(void *)(v13 + 24) = v8;
  *(void *)(v3 + 16) = sub_1DC9B051C;
  *(void *)(v3 + 24) = v13;
  return swift_endAccess();
}

uint64_t sub_1DC9B018C(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t sub_1DC9B01C0()
{
  sub_1DC884EC0(*(void *)(v0 + 16));
  sub_1DC8BADE0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCDataEncoder()
{
  return self;
}

uint64_t type metadata accessor for XPCDataEncoder.KeyedContainer()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for XPCDataEncoder.UnkeyedContainer()
{
  return self;
}

uint64_t type metadata accessor for XPCDataEncoder.SingleValueContainer()
{
  return self;
}

uint64_t sub_1DC9B0274()
{
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC9B02A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9B0388(a1);
}

void *sub_1DC9B02BC()
{
  return sub_1DC9AFA6C(*(void *(**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1DC9B02D8()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 != 15) {
    sub_1DC881920(*(void *)(v0 + 16), v1);
  }
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC9B0318()
{
  return sub_1DC9B018C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DC9B0320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DC9B0360()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DC9B0388@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_1DC9B03BC()
{
  return sub_1DC9AFC50();
}

uint64_t sub_1DC9B03D4()
{
  return sub_1DC9B0410(&qword_1EAAA3198, (uint64_t *)&unk_1EAAA2640, (void (*)(void))sub_1DC9B047C);
}

uint64_t sub_1DC9B0410(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC9B047C()
{
  unint64_t result = qword_1EAAA31A0;
  if (!qword_1EAAA31A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA31A0);
  }
  return result;
}

uint64_t sub_1DC9B04EC()
{
  return sub_1DC9AFA20();
}

uint64_t sub_1DC9B0504()
{
  return sub_1DC9B03BC();
}

void *sub_1DC9B051C()
{
  return sub_1DC9B02BC();
}

uint64_t sub_1DC9B0534()
{
  return sub_1DC9B0360();
}

id sub_1DC9B054C(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *(void *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = &v3[OBJC_IVAR___SNSpeechUtteranceResult_impl];
  *(void *)uint64_t v7 = *(void *)a1;
  *((void *)v7 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v7 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v7 + 4) = *(void *)(a1 + 32);
  *((void *)v7 + 5) = v4;
  v7[48] = v5;
  *((void *)v7 + 7) = v6;
  v9.receiver = v3;
  v9.super_class = v1;
  return objc_msgSendSuper2(&v9, sel_init);
}

double SNSpeechUtteranceResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

void SNSpeechUtteranceResult.confidence.setter(double a1)
{
  *(double *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 56) = a1;
}

uint64_t SNSpeechUtteranceResult.detected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48) = result;
  return result;
}

double SNSpeechUtteranceResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double (*SNSpeechUtteranceResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNSpeechUtteranceResult.timeRange.getter((uint64_t)v3);
  return sub_1DC9B0780;
}

double sub_1DC9B0780(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNSpeechUtteranceResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

uint64_t SNSpeechUtteranceResult.detected.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48);
}

uint64_t (*SNSpeechUtteranceResult.detected.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR___SNSpeechUtteranceResult_impl;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + v2 + 48);
  return sub_1DC9B0858;
}

uint64_t sub_1DC9B0858(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(void *)(result + 8) + 48) = *(unsigned char *)(result + 16);
  return result;
}

double SNSpeechUtteranceResult.confidence.getter()
{
  return *(double *)(v0 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 56);
}

double (*SNSpeechUtteranceResult.confidence.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___SNSpeechUtteranceResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 56);
  return sub_1DC9B0900;
}

double sub_1DC9B0900(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + *(void *)(a1 + 16) + 56) = *(void *)a1;
  return result;
}

id sub_1DC9B0914()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x1E4F1FA20];
  uint64_t v3 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v4 = &v0[OBJC_IVAR___SNSpeechUtteranceResult_impl];
  *(void *)uint64_t v4 = *MEMORY[0x1E4F1FA20];
  *((void *)v4 + 1) = *(void *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((void *)v4 + 4) = *(void *)(v2 + 32);
  *((void *)v4 + 5) = v3;
  v4[48] = 0;
  *((void *)v4 + 7) = 0;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id SNSpeechUtteranceResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1DC9B131C(OBJC_IVAR___SNSpeechUtteranceResult_impl);
  id result = sub_1DC9B054C((uint64_t)&v4);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNSpeechUtteranceResult.hash.getter()
{
  return sub_1DC8D1B20();
}

BOOL SNSpeechUtteranceResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v24);
  if (!v25) {
    return 0;
  }
  sub_1DC87E9CC(&v24, v23);
  sub_1DC87E9DC((uint64_t)v23, (uint64_t)v19);
  if (swift_dynamicCast())
  {
    uint64_t v3 = (void *)v15[0];
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 40);
    int v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48);
    double v6 = *(double *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 56);
    uint64_t v7 = v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl;
    uint64_t v8 = *(void *)(v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl);
    uint64_t v9 = *(void *)(v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl + 40);
    int v10 = *(unsigned __int8 *)(v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48);
    double v11 = *(double *)(v15[0] + OBJC_IVAR___SNSpeechUtteranceResult_impl + 56);
    v19[0] = *(void *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl);
    v19[1] = *(void *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 8);
    long long v20 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 16);
    uint64_t v21 = *(void *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 32);
    uint64_t v22 = v4;
    v15[0] = v8;
    v15[1] = *(void *)(v7 + 8);
    long long v16 = *(_OWORD *)(v7 + 16);
    uint64_t v17 = *(void *)(v7 + 32);
    uint64_t v18 = v9;
    BOOL v12 = static TimeRange.== infix(_:_:)((uint64_t)v19, (uint64_t)v15);

    BOOL v13 = 0;
    if (v12 && ((v5 ^ v10) & 1) == 0) {
      BOOL v13 = v6 == v11;
    }
  }
  else
  {
    BOOL v13 = 0;
  }
  sub_1DC8818D0((uint64_t)v23);
  return v13;
}

id SNSpeechUtteranceResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNSpeechUtteranceResult.init(coder:)(a1);
}

id SNSpeechUtteranceResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87D91C();
  swift_getObjectType();

  id v4 = sub_1DC9B054C((uint64_t)&v6);
  swift_deallocPartialClassInstance();
  return v4;
}

Swift::Void __swiftcall SNSpeechUtteranceResult.encode(with:)(NSCoder with)
{
  long long v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 16);
  v4[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl);
  v4[1] = v2;
  long long v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 48);
  v4[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNSpeechUtteranceResult_impl + 32);
  v4[3] = v3;
  sub_1DC87B92C((uint64_t)v4, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNSpeechUtteranceResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSpeechUtteranceResult.description.getter()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_1DCB88A98();
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87FB8();
  sub_1DCB87A18();
  SNSpeechUtteranceResult.timeRange.getter((uint64_t)&v15);
  uint64_t v3 = v15;
  uint64_t v4 = v17;
  uint64_t v5 = v18;
  uint64_t v6 = v20;
  uint64_t v7 = self;
  v11[0] = v3;
  v11[1] = v16;
  void v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  id v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  id v9 = objc_msgSend(v8, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v13;
}

id SNSpeechUtteranceResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DC9B11EC@<D0>(uint64_t a1@<X8>)
{
  return SNSpeechUtteranceResult.timeRange.getter(a1);
}

double sub_1DC9B1210(uint64_t a1)
{
  return SNSpeechUtteranceResult.timeRange.setter(a1);
}

uint64_t sub_1DC9B1234@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SNSpeechUtteranceResult.detected.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1DC9B1264(unsigned __int8 *a1)
{
  return SNSpeechUtteranceResult.detected.setter(*a1);
}

void sub_1DC9B128C(double *a1@<X8>)
{
  *a1 = SNSpeechUtteranceResult.confidence.getter();
}

void sub_1DC9B12B8(double *a1)
{
}

uint64_t type metadata accessor for SNSpeechUtteranceResult()
{
  return self;
}

uint64_t method lookup function for SNSpeechUtteranceResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNSpeechUtteranceResult);
}

double sub_1DC9B131C@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1 + 56);
}

uint64_t sub_1DC9B135C(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    type metadata accessor for SNDSPItemInfo();
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      uint64_t v4 = swift_bridgeObjectRetain();
      id v5 = sub_1DC9B1CEC(v4);
      uint64_t v6 = swift_bridgeObjectRelease();
      if (v5)
      {
        MEMORY[0x1E01A6BF0](v6);
        if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DCB87CB8();
        }
        sub_1DCB87D28();
        sub_1DCB87C68();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = v8;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DC9B1474(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis18SNDSPConfiguration_dspItems);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DCB88CC8();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_37:
    uint64_t v4 = 0;
LABEL_38:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_37;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    unint64_t v6 = v1 & 0xC000000000000001;
    while (1)
    {
      if (v6) {
        id v7 = (id)MEMORY[0x1E01A7AE0](v5, v1);
      }
      else {
        id v7 = *(id *)(v1 + 8 * v5 + 32);
      }
      id v8 = v7;
      type metadata accessor for SNDSPGraphInfo();
      uint64_t v9 = swift_dynamicCastClass();
      if (v9)
      {
        uint64_t v10 = v9;
        id v11 = v8;
        id v12 = sub_1DC9B1A24(v10);

        uint64_t v4 = v12;
      }
      else
      {
        if (!v4) {
          goto LABEL_17;
        }
        type metadata accessor for SNAUStripInfo();
        uint64_t v13 = swift_dynamicCastClass();
        if (v13)
        {
          uint64_t v14 = v13;
          id v8 = v8;
          id v15 = v4;
          if ((sub_1DC9B3340(v14, (uint64_t)v15) & 1) == 0)
          {
            if (qword_1EAA9C658 != -1) {
              swift_once();
            }
            uint64_t v20 = sub_1DCB86FE8();
            sub_1DC89F57C(v20, (uint64_t)qword_1EAAFF810);
            id v21 = v8;
            id v22 = v15;
            id v23 = v21;
            id v24 = v22;
            uint64_t v25 = sub_1DCB86FC8();
            os_log_type_t v26 = sub_1DCB88468();
            if (os_log_type_enabled(v25, v26))
            {
              uint64_t v27 = swift_slowAlloc();
              uint64_t v47 = swift_slowAlloc();
              *(_DWORD *)uint64_t v27 = 136315394;
              os_log_type_t v45 = v26;
              if (*(void *)(v14 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path + 8))
              {
                uint64_t v28 = *(void *)(v14 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path);
                unint64_t v29 = *(void *)(v14 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path + 8);
              }
              else
              {
                uint64_t v28 = 0x6E776F6E6B6E753CLL;
                unint64_t v29 = 0xE90000000000003ELL;
              }
              swift_bridgeObjectRetain();
              *(void *)(v27 + 4) = sub_1DC9F8920(v28, v29, &v47);

              swift_bridgeObjectRelease();
              *(_WORD *)(v27 + 12) = 2080;
              id v37 = sub_1DCB609C8((uint64_t)v24);
              uint64_t v38 = sub_1DCB87938();
              unint64_t v40 = v39;

              *(void *)(v27 + 14) = sub_1DC9F8920(v38, v40, &v47);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1DC873000, v25, v45, "Applying AUStrip %s to graph %s failed", (uint8_t *)v27, 0x16u);
              swift_arrayDestroy();
              sub_1DC8E7728();
              sub_1DC8E7728();

LABEL_35:
              uint64_t v4 = 0;
              unint64_t v6 = v1 & 0xC000000000000001;
              goto LABEL_18;
            }
LABEL_30:

            uint64_t v4 = 0;
            goto LABEL_18;
          }

LABEL_17:
          goto LABEL_18;
        }
        type metadata accessor for SNPropertyStripInfo();
        uint64_t v16 = swift_dynamicCastClass();
        if (!v16) {
          goto LABEL_17;
        }
        uint64_t v17 = v16;
        id v18 = v8;
        id v19 = v4;
        if ((sub_1DC9B3534(v17, (uint64_t)v19) & 1) == 0)
        {
          if (qword_1EAA9C658 != -1) {
            swift_once();
          }
          uint64_t v30 = sub_1DCB86FE8();
          sub_1DC89F57C(v30, (uint64_t)qword_1EAAFF810);
          id v31 = v18;
          id v32 = v19;
          id v23 = v31;
          id v24 = v32;
          uint64_t v25 = sub_1DCB86FC8();
          os_log_type_t v33 = sub_1DCB88468();
          if (os_log_type_enabled(v25, v33))
          {
            uint64_t v34 = swift_slowAlloc();
            uint64_t v47 = swift_slowAlloc();
            *(_DWORD *)uint64_t v34 = 136315394;
            os_log_type_t v46 = v33;
            if (*(void *)(v17 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path + 8))
            {
              uint64_t v35 = *(void *)(v17 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path);
              unint64_t v36 = *(void *)(v17 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path + 8);
            }
            else
            {
              uint64_t v35 = 0x6E776F6E6B6E753CLL;
              unint64_t v36 = 0xE90000000000003ELL;
            }
            swift_bridgeObjectRetain();
            *(void *)(v34 + 4) = sub_1DC9F8920(v35, v36, &v47);

            swift_bridgeObjectRelease();
            *(_WORD *)(v34 + 12) = 2080;
            id v41 = sub_1DCB609C8((uint64_t)v24);
            uint64_t v42 = sub_1DCB87938();
            unint64_t v44 = v43;

            *(void *)(v34 + 14) = sub_1DC9F8920(v42, v44, &v47);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DC873000, v25, v46, "Applying PropertyStrip %s to graph %s failed", (uint8_t *)v34, 0x16u);
            swift_arrayDestroy();
            sub_1DC8E7728();
            sub_1DC8E7728();

            goto LABEL_35;
          }
          goto LABEL_30;
        }
      }
LABEL_18:
      if (v2 == ++v5) {
        goto LABEL_38;
      }
    }
  }
  __break(1u);
  return result;
}

id sub_1DC9B1A24(uint64_t a1)
{
  if (*(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_text + 8))
  {
    uint64_t v2 = (void *)sub_1DCB87908();
    if (!*(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions))
    {
      sub_1DCB877D8();
      sub_1DC9B3A64();
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_1DCB87788();
    swift_bridgeObjectRelease();
    self;
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_1DCB87C08();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1DC9B3A50();
    id v9 = sub_1DCB6F82C(v5, v6, v7, v8);
LABEL_16:
    id v14 = v9;

    return v14;
  }
  if (*(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_path + 8))
  {
    uint64_t v2 = (void *)sub_1DCB87908();
    if (!*(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions))
    {
      sub_1DCB877D8();
      sub_1DC9B3A64();
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_1DCB87788();
    swift_bridgeObjectRelease();
    self;
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_1DCB87C08();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1DC9B3A50();
    id v9 = sub_1DCB6E8DC(v15, v16, v17, v18);
    goto LABEL_16;
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DCB86FE8();
  sub_1DC89F57C(v10, (uint64_t)qword_1EAAFF810);
  id v11 = sub_1DCB86FC8();
  os_log_type_t v12 = sub_1DCB88468();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1DC873000, v11, v12, "DSPGraphInfo doesn't specify either text or path", v13, 2u);
    sub_1DC8E7728();
  }

  return 0;
}

id sub_1DC9B1CEC(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_1DC9637DC(1701869908, 0xE400000000000000);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1DC87E9DC(*(void *)(a1 + 56) + 32 * v2, (uint64_t)v14);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  BOOL v4 = v12 == 0x6870617247505344 && v13 == 0xE800000000000000;
  if (v4 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    id v5 = objc_allocWithZone((Class)type metadata accessor for SNDSPGraphInfo());
    sub_1DC9B3AB8();
    swift_bridgeObjectRetain();
    sub_1DC9B39A0();
    return sub_1DC9B1F8C();
  }
  BOOL v7 = v12 == 0x70697274535541 && v13 == 0xE700000000000000;
  if (v7 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone((Class)type metadata accessor for SNAUStripInfo());
    sub_1DC9B3AB8();
    swift_bridgeObjectRetain();
    sub_1DC9B39A0();
    return sub_1DC9B2680();
  }
  if (v12 == 0x79747265706F7250 && v13 == 0xED00007069727453)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  char v10 = sub_1DCB89018();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_24:
    id v11 = objc_allocWithZone((Class)type metadata accessor for SNPropertyStripInfo());
    sub_1DC9B3AB8();
    swift_bridgeObjectRetain();
    sub_1DC9B39A0();
    return sub_1DC9B2BCC();
  }
  return 0;
}

id sub_1DC9B1F50()
{
  return sub_1DC9B3858(type metadata accessor for SNDSPItemInfo);
}

uint64_t type metadata accessor for SNDSPItemInfo()
{
  return self;
}

id sub_1DC9B1F8C()
{
  unint64_t v1 = (char *)sub_1DC9B39FC();
  sub_1DC9B39B4(&v22);
  unint64_t v2 = (void *)MEMORY[0x1E4FBC840];
  if (v23)
  {
    int v3 = sub_1DC9B3970();
    if (v3) {
      uint64_t v4 = v19;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v3) {
      uint64_t v5 = v20;
    }
    else {
      uint64_t v5 = 0;
    }
  }
  else
  {
    sub_1DC881978((uint64_t)&v22);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  sub_1DC96116C(1954047316, 0xE400000000000000, v0, &v22);
  if (v23)
  {
    int v6 = sub_1DC9B3970();
    uint64_t v7 = v19;
    if (!v6) {
      uint64_t v7 = 0;
    }
    uint64_t v18 = v7;
    if (v6) {
      uint64_t v8 = v20;
    }
    else {
      uint64_t v8 = 0;
    }
  }
  else
  {
    sub_1DC881978((uint64_t)&v22);
    uint64_t v18 = 0;
    uint64_t v8 = 0;
  }
  sub_1DC96116C(0x506564756C636E49, 0xEC00000073687461, v0, &v22);
  if (v23)
  {
    sub_1DC87E988(&qword_1EAA9E7F0);
    if (sub_1DC9B3970()) {
      uint64_t v9 = v19;
    }
    else {
      uint64_t v9 = 0;
    }
  }
  else
  {
    sub_1DC881978((uint64_t)&v22);
    uint64_t v9 = 0;
  }
  sub_1DC96116C(0x7574697473627553, 0xED0000736E6F6974, v0, &v22);
  swift_bridgeObjectRelease();
  if (v23)
  {
    sub_1DC87E988((uint64_t *)&unk_1EAA9CB70);
    if (sub_1DC9B3970()) {
      uint64_t v10 = v19;
    }
    else {
      uint64_t v10 = 0;
    }
    if (v5) {
      goto LABEL_26;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
    goto LABEL_29;
  }
  sub_1DC881978((uint64_t)&v22);
  uint64_t v10 = 0;
  if (!v5) {
    goto LABEL_28;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  sub_1DCB87908();
  id v11 = (void *)sub_1DC9B3A18();
  id v12 = objc_msgSend(v2, sel_stringByAppendingPathComponent_, v11);

  uint64_t v4 = sub_1DCB87938();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

LABEL_29:
  uint64_t v15 = (uint64_t *)&v1[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_path];
  *uint64_t v15 = v4;
  v15[1] = v14;
  uint64_t v16 = &v1[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_text];
  *(void *)uint64_t v16 = v18;
  *((void *)v16 + 1) = v8;
  *(void *)&v1[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_includePaths] = v9;
  *(void *)&v1[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions] = v10;

  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for SNDSPGraphInfo();
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t sub_1DC9B2218(uint64_t a1)
{
  sub_1DC87E920(a1, (uint64_t)v22);
  if (!v23)
  {
    sub_1DC881978((uint64_t)v22);
    goto LABEL_34;
  }
  type metadata accessor for SNDSPGraphInfo();
  if ((sub_1DC9B3A34() & 1) == 0)
  {
LABEL_34:
    char v8 = 0;
    return v8 & 1;
  }
  if (v21 == v1)
  {
  }
  else
  {
    sub_1DC9B3A84();
    if (v4)
    {
      if (!v2) {
        goto LABEL_33;
      }
      sub_1DC9B3990(v3);
      BOOL v7 = v7 && v5 == v6;
      if (!v7 && (sub_1DCB89018() & 1) == 0) {
        goto LABEL_33;
      }
    }
    else if (v2)
    {
      goto LABEL_33;
    }
    sub_1DC9B3A84();
    if (v11)
    {
      if (!v9) {
        goto LABEL_33;
      }
      sub_1DC9B3990(v10);
      BOOL v14 = v7 && v12 == v13;
      if (!v14 && (sub_1DCB89018() & 1) == 0) {
        goto LABEL_33;
      }
    }
    else if (v9)
    {
      goto LABEL_33;
    }
    uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_includePaths];
    uint64_t v16 = *(void **)&v21[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_includePaths];
    if (v15)
    {
      if (!v16 || (sub_1DC8DCAE8(v15, v16) & 1) == 0) {
        goto LABEL_33;
      }
    }
    else if (v16)
    {
      goto LABEL_33;
    }
    uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions];
    uint64_t v18 = *(void *)&v21[OBJC_IVAR____TtC13SoundAnalysis14SNDSPGraphInfo_substitutions];
    if (v17)
    {
      if (v18)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1DC91BCA8(v17, v18);
        char v8 = v19;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();

        return v8 & 1;
      }
LABEL_33:

      goto LABEL_34;
    }
    swift_bridgeObjectRetain();

    if (v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  char v8 = 1;
  return v8 & 1;
}

uint64_t sub_1DC9B23F0()
{
  sub_1DC87E988((uint64_t *)&unk_1EAAA4140);
  uint64_t v0 = sub_1DCB88728();
  uint64_t v1 = sub_1DCB88728() ^ v0;
  sub_1DC87E988(&qword_1EAAA3208);
  sub_1DC9B38F4(&qword_1EAAA3210, &qword_1EAA9E7F0);
  uint64_t v2 = sub_1DCB88728();
  sub_1DC87E988(&qword_1EAAA3218);
  sub_1DC9B38F4(&qword_1EAAA3220, (uint64_t *)&unk_1EAA9CB70);
  return v1 ^ v2 ^ sub_1DCB88728();
}

void sub_1DC9B2540()
{
}

uint64_t sub_1DC9B2578()
{
  sub_1DC9B3AD0();
  sub_1DC9B3AD0();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_1DC9B25D0()
{
  return sub_1DC9B3858(type metadata accessor for SNDSPGraphInfo);
}

uint64_t type metadata accessor for SNDSPGraphInfo()
{
  return self;
}

id sub_1DC9B2680()
{
  uint64_t v0 = (char *)sub_1DC9B39FC();
  sub_1DC9B39B4(&v23);
  uint64_t v1 = (void *)MEMORY[0x1E4FBC840];
  if (v24)
  {
    uint64_t v2 = sub_1DC9B3950();
    if (v2) {
      uint64_t v10 = v19;
    }
    else {
      uint64_t v10 = 0;
    }
    if (v2) {
      uint64_t v11 = v21;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v2 = sub_1DC881978((uint64_t)&v23);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  sub_1DC9B39D4(v2, v3, v4, v5, v6, v7, v8, v9, v19, v21, (uint64_t)v22.receiver, (uint64_t)v22.super_class, v23);
  swift_bridgeObjectRelease();
  if (v24)
  {
    sub_1DC87E988(&qword_1EAA9E7F8);
    if (sub_1DC9B3950()) {
      uint64_t v12 = v20;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v11) {
      goto LABEL_14;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    goto LABEL_17;
  }
  sub_1DC881978((uint64_t)&v23);
  uint64_t v12 = 0;
  if (!v11) {
    goto LABEL_16;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  sub_1DCB87908();
  uint64_t v13 = (void *)sub_1DC9B3A18();
  id v14 = objc_msgSend(v1, sel_stringByAppendingPathComponent_, v13);

  uint64_t v10 = sub_1DCB87938();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

LABEL_17:
  uint64_t v17 = (uint64_t *)&v0[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path];
  *uint64_t v17 = v10;
  v17[1] = v16;
  *(void *)&v0[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value] = v12;

  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for SNAUStripInfo();
  return objc_msgSendSuper2(&v22, sel_init);
}

uint64_t sub_1DC9B2808(uint64_t a1)
{
  sub_1DC87E920(a1, (uint64_t)v15);
  if (!v16)
  {
    sub_1DC881978((uint64_t)v15);
    goto LABEL_20;
  }
  type metadata accessor for SNAUStripInfo();
  if ((sub_1DC9B3A34() & 1) == 0)
  {
LABEL_20:
    char v9 = 0;
    return v9 & 1;
  }
  if (v14 != v1)
  {
    sub_1DC9B3A70();
    if (v4)
    {
      if (v2)
      {
        sub_1DC9B3990(v3);
        BOOL v7 = v7 && v5 == v6;
        if (v7 || (sub_1DCB89018() & 1) != 0) {
          goto LABEL_11;
        }
      }
    }
    else if (!v2)
    {
LABEL_11:
      if (*(void *)&v1[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value])
      {
        uint64_t v8 = (void *)sub_1DCB87788();
        if (!*(void *)&v14[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value])
        {
          if (!v8) {
            goto LABEL_28;
          }
          goto LABEL_27;
        }
      }
      else
      {
        if (!*(void *)&v14[OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value])
        {
LABEL_28:

          goto LABEL_17;
        }
        uint64_t v8 = 0;
      }
      uint64_t v11 = sub_1DCB87788();
      uint64_t v12 = (void *)v11;
      if (v8)
      {
        if (v11)
        {
          sub_1DC9B38B4();
          id v13 = v8;
          char v9 = sub_1DCB886A8();

          return v9 & 1;
        }
LABEL_27:

        goto LABEL_20;
      }

      if (!v12) {
        goto LABEL_17;
      }

      goto LABEL_20;
    }

    goto LABEL_20;
  }

LABEL_17:
  char v9 = 1;
  return v9 & 1;
}

unint64_t sub_1DC9B29DC()
{
  long long v5 = *(_OWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path);
  sub_1DC87E988((uint64_t *)&unk_1EAAA4140);
  uint64_t v1 = sub_1DCB88728();
  if (!*(void *)(v0 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value)) {
    sub_1DCB877D8();
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  unint64_t v3 = (unint64_t)objc_msgSend(v2, sel_hash, v5);

  return v3 ^ v1;
}

void sub_1DC9B2ACC()
{
}

uint64_t sub_1DC9B2B04()
{
  sub_1DC9B3AD0();

  return swift_bridgeObjectRelease();
}

id sub_1DC9B2B40()
{
  return sub_1DC9B3858(type metadata accessor for SNAUStripInfo);
}

uint64_t type metadata accessor for SNAUStripInfo()
{
  return self;
}

id sub_1DC9B2BCC()
{
  uint64_t v2 = (char *)sub_1DC9B39FC();
  sub_1DC9B39B4(&v26);
  unint64_t v3 = (void *)MEMORY[0x1E4FBC840];
  if (v27)
  {
    uint64_t v4 = sub_1DC9B3950();
    if (v4) {
      uint64_t v12 = v22;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v4) {
      uint64_t v13 = v24;
    }
    else {
      uint64_t v13 = 0;
    }
  }
  else
  {
    uint64_t v4 = sub_1DC881978((uint64_t)&v26);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  sub_1DC9B39D4(v4, v5, v6, v7, v8, v9, v10, v11, v22, v24, (uint64_t)v25.receiver, (uint64_t)v25.super_class, v26);
  swift_bridgeObjectRelease();
  if (v27)
  {
    sub_1DC87E988(&qword_1EAA9E7F8);
    if (sub_1DC9B3950()) {
      uint64_t v14 = v23;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v13) {
      goto LABEL_14;
    }
LABEL_16:
    uint64_t v18 = 0;
    goto LABEL_17;
  }
  sub_1DC881978((uint64_t)&v26);
  uint64_t v14 = 0;
  if (!v13) {
    goto LABEL_16;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  sub_1DCB87908();
  uint64_t v15 = (void *)sub_1DC9B3A18();
  id v16 = objc_msgSend(v3, sel_stringByAppendingPathComponent_, v15);

  uint64_t v12 = sub_1DCB87938();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease_n();

LABEL_17:
  uint64_t v19 = (uint64_t *)&v2[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path];
  *uint64_t v19 = v12;
  v19[1] = v18;
  *(void *)&v2[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value] = v14;
  uint64_t v20 = &v2[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath];
  *(void *)uint64_t v20 = v0;
  *((void *)v20 + 1) = v1;

  v25.receiver = v2;
  v25.super_class = (Class)type metadata accessor for SNPropertyStripInfo();
  return objc_msgSendSuper2(&v25, sel_init);
}

uint64_t sub_1DC9B2D5C(uint64_t a1)
{
  sub_1DC87E920(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_1DC881978((uint64_t)v16);
    goto LABEL_26;
  }
  type metadata accessor for SNPropertyStripInfo();
  if ((sub_1DC9B3A34() & 1) == 0)
  {
LABEL_26:
    char v8 = 0;
    return v8 & 1;
  }
  if (v15 == v1)
  {

    goto LABEL_14;
  }
  sub_1DC9B3A70();
  if (v4)
  {
    if (!v2) {
      goto LABEL_25;
    }
    sub_1DC9B3990(v3);
    BOOL v7 = v7 && v5 == v6;
    if (!v7 && (sub_1DCB89018() & 1) == 0) {
      goto LABEL_25;
    }
  }
  else if (v2)
  {
LABEL_25:

    goto LABEL_26;
  }
  BOOL v9 = *(void *)&v1[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath] == *(void *)&v15[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath]
    && *(void *)&v1[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath + 8] == *(void *)&v15[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_resourcePath + 8];
  if (!v9 && (sub_1DCB89018() & 1) == 0) {
    goto LABEL_25;
  }
  if (*(void *)&v1[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value])
  {
    uint64_t v10 = (void *)sub_1DCB87788();
    if (!*(void *)&v15[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value])
    {
      if (!v10) {
        goto LABEL_34;
      }
LABEL_33:

      goto LABEL_26;
    }
  }
  else
  {
    if (!*(void *)&v15[OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value])
    {
LABEL_34:

      goto LABEL_14;
    }
    uint64_t v10 = 0;
  }
  uint64_t v12 = sub_1DCB87788();
  uint64_t v13 = (void *)v12;
  if (v10)
  {
    if (v12)
    {
      sub_1DC9B38B4();
      id v14 = v10;
      char v8 = sub_1DCB886A8();

      return v8 & 1;
    }
    goto LABEL_33;
  }

  if (v13)
  {

    goto LABEL_26;
  }
LABEL_14:
  char v8 = 1;
  return v8 & 1;
}

uint64_t sub_1DC9B2F30(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_1DCB88808();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    id v7 = a1;
  }
  char v8 = a4(v10);

  sub_1DC881978((uint64_t)v10);
  return v8 & 1;
}

unint64_t sub_1DC9B2FEC()
{
  uint64_t v1 = v0;
  long long v8 = *(_OWORD *)(v0 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path);
  sub_1DC87E988((uint64_t *)&unk_1EAAA4140);
  uint64_t v2 = sub_1DCB88728();
  uint64_t v3 = sub_1DCB87A98();
  if (!*(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value))
  {
    sub_1DCB877D8();
    sub_1DC9B3A64();
  }
  uint64_t v4 = v3 ^ v2;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1DCB87788();
  swift_bridgeObjectRelease();
  unint64_t v6 = (unint64_t)objc_msgSend(v5, sel_hash, v8);

  return v4 ^ v6;
}

void sub_1DC9B30FC()
{
}

uint64_t sub_1DC9B3134()
{
  sub_1DC9B3AD0();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_1DC9B3184()
{
  return sub_1DC9B3858(type metadata accessor for SNPropertyStripInfo);
}

uint64_t type metadata accessor for SNPropertyStripInfo()
{
  return self;
}

id sub_1DC9B3224(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v3 = v1;
  uint64_t v4 = sub_1DC9B135C(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v3[OBJC_IVAR____TtC13SoundAnalysis18SNDSPConfiguration_dspItems] = v4;

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for SNDSPConfiguration();
  return objc_msgSendSuper2(&v6, sel_init);
}

void sub_1DC9B32BC()
{
}

id sub_1DC9B32F4()
{
  return sub_1DC9B3858(type metadata accessor for SNDSPConfiguration);
}

uint64_t type metadata accessor for SNDSPConfiguration()
{
  return self;
}

uint64_t sub_1DC9B3340(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_value))
  {
    uint64_t v3 = sub_1DCB87788();
LABEL_7:
    uint64_t v6 = sub_1DCB5F94C(a2, v3);
    goto LABEL_8;
  }
  if (*(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis13SNAUStripInfo_path + 8))
  {
    sub_1DC9B38B4();
    sub_1DC9B3AB8();
    id v4 = sub_1DC9B375C();
    if (v4)
    {
      uint64_t v5 = v4;
      sub_1DCB877A8();
    }
    sub_1DCB877D8();
    sub_1DC9B3A64();
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1DCB87788();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DCB86FE8();
  sub_1DC89F57C(v8, (uint64_t)qword_1EAAFF810);
  uint64_t v3 = sub_1DCB86FC8();
  os_log_type_t v9 = sub_1DCB88468();
  if (os_log_type_enabled(v3, v9))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_1DC9B3A98(&dword_1DC873000, v10, v11, "AUStripInfo doesn't specify either value or path");
    sub_1DC8E7728();
  }
  uint64_t v6 = 0;
LABEL_8:

  return v6;
}

uint64_t sub_1DC9B3534(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_value))
  {
    uint64_t v3 = (void *)sub_1DCB87788();
LABEL_7:
    uint64_t v6 = sub_1DCB87908();
    uint64_t v7 = sub_1DCB5FD54(a2, v3, v6);

    goto LABEL_8;
  }
  if (*(void *)(a1 + OBJC_IVAR____TtC13SoundAnalysis19SNPropertyStripInfo_path + 8))
  {
    sub_1DC9B38B4();
    swift_bridgeObjectRetain();
    id v4 = sub_1DC9B375C();
    if (v4)
    {
      uint64_t v5 = v4;
      sub_1DCB877A8();
    }
    sub_1DCB877D8();
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)sub_1DCB87788();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1DCB86FE8();
  sub_1DC89F57C(v9, (uint64_t)qword_1EAAFF810);
  uint64_t v6 = sub_1DCB86FC8();
  os_log_type_t v10 = sub_1DCB88468();
  if (os_log_type_enabled(v6, v10))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_1DC9B3A98(&dword_1DC873000, v11, v12, "PropertyStripInfo doesn't specify either value or path");
    sub_1DC8E7728();
  }
  uint64_t v7 = 0;
LABEL_8:

  return v7;
}

id sub_1DC9B375C()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithContentsOfFile_, v1);

  return v2;
}

id sub_1DC9B37D0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

id sub_1DC9B3840()
{
  return sub_1DC9B3858(type metadata accessor for SNDSPGraphLoader);
}

id sub_1DC9B3858(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for SNDSPGraphLoader()
{
  return self;
}

unint64_t sub_1DC9B38B4()
{
  unint64_t result = qword_1EAA9C6F0;
  if (!qword_1EAA9C6F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAA9C6F0);
  }
  return result;
}

uint64_t sub_1DC9B38F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC9B3950()
{
  return swift_dynamicCast();
}

uint64_t sub_1DC9B3970()
{
  return swift_dynamicCast();
}

uint64_t sub_1DC9B3990@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t sub_1DC9B39A0()
{
  return v0;
}

double sub_1DC9B39B4@<D0>(_OWORD *a1@<X8>)
{
  return sub_1DC96116C(1752457552, 0xE400000000000000, v1, a1);
}

double sub_1DC9B39D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13)
{
  return sub_1DC96116C(0x65756C6156, 0xE500000000000000, v13, &a13);
}

id sub_1DC9B39FC()
{
  return v0;
}

uint64_t sub_1DC9B3A18()
{
  return sub_1DCB87908();
}

uint64_t sub_1DC9B3A34()
{
  return swift_dynamicCast();
}

uint64_t sub_1DC9B3A50()
{
  return v0;
}

uint64_t sub_1DC9B3A64()
{
  return 0;
}

void sub_1DC9B3A98(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t sub_1DC9B3AB8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC9B3AD0()
{
  return swift_bridgeObjectRelease();
}

id sub_1DC9B3B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1DC9B3B88();
  sub_1DC87E988(a4);
  uint64_t v5 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1DC9B3B88()
{
  return swift_bridgeObjectRetain();
}

void sub_1DC9B3BE4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  sub_1DC87E988(a4);
  uint64_t v7 = sub_1DCB87C38();
  id v8 = a1;
  sub_1DC9B3C64(v7, a5);
}

uint64_t sub_1DC9B3C64(uint64_t a1, void *a2)
{
  os_log_type_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  void *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9B3CD8()
{
  return *(void *)(v0 + OBJC_IVAR___SNResultsCollector_completeCount);
}

uint64_t sub_1DC9B3D10(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNResultsCollector_completeCount) = result;
  return result;
}

id sub_1DC9B3D20()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR___SNResultsCollector_results] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR___SNResultsCollector_errors] = v2;
  *(void *)&v0[OBJC_IVAR___SNResultsCollector_completeCount] = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

id static SNResultsCollector.automaticallyNotifiesObservers(forKey:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000) {
    return 0;
  }
  id v5 = 0;
  if (sub_1DC9B4868()) {
    return v5;
  }
  if (a1 == 0x73726F727265 && a2 == 0xE600000000000000) {
    return 0;
  }
  id v5 = 0;
  if (sub_1DC9B4868()) {
    return v5;
  }
  if (a1 == 0x6574656C706D6F63 && a2 == 0xED0000746E756F43) {
    return 0;
  }
  id v5 = 0;
  if ((sub_1DC9B4868() & 1) == 0)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    uint64_t v9 = (void *)sub_1DCB87908();
    v11.receiver = ObjCClassFromMetadata;
    v11.super_class = (Class)&OBJC_METACLASS___SNResultsCollector;
    id v5 = objc_msgSendSuper2(&v11, sel_automaticallyNotifiesObserversForKey_, v9);
  }
  return v5;
}

void SNResultsCollector.request(_:didProduce:)()
{
  uint64_t v0 = (void *)sub_1DC9B47E8();
  sub_1DC9B48A8((uint64_t)v0, sel_willChangeValueForKey_);

  sub_1DC9B4884();
  uint64_t v1 = swift_unknownObjectRetain();
  MEMORY[0x1E01A6BF0](v1);
  sub_1DC9B46F0(*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_1DCB87D28();
  sub_1DCB87C68();
  swift_endAccess();
  uint64_t v2 = (void *)sub_1DC9B47E8();
  sub_1DC9B48A8((uint64_t)v2, sel_didChangeValueForKey_);
}

void SNResultsCollector.request(_:didFailWithError:)(uint64_t a1, void *a2)
{
  objc_super v3 = (uint64_t *)sub_1DC9B480C();
  sub_1DC9B48A8((uint64_t)v3, sel_willChangeValueForKey_);

  sub_1DC9B4884();
  id v4 = a2;
  sub_1DC9B4618((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCA73B0C);
  uint64_t v5 = *(void *)(*v3 + 16);
  sub_1DC9B4770(v5, (uint64_t (*)(BOOL))sub_1DCA73B0C);
  uint64_t v6 = *v3;
  *(void *)(v6 + 16) = v5 + 1;
  *(void *)(v6 + 8 * v5 + 32) = a2;
  swift_endAccess();
  uint64_t v7 = (void *)sub_1DC9B480C();
  sub_1DC9B48A8((uint64_t)v7, sel_didChangeValueForKey_);
}

void SNResultsCollector.requestDidComplete(_:)()
{
  uint64_t v1 = (void *)sub_1DC9B47B8();
  sub_1DC9B482C((uint64_t)v1, sel_willChangeValueForKey_);

  uint64_t v2 = *(void *)&v0[OBJC_IVAR___SNResultsCollector_completeCount];
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)&v0[OBJC_IVAR___SNResultsCollector_completeCount] = v4;
    id v5 = (id)sub_1DC9B47B8();
    objc_msgSend(v0, sel_didChangeValueForKey_, v5);
  }
}

void sub_1DC9B42B4()
{
  uint64_t v0 = (void *)sub_1DC9B47E8();
  sub_1DC9B482C((uint64_t)v0, sel_willChangeValueForKey_);

  sub_1DC9B4844();
  *uint64_t v0 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_1DC9B47E8();
  sub_1DC9B482C((uint64_t)v1, sel_didChangeValueForKey_);
}

void sub_1DC9B4370()
{
  uint64_t v0 = (void *)sub_1DC9B480C();
  sub_1DC9B482C((uint64_t)v0, sel_willChangeValueForKey_);

  sub_1DC9B4844();
  *uint64_t v0 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_1DC9B480C();
  sub_1DC9B482C((uint64_t)v1, sel_didChangeValueForKey_);
}

void sub_1DC9B442C()
{
  uint64_t v1 = (void *)sub_1DC9B47B8();
  sub_1DC9B482C((uint64_t)v1, sel_willChangeValueForKey_);

  *(void *)&v0[OBJC_IVAR___SNResultsCollector_completeCount] = 0;
  id v2 = (id)sub_1DC9B47B8();
  objc_msgSend(v0, sel_didChangeValueForKey_, v2);
}

id SNResultsCollector.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC9B4570()
{
  return sub_1DC9B4618((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCA72B90);
}

uint64_t sub_1DC9B4588()
{
  return sub_1DC9B4618((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCA72C98);
}

uint64_t sub_1DC9B45A0()
{
  return sub_1DC9B4618((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCA73288);
}

uint64_t sub_1DC9B45B8()
{
  return sub_1DC9B4618((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCA73634);
}

uint64_t sub_1DC9B45D0()
{
  return sub_1DC9B4618((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCA73794);
}

uint64_t sub_1DC9B45E8()
{
  return sub_1DC9B4618((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCA73C68);
}

uint64_t sub_1DC9B4600()
{
  return sub_1DC9B4618((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCA73DFC);
}

uint64_t sub_1DC9B4618(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_1DC9B4674(uint64_t a1)
{
  return sub_1DC9B4770(a1, (uint64_t (*)(BOOL))sub_1DCA72B90);
}

uint64_t sub_1DC9B468C(uint64_t a1)
{
  return sub_1DC9B4770(a1, (uint64_t (*)(BOOL))sub_1DCA72C98);
}

uint64_t sub_1DC9B46A4(uint64_t a1)
{
  return sub_1DC9B4770(a1, (uint64_t (*)(BOOL))sub_1DCA73288);
}

uint64_t sub_1DC9B46C0(uint64_t a1)
{
  return sub_1DC9B4770(a1, (uint64_t (*)(BOOL))sub_1DCA73634);
}

uint64_t sub_1DC9B46D8(uint64_t a1)
{
  return sub_1DC9B4770(a1, (uint64_t (*)(BOOL))sub_1DCA73794);
}

uint64_t sub_1DC9B46F0(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_1DCB87CB8();
  }
  return result;
}

uint64_t type metadata accessor for SNResultsCollector()
{
  return self;
}

uint64_t sub_1DC9B4740(uint64_t a1)
{
  return sub_1DC9B4770(a1, (uint64_t (*)(BOOL))sub_1DCA73C68);
}

uint64_t sub_1DC9B4758(uint64_t a1)
{
  return sub_1DC9B4770(a1, (uint64_t (*)(BOOL))sub_1DCA73DFC);
}

uint64_t sub_1DC9B4770(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_1DC9B47B8()
{
  return sub_1DCB87908();
}

uint64_t sub_1DC9B47E8()
{
  return sub_1DCB87908();
}

uint64_t sub_1DC9B480C()
{
  return sub_1DCB87908();
}

id sub_1DC9B482C(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_1DC9B4844()
{
  return swift_beginAccess();
}

uint64_t sub_1DC9B4868()
{
  return sub_1DCB89018();
}

uint64_t sub_1DC9B4884()
{
  return swift_beginAccess();
}

id sub_1DC9B48A8(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1DC9B48C0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1DC89C89C(0, a3);
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAAA0230);
  uint64_t result = sub_1DCB884B8();
  if (!v3 && !result)
  {
    sub_1DC884E74();
    uint64_t v5 = sub_1DC883884();
    return sub_1DC9C08D4(v5, v6);
  }
  return result;
}

void sub_1DC9B4970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC89C89C(0, (unint64_t *)&unk_1EAAA0230);
  uint64_t v5 = sub_1DCB884B8();
  if (!v3)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = v5;
    sub_1DC8D0BC4((uint64_t)&v7, a3, (uint64_t)&v8);
  }
}

uint64_t sub_1DC9B4A28()
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  v5[0] = 0;
  id v1 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v5);
  id v2 = v5[0];
  if (v1)
  {
    sub_1DCB86AD8();
  }
  else
  {
    uint64_t v3 = v2;
    sub_1DCB86898();

    swift_willThrow();
  }
  return sub_1DC89DCDC();
}

uint64_t sub_1DC9B4AFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1DC9B625C(a1, (uint64_t)&off_1F37F5F08, a2);
}

uint64_t sub_1DC9B4B1C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC9BFD10();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *a2 = v9;
  return result;
}

uint64_t sub_1DC9B4C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1DCB86BF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v9;
  *(void *)(inited + 24) = v10;
  if (v10 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v12 = 0;
    swift_willThrow();
    return swift_release();
  }
  uint64_t v15 = a2;
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8B9C40(v9, v10);
  sub_1DC8B9C40(v9, v10);
  sub_1DCB86728();
  sub_1DC9C0244(&qword_1EAAA5D50, MEMORY[0x1E4F27990]);
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v9, v10);
  if (v2) {
    return swift_release();
  }
  sub_1DC88668C(v9, v10);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v15, v8, v5);
}

void *sub_1DC9B4E64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return (void *)swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC9C0080();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return (void *)swift_release();
  }
  sub_1DC88668C(v4, v5);
  return memcpy(a2, v9, 0xC0uLL);
}

uint64_t sub_1DC9B4FAC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC9C028C();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *a2 = v9;
  return result;
}

uint64_t sub_1DC9B50EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC9C0324();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t sub_1DC9B522C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v2 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = v2;
  if (v2 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *unint64_t v5 = 0;
    swift_willThrow();
  }
  else
  {
    sub_1DC8AF450(v3, v2);
    sub_1DC8AF450(v3, v2);
    char v6 = sub_1DC9BD20C();
    if (!v1)
    {
      uint64_t inited = v6 & 1;
      sub_1DC88668C(v3, v2);
      sub_1DC88668C(v3, v2);
      return inited;
    }
    sub_1DC88668C(v3, v2);
  }
  swift_release();
  return inited;
}

uint64_t sub_1DC9B5320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC9BECD8();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v14;
  *(_OWORD *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_1DC9B5488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC8CB514();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v15;
  *(void *)(a2 + 64) = v16;
  *(unsigned char *)(a2 + 72) = v17;
  *(_OWORD *)(a2 + 80) = v18;
  return result;
}

uint64_t sub_1DC9B5608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC88303C();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(_DWORD *)(a2 + 48) = v14;
  return result;
}

uint64_t sub_1DC9B5770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for RemoteRequest();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v8;
  *(void *)(inited + 24) = v9;
  if (v9 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *long long v11 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8B9C40(v8, v9);
  sub_1DC8B9C40(v8, v9);
  sub_1DCB86728();
  sub_1DC9C0244(&qword_1EAAA0B00, (void (*)(uint64_t))type metadata accessor for RemoteRequest);
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v8, v9);
  if (v2) {
    return swift_release();
  }
  sub_1DC88668C(v8, v9);
  return sub_1DC9C01E0((uint64_t)v7, a2);
}

uint64_t sub_1DC9B5938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC8828BC();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_1DC9B5AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC8825F4();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(unsigned char *)(a2 + 48) = v14;
  *(void *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_1DC9B5C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC9BFB88();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  *(_OWORD *)(a2 + 64) = v15;
  *(void *)(a2 + 80) = v16;
  *(void *)(a2 + 88) = v17;
  *(void *)(a2 + 96) = v18;
  return result;
}

uint64_t sub_1DC9B5D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v5;
  if (v5 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v7 = 0;
    swift_willThrow();
    return swift_release();
  }
  sub_1DCB86738();
  swift_allocObject();
  sub_1DC8AF450(v4, v5);
  sub_1DC8AF450(v4, v5);
  sub_1DCB86728();
  sub_1DC88255C();
  sub_1DCB86718();
  swift_release();
  sub_1DC88668C(v4, v5);
  if (v2) {
    return swift_release();
  }
  uint64_t result = sub_1DC88668C(v4, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = v11;
  *(void *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 40) = v13;
  *(void *)(a2 + 56) = v14;
  return result;
}

uint64_t sub_1DC9B5EFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = v4;
  if (v4 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    unsigned char *v6 = 0;
    swift_willThrow();
  }
  else
  {
    sub_1DC8AF450(v3, v4);
    sub_1DC8AF450(v3, v4);
    uint64_t v2 = sub_1DC9BD8B0();
    sub_1DC88668C(v3, v4);
    if (!v1)
    {
      sub_1DC88668C(v3, v4);
      return v2;
    }
  }
  swift_release();
  return v2;
}

uint64_t sub_1DC9B5FF4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = v4;
  if (v4 >> 60 == 15)
  {
    sub_1DC884E74();
    swift_allocError();
    unsigned char *v6 = 0;
    swift_willThrow();
  }
  else
  {
    sub_1DC8AF450(v3, v4);
    sub_1DC8AF450(v3, v4);
    char v2 = sub_1DC9BD94C();
    sub_1DC88668C(v3, v4);
    if (!v1)
    {
      sub_1DC88668C(v3, v4);
      return v2 & 1;
    }
  }
  swift_release();
  return v2 & 1;
}

uint64_t sub_1DC9B60E4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = v2;
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  sub_1DC9C0900(inited);
  if (!v7 & v6)
  {
    sub_1DC884E74();
    uint64_t v8 = sub_1DC883884();
    sub_1DC9C08D4(v8, v9);
  }
  else
  {
    sub_1DC9C08A4();
    sub_1DC9C08A4();
    uint64_t v10 = sub_1DC89DCDC();
    uint64_t v4 = a2(v10);
    sub_1DC9C08BC();
    if (!v2)
    {
      sub_1DC9C08BC();
      return v4;
    }
  }
  swift_release();
  return v4;
}

unint64_t *sub_1DC9B619C(uint64_t a1, unint64_t *a2)
{
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  sub_1DC9C0900(inited);
  if (!v6 & v5)
  {
    sub_1DC884E74();
    uint64_t v7 = sub_1DC883884();
    sub_1DC9C08D4(v7, v8);
  }
  else
  {
    sub_1DC9C08A4();
    sub_1DC9C08A4();
    uint64_t v9 = sub_1DC89DCDC();
    a2 = (unint64_t *)sub_1DC9B48C0(v9, v10, a2);
    sub_1DC9C08BC();
    if (!v2)
    {
      sub_1DC9C08BC();
      return a2;
    }
  }
  swift_release();
  return a2;
}

uint64_t sub_1DC9B625C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1DC88D538();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC89D970();
  uint64_t v12 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  type metadata accessor for XPCDataDecoder.SingleValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v12;
  *(void *)(inited + 24) = v13;
  if (v13 >> 60 == 15)
  {
    sub_1DC884E74();
    uint64_t v15 = sub_1DC883884();
    sub_1DC9C08D4(v15, v16);
    return swift_release();
  }
  uint64_t v19 = v9;
  uint64_t v17 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a2 + 16);
  sub_1DC8AF450(v12, v13);
  sub_1DC8AF450(v12, v13);
  v17(v12, v13, a1, a2);
  sub_1DC88668C(v12, v13);
  if (v3) {
    return swift_release();
  }
  sub_1DC88668C(v12, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(a3, v4, a1);
}

uint64_t sub_1DC9B63CC()
{
  return sub_1DC9B7088();
}

uint64_t sub_1DC9B63EC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1DC9AFE10();
  void v10[3] = MEMORY[0x1E4F277C0];
  v10[4] = sub_1DC9B047C();
  v10[0] = a2;
  v10[1] = a3;
  sub_1DC8AF450(a2, a3);
  uint64_t v6 = sub_1DCB2912C(v10);
  unint64_t v8 = v7;
  sub_1DC8818D0((uint64_t)v10);
  if (!v3)
  {
    sub_1DC8AF450(v6, v8);
    sub_1DC9AF8E8(v6, v8);
    sub_1DC881920(v6, v8);
    sub_1DC881920(v6, v8);
  }
  return swift_release();
}

uint64_t sub_1DC9B64BC()
{
  sub_1DC9AFE10();
  uint64_t v2 = sub_1DCB86BF8();
  v8[3] = v2;
  v8[4] = sub_1DC9C0244(&qword_1EAAA3410, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1DC8EF6AC(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v3, v0, v2);
  uint64_t v4 = sub_1DCB2912C(v8);
  unint64_t v6 = v5;
  sub_1DC8818D0((uint64_t)v8);
  if (!v1)
  {
    sub_1DC8AF450(v4, v6);
    sub_1DC9AF8E8(v4, v6);
    sub_1DC881920(v4, v6);
    sub_1DC881920(v4, v6);
  }
  return swift_release();
}

uint64_t sub_1DC9B65E4()
{
  sub_1DC9AFE10();
  v6[3] = &unk_1F37DF6F8;
  v6[4] = sub_1DC9BFF4C();
  v6[0] = swift_allocObject();
  memcpy((void *)(v6[0] + 16), v0, 0xC0uLL);
  sub_1DC9589C8((uint64_t)v0);
  uint64_t v2 = sub_1DCB2912C(v6);
  unint64_t v4 = v3;
  sub_1DC8818D0((uint64_t)v6);
  if (!v1)
  {
    sub_1DC8AF450(v2, v4);
    sub_1DC9AF8E8(v2, v4);
    sub_1DC881920(v2, v4);
    sub_1DC881920(v2, v4);
  }
  return swift_release();
}

uint64_t sub_1DC9B66D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC9AFE10();
  void v10[3] = &type metadata for AccessibilitySoundActions.SoundAction;
  v10[4] = sub_1DC9C0370();
  v10[0] = a2;
  v10[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DCB2912C(v10);
  unint64_t v8 = v7;
  sub_1DC8818D0((uint64_t)v10);
  if (!v3)
  {
    sub_1DC8AF450(v6, v8);
    sub_1DC9AF8E8(v6, v8);
    sub_1DC881920(v6, v8);
    sub_1DC881920(v6, v8);
  }
  return swift_release();
}

uint64_t sub_1DC9B67A0()
{
  sub_1DC9C07FC();
  char v4 = v3 & 1;
  sub_1DC9AFE10();
  uint64_t v8 = v1;
  uint64_t v9 = v0();
  LOBYTE(v7[0]) = v4;
  uint64_t v5 = sub_1DCB2912C(v7);
  sub_1DC9C0580(v5);
  if (!v0)
  {
    sub_1DC8AF450(v1, v2);
    sub_1DC9C07A8();
    sub_1DC9C065C();
    sub_1DC9C065C();
  }
  return swift_release();
}

uint64_t sub_1DC9B6838()
{
  sub_1DC9AFE10();
  v6[3] = &unk_1F37E1CA8;
  v6[4] = sub_1DC9C0110();
  v6[0] = swift_allocObject();
  memcpy((void *)(v6[0] + 16), v0, 0x48uLL);
  sub_1DC9C019C((uint64_t)v0);
  uint64_t v2 = sub_1DCB2912C(v6);
  unint64_t v4 = v3;
  sub_1DC8818D0((uint64_t)v6);
  if (!v1)
  {
    sub_1DC8AF450(v2, v4);
    sub_1DC9AF8E8(v2, v4);
    sub_1DC881920(v2, v4);
    sub_1DC881920(v2, v4);
  }
  return swift_release();
}

uint64_t sub_1DC9B6928()
{
  sub_1DC9AFE10();
  v6[3] = &unk_1F37E2100;
  v6[4] = sub_1DC8CB588();
  v6[0] = swift_allocObject();
  memcpy((void *)(v6[0] + 16), v0, 0x60uLL);
  sub_1DC9BFD9C((uint64_t)v0);
  uint64_t v2 = sub_1DCB2912C(v6);
  unint64_t v4 = v3;
  sub_1DC8818D0((uint64_t)v6);
  if (!v1)
  {
    sub_1DC8AF450(v2, v4);
    sub_1DC9AF8E8(v2, v4);
    sub_1DC881920(v2, v4);
    sub_1DC881920(v2, v4);
  }
  return swift_release();
}

uint64_t sub_1DC9B6A18()
{
  sub_1DC9AFE10();
  v8[3] = &unk_1F37E2D68;
  v8[4] = sub_1DC882FF0();
  uint64_t v2 = swift_allocObject();
  v8[0] = v2;
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v0 + 32);
  *(_DWORD *)(v2 + 64) = *(_DWORD *)(v0 + 48);
  uint64_t v4 = sub_1DCB2912C(v8);
  unint64_t v6 = v5;
  sub_1DC8818D0((uint64_t)v8);
  if (!v1)
  {
    sub_1DC8AF450(v4, v6);
    sub_1DC9AF8E8(v4, v6);
    sub_1DC881920(v4, v6);
    sub_1DC881920(v4, v6);
  }
  return swift_release();
}

uint64_t sub_1DC9B6B04()
{
  sub_1DC9AFE10();
  void v7[3] = type metadata accessor for RemoteRequest();
  v7[4] = sub_1DC9C0244(&qword_1EAAA0B08, (void (*)(uint64_t))type metadata accessor for RemoteRequest);
  uint64_t v2 = sub_1DC8EF6AC(v7);
  sub_1DC8EF710(v0, (uint64_t)v2);
  uint64_t v3 = sub_1DCB2912C(v7);
  unint64_t v5 = v4;
  sub_1DC8818D0((uint64_t)v7);
  if (!v1)
  {
    sub_1DC8AF450(v3, v5);
    sub_1DC9AF8E8(v3, v5);
    sub_1DC881920(v3, v5);
    sub_1DC881920(v3, v5);
  }
  return swift_release();
}

uint64_t sub_1DC9B6C04()
{
  sub_1DC9AFE10();
  v9[3] = &unk_1F37EBE10;
  v9[4] = sub_1DC8825A8();
  uint64_t v2 = (_OWORD *)swift_allocObject();
  v9[0] = v2;
  long long v3 = v0[1];
  v2[1] = *v0;
  v2[2] = v3;
  long long v4 = v0[3];
  void v2[3] = v0[2];
  v2[4] = v4;
  uint64_t v5 = sub_1DCB2912C(v9);
  unint64_t v7 = v6;
  sub_1DC8818D0((uint64_t)v9);
  if (!v1)
  {
    sub_1DC8AF450(v5, v7);
    sub_1DC9AF8E8(v5, v7);
    sub_1DC881920(v5, v7);
    sub_1DC881920(v5, v7);
  }
  return swift_release();
}

uint64_t sub_1DC9B6CE8()
{
  sub_1DC9AFE10();
  v6[3] = &unk_1F37EF338;
  v6[4] = sub_1DC9BFDD4();
  v6[0] = swift_allocObject();
  memcpy((void *)(v6[0] + 16), v0, 0x68uLL);
  sub_1DC9BFE58((uint64_t)v0);
  uint64_t v2 = sub_1DCB2912C(v6);
  unint64_t v4 = v3;
  sub_1DC8818D0((uint64_t)v6);
  if (!v1)
  {
    sub_1DC8AF450(v2, v4);
    sub_1DC9AF8E8(v2, v4);
    sub_1DC881920(v2, v4);
    sub_1DC881920(v2, v4);
  }
  return swift_release();
}

uint64_t sub_1DC9B6DD8()
{
  sub_1DC9C05EC();
  sub_1DC9AFE10();
  uint64_t v9 = v3;
  uint64_t v10 = v2();
  unint64_t v4 = (_OWORD *)sub_1DC9C078C();
  uint64_t v5 = sub_1DC9C060C(v4);
  v0(v5);
  uint64_t v6 = sub_1DCB2912C(v8);
  sub_1DC9C0580(v6);
  if (!v0)
  {
    sub_1DC8AF450(v1, (unint64_t)v2);
    sub_1DC9C07A8();
    sub_1DC9C065C();
    sub_1DC9C065C();
  }
  return swift_release();
}

uint64_t sub_1DC9B6E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC9AFE10();
  void v10[3] = MEMORY[0x1E4FBB1A0];
  v10[4] = MEMORY[0x1E4FBB1A8];
  v10[0] = a2;
  v10[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1DCB2912C(v10);
  unint64_t v8 = v7;
  sub_1DC8818D0((uint64_t)v10);
  if (!v3)
  {
    sub_1DC8AF450(v6, v8);
    sub_1DC9AF8E8(v6, v8);
    sub_1DC881920(v6, v8);
    sub_1DC881920(v6, v8);
  }
  return swift_release();
}

uint64_t sub_1DC9B6F44(uint64_t a1, char a2)
{
  sub_1DC9AFE10();
  void v8[3] = MEMORY[0x1E4FBB390];
  v8[4] = MEMORY[0x1E4FBB398];
  LOBYTE(v8[0]) = a2;
  uint64_t v4 = sub_1DCB2912C(v8);
  unint64_t v6 = v5;
  sub_1DC8818D0((uint64_t)v8);
  if (!v2)
  {
    sub_1DC8AF450(v4, v6);
    sub_1DC9AF8E8(v4, v6);
    sub_1DC881920(v4, v6);
    sub_1DC881920(v4, v6);
  }
  return swift_release();
}

uint64_t sub_1DC9B7004()
{
  sub_1DC9C080C();
  sub_1DC9AFE10();
  uint64_t v7 = v1;
  uint64_t v8 = v0;
  v6[0] = v3;
  uint64_t v4 = sub_1DCB2912C(v6);
  sub_1DC9C0580(v4);
  if (!v0)
  {
    sub_1DC8AF450(v1, v2);
    sub_1DC9C07A8();
    sub_1DC9C065C();
    sub_1DC9C065C();
  }
  return swift_release();
}

uint64_t sub_1DC9B7088()
{
  sub_1DC9C077C();
  sub_1DC9AFE10();
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v2, v1);
  if (!v0)
  {
    uint64_t v5 = v3;
    unint64_t v6 = v4;
    sub_1DC8AF450(v3, v4);
    sub_1DC9AF8E8(v5, v6);
    sub_1DC881920(v5, v6);
    sub_1DC881920(v5, v6);
  }
  return swift_release();
}

uint64_t sub_1DC9B713C()
{
  sub_1DC886900();
  sub_1DC9C0754();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC9C05C4();
  return sub_1DC9B99D8();
}

uint64_t sub_1DC9B71D4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC9B7268;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B7268()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B7374()
{
  sub_1DC88688C();
  uint64_t v5 = v1;
  sub_1DC9C0454();
  sub_1DC9BC718(&v4);
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    *(_OWORD *)*(void *)(v1 + 16) = v4;
    sub_1DC8BAB84();
  }
  return v2();
}

uint64_t sub_1DC9B7400()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B7488;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B7488()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B7594()
{
  sub_1DC996C44();
  sub_1DC88688C();
  sub_1DC9C0824();
  sub_1DC9BC77C(v0);
  swift_release();
  swift_release();
  sub_1DC8BA978();
  sub_1DC8F03BC();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1DC9B761C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC9B76B0;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B76B0()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v5();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
}

uint64_t sub_1DC9B77B0()
{
  uint64_t v6 = v0;
  uint64_t v1 = *(void *)(v0 + 40);
  swift_retain();
  sub_1DC9BC860(v5);
  if (v1)
  {
    swift_release();
    swift_release();
    sub_1DC8F01F8();
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 16);
    swift_release();
    swift_release();
    memcpy(v3, v5, 0xC0uLL);
    sub_1DC8BAB84();
  }
  return v2();
}

uint64_t sub_1DC9B7864()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B78EC;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B78EC()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B79F8()
{
  sub_1DC88688C();
  sub_1DC9C0454();
  sub_1DC9BC8DC();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    **(unsigned char **)(v1 + 16) = v4;
    sub_1DC8BAB84();
  }
  return v2();
}

uint64_t sub_1DC9B7A84()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B7B0C;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B7B0C()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B7C18()
{
  sub_1DC88688C();
  sub_1DC9C0454();
  sub_1DC9BC930();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 16);
    *uint64_t v3 = v5;
    v3[1] = v6;
    sub_1DC8BAB84();
  }
  return v2();
}

uint64_t sub_1DC9B7CA4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9B7D34;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B7D34()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B7E40()
{
  sub_1DC996C44();
  sub_1DC88688C();
  sub_1DC9C062C();
  sub_1DC9BC97C();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
    sub_1DC8F03BC();
    return v2(v1, v2, v3, v4, v5, v6, v7, v8);
  }
  else
  {
    sub_1DC996F48();
    sub_1DC8F03BC();
    return v12(v10, v11, v12, v13, v14, v15, v16, v17);
  }
}

uint64_t sub_1DC9B7EF4()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B7F7C;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B7F7C()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B8088()
{
  sub_1DC9C0454();
  sub_1DC9BC9D0();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    uint64_t v3 = *(void *)(v1 + 16);
    *(void *)uint64_t v3 = v5;
    *(void *)(v3 + 8) = v6;
    *(_OWORD *)(v3 + 16) = v7;
    *(void *)(v3 + 32) = v8;
    *(void *)(v3 + 40) = v9;
    *(void *)(v3 + 48) = v10;
    *(_OWORD *)(v3 + 56) = v11;
    sub_1DC8BAB84();
  }
  return v2();
}

uint64_t sub_1DC9B8140()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B81C8;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B81C8()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B82D4()
{
  sub_1DC9C0454();
  sub_1DC9BCA44();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    sub_1DC9C0744();
    sub_1DC9C0538(v2, v9, v10, v11, v12);
    *(void *)(v3 + 48) = v4;
    *(void *)(v3 + 56) = v5;
    *(void *)(v3 + 64) = v6;
    *(unsigned char *)(v3 + 72) = v7;
    *(_OWORD *)(v3 + 80) = v13;
    sub_1DC8BAB84();
  }
  return v1();
}

uint64_t sub_1DC9B8380()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B8408;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B8408()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B8514()
{
  sub_1DC9C0864();
  sub_1DC9C0454();
  sub_1DC9BCAB4();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    sub_1DC9C055C(*(void *)(v1 + 16), v6, v7, v8, v9, v10);
    *(_DWORD *)(v3 + 48) = v4;
    sub_1DC8BAB84();
  }
  return v2();
}

uint64_t sub_1DC9B85AC()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B8634;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B8634()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B8740()
{
  sub_1DC996C44();
  sub_1DC88688C();
  sub_1DC9C0824();
  sub_1DC9BCB0C(v0);
  swift_release();
  swift_release();
  sub_1DC8BA978();
  sub_1DC8F03BC();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1DC9B87C8()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B8850;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B8850()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B895C()
{
  sub_1DC9C0864();
  sub_1DC9C0454();
  sub_1DC9BCBB8();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    sub_1DC9C0744();
    *(void *)uint64_t v2 = v3;
    *(void *)(v2 + 8) = v6;
    *(_OWORD *)(v2 + 16) = v7;
    *(void *)(v2 + 32) = v8;
    *(void *)(v2 + 40) = v4;
    *(void *)(v2 + 48) = v9;
    *(void *)(v2 + 56) = v10;
    sub_1DC8BAB84();
  }
  return v1();
}

uint64_t sub_1DC9B8A10()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B8A98;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B8A98()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B8BA4()
{
  sub_1DC9C0864();
  sub_1DC9C0454();
  sub_1DC9BCC34();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    sub_1DC9C0744();
    sub_1DC9C0538(v2, v7, v8, v9, v10);
    *(unsigned char *)(v3 + 48) = v4;
    *(void *)(v3 + 56) = v5;
    sub_1DC8BAB84();
  }
  return v1();
}

uint64_t sub_1DC9B8C3C()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B8CC4;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B8CC4()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B8DD0()
{
  sub_1DC9C0454();
  sub_1DC9BCC94();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    sub_1DC9C055C(*(void *)(v1 + 16), v8, v9, v10, v11, v12);
    *(_OWORD *)(v3 + 48) = v13;
    *(_OWORD *)(v3 + 64) = v14;
    *(void *)(v3 + 80) = v4;
    *(void *)(v3 + 88) = v5;
    *(void *)(v3 + 96) = v6;
    sub_1DC8BAB84();
  }
  return v2();
}

uint64_t sub_1DC9B8E80()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9B8F08;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B8F08()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B9014()
{
  sub_1DC9C0864();
  sub_1DC9C0454();
  sub_1DC9BCD00();
  swift_release();
  swift_release();
  if (v0)
  {
    sub_1DC8F01F8();
  }
  else
  {
    uint64_t v3 = *(void *)(v1 + 16);
    *(void *)uint64_t v3 = v5;
    *(void *)(v3 + 8) = v6;
    *(_OWORD *)(v3 + 16) = v7;
    *(void *)(v3 + 32) = v8;
    *(_OWORD *)(v3 + 40) = v9;
    *(void *)(v3 + 56) = v10;
    sub_1DC8BAB84();
  }
  return v2();
}

uint64_t sub_1DC9B90C8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9B9158;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B9158()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B9264()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  sub_1DC9BCD9C();
  swift_release();
  swift_release();
  if (v1)
  {
    sub_1DC8F01F8();
    sub_1DC8BA86C();
    return v3(v2, v3, v4, v5, v6, v7, v8, v9);
  }
  else
  {
    sub_1DC8BA86C();
    return v14(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_1DC9B9330()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9B93BC;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B93BC()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9(0);
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B94D4()
{
  sub_1DC996C44();
  sub_1DC88688C();
  sub_1DC9C062C();
  sub_1DC9BCDEC();
  swift_release();
  swift_release();
  sub_1DC996F48();
  sub_1DC8F03BC();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1DC9B9564()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9B95F0;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B95F0()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B96FC()
{
  sub_1DC996C44();
  sub_1DC88688C();
  sub_1DC9C062C();
  sub_1DC9BCE6C((uint64_t (*)(uint64_t))sub_1DC9BD9EC);
  swift_release();
  swift_release();
  sub_1DC996F48();
  sub_1DC8F03BC();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1DC9B979C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9B982C;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B982C()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 24) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B9938()
{
  sub_1DC996C44();
  sub_1DC88688C();
  sub_1DC9C062C();
  sub_1DC9BCE6C((uint64_t (*)(uint64_t))sub_1DC9BDA88);
  swift_release();
  swift_release();
  sub_1DC996F48();
  sub_1DC8F03BC();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1DC9B99D8()
{
  sub_1DC8867A8();
  v0[3] = v1;
  v0[4] = v2;
  v0[2] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  void *v4 = v0;
  v4[1] = sub_1DC9B9A6C;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9B9A6C()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC9C0414();
    return v9();
  }
  else
  {
    *(void *)(v5 + 56) = v3;
    sub_1DC9C0424();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1DC9B9B78()
{
  sub_1DC8BABB4();
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  swift_retain();
  sub_1DCA7D574(v2, v2, v1, v3);
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v4();
}

uint64_t sub_1DC9B9C30()
{
  return sub_1DC9BA628();
}

uint64_t sub_1DC9B9C50()
{
  sub_1DCAD2DD0();
  v3[3] = type metadata accessor for RemoteRequest();
  v3[4] = (uint64_t)&off_1F37E6A90;
  uint64_t v1 = sub_1DC8EF6AC(v3);
  sub_1DC8EF710(v0, (uint64_t)v1);
  swift_retain();
  sub_1DC9B0020(v3);
  swift_release();
  swift_release();
  return sub_1DC9C07E4((uint64_t)v3);
}

uint64_t sub_1DC9B9CEC()
{
  sub_1DCAD2DD0();
  void v2[3] = &unk_1F37E2100;
  v2[4] = &off_1F37E2078;
  v2[0] = swift_allocObject();
  memcpy((void *)(v2[0] + 16), v0, 0x60uLL);
  sub_1DC9BFD9C((uint64_t)v0);
  swift_retain();
  sub_1DC9B0020(v2);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v2);
}

uint64_t sub_1DC9B9DAC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1DCAD2DD0();
  void v6[3] = MEMORY[0x1E4F277C0];
  v6[4] = &off_1F37DF2B8;
  v6[0] = a2;
  v6[1] = a3;
  sub_1DC8AF450(a2, a3);
  swift_retain();
  sub_1DC9B0020(v6);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v6);
}

uint64_t sub_1DC9B9E54()
{
  sub_1DCAD2DD0();
  uint64_t v1 = sub_1DCB86BF8();
  v4[3] = v1;
  _OWORD v4[4] = (uint64_t)&off_1F37DF330;
  uint64_t v2 = sub_1DC8EF6AC(v4);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v1 - 8) + 16))(v2, v0, v1);
  swift_retain();
  sub_1DC9B0020(v4);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DC9B9F24()
{
  sub_1DCAD2DD0();
  void v2[3] = &unk_1F37DF6F8;
  v2[4] = &off_1F37DF688;
  v2[0] = swift_allocObject();
  memcpy((void *)(v2[0] + 16), v0, 0xC0uLL);
  sub_1DC9589C8((uint64_t)v0);
  swift_retain();
  sub_1DC9B0020(v2);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v2);
}

uint64_t sub_1DC9B9FE4()
{
  sub_1DC9C07FC();
  char v3 = v2 & 1;
  sub_1DCAD2DD0();
  uint64_t v6 = v1;
  uint64_t v7 = v0;
  LOBYTE(v5[0]) = v3;
  swift_retain();
  sub_1DC9B0020(v5);
  swift_release();
  swift_release();
  return sub_1DC9C07E4((uint64_t)v5);
}

uint64_t sub_1DC9BA068()
{
  sub_1DCAD2DD0();
  void v2[3] = &unk_1F37E1CA8;
  v2[4] = &off_1F37E1C20;
  v2[0] = swift_allocObject();
  memcpy((void *)(v2[0] + 16), v0, 0x48uLL);
  sub_1DC9C019C((uint64_t)v0);
  swift_retain();
  sub_1DC9B0020(v2);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v2);
}

uint64_t sub_1DC9BA128()
{
  sub_1DCAD2DD0();
  v4[3] = &unk_1F37E2D68;
  _OWORD v4[4] = &off_1F37E2CE0;
  uint64_t v1 = swift_allocObject();
  v4[0] = v1;
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_DWORD *)(v1 + 64) = *(_DWORD *)(v0 + 48);
  swift_retain();
  sub_1DC9B0020(v4);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DC9BA1E4()
{
  sub_1DCAD2DD0();
  void v5[3] = &unk_1F37EBE10;
  _OWORD v5[4] = &off_1F37EBD88;
  uint64_t v1 = (_OWORD *)swift_allocObject();
  v5[0] = v1;
  long long v2 = v0[1];
  v1[1] = *v0;
  v1[2] = v2;
  long long v3 = v0[3];
  v1[3] = v0[2];
  v1[4] = v3;
  swift_retain();
  sub_1DC9B0020(v5);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v5);
}

uint64_t sub_1DC9BA298()
{
  sub_1DCAD2DD0();
  void v2[3] = &unk_1F37EF338;
  v2[4] = &off_1F37EF2B0;
  v2[0] = swift_allocObject();
  memcpy((void *)(v2[0] + 16), v0, 0x68uLL);
  sub_1DC9BFE58((uint64_t)v0);
  swift_retain();
  sub_1DC9B0020(v2);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v2);
}

uint64_t sub_1DC9BA358()
{
  sub_1DC9C05EC();
  sub_1DCAD2DD0();
  uint64_t v7 = v2;
  uint64_t v8 = v1;
  long long v3 = (_OWORD *)sub_1DC9C078C();
  uint64_t v4 = sub_1DC9C060C(v3);
  v0(v4);
  swift_retain();
  sub_1DC9B0020(v6);
  swift_release();
  swift_release();
  return sub_1DC9C07E4((uint64_t)v6);
}

uint64_t sub_1DC9BA3E4()
{
  sub_1DCAD2DD0();
  v3[3] = sub_1DC89C89C(0, qword_1EAAA34D8);
  v3[4] = &off_1F37F5EF0;
  v3[0] = v0;
  id v1 = v0;
  swift_retain();
  sub_1DC9B0020(v3);
  swift_release();
  swift_release();
  return sub_1DC9C07E4((uint64_t)v3);
}

uint64_t sub_1DC9BA484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1DC9C077C();
  sub_1DCAD2DD0();
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v10 = v6;
  uint64_t v11 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1DC9B0020(&v10);
  swift_release();
  swift_release();
  return sub_1DC9C07E4((uint64_t)&v10);
}

uint64_t sub_1DC9BA51C(uint64_t a1, char a2)
{
  sub_1DCAD2DD0();
  v4[3] = MEMORY[0x1E4FBB390];
  _OWORD v4[4] = &off_1F37F4970;
  LOBYTE(v4[0]) = a2;
  swift_retain();
  sub_1DC9B0020(v4);
  swift_release();
  swift_release();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DC9BA5AC()
{
  sub_1DC9C080C();
  sub_1DCAD2DD0();
  uint64_t v5 = v1;
  uint64_t v6 = v0;
  v4[0] = v2;
  swift_retain();
  sub_1DC9B0020(v4);
  swift_release();
  swift_release();
  return sub_1DC9C07E4((uint64_t)v4);
}

uint64_t sub_1DC9BA628()
{
  sub_1DC9C0720();
  uint64_t v5 = v1;
  uint64_t v6 = v0;
  sub_1DC8EF6AC(v4);
  sub_1DC9C0914();
  v2();
  swift_retain();
  sub_1DC9B0020(v4);
  swift_release();
  swift_release();
  return sub_1DC9C07E4((uint64_t)v4);
}

uint64_t sub_1DC9BA6C8()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1DC9BAAA8();
}

uint64_t sub_1DC9BA70C(uint64_t a1, unint64_t a2)
{
  void v6[3] = MEMORY[0x1E4F277C0];
  v6[4] = sub_1DC9B047C();
  v6[0] = a1;
  v6[1] = a2;
  sub_1DC8AF450(a1, a2);
  uint64_t v4 = sub_1DCB2912C(v6);
  sub_1DC8818D0((uint64_t)v6);
  return v4;
}

uint64_t sub_1DC9BA794()
{
  uint64_t v1 = sub_1DCB86BF8();
  void v5[3] = v1;
  _OWORD v5[4] = sub_1DC9C0244(&qword_1EAAA3410, MEMORY[0x1E4F27990]);
  uint64_t v2 = sub_1DC8EF6AC(v5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v1 - 8) + 16))(v2, v0, v1);
  uint64_t v3 = sub_1DCB2912C(v5);
  sub_1DC8818D0((uint64_t)v5);
  return v3;
}

uint64_t sub_1DC9BA870()
{
  v3[3] = &unk_1F37DF6F8;
  v3[4] = sub_1DC9BFF4C();
  v3[0] = swift_allocObject();
  memcpy((void *)(v3[0] + 16), v0, 0xC0uLL);
  sub_1DC9589C8((uint64_t)v0);
  uint64_t v1 = sub_1DCB2912C(v3);
  sub_1DC8818D0((uint64_t)v3);
  return v1;
}

uint64_t sub_1DC9BA914(uint64_t a1, uint64_t a2)
{
  void v6[3] = &type metadata for AccessibilitySoundActions.SoundAction;
  v6[4] = sub_1DC9C0370();
  v6[0] = a1;
  v6[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DCB2912C(v6);
  sub_1DC8818D0((uint64_t)v6);
  return v4;
}

uint64_t sub_1DC9BA998(char a1, uint64_t a2, uint64_t (*a3)(void))
{
  char v3 = a1 & 1;
  void v5[3] = a2;
  _OWORD v5[4] = a3();
  LOBYTE(v5[0]) = v3;
  sub_1DCB2912C(v5);
  sub_1DC8818D0((uint64_t)v5);
  return sub_1DC9C05A0();
}

uint64_t sub_1DC9BAA04()
{
  v3[3] = &unk_1F37E1CA8;
  v3[4] = sub_1DC9C0110();
  v3[0] = swift_allocObject();
  memcpy((void *)(v3[0] + 16), v0, 0x48uLL);
  sub_1DC9C019C((uint64_t)v0);
  uint64_t v1 = sub_1DCB2912C(v3);
  sub_1DC8818D0((uint64_t)v3);
  return v1;
}

uint64_t sub_1DC9BAAA8()
{
  v3[3] = &unk_1F37E2100;
  v3[4] = sub_1DC8CB588();
  v3[0] = swift_allocObject();
  memcpy((void *)(v3[0] + 16), v0, 0x60uLL);
  sub_1DC9BFD9C((uint64_t)v0);
  uint64_t v1 = sub_1DCB2912C(v3);
  sub_1DC8818D0((uint64_t)v3);
  return v1;
}

uint64_t sub_1DC9BAB4C()
{
  void v5[3] = &unk_1F37E2D68;
  _OWORD v5[4] = sub_1DC882FF0();
  uint64_t v1 = swift_allocObject();
  v5[0] = v1;
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_DWORD *)(v1 + 64) = *(_DWORD *)(v0 + 48);
  uint64_t v3 = sub_1DCB2912C(v5);
  sub_1DC8818D0((uint64_t)v5);
  return v3;
}

uint64_t sub_1DC9BABEC()
{
  uint64_t v4[3] = type metadata accessor for RemoteRequest();
  _OWORD v4[4] = sub_1DC9C0244(&qword_1EAAA0B08, (void (*)(uint64_t))type metadata accessor for RemoteRequest);
  uint64_t v1 = sub_1DC8EF6AC(v4);
  sub_1DC8EF710(v0, (uint64_t)v1);
  uint64_t v2 = sub_1DCB2912C(v4);
  sub_1DC8818D0((uint64_t)v4);
  return v2;
}

uint64_t sub_1DC9BACA0()
{
  void v6[3] = &unk_1F37EBE10;
  v6[4] = sub_1DC8825A8();
  uint64_t v1 = (_OWORD *)swift_allocObject();
  v6[0] = v1;
  long long v2 = v0[1];
  v1[1] = *v0;
  v1[2] = v2;
  long long v3 = v0[3];
  v1[3] = v0[2];
  v1[4] = v3;
  uint64_t v4 = sub_1DCB2912C(v6);
  sub_1DC8818D0((uint64_t)v6);
  return v4;
}

uint64_t sub_1DC9BAD38()
{
  v3[3] = &unk_1F37EF338;
  v3[4] = sub_1DC9BFDD4();
  v3[0] = swift_allocObject();
  memcpy((void *)(v3[0] + 16), v0, 0x68uLL);
  sub_1DC9BFE58((uint64_t)v0);
  uint64_t v1 = sub_1DCB2912C(v3);
  sub_1DC8818D0((uint64_t)v3);
  return v1;
}

uint64_t sub_1DC9BADDC()
{
  sub_1DC9C07FC();
  void v8[3] = v2;
  v8[4] = v3();
  uint64_t v4 = (_OWORD *)sub_1DC9C078C();
  v8[0] = v4;
  long long v5 = v1[1];
  v4[1] = *v1;
  v4[2] = v5;
  long long v6 = v1[3];
  uint64_t v4[3] = v1[2];
  _OWORD v4[4] = v6;
  v0(v1);
  sub_1DCB2912C(v8);
  sub_1DC8818D0((uint64_t)v8);
  return sub_1DC9C05A0();
}

uint64_t sub_1DC9BAE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4[3] = MEMORY[0x1E4FBB1A0];
  _OWORD v4[4] = MEMORY[0x1E4FBB1A8];
  v4[0] = a1;
  v4[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1DCB2912C(v4);
  sub_1DC8818D0((uint64_t)v4);
  return v2;
}

uint64_t sub_1DC9BAED8(char a1)
{
  v3[3] = MEMORY[0x1E4FBB390];
  v3[4] = MEMORY[0x1E4FBB398];
  LOBYTE(v3[0]) = a1;
  uint64_t v1 = sub_1DCB2912C(v3);
  sub_1DC8818D0((uint64_t)v3);
  return v1;
}

uint64_t sub_1DC9BAF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v4[4] = a3;
  uint64_t v4[3] = a2;
  v4[0] = a1;
  sub_1DCB2912C(v4);
  sub_1DC8818D0((uint64_t)v4);
  return sub_1DC9C05A0();
}

uint64_t sub_1DC9BAF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  void v7[3] = a1;
  v7[4] = v4;
  long long v5 = sub_1DC8EF6AC(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(v5, v2, a1);
  sub_1DCB2912C(v7);
  sub_1DC8818D0((uint64_t)v7);
  return sub_1DC9C05A0();
}

double sub_1DC9BB030@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BB0DC(a1);
}

double sub_1DC9BB048@<D0>(_OWORD *a1@<X8>)
{
  return sub_1DC9BCF54(a1);
}

void *sub_1DC9BB060@<X0>(void *a1@<X8>)
{
  return sub_1DC9BD000(a1);
}

uint64_t sub_1DC9BB078@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DC9BD0B4(a1);
}

uint64_t sub_1DC9BB090@<X0>(void *a1@<X8>)
{
  return sub_1DC9BD160(a1);
}

uint64_t sub_1DC9BB0A8()
{
  return sub_1DC9BD20C() & 1;
}

double sub_1DC9BB0C4@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BD2A8(a1);
}

double sub_1DC9BB0DC@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BD37C(a1);
}

float sub_1DC9BB0F4@<S0>(uint64_t a1@<X8>)
{
  return sub_1DC9BD468(a1);
}

uint64_t sub_1DC9BB10C(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  return swift_release();
}

double sub_1DC9BB1D4@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BD53C(a1);
}

double sub_1DC9BB1EC@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BD618(a1);
}

double sub_1DC9BB204@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BD6F4(a1);
}

double sub_1DC9BB21C@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1DC9BD7DC(a1).n128_u64[0];
  return result;
}

uint64_t sub_1DC9BB234()
{
  return sub_1DC9BD8B0();
}

uint64_t sub_1DC9BB24C()
{
  return sub_1DC9BD94C() & 1;
}

uint64_t sub_1DC9BB268()
{
  return sub_1DC9BD9EC();
}

uint64_t sub_1DC9BB280()
{
  return sub_1DC9BDA88();
}

uint64_t sub_1DC9BB298()
{
  return sub_1DCB29218();
}

uint64_t sub_1DC9BB2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1DC9C06FC(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  sub_1DC9C04E4();
  return sub_1DC9B6928();
}

uint64_t sub_1DC9BB304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B5488(a1, a2);
}

uint64_t sub_1DC9BB31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1DC9C06FC(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  sub_1DC9C04E4();
  return sub_1DC9B9CEC();
}

uint64_t sub_1DC9BB358()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BB3E4()
{
  return sub_1DC9BACA0();
}

double sub_1DC9BB410@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BB1EC(a1);
}

uint64_t sub_1DC9BB428()
{
  return sub_1DC9B6C04();
}

uint64_t sub_1DC9BB454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B5AA8(a1, a2);
}

uint64_t sub_1DC9BB46C()
{
  return sub_1DC9BA1E4();
}

uint64_t sub_1DC9BB498()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BB524()
{
  return sub_1DC9BB644();
}

uint64_t sub_1DC9BB564()
{
  sub_1DC9C0720();
  uint64_t v5 = v1;
  uint64_t v6 = v0;
  sub_1DC8EF6AC(v4);
  sub_1DC9C0914();
  v2();
  swift_retain();
  sub_1DC8849DC();
  swift_release();
  swift_release();
  return sub_1DC9C07E4((uint64_t)v4);
}

uint64_t sub_1DC9BB604()
{
  return sub_1DC9BB644();
}

uint64_t sub_1DC9BB644()
{
  sub_1DC9C0870();
  swift_getWitnessTable();
  uint64_t v1 = sub_1DC9C08EC();
  return v0(v1);
}

uint64_t sub_1DC9BB698()
{
  sub_1DC9C077C();
  uint64_t v3 = sub_1DC884350();
  (*(void (**)(void, void, uint64_t, uint64_t))(v1 + 16))(*(void *)(v3 + 32), *(void *)(v3 + 40), v2, v1);
  if (v0) {
    return swift_release();
  }
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  swift_retain();
  swift_retain();
  uint64_t v9 = sub_1DC89DCDC();
  sub_1DC884B30(v9, v10, v7, v8);
  swift_release();
  swift_release_n();
  return swift_release_n();
}

uint64_t sub_1DC9BB778()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC9C0890();
  uint64_t v2 = swift_task_alloc();
  sub_1DC9C0674(v2);
  swift_getWitnessTable();
  void *v1 = v0;
  v1[1] = sub_1DC9BB82C;
  sub_1DC9C0928();
  sub_1DC8BA86C();
  return sub_1DC9BB8EC();
}

uint64_t sub_1DC9BB82C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC8BA978();
  return v3();
}

uint64_t sub_1DC9BB8EC()
{
  sub_1DC8867A8();
  v0[3] = v1;
  v0[4] = v2;
  v0[2] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  void *v4 = v0;
  v4[1] = sub_1DC9BB980;
  return sub_1DC977FC0();
}

uint64_t sub_1DC9BB980()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 48) = v4;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC8BA978();
    return v5();
  }
  else
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
}

uint64_t sub_1DC9BBA80()
{
  sub_1DC8867A8();
  v0[7] = *(void *)(v0[6] + 24);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9BBB30;
  return sub_1DC965B08();
}

uint64_t sub_1DC9BBB30()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  void *v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9BBC14()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DC8BAB84();
  return v0();
}

uint64_t sub_1DC9BBC6C()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9BBCD0()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC9C0890();
  uint64_t v2 = swift_task_alloc();
  sub_1DC9C0674(v2);
  swift_getWitnessTable();
  void *v1 = v0;
  v1[1] = sub_1DC9C03F8;
  sub_1DC9C0928();
  sub_1DC8BA86C();
  return sub_1DC9BBD84();
}

uint64_t sub_1DC9BBD84()
{
  sub_1DC8867A8();
  v0[10] = v1;
  v0[11] = v2;
  v0[8] = v3;
  v0[9] = v4;
  v0[12] = *(void *)(v1 - 8);
  v0[13] = swift_task_alloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DC9BBE34()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  type metadata accessor for XPCProxyDecoder.SingleValueContainer();
  uint64_t inited = (void *)swift_initStackObject();
  v0[14] = inited;
  inited[2] = v2;
  inited[3] = v3;
  inited[4] = v4;
  inited[5] = v5;
  sub_1DC884F60(v2);
  uint64_t v8 = inited[2];
  uint64_t v7 = inited[3];
  v0[15] = v7;
  uint64_t v9 = inited[4];
  uint64_t v10 = inited[5];
  v0[16] = v10;
  sub_1DC884F60(v8);
  if (v8)
  {
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0[11] + 16)
                                                                              + **(int **)(v0[11] + 16));
    uint64_t v11 = (void *)swift_task_alloc();
    v0[17] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1DC9BC028;
    uint64_t v12 = v0[13];
    return v16(v12, v8, v7, v9, v10);
  }
  else
  {
    sub_1DC884E74();
    swift_allocError();
    *uint64_t v14 = 0;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    sub_1DC8BA978();
    return v15();
  }
}

uint64_t sub_1DC9BC028()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9BC104()
{
  sub_1DC88688C();
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[8];
  swift_release();
  swift_release();
  swift_setDeallocating();
  sub_1DC8866A0(*(void *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v2, v4);
  swift_task_dealloc();
  sub_1DC8BAB84();
  return v6();
}

uint64_t sub_1DC9BC1BC()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9BC234()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC8EC3C4;
  uint64_t v4 = sub_1DC8F02BC();
  return v5(v4);
}

uint64_t sub_1DC9BC2BC(uint64_t a1)
{
  return sub_1DC8E7E5C(a1, *v1, v1[1]);
}

uint64_t sub_1DC9BC2D8()
{
  return sub_1DC9BABEC();
}

uint64_t sub_1DC9BC2F0(uint64_t a1, uint64_t a2)
{
  return sub_1DC9BB10C(a1, a2, (void (*)(void))type metadata accessor for RemoteRequest, &qword_1EAAA0B00, (void (*)(uint64_t))type metadata accessor for RemoteRequest);
}

uint64_t sub_1DC9BC34C()
{
  return sub_1DC9B6B04();
}

uint64_t sub_1DC9BC364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B5770(a1, a2);
}

uint64_t sub_1DC9BC37C()
{
  return sub_1DC9B9C50();
}

uint64_t sub_1DC9BC394()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BC420()
{
  return sub_1DC9BADDC();
}

uint64_t sub_1DC9BC488()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

double sub_1DC9BC4C0@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BB1D4(a1);
}

uint64_t sub_1DC9BC4D8()
{
  return sub_1DC9B6DD8();
}

uint64_t sub_1DC9BC540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B5938(a1, a2);
}

uint64_t sub_1DC9BC558()
{
  return sub_1DC9BA358();
}

uint64_t sub_1DC9BC5B4()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BC640()
{
  return sub_1DC9BEA48();
}

uint64_t sub_1DC9BC66C()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC9C05D8();
  uint64_t v1 = swift_task_alloc();
  sub_1DC9C0648(v1);
  swift_getWitnessTable();
  sub_1DC9C07D4();
  *uint64_t v0 = v2;
  v0[1] = sub_1DC9C03FC;
  sub_1DC9C05B0();
  sub_1DC8BA86C();
  return sub_1DC9BB8EC();
}

double sub_1DC9BC718@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v5;
  *(void *)(inited + 24) = v4;
  sub_1DC9B4B1C(inited, &v8);
  if (!v2)
  {
    double result = *(double *)&v8;
    *a1 = v8;
  }
  return result;
}

uint64_t sub_1DC9BC77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_1DCB86BF8();
  sub_1DC88D538();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v11;
  *(void *)(inited + 24) = v10;
  uint64_t result = sub_1DC9B4C5C(inited, (uint64_t)v9);
  if (!v2) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(a1, v9, v4);
  }
  return result;
}

void *sub_1DC9BC860@<X0>(void *a1@<X8>)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v5;
  *(void *)(inited + 24) = v4;
  uint64_t result = sub_1DC9B4E64(inited, v8);
  if (!v2) {
    return memcpy(a1, v8, 0xC0uLL);
  }
  return result;
}

uint64_t sub_1DC9BC8DC()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = v1;
  uint64_t result = sub_1DC9B4FAC(inited, &v6);
  if (!v2) {
    *uint64_t v0 = v6;
  }
  return result;
}

uint64_t sub_1DC9BC930()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = sub_1DC9C04D4(inited);
  uint64_t result = sub_1DC9B50EC(v3, v4);
  if (!v1)
  {
    *uint64_t v0 = v6;
    v0[1] = v7;
  }
  return result;
}

uint64_t sub_1DC9BC97C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v2;
  *(void *)(inited + 24) = v1;
  return sub_1DC9B522C(inited) & 1;
}

__n128 sub_1DC9BC9D0()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = sub_1DC9C07C4(inited);
  sub_1DC9B5320(v3, v4);
  if (!v1)
  {
    *(void *)uint64_t v0 = v6;
    *(void *)(v0 + 8) = v7;
    *(_OWORD *)(v0 + 16) = v8;
    *(void *)(v0 + 32) = v9;
    *(void *)(v0 + 40) = v10;
    *(void *)(v0 + 48) = v11;
    __n128 result = v12;
    *(__n128 *)(v0 + 56) = v12;
  }
  return result;
}

__n128 sub_1DC9BCA44()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = sub_1DC9C04D4(inited);
  sub_1DC9B5488(v3, v4);
  if (!v1)
  {
    sub_1DC9C04F0(v10, v10, v11, v12, v13);
    v0[3].n128_u64[0] = v6;
    v0[3].n128_u64[1] = v7;
    v0[4].n128_u64[0] = v8;
    v0[4].n128_u8[8] = v9;
    __n128 result = v14;
    v0[5] = v14;
  }
  return result;
}

void sub_1DC9BCAB4()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = sub_1DC9C07C4(inited);
  sub_1DC9B5608(v3, v4);
  if (!v1)
  {
    sub_1DC9C0514(v7, v6, v7, v8, v9, v10);
    *(_DWORD *)(v0 + 48) = v5;
  }
}

uint64_t sub_1DC9BCB0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = type metadata accessor for RemoteRequest();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1DC89D970();
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v7;
  *(void *)(inited + 24) = v6;
  uint64_t result = sub_1DC9B5770(inited, v3);
  if (!v2) {
    return sub_1DC9C01E0(v3, a1);
  }
  return result;
}

double sub_1DC9BCBB8()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = sub_1DC9C04D4(inited);
  sub_1DC9B5938(v3, v4);
  if (!v1)
  {
    *(void *)uint64_t v0 = v6;
    *(void *)(v0 + 8) = v7;
    *(_OWORD *)(v0 + 16) = v8;
    *(void *)(v0 + 32) = v9;
    *(void *)(v0 + 40) = v10;
    double result = v11;
    *(double *)(v0 + 48) = v11;
    *(void *)(v0 + 56) = v12;
  }
  return result;
}

void sub_1DC9BCC34()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = sub_1DC9C04D4(inited);
  sub_1DC9B5AA8(v3, v4);
  if (!v1)
  {
    sub_1DC9C04F0(v7, v7, v8, v9, v10);
    *(unsigned char *)(v0 + 48) = v5;
    *(void *)(v0 + 56) = v6;
  }
}

void sub_1DC9BCC94()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = sub_1DC9C07C4(inited);
  sub_1DC9B5C18(v3, v4);
  if (!v1)
  {
    sub_1DC9C0514(v9, v8, v9, v10, v11, v12);
    *(_OWORD *)(v0 + 48) = v13;
    *(_OWORD *)(v0 + 64) = v14;
    *(void *)(v0 + 80) = v5;
    *(void *)(v0 + 88) = v6;
    *(void *)(v0 + 96) = v7;
  }
}

__n128 sub_1DC9BCD00()
{
  sub_1DC9C0434();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = sub_1DC9C04D4(inited);
  sub_1DC9B5D94(v3, v4);
  if (!v1)
  {
    __n128 result = v10;
    *(void *)uint64_t v0 = v6;
    *(void *)(v0 + 8) = v7;
    *(_OWORD *)(v0 + 16) = v8;
    *(void *)(v0 + 32) = v9;
    *(__n128 *)(v0 + 40) = v10;
    *(void *)(v0 + 56) = v11;
  }
  return result;
}

unint64_t *sub_1DC9BCD74()
{
  return sub_1DC9BCEEC(qword_1EAAA34D8);
}

uint64_t sub_1DC9BCD9C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v2;
  *(void *)(inited + 24) = v1;
  return sub_1DC9B5EFC(inited);
}

uint64_t sub_1DC9BCDEC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v2;
  *(void *)(inited + 24) = v1;
  return sub_1DC9B5FF4(inited) & 1;
}

uint64_t sub_1DC9BCE40()
{
  return sub_1DC9BCE6C((uint64_t (*)(uint64_t))sub_1DC9BD9EC);
}

uint64_t sub_1DC9BCE6C(uint64_t (*a1)(uint64_t))
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v3;
  return sub_1DC9B60E4(inited, a1);
}

unint64_t *sub_1DC9BCEC4()
{
  return sub_1DC9BCEEC((unint64_t *)&qword_1EAAA4DB0);
}

unint64_t *sub_1DC9BCEEC(unint64_t *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  type metadata accessor for XPCDataDecoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v4;
  *(void *)(inited + 24) = v3;
  return sub_1DC9B619C(inited, a1);
}

double sub_1DC9BCF54@<D0>(_OWORD *a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9BFD10();
  sub_1DCB86718();
  swift_release();
  if (!v1)
  {
    double result = *(double *)&v4;
    *a1 = v4;
  }
  return result;
}

void *sub_1DC9BD000@<X0>(void *a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9C0080();
  sub_1DCB86718();
  double result = (void *)swift_release();
  if (!v1) {
    return memcpy(a1, v4, 0xC0uLL);
  }
  return result;
}

uint64_t sub_1DC9BD0B4@<X0>(unsigned char *a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9C028C();
  sub_1DCB86718();
  uint64_t result = swift_release();
  if (!v1) {
    *a1 = v4;
  }
  return result;
}

uint64_t sub_1DC9BD160@<X0>(void *a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9C0324();
  sub_1DCB86718();
  uint64_t result = swift_release();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_1DC9BD20C()
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9BFC20();
  sub_1DCB86718();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

double sub_1DC9BD2A8@<D0>(uint64_t a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9BECD8();
  sub_1DCB86718();
  swift_release();
  if (!v1)
  {
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    double result = *(double *)&v10;
    *(_OWORD *)(a1 + 56) = v10;
  }
  return result;
}

double sub_1DC9BD37C@<D0>(uint64_t a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC8CB514();
  sub_1DCB86718();
  swift_release();
  if (!v1)
  {
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    *(unsigned char *)(a1 + 72) = v12;
    double result = *(double *)&v13;
    *(_OWORD *)(a1 + 80) = v13;
  }
  return result;
}

float sub_1DC9BD468@<S0>(uint64_t a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC88303C();
  sub_1DCB86718();
  swift_release();
  if (!v1)
  {
    float result = v9;
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(float *)(a1 + 48) = v9;
  }
  return result;
}

double sub_1DC9BD53C@<D0>(uint64_t a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC8828BC();
  sub_1DCB86718();
  swift_release();
  if (!v1)
  {
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    double result = v9;
    *(double *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
  }
  return result;
}

double sub_1DC9BD618@<D0>(uint64_t a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC8825F4();
  sub_1DCB86718();
  swift_release();
  if (!v1)
  {
    double result = v10;
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = v9;
    *(double *)(a1 + 56) = v10;
  }
  return result;
}

double sub_1DC9BD6F4@<D0>(uint64_t a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9BFB88();
  sub_1DCB86718();
  swift_release();
  if (!v1)
  {
    double result = v11;
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = v10;
    *(double *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    *(void *)(a1 + 96) = v13;
  }
  return result;
}

__n128 sub_1DC9BD7DC@<Q0>(uint64_t a1@<X8>)
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC88255C();
  sub_1DCB86718();
  swift_release();
  if (!v1)
  {
    __n128 result = v8;
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v7;
    *(__n128 *)(a1 + 40) = v8;
    *(void *)(a1 + 56) = v9;
  }
  return result;
}

uint64_t sub_1DC9BD8B0()
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DCB86718();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1DC9BD94C()
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DCB86718();
  swift_release();
  if (!v0) {
    char v1 = v3;
  }
  return v1 & 1;
}

uint64_t sub_1DC9BD9EC()
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DCB86718();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1DC9BDA88()
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DCB86718();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1DC9BDB24()
{
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9BEC8C();
  sub_1DCB86718();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1DC9BDBC0()
{
  sub_1DC87E988(&qword_1EAAA3188);
  sub_1DCB86738();
  swift_allocObject();
  sub_1DCB86728();
  sub_1DC9BFCA8(&qword_1EAAA3320, &qword_1EAAA3188, (void (*)(void))sub_1DC9BFC6C);
  sub_1DCB86718();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1DC9BDCA8()
{
  return sub_1DC9BA914(*v0, v0[1]);
}

uint64_t sub_1DC9BDCC4@<X0>(void *a1@<X8>)
{
  return sub_1DC9BB090(a1);
}

uint64_t sub_1DC9BDCDC(uint64_t a1)
{
  return sub_1DC9B66D4(a1, *v1, v1[1]);
}

uint64_t sub_1DC9BDCF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DC9B50EC(a1, a2);
}

uint64_t sub_1DC9BDD10(uint64_t a1)
{
  return sub_1DC9BA484(a1, *v1, v1[1], (uint64_t)&type metadata for AccessibilitySoundActions.SoundAction, (uint64_t)&off_1F37E07D8);
}

uint64_t sub_1DC9BDD3C()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  char v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BDDC8()
{
  memcpy(__dst, v0, sizeof(__dst));
  return sub_1DC9BAA04();
}

double sub_1DC9BDE0C@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BB0C4(a1);
}

uint64_t sub_1DC9BDE24(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC9C06B4(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1DC9C04E4();
  return sub_1DC9B6838();
}

uint64_t sub_1DC9BDE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B5320(a1, a2);
}

uint64_t sub_1DC9BDE78(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC9C06B4(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1DC9C04E4();
  return sub_1DC9BA068();
}

uint64_t sub_1DC9BDEB4()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  char v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BDF40()
{
  return sub_1DC9BA998(*v0, (uint64_t)&unk_1F37E1380, (uint64_t (*)(void))sub_1DC9BFBD4);
}

uint64_t sub_1DC9BDF78()
{
  uint64_t result = sub_1DC9BB0A8();
  if (!v0) {
    return sub_1DC9C0884(result);
  }
  return result;
}

uint64_t sub_1DC9BDFA4()
{
  return sub_1DC9B67A0();
}

uint64_t sub_1DC9BDFDC(uint64_t a1)
{
  uint64_t result = sub_1DC9B522C(a1);
  if (!v1) {
    return sub_1DC9C0884(result);
  }
  return result;
}

uint64_t sub_1DC9BE008()
{
  return sub_1DC9B9FE4();
}

uint64_t sub_1DC9BE034()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9BE0BC;
  uint64_t v4 = sub_1DC8F02BC();
  return v5(v4);
}

uint64_t sub_1DC9BE0BC()
{
  sub_1DC886900();
  char v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *__n128 v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(unsigned char **)(v5 + 16) = v3 & 1;
  }
  sub_1DC9C0414();
  return v9();
}

uint64_t sub_1DC9BE194()
{
  sub_1DC886900();
  *(void *)(v0 + 64) = v1;
  char v2 = (void *)sub_1DC8BAA00();
  *(void *)(v0 + 72) = v2;
  *char v2 = v0;
  v2[1] = sub_1DC9C03BC;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BE230()
{
  sub_1DC9C0764();
  return sub_1DC8E7D1C(v0);
}

uint64_t sub_1DC9BE25C()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1DC9BA870();
}

void *sub_1DC9BE2A0@<X0>(void *a1@<X8>)
{
  return sub_1DC9BB060(a1);
}

uint64_t sub_1DC9BE2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1DC9C06D8(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  sub_1DC9C04E4();
  return sub_1DC9B65E4();
}

void *sub_1DC9BE2F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DC9B4E64(a1, a2);
}

uint64_t sub_1DC9BE30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1DC9C06D8(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  sub_1DC9C04E4();
  return sub_1DC9B9F24();
}

uint64_t sub_1DC9BE348()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BE3D4()
{
  return sub_1DC9BA998(*v0, (uint64_t)&type metadata for AccessibilitySoundRecognition.Detection, (uint64_t (*)(void))sub_1DC9C02D8);
}

uint64_t sub_1DC9BE40C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1DC9BB078(a1);
}

uint64_t sub_1DC9BE424()
{
  return sub_1DC9B67A0();
}

uint64_t sub_1DC9BE45C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DC9B4FAC(a1, a2);
}

uint64_t sub_1DC9BE474()
{
  return sub_1DC9B9FE4();
}

uint64_t sub_1DC9BE4A0()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BE52C()
{
  return sub_1DC9BADDC();
}

double sub_1DC9BE594@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BB21C(a1);
}

uint64_t sub_1DC9BE5AC()
{
  return sub_1DC9B6DD8();
}

uint64_t sub_1DC9BE614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B5D94(a1, a2);
}

uint64_t sub_1DC9BE62C()
{
  return sub_1DC9BA358();
}

uint64_t sub_1DC9BE688()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BE714()
{
  sub_1DC886900();
  *(void *)(v0 + 64) = v1;
  uint64_t v2 = (void *)sub_1DC8BAA00();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC8FC064;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BE7B0()
{
  sub_1DC9C0764();
  return sub_1DC8E7D4C(v0);
}

void sub_1DC9BE7DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1DC9B4970(a1, a2, a3);
  if (!v4) {
    *a4 = v6;
  }
}

uint64_t sub_1DC9BE808()
{
  return sub_1DC9B4A28();
}

uint64_t sub_1DC9BE82C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1DC9B625C(a1, (uint64_t)&off_1F37F4F20, a2);
}

uint64_t sub_1DC9BE84C()
{
  return sub_1DC9B7088();
}

uint64_t sub_1DC9BE86C()
{
  sub_1DC886900();
  sub_1DC9C0754();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC9C05C4();
  return sub_1DC9B99D8();
}

uint64_t sub_1DC9BE904()
{
  return sub_1DC9BA628();
}

uint64_t sub_1DC9BE924@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1DC9B625C(a1, (uint64_t)&off_1F37F5590, a2);
}

uint64_t sub_1DC9BE944()
{
  return sub_1DC9B7088();
}

uint64_t sub_1DC9BE964()
{
  sub_1DC886900();
  sub_1DC9C0754();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  sub_1DC9C05C4();
  return sub_1DC9B99D8();
}

uint64_t sub_1DC9BE9FC()
{
  return sub_1DC9BA628();
}

uint64_t sub_1DC9BEA1C()
{
  return sub_1DC9BEA48();
}

uint64_t sub_1DC9BEA48()
{
  return sub_1DC9BB564();
}

uint64_t sub_1DC9BEA90()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC9C05D8();
  uint64_t v1 = swift_task_alloc();
  sub_1DC9C0648(v1);
  swift_getWitnessTable();
  sub_1DC9C07D4();
  *uint64_t v0 = v2;
  v0[1] = sub_1DC9BEB3C;
  sub_1DC9C05B0();
  sub_1DC8BA86C();
  return sub_1DC9BB8EC();
}

uint64_t sub_1DC9BEB3C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC8BA978();
  return v3();
}

uint64_t sub_1DC9BEBFC()
{
  return sub_1DC9BAED8(*v0);
}

uint64_t sub_1DC9BEC18()
{
  uint64_t result = sub_1DC9BB24C();
  if (!v0) {
    return sub_1DC9C0884(result);
  }
  return result;
}

uint64_t sub_1DC9BEC44(uint64_t a1)
{
  return sub_1DC9B6F44(a1, *v1);
}

uint64_t sub_1DC9BEC60(uint64_t a1)
{
  uint64_t result = sub_1DC9B5FF4(a1);
  if (!v1) {
    return sub_1DC9C0884(result);
  }
  return result;
}

unint64_t sub_1DC9BEC8C()
{
  unint64_t result = qword_1EAAA3290;
  if (!qword_1EAAA3290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3290);
  }
  return result;
}

unint64_t sub_1DC9BECD8()
{
  unint64_t result = qword_1EAAA3298;
  if (!qword_1EAAA3298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3298);
  }
  return result;
}

uint64_t sub_1DC9BED24(uint64_t a1)
{
  return sub_1DC9BA51C(a1, *v1);
}

uint64_t sub_1DC9BED40()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9BE0BC;
  uint64_t v4 = sub_1DC8F02BC();
  return v5(v4);
}

uint64_t sub_1DC9BEDC8()
{
  return sub_1DC9BAF44(*v0, MEMORY[0x1E4FBB808], MEMORY[0x1E4FBB810]);
}

uint64_t sub_1DC9BEDF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC9BB280();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DC9BEE20()
{
  return sub_1DC9B7004();
}

uint64_t sub_1DC9BEE4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9B60E4(a1, (uint64_t (*)(uint64_t))sub_1DC9BDA88);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9BEE8C()
{
  return sub_1DC9BA5AC();
}

uint64_t sub_1DC9BEEB8()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9C03C0;
  uint64_t v4 = sub_1DC8F02BC();
  return v5(v4);
}

uint64_t sub_1DC9BEF40()
{
  return sub_1DC9BAF44(*v0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB558]);
}

uint64_t sub_1DC9BEF6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC9BB268();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DC9BEF98()
{
  return sub_1DC9B7004();
}

uint64_t sub_1DC9BEFC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9B60E4(a1, (uint64_t (*)(uint64_t))sub_1DC9BD9EC);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9BF004()
{
  return sub_1DC9BA5AC();
}

uint64_t sub_1DC9BF030()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9BF0B8;
  uint64_t v4 = sub_1DC8F02BC();
  return v5(v4);
}

uint64_t sub_1DC9BF0B8()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *__n128 v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  sub_1DC9C0414();
  return v9();
}

uint64_t sub_1DC9BF18C()
{
  return sub_1DC9BAE64(*v0, v0[1]);
}

uint64_t sub_1DC9BF1A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC9BB234();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1DC9BF1D4(uint64_t a1)
{
  return sub_1DC9B6E78(a1, *v1, v1[1]);
}

uint64_t sub_1DC9BF1F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DC9B5EFC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1DC9BF21C(uint64_t a1)
{
  return sub_1DC9BA484(a1, *v1, v1[1], MEMORY[0x1E4FBB1A0], (uint64_t)&off_1F37F47D8);
}

uint64_t sub_1DC9BF248()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9C03F4;
  uint64_t v4 = sub_1DC8F02BC();
  return v5(v4);
}

uint64_t sub_1DC9BF2D0()
{
  return sub_1DC9BA70C(*(void *)v0, *(void *)(v0 + 8));
}

double sub_1DC9BF2EC@<D0>(_OWORD *a1@<X8>)
{
  return sub_1DC9BB048(a1);
}

uint64_t sub_1DC9BF304(uint64_t a1)
{
  return sub_1DC9B63EC(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_1DC9BF320@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1DC9B4B1C(a1, a2);
}

uint64_t sub_1DC9BF338(uint64_t a1)
{
  return sub_1DC9B9DAC(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_1DC9BF354()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D6930;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BF3E0()
{
  return sub_1DC9BA794();
}

uint64_t sub_1DC9BF3F8(uint64_t a1, uint64_t a2)
{
  return sub_1DC9BB10C(a1, a2, MEMORY[0x1E4F27990], &qword_1EAAA5D50, MEMORY[0x1E4F27990]);
}

uint64_t sub_1DC9BF454()
{
  return sub_1DC9B64BC();
}

uint64_t sub_1DC9BF46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B4C5C(a1, a2);
}

uint64_t sub_1DC9BF484()
{
  return sub_1DC9B9E54();
}

uint64_t sub_1DC9BF49C()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BF528()
{
  return sub_1DC9BF654();
}

uint64_t sub_1DC9BF568()
{
  sub_1DC8BA8A0();
  sub_1DC88688C();
  sub_1DC9C05D8();
  uint64_t v1 = swift_task_alloc();
  sub_1DC9C0648(v1);
  swift_getWitnessTable();
  sub_1DC9C07D4();
  *uint64_t v0 = v2;
  v0[1] = sub_1DC9C03FC;
  sub_1DC9C05B0();
  sub_1DC8BA86C();
  return sub_1DC9B99D8();
}

uint64_t sub_1DC9BF614()
{
  return sub_1DC9BF654();
}

uint64_t sub_1DC9BF654()
{
  sub_1DC9C0870();
  sub_1DC9C0844();
  uint64_t v1 = sub_1DC9C08EC();
  return v0(v1);
}

uint64_t sub_1DC9BF694@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DC9B625C(a1, WitnessTable, a2);
}

uint64_t sub_1DC9BF70C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DC9BAF98(a1, WitnessTable);
}

uint64_t sub_1DC9BF770()
{
  return sub_1DC9BB298();
}

uint64_t sub_1DC9BF7F4()
{
  sub_1DC8867A8();
  sub_1DC9C0470(v0);
  uint64_t v1 = sub_1DC8F022C();
  uint64_t v2 = (void *)sub_1DC8F04A0(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1DC9BF87C;
  uint64_t v4 = sub_1DC8F02BC();
  return v5(v4);
}

uint64_t sub_1DC9BF87C()
{
  sub_1DC8BABB4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_1DC886774();
  uint64_t v11 = v10;
  sub_1DC88679C();
  *uint64_t v12 = v11;
  uint64_t v13 = *v1;
  sub_1DC88678C();
  *long long v14 = v13;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v15 = *(void **)(v11 + 16);
    *uint64_t v15 = v9;
    v15[1] = v7;
    void v15[2] = v5;
    v15[3] = v3;
  }
  uint64_t v16 = *(uint64_t (**)(void))(v13 + 8);
  return v16();
}

uint64_t sub_1DC9BF978(uint64_t a1)
{
  return sub_1DC8E7F00(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1DC9BF998()
{
  return sub_1DC9BAB4C();
}

float sub_1DC9BF9C4@<S0>(uint64_t a1@<X8>)
{
  return sub_1DC9BB0F4(a1);
}

uint64_t sub_1DC9BF9DC()
{
  return sub_1DC9B6A18();
}

uint64_t sub_1DC9BFA08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B5608(a1, a2);
}

uint64_t sub_1DC9BFA20()
{
  return sub_1DC9BA128();
}

uint64_t sub_1DC9BFA4C()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

uint64_t sub_1DC9BFAD8()
{
  memcpy(__dst, v0, sizeof(__dst));
  return sub_1DC9BAD38();
}

double sub_1DC9BFB1C@<D0>(uint64_t a1@<X8>)
{
  return sub_1DC9BB204(a1);
}

uint64_t sub_1DC9BFB34(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC9C0690(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1DC9C04E4();
  return sub_1DC9B6CE8();
}

uint64_t sub_1DC9BFB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9B5C18(a1, a2);
}

unint64_t sub_1DC9BFB88()
{
  unint64_t result = qword_1EAAAB8C0;
  if (!qword_1EAAAB8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAAB8C0);
  }
  return result;
}

unint64_t sub_1DC9BFBD4()
{
  unint64_t result = qword_1EAAA32F8;
  if (!qword_1EAAA32F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA32F8);
  }
  return result;
}

unint64_t sub_1DC9BFC20()
{
  unint64_t result = qword_1EAAA3300;
  if (!qword_1EAAA3300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3300);
  }
  return result;
}

uint64_t sub_1DC9BFC6C()
{
  return sub_1DC9BFCA8((unint64_t *)&unk_1EAAA3328, (uint64_t *)&unk_1EAAA2640, (void (*)(void))sub_1DC9BFD10);
}

uint64_t sub_1DC9BFCA8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(a2);
    a3();
    sub_1DC89DCDC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC9BFD10()
{
  unint64_t result = qword_1EAAA3338;
  if (!qword_1EAAA3338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3338);
  }
  return result;
}

uint64_t sub_1DC9BFD5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC9BFD9C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1DC9BFDD4()
{
  unint64_t result = qword_1EAAA3358;
  if (!qword_1EAAA3358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3358);
  }
  return result;
}

uint64_t sub_1DC9BFE20()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC9BFE58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC9BFE84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_1DC9C0690(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1DC9C04E4();
  return sub_1DC9BA298();
}

uint64_t sub_1DC9BFEC0()
{
  sub_1DC886900();
  sub_1DC9C0490();
  uint64_t v0 = sub_1DC8BAA00();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9C0400();
  return v4(v3);
}

unint64_t sub_1DC9BFF4C()
{
  unint64_t result = qword_1EAAA3368;
  if (!qword_1EAAA3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3368);
  }
  return result;
}

uint64_t sub_1DC9BFF98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_1DC9C0080()
{
  unint64_t result = qword_1EAAA3370;
  if (!qword_1EAAA3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3370);
  }
  return result;
}

uint64_t sub_1DC9C00CC()
{
  return swift_deallocObject();
}

uint64_t sub_1DC9C0104()
{
  return sub_1DC88389C();
}

unint64_t sub_1DC9C0110()
{
  unint64_t result = qword_1EAAA33B0;
  if (!qword_1EAAA33B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA33B0);
  }
  return result;
}

uint64_t sub_1DC9C015C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC9C019C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DC9C01D4()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC9C01E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC9C0244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC9C028C()
{
  unint64_t result = qword_1EAAA3488;
  if (!qword_1EAAA3488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3488);
  }
  return result;
}

unint64_t sub_1DC9C02D8()
{
  unint64_t result = qword_1EAAA34A0;
  if (!qword_1EAAA34A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA34A0);
  }
  return result;
}

unint64_t sub_1DC9C0324()
{
  unint64_t result = qword_1EAAA3C40;
  if (!qword_1EAAA3C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3C40);
  }
  return result;
}

unint64_t sub_1DC9C0370()
{
  unint64_t result = qword_1EAAA34C0;
  if (!qword_1EAAA34C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA34C0);
  }
  return result;
}

void sub_1DC9C03C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
}

uint64_t sub_1DC9C03DC()
{
  return sub_1DC9BE808();
}

uint64_t sub_1DC9C0400()
{
  return v0;
}

uint64_t sub_1DC9C0414()
{
  return v0 + 8;
}

uint64_t sub_1DC9C0434()
{
  return type metadata accessor for XPCDataDecoder();
}

uint64_t sub_1DC9C0454()
{
  return swift_retain();
}

uint64_t sub_1DC9C0470(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

__n128 sub_1DC9C047C()
{
  return v0[2];
}

__n128 sub_1DC9C049C()
{
  return v0[2];
}

__n128 sub_1DC9C04BC()
{
  return v0[2];
}

uint64_t sub_1DC9C04D4(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_1DC9C04E4()
{
  return v0;
}

void sub_1DC9C04F0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, long long a4, uint64_t a5)
{
  *(void *)uint64_t v6 = a1;
  *(void *)(v6 + 8) = a3;
  *(_OWORD *)(v6 + 16) = a4;
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = v5;
}

void sub_1DC9C0514(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, long long a5, uint64_t a6)
{
  *(void *)uint64_t v7 = a1;
  *(void *)(v7 + 8) = a4;
  *(_OWORD *)(v7 + 16) = a5;
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = v6;
}

void sub_1DC9C0538(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, long long a4, uint64_t a5)
{
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = a3;
  *(_OWORD *)(a1 + 16) = a4;
  *(void *)(a1 + 32) = a5;
  *(void *)(a1 + 40) = v6;
}

void sub_1DC9C055C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, long long a5, uint64_t a6)
{
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = a4;
  *(_OWORD *)(a1 + 16) = a5;
  *(void *)(a1 + 32) = a6;
  *(void *)(a1 + 40) = v7;
}

uint64_t sub_1DC9C0580(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_1DC8818D0((uint64_t)va);
}

uint64_t sub_1DC9C05A0()
{
  return v0;
}

uint64_t sub_1DC9C05B0()
{
  return v0;
}

uint64_t sub_1DC9C05C4()
{
  return v0;
}

_OWORD *sub_1DC9C060C(_OWORD *a1)
{
  long long v2 = v1[1];
  a1[1] = *v1;
  a1[2] = v2;
  long long v3 = v1[3];
  a1[3] = v1[2];
  a1[4] = v3;
  return v1;
}

uint64_t sub_1DC9C062C()
{
  return swift_retain();
}

uint64_t sub_1DC9C0648(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  *(void *)(v1 + 16) = v2;
  return result;
}

uint64_t sub_1DC9C065C()
{
  return sub_1DC881920(v0, v1);
}

int8x16_t sub_1DC9C0674(uint64_t a1)
{
  int8x16_t v3 = *(int8x16_t *)(v1 - 16);
  v2[2].i64[0] = a1;
  int8x16_t result = vextq_s8(v3, v3, 8uLL);
  v2[1] = result;
  return result;
}

void *sub_1DC9C0690(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, v10, 0x68uLL);
}

void *sub_1DC9C06B4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, v10, 0x48uLL);
}

void *sub_1DC9C06D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return memcpy(&a9, v9, 0xC0uLL);
}

void *sub_1DC9C06FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return memcpy(&a9, v9, 0x60uLL);
}

uint64_t sub_1DC9C0720()
{
  return sub_1DCAD2DD0();
}

__n128 sub_1DC9C0764()
{
  return v0[2];
}

uint64_t sub_1DC9C078C()
{
  return swift_allocObject();
}

uint64_t sub_1DC9C07A8()
{
  return sub_1DC9AF8E8(v0, v1);
}

uint64_t sub_1DC9C07C4(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_1DC9C07E4(uint64_t a1)
{
  return sub_1DC8818D0(a1);
}

uint64_t sub_1DC9C0824()
{
  return swift_retain();
}

uint64_t sub_1DC9C0844()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DC9C0884(uint64_t result)
{
  unsigned char *v1 = result & 1;
  return result;
}

uint64_t sub_1DC9C08A4()
{
  return sub_1DC8AF450(v0, v1);
}

uint64_t sub_1DC9C08BC()
{
  return sub_1DC88668C(v0, v1);
}

uint64_t sub_1DC9C08D4(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1DC9C08EC()
{
  return v0;
}

uint64_t sub_1DC9C0900(uint64_t result)
{
  *(void *)(result + 16) = v1;
  *(void *)(result + 24) = v2;
  return result;
}

uint64_t sub_1DC9C0928()
{
  return v0;
}

uint64_t sub_1DC9C093C(void (*a1)(void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  v9[3] = sub_1DC87E988(&qword_1EAAA3580);
  v9[4] = sub_1DC9C24F0();
  v9[0] = &unk_1EAAA3578;
  v9[1] = v7;
  swift_retain();
  swift_retain();
  a1(v9);
  swift_release();
  return sub_1DC8818D0((uint64_t)v9);
}

uint64_t static ExampleRemoteWorkload.Request.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1DC9C0A14(uint64_t a1)
{
  unint64_t v2 = sub_1DC9C0B9C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9C0A50(uint64_t a1)
{
  unint64_t v2 = sub_1DC9C0B9C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ExampleRemoteWorkload.Request.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA34F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9C0B9C();
  sub_1DCB892B8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1DC9C0B9C()
{
  unint64_t result = qword_1EAAA34F8;
  if (!qword_1EAAA34F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA34F8);
  }
  return result;
}

uint64_t ExampleRemoteWorkload.Request.hashValue.getter()
{
  return sub_1DCB891F8();
}

uint64_t ExampleRemoteWorkload.Request.init(from:)(uint64_t a1)
{
  return sub_1DC8818D0(a1);
}

uint64_t sub_1DC9C0C48(uint64_t a1)
{
  return ExampleRemoteWorkload.Request.init(from:)(a1);
}

uint64_t sub_1DC9C0C60(void *a1)
{
  return ExampleRemoteWorkload.Request.encode(to:)(a1);
}

uint64_t sub_1DC9C0C78()
{
  return ExampleRemoteWorkload.Request.hashValue.getter();
}

uint64_t sub_1DC9C0C90()
{
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  v7[2] = sub_1DC9C22C4;
  void v7[3] = sub_1DCAD3260();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  swift_retain();
  swift_retain();
  sub_1DC9C093C((void (*)(void *))sub_1DC9C22DC, (uint64_t)v7, (uint64_t)&unk_1EAAA3568, v5);
  swift_release();
  swift_release();
  if (v1) {
    return swift_release();
  }
  void v8[3] = MEMORY[0x1E4FBB550];
  v8[4] = &off_1F37F4A00;
  v8[0] = v4;
  sub_1DCAD3334(v8);
  swift_release();
  return sub_1DC8818D0((uint64_t)v8);
}

uint64_t sub_1DC9C0DBC(void *a1, void (*a2)(uint64_t *))
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = sub_1DC881A8C(a1, v3);
  void v8[3] = v3;
  v8[4] = *(void *)(v4 + 8);
  uint64_t v6 = sub_1DC8EF6AC(v8);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(v6, v5, v3);
  a2(v8);
  return sub_1DC8818D0((uint64_t)v8);
}

uint64_t sub_1DC9C0E70(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1DC8F0054;
  return v5();
}

uint64_t sub_1DC9C0F40()
{
  sub_1DC886900();
  *(void *)(v0 + 40) = v1;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC9C0FF4;
  return sub_1DC9C10F8();
}

uint64_t sub_1DC9C0FF4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 56) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9C10D0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1DC9C10F8()
{
  sub_1DC8867A8();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DC9C1188;
  return sub_1DC9780D0();
}

uint64_t sub_1DC9C1188()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DC9C126C()
{
  sub_1DC8867A8();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EAAA90C8 + dword_1EAAA90C8);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9C1318;
  return v3();
}

uint64_t sub_1DC9C1318(uint64_t a1, uint64_t a2)
{
  sub_1DC886774();
  uint64_t v7 = v6;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  uint64_t v9 = *v3;
  sub_1DC88678C();
  void *v10 = v9;
  v7[8] = v2;
  swift_task_dealloc();
  if (!v2)
  {
    v7[9] = a2;
    v7[10] = a1;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1DC9C1418()
{
  sub_1DC886900();
  uint64_t v1 = (int8x16_t *)swift_allocObject();
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 72), *(int8x16_t *)(v0 + 72), 8uLL);
  swift_release();
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 88) = v2;
  *(void *)(v2 + 16) = &unk_1EAAA3548;
  *(void *)(v2 + 24) = v1;
  uint64_t v5 = (uint64_t (*)(void))((char *)&dword_1EAAA90C0 + dword_1EAAA90C0);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DC9C1520;
  return v5();
}

uint64_t sub_1DC9C1520()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_release();
  }
  else {
    *(void *)(v5 + 112) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9C1618()
{
  sub_1DC8867A8();
  swift_release_n();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9C1680()
{
  sub_1DC886900();
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[11];
  uint64_t v3 = (void *)v0[2];
  swift_release();
  swift_release();
  *uint64_t v3 = &unk_1EAAA3558;
  v3[1] = v2;
  v3[2] = v1;
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1DC9C171C()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9C178C(int *a1)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC9C1868;
  return v4(v1 + 16);
}

uint64_t sub_1DC9C1868()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 16);
    uint64_t v10 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v10(v9);
  }
}

uint64_t sub_1DC9C1978()
{
  return sub_1DC9C0C90();
}

uint64_t sub_1DC9C1990()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D6930;
  return sub_1DC9C0F40();
}

uint64_t sub_1DC9C1AB0()
{
  sub_1DC886900();
  v0[5] = &unk_1F37E2448;
  v0[6] = &off_1F37E2428;
  sub_1DC881A8C(v0 + 2, (uint64_t)&unk_1F37E2448);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EAA9E460 + dword_1EAA9E460);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9C1B94;
  uint64_t v2 = v0[12];
  return v4((uint64_t)(v0 + 7), v2);
}

uint64_t sub_1DC9C1B94()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9C1C70()
{
  sub_1DC8867A8();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 56);
  *(void *)(v2 + 16) = v3;
  sub_1DC8865D4(v1);
  sub_1DC8818D0(v0 + 16);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1DC9C1CF8()
{
  sub_1DC8867A8();
  sub_1DC8865D4(*(void *)(v0 + 96));
  sub_1DC8818D0(v0 + 16);
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

unint64_t sub_1DC9C1D70()
{
  unint64_t result = qword_1EAAA3508;
  if (!qword_1EAAA3508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3508);
  }
  return result;
}

void type metadata accessor for ExampleRemoteWorkload()
{
}

void type metadata accessor for ExampleRemoteWorkload.Request()
{
}

void *sub_1DC9C1DD8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  return a1;
}

void *assignWithCopy for ExampleRemoteWorkload.Session(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for ExampleRemoteWorkload.Session(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

void type metadata accessor for ExampleRemoteWorkload.Session()
{
}

ValueMetadata *type metadata accessor for ExampleRemoteWorkload.Request.CodingKeys()
{
  return &type metadata for ExampleRemoteWorkload.Request.CodingKeys;
}

unint64_t sub_1DC9C1EC0()
{
  unint64_t result = qword_1EAAA3518;
  if (!qword_1EAAA3518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3518);
  }
  return result;
}

unint64_t sub_1DC9C1F10()
{
  unint64_t result = qword_1EAAA3520;
  if (!qword_1EAAA3520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3520);
  }
  return result;
}

uint64_t sub_1DC9C1F5C()
{
  sub_1DC886854();
  return MEMORY[0x1F4188298](v0, v1, v2);
}

uint64_t sub_1DC9C1F7C()
{
  sub_1DC8867A8();
  unint64_t v1 = sub_1DC956DCC(0xFFFFFFFFFFFFFFFFLL) ^ 0x8000000000000000;
  uint64_t v2 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1DC9C1FE0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC8F0054;
  return sub_1DC96496C();
}

uint64_t sub_1DC9C2080()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9C20B8()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC99A43C();
  return v4(v3);
}

uint64_t sub_1DC9C2150()
{
  sub_1DC886900();
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1DC9C21F8;
  uint64_t v4 = (uint64_t (*)(int *))((char *)&dword_1EAAA3550 + dword_1EAAA3550);
  return v4(v2);
}

uint64_t sub_1DC9C21F8()
{
  sub_1DC8867A8();
  uint64_t v2 = v1;
  sub_1DC886774();
  uint64_t v3 = *v0;
  sub_1DC88678C();
  void *v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_1DC9C22C4(void *a1)
{
  return sub_1DCAD3334(a1);
}

uint64_t sub_1DC9C22DC(void *a1)
{
  return sub_1DC9C0DBC(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1DC9C22F8()
{
  sub_1DC886900();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC99A43C();
  return v4(v3);
}

uint64_t sub_1DC9C2390(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1DC8EFD70;
  return sub_1DC885990();
}

uint64_t sub_1DC9C2430(uint64_t a1)
{
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC886800(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC8D6930;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EAAA3570 + dword_1EAAA3570);
  return v5(a1);
}

unint64_t sub_1DC9C24F0()
{
  unint64_t result = qword_1EAAA3588;
  if (!qword_1EAAA3588)
  {
    sub_1DC8863A8(&qword_1EAAA3580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3588);
  }
  return result;
}

uint64_t _s18SharedMemoryClientCMa()
{
  return self;
}

uint64_t sub_1DC9C2594(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA15D0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v1);
  sub_1DC8A22D0();
  sub_1DC87E988(&qword_1EAAA35C8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC88D550();
  uint64_t v3 = sub_1DC87E988(&qword_1EAAAAB90);
  MEMORY[0x1F4188790](v3 - 8);
  sub_1DC88D550();
  uint64_t v40 = v4;
  sub_1DC87E988(&qword_1EAAA35D0);
  sub_1DC89D4E0();
  uint64_t v44 = v6;
  uint64_t v45 = v5;
  MEMORY[0x1F4188790](v5);
  sub_1DC88D550();
  uint64_t v41 = v7;
  uint64_t v43 = sub_1DC87E988(&qword_1EAAA35D8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  uint64_t v42 = v9;
  sub_1DCB86BF8();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC8A22D0();
  sub_1DCB884C8();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v11);
  sub_1DC8A22D0();
  uint64_t v12 = sub_1DCB875B8();
  MEMORY[0x1F4188790](v12 - 8);
  sub_1DC89D9A0();
  uint64_t v13 = sub_1DCB884D8();
  sub_1DC89D4E0();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  sub_1DC8A22D0();
  uint64_t v19 = v18 - v17;
  sub_1DC9C573C();
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v19, *MEMORY[0x1E4FBCC68], v13);
  sub_1DCB875A8();
  sub_1DC9C58A8((unint64_t *)&qword_1EAA9D0F0, MEMORY[0x1E4FBCC10]);
  sub_1DC87E988((uint64_t *)&unk_1EAA9D0D0);
  sub_1DC88CF34((unint64_t *)&qword_1EAA9D0E0, (uint64_t *)&unk_1EAA9D0D0);
  sub_1DCB88928();
  uint64_t v20 = (void *)sub_1DCB88508();
  sub_1DCB86BE8();
  uint64_t v21 = sub_1DC886810();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = v20;
  uint64_t v22 = sub_1DC886810();
  *(void *)(v22 + 16) = sub_1DC9C57B4;
  *(void *)(v22 + 24) = v21;
  swift_bridgeObjectRetain();
  id v23 = v20;
  sub_1DC87E988(&qword_1EAAA35E0);
  sub_1DC88CF34(&qword_1EAAA35E8, &qword_1EAAA35E0);
  sub_1DCB87378();
  sub_1DC9454C0();
  sub_1DC88D5C8();
  v24();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v23;
  uint64_t v26 = sub_1DC886810();
  *(void *)(v26 + 16) = sub_1DC9C57F4;
  *(void *)(v26 + 24) = v25;
  id v39 = v23;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA35F0);
  sub_1DC88CF34(&qword_1EAAA35F8, &qword_1EAAA35C8);
  sub_1DC88CF34(&qword_1EAAA3600, &qword_1EAAA35F0);
  sub_1DCB874D8();
  swift_release();
  swift_release();
  sub_1DC88D5C8();
  v27();
  sub_1DCB88A98();
  swift_bridgeObjectRelease();
  sub_1DC9C58A8(&qword_1EAAA41A0, MEMORY[0x1E4F27990]);
  sub_1DCB88F98();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB04E7C();
  swift_bridgeObjectRelease();
  sub_1DC88CC04(v40, &qword_1EAAAAB90);
  sub_1DCB88A98();
  swift_bridgeObjectRelease();
  sub_1DCB88F98();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = 0;
  *(void *)(v28 + 24) = 0xD00000000000001FLL;
  *(void *)(v28 + 32) = 0x80000001DCB94B00;
  *(void *)(v28 + 40) = 60;
  unint64_t v29 = (void *)swift_allocObject();
  v29[2] = 0;
  void v29[3] = sub_1DC9C5928;
  v29[4] = v28;
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = sub_1DC9C5968;
  void v30[3] = v29;
  v30[4] = 60;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v42, v41, v45);
  id v31 = (void *)(v42 + *(int *)(v43 + 52));
  *id v31 = sub_1DC9F8560;
  v31[1] = 0;
  id v32 = (void *)(v42 + *(int *)(v43 + 56));
  *id v32 = sub_1DC9C59A4;
  v32[1] = v30;
  sub_1DC88D5C8();
  v33();
  sub_1DC88CF34(&qword_1EAAA3608, &qword_1EAAA35D8);
  uint64_t v34 = sub_1DCB87468();
  sub_1DC87E988(&qword_1EAAA3610);
  sub_1DC886810();
  sub_1DC9C55FC(v34);
  sub_1DC88CC04(v42, &qword_1EAAA35D8);
  sub_1DC88CF34(&qword_1EAAA3618, &qword_1EAAA3610);
  uint64_t v35 = sub_1DCB873A8();
  swift_release();

  sub_1DC88D5C8();
  v36();
  type metadata accessor for SharedHIDReportStream.Instance();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v35;
  return result;
}

uint64_t sub_1DC9C2E68(void (*a1)(uint64_t))
{
  sub_1DC87E988(&qword_1EAAA3590);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA3598);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC89D970();
  if (qword_1EAA9D1E8 != -1) {
    swift_once();
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  a1(v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_1DC8CDF94();
    sub_1DC87E988(&qword_1EAA9EBB0);
    type metadata accessor for SNAOPReport(0);
    sub_1DC88CF34(&qword_1EAA9EBB8, &qword_1EAA9EBB0);
    sub_1DC9C6244();
    sub_1DCB874A8();
    swift_release();
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    sub_1DC88CF34(&qword_1EAAA35A0, &qword_1EAAA3590);
    sub_1DCB874A8();
    sub_1DC88D5C8();
    v7();
    sub_1DC88CF34(&qword_1EAAA35A8, &qword_1EAAA3598);
    uint64_t v8 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAA35B0);
    sub_1DC886810();
    sub_1DC9C55FC(v8);
    sub_1DC88D5C8();
    v9();
    sub_1DC88CF34(&qword_1EAAA35B8, &qword_1EAAA35B0);
    uint64_t v10 = sub_1DCB873A8();
    swift_release();
    swift_release();
    type metadata accessor for SharedAOPReportStream.Instance();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v10;
  }
  return result;
}

id *sub_1DC9C3180@<X0>(id *result@<X0>, void *a2@<X8>)
{
  if (*((unsigned char *)result + 8) == 1)
  {
    id v3 = *result;
    uint64_t result = (id *)*result;
  }
  else
  {
    id v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1DC9C31D0@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA3620);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1DC9C5A70;
  *(void *)(v12 + 24) = v11;
  id v13 = v10;
  id v14 = a2;
  sub_1DC87E988(&qword_1EAAA3628);
  sub_1DC88CF34(&qword_1EAAA3630, &qword_1EAAA3628);
  sub_1DCB87378();
  sub_1DC88CF34(&qword_1EAAA3638, &qword_1EAAA3620);
  uint64_t v15 = sub_1DCB873A8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v15;
  return result;
}

void sub_1DC9C33A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  unint64_t v2 = *(void *)(a1 + 40);
  switch(v2 >> 62)
  {
    case 1uLL:
      if (v1 >> 32 < (int)v1)
      {
        __break(1u);
        JUMPOUT(0x1DC9C351CLL);
      }
      swift_retain();
      sub_1DC9C56A4((int)v1);
      sub_1DC881920(v1, v2);
      break;
    case 2uLL:
      uint64_t v3 = *(void *)(v1 + 16);
      swift_retain();
      swift_retain();
      sub_1DC9C56A4(v3);
      swift_release();
      swift_release();
      break;
    default:
      sub_1DC9E2DE0();
      break;
  }
}

uint64_t sub_1DC9C352C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SNAOPReport.Payload(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SNAOPReport(0);
  sub_1DC9C5E70(a1 + *(int *)(v7 + 28), (uint64_t)v6, (void (*)(void))type metadata accessor for SNAOPReport.Payload);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_1DC9C5ED0((uint64_t)v6, a2, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
  }
  int v8 = *(_DWORD *)v6;
  uint64_t v10 = *((void *)v6 + 1);
  uint64_t v9 = *((void *)v6 + 2);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1DCB86FE8();
  sub_1DC89F57C(v11, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1DCB86FC8();
  os_log_type_t v13 = sub_1DCB88468();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)id v14 = 138412290;
    v22[1] = v14 + 4;
    sub_1DC9C5658();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = v8;
    *(void *)(v16 + 8) = v10;
    *(void *)(v16 + 16) = v9;
    swift_bridgeObjectRetain();
    int v17 = v8;
    uint64_t v18 = v10;
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    v22[3] = v19;
    sub_1DCB88778();
    *uint64_t v15 = v19;
    uint64_t v10 = v18;
    int v8 = v17;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v12, v13, "Received AOP error: %@", v14, 0xCu);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v15, -1, -1);
    MEMORY[0x1E01A99C0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1DC9C5658();
  swift_allocError();
  *(_DWORD *)uint64_t v21 = v8;
  *(void *)(v21 + 8) = v10;
  *(void *)(v21 + 16) = v9;
  return swift_willThrow();
}

uint64_t sub_1DC9C3808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SNAOPReport.SuccessPayload(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC9C5E70(a1, (uint64_t)v6, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = 1;
  }
  else
  {
    sub_1DC9C5ED0((uint64_t)v6, a2, (void (*)(void))type metadata accessor for AOPClassificationResult);
    uint64_t v7 = 0;
  }
  uint64_t v8 = type metadata accessor for AOPClassificationResult();
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, v7, 1, v8);
}

uint64_t sub_1DC9C3910()
{
  uint64_t result = sub_1DCB877D8();
  qword_1EAAFF8F0 = result;
  return result;
}

void sub_1DC9C3950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA3650);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F64D00]), sel_initWithOptions_, 8);
  uint64_t v9 = (void *)sub_1DCB87788();
  objc_msgSend(v8, sel_setDeviceMatching_, v9);

  objc_msgSend(v8, sel_setDispatchQueue_, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_1DC9C5D38;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC9C3CC0;
  aBlock[3] = &unk_1F37FFFC0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v8, sel_setDeviceNotificationHandler_, v12);
  _Block_release(v12);
  *(void *)(swift_allocObject() + 16) = v8;
  id v13 = v8;
  sub_1DCB87F58();
  objc_msgSend(v13, sel_activate);
}

uint64_t sub_1DC9C3BC4(void *a1, char a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA3658);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = a1;
  char v11 = a2;
  id v8 = a1;
  sub_1DC87E988(&qword_1EAAA3650);
  sub_1DCB87F68();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1DC9C3CC0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_1DC9C3D34(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v20 = a1;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA3640);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a2, sel_open);
  objc_msgSend(a2, sel_setDispatchQueue_, a3);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21(v9, a1, v6);
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  v19[1] = v10 | 7;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v12(v11 + ((v10 + 16) & ~v10), v9, v6);
  uint64_t v26 = sub_1DC9C5A8C;
  uint64_t v27 = v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_1DC9C4184;
  uint64_t v25 = &unk_1F37FAA30;
  id v13 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(a2, sel_setInputReportHandler_, v13);
  _Block_release(v13);
  v21(v9, v20, v6);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  v12(v14 + ((v10 + 24) & ~v10), v9, v6);
  uint64_t v26 = sub_1DC9C5BE0;
  uint64_t v27 = v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_1DC9C881C;
  uint64_t v25 = &unk_1F37FB020;
  uint64_t v15 = _Block_copy(&aBlock);
  id v16 = a2;
  swift_release();
  objc_msgSend(v16, sel_setRemovalHandler_, v15);
  _Block_release(v15);
  *(void *)(swift_allocObject() + 16) = v16;
  id v17 = v16;
  sub_1DCB87F58();
  return objc_msgSend(v17, sel_activate);
}

uint64_t sub_1DC9C4058(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA3648);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = a1;
  v18[1] = a2;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  v18[5] = a6;
  id v16 = a1;
  sub_1DC8AF450(a5, a6);
  sub_1DC87E988(&qword_1EAAA3640);
  sub_1DCB87F68();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1DC9C4184(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  id v12 = a2;
  id v13 = a6;
  uint64_t v14 = sub_1DCB86AD8();
  unint64_t v16 = v15;

  v11(v12, a3, a4, a5, v14, v16);
  sub_1DC881920(v14, v16);

  return swift_release();
}

uint64_t sub_1DC9C424C(void *a1)
{
  return sub_1DCB87F78();
}

uint64_t static HIDUtils.standaloneAOPReportStream()()
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA3590);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC89D9A0();
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA3598);
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC89D970();
  if (qword_1EAA9D1E8 != -1) {
    swift_once();
  }
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1DC9C2594(v9);
  swift_bridgeObjectRelease();
  sub_1DC8CDF94();
  sub_1DC87E988(&qword_1EAA9EBB0);
  type metadata accessor for SNAOPReport(0);
  sub_1DC88CF34(&qword_1EAA9EBB8, &qword_1EAA9EBB0);
  sub_1DC9C6244();
  sub_1DCB874A8();
  swift_release();
  type metadata accessor for SNAOPReport.SuccessPayload(0);
  sub_1DC88CF34(&qword_1EAAA35A0, &qword_1EAAA3590);
  sub_1DCB874A8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  sub_1DC88CF34(&qword_1EAAA35A8, &qword_1EAAA3598);
  uint64_t v10 = sub_1DCB87468();
  sub_1DC87E988(&qword_1EAAA35B0);
  sub_1DC886810();
  sub_1DC9C55FC(v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v14);
  sub_1DC88CF34(&qword_1EAAA35B8, &qword_1EAAA35B0);
  uint64_t v11 = sub_1DCB873A8();
  swift_release();
  swift_release();
  type metadata accessor for SharedAOPReportStream.Instance();
  *(void *)(swift_allocObject() + 16) = v11;
  uint64_t v12 = sub_1DC8D06DC();
  swift_release();
  return v12;
}

uint64_t sub_1DC9C45C8(uint64_t a1, void (*a2)(void))
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  sub_1DC87E988(&qword_1EAA9ECF8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC8A22D0();
  sub_1DC87E988(&qword_1EAAA3660);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  type metadata accessor for IOService();
  uint64_t result = sub_1DCAF0524(*MEMORY[0x1E4F2EEF0], 0xD000000000000011, 0x80000001DCB94B70, 0x706F616E73, 0xE500000000000000);
  if (!v2)
  {
    io_service_t v7 = *(_DWORD *)(result + 16);
    connect[0] = 0;
    task_port_t v8 = sub_1DCB661F8();
    uint64_t v9 = (char *)IOServiceOpen(v7, v8, 0, connect);
    sub_1DCB2F82C(v9);
    int v10 = sub_1DCAF08B0(connect[0]);
    swift_release();
    type metadata accessor for IOConnect();
    uint64_t v11 = swift_allocObject();
    *(_DWORD *)(v11 + 16) = v10;
    a2();
    uint64_t v12 = sub_1DC8D06DC();
    uint64_t v13 = sub_1DC886810();
    *(void *)(v13 + 16) = v11;
    *(void *)(v13 + 24) = a1;
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = sub_1DC9C5DE4;
    v14[3] = v13;
    v14[4] = v12;
    swift_retain();
    swift_retain();
    sub_1DC87E988(&qword_1EAA9ED00);
    sub_1DC88CF34(&qword_1EAA9ED08, &qword_1EAA9ED00);
    sub_1DCB87378();
    sub_1DC9456F0();
    sub_1DC88D5C8();
    v15();
    sub_1DC88CF34(&qword_1EAAA3668, &qword_1EAAA3660);
    uint64_t v16 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAA3670);
    sub_1DC886810();
    uint64_t v17 = sub_1DC9C55FC(v16);
    sub_1DC88D5C8();
    v18();
    *(void *)connect = v17;
    sub_1DC88CF34(&qword_1EAAA3678, &qword_1EAAA3670);
    uint64_t v19 = sub_1DCB873A8();
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for SharedAOPDebugStream.Instance();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v19;
  }
  return result;
}

uint64_t sub_1DC9C49DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for SharedAOPDebugStream.AOPSubscription();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t result = sub_1DC9E9AC4(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

void *sub_1DC9C4A54(uint64_t a1, uint64_t a2, void *a3, void *(*a4)(uint64_t *__return_ptr, void *, void, uint64_t), uint64_t a5, uint64_t a6)
{
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  uint64_t result = a4(&v13, v14, *a3, v9);
  uint64_t v11 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
  }
  else
  {
    if (v11 < a6)
    {
      uint64_t v12 = v8;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = v8 + 1;
    }
    *a3 = v12;
    a3[1] = v11;
    return (void *)v13;
  }
  return result;
}

void *sub_1DC9C4AD4(uint64_t a1, void *a2, void *(*a3)(uint64_t *__return_ptr, uint64_t *, void, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a1;
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t result = a3(&v12, &v13, *a2, v8);
  uint64_t v10 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    if (v10 < a5)
    {
      uint64_t v11 = v7;
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = v7 + 1;
    }
    *a2 = v11;
    a2[1] = v10;
    return (void *)v12;
  }
  return result;
}

void *sub_1DC9C4B58@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, void *(*a3)(uint64_t *__return_ptr, _OWORD *, void, uint64_t)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  long long v8 = a1[1];
  v19[0] = *a1;
  v19[1] = v8;
  void v19[2] = a1[2];
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t result = a3(&v15, v19, *a2, v10);
  uint64_t v12 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    if (v12 < a4)
    {
      uint64_t v13 = v9;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v13 = v9 + 1;
    }
    *a2 = v13;
    a2[1] = v12;
    uint64_t v14 = v18;
    *(void *)a5 = v15;
    *(_OWORD *)(a5 + 8) = v16;
    *(_OWORD *)(a5 + 24) = v17;
    *(void *)(a5 + 40) = v14;
  }
  return result;
}

uint64_t sub_1DC9C4C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr, void *, uint64_t))
{
  v9[0] = a1;
  v9[1] = a2;
  if (a4 == a5)
  {
    a6(&v8, v9, a3);
    return v8;
  }
  else
  {
    uint64_t v6 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_1DC9C4C78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v6 = result;
  if (a3 == a4)
  {
    a5(&v5, &v6);
    return v5;
  }
  return result;
}

double sub_1DC9C4CC0@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (*a4)(unsigned char *__return_ptr, _OWORD *)@<X4>, uint64_t a5@<X8>)
{
  long long v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  void v11[2] = a1[2];
  if (a2 == a3)
  {
    a4(v10, v11);
  }
  else
  {
    long long v7 = a1[1];
    *(_OWORD *)uint64_t v10 = *a1;
    *(_OWORD *)&v10[16] = v7;
    *(_OWORD *)&v10[32] = a1[2];
    sub_1DC9C59B0((uint64_t)a1);
  }
  uint64_t v8 = *(void *)&v10[40];
  *(void *)a5 = *(void *)v10;
  *(_OWORD *)(a5 + 8) = *(_OWORD *)&v10[8];
  double result = *(double *)&v10[24];
  *(_OWORD *)(a5 + 24) = *(_OWORD *)&v10[24];
  *(void *)(a5 + 40) = v8;
  return result;
}

uint64_t sub_1DC9C4D4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5)
{
  if ((a3 & 1) == 0)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1DCB86FE8();
    sub_1DC89F57C(v15, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1DCB86FC8();
    os_log_type_t v16 = sub_1DCB88488();
    if (os_log_type_enabled(v9, v16))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v18 = v12;
      *(_DWORD *)uint64_t v11 = 136446722;
      swift_bridgeObjectRetain();
      sub_1DC9F8920(a4, a5, &v18);
      sub_1DC9C61F0();
      swift_bridgeObjectRelease_n();
      sub_1DC9C61C4();
      sub_1DC9C621C();
      _os_log_impl(&dword_1DC873000, v9, v16, "%{public}sheartbeat count %{public}ld (fires every %{public}ld values)", (uint8_t *)v11, 0x20u);
      goto LABEL_10;
    }
LABEL_11:

    swift_bridgeObjectRelease_n();
    return a1;
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1DCB86FE8();
  sub_1DC89F57C(v8, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1DCB86FC8();
  os_log_type_t v10 = sub_1DCB88488();
  if (!os_log_type_enabled(v9, v10)) {
    goto LABEL_11;
  }
  uint64_t v11 = swift_slowAlloc();
  uint64_t v12 = swift_slowAlloc();
  uint64_t v18 = v12;
  *(_DWORD *)uint64_t v11 = 136446978;
  swift_bridgeObjectRetain();
  sub_1DC9F8920(a4, a5, &v18);
  sub_1DC9C61F0();
  swift_bridgeObjectRelease_n();
  sub_1DC9C61C4();
  sub_1DC9C621C();
  *(_WORD *)(v11 + 32) = 2080;
  uint64_t v13 = sub_1DCB87988();
  sub_1DC9F8920(v13, v14, &v18);
  sub_1DCB88778();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1DC873000, v9, v10, "%{public}sheartbeat count %{public}ld (fires every %{public}ld values); value: %s",
    (uint8_t *)v11,
    0x2Au);
LABEL_10:
  swift_arrayDestroy();
  MEMORY[0x1E01A99C0](v12, -1, -1);
  MEMORY[0x1E01A99C0](v11, -1, -1);

  return a1;
}

uint64_t sub_1DC9C5050@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  if (a3)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1DCB86FE8();
    sub_1DC89F57C(v13, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain();
    sub_1DC9C59B0((uint64_t)a1);
    swift_bridgeObjectRetain();
    sub_1DC9C59B0((uint64_t)a1);
    unint64_t v14 = sub_1DCB86FC8();
    os_log_type_t v15 = sub_1DCB88488();
    if (!os_log_type_enabled(v14, v15))
    {
      swift_bridgeObjectRelease_n();
      sub_1DC9C59F4((uint64_t)a1);
      sub_1DC9C59F4((uint64_t)a1);
      goto LABEL_12;
    }
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)uint64_t v16 = 136446978;
    swift_bridgeObjectRetain();
    sub_1DC9F8920(a4, a5, &v28);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2050;
    sub_1DCB88778();
    *(_WORD *)(v16 + 22) = 2050;
    *(void *)&v27[0] = a6;
    sub_1DCB88778();
    *(_WORD *)(v16 + 32) = 2080;
    long long v17 = a1[1];
    v27[0] = *a1;
    v27[1] = v17;
    v27[2] = a1[2];
    sub_1DC9C59B0((uint64_t)a1);
    uint64_t v18 = sub_1DCB87988();
    *(void *)&v27[0] = sub_1DC9F8920(v18, v19, &v28);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    sub_1DC9C59F4((uint64_t)a1);
    sub_1DC9C59F4((uint64_t)a1);
    _os_log_impl(&dword_1DC873000, v14, v15, "%{public}sheartbeat count %{public}ld (fires every %{public}ld values); value: %s",
      (uint8_t *)v16,
      0x2Au);
    swift_arrayDestroy();
    uint64_t v20 = v26;
  }
  else
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1DCB86FE8();
    sub_1DC89F57C(v21, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain_n();
    unint64_t v14 = sub_1DCB86FC8();
    os_log_type_t v22 = sub_1DCB88488();
    if (!os_log_type_enabled(v14, v22))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_14;
    }
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446722;
    *(void *)&v27[0] = v23;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1DC9F8920(a4, a5, (uint64_t *)v27);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2050;
    uint64_t v28 = a2;
    sub_1DCB88778();
    *(_WORD *)(v16 + 22) = 2050;
    uint64_t v28 = a6;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v14, v22, "%{public}sheartbeat count %{public}ld (fires every %{public}ld values)", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    uint64_t v20 = v23;
  }
  MEMORY[0x1E01A99C0](v20, -1, -1);
  MEMORY[0x1E01A99C0](v16, -1, -1);
LABEL_12:

LABEL_14:
  long long v24 = a1[1];
  *a7 = *a1;
  a7[1] = v24;
  a7[2] = a1[2];
  return sub_1DC9C59B0((uint64_t)a1);
}

void type metadata accessor for HIDUtils()
{
}

uint64_t sub_1DC9C5488(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);

  return sub_1DC881920(v2, v3);
}

uint64_t sub_1DC9C54C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 40);
  id v6 = v3;
  sub_1DC8AF450(v4, v5);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return a1;
}

uint64_t sub_1DC9C5520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unint64_t v7 = *(void *)(a2 + 40);
  sub_1DC8AF450(v8, v7);
  uint64_t v9 = *(void *)(a1 + 32);
  unint64_t v10 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v7;
  sub_1DC881920(v9, v10);
  return a1;
}

uint64_t sub_1DC9C5598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  unint64_t v7 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v5;
  sub_1DC881920(v6, v7);
  return a1;
}

void type metadata accessor for HIDReport()
{
}

uint64_t sub_1DC9C55FC(uint64_t a1)
{
  type metadata accessor for SafeRecursiveLock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = (void *)swift_slowAlloc();
  void *v4 = 0;
  *(void *)(v3 + 16) = v4;
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = a1;
  return v1;
}

unint64_t sub_1DC9C5658()
{
  unint64_t result = qword_1EAAA35C0;
  if (!qword_1EAAA35C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA35C0);
  }
  return result;
}

void sub_1DC9C56A4(uint64_t a1)
{
  uint64_t v2 = sub_1DCB867D8();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_1DCB86808();
    if (__OFSUB__(a1, v4))
    {
      __break(1u);
      goto LABEL_8;
    }
    uint64_t v5 = (const void *)(v3 + a1 - v4);
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_1DCB867F8();
  if (v5)
  {
    memcpy(__dst, v5, sizeof(__dst));
    sub_1DC9E2DE0();
    return;
  }
LABEL_8:
  __break(1u);
}

unint64_t sub_1DC9C573C()
{
  unint64_t result = qword_1EAA9D100;
  if (!qword_1EAA9D100)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAA9D100);
  }
  return result;
}

uint64_t sub_1DC9C577C()
{
  swift_bridgeObjectRelease();

  sub_1DC8BADE0();

  return swift_deallocObject();
}

void sub_1DC9C57B4(uint64_t a1)
{
  sub_1DC9C3950(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DC9C57BC()
{
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC9C57EC()
{
  return sub_1DCA16464(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DC9C57F4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC9C31D0(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1DC9C57FC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  long long v7 = a1[1];
  v9[0] = *a1;
  v9[1] = v7;
  void v9[2] = a1[2];
  return sub_1DC9C5050(v9, a2, a3, a4, a5, a6, a7);
}

double sub_1DC9C5830@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void (*a4)(unsigned char *__return_ptr, _OWORD *)@<X4>, uint64_t a5@<X8>)
{
  long long v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  v7[2] = a1[2];
  return sub_1DC9C4CC0(v7, a2, a3, a4, a5);
}

void *sub_1DC9C5864@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, void *(*a3)(uint64_t *__return_ptr, _OWORD *, void, uint64_t)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  long long v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  v7[2] = a1[2];
  return sub_1DC9C4B58(v7, a2, a3, a4, a5);
}

void sub_1DC9C5898()
{
}

void sub_1DC9C58A0()
{
}

uint64_t sub_1DC9C58A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC9C58F0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DC9C5928@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_1DC9C57FC(a1, a2, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), a3);
}

uint64_t sub_1DC9C5938()
{
  swift_release();
  sub_1DC8BAD04();

  return swift_deallocObject();
}

double sub_1DC9C5968@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1DC9C5830(a1, a2, *(void *)(v3 + 16), *(void (**)(unsigned char *__return_ptr, _OWORD *))(v3 + 24), a3);
}

uint64_t sub_1DC9C5974()
{
  swift_release();
  sub_1DC8BAD04();

  return swift_deallocObject();
}

void *sub_1DC9C59A4@<X0>(_OWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DC9C5864(a1, a2, *(void *(**)(uint64_t *__return_ptr, _OWORD *, void, uint64_t))(v3 + 16), *(void *)(v3 + 32), a3);
}

uint64_t sub_1DC9C59B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);
  id v4 = *(id *)a1;
  sub_1DC8AF450(v2, v3);
  return a1;
}

uint64_t sub_1DC9C59F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);

  sub_1DC881920(v2, v3);
  return a1;
}

uint64_t sub_1DC9C5A38()
{
  sub_1DC8BADE0();

  return swift_deallocObject();
}

id sub_1DC9C5A70(uint64_t a1)
{
  return sub_1DC9C3D34(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DC9C5A78()
{
  return sub_1DCA1648C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1DC9C5A80()
{
  return sub_1DC9C5CB8(&qword_1EAAA3640);
}

uint64_t sub_1DC9C5A8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA3640);
  sub_1DC8E77E0(v12);

  return sub_1DC9C4058(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1DC9C5B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC9C5B30()
{
  return swift_release();
}

uint64_t sub_1DC9C5B38()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA3640);
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

uint64_t sub_1DC9C5BE0()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA3640);
  sub_1DC8E77E0(v1);
  uint64_t v2 = *(void **)(v0 + 16);

  return sub_1DC9C424C(v2);
}

uint64_t sub_1DC9C5C28()
{
  return swift_deallocObject();
}

id sub_1DC9C5C60()
{
  uint64_t v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_cancel);

  return objc_msgSend(v1, sel_close);
}

uint64_t sub_1DC9C5CAC()
{
  return sub_1DC9C5CB8(&qword_1EAAA3650);
}

uint64_t sub_1DC9C5CB8(uint64_t *a1)
{
  sub_1DC87E988(a1);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v1();

  return swift_deallocObject();
}

uint64_t sub_1DC9C5D38(void *a1, char a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA3650);
  sub_1DC8E77E0(v4);

  return sub_1DC9C3BC4(a1, a2);
}

id sub_1DC9C5D9C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

uint64_t sub_1DC9C5DAC()
{
  swift_release();
  swift_release();
  sub_1DC8BADE0();

  return swift_deallocObject();
}

uint64_t sub_1DC9C5DE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9C49DC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1DC9C5E00(void *a1@<X8>)
{
  sub_1DCB071B8();
  *a1 = v2;
}

uint64_t sub_1DC9C5E2C()
{
  swift_release();
  swift_release();
  sub_1DC8BAD04();

  return swift_deallocObject();
}

void sub_1DC9C5E64(void *a1@<X8>)
{
}

uint64_t sub_1DC9C5E70(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1DC9C5ED0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unsigned char *sub_1DC9C5F30(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC9C5FCCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for HIDUtils.DomainError()
{
}

uint64_t sub_1DC9C6000(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t sub_1DC9C6038(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_1DC9C6084(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_1DC9C60C4(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DC9C6104(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for HIDDeviceDiscoveryEvent()
{
}

unint64_t sub_1DC9C6154()
{
  unint64_t result = qword_1EAAA3680;
  if (!qword_1EAAA3680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3680);
  }
  return result;
}

uint64_t sub_1DC9C61C4()
{
  *(_WORD *)(v0 + 12) = 2050;
  return sub_1DCB88778();
}

uint64_t sub_1DC9C61F0()
{
  return sub_1DCB88778();
}

uint64_t sub_1DC9C621C()
{
  *(_WORD *)(v1 + 22) = v0;
  return sub_1DCB88778();
}

unint64_t sub_1DC9C6258(unint64_t result, char a2, uint64_t a3)
{
  unint64_t v3 = result;
  if (a2) {
    goto LABEL_5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > result)
  {
    unint64_t v3 = *(void *)(a3 + 8 * result + 32);
LABEL_5:
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC9C62C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1DC8CFF34(a1, *(void *)(v4 + OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerInputFeatureNameMappings));
  if (!v3)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_model + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(v7, a2, ObjectType, v8);
    sub_1DC8D0040(v10, *(void *)(v4 + OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerOutputFeatureNameMappings));
    uint64_t v4 = v11;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return v4;
}

void sub_1DC9C63A4()
{
}

id sub_1DC9C63E4()
{
  return sub_1DC9C8284(type metadata accessor for SNSoundPrintFeatureEmbeddingCustomModel);
}

uint64_t type metadata accessor for SNSoundPrintFeatureEmbeddingCustomModel()
{
  return self;
}

void sub_1DC9C648C(void *a1)
{
  swift_getObjectType();
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20](v4);
  uint64_t v6 = (void *)MEMORY[0x1E01A8D20]();
  if (qword_1EAA9D1E0 != -1) {
    swift_once();
  }
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 34;
  MEMORY[0x1F4188790](v7);
  swift_retain();
  sub_1DCAC3890();
  if (v2)
  {
    swift_release();
    swift_release();

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v8;
    swift_release();
    swift_release();
    sub_1DC9C84C4(v9, a1, v1);
  }
}

uint64_t sub_1DC9C666C(uint64_t a1, uint64_t a2)
{
  return sub_1DC9C62C0(a1, a2);
}

uint64_t type metadata accessor for SNSoundPrintKFeatureEmbeddingCustomModel()
{
  return self;
}

uint64_t sub_1DC9C66C0(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1 >= 2 && *(void *)(result + 8 * v1 + 16) != 1)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1DCB86FE8();
    uint64_t v3 = (void *)sub_1DC9C8654(v2, (uint64_t)qword_1EAAFF810);
    os_log_type_t v4 = sub_1DCB88468();
    if (sub_1DC8E7740(v4))
    {
      uint64_t v5 = (_WORD *)sub_1DC8E78F4();
      sub_1DC8E7944(v5);
      sub_1DC8E76D4(&dword_1DC873000, v6, v7, "Only single-channel audio is supported.");
      sub_1DC9C867C();
    }

    sub_1DCB87938();
    sub_1DC9C86A8();
    id v8 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    sub_1DC9C862C();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC9C67B0(uint64_t result)
{
  if ((unint64_t)(result - 1) > 1)
  {
    type metadata accessor for SNError();
    unint64_t v1 = sub_1DC9C86CC();
    sub_1DCA14B2C(v1, v2, 4, 0, v3, v4);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC9C682C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = sub_1DC9C67B0(v5);
  if (!v2)
  {
    char v7 = v5 < 2;
    if (v5 >= 2) {
      unint64_t v8 = v5 - 2;
    }
    else {
      unint64_t v8 = 0;
    }
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DC9C6258(v8, v7, a1);
    if (v9)
    {
      if (a2 == 1) {
        return result;
      }
    }
    else if (result == a2)
    {
      return result;
    }
    type metadata accessor for SNError();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 2, 0, 0xD00000000000001BLL, 0x80000001DCB94CD0);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  return result;
}

void sub_1DC9C698C(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v5 = sub_1DCB877B8();

  id v6 = *(id *)(v5 + 16);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a2, sel_inputDescriptionsByName);
  sub_1DCB877B8();

  sub_1DC9C86B4();
  if (v6 != v7)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1DCB86FE8();
    uint64_t v26 = (void *)sub_1DC9C8654(v25, (uint64_t)qword_1EAAFF810);
    os_log_type_t v27 = sub_1DCB88468();
    if (!sub_1DC8E7740(v27)) {
      goto LABEL_30;
    }
    uint64_t v28 = (_WORD *)sub_1DC8E78F4();
    sub_1DC8E7944(v28);
    id v31 = "Input feature count doesn't match";
    goto LABEL_29;
  }
  id v8 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1DCB877B8();

  sub_1DC9C86B4();
  if (v8 != (id)1)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1DCB86FE8();
    uint64_t v26 = (void *)sub_1DC9C8654(v32, (uint64_t)qword_1EAAFF810);
    os_log_type_t v33 = sub_1DCB88468();
    if (!sub_1DC8E7740(v33)) {
      goto LABEL_30;
    }
    uint64_t v34 = (_WORD *)sub_1DC8E78F4();
    sub_1DC8E7944(v34);
    id v31 = "Input feature description has > 1 input feature";
    goto LABEL_29;
  }
  id v9 = objc_msgSend(a1, sel_inputDescriptionsByName);
  uint64_t v10 = sub_1DCB877B8();

  uint64_t v11 = (void *)sub_1DC9A4430(v10);
  swift_bridgeObjectRelease();
  if (!v11
    || (id v12 = objc_msgSend(v11, sel_multiArrayConstraint), v11, !v12))
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1DCB86FE8();
    uint64_t v26 = (void *)sub_1DC9C8654(v35, (uint64_t)qword_1EAAFF810);
    os_log_type_t v36 = sub_1DCB88468();
    if (!sub_1DC8E7740(v36)) {
      goto LABEL_30;
    }
    id v37 = (_WORD *)sub_1DC8E78F4();
    sub_1DC8E7944(v37);
    id v31 = "Input feature isn't an MLMultiArray";
LABEL_29:
    sub_1DC8E76D4(&dword_1DC873000, v29, v30, v31);
    sub_1DC9C867C();
LABEL_30:

    sub_1DCB87938();
    sub_1DC9C86A8();
    id v38 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    sub_1DC9C862C();
    swift_willThrow();
    return;
  }
  id v93 = a2;
  id v94 = a1;
  id v13 = objc_msgSend(v12, sel_shape);
  uint64_t v14 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
  unint64_t v15 = sub_1DCB87C38();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v92 = v14;
  if (v16)
  {
    uint64_t v99 = MEMORY[0x1E4FBC860];
    sub_1DC897E1C();
    if (v16 < 0)
    {
      __break(1u);
      goto LABEL_92;
    }
    uint64_t v18 = 0;
    uint64_t v17 = v99;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x1E01A7AE0](v18, v15);
      }
      else {
        id v19 = *(id *)(v15 + 8 * v18 + 32);
      }
      uint64_t v20 = v19;
      id v21 = objc_msgSend(v19, sel_integerValue, v92);

      unint64_t v23 = *(void *)(v99 + 16);
      unint64_t v22 = *(void *)(v99 + 24);
      uint64_t v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_1DC9C8698(v22);
        sub_1DC897E1C();
      }
      ++v18;
      *(void *)(v99 + 16) = v24;
      *(void *)(v99 + 8 * v23 + 32) = v21;
    }
    while (v16 != v18);
  }
  else
  {
    uint64_t v24 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  }
  sub_1DCAC5EC8(v24);
  if (v97)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_35:

    return;
  }
  sub_1DC9C66C0(v17);
  swift_bridgeObjectRelease();
  id v96 = v12;
  if (!v16)
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBC860];
    goto LABEL_47;
  }
  uint64_t v100 = MEMORY[0x1E4FBC860];
  sub_1DC897E1C();
  if (v16 < 0)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t v39 = 0;
  uint64_t v40 = v100;
  do
  {
    if ((v15 & 0xC000000000000001) != 0) {
      id v41 = (id)MEMORY[0x1E01A7AE0](v39, v15);
    }
    else {
      id v41 = *(id *)(v15 + 8 * v39 + 32);
    }
    uint64_t v42 = v41;
    id v43 = objc_msgSend(v41, sel_integerValue, v92);

    unint64_t v45 = *(void *)(v100 + 16);
    unint64_t v44 = *(void *)(v100 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_1DC9C8698(v44);
      sub_1DC897E1C();
    }
    ++v39;
    *(void *)(v100 + 16) = v45 + 1;
    *(void *)(v100 + 8 * v45 + 32) = v43;
  }
  while (v16 != v39);
  swift_bridgeObjectRelease();
LABEL_47:
  uint64_t v46 = sub_1DCAC5F50(v40);
  char v48 = v47;
  swift_bridgeObjectRelease();
  if (v48) {
    uint64_t v46 = 1;
  }
  id v12 = v96;
  if (objc_msgSend(v96, sel_dataType, v92) != (id)65568)
  {
    if (qword_1EAA9C658 == -1)
    {
LABEL_66:
      uint64_t v67 = sub_1DCB86FE8();
      uint64_t v68 = (void *)sub_1DC9C8654(v67, (uint64_t)qword_1EAAFF810);
      os_log_type_t v69 = sub_1DCB88468();
      if (!sub_1DC8E7740(v69))
      {
LABEL_81:

        sub_1DCB87938();
        sub_1DC9C86A8();
        id v83 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
        sub_1DC9C862C();
        swift_willThrow();
        goto LABEL_35;
      }
      uint64_t v70 = (_WORD *)sub_1DC8E78F4();
      sub_1DC8E7944(v70);
      uint64_t v73 = "Input feature must contain floating point data";
LABEL_80:
      sub_1DC8E76D4(&dword_1DC873000, v71, v72, v73);
      sub_1DC9C867C();
      goto LABEL_81;
    }
LABEL_93:
    swift_once();
    goto LABEL_66;
  }
  uint64_t v98 = v46;
  id v49 = objc_msgSend(v94, sel_outputDescriptionsByName);
  uint64_t v50 = sub_1DCB877B8();

  id v51 = *(id *)(v50 + 16);
  swift_bridgeObjectRelease();
  id v52 = objc_msgSend(v93, sel_outputDescriptionsByName);
  sub_1DCB877B8();

  sub_1DC9C86B4();
  if (v51 != v52)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v74 = sub_1DCB86FE8();
    uint64_t v68 = (void *)sub_1DC9C8654(v74, (uint64_t)qword_1EAAFF810);
    os_log_type_t v75 = sub_1DCB88468();
    id v12 = v96;
    if (!sub_1DC8E7740(v75)) {
      goto LABEL_81;
    }
    char v76 = (_WORD *)sub_1DC8E78F4();
    sub_1DC8E7944(v76);
    uint64_t v73 = "Output feature count doesn't match";
    goto LABEL_80;
  }
  id v53 = objc_msgSend(v94, sel_outputDescriptionsByName);
  sub_1DCB877B8();

  sub_1DC9C86B4();
  if (v53 != (id)1)
  {
    id v12 = v96;
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v77 = sub_1DCB86FE8();
    uint64_t v68 = (void *)sub_1DC9C8654(v77, (uint64_t)qword_1EAAFF810);
    os_log_type_t v78 = sub_1DCB88468();
    if (!sub_1DC8E7740(v78)) {
      goto LABEL_81;
    }
    uint64_t v79 = (_WORD *)sub_1DC8E78F4();
    sub_1DC8E7944(v79);
    uint64_t v73 = "Output feature description has > 1 feature";
    goto LABEL_80;
  }
  id v54 = objc_msgSend(v94, sel_outputDescriptionsByName);
  uint64_t v55 = sub_1DCB877B8();

  uint64_t v56 = (void *)sub_1DC9A4430(v55);
  swift_bridgeObjectRelease();
  id v12 = v96;
  if (!v56
    || (id v57 = objc_msgSend(v56, sel_multiArrayConstraint), v56, !v57))
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v80 = sub_1DCB86FE8();
    uint64_t v68 = (void *)sub_1DC9C8654(v80, (uint64_t)qword_1EAAFF810);
    os_log_type_t v81 = sub_1DCB88468();
    if (!sub_1DC8E7740(v81)) {
      goto LABEL_81;
    }
    uint64_t v82 = (_WORD *)sub_1DC8E78F4();
    sub_1DC8E7944(v82);
    uint64_t v73 = "No multi array constraint for output feature";
    goto LABEL_80;
  }
  id v58 = objc_msgSend(v57, sel_shape);
  unint64_t v59 = sub_1DCB87C38();

  if (v59 >> 62)
  {
    sub_1DC8C20E8();
    uint64_t v60 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v60 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v60 < 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v84 = v96;
  }
  else
  {
    id v95 = v57;
    uint64_t v101 = MEMORY[0x1E4FBC860];
    sub_1DC897E1C();
    for (uint64_t i = 0; i != v60; ++i)
    {
      if ((v59 & 0xC000000000000001) != 0) {
        id v62 = (id)MEMORY[0x1E01A7AE0](i, v59);
      }
      else {
        id v62 = *(id *)(v59 + 8 * i + 32);
      }
      uint64_t v63 = v62;
      id v64 = objc_msgSend(v62, sel_integerValue);

      unint64_t v66 = *(void *)(v101 + 16);
      unint64_t v65 = *(void *)(v101 + 24);
      if (v66 >= v65 >> 1)
      {
        sub_1DC9C8698(v65);
        sub_1DC897E1C();
      }
      *(void *)(v101 + 16) = v66 + 1;
      *(void *)(v101 + 8 * v66 + 32) = v64;
    }
    swift_bridgeObjectRelease();
    sub_1DC9C682C(v101, v98);
    swift_bridgeObjectRelease();
    id v57 = v95;
    uint64_t v84 = v96;
  }
  if (objc_msgSend(v57, sel_dataType) != (id)65568)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v85 = sub_1DCB86FE8();
    uint64_t v86 = (void *)sub_1DC9C8654(v85, (uint64_t)qword_1EAAFF810);
    os_log_type_t v87 = sub_1DCB88468();
    if (sub_1DC8E7740(v87))
    {
      uint64_t v88 = (_WORD *)sub_1DC8E78F4();
      sub_1DC8E7944(v88);
      sub_1DC8E76D4(&dword_1DC873000, v89, v90, "Output feature must contain floating point data");
      sub_1DC9C867C();
    }

    sub_1DCB87938();
    sub_1DC9C86A8();
    id v91 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    sub_1DC9C862C();
    swift_willThrow();
  }
}

void sub_1DC9C7528(void *a1)
{
  swift_bridgeObjectRelease();
  id v4 = v1;
  if (sub_1DC984DE4()) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = sub_1DC9AD840(0x21u, (void *)v5);
  if (v2)
  {

    a1 = v4;
LABEL_7:

    type metadata accessor for SNSoundPrintAFeatureEmbeddingCustomModel();
    swift_deallocPartialClassInstance();
    return;
  }
  id v7 = v6;
  type metadata accessor for SNMLModelAdapter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  type metadata accessor for SNSoundPrintAFeatureEmbeddingCustomModel();
  id v9 = objc_msgSend(v7, sel_modelDescription);
  sub_1DC9C698C(a1, v9);
  uint64_t v44 = v8;

  id v10 = objc_msgSend(a1, sel_outputDescriptionsByName);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v11 = sub_1DCB877B8();

  uint64_t v12 = sub_1DC9A4448(v11);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (!v14)
  {
LABEL_25:

    type metadata accessor for SNError();
    unint64_t v37 = sub_1DC9C86CC();
    sub_1DCA14B2C(v37, v38, 1, 0, v39, v40);
    swift_willThrow();
    swift_release();
    goto LABEL_7;
  }
  id v15 = objc_msgSend(a1, sel_inputDescriptionsByName);
  uint64_t v16 = sub_1DCB877B8();

  uint64_t v17 = sub_1DC9A4448(v16);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!v19)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v20 = (uint64_t *)&v4[OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_inputFeatureName];
  *uint64_t v20 = v17;
  v20[1] = v19;
  id v21 = (uint64_t *)&v4[OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputFeatureName];
  *id v21 = v12;
  v21[1] = v14;
  swift_bridgeObjectRetain();
  id v22 = objc_msgSend(a1, sel_outputDescriptionsByName);
  uint64_t v23 = sub_1DCB877B8();

  uint64_t v24 = sub_1DC9612B8(v12, v14, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v24)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v25 = objc_msgSend(v24, sel_multiArrayConstraint);

  if (v25)
  {
    id v26 = objc_msgSend(v25, sel_shape);

    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7A0);
    unint64_t v27 = sub_1DCB87C38();

    if (v27 >> 62)
    {
      sub_1DC8C20E8();
      uint64_t v28 = sub_1DCB88CC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v43 = a1;
    if (!v28)
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = MEMORY[0x1E4FBC860];
LABEL_27:
      *(void *)&v4[OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputShape] = v30;

      sub_1DC9C8384(v44, v43, v4);
      return;
    }
    uint64_t v41 = 0;
    uint64_t v42 = v4;
    uint64_t v45 = MEMORY[0x1E4FBC860];
    sub_1DC897E1C();
    if ((v28 & 0x8000000000000000) == 0)
    {
      uint64_t v29 = 0;
      uint64_t v30 = v45;
      unint64_t v31 = v27 & 0xC000000000000001;
      unint64_t v32 = v27;
      do
      {
        if (v31) {
          id v33 = (id)MEMORY[0x1E01A7AE0](v29, v27);
        }
        else {
          id v33 = *(id *)(v27 + 8 * v29 + 32);
        }
        uint64_t v34 = v33;
        id v35 = objc_msgSend(v33, sel_integerValue, v41, v42, v43);

        unint64_t v36 = *(void *)(v45 + 16);
        if (v36 >= *(void *)(v45 + 24) >> 1) {
          sub_1DC897E1C();
        }
        ++v29;
        *(void *)(v45 + 16) = v36 + 1;
        *(void *)(v45 + 8 * v36 + 32) = v35;
        unint64_t v27 = v32;
      }
      while (v28 != v29);
      swift_bridgeObjectRelease();
      id v4 = v42;
      goto LABEL_27;
    }
    __break(1u);
    goto LABEL_30;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1DC9C79C8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *, uint64_t))
{
  uint64_t v8 = sub_1DCB877B8();
  return a6(a3, v8);
}

void sub_1DC9C7A8C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = (void *)MEMORY[0x1E01A8D20]();
  sub_1DC9C7B08(a1, v3, a2, &v7);
}

void sub_1DC9C7B08(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v10 = *(void *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_inputFeatureName);
  uint64_t v9 = *(void *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_inputFeatureName + 8);
  uint64_t v11 = (void *)sub_1DCB87908();
  id v12 = objc_msgSend(a1, sel_featureValueForName_, v11);

  if (!v12
    || (id v13 = objc_msgSend(v12, sel_multiArrayValue), v12, !v13))
  {
    uint64_t v16 = sub_1DCB87938();
    uint64_t v18 = v17;
    id v19 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    sub_1DCB2FA98(v16, v18, 1, 0);
    swift_willThrow();
    return;
  }
  id v14 = sub_1DCA78F1C(v13);
  sub_1DCA7B330(v14, 3);
  if (v4)
  {

    return;
  }
  id v52 = v13;
  id v49 = a4;
  uint64_t v50 = v14;
  id v51 = v15;
  id v20 = objc_msgSend(self, sel_featureValueWithMultiArray_, v15);
  sub_1DC87E988(&qword_1EAAA0900);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 72) = sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA18E8);
  *(void *)(inited + 48) = v20;
  swift_bridgeObjectRetain();
  id v22 = v20;
  sub_1DCB877D8();
  id v23 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
  id v24 = sub_1DC99F66C();
  id v25 = (void *)sub_1DC9C62C0((uint64_t)v24, a3);
  char v48 = v24;

  uint64_t v26 = *(void *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputFeatureName + 8);
  uint64_t v46 = *(void *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputFeatureName);
  unint64_t v27 = (void *)sub_1DCB87908();
  id v28 = objc_msgSend(v25, sel_featureValueForName_, v27);

  if (v28)
  {
    uint64_t v29 = (void *)swift_allocObject();
    id v30 = objc_msgSend(v28, sel_multiArrayValue);

    v29[2] = v30;
    if (!v30)
    {
      uint64_t v38 = sub_1DCB87938();
      uint64_t v40 = v39;
      id v41 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      sub_1DCB2FA98(v38, v40, 0, 0);
      swift_willThrow();

      swift_unknownObjectRelease();
      swift_release();
      return;
    }
    char v47 = v22;
    uint64_t v31 = *(void *)(a2 + OBJC_IVAR____SNSoundPrintAFeatureEmbeddingCustomModel_outputShape);
    unint64_t v32 = (void *)sub_1DCB87C08();
    unint64_t v33 = sub_1DCA78C1C(v32);

    uint64_t v34 = (void *)v29[2];
    if (v34)
    {
      id v35 = objc_msgSend(v34, sel_dataPointer);
      uint64_t v36 = sub_1DCAE88F0(v31);
      objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
      swift_retain();
      id v37 = sub_1DCA7C058((uint64_t)v35, v36, 65568, v33, sub_1DC9C837C, v29);
      uint64_t v42 = swift_initStackObject();
      *(_OWORD *)(v42 + 16) = xmmword_1DCBB93B0;
      *(void *)(v42 + 32) = v46;
      *(void *)(v42 + 40) = v26;
      *(void *)(v42 + 72) = sub_1DC89C89C(0, (unint64_t *)&unk_1EAA9DB50);
      *(void *)(v42 + 48) = v37;
      swift_bridgeObjectRetain();
      id v43 = v37;
      sub_1DCB877D8();
      id v44 = objc_allocWithZone(MEMORY[0x1E4F1E930]);
      id v45 = sub_1DC99F66C();
      swift_release();
      swift_unknownObjectRelease();

      *id v49 = v45;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1DC9C80D0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = 0;
}

id sub_1DC9C8130(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t, id))
{
  swift_unknownObjectRetain();
  id v10 = a4;
  id v11 = a1;
  id v12 = (void *)a6(a3, v10);

  swift_unknownObjectRelease();

  return v12;
}

uint64_t sub_1DC9C8214()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_1DC9C826C()
{
  return sub_1DC9C8284(type metadata accessor for SNSoundPrintAFeatureEmbeddingCustomModel);
}

id sub_1DC9C8284(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for SNSoundPrintAFeatureEmbeddingCustomModel()
{
  return self;
}

uint64_t sub_1DC9C8344()
{
  return swift_deallocObject();
}

void sub_1DC9C837C(uint64_t a1)
{
  sub_1DC9C80D0(a1, v1);
}

void sub_1DC9C8384(uint64_t a1, void *a2, char *a3)
{
  *(void *)&a3[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_modelDescription] = a2;
  uint64_t v5 = &a3[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_model];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = &off_1F37FEC00;
  id v6 = *(void **)(a1 + 16);
  uint64_t v7 = a3;
  id v8 = a2;
  swift_retain();
  id v9 = objc_msgSend(v6, sel_modelDescription);
  uint64_t v10 = sub_1DC8CFD8C(v8, v9);

  if (v10)
  {
    *(void *)&v7[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerInputFeatureNameMappings] = v10;
    id v11 = objc_msgSend(*(id *)(a1 + 16), sel_modelDescription);
    uint64_t v12 = sub_1DC8CFD98(v8, v11);

    if (v12)
    {
      *(void *)&v7[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerOutputFeatureNameMappings] = v12;

      v13.receiver = v7;
      v13.super_class = (Class)type metadata accessor for SNSoundPrintFeatureEmbeddingCustomModel();
      objc_msgSendSuper2(&v13, sel_init);
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DC9C84B4()
{
  return swift_deallocObject();
}

void sub_1DC9C84C4(uint64_t a1, void *a2, char *a3)
{
  *(void *)&a3[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_modelDescription] = a2;
  id v6 = &a3[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_model];
  *(void *)id v6 = a1;
  *((void *)v6 + 1) = &off_1F37FEC20;
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  uint64_t v10 = a3;
  id v11 = a2;
  swift_retain();
  uint64_t v12 = (void *)v9(ObjectType, v7);
  uint64_t v13 = sub_1DC8CFD8C(v11, v12);

  if (v13)
  {
    *(void *)&v10[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerInputFeatureNameMappings] = v13;
    uint64_t v14 = *(void *)(a1 + 24);
    uint64_t v15 = swift_getObjectType();
    uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
    uint64_t v17 = sub_1DC8CFD98(v11, v16);

    if (v17)
    {
      *(void *)&v10[OBJC_IVAR____SNSoundPrintFeatureEmbeddingCustomModel_outerToInnerOutputFeatureNameMappings] = v17;

      v18.receiver = v10;
      v18.super_class = (Class)type metadata accessor for SNSoundPrintFeatureEmbeddingCustomModel();
      objc_msgSendSuper2(&v18, sel_init);
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1DC9C862C()
{
  return sub_1DCB2FA98(v0, v1, 0, 0);
}

uint64_t sub_1DC9C8654(uint64_t a1, uint64_t a2)
{
  sub_1DC89F57C(a1, a2);
  return sub_1DCB86FC8();
}

void sub_1DC9C867C()
{
  JUMPOUT(0x1E01A99C0);
}

BOOL sub_1DC9C8698@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1DC9C86B4()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DC9C86CC()
{
  return 0xD000000000000017;
}

id static SystemUtils.queryXCapability()()
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t exclaveCapability = MobileGestalt_get_exclaveCapability();

    return (id)exclaveCapability;
  }
  else
  {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemUtils()
{
  return &type metadata for SystemUtils;
}

uint64_t sub_1DC9C8734(uint64_t a1, uint64_t a2, int *a3)
{
  id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1DC8D78C0;
  return v8(a1, a2);
}

uint64_t sub_1DC9C881C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1DC9C8860()
{
  return (*(uint64_t (**)(void))(v0
                              + OBJC_IVAR____TtC13SoundAnalysis29TrampolineXPCListenerDelegate_listenerShouldAcceptNewConnectionFn))() & 1;
}

void sub_1DC9C88FC()
{
}

uint64_t type metadata accessor for TrampolineXPCListenerDelegate()
{
  return self;
}

void *sub_1DC9C8974(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = (objc_class *)type metadata accessor for TrampolineXPCListenerDelegate();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  id v8 = &v7[OBJC_IVAR____TtC13SoundAnalysis29TrampolineXPCListenerDelegate_listenerShouldAcceptNewConnectionFn];
  *(void *)id v8 = a2;
  *((void *)v8 + 1) = a3;
  v12.receiver = v7;
  v12.super_class = v6;
  swift_retain();
  id v9 = objc_msgSendSuper2(&v12, sel_init);
  objc_msgSend(a1, sel_setDelegate_, v9, v12.receiver, v12.super_class);
  objc_msgSend(a1, sel_resume);
  id v10 = a1;
  return a1;
}

uint64_t sub_1DC9C8A1C(uint64_t a1, void *a2, uint64_t (*a3)(void *, void *, uint64_t))
{
  return sub_1DC9C8A2C(a2, a3);
}

uint64_t sub_1DC9C8A2C(void *a1, uint64_t (*a2)(void *, void *, uint64_t))
{
  v17[3] = sub_1DC9CAB38();
  v17[4] = &off_1F37F4EC0;
  v17[0] = a1;
  id v4 = a1;
  char v5 = sub_1DCA96424(v17, 0xD00000000000002BLL, 0x80000001DCB94EB0);
  if (v5 == 2)
  {
    sub_1DC8818D0((uint64_t)v17);
  }
  else
  {
    sub_1DC8818D0((uint64_t)v17);
    if (v5)
    {
      sub_1DC9C8E44(v4, a2);
      uint64_t v10 = 1;
      goto LABEL_8;
    }
  }
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1DCB86FE8();
  sub_1DC89F57C(v6, (uint64_t)qword_1EAAFF810);
  uint64_t v7 = sub_1DCB86FC8();
  os_log_type_t v8 = sub_1DCB88468();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&dword_1DC873000, v7, v8, "Client rejected due to insufficient entitlements.", v9, 2u);
    sub_1DC8E7728();
  }

  uint64_t v10 = 0;
LABEL_8:
  objc_msgSend(v4, sel_resume);
  unsigned int v11 = objc_msgSend(v4, sel_processIdentifier);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DCB86FE8();
  sub_1DC89F57C(v12, (uint64_t)qword_1EAAFF810);
  uint64_t v13 = sub_1DCB86FC8();
  os_log_type_t v14 = sub_1DCB88488();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 67109376;
    LODWORD(v17[0]) = v11;
    sub_1DCB88778();
    *(_WORD *)(v15 + 8) = 1024;
    LODWORD(v17[0]) = v10;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v13, v14, "  Client with PID %d attempted to connect.   Accepted? %{BOOL}d", (uint8_t *)v15, 0xEu);
    sub_1DC8E7728();
  }

  return v10;
}

void sub_1DC9C8E44(void *a1, uint64_t (*a2)(void *, void *, uint64_t))
{
  sub_1DC87E988(&qword_1EAAA3740);
  swift_allocObject();
  uint64_t v5 = sub_1DC9000F8();
  unsigned int v6 = objc_msgSend(a1, sel_processIdentifier);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  id v30 = sub_1DC9CADE8;
  uint64_t v31 = v7;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DC9C881C;
  uint64_t v29 = &unk_1F37FAFF8;
  os_log_type_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v8);
  _Block_release(v8);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  *(_DWORD *)(v9 + 24) = v6;
  uint64_t v29 = (void *)sub_1DC9CAB38();
  id v30 = (void (*)())&off_1F37F4EC0;
  aBlock[0] = a1;
  swift_retain();
  id v10 = a1;
  uint64_t v11 = a2(aBlock, &unk_1EAAA3788, v9);
  if (v2)
  {
    swift_release();
    swift_release();
    sub_1DC8818D0((uint64_t)aBlock);
  }
  else
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    sub_1DC8818D0((uint64_t)aBlock);
    uint64_t v15 = (void *)swift_allocObject();
    void v15[2] = v13;
    v15[3] = v14;
    v15[4] = &unk_1EAAA3788;
    v15[5] = v9;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = &unk_1EAAA3798;
    *(void *)(v16 + 24) = v15;
    swift_retain();
    swift_retain();
    uint64_t v17 = sub_1DC883DDC((uint64_t)&unk_1EAAA37A8, v16, (uint64_t)&unk_1EAAA3788, v9);
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    uint64_t v32 = v22;
    swift_release();
    if (qword_1EAA9D1C0 != -1) {
      swift_once();
    }
    objc_msgSend(v10, sel_setExportedInterface_, qword_1EAAFF878);
    id v23 = (objc_class *)type metadata accessor for XPCProxyXPCHost();
    id v24 = (char *)objc_allocWithZone(v23);
    id v25 = (uint64_t *)&v24[OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted];
    *id v25 = v17;
    v25[1] = v32;
    v25[2] = v19;
    v25[3] = v21;
    v27.receiver = v24;
    v27.super_class = v23;
    swift_retain();
    swift_retain();
    id v26 = objc_msgSendSuper2(&v27, sel_init);
    objc_msgSend(v10, sel_setExportedObject_, v26, v27.receiver, v27.super_class);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1DC9C91EC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8D6930;
  return sub_1DC93AB80();
}

void *sub_1DC9C929C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC8B9960(a1, (uint64_t)v11);
  uint64_t v5 = swift_allocObject();
  sub_1DC8BA1CC(v11, v5 + 16);
  sub_1DC87E988((uint64_t *)&unk_1EAAA37B0);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = self;
  swift_retain();
  swift_retain();
  *(void *)(v6 + 16) = objc_msgSend(v7, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
  sub_1DC87E988(&qword_1EAAA0990);
  swift_allocObject();
  uint64_t v8 = sub_1DC9AE954(v6);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1DC9CB088;
  *(void *)(v9 + 24) = v5;
  *(unsigned char *)(v9 + 32) = 0;
  *(void *)(v9 + 40) = v8;
  *(void *)(v9 + 48) = a4;
  swift_release();
  return &unk_1EAAA37C8;
}

uint64_t sub_1DC9C93E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  sub_1DC881A8C(a3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
}

void sub_1DC9C9468()
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DCB86FE8();
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF810);
  uint64_t v1 = sub_1DCB86FC8();
  os_log_type_t v2 = sub_1DCB88488();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 67109120;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v1, v2, "Invalidation handler called for connection to PID %d", v3, 8u);
    MEMORY[0x1E01A99C0](v3, -1, -1);
  }

  type metadata accessor for SNError();
  id v4 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0x697463656E6E6F63, 0xEF74736F6C206E6FLL);
  sub_1DC8FCC28(v4);
}

uint64_t sub_1DC9C95F0(uint64_t a1, int a2)
{
  *(_DWORD *)(v2 + 44) = a2;
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_1EAA9FA88 + dword_1EAA9FA88);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1DC9C9698;
  return v5();
}

uint64_t sub_1DC9C9698()
{
  sub_1DC8867A8();
  sub_1DC886774();
  *(void *)(v1 + 32) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DC9C976C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = v1;
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1DCB86FE8();
    sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
    id v4 = v1;
    id v5 = v1;
    uint64_t v6 = sub_1DCB86FC8();
    os_log_type_t v7 = sub_1DCB88488();
    if (os_log_type_enabled(v6, v7))
    {
      int v8 = *(_DWORD *)(v0 + 44);
      uint64_t v9 = swift_slowAlloc();
      id v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109378;
      *(_DWORD *)(v0 + 40) = v8;
      sub_1DCB88778();
      *(_WORD *)(v9 + 8) = 2112;
      id v11 = v1;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 16) = v12;
      sub_1DCB88778();
      void *v10 = v12;

      _os_log_impl(&dword_1DC873000, v6, v7, "Connection state invalidated for client with PID %d; error: %@",
        (uint8_t *)v9,
        0x12u);
      sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
    }
    else
    {
    }
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v14 = *(void *)(v0 + 32);
  return v13(v14);
}

uint64_t sub_1DC9C998C(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a1;
  id v10 = (int *)((char *)a3 + *a3);
  int v8 = (void *)swift_task_alloc();
  v6[16] = v8;
  *int v8 = v6;
  v8[1] = sub_1DC9C9A7C;
  return ((uint64_t (*)(void *, uint64_t))v10)(v6 + 8, a2);
}

uint64_t sub_1DC9C9A7C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v2 = *v1;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  *(void *)(v4 + 136) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DC9C9B5C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  sub_1DC881A8C((void *)(v0 + 64), v4);
  sub_1DCAD30C4(v3, v2, v4, v5, (uint64_t *)(v0 + 16));
  if (v1)
  {
    sub_1DC8818D0(v0 + 64);
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v7 = *(_OWORD **)(v0 + 104);
    long long v8 = *(_OWORD *)(v0 + 16);
    long long v9 = *(_OWORD *)(v0 + 48);
    v7[1] = *(_OWORD *)(v0 + 32);
    v7[2] = v9;
    *uint64_t v7 = v8;
    sub_1DC8818D0(v0 + 64);
    sub_1DC8BA978();
  }
  return v6();
}

uint64_t sub_1DC9C9C3C()
{
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9C9C58()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000018;
  *(void *)(v0 + 24) = 0x80000001DCB93290;
  type metadata accessor for AnalysisClientUtils.RegenerativeConnection();
  uint64_t v1 = swift_allocObject();
  uint64_t result = sub_1DC9CA208();
  qword_1EAAFF8F8 = v1;
  return result;
}

id sub_1DC9C9CE0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  id result = sub_1DC9C9D28(a1, a2);
  if (v2) {
    return (id)v6;
  }
  return result;
}

id sub_1DC9C9D28(uint64_t a1, uint64_t a2)
{
  sub_1DC87E988(&qword_1EAAA3740);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DC9000F8();
  sub_1DC9CAB38();
  swift_bridgeObjectRetain();
  swift_retain();
  id v5 = sub_1DC9C9F6C(a1, a2, 4096);
  uint64_t v13 = sub_1DC9CAB30;
  uint64_t v14 = v4;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_1DC9C881C;
  uint64_t v12 = &unk_1F37FAA58;
  uint64_t v6 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_setInterruptionHandler_, v6);
  _Block_release(v6);
  uint64_t v13 = sub_1DC9CAB30;
  uint64_t v14 = v4;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_1DC9C881C;
  uint64_t v12 = &unk_1F37FACB0;
  uint64_t v7 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_setInvalidationHandler_, v7);
  _Block_release(v7);
  objc_msgSend(v5, sel_resume);
  swift_release();
  if (qword_1EAA9D1C0 != -1) {
    swift_once();
  }
  objc_msgSend(v5, sel_setRemoteObjectInterface_, qword_1EAAFF878);
  swift_bridgeObjectRelease_n();
  return v5;
}

id sub_1DC9C9F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = (void *)sub_1DCB87908();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, a3);

  return v6;
}

void sub_1DC9C9FE8()
{
  type metadata accessor for SNError();
  id v0 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0x697463656E6E6F63, 0xEF74736F6C206E6FLL);
  sub_1DC8FCC28(v0);
}

uint64_t sub_1DC9CA098()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EAA9FA88 + dword_1EAA9FA88);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9CA13C;
  return v3();
}

uint64_t sub_1DC9CA13C()
{
  sub_1DC8867A8();
  uint64_t v2 = v1;
  sub_1DC886774();
  uint64_t v3 = *v0;
  sub_1DC88678C();
  void *v4 = v3;
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_1DC9CA208()
{
  sub_1DC8E7AFC();
  swift_defaultActor_initialize();
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  sub_1DC886854();
  sub_1DC9CAAF0(v3);
  *(void *)(v1 + 152) = 0;
  swift_release();
  *(void *)(v1 + 112) = v2;
  *(void *)(v1 + 120) = v0;
  return v1;
}

uint64_t sub_1DC9CA260()
{
  uint64_t v1 = *(void **)(v0 + 128);
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  if (*(void *)(v0 + 152))
  {
    swift_retain();
    sub_1DCB87EE8();
    swift_release();
  }
  sub_1DC9CB1AC();
  *(void *)(v0 + 152) = 0;
  swift_release();
  swift_release();
  sub_1DC9CAAF0(*(void **)(v0 + 128));
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1DC9CA30C()
{
  sub_1DC9CA260();

  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for AnalysisClientUtils.RegenerativeConnection()
{
  return self;
}

uint64_t sub_1DC9CA35C()
{
  uint64_t v1 = *(void **)(v0 + 128);
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  if (*(void *)(v0 + 152))
  {
    swift_retain();
    sub_1DCB87EE8();
    swift_release();
  }
  sub_1DC9CB1AC();
  *(void *)(v0 + 152) = 0;

  return swift_release();
}

uint64_t sub_1DC9CA3EC()
{
  sub_1DC8867A8();
  *(void *)(v1 + 16) = v0;
  sub_1DC87E988(&qword_1EAAA2180);
  *(void *)(v1 + 24) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DC9CA47C, v0, 0);
}

uint64_t sub_1DC9CA47C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void **)(v1 + 128);
  if (v2)
  {
    id v3 = *(id *)(v1 + 128);
    uint64_t v4 = *(void *)(v1 + 136);
    uint64_t v5 = *(void *)(v1 + 144);
  }
  else
  {
    uint64_t v8 = (*(uint64_t (**)(void))(v1 + 112))();
    uint64_t v9 = v0[3];
    uint64_t v10 = (void *)v8;
    uint64_t v4 = v11;
    uint64_t v5 = v12;
    uint64_t v19 = v0[2];
    uint64_t v13 = sub_1DCB87E48();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v9, 1, 1, v13);
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = (void *)swift_allocObject();
    void v15[2] = 0;
    v15[3] = 0;
    v15[4] = v10;
    v15[5] = v4;
    v15[6] = v5;
    v15[7] = v14;
    id v16 = v10;
    swift_retain_n();
    id v3 = v16;
    uint64_t v17 = sub_1DCA97644();
    uint64_t v18 = *(void **)(v1 + 128);
    *(void *)(v1 + 128) = v3;
    *(void *)(v1 + 136) = v4;
    *(void *)(v1 + 144) = v5;
    sub_1DC9CAAF0(v18);
    *(void *)(v19 + 152) = v17;
    swift_release();
  }
  sub_1DC9CAD70(v2);
  swift_task_dealloc();
  id v6 = (uint64_t (*)(id, uint64_t, uint64_t))v0[1];
  return v6(v3, v4, v5);
}

void type metadata accessor for AnalysisClientUtils()
{
}

uint64_t sub_1DC9CA690(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t sub_1DC9CA6D4(id *a1)
{
  return swift_release();
}

uint64_t sub_1DC9CA710(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DC9CA76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

void type metadata accessor for AnalysisClientUtils.ConnectionToServer()
{
}

uint64_t sub_1DC9CA7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 40) = a7;
  uint64_t v10 = (uint64_t (*)(void))((char *)a5 + *a5);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v7 + 48) = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_1DC9CA890;
  return v10();
}

uint64_t sub_1DC9CA890()
{
  sub_1DC8867A8();
  uint64_t v2 = v1;
  sub_1DC886774();
  uint64_t v3 = *v0;
  sub_1DC88678C();
  void *v4 = v3;
  swift_task_dealloc();

  sub_1DC886854();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1DC9CA964()
{
  sub_1DC8867A8();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    return MEMORY[0x1F4188298](sub_1DC9CAA18, Strong, 0);
  }
  else
  {
    sub_1DC8BA978();
    return v2();
  }
}

uint64_t sub_1DC9CAA18()
{
  sub_1DC8867A8();
  sub_1DC9CA35C();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

void sub_1DC9CAA78()
{
}

void sub_1DC9CAA80()
{
}

uint64_t sub_1DC9CAA9C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1DC9CAAD4()
{
  return sub_1DC9C9CE0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void *sub_1DC9CAAF0(void *result)
{
  if (result)
  {

    return (void *)swift_release();
  }
  return result;
}

void sub_1DC9CAB30()
{
}

unint64_t sub_1DC9CAB38()
{
  unint64_t result = qword_1EAAA3748;
  if (!qword_1EAAA3748)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EAAA3748);
  }
  return result;
}

uint64_t sub_1DC9CAB78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC9CAB88()
{
  return swift_release();
}

uint64_t sub_1DC9CAB90()
{
  sub_1DC8867A8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9CA13C;
  return sub_1DC9CA098();
}

uint64_t sub_1DC9CAC1C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1DC9CAC54()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9CACA4(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = (int *)v1[5];
  uint64_t v8 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)sub_1DC886800(v9);
  void *v10 = v11;
  v10[1] = sub_1DC8D6930;
  return sub_1DC9CA7C0(a1, v3, v4, v5, v6, v8, v7);
}

void *sub_1DC9CAD70(void *result)
{
  if (result)
  {
    id v1 = result;
    return (void *)swift_retain();
  }
  return result;
}

uint64_t sub_1DC9CADB0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1DC9CADE8()
{
}

uint64_t sub_1DC9CADF4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9CAE2C()
{
  sub_1DC8867A8();
  uint64_t v2 = *(void *)(v0 + 16);
  int v3 = *(_DWORD *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_1DC9CB190;
  return sub_1DC9C95F0(v2, v3);
}

uint64_t sub_1DC9CAEC4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9CAF04()
{
  sub_1DC8E7AFC();
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_1DC886800(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1DC8D6930;
  uint64_t v7 = sub_1DC886878();
  return sub_1DC9C998C(v7, v8, v9, v1, v3, v2);
}

uint64_t sub_1DC9CAFB4()
{
  sub_1DC8E7AFC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC886878();
  return sub_1DC9C8734(v3, v4, v5);
}

uint64_t sub_1DC9CB050()
{
  sub_1DC8818D0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1DC9CB088(uint64_t a1, uint64_t a2)
{
  return sub_1DC9C93E8(a1, a2, (void *)(v2 + 16));
}

uint64_t sub_1DC9CB0A4()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9CB0EC()
{
  sub_1DC8E7AFC();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  return sub_1DC9C91EC();
}

void *sub_1DC9CB1AC()
{
  uint64_t v3 = *(void **)(v0 + 128);
  void *v1 = 0;
  v1[1] = 0;
  v1[2] = 0;
  return sub_1DC9CAAF0(v3);
}

double SNShazamSignatureResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___SNShazamSignatureResult_impl;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 40);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
  *(void *)(a1 + 8) = *(void *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  double result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v3;
  return result;
}

double SNShazamSignatureResult.timeRange.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = v1 + OBJC_IVAR___SNShazamSignatureResult_impl;
  *(void *)uint64_t v3 = *(void *)a1;
  *(void *)(v3 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  double result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v2;
  return result;
}

double (*SNShazamSignatureResult.timeRange.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNShazamSignatureResult.timeRange.getter((uint64_t)v3);
  return sub_1DC9CB350;
}

double sub_1DC9CB350(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6] + OBJC_IVAR___SNShazamSignatureResult_impl;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[4];
  long long v6 = *((_OWORD *)v1 + 1);
  *(void *)uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v2;
  free(v1);
  return result;
}

id SNShazamSignatureResult.signature.getter()
{
  return *(id *)(v0 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
}

void SNShazamSignatureResult.signature.setter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
  *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48) = a1;
}

void sub_1DC9CB448(id *a1)
{
}

void (*SNShazamSignatureResult.signature.modify(void *a1))(void **a1, char a2)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
  *a1 = v2;
  a1[1] = v1;
  id v3 = v2;
  return sub_1DC9CB4CC;
}

void sub_1DC9CB4CC(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    SNShazamSignatureResult.signature.setter((uint64_t)v3);
  }
  else
  {
    SNShazamSignatureResult.signature.setter((uint64_t)v2);
  }
}

uint64_t SNShazamSignatureResult.sequenceNum.getter()
{
  return *(void *)(v0 + OBJC_IVAR___SNShazamSignatureResult_impl + 56);
}

uint64_t SNShazamSignatureResult.sequenceNum.setter(uint64_t result)
{
  *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 56) = result;
  return result;
}

void *(*SNShazamSignatureResult.sequenceNum.modify(void *a1))(void *result)
{
  uint64_t v2 = OBJC_IVAR___SNShazamSignatureResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2 + 56);
  return sub_1DC9CB5E0;
}

void *sub_1DC9CB5E0(void *result)
{
  *(void *)(result[1] + result[2] + 56) = *result;
  return result;
}

id sub_1DC9CB5F4(void *a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  long long v6 = v2;
  objc_msgSend(a1, sel_copy);
  sub_1DCB88808();
  swift_unknownObjectRelease();
  sub_1DC9CC30C();
  if (swift_dynamicCast())
  {
    id v7 = v18;
  }
  else
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1DCB86FE8();
    sub_1DC89F57C(v8, (uint64_t)qword_1EAAFF810);
    uint64_t v9 = sub_1DCB86FC8();
    os_log_type_t v10 = sub_1DCB88468();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1DC873000, v9, v10, "Failed to copy Shazam signature", v11, 2u);
      MEMORY[0x1E01A99C0](v11, -1, -1);
    }

    id v7 = a1;
  }
  uint64_t v12 = MEMORY[0x1E4F1FA20];
  uint64_t v13 = *(void *)(MEMORY[0x1E4F1FA20] + 40);
  uint64_t v14 = &v6[OBJC_IVAR___SNShazamSignatureResult_impl];
  *(void *)uint64_t v14 = *MEMORY[0x1E4F1FA20];
  *((void *)v14 + 1) = *(void *)(v12 + 8);
  *((_OWORD *)v14 + 1) = *(_OWORD *)(v12 + 16);
  *((void *)v14 + 4) = *(void *)(v12 + 32);
  *((void *)v14 + 5) = v13;
  *((void *)v14 + 6) = v7;
  *((void *)v14 + 7) = a2;

  v17.receiver = v6;
  v17.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

id sub_1DC9CB7F0(uint64_t a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  long long v4 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  long long v6 = &v3[OBJC_IVAR___SNShazamSignatureResult_impl];
  *(void *)long long v6 = *(void *)a1;
  *((void *)v6 + 1) = *(void *)(a1 + 8);
  *((_OWORD *)v6 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)v6 + 4) = *(void *)(a1 + 32);
  *(_OWORD *)(v6 + 40) = v4;
  *((void *)v6 + 7) = v5;
  v8.receiver = v3;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

id SNShazamSignatureResult.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  v9[0] = *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
  sub_1DC8AA540(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
  void v9[5] = v4;
  v9[6] = v5;
  v9[7] = v6;
  id v7 = v5;
  id result = sub_1DC9CB7F0((uint64_t)v9);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t SNShazamSignatureResult.hash.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
  sub_1DCB891A8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  id v2 = v1;
  objc_msgSend(v2, sel_hash);
  sub_1DCB891B8();
  sub_1DCB891E8();
  uint64_t v3 = sub_1DCB891F8();

  return v3;
}

unint64_t SNShazamSignatureResult.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v21);
  if (v22)
  {
    sub_1DC87E9CC(&v21, v20);
    sub_1DC87E9DC((uint64_t)v20, (uint64_t)v16);
    if (swift_dynamicCast())
    {
      uint64_t v3 = (void *)v15[0];
      uint64_t v4 = v1 + OBJC_IVAR___SNShazamSignatureResult_impl;
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 40);
      unint64_t v7 = *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
      uint64_t v8 = *(void *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 56);
      uint64_t v9 = v15[0] + OBJC_IVAR___SNShazamSignatureResult_impl;
      uint64_t v10 = *(void *)(v15[0] + OBJC_IVAR___SNShazamSignatureResult_impl);
      uint64_t v11 = *(void *)(v15[0] + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
      uint64_t v12 = *(void *)(v15[0] + OBJC_IVAR___SNShazamSignatureResult_impl + 56);
      v16[0] = v5;
      v16[1] = *(void *)(v4 + 8);
      long long v17 = *(_OWORD *)(v4 + 16);
      uint64_t v18 = *(void *)(v4 + 32);
      uint64_t v19 = v6;
      v15[0] = v10;
      sub_1DC8AA540(v9);
      v15[5] = v13;
      if (static TimeRange.== infix(_:_:)((uint64_t)v16, (uint64_t)v15))
      {
        LODWORD(v7) = objc_msgSend((id)v7, sel_isEqual_, v11, v15[0]);

        if (v8 == v12) {
          unint64_t v7 = v7;
        }
        else {
          unint64_t v7 = 0;
        }
        goto LABEL_10;
      }
    }
    unint64_t v7 = 0;
LABEL_10:
    sub_1DC8818D0((uint64_t)v20);
    return v7;
  }
  return 0;
}

id SNShazamSignatureResult.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SNShazamSignatureResult.init(coder:)(a1);
}

id SNShazamSignatureResult.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87DA18();
  swift_getObjectType();

  id v4 = (id)v7[6];
  id v5 = sub_1DC9CB7F0((uint64_t)v7);

  swift_deallocPartialClassInstance();
  return v5;
}

Swift::Void __swiftcall SNShazamSignatureResult.encode(with:)(NSCoder with)
{
  long long v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 16);
  v5[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl);
  v5[1] = v3;
  long long v4 = *(_OWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 48);
  id v5[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNShazamSignatureResult_impl + 32);
  void v5[3] = v4;
  sub_1DC882530((uint64_t)v5);
  sub_1DC87B994((uint64_t)v5, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
  sub_1DC9CC1D8((uint64_t)v5);
}

uint64_t static SNShazamSignatureResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNShazamSignatureResult.description.getter()
{
  uint64_t v1 = v0;
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  id v2 = objc_msgSendSuper2(&v17, sel_description);
  uint64_t v3 = sub_1DCB87938();
  uint64_t v5 = v4;

  uint64_t v18 = v3;
  uint64_t v19 = v5;
  sub_1DCB87A18();
  uint64_t v6 = &v1[OBJC_IVAR___SNShazamSignatureResult_impl];
  id v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR___SNShazamSignatureResult_impl + 48], sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  v20[0] = *((void *)v6 + 7);
  sub_1DCB88F98();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  SNShazamSignatureResult.timeRange.getter((uint64_t)v20);
  uint64_t v8 = v20[0];
  uint64_t v9 = v20[2];
  uint64_t v10 = v20[3];
  uint64_t v11 = v20[5];
  uint64_t v12 = self;
  v16[0] = v8;
  v16[1] = v20[1];
  void v16[2] = v9;
  v16[3] = v10;
  v16[4] = v20[4];
  v16[5] = v11;
  id v13 = objc_msgSend(v12, sel_valueWithCMTimeRange_, v16);
  id v14 = objc_msgSend(v13, sel_description);
  sub_1DCB87938();

  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  return v18;
}

id SNShazamSignatureResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNShazamSignatureResult.init()()
{
}

id SNShazamSignatureResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC9CC1D8(uint64_t a1)
{
  return a1;
}

double sub_1DC9CC204@<D0>(uint64_t a1@<X8>)
{
  return SNShazamSignatureResult.timeRange.getter(a1);
}

double sub_1DC9CC228(uint64_t a1)
{
  return SNShazamSignatureResult.timeRange.setter(a1);
}

id sub_1DC9CC24C@<X0>(void *a1@<X8>)
{
  id result = SNShazamSignatureResult.signature.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1DC9CC27C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SNShazamSignatureResult.sequenceNum.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1DC9CC2A8(uint64_t *a1)
{
  return SNShazamSignatureResult.sequenceNum.setter(*a1);
}

uint64_t type metadata accessor for SNShazamSignatureResult()
{
  return self;
}

uint64_t method lookup function for SNShazamSignatureResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNShazamSignatureResult);
}

unint64_t sub_1DC9CC30C()
{
  unint64_t result = qword_1EAAA37D8;
  if (!qword_1EAAA37D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAAA37D8);
  }
  return result;
}

BOOL sub_1DC9CC34C(char a1, char a2)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  char v4 = a1;
  return sub_1DCB66250(*(atomic_uchar **)(v2 + 16), &v4, a2 & 1);
}

uint64_t sub_1DC9CC3A8()
{
  return sub_1DC9CC494((void (*)(void))sub_1DCB662CC);
}

uint64_t type metadata accessor for ManagedAtomicInt64()
{
  return self;
}

BOOL sub_1DC9CC3E4(uint64_t a1, unint64_t a2)
{
  v4[1] = *MEMORY[0x1E4F143B8];
  v4[0] = a1;
  return sub_1DCB66220(*(atomic_ullong **)(v2 + 16), v4, a2);
}

uint64_t sub_1DC9CC440()
{
  return sub_1DC9CC494((void (*)(void))sub_1DCB662E8);
}

uint64_t type metadata accessor for ManagedAtomicInt32()
{
  return self;
}

uint64_t sub_1DC9CC47C()
{
  return sub_1DC9CC494((void (*)(void))sub_1DCB66304);
}

uint64_t sub_1DC9CC494(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedAtomicBool()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CInteropUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9CC5C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CInteropUtils.DomainError()
{
  return &type metadata for CInteropUtils.DomainError;
}

unint64_t sub_1DC9CC600()
{
  unint64_t result = qword_1EAAA37E0;
  if (!qword_1EAAA37E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA37E0);
  }
  return result;
}

uint64_t SNAOPReport.SuccessPayload.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AOPClassificationResult();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v4);
  sub_1DC9D2FF4();
  type metadata accessor for SNAOPReport.SuccessPayload(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v5);
  sub_1DC9D0214();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCB891B8();
    return sub_1DCB891D8();
  }
  else
  {
    sub_1DC9D00E4();
    sub_1DCB891B8();
    sub_1DCB86B98();
    sub_1DC9D0050(&qword_1EAAA0170, MEMORY[0x1E4F27928]);
    sub_1DCB87818();
    sub_1DCB87818();
    uint64_t v7 = *(void *)(v1 + *(int *)(v3 + 24));
    swift_bridgeObjectRetain();
    sub_1DC920218(a1, v7);
    swift_bridgeObjectRelease();
    return sub_1DC9CFECC(v1, (void (*)(void))type metadata accessor for AOPClassificationResult);
  }
}

uint64_t type metadata accessor for SNAOPReport.SuccessPayload(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA38F0);
}

uint64_t static SNAOPReport.SuccessPayload.== infix(_:_:)()
{
  uint64_t v3 = type metadata accessor for AOPClassificationResult();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DC9D2F34();
  type metadata accessor for SNAOPReport.SuccessPayload(v5);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v6);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA37E8);
  uint64_t v11 = sub_1DC8BADF0(v10);
  MEMORY[0x1F4188790](v11);
  sub_1DC9D2FA4();
  id v13 = (_DWORD *)(v0 + v12);
  sub_1DC9D0214();
  sub_1DC9D0214();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DC9D0214();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1DC9D00E4();
      if (sub_1DCB86B68() & 1) != 0 && (sub_1DCB86B68())
      {
        sub_1DC91BE9C(*(void *)&v9[*(int *)(v3 + 24)], *(void *)(v1 + *(int *)(v3 + 24)));
        if (v15)
        {
          sub_1DC9CFECC(v1, (void (*)(void))type metadata accessor for AOPClassificationResult);
          sub_1DC9CFECC((uint64_t)v9, (void (*)(void))type metadata accessor for AOPClassificationResult);
          sub_1DC9CFECC(v0, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
          return 1;
        }
      }
      sub_1DC9CFECC(v1, (void (*)(void))type metadata accessor for AOPClassificationResult);
      sub_1DC9CFECC((uint64_t)v9, (void (*)(void))type metadata accessor for AOPClassificationResult);
      sub_1DC9CFECC(v0, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
      return 0;
    }
    sub_1DC9CFECC((uint64_t)v9, (void (*)(void))type metadata accessor for AOPClassificationResult);
LABEL_6:
    sub_1DC88CC04(v0, &qword_1EAAA37E8);
    return 0;
  }
  sub_1DC9D0214();
  if (swift_getEnumCaseMultiPayload() != 1) {
    goto LABEL_6;
  }
  BOOL v14 = *v2 == *v13;
  sub_1DC9CFECC(v0, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
  return v14;
}

BOOL static SNAOPReport.AOPNewDataAvailable.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DC9CCB64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6966697373616C63 && a2 == 0xEF736E6F69746163;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB95010)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC9CCC78(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x6966697373616C63;
  }
}

uint64_t sub_1DC9CCCC0(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D0004();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CCCFC(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D0004();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9CCD38()
{
  return sub_1DC9CCC78(*v0);
}

uint64_t sub_1DC9CCD40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9CCB64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9CCD68(uint64_t a1)
{
  unint64_t v2 = sub_1DC9CFF20();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CCDA4(uint64_t a1)
{
  unint64_t v2 = sub_1DC9CFF20();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9CCDE0(uint64_t a1)
{
  unint64_t v2 = sub_1DC9CFF6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CCE1C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9CFF6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SNAOPReport.SuccessPayload.encode(to:)()
{
  sub_1DC88D6B0();
  uint64_t v23 = v1;
  uint64_t v24 = v0;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA37F0);
  sub_1DC89D4E0();
  v22[6] = v6;
  v22[7] = v5;
  MEMORY[0x1F4188790](v5);
  sub_1DC9D2F18(v7, v22[0]);
  sub_1DC87E988(&qword_1EAAA37F8);
  sub_1DC89D4E0();
  void v22[4] = v9;
  v22[5] = v8;
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  _OWORD v22[2] = v10;
  v22[1] = type metadata accessor for AOPClassificationResult();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1DC9D2F6C();
  type metadata accessor for SNAOPReport.SuccessPayload(v12);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v13);
  sub_1DC89D970();
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA3800);
  sub_1DC89D4E0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(v4, v4[3]);
  sub_1DC9CFF20();
  sub_1DC9D304C();
  sub_1DC9D0214();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC9CFF6C();
    sub_1DC9D2EFC();
    sub_1DC9CFFB8();
    sub_1DCB88F18();
    sub_1DC9D2E50();
    v20();
  }
  else
  {
    sub_1DC9D00E4();
    sub_1DC9D0004();
    sub_1DC9D2EFC();
    sub_1DC9D0050(&qword_1EAAA3828, (void (*)(uint64_t))type metadata accessor for AOPClassificationResult);
    sub_1DCB88F18();
    sub_1DC9D2E50();
    v21();
    sub_1DC9CFECC(v2, (void (*)(void))type metadata accessor for AOPClassificationResult);
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
  sub_1DC88D674();
}

uint64_t SNAOPReport.SuccessPayload.hashValue.getter()
{
  return sub_1DC9CDF80((void (*)(unsigned char *))SNAOPReport.SuccessPayload.hash(into:));
}

void SNAOPReport.SuccessPayload.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  sub_1DC88D6B0();
  id v54 = v10;
  uint64_t v13 = v12;
  v50[4] = v14;
  v50[5] = sub_1DC87E988(&qword_1EAAA3830);
  sub_1DC89D4E0();
  v50[8] = v15;
  MEMORY[0x1F4188790](v16);
  sub_1DC96FA40(v17, v50[0]);
  sub_1DC87E988(&qword_1EAAA3838);
  sub_1DC89D4E0();
  v50[6] = v19;
  v50[7] = v18;
  MEMORY[0x1F4188790](v18);
  sub_1DC88D550();
  uint64_t v52 = v20;
  uint64_t v53 = sub_1DC87E988(&qword_1EAAA3840);
  sub_1DC89D4E0();
  uint64_t v51 = v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v23 = sub_1DC9D2F50();
  uint64_t v24 = type metadata accessor for SNAOPReport.SuccessPayload(v23);
  sub_1DC88819C();
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (uint64_t)v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)v50 - v30;
  MEMORY[0x1F4188790](v29);
  unint64_t v33 = (char *)v50 - v32;
  sub_1DC881A8C(v13, v13[3]);
  sub_1DC9CFF20();
  uint64_t v34 = v54;
  sub_1DCB89298();
  if (v34) {
    goto LABEL_10;
  }
  v50[0] = v28;
  v50[1] = (uint64_t)v33;
  v50[2] = (uint64_t)v31;
  v50[3] = v24;
  unint64_t v35 = v53;
  id v54 = v13;
  uint64_t v36 = sub_1DCB88E58();
  uint64_t v37 = *(void *)(v36 + 16);
  if (!v37)
  {
    uint64_t v38 = v51;
LABEL_8:
    sub_1DCB88B18();
    swift_allocError();
    sub_1DC87E988(&qword_1EAA9E130);
    sub_1DC9D2FD0();
    sub_1DC9D2ED0();
    uint64_t v39 = sub_1DC9D3038();
    v40(v39);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, unint64_t))(v38 + 8))(v11, v35);
    uint64_t v13 = v54;
LABEL_10:
    uint64_t v41 = (uint64_t)v13;
    goto LABEL_11;
  }
  sub_1DC9D2E9C(v36, v37);
  sub_1DC9D3098();
  if (v35 >> 1)
  {
    uint64_t v38 = v51;
    unint64_t v35 = (unint64_t)v13;
    goto LABEL_8;
  }
  if (v28)
  {
    sub_1DC9CFF6C();
    sub_1DC9D2E60();
    sub_1DC9D0098();
    sub_1DC9D306C();
    uint64_t v42 = sub_1DC9D2E38();
    v43(v42);
    swift_unknownObjectRelease();
    uint64_t v44 = sub_1DC9D2E84();
    v45(v44);
    *(_DWORD *)v50[0] = a10;
  }
  else
  {
    sub_1DC9D0004();
    sub_1DC9D2E60();
    type metadata accessor for AOPClassificationResult();
    sub_1DC9D0050(&qword_1EAAA3850, (void (*)(uint64_t))type metadata accessor for AOPClassificationResult);
    sub_1DC9D306C();
    uint64_t v46 = sub_1DC9D2E38();
    v47(v46);
    swift_unknownObjectRelease();
    uint64_t v48 = sub_1DC9D2E84();
    v49(v48);
  }
  swift_storeEnumTagMultiPayload();
  sub_1DC9D00E4();
  sub_1DC9D00E4();
  uint64_t v41 = (uint64_t)v54;
LABEL_11:
  sub_1DC8818D0(v41);
  sub_1DC88D674();
}

uint64_t sub_1DC9CD674(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SNAOPReport.SuccessPayload(0);
  uint64_t v4 = sub_1DC8BADF0(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DC9D2F88();
  type metadata accessor for SNAOPReport.Payload(v5);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v6);
  sub_1DC9D2FF4();
  sub_1DC9D0214();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCB891B8();
    sub_1DCB891D8();
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1DC9D00E4();
    sub_1DCB891B8();
    SNAOPReport.SuccessPayload.hash(into:)(a1);
    return sub_1DC9CFECC(v1, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
  }
}

uint64_t sub_1DC9CD7D0()
{
  uint64_t v3 = type metadata accessor for SNAOPReport.SuccessPayload(0);
  uint64_t v4 = sub_1DC8BADF0(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DC9D2F34();
  type metadata accessor for SNAOPReport.Payload(v5);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v6);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA39F8);
  uint64_t v11 = sub_1DC8BADF0(v10);
  MEMORY[0x1F4188790](v11);
  sub_1DC9D2FA4();
  uint64_t v13 = v0 + v12;
  sub_1DC9D0214();
  sub_1DC9D0214();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC9D0214();
    uint64_t v15 = *(void *)(v2 + 8);
    uint64_t v14 = *(void *)(v2 + 16);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (*(_DWORD *)v2 == *(_DWORD *)v13)
      {
        if (v15 == *(void *)(v13 + 8) && v14 == *(void *)(v13 + 16))
        {
          swift_bridgeObjectRelease_n();
LABEL_20:
          sub_1DC9CFECC(v0, (void (*)(void))type metadata accessor for SNAOPReport.Payload);
          char v18 = 1;
          return v18 & 1;
        }
        char v17 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1DC9CFECC(v0, (void (*)(void))type metadata accessor for SNAOPReport.Payload);
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1DC88CC04(v0, &qword_1EAAA39F8);
LABEL_17:
    char v18 = 0;
    return v18 & 1;
  }
  sub_1DC9D0214();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DC9CFECC((uint64_t)v9, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
    goto LABEL_13;
  }
  sub_1DC9D00E4();
  char v18 = static SNAOPReport.SuccessPayload.== infix(_:_:)();
  sub_1DC9CFECC(v1, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
  sub_1DC9CFECC((uint64_t)v9, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
  sub_1DC9CFECC(v0, (void (*)(void))type metadata accessor for SNAOPReport.Payload);
  return v18 & 1;
}

uint64_t sub_1DC9CDAF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC9CDBE8(char a1)
{
  if (a1) {
    return 0x6572756C696166;
  }
  else {
    return 0x73736563637573;
  }
}

void sub_1DC9CDC18()
{
  sub_1DC88D6B0();
  uint64_t v26 = v0;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA3990);
  sub_1DC89D4E0();
  v24[5] = v6;
  v24[6] = v5;
  MEMORY[0x1F4188790](v5);
  sub_1DC88D550();
  v24[3] = v7;
  v24[4] = sub_1DC87E988(&qword_1EAAA3998);
  sub_1DC89D4E0();
  v24[2] = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC95AE60();
  v24[1] = type metadata accessor for SNAOPReport.SuccessPayload(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1DC9D2F6C();
  type metadata accessor for SNAOPReport.Payload(v11);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v12);
  sub_1DC89D970();
  uint64_t v13 = sub_1DC87E988(&qword_1EAAA39A0);
  sub_1DC89D4E0();
  uint64_t v25 = v14;
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(v4, v4[3]);
  sub_1DC9D250C();
  sub_1DC9D304C();
  sub_1DC9D0214();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    int v18 = *v1;
    uint64_t v20 = *((void *)v1 + 1);
    uint64_t v19 = *((void *)v1 + 2);
    LOBYTE(v27) = 1;
    sub_1DC9D2558();
    sub_1DC9D2EFC();
    int v27 = v18;
    uint64_t v28 = v20;
    uint64_t v29 = v19;
    sub_1DC9D25A4();
    sub_1DCB88F18();
    sub_1DC88D5C8();
    v21();
    sub_1DC88D5C8();
    v22();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DC9D00E4();
    LOBYTE(v27) = 0;
    sub_1DC9D25F0();
    sub_1DC9D2EFC();
    sub_1DC9D0050(&qword_1EAAA39C8, (void (*)(uint64_t))type metadata accessor for SNAOPReport.SuccessPayload);
    sub_1DCB88F18();
    sub_1DC9D2E50();
    v23();
    sub_1DC9CFECC(v2, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v13);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC9CDF80(void (*a1)(unsigned char *))
{
  sub_1DC89D754();
  a1(v3);
  return sub_1DCB891F8();
}

void sub_1DC9CDFC0()
{
  sub_1DC88D6B0();
  uint64_t v4 = v3;
  v42[4] = v5;
  v42[5] = sub_1DC87E988(&qword_1EAAA39D0);
  sub_1DC89D4E0();
  v42[8] = v6;
  MEMORY[0x1F4188790](v7);
  sub_1DC9D2F18(v8, v42[0]);
  sub_1DC87E988(&qword_1EAAA39D8);
  sub_1DC89D4E0();
  v42[6] = v10;
  v42[7] = v9;
  MEMORY[0x1F4188790](v9);
  sub_1DC96FA40(v11, v42[0]);
  uint64_t v44 = sub_1DC87E988(&qword_1EAAA39E0);
  sub_1DC89D4E0();
  uint64_t v43 = v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = sub_1DC9D2F88();
  uint64_t v15 = type metadata accessor for SNAOPReport.Payload(v14);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v16);
  sub_1DC92F448();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t)v42 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)v42 - v21;
  sub_1DC881A8C(v4, v4[3]);
  sub_1DC9D250C();
  sub_1DCB89298();
  if (v1) {
    goto LABEL_10;
  }
  v42[1] = (uint64_t)v22;
  v42[2] = v20;
  v42[0] = v2;
  unint64_t v23 = v44;
  v42[3] = v15;
  uint64_t v24 = sub_1DCB88E58();
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v26 = v0;
  if (!v25)
  {
    uint64_t v27 = v43;
LABEL_8:
    sub_1DCB88B18();
    swift_allocError();
    sub_1DC87E988(&qword_1EAA9E130);
    sub_1DC9D2FD0();
    sub_1DC9D2ED0();
    uint64_t v28 = sub_1DC9D3038();
    v29(v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, unint64_t))(v27 + 8))(v26, v23);
LABEL_10:
    uint64_t v30 = (uint64_t)v4;
    goto LABEL_11;
  }
  sub_1DC9D2E9C(v24, v25);
  sub_1DC9D3098();
  if (v23 >> 1)
  {
    uint64_t v27 = v43;
    unint64_t v23 = (unint64_t)v4;
    goto LABEL_8;
  }
  if (v20)
  {
    LOBYTE(v45) = 1;
    sub_1DC9D2558();
    sub_1DC9D2E60();
    sub_1DC9D263C();
    sub_1DC9D306C();
    uint64_t v31 = sub_1DC9D2E38();
    v32(v31);
    swift_unknownObjectRelease();
    uint64_t v33 = sub_1DC9D2E84();
    v34(v33);
    uint64_t v35 = v46;
    uint64_t v36 = v47;
    uint64_t v37 = v42[0];
    *(_DWORD *)v42[0] = v45;
    *(void *)(v37 + 8) = v35;
    *(void *)(v37 + 16) = v36;
  }
  else
  {
    LOBYTE(v45) = 0;
    sub_1DC9D25F0();
    sub_1DC9D2E60();
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    sub_1DC9D0050(&qword_1EAAA39F0, (void (*)(uint64_t))type metadata accessor for SNAOPReport.SuccessPayload);
    sub_1DC9D306C();
    uint64_t v38 = sub_1DC9D2E38();
    v39(v38);
    swift_unknownObjectRelease();
    uint64_t v40 = sub_1DC9D2E84();
    v41(v40);
  }
  swift_storeEnumTagMultiPayload();
  sub_1DC9D00E4();
  sub_1DC9D00E4();
  uint64_t v30 = (uint64_t)v4;
LABEL_11:
  sub_1DC8818D0(v30);
  sub_1DC88D674();
}

uint64_t sub_1DC9CE488()
{
  sub_1DCB891D8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9CE4EC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 1;
  }
  else {
    return sub_1DCB89018();
  }
}

uint64_t sub_1DC9CE534(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F727245706F61 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC9CE624(char a1)
{
  if (a1) {
    return 0x6567617373656DLL;
  }
  else {
    return 0x726F727245706F61;
  }
}

void sub_1DC9CE65C()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA3A50);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DC9D2BF8();
  sub_1DCB892B8();
  sub_1DC87E988(&qword_1EAAA3A60);
  sub_1DC8CC998(&qword_1EAAA3A68, &qword_1EAAA3A60);
  sub_1DC9D30CC();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC9D300C();
    sub_1DCB88EC8();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1DC88D674();
}

uint64_t sub_1DC9CE7C4()
{
  return sub_1DCB891F8();
}

void sub_1DC9CE830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  sub_1DC88D6B0();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_1DC87E988(&qword_1EAAA3A70);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v16);
  sub_1DC881A8C(v13, v13[3]);
  sub_1DC9D2BF8();
  sub_1DC8E7A44();
  if (!v11)
  {
    sub_1DC87E988(&qword_1EAAA3A60);
    sub_1DC8CC998(&qword_1EAAA3A78, &qword_1EAAA3A60);
    sub_1DCB88DF8();
    sub_1DC9D300C();
    uint64_t v17 = sub_1DCB88DA8();
    uint64_t v19 = v18;
    uint64_t v20 = sub_1DC9D3084();
    v21(v20);
    *(_DWORD *)uint64_t v15 = a11;
    *(void *)(v15 + 8) = v17;
    *(void *)(v15 + 16) = v19;
  }
  sub_1DC8818D0((uint64_t)v13);
  sub_1DC88D674();
}

void sub_1DC9CE9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SNAOPReport.SuccessPayload.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1DC9CE9D4()
{
}

uint64_t sub_1DC9CE9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9CEC20(a1, a2, a3, (void (*)(unsigned char *))SNAOPReport.SuccessPayload.hash(into:));
}

uint64_t sub_1DC9CEA10()
{
  return sub_1DC9CDBE8(*v0);
}

uint64_t sub_1DC9CEA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9CDAF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9CEA40(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D250C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CEA7C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D250C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9CEAB8(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D2558();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CEAF4(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D2558();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9CEB30(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D25F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CEB6C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D25F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DC9CEBA8()
{
}

void sub_1DC9CEBC0()
{
}

uint64_t sub_1DC9CEBD8()
{
  return sub_1DC9CDF80((void (*)(unsigned char *))sub_1DC9CD674);
}

uint64_t sub_1DC9CEC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9CEC20(a1, a2, a3, (void (*)(unsigned char *))sub_1DC9CD674);
}

uint64_t sub_1DC9CEC20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1DCB891A8();
  a4(v6);
  return sub_1DCB891F8();
}

uint64_t sub_1DC9CEC68()
{
  return sub_1DC9CE624(*v0);
}

uint64_t sub_1DC9CEC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9CE534(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9CEC98(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D2BF8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CECD4(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D2BF8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DC9CED10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1DC9CE830(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SHIDWORD(vars8));
}

void sub_1DC9CED28()
{
}

uint64_t sub_1DC9CED48()
{
  return sub_1DCB891F8();
}

uint64_t SNAOPReport.AOPNewDataAvailable.hash(into:)()
{
  return sub_1DCB891D8();
}

uint64_t sub_1DC9CEDE8(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D013C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CEE24(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D013C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SNAOPReport.AOPNewDataAvailable.encode(to:)()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  sub_1DC87E988(&qword_1EAAA3858);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC881A8C(v1, v1[3]);
  sub_1DC9D013C();
  sub_1DCB892B8();
  sub_1DCB88F58();
  uint64_t v3 = sub_1DC8E76BC();
  v4(v3);
  sub_1DC88D674();
}

uint64_t SNAOPReport.AOPNewDataAvailable.hashValue.getter()
{
  return sub_1DCB891F8();
}

void SNAOPReport.AOPNewDataAvailable.init(from:)()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA3868);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC9D013C();
  sub_1DC8E7A44();
  if (!v0)
  {
    int v6 = sub_1DCB88E38();
    uint64_t v7 = sub_1DC8E76BC();
    v8(v7);
    _DWORD *v4 = v6;
  }
  sub_1DC8818D0((uint64_t)v2);
  sub_1DC88D674();
}

void sub_1DC9CF080()
{
}

void sub_1DC9CF098()
{
}

uint64_t SNAOPReport.hash(into:)(uint64_t a1)
{
  return sub_1DC9CD674(a1);
}

uint64_t static SNAOPReport.== infix(_:_:)(_DWORD *a1, _DWORD *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = sub_1DC9D2FC0();
  uint64_t v5 = type metadata accessor for SNAOPReport(v4);
  if ((sub_1DCB86B68() & 1) == 0 || *(_DWORD *)(v3 + *(int *)(v5 + 24)) != *(_DWORD *)(v2 + *(int *)(v5 + 24))) {
    return 0;
  }

  return sub_1DC9CD7D0();
}

uint64_t sub_1DC9CF218(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x644974726F706572 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x64497265646E6573 && a2 == 0xE800000000000000;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1DC9CF3D4(char a1)
{
  uint64_t result = 0x644974726F706572;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 2:
      uint64_t result = 0x64497265646E6573;
      break;
    case 3:
      uint64_t result = 0x64616F6C796170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DC9CF468()
{
  return sub_1DC9CF3D4(*v0);
}

uint64_t sub_1DC9CF470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9CF218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9CF498(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D01A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9CF4D4(uint64_t a1)
{
  unint64_t v2 = sub_1DC9D01A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SNAOPReport.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA3870);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9D01A8();
  sub_1DCB892B8();
  sub_1DC87E988(&qword_1EAAA3880);
  sub_1DC8CC998(&qword_1EAAA3888, &qword_1EAAA3880);
  sub_1DC9D30CC();
  sub_1DCB88F18();
  if (!v1)
  {
    type metadata accessor for SNAOPReport(0);
    sub_1DC9D300C();
    sub_1DCB86B98();
    sub_1DC9D0050(&qword_1EAAA0188, MEMORY[0x1E4F27928]);
    sub_1DC9D3018();
    sub_1DC87E988(&qword_1EAAA3890);
    sub_1DC8CC998(&qword_1EAAA3898, &qword_1EAAA3890);
    sub_1DC9D3018();
    type metadata accessor for SNAOPReport.Payload(0);
    sub_1DC9D0050(&qword_1EAAA38A0, (void (*)(uint64_t))type metadata accessor for SNAOPReport.Payload);
    sub_1DCB88F18();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t SNAOPReport.hashValue.getter()
{
  sub_1DC89D754();
  sub_1DCB891D8();
  type metadata accessor for SNAOPReport(0);
  sub_1DCB86B98();
  sub_1DC9D0050(&qword_1EAAA0170, MEMORY[0x1E4F27928]);
  sub_1DCB87818();
  sub_1DCB891D8();
  sub_1DC9CD674((uint64_t)v1);
  return sub_1DCB891F8();
}

void SNAOPReport.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  sub_1DC88D6B0();
  uint64_t v38 = v11;
  uint64_t v15 = v14;
  v33[1] = v16;
  type metadata accessor for SNAOPReport.Payload(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v17);
  sub_1DC9D2F50();
  uint64_t v37 = sub_1DCB86B98();
  sub_1DC89D4E0();
  uint64_t v34 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC95AE60();
  void v33[2] = sub_1DC87E988(&qword_1EAAA38A8);
  sub_1DC89D4E0();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SNAOPReport(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v25);
  sub_1DC88D550();
  uint64_t v27 = v26;
  uint64_t v28 = v15[3];
  uint64_t v35 = v15;
  sub_1DC881A8C(v15, v28);
  sub_1DC9D01A8();
  v33[3] = v24;
  uint64_t v29 = v38;
  sub_1DCB89298();
  if (v29)
  {
    sub_1DC8818D0((uint64_t)v35);
  }
  else
  {
    uint64_t v38 = v21;
    v33[0] = v12;
    sub_1DC87E988(&qword_1EAAA3880);
    sub_1DC8CC998(&qword_1EAAA38B0, &qword_1EAAA3880);
    sub_1DCB88DF8();
    *(_DWORD *)uint64_t v27 = a11;
    sub_1DC9D300C();
    sub_1DC9D0050(&qword_1EAAA01A8, MEMORY[0x1E4F27928]);
    uint64_t v30 = v37;
    sub_1DCB88DF8();
    uint64_t v31 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(&v27[*(int *)(v36 + 20)], v13, v30);
    sub_1DC87E988(&qword_1EAAA3890);
    sub_1DC8CC998(&qword_1EAAA38B8, &qword_1EAAA3890);
    sub_1DCB88DF8();
    *(_DWORD *)&v27[*(int *)(v31 + 24)] = v39;
    sub_1DC9D0050(&qword_1EAAA38C0, (void (*)(uint64_t))type metadata accessor for SNAOPReport.Payload);
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v32();
    sub_1DC9D00E4();
    sub_1DC9D0214();
    sub_1DC8818D0((uint64_t)v35);
    sub_1DC9CFECC((uint64_t)v27, (void (*)(void))type metadata accessor for SNAOPReport);
  }
  sub_1DC88D674();
}

void sub_1DC9CFD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SNAOPReport.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SHIDWORD(vars8));
}

uint64_t sub_1DC9CFD60(void *a1)
{
  return SNAOPReport.encode(to:)(a1);
}

uint64_t sub_1DC9CFD80()
{
  sub_1DCB891A8();
  sub_1DCB891D8();
  sub_1DCB86B98();
  sub_1DC9D0050(&qword_1EAAA0170, MEMORY[0x1E4F27928]);
  sub_1DCB87818();
  sub_1DCB891D8();
  sub_1DC9CD674((uint64_t)v1);
  return sub_1DCB891F8();
}

uint64_t sub_1DC9CFE50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1DC9CFECC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v3();
  return a1;
}

unint64_t sub_1DC9CFF20()
{
  unint64_t result = qword_1EAAA3808;
  if (!qword_1EAAA3808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3808);
  }
  return result;
}

unint64_t sub_1DC9CFF6C()
{
  unint64_t result = qword_1EAAA3810;
  if (!qword_1EAAA3810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3810);
  }
  return result;
}

unint64_t sub_1DC9CFFB8()
{
  unint64_t result = qword_1EAAA3818;
  if (!qword_1EAAA3818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3818);
  }
  return result;
}

unint64_t sub_1DC9D0004()
{
  unint64_t result = qword_1EAAA3820;
  if (!qword_1EAAA3820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3820);
  }
  return result;
}

uint64_t sub_1DC9D0050(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DC9D0098()
{
  unint64_t result = qword_1EAAA3848;
  if (!qword_1EAAA3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3848);
  }
  return result;
}

uint64_t sub_1DC9D00E4()
{
  uint64_t v2 = sub_1DC9D2FC0();
  v3(v2);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

unint64_t sub_1DC9D013C()
{
  unint64_t result = qword_1EAAA3860;
  if (!qword_1EAAA3860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3860);
  }
  return result;
}

uint64_t type metadata accessor for SNAOPReport(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA38E0);
}

unint64_t sub_1DC9D01A8()
{
  unint64_t result = qword_1EAAA3878;
  if (!qword_1EAAA3878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3878);
  }
  return result;
}

uint64_t type metadata accessor for SNAOPReport.Payload(uint64_t a1)
{
  return sub_1DC88EA30(a1, (uint64_t *)&unk_1EAAA3900);
}

uint64_t sub_1DC9D0214()
{
  uint64_t v2 = sub_1DC9D2FC0();
  v3(v2);
  sub_1DC88819C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t sub_1DC9D026C()
{
  return sub_1DC9D0050(&qword_1EAAA38C8, (void (*)(uint64_t))type metadata accessor for SNAOPReport.SuccessPayload);
}

unint64_t sub_1DC9D02B8()
{
  unint64_t result = qword_1EAAA38D0;
  if (!qword_1EAAA38D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA38D0);
  }
  return result;
}

uint64_t sub_1DC9D0304()
{
  return sub_1DC9D0050(&qword_1EAAA38D8, (void (*)(uint64_t))type metadata accessor for SNAOPReport);
}

uint64_t *initializeBufferWithCopyOfBuffer for SNAOPReport(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    char v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DCB86B98();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    type metadata accessor for SNAOPReport.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
      uint64_t v15 = *((void *)v14 + 2);
      *((void *)v13 + 1) = *((void *)v14 + 1);
      *((void *)v13 + 2) = v15;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v17 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v11(v13, v14, v10);
        uint64_t v18 = type metadata accessor for AOPClassificationResult();
        v11(&v13[*(int *)(v18 + 20)], &v14[*(int *)(v18 + 20)], v10);
        *(void *)&v13[*(int *)(v18 + 24)] = *(void *)&v14[*(int *)(v18 + 24)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for SNAOPReport(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DCB86B98();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  type metadata accessor for SNAOPReport.Payload(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result) {
      return result;
    }
    v6(v7, v5);
    uint64_t v9 = type metadata accessor for AOPClassificationResult();
    v6(v7 + *(int *)(v9 + 20), v5);
  }

  return swift_bridgeObjectRelease();
}

_DWORD *initializeWithCopy for SNAOPReport(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DCB86B98();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  type metadata accessor for SNAOPReport.Payload(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    uint64_t v14 = *((void *)v13 + 2);
    *((void *)v12 + 1) = *((void *)v13 + 1);
    *((void *)v12 + 2) = v14;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = type metadata accessor for SNAOPReport.SuccessPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v10(v12, v13, v9);
      uint64_t v16 = type metadata accessor for AOPClassificationResult();
      v10(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v9);
      *(void *)&v12[*(int *)(v16 + 24)] = *(void *)&v13[*(int *)(v16 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_DWORD *assignWithCopy for SNAOPReport(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DCB86B98();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  if (a1 != a2)
  {
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_1DC9CFECC((uint64_t)a1 + v11, (void (*)(void))type metadata accessor for SNAOPReport.Payload);
    type metadata accessor for SNAOPReport.Payload(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
        v15(v12, v13, v9);
        uint64_t v16 = type metadata accessor for AOPClassificationResult();
        v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v9);
        *(void *)&v12[*(int *)(v16 + 24)] = *(void *)&v13[*(int *)(v16 + 24)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *initializeWithTake for SNAOPReport(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DCB86B98();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for SNAOPReport.Payload(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = type metadata accessor for SNAOPReport.SuccessPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v10(v12, v13, v9);
      uint64_t v16 = type metadata accessor for AOPClassificationResult();
      v10(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v9);
      *(void *)&v12[*(int *)(v16 + 24)] = *(void *)&v13[*(int *)(v16 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *assignWithTake for SNAOPReport(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DCB86B98();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  if (a1 != a2)
  {
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_1DC9CFECC((uint64_t)a1 + v11, (void (*)(void))type metadata accessor for SNAOPReport.Payload);
    uint64_t v14 = type metadata accessor for SNAOPReport.Payload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v16(v12, v13, v9);
        uint64_t v17 = type metadata accessor for AOPClassificationResult();
        v16(&v12[*(int *)(v17 + 20)], &v13[*(int *)(v17 + 20)], v9);
        *(void *)&v12[*(int *)(v17 + 24)] = *(void *)&v13[*(int *)(v17 + 24)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SNAOPReport(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DC9D0D8C);
}

uint64_t sub_1DC9D0D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DCB86B98();
  sub_1DC913CA0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(int *)(a3 + 20);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SNAOPReport.Payload(0);
    uint64_t v9 = *(int *)(a3 + 28);
  }

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SNAOPReport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DC9D0E1C);
}

uint64_t sub_1DC9D0E1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DCB86B98();
  sub_1DC913CA0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(int *)(a4 + 20);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SNAOPReport.Payload(0);
    uint64_t v11 = *(int *)(a4 + 28);
  }

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1 + v11, a2, a2, v10);
}

uint64_t sub_1DC9D0EA0()
{
  uint64_t result = sub_1DCB86B98();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SNAOPReport.Payload(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SNAOPReport.SuccessPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1DCB86B98();
      uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      uint64_t v10 = type metadata accessor for AOPClassificationResult();
      v9((uint64_t *)((char *)a1 + *(int *)(v10 + 20)), (uint64_t *)((char *)a2 + *(int *)(v10 + 20)), v8);
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 24));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for SNAOPReport.SuccessPayload(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_1DCB86B98();
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
    uint64_t v5 = type metadata accessor for AOPClassificationResult();
    v4(a1 + *(int *)(v5 + 20), v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for SNAOPReport.SuccessPayload(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1DCB86B98();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for AOPClassificationResult();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    *(void *)&a1[*(int *)(v8 + 24)] = *(void *)&a2[*(int *)(v8 + 24)];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for SNAOPReport.SuccessPayload(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DC9CFECC((uint64_t)a1, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1DCB86B98();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v8 = type metadata accessor for AOPClassificationResult();
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      *(void *)&a1[*(int *)(v8 + 24)] = *(void *)&a2[*(int *)(v8 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for SNAOPReport.SuccessPayload(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1DCB86B98();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for AOPClassificationResult();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    *(void *)&a1[*(int *)(v8 + 24)] = *(void *)&a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for SNAOPReport.SuccessPayload(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DC9CFECC((uint64_t)a1, (void (*)(void))type metadata accessor for SNAOPReport.SuccessPayload);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1DCB86B98();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = type metadata accessor for AOPClassificationResult();
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      *(void *)&a1[*(int *)(v8 + 24)] = *(void *)&a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1DC9D15C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9D1E38(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for AOPClassificationResult);
}

ValueMetadata *type metadata accessor for SNAOPReport.AOPNewDataAvailable()
{
  return &type metadata for SNAOPReport.AOPNewDataAvailable;
}

uint64_t *sub_1DC9D15F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v6 = a2[2];
      a1[1] = a2[1];
      a1[2] = v6;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v8 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        uint64_t v9 = sub_1DCB86B98();
        uint64_t v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16);
        v10(a1, a2, v9);
        uint64_t v11 = type metadata accessor for AOPClassificationResult();
        v10((uint64_t *)((char *)a1 + *(int *)(v11 + 20)), (uint64_t *)((char *)a2 + *(int *)(v11 + 20)), v9);
        *(uint64_t *)((char *)a1 + *(int *)(v11 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 24));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DC9D179C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result) {
      return result;
    }
    uint64_t v3 = sub_1DCB86B98();
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
    uint64_t v5 = type metadata accessor for AOPClassificationResult();
    v4(a1 + *(int *)(v5 + 20), v3);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1DC9D1888(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v4 = a2[2];
    a1[1] = a2[1];
    a1[2] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = type metadata accessor for SNAOPReport.SuccessPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1DCB86B98();
      uint64_t v7 = *(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v8 = type metadata accessor for AOPClassificationResult();
      v7((void *)((char *)a1 + *(int *)(v8 + 20)), (void *)((char *)a2 + *(int *)(v8 + 20)), v6);
      *(void *)((char *)a1 + *(int *)(v8 + 24)) = *(void *)((char *)a2 + *(int *)(v8 + 24));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DC9D19DC(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DC9CFECC((uint64_t)a1, (void (*)(void))type metadata accessor for SNAOPReport.Payload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      }
      else
      {
        uint64_t v5 = sub_1DCB86B98();
        uint64_t v6 = *(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16);
        v6(a1, a2, v5);
        uint64_t v7 = type metadata accessor for AOPClassificationResult();
        v6((void *)((char *)a1 + *(int *)(v7 + 20)), (void *)((char *)a2 + *(int *)(v7 + 20)), v5);
        *(void *)((char *)a1 + *(int *)(v7 + 24)) = *(void *)((char *)a2 + *(int *)(v7 + 24));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DC9D1B5C(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for SNAOPReport.SuccessPayload(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1DCB86B98();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      uint64_t v9 = type metadata accessor for AOPClassificationResult();
      v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
      *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1DC9D1CA8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1DC9CFECC((uint64_t)a1, (void (*)(void))type metadata accessor for SNAOPReport.Payload);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for SNAOPReport.SuccessPayload(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v7 = sub_1DCB86B98();
        uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
        v8(a1, a2, v7);
        uint64_t v9 = type metadata accessor for AOPClassificationResult();
        v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
        *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1DC9D1E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9D1E38(a1, a2, a3, type metadata accessor for SNAOPReport.SuccessPayload);
}

uint64_t sub_1DC9D1E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNAOPReport.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9D1F94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.CodingKeys()
{
  return &type metadata for SNAOPReport.CodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.AOPNewDataAvailable.CodingKeys()
{
  return &type metadata for SNAOPReport.AOPNewDataAvailable.CodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.SuccessPayload.CodingKeys()
{
  return &type metadata for SNAOPReport.SuccessPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.SuccessPayload.ClassificationsCodingKeys()
{
  return &type metadata for SNAOPReport.SuccessPayload.ClassificationsCodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.SuccessPayload.NewDataAvailableCodingKeys()
{
  return &type metadata for SNAOPReport.SuccessPayload.NewDataAvailableCodingKeys;
}

unint64_t sub_1DC9D2018()
{
  unint64_t result = qword_1EAAA3910;
  if (!qword_1EAAA3910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3910);
  }
  return result;
}

unint64_t sub_1DC9D2068()
{
  unint64_t result = qword_1EAAA3918;
  if (!qword_1EAAA3918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3918);
  }
  return result;
}

unint64_t sub_1DC9D20B8()
{
  unint64_t result = qword_1EAAA3920;
  if (!qword_1EAAA3920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3920);
  }
  return result;
}

unint64_t sub_1DC9D2108()
{
  unint64_t result = qword_1EAAA3928;
  if (!qword_1EAAA3928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3928);
  }
  return result;
}

unint64_t sub_1DC9D2158()
{
  unint64_t result = qword_1EAAA3930;
  if (!qword_1EAAA3930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3930);
  }
  return result;
}

uint64_t sub_1DC9D21A4()
{
  return sub_1DC9D0050(&qword_1EAAA3938, (void (*)(uint64_t))type metadata accessor for SNAOPReport.Payload);
}

unint64_t sub_1DC9D21F0()
{
  unint64_t result = qword_1EAAA3940;
  if (!qword_1EAAA3940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3940);
  }
  return result;
}

unint64_t sub_1DC9D2240()
{
  unint64_t result = qword_1EAAA3948;
  if (!qword_1EAAA3948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3948);
  }
  return result;
}

unint64_t sub_1DC9D2290()
{
  unint64_t result = qword_1EAAA3950;
  if (!qword_1EAAA3950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3950);
  }
  return result;
}

unint64_t sub_1DC9D22E0()
{
  unint64_t result = qword_1EAAA3958;
  if (!qword_1EAAA3958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3958);
  }
  return result;
}

unint64_t sub_1DC9D2330()
{
  unint64_t result = qword_1EAAA3960;
  if (!qword_1EAAA3960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3960);
  }
  return result;
}

unint64_t sub_1DC9D2380()
{
  unint64_t result = qword_1EAAA3968;
  if (!qword_1EAAA3968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3968);
  }
  return result;
}

unint64_t sub_1DC9D23D0()
{
  unint64_t result = qword_1EAAA3970;
  if (!qword_1EAAA3970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3970);
  }
  return result;
}

unint64_t sub_1DC9D2420()
{
  unint64_t result = qword_1EAAA3978;
  if (!qword_1EAAA3978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3978);
  }
  return result;
}

unint64_t sub_1DC9D2470()
{
  unint64_t result = qword_1EAAA3980;
  if (!qword_1EAAA3980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3980);
  }
  return result;
}

unint64_t sub_1DC9D24C0()
{
  unint64_t result = qword_1EAAA3988;
  if (!qword_1EAAA3988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3988);
  }
  return result;
}

unint64_t sub_1DC9D250C()
{
  unint64_t result = qword_1EAAA39A8;
  if (!qword_1EAAA39A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA39A8);
  }
  return result;
}

unint64_t sub_1DC9D2558()
{
  unint64_t result = qword_1EAAA39B0;
  if (!qword_1EAAA39B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA39B0);
  }
  return result;
}

unint64_t sub_1DC9D25A4()
{
  unint64_t result = qword_1EAAA39B8;
  if (!qword_1EAAA39B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA39B8);
  }
  return result;
}

unint64_t sub_1DC9D25F0()
{
  unint64_t result = qword_1EAAA39C0;
  if (!qword_1EAAA39C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA39C0);
  }
  return result;
}

unint64_t sub_1DC9D263C()
{
  unint64_t result = qword_1EAAA39E8;
  if (!qword_1EAAA39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA39E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.Payload.CodingKeys()
{
  return &type metadata for SNAOPReport.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for SNAOPReport.Payload.SuccessCodingKeys()
{
  return &type metadata for SNAOPReport.Payload.SuccessCodingKeys;
}

unsigned char *_s13SoundAnalysis11SNAOPReportV19AOPNewDataAvailableV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC9D2744);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.Payload.FailureCodingKeys()
{
  return &type metadata for SNAOPReport.Payload.FailureCodingKeys;
}

uint64_t destroy for SNAOPReport.AOPError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13SoundAnalysis11SNAOPReportV8AOPErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SNAOPReport.AOPError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SNAOPReport.AOPError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SNAOPReport.AOPError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SNAOPReport.AOPError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.AOPError()
{
  return &type metadata for SNAOPReport.AOPError;
}

unint64_t sub_1DC9D28DC()
{
  unint64_t result = qword_1EAAA3A00;
  if (!qword_1EAAA3A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A00);
  }
  return result;
}

unint64_t sub_1DC9D292C()
{
  unint64_t result = qword_1EAAA3A08;
  if (!qword_1EAAA3A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A08);
  }
  return result;
}

unint64_t sub_1DC9D297C()
{
  unint64_t result = qword_1EAAA3A10;
  if (!qword_1EAAA3A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A10);
  }
  return result;
}

unint64_t sub_1DC9D29CC()
{
  unint64_t result = qword_1EAAA3A18;
  if (!qword_1EAAA3A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A18);
  }
  return result;
}

unint64_t sub_1DC9D2A1C()
{
  unint64_t result = qword_1EAAA3A20;
  if (!qword_1EAAA3A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A20);
  }
  return result;
}

unint64_t sub_1DC9D2A6C()
{
  unint64_t result = qword_1EAAA3A28;
  if (!qword_1EAAA3A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A28);
  }
  return result;
}

unint64_t sub_1DC9D2ABC()
{
  unint64_t result = qword_1EAAA3A30;
  if (!qword_1EAAA3A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A30);
  }
  return result;
}

unint64_t sub_1DC9D2B0C()
{
  unint64_t result = qword_1EAAA3A38;
  if (!qword_1EAAA3A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A38);
  }
  return result;
}

unint64_t sub_1DC9D2B5C()
{
  unint64_t result = qword_1EAAA3A40;
  if (!qword_1EAAA3A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A40);
  }
  return result;
}

unint64_t sub_1DC9D2BAC()
{
  unint64_t result = qword_1EAAA3A48;
  if (!qword_1EAAA3A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A48);
  }
  return result;
}

unint64_t sub_1DC9D2BF8()
{
  unint64_t result = qword_1EAAA3A58;
  if (!qword_1EAAA3A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A58);
  }
  return result;
}

unsigned char *_s13SoundAnalysis11SNAOPReportV14SuccessPayloadO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9D2D10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPReport.AOPError.CodingKeys()
{
  return &type metadata for SNAOPReport.AOPError.CodingKeys;
}

unint64_t sub_1DC9D2D4C()
{
  unint64_t result = qword_1EAAA3A80;
  if (!qword_1EAAA3A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A80);
  }
  return result;
}

unint64_t sub_1DC9D2D9C()
{
  unint64_t result = qword_1EAAA3A88;
  if (!qword_1EAAA3A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3A88);
  }
  return result;
}

unint64_t sub_1DC9D2DEC()
{
  unint64_t result = qword_1EAAA3A90[0];
  if (!qword_1EAAA3A90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA3A90);
  }
  return result;
}

uint64_t sub_1DC9D2E38()
{
  return v0;
}

uint64_t sub_1DC9D2E60()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DC9D2E84()
{
  return v0;
}

uint64_t sub_1DC9D2E9C(uint64_t a1, uint64_t a2)
{
  return sub_1DC9CFE50(1, a2, v2, v2 + 32, 0, (2 * a2) | 1);
}

uint64_t sub_1DC9D2ED0()
{
  return sub_1DCB88B08();
}

uint64_t sub_1DC9D2EFC()
{
  return sub_1DCB88E88();
}

void sub_1DC9D2F18(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DC9D2F34()
{
  return 0;
}

uint64_t sub_1DC9D2F50()
{
  return 0;
}

uint64_t sub_1DC9D2F6C()
{
  return 0;
}

uint64_t sub_1DC9D2F88()
{
  return 0;
}

uint64_t sub_1DC9D2FC0()
{
  return 0;
}

uint64_t sub_1DC9D2FD0()
{
  void *v1 = v0;
  return sub_1DCB88D68();
}

void sub_1DC9D300C()
{
  *(unsigned char *)(v0 - 70) = 1;
}

uint64_t sub_1DC9D3018()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DC9D3038()
{
  return v0;
}

uint64_t sub_1DC9D304C()
{
  return sub_1DCB892B8();
}

uint64_t sub_1DC9D306C()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC9D3084()
{
  return v0;
}

uint64_t sub_1DC9D3098()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9D30B8()
{
  return v0;
}

uint64_t sub_1DC9D30CC()
{
  return v0 - 68;
}

uint64_t sub_1DC9D30E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DC9D314C(uint64_t (*a1)(uint64_t), void (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = *(os_unfair_lock_s **)(v2[6] + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5] >> 1;
  BOOL v9 = __OFSUB__(v8, v7);
  uint64_t v10 = v8 - v7;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    if (v10 < 1) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = sub_1DC9D3210(a1, a2);
    }
    os_unfair_lock_unlock(v5);
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

uint64_t (*sub_1DC9D3210(uint64_t (*result)(uint64_t), void (*a2)(uint64_t, uint64_t)))(uint64_t)
{
  uint64_t v3 = v2[2];
  unint64_t v4 = v2[3];
  if (v3 == v4 >> 1)
  {
    __break(1u);
  }
  else if (v3 < (uint64_t)(v4 >> 1))
  {
    uint64_t v6 = v2[1] + 16 * v3;
    uint64_t v7 = *(void *)v6;
    uint64_t v8 = *(unsigned __int8 *)(v6 + 8);
    uint64_t v9 = result(v3 + 1);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    a2(v7, v8);
    swift_unknownObjectRelease();
    *uint64_t v2 = v9;
    v2[1] = v11;
    v2[2] = v13;
    void v2[3] = v15;
    return (uint64_t (*)(uint64_t))v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC9D32CC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA3B20);
  swift_allocObject();
  *(void *)(v1 + 16) = sub_1DCA0EF70();
  *(void *)(v1 + 32) = *(void *)(a1 + 32);
  swift_retain_n();
  swift_retain();
  sub_1DC87E988(&qword_1EAAA3B28);
  sub_1DC9D5E20();
  uint64_t v4 = sub_1DCB87558();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v2 + 24) = v4;
  return v2;
}

uint64_t sub_1DC9D33B4(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v1 == 1)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v1 < 3)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v1 == 3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v1 < 5)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v1 == 5)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v1 < 7)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v1 == 7)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v1 < 9)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v1 == 9)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v1 < 0xB)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v1 == 11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v1 < 0xD)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v1 == 13)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v1 < 0xF)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v1 != 15) {
    return sub_1DCB86BC8();
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1DC9D34D4(void *a1, void *a2)
{
  return sub_1DC9D33B0(*a1, *a2);
}

uint64_t sub_1DC9D34E0()
{
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DCB87A18();
  sub_1DC9222D4();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9D359C()
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DCB86FE8();
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF810);
  unint64_t v1 = sub_1DCB86FC8();
  os_log_type_t v2 = sub_1DCB88488();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 67109120;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v1, v2, "Preboard Check required = %{BOOL}d", v3, 8u);
    MEMORY[0x1E01A99C0](v3, -1, -1);
  }

  return 0;
}

uint64_t sub_1DC9D36A8(char a1)
{
  v3[16] = a1;
  sub_1DC8E7B68();
  return sub_1DCAC69D8(0xD000000000000066, v1, (void (*)(uint64_t *__return_ptr))sub_1DC9D5D38, (uint64_t)v3, (void (*)(uint64_t *))sub_1DC9D3714);
}

uint64_t sub_1DC9D3714(uint64_t a1)
{
  return sub_1DC9D4FE0(a1);
}

void sub_1DC9D372C(char a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v49 = a3;
  v65[1] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v50 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = a2;
  LOBYTE(v56) = a1;
  uint64_t v52 = sub_1DC9D5DA8;
  uint64_t v53 = v10;
  id v54 = &v56;
  swift_retain();
  sub_1DCAC38E0();
  if (v3)
  {
    swift_release();
  }
  else
  {
    uint64_t v48 = v11;
    swift_retain();
    swift_release();
    sub_1DCB86BE8();
    uint64_t v56 = sub_1DCB86BD8();
    char v57 = v12;
    char v58 = v13;
    char v59 = v14;
    char v60 = v15;
    char v61 = v16;
    char v62 = v17;
    char v63 = v18;
    char v64 = v19;
    size_t v20 = sub_1DC9D5BD0((size_t)&v56, (unint64_t)v65);
    uint64_t v21 = v50 + 8;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v50 + 8);
    v47(v8, v6);
    swift_beginAccess();
    char v22 = *(unsigned char *)(v9 + 16);
    uint64_t v46 = v9;
    uint64_t v23 = v21;
    if (v22)
    {
      sub_1DC9D33B4(v20);
      swift_beginAccess();
      uint64_t v24 = swift_retain();
      sub_1DCA57B40(v24, (uint64_t)v8);
      v47(v8, v6);
      swift_endAccess();
      uint64_t v25 = v20;
    }
    else
    {
      size_t v45 = v20;
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1DCB86FE8();
      sub_1DC89F57C(v26, (uint64_t)qword_1EAAFF810);
      uint64_t v27 = sub_1DCB86FC8();
      os_log_type_t v28 = sub_1DCB88488();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_1DC873000, v27, v28, "Cache hit", v29, 2u);
        MEMORY[0x1E01A99C0](v29, -1, -1);
      }

      uint64_t v30 = v45;
      sub_1DC9D33B4(v45);
      sub_1DC87E988(&qword_1EAA9E7A8);
      swift_allocObject();
      uint64_t v31 = swift_retain();
      uint64_t v32 = sub_1DC9D32CC(v31);
      swift_beginAccess();
      uint64_t v25 = v30;
      sub_1DCA57B40(v32, (uint64_t)v8);
      v47(v8, v6);
      swift_endAccess();
    }
    uint64_t v50 = v23;
    uint64_t v33 = v8;
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1DCB86FE8();
    sub_1DC89F57C(v34, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain_n();
    uint64_t v35 = sub_1DCB86FC8();
    os_log_type_t v36 = sub_1DCB88488();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      size_t v45 = 0;
      v55[0] = v44;
      *(_DWORD *)uint64_t v37 = 136315138;
      v43[1] = v37 + 4;
      uint64_t v38 = v33;
      sub_1DC9D33B4(v25);
      sub_1DC88CBB4();
      uint64_t v39 = sub_1DCB88F98();
      unint64_t v41 = v40;
      v47(v38, v6);
      uint64_t v51 = sub_1DC9F8920(v39, v41, v55);
      sub_1DCB88778();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DC873000, v35, v36, "Created XSoundRecognitionSession with ID %s.", v37, 0xCu);
      uint64_t v42 = v44;
      swift_arrayDestroy();
      MEMORY[0x1E01A99C0](v42, -1, -1);
      MEMORY[0x1E01A99C0](v37, -1, -1);
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();

      swift_release_n();
      swift_release();
    }
    *id v49 = v25;
  }
}

void *sub_1DC9D3D4C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  swift_beginAccess();
  *(unsigned char *)(a2 + 16) = 1;
  _s17ServerEnvironmentCMa();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t result = sub_1DCA0F3C0(v6);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1DC9D3E94()
{
  sub_1DC8E7B68();
  uint64_t result = sub_1DC9D5E78();
  if (v0)
  {
    sub_1DCAC6120(v0);

    sub_1DC938C14();
    return swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t sub_1DC9D3F3C(uint64_t a1)
{
  return nullsub_1(a1);
}

void sub_1DC9D3F64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DCB86BF8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v44 - v10;
  if (*(void *)(a1 + 16) == 16)
  {
    uint64_t v50 = a2 + 32;
    swift_beginAccess();
    uint64_t v12 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_1DC9D33B4(a1);
    if (*(void *)(v12 + 16))
    {
      sub_1DC963A1C();
      char v14 = v13;
    }
    else
    {
      char v14 = 0;
    }
    char v15 = *(uint8_t **)(v6 + 8);
    ((void (*)(char *, uint64_t))v15)(v11, v5);
    swift_bridgeObjectRelease();
    if (v14)
    {
      id v49 = v15;
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1DCB86FE8();
      sub_1DC89F57C(v16, (uint64_t)qword_1EAAFF810);
      swift_bridgeObjectRetain_n();
      char v17 = sub_1DCB86FC8();
      os_log_type_t v18 = sub_1DCB88488();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        int v47 = v19;
        size_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        v52[0] = v48;
        uint64_t v46 = v20;
        *(_DWORD *)size_t v20 = 136315138;
        size_t v45 = v20 + 4;
        sub_1DC9D33B4(a1);
        sub_1DC88CBB4();
        uint64_t v21 = sub_1DCB88F98();
        uint64_t v51 = v2;
        unint64_t v23 = v22;
        uint64_t v24 = v49;
        ((void (*)(char *, uint64_t))v49)(v9, v5);
        uint64_t v53 = sub_1DC9F8920(v21, v23, v52);
        sub_1DCB88778();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v25 = v46;
        _os_log_impl(&dword_1DC873000, v17, (os_log_type_t)v47, "Removing XSoundRecognitionSession with ID %s.", v46, 0xCu);
        uint64_t v26 = v48;
        swift_arrayDestroy();
        MEMORY[0x1E01A99C0](v26, -1, -1);
        MEMORY[0x1E01A99C0](v25, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v24 = v49;
      }
      sub_1DC9D33B4(a1);
      swift_beginAccess();
      sub_1DC8BF7DC((uint64_t)v9, v37, v38, v39, v40, v41, v42, v43, v44, (uint64_t)v45);
      ((void (*)(char *, uint64_t))v24)(v9, v5);
      swift_endAccess();
      swift_release();
    }
    else
    {
      uint64_t v51 = v2;
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1DCB86FE8();
      sub_1DC89F57C(v27, (uint64_t)qword_1EAAFF810);
      swift_bridgeObjectRetain_n();
      os_log_type_t v28 = sub_1DCB86FC8();
      os_log_type_t v29 = sub_1DCB88468();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        v52[0] = v50;
        id v49 = v30;
        *(_DWORD *)uint64_t v30 = 136315138;
        uint64_t v48 = (uint64_t)(v30 + 4);
        sub_1DC9D33B4(a1);
        sub_1DC88CBB4();
        uint64_t v31 = sub_1DCB88F98();
        uint64_t v32 = v15;
        unint64_t v34 = v33;
        ((void (*)(char *, uint64_t))v32)(v9, v5);
        uint64_t v53 = sub_1DC9F8920(v31, v34, v52);
        sub_1DCB88778();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v35 = v49;
        _os_log_impl(&dword_1DC873000, v28, v29, "Recieved request to remove XSoundRecognitionSession with ID %s but such a session does not exist; Ignoring.",
          v49,
          0xCu);
        uint64_t v36 = v50;
        swift_arrayDestroy();
        MEMORY[0x1E01A99C0](v36, -1, -1);
        MEMORY[0x1E01A99C0](v35, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    sub_1DC9D5B48();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_1DC9D44CC()
{
  return sub_1DCAC6A70();
}

void sub_1DC9D4550(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) != 16)
  {
    sub_1DC9D5B48();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_1DC9D33B4(a1);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DC961554(v9, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = (void *)sub_1DC9D314C((uint64_t (*)(uint64_t))sub_1DC9CFE4C, (void (*)(uint64_t, uint64_t))sub_1DC9D5E74);
  char v14 = v12;
  if (!v13)
  {
    swift_release();
    char v15 = v14 & 1;
    goto LABEL_12;
  }
  if (v13 == 1)
  {
    sub_1DC9D5CA0(v12, 1);
    char v16 = sub_1DCAC6120(v14);
    swift_release();
    sub_1DC9D5CB4(v14, 1);
    sub_1DC9D5CB4(v14, 1);
    char v15 = v16 | 0x40;
    goto LABEL_12;
  }
  if (v13 != 2)
  {
    swift_release();
LABEL_11:
    char v15 = -4;
    goto LABEL_12;
  }
  swift_release();
  char v15 = 0x80;
LABEL_12:
  *a3 = v15;
}

uint64_t sub_1DC9D4768()
{
  sub_1DC8E7B68();
  return sub_1DCAC69D8(0xD000000000000061, v0, (void (*)(uint64_t *__return_ptr))sub_1DC9D5CE4, v1, (void (*)(uint64_t *))sub_1DC9D3714);
}

uint64_t sub_1DC9D47C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  v26[5] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *a1;
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(void *)(a1[6] + 16) >= a1[8])
  {
    sub_1DC938C14();
    swift_allocError();
    *unint64_t v23 = 1;
    return swift_willThrow();
  }
  else
  {
    v24[1] = a1[2];
    uint64_t v10 = *(void *)(v5 + 96);
    uint64_t v11 = *(void *)(v5 + 112);
    long long v25 = *(_OWORD *)(v5 + 80);
    v26[0] = v10;
    v26[1] = v11;
    _s17ServerEnvironmentCMa();
    swift_getWitnessTable();
    uint64_t result = sub_1DCA11144();
    if (!v2)
    {
      sub_1DCB86BE8();
      *(void *)&long long v25 = sub_1DCB86BD8();
      WORD4(v25) = v13;
      BYTE10(v25) = v14;
      BYTE11(v25) = v15;
      BYTE12(v25) = v16;
      BYTE13(v25) = v17;
      BYTE14(v25) = v18;
      HIBYTE(v25) = v19;
      size_t v20 = sub_1DC9D5BD0((size_t)&v25, (unint64_t)v26);
      v24[0] = a2;
      uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
      v21(v9, v6);
      sub_1DC9D33B4(v20);
      swift_beginAccess();
      uint64_t v22 = swift_retain();
      sub_1DCA57B58(v22, (uint64_t)v9);
      v21(v9, v6);
      swift_endAccess();
      uint64_t result = swift_release();
      *(void *)v24[0] = v20;
    }
  }
  return result;
}

uint64_t sub_1DC9D4AC4()
{
  sub_1DC8E7B68();
  uint64_t result = sub_1DC9D5E78();
  if (v0)
  {
    sub_1DCAC6120(v0);

    sub_1DC938C14();
    return swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t sub_1DC9D4B6C(uint64_t a1)
{
  uint64_t v2 = sub_1DCB86BF8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) == 16)
  {
    sub_1DC9D33B4(a1);
    swift_beginAccess();
    sub_1DC8BF7F0((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v14[0], v14[1]);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_endAccess();
    return swift_release();
  }
  else
  {
    sub_1DC9D5B48();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1DC9D4CB8()
{
  return sub_1DCAC6A70();
}

void sub_1DC9D4D3C(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) != 16)
  {
    sub_1DC9D5B48();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_1DC9D33B4(a1);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DC961554(v9, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = (void *)sub_1DC9D314C((uint64_t (*)(uint64_t))sub_1DC9CFE4C, (void (*)(uint64_t, uint64_t))sub_1DC9D5CA0);
  char v14 = v12;
  if (!v13)
  {
    swift_release();
    goto LABEL_12;
  }
  if (v13 == 1)
  {
    sub_1DC9D5CA0(v12, 1);
    char v15 = sub_1DCAC6120(v14);
    swift_release();
    sub_1DC9D5CB4(v14, 1);
    sub_1DC9D5CB4(v14, 1);
    LOBYTE(v14) = v15 | 0x40;
    goto LABEL_12;
  }
  if (v13 != 2)
  {
    swift_release();
LABEL_11:
    LOBYTE(v14) = -16;
    goto LABEL_12;
  }
  swift_release();
  LOBYTE(v14) = 0x80;
LABEL_12:
  *a3 = (_BYTE)v14;
}

uint64_t sub_1DC9D4F50(uint64_t a1)
{
  uint64_t v2 = *v1;
  id v5[2] = a1;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  sub_1DC8E7B68();
  return sub_1DCAC69D8(0xD000000000000071, v3, (void (*)(uint64_t *__return_ptr))sub_1DC9D5BB0, (uint64_t)v5, (void (*)(uint64_t *))sub_1DC9D3714);
}

uint64_t sub_1DC9D4FE0(uint64_t result)
{
  if (*(void *)(*(void *)result + 16) != 16)
  {
    sub_1DC9D5B48();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DC9D503C@<X0>(const void *a1@<X0>, uint64_t *a2@<X1>, size_t *a3@<X8>)
{
  v43[6] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1DCB86BF8();
  uint64_t v9 = *(void **)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, a1, sizeof(__dst));
  uint64_t result = sub_1DCA83034((uint64_t)__dst);
  if (!v3)
  {
    uint64_t v38 = v11;
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1DCB86FE8();
    sub_1DC89F57C(v13, (uint64_t)qword_1EAAFF810);
    char v14 = sub_1DCB86FC8();
    os_log_type_t v15 = sub_1DCB88488();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = v9;
      uint64_t v17 = v8;
      char v18 = a3;
      char v19 = v16;
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1DC873000, v14, v15, "Processing request to run a custom model.", v16, 2u);
      size_t v20 = v19;
      a3 = v18;
      uint64_t v8 = v17;
      uint64_t v9 = v37;
      MEMORY[0x1E01A99C0](v20, -1, -1);
    }

    sub_1DC9D359C();
    swift_beginAccess();
    if (*(void *)(a2[3] + 16) >= a2[7])
    {
      sub_1DC938C14();
      swift_allocError();
      *uint64_t v36 = 1;
      return swift_willThrow();
    }
    else
    {
      uint64_t v37 = a2 + 3;
      uint64_t v39 = a2[2];
      uint64_t v21 = *(void *)(v7 + 96);
      uint64_t v22 = *(void *)(v7 + 112);
      swift_retain();
      long long v42 = *(_OWORD *)(v7 + 80);
      v43[0] = v21;
      v43[1] = v22;
      _s17ServerEnvironmentCMa();
      uint64_t v41 = *(void *)(v7 + 104);
      swift_getWitnessTable();
      swift_getWitnessTable();
      sub_1DCA0F894(a1);
      swift_release();
      uint64_t v23 = (uint64_t)v38;
      sub_1DCB86BE8();
      *(void *)&long long v42 = sub_1DCB86BD8();
      WORD4(v42) = v24;
      BYTE10(v42) = v25;
      BYTE11(v42) = v26;
      BYTE12(v42) = v27;
      BYTE13(v42) = v28;
      BYTE14(v42) = v29;
      HIBYTE(v42) = v30;
      uint64_t v31 = v8;
      uint64_t v32 = a3;
      size_t v33 = sub_1DC9D5BD0((size_t)&v42, (unint64_t)v43);
      unint64_t v34 = (void (*)(uint64_t, uint64_t))v9[1];
      v34(v23, v31);
      sub_1DC9D33B4(v33);
      swift_beginAccess();
      uint64_t v35 = swift_retain();
      sub_1DCA57B40(v35, v23);
      v34(v23, v31);
      swift_endAccess();
      uint64_t result = swift_release();
      *uint64_t v32 = v33;
    }
  }
  return result;
}

uint64_t sub_1DC9D54A8()
{
  sub_1DC8E7B68();
  uint64_t result = sub_1DC9D5E78();
  if (v0)
  {
    sub_1DCAC6120(v0);

    sub_1DC938C14();
    return swift_willThrowTypedImpl();
  }
  return result;
}

uint64_t sub_1DC9D5550(uint64_t a1)
{
  uint64_t v2 = sub_1DCB86BF8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) == 16)
  {
    sub_1DC9D33B4(a1);
    swift_beginAccess();
    sub_1DC8BF7DC((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v14[0], v14[1]);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_endAccess();
    return swift_release();
  }
  else
  {
    sub_1DC9D5B48();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_1DC9D569C()
{
  return sub_1DCAC6A70();
}

void sub_1DC9D5720(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) != 16)
  {
    sub_1DC9D5B48();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_1DC9D33B4(a1);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DC961554(v9, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = (void *)sub_1DC9D314C((uint64_t (*)(uint64_t))sub_1DC9CFE4C, (void (*)(uint64_t, uint64_t))sub_1DC9D5E74);
  char v14 = v12;
  if (!v13)
  {
    swift_release();
    char v15 = v14 & 1;
    goto LABEL_12;
  }
  if (v13 == 1)
  {
    sub_1DC9D5CA0(v12, 1);
    char v16 = sub_1DCAC6120(v14);
    swift_release();
    sub_1DC9D5CB4(v14, 1);
    sub_1DC9D5CB4(v14, 1);
    char v15 = v16 | 0x40;
    goto LABEL_12;
  }
  if (v13 != 2)
  {
    swift_release();
LABEL_11:
    char v15 = -4;
    goto LABEL_12;
  }
  swift_release();
  char v15 = 0x80;
LABEL_12:
  *a3 = v15;
}

uint64_t sub_1DC9D5938()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC9D5978()
{
  sub_1DC9D5938();

  return swift_deallocClassInstance();
}

uint64_t _s7HandlerCMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC9D59C4()
{
  return sub_1DC9D34E0();
}

uint64_t sub_1DC9D59E8()
{
  return sub_1DC9D4768();
}

uint64_t sub_1DC9D5A0C(char a1)
{
  return sub_1DC9D36A8(a1);
}

uint64_t sub_1DC9D5A30(uint64_t a1)
{
  return sub_1DC9D4F50(a1);
}

uint64_t sub_1DC9D5A54()
{
  return sub_1DC9D4AC4();
}

uint64_t sub_1DC9D5A78()
{
  return sub_1DC9D3E94();
}

uint64_t sub_1DC9D5A9C()
{
  return sub_1DC9D54A8();
}

uint64_t sub_1DC9D5AC0()
{
  return sub_1DC9D4CB8();
}

uint64_t sub_1DC9D5AE4()
{
  return sub_1DC9D44CC();
}

uint64_t sub_1DC9D5B08()
{
  return sub_1DC9D569C();
}

void sub_1DC9D5B2C(char *a1@<X8>)
{
  sub_1DC9D5720(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1DC9D5B48()
{
  unint64_t result = qword_1EAAA3B18;
  if (!qword_1EAAA3B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3B18);
  }
  return result;
}

uint64_t sub_1DC9D5B94()
{
  return sub_1DC9D5550(*(void *)(v0 + 16));
}

uint64_t sub_1DC9D5BB0@<X0>(size_t *a1@<X8>)
{
  return sub_1DC9D503C(*(const void **)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

size_t sub_1DC9D5BD0(size_t result, unint64_t a2)
{
  if (!result) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = (const void *)result;
  int64_t v4 = a2 - result;
  if (a2 == result) {
    return MEMORY[0x1E4FBC860];
  }
  if (v4 < 1)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_1DC87E988(&qword_1EAA9C718);
    uint64_t v5 = (void *)swift_allocObject();
    unint64_t result = j__malloc_size(v5);
    id v5[2] = v4;
    void v5[3] = 2 * result - 64;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_1DC9D5C84(unsigned char *a1@<X8>)
{
  sub_1DC9D4D3C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

id sub_1DC9D5CA0(id result, char a2)
{
  if (a2 == 1) {
    return result;
  }
  return result;
}

void sub_1DC9D5CB4(id a1, char a2)
{
  if (a2 != -1) {
    sub_1DC938C60(a1, a2);
  }
}

uint64_t sub_1DC9D5CC8()
{
  return sub_1DC9D4B6C(*(void *)(v0 + 16));
}

uint64_t sub_1DC9D5CE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC9D47C4(v1, a1);
}

void sub_1DC9D5D00(char *a1@<X8>)
{
  sub_1DC9D4550(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1DC9D5D1C()
{
  sub_1DC9D3F64(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1DC9D5D38(uint64_t *a1@<X8>)
{
  sub_1DC9D372C(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1DC9D5D58()
{
  return swift_deallocObject();
}

uint64_t sub_1DC9D5D68()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void *sub_1DC9D5DA8@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC9D3D4C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DC9D5DC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCAC4928(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DC9D5DF8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1DC9D5DC4(a1, a2);
}

uint64_t sub_1DC9D5E18(uint64_t a1)
{
  return sub_1DCA104EC(a1);
}

unint64_t sub_1DC9D5E20()
{
  unint64_t result = qword_1EAAA3B30[0];
  if (!qword_1EAAA3B30[0])
  {
    sub_1DC8863A8(&qword_1EAAA3B28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA3B30);
  }
  return result;
}

uint64_t sub_1DC9D5E78()
{
  return sub_1DCAC6400();
}

uint64_t sub_1DC9D5E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1DC9D5E9C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DC9D5F48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    int64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v10 = *v11;
    uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1DC9D6074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9D6110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9D61AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9D6248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1DC9D62E4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC9D6440);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DC9D6454(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DC9D6648);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SliceWithStride()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DC9D6688()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DC9D6724(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DC9D6828);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_1DC9D683C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
  }
  else
  {
    int v9 = a3 - v7;
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v13 = a2 - v7;
    }
    else {
      int v13 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DC9D69D4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for MaximumSlice()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DC9D6A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  uint64_t v59 = a1;
  sub_1DC88D538();
  uint64_t v56 = v5;
  uint64_t v57 = v4;
  uint64_t v58 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = v9;
  uint64_t v53 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = v9;
  sub_1DC88D538();
  uint64_t v60 = v12;
  MEMORY[0x1F4188790](v13);
  v49[0] = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1DCB87D78();
  uint64_t v17 = *(void *)(v11 + 24);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v61 = v16;
  uint64_t v62 = v18;
  uint64_t v63 = WitnessTable;
  uint64_t v64 = AssociatedConformanceWitness;
  sub_1DC9D9234();
  uint64_t v51 = sub_1DCB87188();
  sub_1DCB89268();
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v21 = sub_1DCB870E8();
  uint64_t v22 = sub_1DCB87318();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v61 = v21;
  uint64_t v62 = v22;
  uint64_t v63 = v23;
  uint64_t v64 = v24;
  sub_1DC9D9234();
  uint64_t v25 = sub_1DCB870F8();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v61 = v25;
  uint64_t v62 = v18;
  uint64_t v63 = v26;
  uint64_t v64 = AssociatedConformanceWitness;
  sub_1DC9D9234();
  uint64_t v27 = sub_1DCB870A8();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v61 = v27;
  uint64_t v62 = v10;
  uint64_t v29 = v10;
  uint64_t v63 = v28;
  uint64_t v64 = v17;
  uint64_t v30 = v17;
  sub_1DC9D9234();
  uint64_t v31 = sub_1DCB87158();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v61 = v31;
  uint64_t v62 = AssociatedTypeWitness;
  uint64_t v63 = v18;
  uint64_t v64 = v32;
  type metadata accessor for ExpandResult();
  sub_1DC88D538();
  v49[1] = v33;
  v49[2] = v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (char *)v49 - v35;
  sub_1DC8E7D10();
  v37();
  uint64_t v38 = v56;
  uint64_t v39 = v52;
  uint64_t v40 = v53;
  sub_1DC8E7D10();
  v41();
  unint64_t v42 = (*(unsigned __int8 *)(v38 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v43 = (char *)swift_allocObject();
  uint64_t v45 = v54;
  uint64_t v44 = v55;
  *((void *)v43 + 2) = v29;
  *((void *)v43 + 3) = v45;
  *((void *)v43 + 4) = v30;
  *((void *)v43 + 5) = v44;
  *((void *)v43 + 6) = *(void *)(v39 + 32);
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v43[v42], v40, v39);
  sub_1DC9F7364(1, (uint64_t)sub_1DC9D9174, (uint64_t)v43, v29, v51, v30, v50, (uint64_t)v36);
  swift_release();
  sub_1DC88D5C8();
  v46();
  swift_getWitnessTable();
  sub_1DCB87518();
  sub_1DC88D5C8();
  return v47();
}

uint64_t sub_1DC9D6E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v75 = a4;
  uint64_t v97 = a2;
  uint64_t v74 = a6;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v92 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v91 = (char *)&v68 - v12;
  uint64_t v13 = a5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v90 = sub_1DCB883A8();
  uint64_t v14 = *(void *)(v90 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v90);
  uint64_t v89 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v88 = (char *)&v68 - v17;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v86 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v85 = (char *)&v68 - v23;
  uint64_t v102 = AssociatedTypeWitness;
  uint64_t v105 = *(char **)(AssociatedTypeWitness - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  id v95 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v103 = (char *)&v68 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v104 = (char *)&v68 - v28;
  uint64_t v29 = sub_1DCB87D78();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v98 = v29;
  uint64_t v107 = v29;
  uint64_t v108 = MEMORY[0x1E4FBC248];
  uint64_t v72 = WitnessTable;
  uint64_t v109 = WitnessTable;
  uint64_t v110 = MEMORY[0x1E4FBC278];
  uint64_t v31 = sub_1DCB87188();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v73 = (char *)&v68 - v33;
  uint64_t v87 = v18;
  uint64_t v107 = sub_1DCB87778();
  uint64_t v34 = swift_checkMetadataState();
  float v35 = (float)sub_1DCB880C8();
  uint64_t result = type metadata accessor for MaximumSlice();
  uint64_t v96 = *(int *)(result + 44);
  float v37 = ceilf(v35 / (float)*(uint64_t *)(v97 + v96));
  if ((~COERCE__INT64(v37) & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v37 >= 9.2234e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v99 = v19;
  uint64_t v38 = v14;
  uint64_t v39 = (uint64_t)v37;
  uint64_t result = sub_1DCB87C98();
  if ((v39 & 0x8000000000000000) == 0)
  {
    uint64_t v69 = v32;
    uint64_t v70 = v31;
    uint64_t v71 = a3;
    if (!v39)
    {
LABEL_14:
      uint64_t v106 = v107;
      unint64_t v66 = v73;
      sub_1DCB87AE8();
      swift_bridgeObjectRelease();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      uint64_t v67 = v70;
      sub_1DCB87178();
      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v66, v67);
    }
    uint64_t v40 = 0;
    uint64_t v101 = (char **)(v105 + 8);
    os_log_type_t v81 = (void (**)(char *, char *, uint64_t))(v105 + 16);
    uint64_t v80 = (void (**)(char *, char *, uint64_t))(v105 + 32);
    uint64_t v79 = (void (**)(char *, char *, uint64_t))(v38 + 32);
    os_log_type_t v78 = (void (**)(char *, uint64_t))(v38 + 8);
    uint64_t v77 = (void (**)(char *, char *, uint64_t))(v99 + 16);
    char v76 = (void (**)(char *, uint64_t))(v99 + 8);
    uint64_t v84 = a1;
    uint64_t v83 = v13;
    uint64_t v82 = v39;
    uint64_t v100 = v34;
    while (1)
    {
      uint64_t v41 = *(void *)(v97 + v96);
      uint64_t v42 = v41 * v40;
      if ((unsigned __int128)(v41 * (__int128)v40) >> 64 != (v41 * v40) >> 63) {
        break;
      }
      uint64_t result = sub_1DCB880C8();
      uint64_t v43 = result - v42;
      if (__OFSUB__(result, v42)) {
        goto LABEL_16;
      }
      if (v43 >= v41) {
        uint64_t v43 = v41;
      }
      uint64_t v99 = v43;
      uint64_t v44 = v103;
      sub_1DCB880B8();
      sub_1DCB880E8();
      uint64_t v45 = v102;
      uint64_t v105 = *v101;
      ((void (*)(char *, uint64_t))v105)(v44, v102);
      uint64_t v46 = v95;
      uint64_t result = sub_1DCB880B8();
      if (__OFADD__(v42, v99)) {
        goto LABEL_17;
      }
      sub_1DCB880E8();
      ((void (*)(char *, uint64_t))v105)(v46, v45);
      uint64_t result = sub_1DCB87878();
      if ((result & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v99 = v40 + 1;
      int v47 = v44;
      uint64_t v48 = TupleTypeMetadata2;
      id v49 = v91;
      uint64_t v50 = &v91[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v51 = *v81;
      uint64_t v52 = v102;
      (*v81)(v91, v104, v102);
      v51(v50, v47, v52);
      uint64_t v53 = v92;
      uint64_t v54 = &v92[*(int *)(v48 + 48)];
      v51(v92, v49, v52);
      v51(v54, v50, v52);
      uint64_t v55 = *v80;
      uint64_t v56 = v89;
      (*v80)(v89, v53, v52);
      ((void (*)(char *, uint64_t))v105)(v54, v52);
      uint64_t v57 = &v53[*(int *)(v48 + 48)];
      v55(v53, v49, v52);
      v55(v57, v50, v52);
      uint64_t v58 = v90;
      v55(&v56[*(int *)(v90 + 36)], v57, v52);
      uint64_t v59 = (void (*)(char *, uint64_t))v105;
      ((void (*)(char *, uint64_t))v105)(v53, v52);
      uint64_t v60 = v88;
      (*v79)(v88, v56, v58);
      uint64_t v61 = v85;
      sub_1DCB88208();
      (*v78)(v60, v58);
      uint64_t v62 = v87;
      (*v77)(v86, v61, v87);
      sub_1DCB87D48();
      uint64_t v63 = v61;
      uint64_t v40 = v99;
      uint64_t v64 = v62;
      unint64_t v65 = v104;
      (*v76)(v63, v64);
      v59(v103, v52);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v59)(v65, v52);
      if (v82 == v40) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1DC9D78C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC9D6A14(a1, a4, a2, a3);
}

uint64_t sub_1DC9D78D8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DC9D78F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + *(int *)(a3 + 60));
  uint64_t v5 = result - v4;
  if (__OFSUB__(result, v4))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(v3 + *(int *)(a3 + 64));
  BOOL v7 = __OFADD__(v5, v6);
  uint64_t v8 = v5 + v6;
  if (v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!v6)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v6 != -1 || v8 != 0x8000000000000000) {
    return (v8 / v6) & ~((v8 / v6) >> 63);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1DC9D7948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a4;
  uint64_t v73 = a3;
  uint64_t v69 = a1;
  sub_1DC88D538();
  uint64_t v66 = v5;
  uint64_t v67 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v7);
  unint64_t v65 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 16);
  sub_1DC88D538();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v16 + 32);
  uint64_t v72 = sub_1DCB87118();
  sub_1DC88D538();
  uint64_t v68 = v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v74 = (char *)&v54 - v20;
  uint64_t v21 = *(void *)(a2 + 24);
  uint64_t v70 = a2;
  uint64_t v71 = v21;
  uint64_t v22 = sub_1DCB87D78();
  uint64_t v23 = sub_1DC9D9214();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v75 = v22;
  uint64_t v76 = v23;
  uint64_t v77 = WitnessTable;
  uint64_t v78 = AssociatedConformanceWitness;
  uint64_t v26 = sub_1DCB87188();
  uint64_t v61 = v26;
  uint64_t v27 = *(void *)(a2 + 48);
  sub_1DC9D9214();
  uint64_t v55 = v27;
  swift_getAssociatedTypeWitness();
  uint64_t v28 = sub_1DCB87D78();
  uint64_t v60 = v28;
  uint64_t v29 = v72;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v59 = v30;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v75 = v29;
  uint64_t v76 = v26;
  uint64_t v77 = v28;
  uint64_t v78 = v30;
  uint64_t v79 = v58;
  _s15StatefulFlatMapVMa();
  sub_1DC88D538();
  uint64_t v62 = v31;
  uint64_t v63 = v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v57 = (uint64_t)&v54 - v33;
  sub_1DC8E7D10();
  v34();
  float v35 = (void *)swift_allocObject();
  uint64_t v36 = v71;
  v35[2] = v10;
  v35[3] = v36;
  uint64_t v37 = v73;
  v35[4] = v73;
  v35[5] = v17;
  uint64_t v38 = v17;
  uint64_t v56 = *(void *)(v70 + 40);
  uint64_t v39 = v64;
  v35[6] = v56;
  v35[7] = v39;
  v35[8] = v27;
  sub_1DCB87488();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  uint64_t v41 = v65;
  uint64_t v40 = v66;
  sub_1DC8E7D10();
  v42();
  unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v44 = (char *)swift_allocObject();
  uint64_t v45 = v70;
  uint64_t v46 = v71;
  *((void *)v44 + 2) = v10;
  *((void *)v44 + 3) = v46;
  *((void *)v44 + 4) = v37;
  *((void *)v44 + 5) = v38;
  uint64_t v47 = v56;
  *((void *)v44 + 6) = v56;
  *((void *)v44 + 7) = v39;
  uint64_t v48 = v39;
  uint64_t v49 = v55;
  *((void *)v44 + 8) = v55;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v44[v43], v41, v45);
  uint64_t v50 = (void *)swift_allocObject();
  v50[2] = v10;
  v50[3] = v46;
  v50[4] = v73;
  v50[5] = v38;
  v50[6] = v47;
  v50[7] = v48;
  v50[8] = v49;
  sub_1DCAD76DC(1, (uint64_t)sub_1DC9D8FD0, (uint64_t)v44, (uint64_t)sub_1DC9D9078, (uint64_t)v50, v72, v61, v60, v57);
  swift_release();
  swift_release();
  sub_1DC88D5C8();
  v51();
  swift_getWitnessTable();
  sub_1DCB87518();
  sub_1DC88D5C8();
  return v52();
}

BOOL sub_1DC9D7E74()
{
  return sub_1DCB880C8() > 0;
}

uint64_t sub_1DC9D7ECC@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, void *a10, uint64_t a11)
{
  uint64_t v134 = a8;
  uint64_t v144 = a6;
  uint64_t v110 = a3;
  uint64_t v109 = a2;
  uint64_t v142 = a1;
  uint64_t v99 = a9;
  v143 = a10;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v15 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  v120 = (char *)v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v119 = (char *)v93 - v18;
  uint64_t v141 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v123 = (char *)v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v125 = (char *)v93 - v22;
  MEMORY[0x1F4188790](v21);
  v124 = (char *)v93 - v23;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v145 = AssociatedTypeWitness;
  uint64_t v122 = AssociatedConformanceWitness;
  uint64_t v118 = sub_1DCB883A8();
  v140 = *(char **)(v118 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v118);
  v117 = (char *)v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v116 = (char *)v93 - v28;
  v139 = *(char **)(a5 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v106 = (char *)v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  v137 = (char *)v93 - v31;
  uint64_t v32 = sub_1DCB87D78();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v153 = v32;
  uint64_t v154 = MEMORY[0x1E4FBC248];
  v93[1] = WitnessTable;
  uint64_t v155 = WitnessTable;
  uint64_t v156 = MEMORY[0x1E4FBC278];
  uint64_t v96 = sub_1DCB87188();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  id v94 = (char *)v93 - v34;
  uint64_t v35 = swift_getAssociatedTypeWitness();
  uint64_t v132 = *(void *)(v35 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v35);
  v126 = (char *)v93 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v131 = (char *)v93 - v39;
  v93[0] = v40;
  MEMORY[0x1F4188790](v38);
  uint64_t v42 = (char *)v93 - v41;
  uint64_t v135 = swift_checkMetadataState();
  sub_1DCB881D8();
  uint64_t v127 = v35;
  uint64_t v43 = sub_1DCB87D78();
  v115 = v42;
  uint64_t v44 = v109;
  sub_1DCB87D48();
  uint64_t v45 = *(void *)v44;
  uint64_t v158 = 0;
  uint64_t v159 = v45;
  uint64_t v146 = a4;
  uint64_t v147 = a5;
  uint64_t v148 = v144;
  uint64_t v149 = a7;
  uint64_t v46 = v134;
  uint64_t v150 = v134;
  v151 = v143;
  uint64_t v152 = a11;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v105 = v43;
  sub_1DCB87B48();
  swift_bridgeObjectRelease();
  uint64_t v47 = v153;
  uint64_t v97 = a4;
  uint64_t v153 = a4;
  uint64_t v154 = a5;
  uint64_t v98 = a7;
  uint64_t v155 = a7;
  uint64_t v156 = v46;
  uint64_t v136 = a11;
  uint64_t v157 = a11;
  uint64_t v48 = type metadata accessor for SliceWithStride();
  uint64_t v50 = sub_1DC9D78F8(v47, v49, v48);
  uint64_t v138 = a5;
  uint64_t v153 = sub_1DCB87778();
  uint64_t v107 = v32;
  uint64_t result = sub_1DCB87C98();
  if ((v50 & 0x8000000000000000) == 0)
  {
    uint64_t v52 = v145;
    uint64_t v53 = v125;
    uint64_t v54 = v124;
    uint64_t v55 = v127;
    uint64_t v56 = v126;
    if (!v50)
    {
LABEL_21:
      uint64_t v159 = v153;
      id v91 = v94;
      sub_1DCB87AE8();
      swift_bridgeObjectRelease();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      uint64_t v92 = v96;
      sub_1DCB87178();
      return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v91, v92);
    }
    uint64_t v57 = 0;
    uint64_t v104 = *(int *)(v48 + 60);
    uint64_t v102 = *(int *)(v48 + 64);
    v129 = (void (**)(char *, uint64_t *, uint64_t))(v132 + 16);
    v130 = (void (**)(char *, char *, uint64_t))(v132 + 32);
    v143 = (void *)(v141 + 8);
    v114 = (void (**)(char *, char *, uint64_t))(v141 + 32);
    v113 = (void (**)(char *, char *, uint64_t))(v141 + 16);
    uint64_t v112 = (void (**)(char *, char *, uint64_t))(v140 + 32);
    uint64_t v111 = (void (**)(char *, uint64_t))(v140 + 8);
    v128 = (void (**)(char *, uint64_t))(v132 + 8);
    uint64_t v101 = (void (**)(char *, char *, uint64_t))(v139 + 16);
    uint64_t v100 = (uint64_t (**)(char *, uint64_t))(v139 + 8);
    uint64_t v103 = v50;
    while (v57 != v50)
    {
      uint64_t v108 = v57;
      sub_1DCB88398();
      uint64_t v144 = *(void *)(v110 + v104);
      uint64_t v58 = *(void *)v109;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_1DCB87C48();
      uint64_t v159 = v59;
      if (v59 != MEMORY[0x1E01A6D50](v58, v55))
      {
        uint64_t v133 = v58;
        while (1)
        {
          char v60 = sub_1DCB87D18();
          sub_1DCB87C88();
          if (v60)
          {
            uint64_t v61 = v131;
            (*(void (**)(char *, unint64_t, uint64_t))(v132 + 16))(v131, v58+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(void *)(v132 + 72) * v59, v55);
          }
          else
          {
            uint64_t result = sub_1DCB88AD8();
            if (v93[0] != 8) {
              goto LABEL_26;
            }
            uint64_t v158 = result;
            uint64_t v61 = v131;
            (*v129)(v131, &v158, v55);
            swift_unknownObjectRelease();
          }
          swift_bridgeObjectRetain();
          MEMORY[0x1E01A6D60](&v159, v58, v55);
          swift_bridgeObjectRelease();
          (*v130)(v56, v61, v55);
          uint64_t v62 = swift_getAssociatedConformanceWitness();
          uint64_t v63 = sub_1DCB880C8();
          if (v144 >= v63) {
            uint64_t v64 = v63;
          }
          else {
            uint64_t v64 = v144;
          }
          if (!v64)
          {
            (*v128)(v56, v55);
            goto LABEL_20;
          }
          sub_1DCB880B8();
          unint64_t v65 = v123;
          sub_1DCB880B8();
          uint64_t v142 = v64;
          sub_1DCB880E8();
          uint64_t v66 = (char *)*v143;
          ((void (*)(char *, uint64_t))*v143)(v65, v52);
          uint64_t result = sub_1DCB87878();
          if ((result & 1) == 0) {
            break;
          }
          uint64_t v67 = TupleTypeMetadata2;
          uint64_t v68 = v119;
          uint64_t v69 = &v119[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v70 = v54;
          uint64_t v71 = *v114;
          (*v114)(v119, v70, v52);
          v140 = v66;
          uint64_t v72 = v69;
          v139 = v69;
          v71(v69, v53, v52);
          uint64_t v73 = v120;
          uint64_t v74 = &v120[*(int *)(v67 + 48)];
          uint64_t v75 = *v113;
          (*v113)(v120, v68, v145);
          v75(v74, v72, v145);
          uint64_t v76 = v117;
          v71(v117, v73, v145);
          uint64_t v141 = v62;
          uint64_t v77 = (void (*)(char *, uint64_t))v140;
          ((void (*)(char *, uint64_t))v140)(v74, v145);
          uint64_t v78 = &v73[*(int *)(v67 + 48)];
          uint64_t v79 = v68;
          uint64_t v55 = v127;
          v71(v73, v79, v145);
          v71(v78, v139, v145);
          uint64_t v80 = v118;
          os_log_type_t v81 = v78;
          uint64_t v52 = v145;
          v71(&v76[*(int *)(v118 + 36)], v81, v145);
          v77(v73, v52);
          uint64_t v82 = v116;
          (*v112)(v116, v76, v80);
          uint64_t v56 = v126;
          sub_1DCB88208();
          (*v111)(v82, v80);
          sub_1DCB88248();
          uint64_t result = ((uint64_t (*)(char *, uint64_t))*v128)(v56, v55);
          BOOL v83 = __OFSUB__(v144, v142);
          v144 -= v142;
          if (v83) {
            goto LABEL_23;
          }
          uint64_t v59 = v159;
          uint64_t v58 = v133;
          uint64_t v84 = MEMORY[0x1E01A6D50](v133, v55);
          uint64_t v53 = v125;
          uint64_t v54 = v124;
          if (v59 == v84) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
        break;
      }
LABEL_20:
      uint64_t v85 = v108 + 1;
      swift_bridgeObjectRelease();
      uint64_t v86 = v137;
      (*v101)(v106, v137, v138);
      sub_1DCB87D48();
      uint64_t v87 = *(void (**)(void, void))(v110 + v102);
      uint64_t v88 = v105;
      uint64_t v89 = swift_getWitnessTable();
      uint64_t v90 = swift_getAssociatedConformanceWitness();
      sub_1DC88692C(v109, v87, v88, v89, v90, MEMORY[0x1E4FBB590]);
      uint64_t result = (*v100)(v86, v138);
      uint64_t v57 = v85;
      uint64_t v50 = v103;
      if (v57 == v103) {
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1DC9D8DA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1DCB880C8();
  if (__OFADD__(v3, result)) {
    __break(1u);
  }
  else {
    *a2 = v3 + result;
  }
  return result;
}

uint64_t sub_1DC9D8E74@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_1DCB87778();
  *a1 = result;
  return result;
}

uint64_t sub_1DC9D8EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC9D7948(a1, a4, a2, a3);
}

BOOL sub_1DC9D8EF8()
{
  return sub_1DC9D7E74();
}

uint64_t sub_1DC9D8F0C()
{
  long long v4 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = type metadata accessor for SliceWithStride();
  sub_1DC89D568(v1);
  (*(void (**)(unint64_t))(*(void *)(v4 - 8) + 8))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
  return swift_deallocObject();
}

uint64_t sub_1DC9D8FD0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (void *)v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = type metadata accessor for SliceWithStride();
  sub_1DC8E77E0(v4);
  sub_1DC9D9240();
  return sub_1DC9D7ECC(v5, v6, v7, v8, v9, v10, v11, v1, v12, v2, v3);
}

uint64_t sub_1DC9D9078@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9D8E74(a1);
}

uint64_t sub_1DC9D908C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DC9D8DA8(a1, a2);
}

uint64_t sub_1DC9D90C0()
{
  uint64_t v0 = type metadata accessor for MaximumSlice();
  sub_1DC89D568(v0);
  sub_1DC88D5C8();
  v1();

  return swift_deallocObject();
}

uint64_t sub_1DC9D9174()
{
  uint64_t v0 = type metadata accessor for MaximumSlice();
  sub_1DC8E77E0(v0);
  sub_1DC9D9240();

  return sub_1DC9D6E8C(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_1DC9D9204()
{
  return swift_deallocObject();
}

uint64_t sub_1DC9D9214()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1DC9D9234()
{
  return 255;
}

uint64_t type metadata accessor for UnsafeAsyncSDFNodeView()
{
  return self;
}

void sub_1DC9D9278()
{
}

void sub_1DC9D9300()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v21 = v4;
  uint64_t v22 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = sub_1DC9DF50C();
  v20[1] = v12;
  uint64_t v13 = sub_1DC9DF50C();
  uint64_t v14 = sub_1DC9DF50C();
  uint64_t v23 = AssociatedTypeWitness;
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  *(void *)uint64_t v26 = v14;
  _OWORD v20[2] = type metadata accessor for SharedLogMelSpectrogram.Configuration();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v21, AssociatedTypeWitness);
  uint64_t v23 = 0x40467A0000;
  uint64_t v24 = 0x45EA600042FA0000;
  uint64_t v25 = 0x3C23D70A00000002;
  v26[0] = 0;
  *(_OWORD *)&v26[4] = xmmword_1DCBC0330;
  uint64_t v27 = 0;
  double v18 = sub_1DC8888B4((uint64_t)v11, (int *)&v23, AssociatedTypeWitness, (uint64_t)v17);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v1 + 40))(v17, v3, v1, v18);
  sub_1DC89D710();
  v19();
  sub_1DC88D674();
}

void sub_1DC9D94F8()
{
}

uint64_t sub_1DC9D951C()
{
  if (qword_1EAA9D258 != -1) {
    swift_once();
  }
  char v17 = byte_1EAAFFA90;
  v2[0] = qword_1EAAFFA50;
  v2[1] = *(void *)algn_1EAAFFA58;
  v2[2] = qword_1EAAFFA60;
  void v2[3] = unk_1EAAFFA68;
  v2[4] = qword_1EAAFFA70;
  void v2[5] = unk_1EAAFFA78;
  char v3 = byte_1EAAFFA80;
  char v4 = byte_1EAAFFA81;
  char v5 = byte_1EAAFFA82;
  char v6 = byte_1EAAFFA83;
  char v7 = byte_1EAAFFA84;
  char v8 = byte_1EAAFFA85;
  uint64_t v9 = qword_1EAAFFA88;
  char v10 = byte_1EAAFFA90;
  uint64_t v11 = 0x40467A0000;
  uint64_t v12 = 0x45EA600042FA0000;
  uint64_t v13 = 0x3C23D70A00000002;
  char v14 = 0;
  long long v15 = xmmword_1DCBC0330;
  uint64_t v16 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1DC889A2C(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DC9D96B0()
{
  void v6[3] = &unk_1F37E2540;
  v6[4] = &off_1F37E24A0;
  uint64_t v2 = swift_allocObject();
  v6[0] = v2;
  long long v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(void *)(v2 + 48) = *(void *)(v0 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  char v4 = sub_1DCA96424(v6, 0xD000000000000031, 0x80000001DCB95610);
  if (!v1) {
    LOBYTE(v0) = v4 & 1;
  }
  sub_1DC8818D0((uint64_t)v6);
  return v0 & 1;
}

uint64_t sub_1DC9D9790()
{
  return sub_1DC9D951C();
}

void sub_1DC9D97A8()
{
}

void sub_1DC9D97FC()
{
}

id static AccessibilitySoundActions.isSupported.getter()
{
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  id v1 = sub_1DCAA49F8();
  char v3 = v2;
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0) {
    return (id)(v1 != 0);
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    char v5 = result;
    int exclaveCapability = MobileGestalt_get_exclaveCapability();

    if (exclaveCapability)
    {
      uint64_t v7 = MGGetProductType();
      return (id)sub_1DC983400(v7);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC9D9968()
{
  if (static AccessibilitySoundActions.isSupported.getter())
  {
    if (qword_1EAA9CAC0 != -1) {
      swift_once();
    }
    id v0 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
    sub_1DCB877B8();

    id v1 = sub_1DCAA49F8();
    LOBYTE(v0) = v2;
    swift_bridgeObjectRelease();
    char v3 = v0 | (v1 == 0);
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t AccessibilitySoundActions.SoundAction.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessibilitySoundActions.SoundAction.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t static AccessibilitySoundActions.SoundAction.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DCB89018();
  }
}

uint64_t sub_1DC9D9B3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DC9D9BD0()
{
  return 0x696669746E656469;
}

uint64_t sub_1DC9D9BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9D9B3C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC9D9C1C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9DD4F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9D9C58(uint64_t a1)
{
  unint64_t v2 = sub_1DC9DD4F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AccessibilitySoundActions.SoundAction.encode(to:)()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  sub_1DC87E988(&qword_1EAAA3BC0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC981E40();
  sub_1DC881A8C(v1, v1[3]);
  sub_1DC9DD4F8();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  uint64_t v3 = sub_1DC9DF5E0();
  v4(v3);
  sub_1DC88D674();
}

uint64_t AccessibilitySoundActions.SoundAction.hashValue.getter()
{
  return sub_1DCB891F8();
}

void AccessibilitySoundActions.SoundAction.init(from:)()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  char v4 = v3;
  sub_1DC87E988(&qword_1EAAA3BD0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC981E40();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DC9DD4F8();
  sub_1DCB89298();
  if (!v0)
  {
    uint64_t v6 = sub_1DCB88DA8();
    uint64_t v8 = v7;
    sub_1DC89D710();
    v9();
    uint64_t *v4 = v6;
    v4[1] = v8;
  }
  sub_1DC8818D0((uint64_t)v2);
  sub_1DC88D674();
}

void sub_1DC9D9EF0()
{
}

void sub_1DC9D9F08()
{
}

uint64_t static AccessibilitySoundActions.Request.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1DC9D9F3C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9DD544();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9D9F78(uint64_t a1)
{
  unint64_t v2 = sub_1DC9DD544();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AccessibilitySoundActions.Request.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA3BD8);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9DD544();
  sub_1DCB892B8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t AccessibilitySoundActions.Request.hashValue.getter()
{
  return sub_1DCB891F8();
}

uint64_t AccessibilitySoundActions.Request.init(from:)(uint64_t a1)
{
  return sub_1DC8818D0(a1);
}

uint64_t sub_1DC9DA0FC(uint64_t a1)
{
  return AccessibilitySoundActions.Request.init(from:)(a1);
}

uint64_t sub_1DC9DA114(void *a1)
{
  return AccessibilitySoundActions.Request.encode(to:)(a1);
}

uint64_t sub_1DC9DA12C()
{
  return AccessibilitySoundActions.Request.hashValue.getter();
}

void sub_1DC9DA144()
{
  sub_1DC88D6B0();
  uint64_t v26 = v1;
  uint64_t v27 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v22 = v10;
  uint64_t v23 = v9;
  sub_1DC87E988((uint64_t *)&unk_1EAAA13C0);
  sub_1DC89D4E0();
  uint64_t v24 = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC8C1FC4();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  double v18 = (char *)&v20 - v17;
  uint64_t v25 = v8;
  sub_1DCAA8124(20, v6, v4, (uint64_t)&v20 - v17);
  if (!v0)
  {
    uint64_t v20 = v15;
    uint64_t v21 = AssociatedTypeWitness;
    sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
    sub_1DCB873D8();
    sub_1DC88CF34((unint64_t *)&unk_1EAAA13D0, (uint64_t *)&unk_1EAAA13C0);
    sub_1DCB873A8();
    sub_1DC88D5C8();
    v19();
    sub_1DCAF2BE8();
    swift_release();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0F90);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D60, (uint64_t *)&unk_1EAAA0F90);
    sub_1DCB874A8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v21);
  }
  sub_1DC88D674();
}

uint64_t sub_1DC9DA414@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  a2[3] = sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
  *a2 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC9DA460@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1DC87E9DC(a1, (uint64_t)v7);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    *a2 = v5;
    a2[1] = v6;
  }
  else
  {
    sub_1DC958C74();
    swift_allocError();
    unsigned char *v4 = 1;
    return swift_willThrow();
  }
  return result;
}

void sub_1DC9DA4FC()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v154 = v2;
  uint64_t v155 = v3;
  unint64_t v156 = v4;
  uint64_t v133 = v5;
  uint64_t v128 = sub_1DC87E988((uint64_t *)&unk_1EAAA1380);
  sub_1DC89D4E0();
  uint64_t v127 = v6;
  MEMORY[0x1F4188790](v7);
  sub_1DC888164((uint64_t)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1DC888164((uint64_t)&v116 - v11);
  uint64_t v130 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CB0);
  sub_1DC89D4E0();
  uint64_t v129 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC88D550();
  sub_1DC888164(v14);
  uint64_t v132 = sub_1DC87E988((uint64_t *)&unk_1EAAA1390);
  sub_1DC89D4E0();
  uint64_t v131 = v15;
  MEMORY[0x1F4188790](v16);
  sub_1DC88D550();
  sub_1DC888164(v17);
  uint64_t v134 = sub_1DC87E988((uint64_t *)&unk_1EAAA3D20);
  sub_1DC89D4E0();
  uint64_t v120 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC88D550();
  uint64_t v151 = v20;
  sub_1DC87E988(&qword_1EAAA0F30);
  sub_1DC89D4E0();
  uint64_t v148 = v22;
  uint64_t v149 = v21;
  MEMORY[0x1F4188790](v21);
  sub_1DC9DF580(v23, v116);
  sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v140 = v25;
  uint64_t v141 = v24;
  MEMORY[0x1F4188790](v24);
  sub_1DC88D550();
  v139 = v26;
  uint64_t v152 = sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v138 = v27;
  MEMORY[0x1F4188790](v28);
  sub_1DC9DF52C(v29, v116);
  uint64_t v145 = sub_1DC87E988(&qword_1EAAA0C10);
  sub_1DC89D4E0();
  uint64_t v143 = v30;
  MEMORY[0x1F4188790](v31);
  sub_1DC88D550();
  uint64_t v142 = v32;
  uint64_t v146 = sub_1DC87E988(&qword_1EAAA0F38);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v33);
  sub_1DC9DF59C(v34, v116);
  uint64_t v136 = sub_1DC87E988((uint64_t *)&unk_1EAAA0F40);
  sub_1DC89D4E0();
  uint64_t v135 = v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v116 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v41 = v40;
  uint64_t v43 = MEMORY[0x1F4188790](v42);
  uint64_t v45 = (char *)&v116 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x1F4188790](v43);
  uint64_t v48 = (char *)&v116 - v47;
  MEMORY[0x1F4188790](v46);
  uint64_t v50 = (char *)&v116 - v49;
  sub_1DCB86BE8();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v51 = sub_1DCB86FE8();
  uint64_t v52 = sub_1DC89F57C(v51, (uint64_t)qword_1EAAFF810);
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  uint64_t v157 = v50;
  uint64_t v122 = v41 + 16;
  v121 = v53;
  sub_1DC8E7D10();
  v54();
  uint64_t v123 = v52;
  uint64_t v55 = sub_1DCB86FC8();
  os_log_type_t v56 = sub_1DCB88488();
  BOOL v57 = os_log_type_enabled(v55, v56);
  uint64_t v150 = v38;
  v126 = v45;
  if (v57)
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v153 = v41;
    uint64_t v59 = (uint8_t *)v58;
    uint64_t v60 = swift_slowAlloc();
    uint64_t v119 = v0;
    uint64_t v158 = v60;
    *(_DWORD *)uint64_t v59 = 136446210;
    sub_1DC88CBB4();
    uint64_t v61 = sub_1DCB88F98();
    uint64_t v63 = sub_1DC9F8920(v61, v62, &v158);
    sub_1DC9DF648(v63);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    uint64_t v64 = *(void (**)(char *, uint64_t))(v153 + 8);
    v64(v48, v39);
    _os_log_impl(&dword_1DC873000, v55, v56, "Started Creating Accessibility Sound Actions Session %{public}s", v59, 0xCu);
    swift_arrayDestroy();
    uint64_t v1 = v119;
    sub_1DC8E7728();
    uint64_t v41 = v153;
    sub_1DC8E7728();
  }
  else
  {
    uint64_t v64 = *(void (**)(char *, uint64_t))(v41 + 8);
    v64(v48, v39);
  }

  (*((void (**)(uint64_t, uint8_t *))v155 + 5))(v154, v155);
  if (v1)
  {
    v64(v157, v39);
  }
  else
  {
    v117 = v64;
    uint64_t v153 = v41;
    uint64_t v118 = v39;
    uint64_t v65 = sub_1DC888A00();
    swift_release();
    uint64_t v158 = v65;
    uint64_t v119 = 0;
    uint64_t v66 = v138;
    uint64_t v67 = v137;
    sub_1DC8BAE70();
    v68();
    uint64_t v69 = v139;
    char *v139 = sub_1DC9DB348;
    v69[1] = 0;
    sub_1DC8BAE70();
    v70();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0C40);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D30, (uint64_t *)&unk_1EAAA0C40);
    sub_1DC9DF608();
    uint64_t v71 = sub_1DC9DF5C8();
    v72(v71);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v152);
    swift_release();
    uint64_t v73 = sub_1DC87E988((uint64_t *)&unk_1EAAAA800);
    sub_1DC88CF34(&qword_1EAAA0C50, &qword_1EAAA0C10);
    uint64_t v74 = v147;
    sub_1DCB873D8();
    uint64_t v75 = v148;
    uint64_t v76 = v149;
    uint64_t v77 = v144;
    sub_1DC8E7D10();
    v78();
    uint64_t v79 = v146;
    *(void *)(v77 + *(int *)(v146 + 60)) = 96;
    *(void *)(v77 + *(int *)(v79 + 64)) = 2;
    *(void *)(v77 + *(int *)(v79 + 68)) = v73;
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
    sub_1DC88D5C8();
    v80();
    sub_1DC87E988((uint64_t *)&unk_1EAAA0CB0);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3D40, &qword_1EAAA0F38);
    uint64_t v81 = (uint64_t)v150;
    sub_1DCB873D8();
    uint64_t v82 = sub_1DC9DEEB4(v77);
    MEMORY[0x1F4188790](v82);
    uint64_t v83 = (uint64_t)v155;
    *(&v116 - 4) = v154;
    *(&v116 - 3) = v83;
    uint64_t v84 = v156;
    *(&v116 - 2) = v81;
    *(&v116 - 1) = v84;
    uint64_t v85 = v119;
    sub_1DCA26878(0xD000000000000022, 0x80000001DCB93540, (uint64_t (*)(void))sub_1DC9DEF14);
    if (v85)
    {
      v117(v157, v118);
      sub_1DC88D5C8();
      v86();
    }
    else
    {
      uint64_t v119 = 0;
      sub_1DC88CF34((unint64_t *)&unk_1EAAA13A0, (uint64_t *)&unk_1EAAA3D20);
      sub_1DCB873D8();
      uint64_t v87 = v127;
      uint64_t v88 = v125;
      uint64_t v89 = v128;
      sub_1DC8E7D10();
      v90();
      unint64_t v91 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
      uint64_t v92 = swift_allocObject();
      *(void *)(v92 + 16) = sub_1DC9DB55C;
      *(void *)(v92 + 24) = 0;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v87 + 32))(v92 + v91, v88, v89);
      sub_1DC87E988((uint64_t *)&unk_1EAAA3C00);
      sub_1DC88CF34((unint64_t *)&qword_1EAAA13B0, (uint64_t *)&unk_1EAAA3C00);
      sub_1DCB87378();
      uint64_t v93 = sub_1DC9DF5E0();
      v94(v93);
      uint64_t v158 = 0;
      unint64_t v159 = 0xE000000000000000;
      sub_1DCB88A98();
      swift_bridgeObjectRelease();
      uint64_t v158 = 0xD000000000000022;
      unint64_t v159 = 0x80000001DCB93570;
      unint64_t v95 = sub_1DC88CBB4();
      uint64_t v96 = v157;
      uint64_t v97 = v118;
      unint64_t v156 = v95;
      sub_1DCB88F98();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      sub_1DCB87A18();
      sub_1DCA25DCC();
      swift_bridgeObjectRelease();
      sub_1DC88D5C8();
      v98();
      sub_1DC88CF34(&qword_1EAAA3CE0, (uint64_t *)&unk_1EAAA1390);
      uint64_t v99 = sub_1DCB873A8();
      sub_1DC88D5C8();
      v100();
      uint64_t v101 = v133;
      uint64_t v102 = v121;
      v121(v133, v96, v97);
      *(void *)&v101[*(int *)(type metadata accessor for AccessibilitySoundActions.Session() + 20)] = v99;
      uint64_t v103 = v126;
      v102(v126, v96, v97);
      swift_retain();
      uint64_t v104 = sub_1DCB86FC8();
      os_log_type_t v105 = sub_1DCB88488();
      if (os_log_type_enabled(v104, v105))
      {
        uint64_t v106 = (uint8_t *)swift_slowAlloc();
        uint64_t v158 = swift_slowAlloc();
        *(_DWORD *)uint64_t v106 = 136446210;
        uint64_t v155 = v106 + 4;
        uint64_t v107 = sub_1DCB88F98();
        uint64_t v109 = sub_1DC9F8920(v107, v108, &v158);
        sub_1DC9DF648(v109);
        sub_1DCB88778();
        swift_bridgeObjectRelease();
        uint64_t v110 = v103;
        uint64_t v111 = v117;
        v117(v110, v97);
        _os_log_impl(&dword_1DC873000, v104, v105, "Finished Creating Accessibility Sound Actions Session %{public}s", v106, 0xCu);
        swift_arrayDestroy();
        sub_1DC8E7728();
        sub_1DC8E7728();
        swift_release();

        sub_1DC88D5C8();
        v112();
        v111(v157, v97);
      }
      else
      {

        v113 = v117;
        v117(v103, v97);
        swift_release();
        sub_1DC88D5C8();
        v114();
        v113(v96, v97);
      }
      sub_1DC88D5C8();
      v115();
    }
  }
  sub_1DC88D674();
}

uint64_t sub_1DC9DB348@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9DC4EC(3, a1);
}

uint64_t sub_1DC9DB350@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v11[0] = a1;
  v11[1] = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)v11 - v8;
  sub_1DC87E988((uint64_t *)&unk_1EAAA0F40);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA3D50, (uint64_t *)&unk_1EAAA0F40);
  sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, v5);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DC9DA144();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_1DC9DB550@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DC9DB55C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9DC4A4(a1);
}

uint64_t sub_1DC9DB62C()
{
  sub_1DC886900();
  v0[5] = &unk_1F37E2448;
  v0[6] = &off_1F37E2428;
  sub_1DC881A8C(v0 + 2, (uint64_t)&unk_1F37E2448);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)sub_1DC8BAA00();
  v0[11] = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9DB6F8;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  return v5(v3, v2);
}

uint64_t sub_1DC9DB6F8()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9DB7D4()
{
  sub_1DC886900();
  uint64_t v1 = v0[10];
  sub_1DC9DD5D8(v0[8], v0[7]);
  sub_1DC9DF280(v1, (void (*)(void))type metadata accessor for RemoteRequest);
  sub_1DC8818D0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1DC9DB87C()
{
  sub_1DC886900();
  sub_1DC9DF280(*(void *)(v0 + 80), (void (*)(void))type metadata accessor for RemoteRequest);
  sub_1DC8818D0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v1();
}

void sub_1DC9DB918()
{
  sub_1DC88D6B0();
  uint64_t v2 = v1;
  uint64_t v71 = v3;
  sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v69 = v5;
  uint64_t v70 = v4;
  MEMORY[0x1F4188790](v4);
  sub_1DC88D550();
  uint64_t v68 = v6;
  sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v66 = v8;
  uint64_t v67 = v7;
  MEMORY[0x1F4188790](v7);
  sub_1DC9DF580(v9, v54[0]);
  uint64_t v56 = sub_1DC87E988(&qword_1EAAAAA50);
  sub_1DC89D4E0();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v54 - v16;
  uint64_t v58 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CB0);
  sub_1DC89D4E0();
  uint64_t v57 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC9DF52C(v20, v54[0]);
  sub_1DC87E988((uint64_t *)&unk_1EAAA1390);
  sub_1DC89D4E0();
  uint64_t v60 = v22;
  uint64_t v61 = v21;
  MEMORY[0x1F4188790](v21);
  sub_1DC88D550();
  uint64_t v59 = v23;
  sub_1DC87E988(&qword_1EAAA3CC0);
  sub_1DC89D4E0();
  uint64_t v63 = v25;
  uint64_t v64 = v24;
  MEMORY[0x1F4188790](v24);
  sub_1DC9DF59C(v26, v54[0]);
  uint64_t v77 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v62 = v27;
  MEMORY[0x1F4188790](v28);
  sub_1DC88D550();
  uint64_t v30 = v29;
  uint64_t v32 = v2[3];
  uint64_t v31 = v2[4];
  sub_1DC881A8C(v2, v32);
  (*(void (**)(uint64_t))(*(void *)(v31 + 8) + 8))(v32);
  if (!v0)
  {
    v54[3] = 0;
    uint64_t v33 = sub_1DCAC3258();
    swift_release();
    sub_1DC9DEC34((uint64_t)v2, (uint64_t)&v72);
    uint64_t v34 = swift_allocObject();
    sub_1DC9DECD0(&v72, (_OWORD *)(v34 + 16));
    uint64_t v55 = v30;
    sub_1DCB86BE8();
    *(void *)&long long v72 = v33;
    *((void *)&v72 + 1) = sub_1DC9DC084;
    uint64_t v73 = 0;
    uint64_t v74 = sub_1DC9DECE8;
    uint64_t v75 = v34;
    uint64_t v76 = 1;
    v54[2] = v33;
    swift_retain();
    v54[1] = v34;
    swift_retain();
    sub_1DC87E988(&qword_1EAAA3CC8);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA3CD0, &qword_1EAAA3CC8);
    sub_1DCB873D8();
    swift_release();
    swift_release();
    uint64_t v35 = v56;
    sub_1DC8E7D10();
    v36();
    unint64_t v37 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_1DC9DB55C;
    *(void *)(v38 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v38 + v37, (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35);
    sub_1DC87E988((uint64_t *)&unk_1EAAA3C00);
    sub_1DC88CF34((unint64_t *)&qword_1EAAA13B0, (uint64_t *)&unk_1EAAA3C00);
    sub_1DCB87378();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v35);
    *(void *)&long long v72 = 0;
    *((void *)&v72 + 1) = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    *(void *)&long long v72 = 0xD000000000000022;
    *((void *)&v72 + 1) = 0x80000001DCB93570;
    sub_1DC88CBB4();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCA25DCC();
    swift_bridgeObjectRelease();
    sub_1DC88D5C8();
    v39();
    sub_1DC88CF34(&qword_1EAAA3CE0, (uint64_t *)&unk_1EAAA1390);
    uint64_t v40 = sub_1DCB87468();
    sub_1DC87E988(&qword_1EAAA3CE8);
    swift_allocObject();
    uint64_t v41 = sub_1DC9C5478(v40);
    sub_1DC88D5C8();
    v42();
    *(void *)&long long v72 = v41;
    uint64_t v44 = v65;
    uint64_t v43 = v66;
    uint64_t v45 = v67;
    sub_1DC8BAE70();
    v46();
    uint64_t v47 = v68;
    *uint64_t v68 = sub_1DC9DC4E4;
    v47[1] = 0;
    sub_1DC8BAE70();
    v48();
    sub_1DC88CF34(&qword_1EAAA3CF0, &qword_1EAAA3CE8);
    sub_1DC9DF608();
    uint64_t v49 = sub_1DC9DF5C8();
    v50(v49);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v45);
    swift_release();
    sub_1DC88CF34(&qword_1EAAA3CF8, &qword_1EAAA3CC0);
    uint64_t v51 = sub_1DCB873A8();
    swift_release();
    swift_release();
    sub_1DC88D5C8();
    v52();
    uint64_t v53 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v71, v55, v77);
    *(void *)(v53 + *(int *)(type metadata accessor for AccessibilitySoundActions.Session() + 20)) = v51;
  }
  sub_1DC88D674();
}

uint64_t sub_1DC9DC084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA3D08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DCA2614C();
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = (void *)v7;
  char v11 = v8;
  v19[1] = a1;
  uint64_t v20 = v4;
  uint64_t v21 = v3;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  while (v11 != -1)
  {
    sub_1DC9D5CA0(v10, v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DCA73B40();
      uint64_t v12 = v16;
    }
    unint64_t v13 = *(void *)(v12 + 16);
    if (v13 >= *(void *)(v12 + 24) >> 1)
    {
      sub_1DCA73B40();
      uint64_t v12 = v17;
    }
    *(void *)(v12 + 16) = v13 + 1;
    uint64_t v14 = v12 + 16 * v13;
    *(void *)(v14 + 32) = v10;
    *(unsigned char *)(v14 + 40) = v11;
    sub_1DC9D5CB4(v10, v11);
    uint64_t v10 = (void *)sub_1DCA2614C();
    char v11 = v15;
  }
  uint64_t v22 = v12;
  sub_1DC87E988(&qword_1EAAA3D10);
  sub_1DC88CF34(&qword_1EAAA3D18, &qword_1EAAA3D10);
  sub_1DCB87AE8();
  swift_bridgeObjectRelease();
  sub_1DC87E988(&qword_1EAA9DF60);
  uint64_t v18 = v21;
  sub_1DCB87178();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v18);
}

uint64_t sub_1DC9DC2E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[5];
  uint64_t v6 = sub_1DC881A8C(a1, v4);
  void v10[3] = v4;
  v10[4] = v5;
  uint64_t v7 = sub_1DC8EF6AC(v10);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(v7, v6, v4);
  uint64_t v8 = sub_1DCA605F4(v10);
  uint64_t result = sub_1DC8818D0((uint64_t)v10);
  if (!v2) {
    *a2 = v8;
  }
  return result;
}

unsigned char *sub_1DC9DC394@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 0x6B63696C63;
  unint64_t v3 = 0xE500000000000000;
  switch(*result)
  {
    case 1:
      uint64_t v2 = 0x6B63756C63;
      break;
    case 2:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 25957;
      break;
    case 3:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 26725;
      break;
    case 4:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 27499;
      break;
    case 5:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 24940;
      break;
    case 6:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v2 = 6845805;
      break;
    case 7:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 28527;
      break;
    case 8:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v2 = 7368560;
      break;
    case 9:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 28784;
      break;
    case 0xA:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 26739;
      break;
    case 0xB:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 29555;
      break;
    case 0xC:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 29812;
      break;
    case 0xD:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v2 = 26741;
      break;
    default:
      break;
  }
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t sub_1DC9DC4A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = os_transaction_create();
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC9DC4E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9DC4EC(4, a1);
}

uint64_t sub_1DC9DC4EC@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  sub_1DC958C74();
  uint64_t result = swift_allocError();
  *a2 = result;
  *uint64_t v5 = a1;
  return result;
}

uint64_t AccessibilitySoundActions.Session.soundActions.getter@<X0>(void *a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = type metadata accessor for AccessibilitySoundActions.Session();
  uint64_t v3 = v2 - 8;
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v26 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = sub_1DC87E988(&qword_1EAAA3BF0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA3BF8);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v25 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v29 = *(void *)(v1 + *(int *)(v3 + 28));
  uint64_t v13 = sub_1DC87E988((uint64_t *)&unk_1EAAA3C00);
  uint64_t v14 = sub_1DC88CF34((unint64_t *)&qword_1EAAA13B0, (uint64_t *)&unk_1EAAA3C00);
  MEMORY[0x1E01A64B0](v13, v14);
  sub_1DC9DD63C(v1, (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1DC9DD5D8((uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  sub_1DC88CF34(&qword_1EAAA3C20, &qword_1EAAA3BF0);
  sub_1DCB88C18();
  uint64_t v17 = v25;
  sub_1DC8E7D10();
  v18();
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, v17, v6);
  uint64_t v21 = v28;
  *uint64_t v28 = sub_1DC9DE26C;
  v21[1] = v20;
  sub_1DC9DF5F8();
  return v22();
}

uint64_t sub_1DC9DC824(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v3[4] = a1;
  void v3[5] = a3;
  uint64_t v5 = sub_1DCB86F38();
  v3[6] = v5;
  v3[7] = *(void *)(v5 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  type metadata accessor for AccessibilitySoundActions.Session();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  v3[10] = v6;
  v3[11] = v7;
  v3[12] = v8;
  return MEMORY[0x1F4188298](sub_1DC9DC92C, 0, 0);
}

uint64_t sub_1DC9DC92C()
{
  uint64_t v28 = v0;
  if (qword_1EAA9CB60 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = sub_1DCB86F68();
  sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF838);
  sub_1DC9DD63C(v2, v1);
  swift_bridgeObjectRetain_n();
  sub_1DCB86F28();
  uint64_t v4 = sub_1DCB86F48();
  os_signpost_type_t v5 = sub_1DCB88548();
  char v6 = sub_1DCB886F8();
  unint64_t v7 = v0[12];
  if (v6)
  {
    os_signpost_type_t v26 = v5;
    uint64_t v8 = v0[11];
    uint64_t v25 = v0[10];
    uint64_t v9 = v0[7];
    sub_1DC8E7D10();
    v10();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v27 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    v0[2] = sub_1DC9F8920(v8, v7, &v27);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    sub_1DCB86BF8();
    sub_1DC88CBB4();
    uint64_t v13 = sub_1DCB88F98();
    v0[3] = sub_1DC9F8920(v13, v14, &v27);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    sub_1DC9DF280(v25, (void (*)(void))type metadata accessor for AccessibilitySoundActions.Session);
    os_signpost_id_t v15 = sub_1DCB86F18();
    _os_signpost_emit_with_name_impl(&dword_1DC873000, v4, v26, v15, "ClientReadResult_AccessibilitySoundActions", "{\"identifier\":\"%s\",\"workloadID\":\"%s\"}", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v12, -1, -1);
    MEMORY[0x1E01A99C0](v11, -1, -1);

    uint64_t v16 = *(void (**)(void))(v9 + 8);
    sub_1DC89D710();
    v16();
    sub_1DC89D710();
    v16();
  }
  else
  {
    uint64_t v18 = v0[9];
    uint64_t v17 = v0[10];
    uint64_t v19 = v0[6];
    uint64_t v20 = v0[7];

    sub_1DC9DF280(v17, (void (*)(void))type metadata accessor for AccessibilitySoundActions.Session);
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  uint64_t v21 = v0[12];
  uint64_t v22 = (void *)v0[4];
  *uint64_t v22 = v0[11];
  v22[1] = v21;
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v23();
}

uint64_t sub_1DC9DCC70()
{
  sub_1DCAD3260();
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for AccessibilitySoundActions.Session() + 20));
  uint64_t v7 = sub_1DC87E988((uint64_t *)&unk_1EAAA3C00);
  uint64_t v8 = (_UNKNOWN **)sub_1DC9DF0FC();
  v6[0] = v2;
  swift_retain();
  sub_1DCAD3334(v6);
  if (!v1)
  {
    sub_1DC8818D0((uint64_t)v6);
    uint64_t v3 = sub_1DCB86BF8();
    uint64_t v7 = v3;
    uint64_t v8 = &off_1F37DF308;
    uint64_t v4 = sub_1DC8EF6AC(v6);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v4, v0, v3);
    sub_1DCAD3334(v6);
  }
  swift_release();
  return sub_1DC8818D0((uint64_t)v6);
}

uint64_t sub_1DC9DCD74()
{
  sub_1DC8867A8();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = sub_1DCB86BF8();
  v0[4] = v3;
  v0[5] = *(void *)(v3 - 8);
  v0[6] = swift_task_alloc();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  void *v4 = v0;
  v4[1] = sub_1DC9DCE6C;
  return sub_1DC9780D0();
}

uint64_t sub_1DC9DCE6C(uint64_t a1)
{
  sub_1DC886774();
  os_signpost_type_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  v5[8] = a1;
  v5[9] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
  else
  {
    uint64_t v12 = (void *)sub_1DC8BAA00();
    v5[10] = v12;
    *uint64_t v12 = v7;
    v12[1] = sub_1DC9DCFC4;
    return v14();
  }
}

uint64_t sub_1DC9DCFC4()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 96) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9DD0B4()
{
  sub_1DC8867A8();
  swift_release();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9DD11C()
{
  sub_1DC886900();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(int *)(type metadata accessor for AccessibilitySoundActions.Session() + 20);
  *(_DWORD *)(v0 + 120) = v3;
  *(void *)(v2 + v3) = v1;
  uint64_t v4 = (void *)sub_1DC8BAA00();
  *(void *)(v0 + 104) = v4;
  void *v4 = v0;
  v4[1] = sub_1DC9DD1D4;
  uint64_t v5 = *(void *)(v0 + 48);
  return v7(v5);
}

uint64_t sub_1DC9DD1D4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  sub_1DC88679C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1DC9DD2B0()
{
  sub_1DC8867A8();
  swift_release();
  swift_release();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9DD320()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1DC9DD3CC()
{
  sub_1DC886900();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9DD454()
{
  return sub_1DC9DCC70();
}

uint64_t sub_1DC9DD46C()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D6930;
  sub_1DC9DF4FC();
  return sub_1DC9DCD74();
}

unint64_t sub_1DC9DD4F8()
{
  unint64_t result = qword_1EAAA3BC8;
  if (!qword_1EAAA3BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3BC8);
  }
  return result;
}

unint64_t sub_1DC9DD544()
{
  unint64_t result = qword_1EAAA3BE0;
  if (!qword_1EAAA3BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3BE0);
  }
  return result;
}

uint64_t type metadata accessor for AccessibilitySoundActions.Session()
{
  uint64_t result = qword_1EAAA3C58;
  if (!qword_1EAAA3C58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DC9DD5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessibilitySoundActions.Session();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC9DD63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessibilitySoundActions.Session();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC9DD6A0()
{
  type metadata accessor for AccessibilitySoundActions.Session();
  sub_1DCB86BF8();
  sub_1DC88819C();
  sub_1DC88D5C8();
  v0();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9DD784()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for AccessibilitySoundActions.Session();
  sub_1DC8E77E0(v5);
  uint64_t v7 = v0 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_1DC886800(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1DC8D6930;
  return sub_1DC9DC824(v4, v2, v7);
}

uint64_t sub_1DC9DD840(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = sub_1DC87E988(&qword_1EAAA3D70);
  v1[7] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1DC9DD8C4, 0, 0);
}

uint64_t sub_1DC9DD8C4()
{
  sub_1DC8867A8();
  sub_1DC9DF560();
  sub_1DC88CF34(&qword_1EAAA3D90, &qword_1EAAA3D70);
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC9DF5B8(v0);
  void *v1 = v2;
  v1[1] = sub_1DC9DD97C;
  uint64_t v3 = sub_1DC9DF54C();
  return MEMORY[0x1F4187C78](v3, v4, v5);
}

uint64_t sub_1DC9DD97C()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  void *v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_endAccess();
    sub_1DC8BA978();
    return v10();
  }
}

uint64_t sub_1DC9DDA7C(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = sub_1DC87E988(&qword_1EAAA3DD8);
  v1[7] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1DC9DDB00, 0, 0);
}

uint64_t sub_1DC9DDB00()
{
  sub_1DC8867A8();
  sub_1DC9DF560();
  sub_1DC88CF34(&qword_1EAAA3DF8, &qword_1EAAA3DD8);
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC9DF5B8(v0);
  void *v1 = v2;
  v1[1] = sub_1DC9DD97C;
  uint64_t v3 = sub_1DC9DF54C();
  return MEMORY[0x1F4187C78](v3, v4, v5);
}

uint64_t sub_1DC9DDBB8(uint64_t a1)
{
  v1[5] = a1;
  v1[6] = sub_1DC87E988(&qword_1EAAA3DB0);
  v1[7] = swift_projectBox();
  return MEMORY[0x1F4188298](sub_1DC9DDC3C, 0, 0);
}

uint64_t sub_1DC9DDC3C()
{
  sub_1DC8867A8();
  sub_1DC9DF560();
  sub_1DC88CF34(&qword_1EAAA3DD0, &qword_1EAAA3DB0);
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC9DF5B8(v0);
  void *v1 = v2;
  v1[1] = sub_1DC9DDCF4;
  uint64_t v3 = sub_1DC9DF54C();
  return MEMORY[0x1F4187C78](v3, v4, v5);
}

uint64_t sub_1DC9DDCF4()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v3 = v2;
  sub_1DC88679C();
  void *v4 = v3;
  uint64_t v5 = *v1;
  sub_1DC88678C();
  void *v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1DC886854();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_endAccess();
    sub_1DC8BA978();
    return v10();
  }
}

uint64_t sub_1DC9DDDF4()
{
  sub_1DC8867A8();
  swift_endAccess();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DC9DDE50@<X0>(void *a1@<X8>)
{
  sub_1DC87E988(&qword_1EAA9F9E0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA3D70);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DC9DF4B0();
  v6(v5);
  sub_1DC88CF34(&qword_1EAAA3D78, &qword_1EAA9F9E0);
  sub_1DC9DF628();
  sub_1DC8E7D10();
  v7();
  uint64_t v8 = swift_allocBox();
  uint64_t v10 = sub_1DC9DF4D8(v8, v9);
  v11(v10);
  sub_1DC9DF5F8();
  uint64_t result = v12();
  *a1 = &unk_1EAAA3D88;
  a1[1] = &qword_1EAA9F9E0;
  return result;
}

uint64_t sub_1DC9DDFB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA3BF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA3DD8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1DC88CF34(&qword_1EAAA3DE0, &qword_1EAAA3BF8);
  sub_1DCB87F28();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v15 = swift_allocBox();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16, v12, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  *a2 = &unk_1EAAA3DF0;
  a2[1] = v15;
  return result;
}

uint64_t sub_1DC9DE1E4()
{
  sub_1DC87E988(&qword_1EAAA3BF8);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1DC9DE26C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA3BF8);
  sub_1DC8E77E0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1DC9DDFB4(v5, a1);
}

unint64_t sub_1DC9DE2C4()
{
  unint64_t result = qword_1EAAA3C28;
  if (!qword_1EAAA3C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3C28);
  }
  return result;
}

unint64_t sub_1DC9DE314()
{
  unint64_t result = qword_1EAAA3C30;
  if (!qword_1EAAA3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3C30);
  }
  return result;
}

unint64_t sub_1DC9DE360(uint64_t a1)
{
  unint64_t result = sub_1DC9C0370();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DC9DE388(uint64_t a1)
{
  unint64_t result = sub_1DC9C0324();
  *(void *)(a1 + 16) = result;
  return result;
}

void type metadata accessor for AccessibilitySoundActions()
{
}

void type metadata accessor for AccessibilitySoundActions.SoundAction()
{
}

void type metadata accessor for AccessibilitySoundActions.Request()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for AccessibilitySoundActions.Session(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1DCB86BF8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for AccessibilitySoundActions.Session(uint64_t a1)
{
  uint64_t v2 = sub_1DCB86BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t initializeWithCopy for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DC9DE734);
}

uint64_t sub_1DC9DE734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DCB86BF8();
  sub_1DC913CA0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AccessibilitySoundActions.Session(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DC9DE7D4);
}

void sub_1DC9DE7D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1DCB86BF8();
  sub_1DC913CA0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1DC9DE85C()
{
  uint64_t result = sub_1DCB86BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundActions.Request.CodingKeys()
{
  return &type metadata for AccessibilitySoundActions.Request.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AccessibilitySoundActions.SoundAction.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC9DE9A0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySoundActions.SoundAction.CodingKeys()
{
  return &type metadata for AccessibilitySoundActions.SoundAction.CodingKeys;
}

unint64_t sub_1DC9DE9DC()
{
  unint64_t result = qword_1EAAA3C70;
  if (!qword_1EAAA3C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3C70);
  }
  return result;
}

uint64_t sub_1DC9DEA28(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1DC9DEA30(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_1DC9DEA38(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t sub_1DC9DEA40(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_1DC9DEA7C()
{
  return &off_1F37EDB98;
}

_UNKNOWN **sub_1DC9DEA88()
{
  return &off_1F37EDB40;
}

_UNKNOWN **sub_1DC9DEA94()
{
  return &off_1F37EDB80;
}

uint64_t sub_1DC9DEAA0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_1DC9DEAA8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_1DC9DEAB0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

uint64_t sub_1DC9DEAB8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1DC9DEAF8()
{
  unint64_t result = qword_1EAAA3C80;
  if (!qword_1EAAA3C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3C80);
  }
  return result;
}

unint64_t sub_1DC9DEB48()
{
  unint64_t result = qword_1EAAA3C88;
  if (!qword_1EAAA3C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3C88);
  }
  return result;
}

unint64_t sub_1DC9DEB98()
{
  unint64_t result = qword_1EAAA3C90;
  if (!qword_1EAAA3C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3C90);
  }
  return result;
}

unint64_t sub_1DC9DEBE8()
{
  unint64_t result = qword_1EAAA3C98;
  if (!qword_1EAAA3C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3C98);
  }
  return result;
}

uint64_t sub_1DC9DEC34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DC9DEC98()
{
  sub_1DC8818D0(v0 + 16);

  return swift_deallocObject();
}

_OWORD *sub_1DC9DECD0(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1DC9DECE8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DC9DC2E0((void *)(v1 + 16), a1);
}

uint64_t sub_1DC9DED04@<X0>(void *a1@<X8>)
{
  sub_1DC87E988(&qword_1EAAA5DE0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA3DB0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC92F448();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1DC9DF4B0();
  v6(v5);
  sub_1DC88CF34(&qword_1EAAA3DB8, &qword_1EAAA5DE0);
  sub_1DC9DF628();
  sub_1DC8E7D10();
  v7();
  uint64_t v8 = swift_allocBox();
  uint64_t v10 = sub_1DC9DF4D8(v8, v9);
  v11(v10);
  sub_1DC9DF5F8();
  uint64_t result = v12();
  *a1 = &unk_1EAAA3DC8;
  a1[1] = &qword_1EAAA5DE0;
  return result;
}

uint64_t sub_1DC9DEE68()
{
  return sub_1DC9DEF40(&qword_1EAAAAA50);
}

void sub_1DC9DEE74(void *a1@<X8>)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAAAA50);
  sub_1DC8E77E0(v2);
  sub_1DC9DF65C();
  sub_1DCB06A4C();
  *a1 = v3;
}

uint64_t sub_1DC9DEEB4(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA0F38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC9DEF14@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC9DB350(v1[5], v1[2], v1[3], a1);
}

uint64_t sub_1DC9DEF34()
{
  return sub_1DC9DEF40((uint64_t *)&unk_1EAAA1380);
}

uint64_t sub_1DC9DEF40(uint64_t *a1)
{
  uint64_t v2 = sub_1DC87E988(a1);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v1 + v5, v2);

  return swift_deallocObject();
}

void sub_1DC9DEFE0(void *a1@<X8>)
{
  uint64_t v2 = sub_1DC87E988((uint64_t *)&unk_1EAAA1380);
  sub_1DC8E77E0(v2);
  sub_1DC9DF65C();

  sub_1DC9570F0(a1);
}

uint64_t sub_1DC9DF02C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9DF074()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9DF4FC();
  return sub_1DC9DD840(v3);
}

unint64_t sub_1DC9DF0FC()
{
  unint64_t result = qword_1EAAA3DA0;
  if (!qword_1EAAA3DA0)
  {
    sub_1DC8863A8((uint64_t *)&unk_1EAAA3C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3DA0);
  }
  return result;
}

uint64_t sub_1DC9DF170()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D6930;
  uint64_t v3 = sub_1DC9DF4FC();
  return sub_1DC9DDBB8(v3);
}

uint64_t sub_1DC9DF1F8()
{
  sub_1DC8867A8();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DC9DF4FC();
  return sub_1DC9DDA7C(v3);
}

uint64_t sub_1DC9DF280(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v3();
  return a1;
}

uint64_t sub_1DC9DF2D4(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1DC9DF35C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9DF428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for AccessibilitySoundActions.DomainError()
{
}

unint64_t sub_1DC9DF460()
{
  unint64_t result = qword_1EAAA3E00;
  if (!qword_1EAAA3E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3E00);
  }
  return result;
}

uint64_t sub_1DC9DF4B0()
{
  return v0;
}

uint64_t sub_1DC9DF4D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DC9DF4FC()
{
  return v0;
}

uint64_t sub_1DC9DF50C()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_1DC9DF52C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 272) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DC9DF54C()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_1DC9DF560()
{
  return swift_beginAccess();
}

void sub_1DC9DF580(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1DC9DF59C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1DC9DF5B8(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

uint64_t sub_1DC9DF5C8()
{
  return v0;
}

uint64_t sub_1DC9DF5E0()
{
  return v0;
}

uint64_t sub_1DC9DF608()
{
  return sub_1DCB87478();
}

uint64_t sub_1DC9DF628()
{
  return sub_1DCB87F28();
}

uint64_t sub_1DC9DF648(uint64_t a1)
{
  *(void *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_1DC9DF65C()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1DC9DF670(uint64_t result)
{
  byte_1EAAFF900 = result;
  return result;
}

uint64_t sub_1DC9DF698@<X0>(void *__src@<X0>, uint64_t *a2@<X8>)
{
  memcpy(__dst, __src, 0x41uLL);
  if (byte_1EAAFF900 == 1)
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1DCB86FE8();
    sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
    unsigned int v4 = sub_1DCB86FC8();
    os_log_type_t v5 = sub_1DCB88488();
    if (os_log_type_enabled(v4, v5))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_1DC9E0F7C(&dword_1DC873000, v6, v7, "Instantiating SNSystemAudioAnalyzer with In-Process Computation");
      sub_1DC8E7728();
    }

    memcpy(v17, __dst, 0x41uLL);
    uint64_t v8 = type metadata accessor for SNSystemAudioAnalyzerLocal();
    swift_allocObject();
    sub_1DC882264((uint64_t)__dst);
    uint64_t result = sub_1DCA37020(1, v17);
    uint64_t v10 = result;
    uint64_t v11 = &off_1F37F1118;
  }
  else
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1DCB86FE8();
    sub_1DC89F57C(v12, (uint64_t)qword_1EAAFF810);
    uint64_t v13 = sub_1DCB86FC8();
    os_log_type_t v14 = sub_1DCB88488();
    if (os_log_type_enabled(v13, v14))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_1DC9E0F7C(&dword_1DC873000, v15, v16, "Instantiating SNSystemAudioAnalyzer in Daemon");
      sub_1DC8E7728();
    }

    sub_1DC882264((uint64_t)__dst);
    uint64_t v10 = sub_1DC9E0E58(__dst);
    uint64_t result = type metadata accessor for SNSystemAudioAnalyzerRemote();
    uint64_t v8 = result;
    uint64_t v11 = &off_1F37F1B68;
  }
  a2[3] = v8;
  a2[4] = (uint64_t)v11;
  *a2 = v10;
  return result;
}

id SNSystemAudioAnalyzer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id SNSystemAudioAnalyzer.init()()
{
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  id v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t __src;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38[5];
  uint64_t v39[8];
  char v40[16];
  uint64_t v41;
  void v42[2];
  char v43[48];
  uint64_t v44;
  char v45[8];
  unsigned char v46[24];

  swift_getObjectType();
  uint64_t v0 = MGGetProductType();
  sub_1DC983D28(v0, v39);
  sub_1DC978E04((uint64_t)v39, (uint64_t)v43, (uint64_t *)&unk_1EAA9E950);
  if (v44)
  {
    char v1 = v43[0];
    sub_1DC8CBC38(v39);
    sub_1DC9836F8(v1, (uint64_t)v40);
    uint64_t v2 = (void (*)(uint64_t *__return_ptr, uint64_t))v42[1];
    sub_1DC978E04((uint64_t)&v41, (uint64_t)v46, (uint64_t *)&unk_1EAAA4140);
    swift_retain();
    sub_1DC8CBCC4((uint64_t)v46);
    sub_1DC978E04((uint64_t)v42, (uint64_t)v45, &qword_1EAA9E980);
    sub_1DC8CBD50((uint64_t)v45);
    uint64_t v3 = swift_release();
    v2(&__src, v3);
    swift_release();
    unsigned int v4 = __src;
    os_log_type_t v5 = v25;
    uint64_t v6 = v26;
    uint64_t v7 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    uint64_t v10 = v30;
    uint64_t v11 = v31;
    uint64_t v12 = v32;
    uint64_t v13 = v33;
    os_log_type_t v14 = v34;
    uint64_t v15 = v35;
    uint64_t v16 = v36;
    uint64_t v17 = v37;
  }
  else
  {
    if (qword_1EAA9D260 != -1) {
      swift_once();
    }
    os_log_type_t v5 = *(void *)algn_1EAAFFAA8;
    uint64_t v7 = qword_1EAAFFAB8;
    uint64_t v22 = qword_1EAAFFAB0;
    uint64_t v23 = qword_1EAAFFAA0;
    uint64_t v9 = qword_1EAAFFAC8;
    uint64_t v21 = qword_1EAAFFAC0;
    uint64_t v20 = byte_1EAAFFAD0;
    uint64_t v11 = byte_1EAAFFAD1;
    uint64_t v12 = byte_1EAAFFAD2;
    uint64_t v13 = byte_1EAAFFAD3;
    os_log_type_t v14 = byte_1EAAFFAD4;
    uint64_t v15 = byte_1EAAFFAD5;
    uint64_t v16 = qword_1EAAFFAD8;
    uint64_t v17 = byte_1EAAFFAE0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = v20;
    uint64_t v8 = v21;
    uint64_t v6 = v22;
    unsigned int v4 = v23;
  }
  __src = v4;
  uint64_t v25 = v5;
  os_signpost_type_t v26 = v6;
  uint64_t v27 = v7;
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  uint64_t v31 = v11;
  uint64_t v32 = v12;
  uint64_t v33 = v13;
  uint64_t v34 = v14;
  uint64_t v35 = v15;
  uint64_t v36 = v16;
  unint64_t v37 = v17;
  sub_1DC9DF698(&__src, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1DC9DFB28((uint64_t)v38);
  swift_deallocPartialClassInstance();
  return v18;
}

id sub_1DC9DFB28(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_1DC8B9960(a1, (uint64_t)v3 + OBJC_IVAR___SNSystemAudioAnalyzer_impl);
  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_1DC8818D0(a1);
  return v4;
}

id sub_1DC9DFB9C(unsigned char *a1)
{
  swift_getObjectType();
  uint64_t v2 = *(void *)&a1[OBJC_IVAR___SNAudioConfiguration_impl + 16];
  uint64_t v3 = *(void *)&a1[OBJC_IVAR___SNAudioConfiguration_impl + 24];
  char v4 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 48];
  char v5 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 49];
  char v6 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 50];
  char v7 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 51];
  char v8 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 52];
  char v9 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 53];
  uint64_t v10 = *(void *)&a1[OBJC_IVAR___SNAudioConfiguration_impl + 56];
  char v11 = a1[OBJC_IVAR___SNAudioConfiguration_impl + 64];
  long long v14 = *(_OWORD *)&a1[OBJC_IVAR___SNAudioConfiguration_impl];
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  long long v17 = *(_OWORD *)&a1[OBJC_IVAR___SNAudioConfiguration_impl + 32];
  char v18 = v4;
  char v19 = v5;
  char v20 = v6;
  char v21 = v7;
  char v22 = v8;
  char v23 = v9;
  uint64_t v24 = v10;
  char v25 = v11;
  sub_1DC9DF698(&v14, v26);
  id v12 = sub_1DC9DFB28((uint64_t)v26);

  swift_deallocPartialClassInstance();
  return v12;
}

uint64_t sub_1DC9DFCA0(void *a1, id a2)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DCB86FE8();
  sub_1DC89F57C(v5, (uint64_t)qword_1EAAFF810);
  id v6 = v2;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  char v7 = (char *)v6;
  char v8 = sub_1DCB86FC8();
  os_log_type_t v9 = sub_1DCB88488();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)uint64_t v10 = 136315650;
    id v27 = a2;
    id v11 = objc_msgSend(v7, sel_description);
    uint64_t v12 = sub_1DCB87938();
    unint64_t v14 = v13;

    sub_1DC9F8920(v12, v14, &v28);
    sub_1DCB88778();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    id v15 = objc_msgSend(a1, (SEL)&selRef_dictionaryWithDictionary_);
    uint64_t v16 = sub_1DCB87938();
    unint64_t v18 = v17;

    sub_1DC9F8920(v16, v18, &v28);
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    id v19 = objc_msgSend(v27, sel_description);
    uint64_t v20 = sub_1DCB87938();
    unint64_t v22 = v21;

    sub_1DC9F8920(v20, v22, &v28);
    a2 = v27;
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v8, v9, "(SNSystemAudioAnalyzer:%s) addRequest:%s withObserver:%s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v26, -1, -1);
    MEMORY[0x1E01A99C0](v10, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
  uint64_t v23 = *(void *)&v7[OBJC_IVAR___SNSystemAudioAnalyzer_impl + 24];
  uint64_t v24 = *(void *)&v7[OBJC_IVAR___SNSystemAudioAnalyzer_impl + 32];
  sub_1DC881A8C(&v7[OBJC_IVAR___SNSystemAudioAnalyzer_impl], v23);
  return (*(uint64_t (**)(void *, id, uint64_t, uint64_t))(v24 + 8))(a1, a2, v23, v24);
}

uint64_t sub_1DC9E00A8(void *a1, void *a2)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DCB86FE8();
  sub_1DC89F57C(v5, (uint64_t)qword_1EAAFF810);
  id v6 = v2;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  id v7 = v6;
  char v8 = sub_1DCB86FC8();
  os_log_type_t v9 = sub_1DCB88488();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t type = v9;
    uint64_t v10 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    id v11 = objc_msgSend(v7, sel_description);
    uint64_t v12 = sub_1DCB87938();
    unint64_t v14 = v13;

    sub_1DC9F8920(v12, v14, v24);
    sub_1DCB88778();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    id v15 = objc_msgSend(a1, (SEL)&selRef_dictionaryWithDictionary_);
    uint64_t v16 = sub_1DCB87938();
    unint64_t v18 = v17;

    sub_1DC9F8920(v16, v18, v24);
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    id v19 = objc_msgSend(a2, sel_description);
    sub_1DCB87938();

    sub_1DC9E0F9C(v20, v21, v24);
    sub_1DCB88778();
    sub_1DC9E0FB4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v8, type, "(SNSystemAudioAnalyzer:%s) addRequestInBackground:%s withObserver:%s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    sub_1DC9E0FB4();
    swift_unknownObjectRelease_n();
  }
  return sub_1DC9DFCA0(a1, a2);
}

void sub_1DC9E0470(void *a1)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DCB86FE8();
  sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
  id v4 = v1;
  swift_unknownObjectRetain_n();
  uint64_t v5 = (char *)v4;
  id v6 = sub_1DCB86FC8();
  os_log_type_t v7 = sub_1DCB88488();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    id v9 = objc_msgSend(v5, sel_description);
    sub_1DCB87938();

    sub_1DC9E0F9C(v10, v11, &v19);
    sub_1DCB88778();

    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    id v12 = objc_msgSend(a1, sel_description);
    uint64_t v13 = sub_1DCB87938();
    unint64_t v15 = v14;

    sub_1DC9F8920(v13, v15, &v19);
    sub_1DCB88778();
    sub_1DC9E0FB4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v6, v7, "(SNSystemAudioAnalyzer:%s) removeRequest:%s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    sub_1DC9E0FB4();
  }
  uint64_t v16 = &v5[OBJC_IVAR___SNSystemAudioAnalyzer_impl];
  uint64_t v17 = *(void *)&v5[OBJC_IVAR___SNSystemAudioAnalyzer_impl + 24];
  uint64_t v18 = *((void *)v16 + 4);
  sub_1DC881A8C(v16, v17);
  (*(void (**)(void *, uint64_t, uint64_t))(v18 + 16))(a1, v17, v18);
  sub_1DC9E0F60();
}

uint64_t sub_1DC9E0740()
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1DCB86FE8();
  sub_1DC89F57C(v1, (uint64_t)qword_1EAAFF810);
  uint64_t v2 = v0;
  uint64_t v3 = sub_1DCB86FC8();
  os_log_type_t v4 = sub_1DCB88488();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    id v6 = objc_msgSend(v2, sel_description);
    sub_1DCB87938();

    sub_1DC9E0F9C(v7, v8, &v13);
    sub_1DCB88778();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v3, v4, "(SNSystemAudioAnalyzer:%s) removeAllRequests", v5, 0xCu);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
  }
  id v9 = &v2[OBJC_IVAR___SNSystemAudioAnalyzer_impl];
  uint64_t v10 = *(void *)&v2[OBJC_IVAR___SNSystemAudioAnalyzer_impl + 24];
  uint64_t v11 = *((void *)v9 + 4);
  sub_1DC881A8C(v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
}

void sub_1DC9E09CC(const char *a1)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DCB86FE8();
  sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
  id v12 = v1;
  os_log_type_t v4 = sub_1DCB86FC8();
  os_log_type_t v5 = sub_1DCB88488();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v6 = 136315138;
    id v7 = objc_msgSend(v12, sel_description);
    sub_1DCB87938();

    sub_1DC9E0F9C(v8, v9, &v13);
    sub_1DCB88778();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v4, v5, a1, v6, 0xCu);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();

    sub_1DC9E0F60();
  }
  else
  {

    sub_1DC9E0F60();
  }
}

id SNSystemAudioAnalyzer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DC9E0C40(void *a1, void *a2)
{
  return sub_1DC9DFCA0(a1, a2);
}

void sub_1DC9E0C64(void *a1)
{
}

uint64_t sub_1DC9E0C88()
{
  return sub_1DC9E0740();
}

uint64_t type metadata accessor for SNSystemAudioAnalyzer()
{
  return self;
}

uint64_t method lookup function for SNSystemAudioAnalyzer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNSystemAudioAnalyzer);
}

uint64_t sub_1DC9E0CE8(const void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  id v12 = &unk_1F37E2448;
  uint64_t v13 = &off_1F37E2428;
  sub_1DC8B9960((uint64_t)v11, a2 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_environment);
  type metadata accessor for SNSystemAudioAnalyzerRemote.State();
  uint64_t v8 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v8 + 112) = MEMORY[0x1E4FBC860];
  *(void *)(a2 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_state) = v8;
  sub_1DCB86BE8();
  sub_1DC8818D0((uint64_t)v11);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(a2 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_id, v7, v4);
  memcpy((void *)(a2 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_audioConfiguration), a1, 0x41uLL);
  return a2;
}

uint64_t sub_1DC9E0E58(const void *a1)
{
  uint64_t v8 = &unk_1F37E2448;
  uint64_t v9 = &off_1F37E2428;
  type metadata accessor for SNSystemAudioAnalyzerRemote();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = sub_1DC89D39C((uint64_t)v7, (uint64_t)&unk_1F37E2448);
  MEMORY[0x1F4188790](v3);
  (*(void (**)(void))(v4 + 16))();
  uint64_t v5 = sub_1DC9E0CE8(a1, v2);
  sub_1DC8818D0((uint64_t)v7);
  return v5;
}

void sub_1DC9E0F7C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1DC9E0F9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1DC9F8920(v3, v4, a3);
}

uint64_t sub_1DC9E0FB4()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1DC9E0FCC(uint64_t a1, uint64_t a2)
{
  void v8[3] = MEMORY[0x1E4FBB2B8];
  v8[4] = MEMORY[0x1E4F27EF0];
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = sub_1DC881A8C(v8, MEMORY[0x1E4FBB2B8]);
  uint64_t v3 = *v2;
  if (*v2 && (v4 = v2[1], uint64_t v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_1DCB86A28();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = MEMORY[0x1E01A5A40]();
    }
    else
    {
      uint64_t v6 = MEMORY[0x1E01A5A60]();
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  sub_1DC8818D0((uint64_t)v8);
  return v6;
}

uint64_t sub_1DC9E1088(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA3E30);
  uint64_t v11 = sub_1DC88CF34(&qword_1EAAA3E38, &qword_1EAAA3E30);
  v9[0] = a1;
  v9[1] = a2;
  uint64_t v4 = sub_1DC881A8C(v9, v10);
  if (*v4) {
    uint64_t v5 = *v4 + v4[1];
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1DC9E7EF8(*v4, v5, &v8);
  uint64_t v6 = v8;
  sub_1DC8818D0((uint64_t)v9);
  return v6;
}

uint64_t sub_1DC9E1140(uint64_t a1, uint64_t a2)
{
  _OWORD v7[3] = MEMORY[0x1E4FBB880];
  v7[4] = MEMORY[0x1E4F280D0];
  v7[0] = a1;
  v7[1] = a2;
  uint64_t v2 = sub_1DC881A8C(v7, MEMORY[0x1E4FBB880]);
  if (*v2) {
    uint64_t v3 = v2[1];
  }
  else {
    uint64_t v3 = 0;
  }
  sub_1DC9E7EF8(*v2, v3, &v6);
  uint64_t v4 = v6;
  sub_1DC8818D0((uint64_t)v7);
  return v4;
}

uint64_t sub_1DC9E11C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = a1;
  __int16 v7 = a2;
  char v8 = BYTE2(a2);
  char v9 = BYTE3(a2);
  char v10 = BYTE4(a2);
  char v11 = BYTE5(a2);
  return a3(&v6, (char *)&v6 + a5);
}

void *sub_1DC9E1298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  return sub_1DCB0FA80((uint64_t)&v4, a3);
}

unsigned int *sub_1DC9E1364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  uint64_t result = (unsigned int *)sub_1DCABEA50((uint64_t)&v8, (uint64_t)&v8 + a3, 4);
  if (!v3)
  {
    if (result)
    {
      if (!v5 || v6 == v5)
      {
        return (unsigned int *)*result;
      }
      else
      {
        sub_1DC96EDAC();
        swift_allocError();
        *char v7 = 3;
        return (unsigned int *)swift_willThrow();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

unint64_t sub_1DC9E1488(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  unint64_t result = sub_1DC9E3D38();
  if (!v1)
  {
    unsigned __int8 v4 = result;
    unsigned __int8 v5 = sub_1DC9E3D38();
    unsigned __int8 v6 = sub_1DC9E3D38();
    unsigned __int8 v7 = sub_1DC9E3D38();
    v16[0] = 0x1000100000001;
    v16[1] = 1;
    __int16 v17 = 1024;
    int v18 = v4;
    __asm { FMOV            V0.2S, #0.75 }
    uint64_t v19 = _D0;
    int v20 = v5;
    uint64_t v21 = _D0;
    int v22 = v6;
    uint64_t v23 = _D0;
    int v24 = v7;
    uint64_t v25 = _D0;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v30 = 0;
    uint64_t v13 = sub_1DC9E0FCC((uint64_t)v16, (uint64_t)&v31);
    unint64_t v15 = v14;
    sub_1DC9E49AC(a1, 34, v13, v14, (uint64_t)v32);
    return sub_1DC881920(v13, v15);
  }
  return result;
}

uint64_t sub_1DC9E1650()
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  if (qword_1EAA9CAC0 != -1) {
    swift_once();
  }
  id v1 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC9E9718();
  if (v0)
  {

    swift_bridgeObjectRelease();
    float v2 = 0.75;
  }
  else
  {
    sub_1DC9E9568();
    float v3 = sub_1DC9E9558();
    if (v4) {
      float v2 = v3;
    }
    else {
      float v2 = 0.75;
    }
  }
  id v5 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DC9E9718();
  if (v0)
  {

    swift_bridgeObjectRelease();
    float v6 = 0.75;
  }
  else
  {
    sub_1DC9E9568();
    float v7 = sub_1DC9E9558();
    if (v4) {
      float v6 = v7;
    }
    else {
      float v6 = 0.75;
    }
  }
  id v8 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
  sub_1DCB877B8();

  sub_1DCAA4AFC();
  sub_1DC9E9568();
  float v9 = sub_1DC9E9558();
  if (v4) {
    float v10 = v9;
  }
  else {
    float v10 = 0.5;
  }
  uint64_t v12 = 0x2000100000002;
  int v13 = 1;
  char v14 = 2;
  int v15 = sub_1DC9E92C0();
  float v16 = v2;
  float v17 = v10;
  int v18 = sub_1DC9E930C();
  float v19 = v6;
  float v20 = v10;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_1DC9E0FCC((uint64_t)&v12, (uint64_t)&v27);
  sub_1DC9E9458((uint64_t)v28);
  return sub_1DC9E95F0();
}

uint64_t sub_1DC9E1948()
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (qword_1EAA9D200 != -1) {
    swift_once();
  }
  if (*((void *)off_1EAAA3E20 + 2) >= 0x100uLL)
  {
    sub_1DC8AF148();
    uint64_t result = sub_1DC9E9584();
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1DC9E9738();
    if (!v0)
    {
      sub_1DC9E93A8();
      sub_1DC9E9370();
      sub_1DC9E9338();
      sub_1DC9E92C0();
      unsigned __int8 v2 = sub_1DC9E930C();
      sub_1DC9E91C4(v2, 0x100000000, v3, v4, v5, v6, v7, v8, SHIDWORD(v8), v9, v10, SHIDWORD(v10), v11, v12, v13, v14, v15, SWORD2(v15), SHIWORD(v15));
      sub_1DC9E9458((uint64_t)v16);
      return sub_1DC9E95F0();
    }
  }
  return result;
}

uint64_t sub_1DC9E1A9C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC8C1FC4();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1DCB86FE8();
  sub_1DC89F57C(v9, (uint64_t)qword_1EAAFF810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a1, v5);
  uint64_t v10 = sub_1DCB86FC8();
  os_log_type_t v11 = sub_1DCB88488();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_1DC9E86E8(&qword_1EAAA41A0);
    uint64_t v13 = sub_1DCB88F98();
    uint64_t v15 = sub_1DC9F8920(v13, v14, v23);
    sub_1DC9E9798(v15);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1DC9E9668();
    v17(v16);
    *(_WORD *)(v12 + 12) = 1024;
    sub_1DCB88778();
    _os_log_impl(&dword_1DC873000, v10, v11, "AOP use-case added: uuuid: %s; type: %u", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
    uint64_t v18 = sub_1DC9E9668();
    v19(v18);
  }
  float v20 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v20);
  sub_1DC9E95CC();
  sub_1DCA57BEC();
  swift_endAccess();
  uint64_t v21 = *(void *)(v1 + 48) + 1;
  *(void *)(v3 + 48) = v21;
  os_unfair_lock_unlock(v20);
  swift_release();
  return sub_1DC9E2194(v21);
}

uint64_t sub_1DC9E1D30(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  sub_1DC89D970();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1DCB86FE8();
  sub_1DC89F57C(v9, (uint64_t)qword_1EAAFF810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a1, v5);
  uint64_t v10 = sub_1DCB86FC8();
  os_log_type_t v11 = sub_1DCB88488();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_1DC9E86E8(&qword_1EAAA41A0);
    uint64_t v13 = sub_1DCB88F98();
    uint64_t v15 = sub_1DC9F8920(v13, v14, v23);
    sub_1DC9E9798(v15);
    sub_1DCB88778();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1DC9E9784();
    v17(v16);
    _os_log_impl(&dword_1DC873000, v10, v11, "AOP use-case removed: uuuid: %s", v12, 0xCu);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
    uint64_t v18 = sub_1DC9E9784();
    v19(v18);
  }

  float v20 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v20);
  sub_1DC9E95CC();
  sub_1DC8BF918();
  swift_endAccess();
  uint64_t v21 = *(void *)(v1 + 48) + 1;
  *(void *)(v3 + 48) = v21;
  os_unfair_lock_unlock(v20);
  swift_release();
  return sub_1DC9E2194(v21);
}

uint64_t sub_1DC9E1FA0()
{
  type metadata accessor for _SNAOPClassfication(0);
  uint64_t v1 = sub_1DCB88BE8();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_dynamicCast();
    swift_willThrowTypedImpl();
  }
  return v1;
}

uint64_t sub_1DC9E2048()
{
  uint64_t v1 = sub_1DCB88BE8();
  if (v0)
  {
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_dynamicCast();
    swift_willThrowTypedImpl();
  }
  return v1;
}

void *sub_1DC9E20E4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SafeLock();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = (_DWORD *)swift_slowAlloc();
  _DWORD *v6 = 0;
  *(void *)(v5 + 16) = v6;
  v2[2] = v5;
  void v2[3] = a1;
  v2[4] = a2;
  sub_1DCB86BF8();
  sub_1DC9E86E8((unint64_t *)&qword_1EAA9E778);
  void v2[5] = sub_1DCB877D8();
  void v2[6] = 0;
  return v2;
}

uint64_t sub_1DC9E2194(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  void v8[3] = 0;
  v8[4] = v1;
  void v8[5] = a1;
  v8[6] = v3;
  LODWORD(a1) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v6, 1, v7);
  swift_retain();
  if (a1 == 1)
  {
    sub_1DC999EB8((uint64_t)v6);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1DCB87E38();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1DCB87DE8();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  if (v10 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v9;
    v13[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1DC9E23A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5[2] = a4;
  void v5[3] = a5;
  uint64_t v6 = sub_1DCB88BB8();
  _OWORD v5[4] = v6;
  void v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DC9E2464, 0, 0);
}

uint64_t sub_1DC9E2464()
{
  sub_1DCB892C8();
  sub_1DCB88BA8();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EAAA7270 + dword_1EAAA7270);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC9E2540;
  return v3();
}

uint64_t sub_1DC9E2540()
{
  sub_1DC886774();
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[4];
  *(void *)(v5 + 64) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v6 = sub_1DC9E26FC;
  }
  else {
    uint64_t v6 = sub_1DC9E268C;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1DC9E268C()
{
  sub_1DC9E2760(*(void *)(v0 + 24));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DC9E26FC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DC9E2760(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1DC9E27C4(a1);
  os_unfair_lock_unlock(v3);

  return swift_release();
}

void sub_1DC9E27C4(uint64_t a1)
{
  if (*(void *)(v1 + 48) == a1)
  {
    uint64_t v2 = v1;
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1DCB86FE8();
    sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
    uint64_t v4 = sub_1DCB86FC8();
    os_log_type_t v5 = sub_1DCB88448();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      sub_1DC9E9680();
      _os_log_impl(&dword_1DC873000, v4, v5, "Flushing snapshot of AOP state (snapshot ID: %ld)", v6, 0xCu);
      sub_1DC8E7728();
    }

    uint64_t v7 = *(void (**)(void))(v2 + 24);
    swift_beginAccess();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_1DC9E2A14(v8);
    __int16 v11 = v10;
    swift_bridgeObjectRelease();
    sub_1DCB36F64((uint64_t)v9, v11 & 0x101);
    v7();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1DCB86FE8();
    sub_1DC89F57C(v12, (uint64_t)qword_1EAAFF810);
    oslog = sub_1DCB86FC8();
    os_log_type_t v13 = sub_1DCB88448();
    if (os_log_type_enabled(oslog, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v14 = 134217984;
      sub_1DC9E9680();
      _os_log_impl(&dword_1DC873000, oslog, v13, "Skipping snapshot of AOP state (snapshot ID: %ld)", v14, 0xCu);
      sub_1DC8E7728();
    }
    else
    {
    }
  }
}

void *sub_1DC9E2A14(uint64_t a1)
{
  uint64_t result = sub_1DCA21AF4(&v21, a1);
  int64_t v3 = v24;
  unint64_t v4 = v25;
  int64_t v5 = (unint64_t)(v23 + 64) >> 6;
  while (v4)
  {
    unint64_t v6 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v7 = v6 | (v3 << 6);
LABEL_22:
    if (*(_DWORD *)(*(void *)(v21 + 56) + 4 * v7) == 2) {
      goto LABEL_23;
    }
  }
  int64_t v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
LABEL_47:
    __break(1u);
    return result;
  }
  if (v8 >= v5) {
    goto LABEL_23;
  }
  unint64_t v9 = *(void *)(v22 + 8 * v8);
  int64_t v10 = v3 + 1;
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 2;
  if (v3 + 2 >= v5) {
    goto LABEL_23;
  }
  unint64_t v9 = *(void *)(v22 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 3;
  if (v3 + 3 >= v5) {
    goto LABEL_23;
  }
  unint64_t v9 = *(void *)(v22 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 4;
  if (v3 + 4 >= v5) {
    goto LABEL_23;
  }
  unint64_t v9 = *(void *)(v22 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 5;
  if (v3 + 5 >= v5) {
    goto LABEL_23;
  }
  unint64_t v9 = *(void *)(v22 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 6;
  if (v3 + 6 >= v5) {
    goto LABEL_23;
  }
  unint64_t v9 = *(void *)(v22 + 8 * v10);
  if (v9)
  {
LABEL_21:
    unint64_t v4 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v3 = v10;
    goto LABEL_22;
  }
  int64_t v11 = v3 + 7;
  while (v11 < v5)
  {
    unint64_t v9 = *(void *)(v22 + 8 * v11++);
    if (v9)
    {
      int64_t v10 = v11 - 1;
      goto LABEL_21;
    }
  }
LABEL_23:
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t result = sub_1DCA21AF4(&v26, a1);
  int64_t v12 = v29;
  unint64_t v13 = v30;
  int64_t v14 = (unint64_t)(v28 + 64) >> 6;
  while (2)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      goto LABEL_44;
    }
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_47;
    }
    if (v17 >= v14) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v17);
    int64_t v19 = v12 + 1;
    if (v18) {
      goto LABEL_43;
    }
    int64_t v19 = v12 + 2;
    if (v12 + 2 >= v14) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v19);
    if (v18) {
      goto LABEL_43;
    }
    int64_t v19 = v12 + 3;
    if (v12 + 3 >= v14) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v19);
    if (v18) {
      goto LABEL_43;
    }
    int64_t v19 = v12 + 4;
    if (v12 + 4 >= v14) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v19);
    if (v18) {
      goto LABEL_43;
    }
    int64_t v19 = v12 + 5;
    if (v12 + 5 >= v14) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v19);
    if (v18) {
      goto LABEL_43;
    }
    int64_t v19 = v12 + 6;
    if (v12 + 6 >= v14) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v27 + 8 * v19);
    if (v18)
    {
LABEL_43:
      unint64_t v13 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
      int64_t v12 = v19;
LABEL_44:
      if (*(_DWORD *)(*(void *)(v26 + 56) + 4 * v16) == 1) {
        goto LABEL_45;
      }
      continue;
    }
    break;
  }
  int64_t v20 = v12 + 7;
  while (v20 < v14)
  {
    unint64_t v18 = *(void *)(v27 + 8 * v20++);
    if (v18)
    {
      int64_t v19 = v20 - 1;
      goto LABEL_43;
    }
  }
LABEL_45:
  swift_bridgeObjectRetain();
  swift_release();
  return *(void **)(a1 + 16);
}

uint64_t sub_1DC9E2C88()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DC9E2CB8()
{
  sub_1DC9E2C88();

  return swift_deallocClassInstance();
}

void sub_1DC9E2CEC()
{
  qword_1EAAA3E18 = (uint64_t)&unk_1F37E3920;
}

uint64_t static SNAOPUtils.classNames.getter()
{
  return sub_1DC9E2D94(&qword_1EAA9D1F8);
}

void sub_1DC9E2D24()
{
  off_1EAAA3E20 = &unk_1F37E3CD0;
}

uint64_t static SNAOPUtils.classNamesV2.getter()
{
  return sub_1DC9E2D94(&qword_1EAA9D200);
}

void sub_1DC9E2D5C()
{
  qword_1EAAA3E28 = (uint64_t)&unk_1F37E3C60;
}

uint64_t static SNAOPUtils.classNamesAP.getter()
{
  return sub_1DC9E2D94(&qword_1EAA9D208);
}

uint64_t sub_1DC9E2D94(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void sub_1DC9E2DE0()
{
  sub_1DC88D6B0();
  int64_t v3 = v2;
  uint64_t v26 = v4;
  uint64_t v5 = type metadata accessor for SNAOPReport.Payload(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  int64_t v11 = (char *)&v25 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (_DWORD *)((char *)&v25 - v12);
  uint64_t v14 = sub_1DCB86B98();
  sub_1DC89D4E0();
  uint64_t v27 = v15;
  MEMORY[0x1F4188790](v16);
  sub_1DC89D970();
  type metadata accessor for SNTimeUtils();
  int v31 = *v3;
  unsigned int v32 = v3[2];
  int64_t v17 = sub_1DC8AE28C(*(void *)(v3 + 3));
  if (v0) {
    goto LABEL_14;
  }
  static SNTimeUtils.timestampToDate(machContinuousTime:)((uint64_t)v17);
  if (v32 < 2)
  {
    sub_1DC9E3424((unsigned int *)(v3 + 15), v1, v32, (uint64_t)v11);
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = (uint64_t)v11;
    goto LABEL_10;
  }
  if (v32 == 2)
  {
    sub_1DC9E30A8();
    uint64_t v19 = v29;
    uint64_t v20 = v30;
    *(_DWORD *)int64_t v8 = v28;
    *((void *)v8 + 1) = v19;
    *((void *)v8 + 2) = v20;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = (uint64_t)v8;
LABEL_10:
    sub_1DC9E855C(v18, (uint64_t)v13);
    goto LABEL_11;
  }
  if (v32 == 3)
  {
    *unint64_t v13 = *(_DWORD *)(v3 + 15);
    type metadata accessor for SNAOPReport.SuccessPayload(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
LABEL_11:
    uint64_t v21 = v26;
    uint64_t v22 = v27;
    uint64_t v23 = (int *)type metadata accessor for SNAOPReport(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(&v21[v23[5]], v1, v14);
    sub_1DC9E855C((uint64_t)v13, (uint64_t)&v21[v23[7]]);
    *(_DWORD *)uint64_t v21 = v31;
    *(_DWORD *)&v21[v23[6]] = v32;
    goto LABEL_14;
  }
  sub_1DC9E84F0();
  sub_1DC883884();
  *uint64_t v24 = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v1, v14);
LABEL_14:
  sub_1DC9E970C();
  sub_1DC88D674();
}

void sub_1DC9E30A8()
{
  sub_1DC88D6B0();
  unint64_t v37 = v0;
  uint64_t v2 = *((unsigned __int16 *)v1 + 30);
  uint64_t v3 = *((unsigned int *)v1 + 14);
  unint64_t v4 = v1[5];
  unint64_t v5 = v1[6];
  unint64_t v7 = v1[3];
  unint64_t v6 = v1[4];
  unint64_t v9 = v1[1];
  unint64_t v8 = v1[2];
  uint64_t v10 = *v1;
  sub_1DCB89248();
  sub_1DC89D4E0();
  uint64_t v35 = v12;
  uint64_t v36 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v34 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v10 & 0x8000) != 0)
  {
    sub_1DC8AF148();
    sub_1DCB88C58();
    __break(1u);
  }
  else
  {
    unint64_t v31 = v3 | (v2 << 32);
    unint64_t v32 = v31 >> 16;
    uint64_t v29 = WORD1(v5);
    unint64_t v30 = HIDWORD(v5);
    int v28 = HIWORD(v4) | (v5 << 16);
    unint64_t v26 = HIWORD(v6);
    unint64_t v27 = HIDWORD(v4);
    unint64_t v24 = HIDWORD(v7);
    unint64_t v25 = v6 >> 16;
    uint64_t v22 = WORD1(v7);
    unint64_t v23 = v4;
    int v33 = (unsigned __int16)v10;
    uint64_t v41 = sub_1DC87E988(&qword_1EAAA3E68);
    uint64_t v14 = swift_allocObject();
    unint64_t v39 = v14;
    *(_WORD *)(v14 + 16) = WORD1(v10);
    *(_DWORD *)(v14 + 18) = HIDWORD(v10);
    *(_WORD *)(v14 + 22) = v9;
    *(_DWORD *)(v14 + 24) = v9 >> 16;
    *(_WORD *)(v14 + 28) = HIWORD(v9);
    *(_DWORD *)(v14 + 30) = v8;
    *(_WORD *)(v14 + 34) = WORD2(v8);
    *(_DWORD *)(v14 + 36) = HIWORD(v8) | (v7 << 16);
    *(_WORD *)(v14 + 40) = v22;
    *(_DWORD *)(v14 + 42) = v24;
    *(_WORD *)(v14 + 46) = v6;
    *(_DWORD *)(v14 + 48) = v25;
    *(_WORD *)(v14 + 52) = v26;
    *(_DWORD *)(v14 + 54) = v23;
    *(_WORD *)(v14 + 58) = v27;
    *(_DWORD *)(v14 + 60) = v28;
    *(_WORD *)(v14 + 64) = v29;
    *(_DWORD *)(v14 + 66) = v30;
    *(_WORD *)(v14 + 70) = v31;
    *(_DWORD *)(v14 + 72) = v32;
    uint64_t v15 = v34;
    sub_1DCB89208();
    sub_1DCB89238();
    uint64_t v16 = sub_1DC9E2048();
    swift_release();
    unint64_t v39 = v16;
    sub_1DC87E988(&qword_1EAA9E7F0);
    sub_1DC88CF34((unint64_t *)&qword_1EAAA6A70, &qword_1EAA9E7F0);
    sub_1DCB87858();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0xD000000000000012;
    unint64_t v40 = 0x80000001DCB95890;
    int v17 = v33;
    int v38 = v33;
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB87A18();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v18 = v39;
    unint64_t v19 = v40;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
    uint64_t v20 = v37;
    *unint64_t v37 = v17;
    *((void *)v20 + 1) = v18;
    *((void *)v20 + 2) = v19;
    sub_1DC9E970C();
    sub_1DC88D674();
  }
}

uint64_t sub_1DC9E3424@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v42 = a4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 4);
  uint64_t v6 = *a1;
  int v7 = *(unsigned int *)((char *)a1 + 5);
  char v8 = *((unsigned char *)a1 + 9);
  int v9 = *(unsigned int *)((char *)a1 + 10);
  int v10 = *((unsigned __int8 *)a1 + 14);
  int v11 = *(unsigned int *)((char *)a1 + 15);
  int v48 = *((unsigned __int8 *)a1 + 19);
  int v49 = v10;
  unsigned int v12 = a1[5];
  char v13 = *((unsigned char *)a1 + 24);
  int v14 = *(unsigned int *)((char *)a1 + 25);
  int v15 = *((unsigned __int8 *)a1 + 29);
  int v16 = *(unsigned int *)((char *)a1 + 30);
  int v46 = *((unsigned __int8 *)a1 + 34);
  int v47 = v15;
  int v17 = *(unsigned int *)((char *)a1 + 35);
  int v18 = *((unsigned __int8 *)a1 + 39);
  unsigned int v19 = a1[10];
  int v44 = *((unsigned __int8 *)a1 + 44);
  int v45 = v18;
  int v20 = *(unsigned int *)((char *)a1 + 45);
  int v43 = *((unsigned __int8 *)a1 + 49);
  int v50 = *(unsigned int *)((char *)a1 + 50);
  int v51 = v20;
  uint64_t v21 = sub_1DCB86B98();
  sub_1DC89D4E0();
  unint64_t v23 = v22;
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  unint64_t v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v41 - v28;
  if (a3 >= 2)
  {
    sub_1DC9E84F0();
    uint64_t v35 = sub_1DC883884();
    return sub_1DC883754(v35, v36);
  }
  else
  {
    unsigned int v53 = v6;
    char v54 = (v6 | (unint64_t)(v5 << 32)) >> 32;
    int v55 = v7;
    char v56 = v8;
    int v57 = v9;
    char v58 = v49;
    int v59 = v11;
    char v60 = v48;
    unsigned int v61 = v12;
    char v62 = v13;
    int v63 = v14;
    char v64 = v47;
    int v65 = v16;
    char v66 = v46;
    int v67 = v17;
    char v68 = v45;
    unsigned int v69 = v19;
    char v70 = v44;
    int v71 = v51;
    char v72 = v43;
    int v73 = v50;
    unint64_t v30 = (void (*)(void))v23[2];
    sub_1DC9E9770();
    v30();
    sub_1DC9E9770();
    v30();
    uint64_t v31 = v74;
    unint64_t v32 = sub_1DC9E3AA0(&v53);
    if (v31)
    {
      int v33 = (void (*)(char *, uint64_t))v23[1];
      v33(v27, v21);
      return ((uint64_t (*)(char *, uint64_t))v33)(v29, v21);
    }
    else
    {
      unint64_t v37 = v32;
      int v38 = (void (*)(uint64_t, char *, uint64_t))v23[4];
      uint64_t v39 = v42;
      v38(v42, v29, v21);
      uint64_t v40 = type metadata accessor for AOPClassificationResult();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v38)(v39 + *(int *)(v40 + 20), v27, v21);
      *(void *)(v39 + *(int *)(v40 + 24)) = v37;
    }
  }
  return result;
}

uint64_t sub_1DC9E36E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1 + 16;
  sub_1DC87E9DC(a1 + 16, (uint64_t)v5);
  type metadata accessor for _SNAOPErrorDetails(0);
  if (swift_dynamicCast())
  {
    sub_1DCB88F98();
    sub_1DCB87A18();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
  }
  sub_1DC87E9DC(v3, (uint64_t)v5);
  swift_bridgeObjectRetain();
  sub_1DC8818D0((uint64_t)v5);
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  sub_1DCB87A18();
  sub_1DCB87A18();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DCB87A18();
  *a2 = 0x5B6C6961746564;
  a2[1] = 0xE700000000000000;
  return result;
}

uint64_t sub_1DC9E38A0(unsigned int *a1)
{
  sub_1DCB89248();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D988();
  sub_1DC87E988(&qword_1EAAA3E60);
  uint64_t v11 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v11 + 32) = v3;
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(a1 + 9);
  *(_WORD *)(v11 + 64) = *((_WORD *)a1 + 26);
  sub_1DCB89208();
  sub_1DCB89238();
  uint64_t v4 = *a1;
  sub_1DCB88BF8();
  swift_release();
  uint64_t v5 = sub_1DC9E1FA0();
  swift_release();
  if (*(void *)(v5 + 16) != v4)
  {
    swift_bridgeObjectRelease();
    sub_1DC9E84F0();
    uint64_t v6 = sub_1DC883884();
    sub_1DC883754(v6, v7);
  }
  uint64_t v8 = sub_1DC8CD9A8();
  v9(v8);
  return v5;
}

uint64_t sub_1DC9E3A1C(uint64_t a1)
{
  sub_1DC87E9DC(a1 + 16, (uint64_t)v2);
  sub_1DC87E9CC(v2, &v3);
  type metadata accessor for _SNAOPClassfication(0);
  return swift_dynamicCast();
}

void *sub_1DC9E3AA0(unsigned int *a1)
{
  uint64_t v2 = sub_1DC9E38A0(a1);
  long long v3 = v1;
  if (v1)
  {
LABEL_13:
    sub_1DC9E84F0();
    uint64_t v23 = sub_1DC883884();
    sub_1DC883754(v23, v24);

    return v3;
  }
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v2 + 16);
  if (v5)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1DC89872C();
    uint64_t v6 = v26;
    if (qword_1EAA9D200 != -1) {
      swift_once();
    }
    int v7 = off_1EAAA3E20;
    uint64_t v8 = (char *)off_1EAAA3E20 + 32;
    int v9 = (float *)(v4 + 33);
    while (1)
    {
      unint64_t v10 = *((unsigned __int8 *)v9 - 1);
      if (v7[2] <= v10) {
        break;
      }
      float v11 = *v9;
      unsigned int v12 = &v8[16 * v10];
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *((void *)v12 + 1);
      unint64_t v16 = *(void *)(v26 + 16);
      unint64_t v15 = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
      if (v16 >= v15 >> 1) {
        sub_1DC89872C();
      }
      *(void *)(v26 + 16) = v16 + 1;
      uint64_t v17 = v26 + 24 * v16;
      *(void *)(v17 + 32) = v13;
      *(void *)(v17 + 40) = v14;
      *(double *)(v17 + 48) = v11;
      int v9 = (float *)((char *)v9 + 5);
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    type metadata accessor for SNError();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v18 = sub_1DC9E94D0();
    long long v3 = sub_1DCA14B2C(v18, v19, v20, v21, v22, 0x80000001DCB95860);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_15:
  long long v3 = (void *)sub_1DCAF26AC(v6);
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1DC9E3D38()
{
  if (qword_1EAA9D200 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DC8CD9A8();
  unint64_t result = sub_1DC8DF1B4(v0, v1, v2);
  if (v4)
  {
    type metadata accessor for SNError();
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    sub_1DC8CD9A8();
    sub_1DCB87A18();
    sub_1DCB87A18();
    unint64_t v5 = sub_1DC9E94D0();
    sub_1DCA14B2C(v5, v6, v7, v8, v9, 0x80000001DCB957B0);
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else if ((result & 0x8000000000000000) != 0 || result >= 0x100)
  {
    sub_1DC8AF148();
    unint64_t result = sub_1DCB88C58();
    __break(1u);
  }
  return result;
}

uint64_t static SNAOPUtils.uint32ToString(value:)()
{
  return sub_1DCB878F8();
}

uint64_t sub_1DC9E3F24(int a1, uint64_t a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v12 = a1;
  uint64_t v3 = sub_1DC9E0FCC((uint64_t)&v12, (uint64_t)v13);
  uint64_t v14 = a2;
  int v15 = 210;
  switch(v4 >> 62)
  {
    case 1uLL:
      if (v3 >> 32 < (int)v3) {
        __break(1u);
      }
      sub_1DCA973AC((int)v3, v3 >> 32, sub_1DC9E853C);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(v3 + 16);
      uint64_t v7 = *(void *)(v3 + 24);
      swift_retain();
      swift_retain();
      sub_1DCA973AC(v8, v7, sub_1DC9E853C);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      uint64_t v3 = 0;
      uint64_t v6 = 0;
      uint64_t v5 = 0;
      goto LABEL_7;
    default:
      uint64_t v5 = BYTE6(v4);
      uint64_t v6 = v4 & 0xFFFFFFFFFFFFLL;
LABEL_7:
      sub_1DC9E11C8(v3, v6, (uint64_t (*)(uint64_t *, char *))sub_1DC9E853C, (uint64_t)v13, v5);
      break;
  }
  uint64_t v9 = sub_1DC8CD9A8();
  return sub_1DC881920(v9, v10);
}

uint64_t sub_1DC9E40E4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  v30[1] = a3;
  uint64_t v5 = HIDWORD(a3) + 12;
  v30[0] = a2;
  uint64_t v6 = sub_1DC9E0FCC((uint64_t)v30, (uint64_t)&v31);
  unint64_t v8 = v7;
  uint64_t v9 = sub_1DCA96864(a1, 33, v6, v7, v5);
  unint64_t v11 = v10;
  sub_1DC881920(v6, v8);
  if (!v3)
  {
    if (sub_1DCB86AF8() >= 12)
    {
      if (sub_1DCB86AF8() < (uint64_t)0x800000000000000CLL)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
      }
      uint64_t v12 = sub_1DCB86A98();
      uint64_t v14 = v12;
      int v15 = 0;
      uint64_t v6 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (v12 >> 32 < (int)v12) {
            goto LABEL_24;
          }
          swift_retain();
          uint64_t v6 = sub_1DC9E8258((int)v14, v14 >> 32);
          int v15 = v16;
          sub_1DC9E9514();
LABEL_9:
          sub_1DC9E9514();
          if (sub_1DCB86AF8() < 12) {
            goto LABEL_23;
          }
          uint64_t v20 = sub_1DCB86A98();
          uint64_t v22 = v20;
          switch(v21 >> 62)
          {
            case 1uLL:
              if (v20 >> 32 < (int)v20) {
                goto LABEL_25;
              }
              swift_retain();
              unint64_t v27 = sub_1DC9E8388((int)v22, v22 >> 32);
              sub_1DC9E9514();
              break;
            case 2uLL:
              uint64_t v25 = *(void *)(v20 + 16);
              uint64_t v26 = *(void *)(v20 + 24);
              swift_retain();
              swift_retain();
              unint64_t v27 = sub_1DC9E8388(v25, v26);
              swift_release();
              swift_release();
              break;
            case 3uLL:
              uint64_t v20 = sub_1DC9E952C();
              goto LABEL_14;
            default:
              uint64_t v23 = BYTE6(v21);
              uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
LABEL_14:
              unint64_t v27 = sub_1DC9E1298(v20, v24, v23);
              break;
          }
          sub_1DC9E9514();
          if (v27[2] == v15)
          {
            sub_1DC881920(v9, v11);
            return v6;
          }
          swift_bridgeObjectRelease();
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v12 + 16);
          uint64_t v18 = *(void *)(v12 + 24);
          swift_retain();
          swift_retain();
          uint64_t v6 = sub_1DC9E8258(v17, v18);
          int v15 = v19;
          swift_release();
          swift_release();
          goto LABEL_9;
        case 3uLL:
          goto LABEL_9;
        default:
          uint64_t v6 = v12;
          int v15 = v13;
          goto LABEL_9;
      }
    }
    sub_1DC9E84F0();
    sub_1DC883884();
    *uint64_t v28 = 3;
    swift_willThrow();
    sub_1DC881920(v9, v11);
  }
  return v6;
}

uint64_t sub_1DC9E44AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = sub_1DCA96864(a1, a2, a3, a4, 1);
  if (!v5)
  {
    uint64_t v4 = v6;
    unint64_t v8 = v7;
    if (sub_1DCB86AF8() == 1)
    {
      switch(v8 >> 62)
      {
        case 1uLL:
          if (v4 >> 32 < (int)v4)
          {
            __break(1u);
            swift_release();
            swift_release();
            __break(1u);
            sub_1DC9E94B8();
            __break(1u);
            JUMPOUT(0x1DC9E4624);
          }
          swift_retain();
          uint64_t v14 = sub_1DC9E8148((int)v4, v4 >> 32);
          sub_1DC9E94B8();
          sub_1DC9E94B8();
          uint64_t v4 = v14;
          break;
        case 2uLL:
          uint64_t v11 = *(void *)(v4 + 16);
          uint64_t v12 = *(void *)(v4 + 24);
          swift_retain();
          swift_retain();
          uint64_t v13 = sub_1DC9E8148(v11, v12);
          swift_release();
          swift_release();
          sub_1DC9E94B8();
          uint64_t v4 = v13;
          break;
        case 3uLL:
          sub_1DC9E94B8();
          uint64_t v4 = 0;
          break;
        default:
          sub_1DC9E94B8();
          break;
      }
    }
    else
    {
      sub_1DC9E84A4();
      sub_1DC883884();
      *uint64_t v9 = 0;
      swift_willThrow();
      sub_1DC9E94B8();
    }
  }
  return v4;
}

uint64_t sub_1DC9E4634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1DCA96864(a1, a2, a3, a4, 27);
  if (!v5)
  {
    uint64_t v9 = result;
    unint64_t v10 = v8;
    if (sub_1DCB86AF8() == 27)
    {
      switch(v10 >> 62)
      {
        case 1uLL:
          if (v9 >> 32 < (int)v9)
          {
            __break(1u);
            swift_release();
            swift_release();
            __break(1u);
            sub_1DC881920(v9, v10);
            __break(1u);
            JUMPOUT(0x1DC9E47BCLL);
          }
          swift_retain();
          sub_1DC9E81C4((int)v9, v9 >> 32, (uint64_t)a5);
          sub_1DC881920(v9, v10);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v9 + 16);
          uint64_t v13 = *(void *)(v9 + 24);
          swift_retain();
          swift_retain();
          sub_1DC9E81C4(v12, v13, (uint64_t)a5);
          swift_release();
          swift_release();
          break;
        case 3uLL:
          *a5 = 0;
          a5[1] = 0;
          break;
        default:
          *a5 = v9;
          a5[1] = v10 & 0xFFFFFFFFFFFFLL;
          break;
      }
    }
    else
    {
      sub_1DC9E84A4();
      swift_allocError();
      *uint64_t v11 = 0;
      swift_willThrow();
    }
    return sub_1DC881920(v9, v10);
  }
  return result;
}

uint64_t sub_1DC9E47CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = sub_1DCA96864(a1, a2, a3, a4, 12);
  if (!v5)
  {
    uint64_t v4 = v6;
    unint64_t v8 = v7;
    if (sub_1DCB86AF8() == 12)
    {
      switch(v8 >> 62)
      {
        case 1uLL:
          if (v4 >> 32 < (int)v4)
          {
            __break(1u);
            swift_release();
            swift_release();
            __break(1u);
            sub_1DC881920(v4, v8);
            __break(1u);
            JUMPOUT(0x1DC9E499CLL);
          }
          swift_retain();
          uint64_t v14 = sub_1DC9E8258((int)v4, v4 >> 32);
          sub_1DC881920(v4, v8);
          sub_1DC881920(v4, v8);
          uint64_t v4 = v14;
          break;
        case 2uLL:
          uint64_t v11 = *(void *)(v4 + 16);
          uint64_t v12 = *(void *)(v4 + 24);
          swift_retain();
          swift_retain();
          uint64_t v13 = sub_1DC9E8258(v11, v12);
          swift_release();
          swift_release();
          sub_1DC881920(v4, v8);
          uint64_t v4 = v13;
          break;
        case 3uLL:
          sub_1DC881920(v4, v8);
          uint64_t v4 = 0;
          break;
        default:
          sub_1DC881920(v4, v8);
          break;
      }
    }
    else
    {
      sub_1DC9E84A4();
      swift_allocError();
      *uint64_t v9 = 0;
      swift_willThrow();
      sub_1DC881920(v4, v8);
    }
  }
  return v4;
}

void *sub_1DC9E49AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = (void *)sub_1DCA96864(a1, a2, a3, a4, 136);
  if (!v5)
  {
    uint64_t v9 = (uint64_t)result;
    unint64_t v10 = v8;
    if (sub_1DCB86AF8() == 136)
    {
      int16x8_t v20 = 0u;
      int8x8_t v21 = 0;
      char v11 = 0;
      LOBYTE(v12) = 0;
      switch(v10 >> 62)
      {
        case 1uLL:
          if (v9 >> 32 < (int)v9)
          {
            __break(1u);
            sub_1DC881920(v9, v10);
            __break(1u);
            swift_release();
            swift_release();
            __break(1u);
            JUMPOUT(0x1DC9E4C60);
          }
          swift_retain();
          sub_1DC9E82D8((int)v9, v9 >> 32, &v23);
          int8x8_t v21 = v23;
          char v11 = v24;
          int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)__PAIR64__(v23.u32[1], v25));
          LOBYTE(v12) = v26;
          memcpy(__dst, v27, sizeof(__dst));
          sub_1DC881920(v9, v10);
          break;
        case 2uLL:
          uint64_t v18 = *(void *)(v9 + 16);
          uint64_t v19 = *(void *)(v9 + 24);
          swift_retain();
          swift_retain();
          sub_1DC9E82D8(v18, v19, &v28);
          int8x8_t v21 = v28;
          char v11 = v29;
          int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)__PAIR64__(v28.u32[1], v30));
          LOBYTE(v12) = v31;
          memcpy(__dst, v32, sizeof(__dst));
          swift_release();
          swift_release();
          break;
        case 3uLL:
          break;
        default:
          uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
          v14.i32[0] = v9;
          v14.i32[1] = v9 >> 8;
          int8x8_t v21 = vmovn_s16(vuzp1q_s16((int16x8_t)vmovn_hight_s64(v14, (int64x2_t)vshlq_u64(v13, (uint64x2_t)xmmword_1DCBC92A0)), (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1DCBC92B0), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1DCBC92C0))));
          uint64x2_t v15 = (uint64x2_t)vdupq_n_s64(v10);
          int32x4_t v16 = vuzp1q_s32((int32x4_t)vshlq_u64(v15, (uint64x2_t)xmmword_1DCBC92E0), (int32x4_t)vshlq_u64(v15, (uint64x2_t)xmmword_1DCBC92D0));
          *(int16x4_t *)v16.i8 = vmovn_s32(v16);
          int16x8_t v20 = (int16x8_t)v16;
          unint64_t v12 = v10 >> 40;
          char v11 = v10;
          break;
      }
      sub_1DC881920(v9, v10);
      *(int8x8_t *)a5 = v21;
      *(unsigned char *)(a5 + 8) = v11;
      *(_DWORD *)(a5 + 9) = vmovn_s16(v20).u32[0];
      *(unsigned char *)(a5 + 13) = v12;
      return memcpy((void *)(a5 + 14), __dst, 0x7AuLL);
    }
    else
    {
      sub_1DC9E84A4();
      swift_allocError();
      *uint64_t v17 = 0;
      swift_willThrow();
      return (void *)sub_1DC881920(v9, v10);
    }
  }
  return result;
}

uint64_t sub_1DC9E4C70(uint64_t a1)
{
  uint64_t v3 = sub_1DCA967D4(a1, 208, 8);
  if (!v1)
  {
    unint64_t v5 = v4;
    uint64_t v6 = v3;
    switch(v4 >> 62)
    {
      case 1uLL:
        if (v3 >> 32 < (int)v3)
        {
          __break(1u);
          JUMPOUT(0x1DC9E4D8CLL);
        }
        uint64_t v2 = (int)v3;
        swift_retain();
        sub_1DC9E96C0((int)v6, v6 >> 32);
        sub_1DC9E96D8();
        break;
      case 2uLL:
        uint64_t v9 = *(void *)(v3 + 16);
        uint64_t v10 = *(void *)(v3 + 24);
        swift_retain();
        swift_retain();
        uint64_t v2 = sub_1DC9E96C0(v9, v10);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        uint64_t v3 = sub_1DC9E952C();
        goto LABEL_8;
      default:
        uint64_t v7 = BYTE6(v4);
        uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
LABEL_8:
        uint64_t v2 = (uint64_t)sub_1DC9E1364(v3, v8, v7);
        break;
    }
    sub_1DC881920(v6, v5);
  }
  return v2;
}

uint64_t sub_1DC9E4D9C(uint64_t a1)
{
  uint64_t v3 = sub_1DCA967D4(a1, 209, 8);
  if (!v1)
  {
    unint64_t v5 = v4;
    uint64_t v6 = v3;
    switch(v4 >> 62)
    {
      case 1uLL:
        if (v3 >> 32 < (int)v3)
        {
          __break(1u);
          JUMPOUT(0x1DC9E4EB8);
        }
        uint64_t v2 = (int)v3;
        swift_retain();
        sub_1DC9E96C0((int)v6, v6 >> 32);
        sub_1DC9E96D8();
        break;
      case 2uLL:
        uint64_t v9 = *(void *)(v3 + 16);
        uint64_t v10 = *(void *)(v3 + 24);
        swift_retain();
        swift_retain();
        uint64_t v2 = sub_1DC9E96C0(v9, v10);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        uint64_t v3 = sub_1DC9E952C();
        goto LABEL_8;
      default:
        uint64_t v7 = BYTE6(v4);
        uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
LABEL_8:
        uint64_t v2 = (uint64_t)sub_1DC9E1364(v3, v8, v7);
        break;
    }
    sub_1DC881920(v6, v5);
  }
  return v2;
}

uint64_t sub_1DC9E4EC8(uint64_t a1, int a2)
{
  sub_1DC87E988(qword_1EAA9C830);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v4 + 16) = xmmword_1DCBB93B0;
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 32) = 0x3A73746C75736552;
  *(void *)(v4 + 40) = 0xE900000000000020;
  sub_1DCB89188();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1;
  int v8 = a2;
  type metadata accessor for _SNAOPDataReadOut(0);
  return sub_1DC9E95A8((uint64_t)&v7);
}

uint64_t sub_1DC9E4F90()
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (qword_1EAA9D200 != -1) {
    swift_once();
  }
  if (*((void *)off_1EAAA3E20 + 2) >= 0x100uLL)
  {
    sub_1DC8AF148();
    uint64_t result = sub_1DC9E9584();
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1DC9E9738();
    if (!v0)
    {
      sub_1DC9E93A8();
      sub_1DC9E9370();
      sub_1DC9E9338();
      sub_1DC9E92C0();
      unsigned __int8 v2 = sub_1DC9E930C();
      sub_1DC9E91C4(v2, 0x3000100000003, v3, v4, v5, v6, v7, v8, SHIDWORD(v8), v9, v10, SHIDWORD(v10), v11, v12, v13, v14, v15, SWORD2(v15), SHIWORD(v15));
      sub_1DC9E9458((uint64_t)v16);
      return sub_1DC9E95F0();
    }
  }
  return result;
}

uint64_t sub_1DC9E50EC()
{
  return sub_1DCB891C8();
}

BOOL sub_1DC9E5174(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v8 = BYTE1(a4) == BYTE1(a8) && BYTE2(a4) == BYTE2(a8);
  if (a4 != a8) {
    BOOL v8 = 0;
  }
  return a1 == a5 && a2 == a6 && a3 == a7 && HIDWORD(a3) == HIDWORD(a7) && v8;
}

uint64_t sub_1DC9E51C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x43656C6379436F69 && a2 == 0xEC000000746E756FLL;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x695474736574616CLL && a2 == 0xEF706D617453656DLL;
    if (v6 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB958B0 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6F7272457473616CLL && a2 == 0xED00006570795472;
      if (v7 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB958D0 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x6E45746E65696C63 && a2 == 0xED000064656C6261;
        if (v8 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x80000001DCB958F0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          char v9 = sub_1DCB89018();
          swift_bridgeObjectRelease();
          if (v9) {
            return 6;
          }
          else {
            return 7;
          }
        }
      }
    }
  }
}

unint64_t sub_1DC9E550C(char a1)
{
  unint64_t result = 0x43656C6379436F69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x695474736574616CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x6F7272457473616CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x6E45746E65696C63;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DC9E562C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_1DC88D6B0();
  a26 = v28;
  a27 = v29;
  unsigned int v36 = v30;
  unint64_t v32 = v31;
  sub_1DC87E988(&qword_1EAAA3F00);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v33);
  sub_1DC89D988();
  sub_1DC881A8C(v32, v32[3]);
  sub_1DC9E8CE4();
  sub_1DCB892B8();
  a17 = 0;
  sub_1DCB88F68();
  if (!v27)
  {
    a16 = 1;
    sub_1DCB88F68();
    a15 = 2;
    sub_1DCB88F58();
    a14 = 3;
    sub_1DCB88F58();
    a13 = 4;
    sub_1DC9E96A4(v36, (uint64_t)&a13);
    a12 = 5;
    sub_1DC9E96A4(v36 >> 8, (uint64_t)&a12);
    a11 = 6;
    sub_1DC9E96A4(HIWORD(v36), (uint64_t)&a11);
  }
  uint64_t v34 = sub_1DC8CD9A8();
  v35(v34);
  sub_1DC88D674();
}

uint64_t sub_1DC9E5804()
{
  return sub_1DCB891F8();
}

void sub_1DC9E58BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_1DC88D6B0();
  a26 = v27;
  a27 = v28;
  unsigned int v30 = v29;
  sub_1DC87E988(&qword_1EAAA3EE0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v31);
  sub_1DC881A8C(v30, v30[3]);
  sub_1DC9E8CE4();
  sub_1DCB89298();
  a17 = 0;
  sub_1DCB88E48();
  sub_1DC9E96F8();
  sub_1DCB88E48();
  a15 = 2;
  sub_1DCB88E38();
  a14 = 3;
  sub_1DCB88E38();
  a13 = 4;
  sub_1DC9E964C((uint64_t)&a13);
  a12 = 5;
  sub_1DC9E964C((uint64_t)&a12);
  a11 = 6;
  sub_1DC9E964C((uint64_t)&a11);
  uint64_t v32 = sub_1DC9A00C0();
  v33(v32);
  sub_1DC8818D0((uint64_t)v30);
  sub_1DC88D674();
}

uint64_t sub_1DC9E5ACC()
{
  return sub_1DCB891D8();
}

BOOL sub_1DC9E5B00(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t sub_1DC9E5B10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001DCB95910 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB95930)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1DC9E5BFC(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000015;
  }
}

void sub_1DC9E5C38()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA3F08);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D970();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DC9E8D30();
  sub_1DCB892B8();
  sub_1DCB88F68();
  if (!v0) {
    sub_1DCB88F58();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1DC9E970C();
  sub_1DC88D674();
}

uint64_t sub_1DC9E5D54()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9E5DAC(void *a1)
{
  sub_1DC87E988(&qword_1EAAA3EF0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = a1[3];
  sub_1DC881A8C(a1, v4);
  sub_1DC9E8D30();
  sub_1DCB89298();
  if (!v1)
  {
    sub_1DCB88E48();
    sub_1DC9E96F8();
    sub_1DCB88E38();
    uint64_t v5 = sub_1DC9AF7F4();
    v6(v5);
  }
  sub_1DC8818D0((uint64_t)a1);
  return v4;
}

uint64_t sub_1DC9E5EFC()
{
  return sub_1DCB891D8();
}

BOOL sub_1DC9E5F94(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(void *)a1 == *(void *)a2)
  {
    BOOL v2 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16);
    BOOL v3 = v2 && *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20);
    BOOL v4 = v3 && *(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24);
    BOOL v5 = v4 && *(unsigned __int8 *)(a1 + 25) == *(unsigned __int8 *)(a2 + 25);
    BOOL v6 = v5 && *(unsigned __int8 *)(a1 + 26) == *(unsigned __int8 *)(a2 + 26);
    if (v6 && *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40)) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1DC9E6018(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6961764161746164 && a2 == 0xED0000656C62616CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DC9E6124(char a1)
{
  if (a1) {
    return 0x6961764161746164;
  }
  else {
    return 0x737574617473;
  }
}

uint64_t sub_1DC9E6164(void *a1)
{
  sub_1DC87E988(&qword_1EAAA3EA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9E8930();
  sub_1DCB892B8();
  sub_1DC9E8A14();
  sub_1DC9E960C();
  if (!v1)
  {
    sub_1DC9E8A60();
    sub_1DC9E960C();
  }
  uint64_t v4 = sub_1DC8CD9A8();
  return v5(v4);
}

uint64_t sub_1DC9E62A0()
{
  return sub_1DCB891F8();
}

void sub_1DC9E636C(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DC87E988(&qword_1EAAA3E80);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9E8930();
  sub_1DCB89298();
  if (v2)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    sub_1DC9E897C();
    sub_1DC9E94EC();
    sub_1DC9E89C8();
    sub_1DC9E94EC();
    uint64_t v6 = sub_1DC99BA44();
    v7(v6);
    sub_1DC8818D0((uint64_t)a1);
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = v10;
    *(unsigned char *)(a2 + 24) = v11;
    *(unsigned char *)(a2 + 25) = v12;
    *(unsigned char *)(a2 + 26) = v13;
    *(void *)(a2 + 32) = v8;
    *(_DWORD *)(a2 + 40) = v9;
  }
  sub_1DC9E970C();
}

unint64_t sub_1DC9E6504()
{
  return sub_1DC9E550C(*v0);
}

uint64_t sub_1DC9E650C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9E51C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9E6534(uint64_t a1)
{
  unint64_t v2 = sub_1DC9E8CE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9E6570(uint64_t a1)
{
  unint64_t v2 = sub_1DC9E8CE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

#error "1DC9E65C0: call analysis failed (funcsize=18)"

#error "1DC9E6614: call analysis failed (funcsize=11)"

uint64_t sub_1DC9E6620()
{
  return sub_1DC9E5804();
}

uint64_t sub_1DC9E6638()
{
  return sub_1DC9E50EC();
}

uint64_t sub_1DC9E6650()
{
  return sub_1DCB891F8();
}

BOOL sub_1DC9E6704(uint64_t a1, uint64_t a2)
{
  return sub_1DC9E5174(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int16 *)(a1 + 24) | (*(unsigned __int8 *)(a1 + 26) << 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int16 *)(a2 + 24) | (*(unsigned __int8 *)(a2 + 26) << 16));
}

unint64_t sub_1DC9E6738()
{
  return sub_1DC9E5BFC(*v0);
}

uint64_t sub_1DC9E6740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9E5B10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9E6768(uint64_t a1)
{
  unint64_t v2 = sub_1DC9E8D30();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9E67A4(uint64_t a1)
{
  unint64_t v2 = sub_1DC9E8D30();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9E67E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DC9E5DAC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(_DWORD *)(a2 + 8) = v5;
  }
  return result;
}

void sub_1DC9E6810()
{
}

uint64_t sub_1DC9E6830()
{
  return sub_1DC9E5D54();
}

uint64_t sub_1DC9E683C()
{
  return sub_1DC9E5ACC();
}

uint64_t sub_1DC9E6848()
{
  return sub_1DCB891F8();
}

BOOL sub_1DC9E68A4(uint64_t a1, uint64_t a2)
{
  return sub_1DC9E5B00(*(void *)a1, *(_DWORD *)(a1 + 8), *(void *)a2, *(_DWORD *)(a2 + 8));
}

uint64_t sub_1DC9E68C0()
{
  return sub_1DC9E6124(*v0);
}

uint64_t sub_1DC9E68C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9E6018(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9E68F0(uint64_t a1)
{
  unint64_t v2 = sub_1DC9E8930();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9E692C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9E8930();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1DC9E6968@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DC9E636C(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 12);
    *(_OWORD *)((char *)a2 + 28) = *(_OWORD *)((char *)v7 + 12);
  }
  return result;
}

uint64_t sub_1DC9E69AC(void *a1)
{
  return sub_1DC9E6164(a1);
}

uint64_t sub_1DC9E69CC()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9E6AAC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  int v23 = a2;
  uint64_t v7 = sub_1DC9E0FCC((uint64_t)&v23, (uint64_t)v24);
  unint64_t v9 = v8;
  sub_1DC9E4634(a1, 37, v7, v8, v24);
  uint64_t result = sub_1DC881920(v7, v9);
  if (!v3)
  {
    uint64_t v11 = v24[1];
    uint64_t v22 = v24[0];
    uint64_t v12 = v24[2];
    char v13 = v25;
    char v20 = v27;
    char v21 = v26;
    LODWORD(v24[0]) = a2;
    uint64_t v14 = sub_1DC9E0FCC((uint64_t)v24, (uint64_t)v24 + 4);
    unint64_t v16 = v15;
    uint64_t v17 = sub_1DC9E47CC(a1, 36, v14, v15);
    int v19 = v18;
    uint64_t result = sub_1DC881920(v14, v16);
    *(void *)a3 = v22;
    *(void *)(a3 + 8) = v11;
    *(void *)(a3 + 16) = v12;
    *(unsigned char *)(a3 + 24) = v13;
    *(unsigned char *)(a3 + 25) = v21;
    *(unsigned char *)(a3 + 26) = v20;
    *(void *)(a3 + 32) = v17;
    *(_DWORD *)(a3 + 40) = v19;
  }
  return result;
}

uint64_t sub_1DC9E6C28(uint64_t a1, int a2)
{
  uint64_t result = sub_1DC9E6AAC(a1, a2, (uint64_t)&v6);
  if (!v2)
  {
    long long v4 = v6;
    v5[0] = v7[0];
    *(_OWORD *)((char *)v5 + 12) = *(_OWORD *)((char *)v7 + 12);
    return sub_1DC9E95A8((uint64_t)&v4);
  }
  return result;
}

uint64_t static SNAOPUtils.toggleAOPServiceTest(enable:)(int a1)
{
  uint64_t v4 = sub_1DC9E9758();
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v1)
  {
    task_port_t v6 = sub_1DC9E9630();
    uint64_t v7 = (char *)sub_1DC9E9420(v6);
    sub_1DCB2F82C(v7);
    sub_1DCAF08B0(LODWORD(v9[0]));
    sub_1DC9E953C();
    type metadata accessor for IOConnect();
    uint64_t v8 = sub_1DC9E926C();
    *(_DWORD *)(v8 + 16) = v2;
    void v9[3] = v4;
    v9[4] = &off_1F37F4348;
    v9[0] = v8;
    sub_1DC9E3F24(a1, (uint64_t)v9);
    return sub_1DC8818D0((uint64_t)v9);
  }
  return result;
}

uint64_t static SNAOPUtils.getAOPServiceId()()
{
  return sub_1DC9E6E40((uint64_t (*)(void *))sub_1DC9E4C70);
}

uint64_t static SNAOPUtils.getAOPServiceState()()
{
  return sub_1DC9E6E40((uint64_t (*)(void *))sub_1DC9E4D9C);
}

uint64_t sub_1DC9E6E40(uint64_t (*a1)(void *))
{
  uint64_t v4 = sub_1DC9E9758();
  sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v1)
  {
    task_port_t v5 = sub_1DC9E9630();
    task_port_t v6 = (char *)sub_1DC9E9420(v5);
    sub_1DCB2F82C(v6);
    sub_1DCAF08B0(LODWORD(v9[0]));
    sub_1DC9E953C();
    type metadata accessor for IOConnect();
    uint64_t v7 = sub_1DC9E926C();
    *(_DWORD *)(v7 + 16) = v2;
    void v9[3] = v4;
    v9[4] = &off_1F37F4348;
    v9[0] = v7;
    uint64_t v4 = a1(v9);
    sub_1DC8818D0((uint64_t)v9);
  }
  return v4;
}

uint64_t static SNAOPUtils.readFromAOPServiceNoiseDet()()
{
  sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v24, v26, v28[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v25, v27, v28[0]);
    sub_1DC9E9288();
    uint64_t v20 = type metadata accessor for IOConnect();
    uint64_t v21 = swift_allocObject();
    *(_DWORD *)(v21 + 16) = v1;
    v28[3] = v20;
    v28[4] = &off_1F37F4348;
    v28[0] = v21;
    swift_retain();
    uint64_t v22 = sub_1DC9E40E4((uint64_t)v28, 1, 0x6400000000uLL);
    LODWORD(v20) = v23;
    swift_bridgeObjectRelease();
    sub_1DC9E4EC8(v22, v20);
    swift_release();
    return sub_1DC8818D0((uint64_t)v28);
  }
  return result;
}

uint64_t static SNAOPUtils.configureDebugAOPService()()
{
  return sub_1DC9E7150((void (*)(void *))sub_1DC9E1948);
}

uint64_t static SNAOPUtils.configureNoiseAOPService()()
{
  return sub_1DC9E7150((void (*)(void *))sub_1DC9E1488);
}

uint64_t sub_1DC9E7150(void (*a1)(void *))
{
  sub_1DC9E9758();
  uint64_t result = sub_1DCAF0524(*MEMORY[0x1E4F2EEF0], 0xD000000000000011, 0x80000001DCB94B70, 0x706F616E73, 0xE500000000000000);
  if (!v1)
  {
    task_port_t v4 = sub_1DCB661F8();
    int v5 = (char *)sub_1DC9E9420(v4);
    sub_1DCB2F82C(v5);
    int v6 = sub_1DCAF08B0(0);
    swift_release();
    uint64_t v7 = type metadata accessor for IOConnect();
    uint64_t v8 = swift_allocObject();
    *(_DWORD *)(v8 + 16) = v6;
    void v9[3] = v7;
    v9[4] = &off_1F37F4348;
    v9[0] = v8;
    a1(v9);
    return sub_1DC8818D0((uint64_t)v9);
  }
  return result;
}

uint64_t static SNAOPUtils.configureMusicAOPService()()
{
  return sub_1DC9E7150((void (*)(void *))sub_1DC9E1650);
}

uint64_t static SNAOPUtils.configureAccessibilityAOPService()()
{
  return sub_1DC9E7150((void (*)(void *))sub_1DC9E4F90);
}

uint64_t static SNAOPUtils.enableDebugAOPService()()
{
  uint64_t v1 = sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28, v30[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v27, v29, v30[0]);
    sub_1DC9E9288();
    type metadata accessor for IOConnect();
    uint64_t v20 = sub_1DC9E926C();
    void v30[3] = v1;
    v30[4] = &off_1F37F4348;
    v30[0] = sub_1DC9E9494(v20);
    uint64_t v21 = sub_1DC9E9400();
    uint64_t v22 = sub_1DC9E94A0(v21);
    sub_1DC9E9198(v22, v23, v24, v25);
    sub_1DC9E92F0();
    swift_release();
    return sub_1DC8818D0((uint64_t)v30);
  }
  return result;
}

uint64_t static SNAOPUtils.disableDebugAOPService()()
{
  uint64_t v1 = sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28, v30[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v27, v29, v30[0]);
    sub_1DC9E9288();
    type metadata accessor for IOConnect();
    uint64_t v20 = sub_1DC9E926C();
    void v30[3] = v1;
    v30[4] = &off_1F37F4348;
    v30[0] = sub_1DC9E9494(v20);
    uint64_t v21 = sub_1DC9E93E0();
    uint64_t v22 = sub_1DC9E94A0(v21);
    sub_1DC9E9198(v22, v23, v24, v25);
    sub_1DC9E92F0();
    swift_release();
    return sub_1DC8818D0((uint64_t)v30);
  }
  return result;
}

uint64_t static SNAOPUtils.enableNoiseAOPService()()
{
  uint64_t v1 = sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28, v30[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v27, v29, v30[0]);
    sub_1DC9E9288();
    type metadata accessor for IOConnect();
    uint64_t v20 = sub_1DC9E926C();
    void v30[3] = v1;
    v30[4] = &off_1F37F4348;
    v30[0] = sub_1DC9E9494(v20);
    uint64_t v21 = sub_1DC9E9400();
    uint64_t v22 = sub_1DC9E94A0(v21);
    sub_1DC9E9198(v22, v23, v24, v25);
    sub_1DC9E92F0();
    swift_release();
    return sub_1DC8818D0((uint64_t)v30);
  }
  return result;
}

uint64_t static SNAOPUtils.disableNoiseAOPService()()
{
  uint64_t v1 = sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28, v30[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v27, v29, v30[0]);
    sub_1DC9E9288();
    type metadata accessor for IOConnect();
    uint64_t v20 = sub_1DC9E926C();
    void v30[3] = v1;
    v30[4] = &off_1F37F4348;
    v30[0] = sub_1DC9E9494(v20);
    uint64_t v21 = sub_1DC9E93E0();
    uint64_t v22 = sub_1DC9E94A0(v21);
    sub_1DC9E9198(v22, v23, v24, v25);
    sub_1DC9E92F0();
    swift_release();
    return sub_1DC8818D0((uint64_t)v30);
  }
  return result;
}

uint64_t static SNAOPUtils.enableMusicAOPService()()
{
  uint64_t v1 = sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28, v30[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v27, v29, v30[0]);
    sub_1DC9E9288();
    type metadata accessor for IOConnect();
    uint64_t v20 = sub_1DC9E926C();
    void v30[3] = v1;
    v30[4] = &off_1F37F4348;
    v30[0] = sub_1DC9E9494(v20);
    uint64_t v21 = sub_1DC9E9400();
    uint64_t v22 = sub_1DC9E94A0(v21);
    sub_1DC9E9198(v22, v23, v24, v25);
    sub_1DC9E92F0();
    swift_release();
    return sub_1DC8818D0((uint64_t)v30);
  }
  return result;
}

uint64_t static SNAOPUtils.disableMusicAOPService()()
{
  uint64_t v1 = sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28, v30[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v27, v29, v30[0]);
    sub_1DC9E9288();
    type metadata accessor for IOConnect();
    uint64_t v20 = sub_1DC9E926C();
    void v30[3] = v1;
    v30[4] = &off_1F37F4348;
    v30[0] = sub_1DC9E9494(v20);
    uint64_t v21 = sub_1DC9E93E0();
    uint64_t v22 = sub_1DC9E94A0(v21);
    sub_1DC9E9198(v22, v23, v24, v25);
    sub_1DC9E92F0();
    swift_release();
    return sub_1DC8818D0((uint64_t)v30);
  }
  return result;
}

uint64_t static SNAOPUtils.enableAccessibilityAOPService()()
{
  uint64_t v1 = sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28, v30[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v27, v29, v30[0]);
    sub_1DC9E9288();
    type metadata accessor for IOConnect();
    uint64_t v20 = sub_1DC9E926C();
    void v30[3] = v1;
    v30[4] = &off_1F37F4348;
    v30[0] = sub_1DC9E9494(v20);
    uint64_t v21 = sub_1DC9E9400();
    uint64_t v22 = sub_1DC9E94A0(v21);
    sub_1DC9E9198(v22, v23, v24, v25);
    sub_1DC9E92F0();
    swift_release();
    return sub_1DC8818D0((uint64_t)v30);
  }
  return result;
}

uint64_t static SNAOPUtils.disableAccessibilityAOPService()()
{
  uint64_t v1 = sub_1DC9E947C(*MEMORY[0x1E4F143B8]);
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v0)
  {
    task_port_t v3 = sub_1DC9E92A4();
    uint64_t v11 = (char *)sub_1DC9E924C(v3, v4, v5, v6, v7, v8, v9, v10, v26, v28, v30[0]);
    uint64_t v12 = sub_1DCB2F82C(v11);
    sub_1DC9E9440((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, v27, v29, v30[0]);
    sub_1DC9E9288();
    type metadata accessor for IOConnect();
    uint64_t v20 = sub_1DC9E926C();
    void v30[3] = v1;
    v30[4] = &off_1F37F4348;
    v30[0] = sub_1DC9E9494(v20);
    uint64_t v21 = sub_1DC9E93E0();
    uint64_t v22 = sub_1DC9E94A0(v21);
    sub_1DC9E9198(v22, v23, v24, v25);
    sub_1DC9E92F0();
    swift_release();
    return sub_1DC8818D0((uint64_t)v30);
  }
  return result;
}

uint64_t static SNAOPUtils.dumpStatusDebugAOPService()()
{
  return sub_1DC9E7BE4(0);
}

uint64_t static SNAOPUtils.dumpStatusMusicAOPService()()
{
  return sub_1DC9E7BE4(2);
}

uint64_t sub_1DC9E7BE4(int a1)
{
  uint64_t v4 = sub_1DC9E9758();
  uint64_t result = sub_1DC9E9164(*MEMORY[0x1E4F2EEF0], (uint64_t)"AppleSPUInterface");
  if (!v1)
  {
    task_port_t v6 = sub_1DC9E9630();
    int v7 = (char *)sub_1DC9E9420(v6);
    sub_1DCB2F82C(v7);
    sub_1DCAF08B0(LODWORD(v9[0]));
    sub_1DC9E953C();
    type metadata accessor for IOConnect();
    uint64_t v8 = sub_1DC9E926C();
    *(_DWORD *)(v8 + 16) = v2;
    void v9[3] = v4;
    v9[4] = &off_1F37F4348;
    v9[0] = v8;
    sub_1DC9E6C28((uint64_t)v9, a1);
    return sub_1DC8818D0((uint64_t)v9);
  }
  return result;
}

uint64_t static SNAOPUtils.dumpStatusNoiseAOPService()()
{
  return sub_1DC9E7BE4(1);
}

uint64_t static SNAOPUtils.dumpStatusAccessibilityAOPService()()
{
  return sub_1DC9E7BE4(3);
}

uint64_t sub_1DC9E7D80()
{
  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC9E7DDC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result)
  {
    __int16 v2 = *(_WORD *)(result + 24);
    char v3 = *(unsigned char *)(result + 26);
    *(_OWORD *)a2 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_WORD *)(a2 + 24) = v2;
    *(unsigned char *)(a2 + 26) = v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC9E7E08(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1DCABEA50(a1, a2, 4);
  if (!v2)
  {
    if (result)
    {
      uint64_t result = *(unsigned int *)result;
      if (v4)
      {
        if (v5 != v4)
        {
          sub_1DC96EDAC();
          swift_allocError();
          unsigned char *v6 = 3;
          return swift_willThrow();
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void type metadata accessor for SNAOPUtils()
{
}

uint64_t type metadata accessor for SNAOPUtils.Analytics()
{
  return self;
}

uint64_t type metadata accessor for SNAOPUtils.UnsafeSoundPrintGraphRunner()
{
  return self;
}

uint64_t type metadata accessor for SNAOPUtils.UnsafeSoundPrintGraphRunner.Result()
{
  return self;
}

uint64_t sub_1DC9E7EF8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = sub_1DCB86A28();
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = MEMORY[0x1E01A5A40]();
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = MEMORY[0x1E01A5A60]();
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1DC9E7F70()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9E7FB0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DC9E8078;
  return sub_1DC9E23A4(a1, v4, v5, v6, v7);
}

uint64_t sub_1DC9E8078()
{
  sub_1DC886774();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1DC9E8148(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1DCB867D8();
  uint64_t v5 = (unsigned __int8 *)result;
  if (result)
  {
    uint64_t result = sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
    v5 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = sub_1DCB867F8();
  if (v5) {
    return *v5;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1DC9E81C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1DCB867D8();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_1DCB86808();
    if (__OFSUB__(a1, result)) {
      goto LABEL_7;
    }
    v7 += a1 - result;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_1DCB867F8();
    return sub_1DC9E7DDC(v7, a3);
  }
  __break(1u);
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC9E8258(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1DCB867D8();
  uint64_t v5 = result;
  if (result)
  {
    uint64_t result = sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
    v5 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = sub_1DCB867F8();
  if (v5) {
    return *(void *)v5;
  }
LABEL_9:
  __break(1u);
  return result;
}

char *sub_1DC9E82D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = (char *)sub_1DCB867D8();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = (char *)sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    v8 += a1 - (void)result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = (char *)sub_1DCB867F8();
  if (!v8)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  if (!v3)
  {
    return (char *)memcpy(a3, v8, 0x88uLL);
  }
  return result;
}

void *sub_1DC9E8388(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)sub_1DCB867D8();
  uint64_t v5 = (uint64_t)result;
  if (result)
  {
    uint64_t result = (void *)sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      return result;
    }
    v5 += a1 - (void)result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v8 = sub_1DCB867F8();
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  return sub_1DCB0FA80(v5, v9);
}

uint64_t sub_1DC9E8418(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1DCB867D8();
  uint64_t v5 = result;
  if (result)
  {
    uint64_t result = sub_1DCB86808();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_1DCB867F8();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v5 + v9;
  if (v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  return sub_1DC9E7E08(v5, v11);
}

unint64_t sub_1DC9E84A4()
{
  unint64_t result = qword_1EAAA3E50;
  if (!qword_1EAAA3E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3E50);
  }
  return result;
}

unint64_t sub_1DC9E84F0()
{
  unint64_t result = qword_1EAAA3E58;
  if (!qword_1EAAA3E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3E58);
  }
  return result;
}

uint64_t sub_1DC9E853C(uint64_t a1, uint64_t a2)
{
  return sub_1DCA96A34(a1, a2, *(void **)(v2 + 16), *(_DWORD *)(v2 + 24));
}

uint64_t sub_1DC9E855C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SNAOPReport.Payload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC9E85C0()
{
  return sub_1DC88389C();
}

float sub_1DC9E85CC@<S0>(void (*a1)(uint64_t *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  a1(&v5);
  if (v2)
  {
    swift_allocError();
  }
  else
  {
    float result = *(float *)((char *)&v5 + 1);
    *(unsigned char *)a2 = v5;
    *(float *)(a2 + 1) = result;
  }
  return result;
}

float sub_1DC9E863C@<S0>(uint64_t a1@<X8>)
{
  return sub_1DC9E85CC(*(void (**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1DC9E8658()
{
  return sub_1DC88389C();
}

void *sub_1DC9E8664@<X0>(void *(*a1)(void *__return_ptr)@<X1>, void *a2@<X8>)
{
  float result = a1(v6);
  if (v2) {
    return (void *)swift_allocError();
  }
  uint64_t v5 = v6[1];
  *a2 = v6[0];
  a2[1] = v5;
  return result;
}

void *sub_1DC9E86CC@<X0>(void *a1@<X8>)
{
  return sub_1DC9E8664(*(void *(**)(void *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1DC9E86E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DCB86BF8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_1DC9E872C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9E87F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for SNAOPUtils.DomainError()
{
}

uint64_t sub_1DC9E882C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 44)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC9E884C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 44) = v3;
  return result;
}

void type metadata accessor for SNAOPUtils.AOPUseCaseStateSnapshot()
{
}

unint64_t sub_1DC9E8894()
{
  unint64_t result = qword_1EAAA3E70;
  if (!qword_1EAAA3E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3E70);
  }
  return result;
}

unint64_t sub_1DC9E88E4()
{
  unint64_t result = qword_1EAAA3E78;
  if (!qword_1EAAA3E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3E78);
  }
  return result;
}

unint64_t sub_1DC9E8930()
{
  unint64_t result = qword_1EAAA3E88;
  if (!qword_1EAAA3E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3E88);
  }
  return result;
}

unint64_t sub_1DC9E897C()
{
  unint64_t result = qword_1EAAA3E90;
  if (!qword_1EAAA3E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3E90);
  }
  return result;
}

unint64_t sub_1DC9E89C8()
{
  unint64_t result = qword_1EAAA3E98;
  if (!qword_1EAAA3E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3E98);
  }
  return result;
}

unint64_t sub_1DC9E8A14()
{
  unint64_t result = qword_1EAAA3EA8;
  if (!qword_1EAAA3EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3EA8);
  }
  return result;
}

unint64_t sub_1DC9E8A60()
{
  unint64_t result = qword_1EAAA3EB0;
  if (!qword_1EAAA3EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3EB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPUtils.AOPUseCaseStateSnapshot.CodingKeys()
{
  return &type metadata for SNAOPUtils.AOPUseCaseStateSnapshot.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for SNSystemConfiguration(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)unint64_t result = v2;
  return result;
}

void type metadata accessor for SNAOPUtils.AOPDataAvailable()
{
}

__n128 sub_1DC9E8AE0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1DC9E8AF4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 27)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DC9E8B14(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 27) = v3;
  return result;
}

void type metadata accessor for SNAOPUtils.AOPStatus()
{
}

unint64_t sub_1DC9E8B58()
{
  unint64_t result = qword_1EAAA3EB8;
  if (!qword_1EAAA3EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3EB8);
  }
  return result;
}

unint64_t sub_1DC9E8BA8()
{
  unint64_t result = qword_1EAAA3EC0;
  if (!qword_1EAAA3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3EC0);
  }
  return result;
}

unint64_t sub_1DC9E8BF8()
{
  unint64_t result = qword_1EAAA3EC8;
  if (!qword_1EAAA3EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3EC8);
  }
  return result;
}

unint64_t sub_1DC9E8C48()
{
  unint64_t result = qword_1EAAA3ED0;
  if (!qword_1EAAA3ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3ED0);
  }
  return result;
}

unint64_t sub_1DC9E8C98()
{
  unint64_t result = qword_1EAAA3ED8;
  if (!qword_1EAAA3ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3ED8);
  }
  return result;
}

unint64_t sub_1DC9E8CE4()
{
  unint64_t result = qword_1EAAA3EE8;
  if (!qword_1EAAA3EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3EE8);
  }
  return result;
}

unint64_t sub_1DC9E8D30()
{
  unint64_t result = qword_1EAAA3EF8;
  if (!qword_1EAAA3EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3EF8);
  }
  return result;
}

unsigned char *_s13SoundAnalysis10SNAOPUtilsV23AOPUseCaseStateSnapshotV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9E8E48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPUtils.AOPDataAvailable.CodingKeys()
{
  return &type metadata for SNAOPUtils.AOPDataAvailable.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SNAOPUtils.AOPStatus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9E8F4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNAOPUtils.AOPStatus.CodingKeys()
{
  return &type metadata for SNAOPUtils.AOPStatus.CodingKeys;
}

unint64_t sub_1DC9E8F88()
{
  unint64_t result = qword_1EAAA3F10;
  if (!qword_1EAAA3F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F10);
  }
  return result;
}

unint64_t sub_1DC9E8FD8()
{
  unint64_t result = qword_1EAAA3F18;
  if (!qword_1EAAA3F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F18);
  }
  return result;
}

unint64_t sub_1DC9E9028()
{
  unint64_t result = qword_1EAAA3F20;
  if (!qword_1EAAA3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F20);
  }
  return result;
}

unint64_t sub_1DC9E9078()
{
  unint64_t result = qword_1EAAA3F28;
  if (!qword_1EAAA3F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F28);
  }
  return result;
}

unint64_t sub_1DC9E90C8()
{
  unint64_t result = qword_1EAAA3F30;
  if (!qword_1EAAA3F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F30);
  }
  return result;
}

unint64_t sub_1DC9E9118()
{
  unint64_t result = qword_1EAAA3F38;
  if (!qword_1EAAA3F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F38);
  }
  return result;
}

uint64_t sub_1DC9E9164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCAF0524(a1, 0xD000000000000011, (a2 - 32) | 0x8000000000000000, 0x706F616E73, 0xE500000000000000);
}

uint64_t sub_1DC9E9198(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return sub_1DC9E44AC((uint64_t)va, 35, a1, a2);
}

uint64_t sub_1DC9E91C4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, long long a5, long long a6, long long a7, int a8, int a9, long long a10, int a11, int a12, long long a13, uint64_t a14, long long a15, long long a16, int a17, __int16 a18, __int16 a19)
{
  *(void *)((char *)&a5 + 4) = a2;
  HIDWORD(a5) = 1;
  LOBYTE(a6) = v24;
  *(_DWORD *)((char *)&a6 + 1) = v19;
  __asm { FMOV            V0.2S, #0.75 }
  *(void *)((char *)&a6 + 5) = _D0;
  *(_DWORD *)((char *)&a6 + 13) = v20;
  *(void *)((char *)&a7 + 1) = _D0;
  *(_DWORD *)((char *)&a7 + 9) = v21;
  *(void *)((char *)&a7 + 13) = _D0;
  *(int *)((char *)&a9 + 1) = v22;
  *(void *)((char *)&a10 + 1) = _D0;
  *(_DWORD *)((char *)&a10 + 9) = v23;
  *(void *)((char *)&a10 + 13) = _D0;
  *(int *)((char *)&a12 + 1) = a1;
  *(void *)((char *)&a13 + 1) = _D0;
  *(long long *)((char *)&a13 + 9) = 0u;
  *(long long *)((char *)&a15 + 1) = 0u;
  *(long long *)((char *)&a16 + 1) = 0u;
  return sub_1DC9E0FCC((uint64_t)&a5 + 4, (uint64_t)&a19);
}

uint64_t sub_1DC9E924C(task_port_t owningTask, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, io_connect_t connect)
{
  return IOServiceOpen(v11, owningTask, 0, &connect);
}

uint64_t sub_1DC9E926C()
{
  return swift_allocObject();
}

uint64_t sub_1DC9E9288()
{
  return swift_release();
}

uint64_t sub_1DC9E92A4()
{
  return sub_1DCB661F8();
}

unint64_t sub_1DC9E92C0()
{
  return sub_1DC9E3D38();
}

uint64_t sub_1DC9E92F0()
{
  return sub_1DC881920(v0, v1);
}

unint64_t sub_1DC9E930C()
{
  return sub_1DC9E3D38();
}

unint64_t sub_1DC9E9338()
{
  return sub_1DC9E3D38();
}

unint64_t sub_1DC9E9370()
{
  return sub_1DC9E3D38();
}

unint64_t sub_1DC9E93A8()
{
  return sub_1DC9E3D38();
}

uint64_t sub_1DC9E93E0()
{
  return swift_retain();
}

uint64_t sub_1DC9E9400()
{
  return swift_retain();
}

uint64_t sub_1DC9E9420(task_port_t owningTask, ...)
{
  va_start(va, owningTask);
  return IOServiceOpen(v1, owningTask, 0, (io_connect_t *)va);
}

uint64_t sub_1DC9E9440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11)
{
  return sub_1DCAF08B0(a11);
}

void *sub_1DC9E9458@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC9E49AC(v1, 34, v2, v3, a1);
}

uint64_t sub_1DC9E947C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 40) = a1;
  return type metadata accessor for IOService();
}

uint64_t sub_1DC9E9494(uint64_t result)
{
  *(_DWORD *)(result + 16) = v1;
  return result;
}

uint64_t sub_1DC9E94A0(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_1DC9E0FCC((uint64_t)va, v1);
}

uint64_t sub_1DC9E94B8()
{
  return sub_1DC881920(v0, v1);
}

unint64_t sub_1DC9E94D0()
{
  return 0xD000000000000017;
}

uint64_t sub_1DC9E94EC()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DC9E9514()
{
  return sub_1DC881920(v0, v1);
}

uint64_t sub_1DC9E952C()
{
  return 0;
}

uint64_t sub_1DC9E953C()
{
  return swift_release();
}

float sub_1DC9E9558()
{
  return v0;
}

uint64_t sub_1DC9E9568()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9E9584()
{
  return sub_1DCB88C58();
}

uint64_t sub_1DC9E95A8(uint64_t a1)
{
  return MEMORY[0x1F4185DC8](a1, 0, 0, 0, 0x7FFFFFFFFFFFFFFFLL, 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1DC9E95CC()
{
  return swift_beginAccess();
}

uint64_t sub_1DC9E95F0()
{
  return sub_1DC881920(v0, v1);
}

uint64_t sub_1DC9E960C()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DC9E9630()
{
  return sub_1DCB661F8();
}

uint64_t sub_1DC9E964C(uint64_t a1)
{
  return MEMORY[0x1F41855C0](a1, v1);
}

uint64_t sub_1DC9E9668()
{
  return v0;
}

uint64_t sub_1DC9E9680()
{
  return sub_1DCB88778();
}

uint64_t sub_1DC9E96A4(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F41856E8](a1, a2, v2);
}

uint64_t sub_1DC9E96C0(uint64_t a1, uint64_t a2)
{
  return sub_1DC9E8418(a1, a2);
}

uint64_t sub_1DC9E96D8()
{
  return sub_1DC881920(v1, v0);
}

uint64_t sub_1DC9E96F8()
{
  *(unsigned char *)(v0 - 66) = 1;
  return v0 - 66;
}

uint64_t sub_1DC9E9718()
{
  return sub_1DCAA4AFC();
}

unint64_t sub_1DC9E9738()
{
  return sub_1DC9E3D38();
}

uint64_t sub_1DC9E9758()
{
  return type metadata accessor for IOService();
}

uint64_t sub_1DC9E9784()
{
  return v0;
}

uint64_t sub_1DC9E9798(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return v1 - 112;
}

uint64_t sub_1DC9E97AC()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA3F68);
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC8A22D0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = sub_1DC88CEC8;
  void v9[3] = v0;
  v9[4] = v8;
  swift_retain();
  swift_retain();
  sub_1DC87E988(&qword_1EAA9FF00);
  sub_1DC88CF34(&qword_1EAA9FF08, &qword_1EAA9FF00);
  sub_1DCB87378();
  sub_1DC88CF34(&qword_1EAAA3F70, &qword_1EAAA3F68);
  uint64_t v10 = sub_1DCB873A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v10;
}

uint64_t sub_1DC9E9930(void *a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA3F58);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DC9EA0DC();
  sub_1DCB892B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_1DC9E9A10(uint64_t a1)
{
  unint64_t v2 = sub_1DC9EA0DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9E9A4C(uint64_t a1)
{
  unint64_t v2 = sub_1DC9EA0DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9E9A88(void *a1)
{
  return sub_1DC9E9930(a1);
}

uint64_t type metadata accessor for SharedAOPDebugStream.Instance()
{
  return self;
}

uint64_t sub_1DC9E9AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  sub_1DC89F6D8();
  uint64_t v7 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC8A22D0();
  uint64_t v13 = v12 - v11;
  sub_1DCB86BE8();
  uint64_t v14 = type metadata accessor for IOConnect();
  uint64_t v28 = v14;
  uint64_t v29 = &off_1F37F4348;
  v27[0] = a1;
  swift_retain();
  sub_1DC9E1948();
  if (v3)
  {
    swift_release();
    swift_release();
    uint64_t v18 = sub_1DC99BA44();
    v19(v18);
    sub_1DC8818D0((uint64_t)v27);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1DC8818D0((uint64_t)v27);
    uint64_t v28 = v14;
    uint64_t v29 = &off_1F37F4348;
    v27[0] = a1;
    swift_retain();
    sub_1DC9E3F24(1, (uint64_t)v27);
    sub_1DC8818D0((uint64_t)v27);
    uint64_t v28 = v14;
    uint64_t v29 = &off_1F37F4348;
    v27[0] = a1;
    int v23 = 0;
    __int16 v24 = 1;
    char v25 = 1;
    swift_retain();
    uint64_t v15 = sub_1DC9E0FCC((uint64_t)&v23, (uint64_t)&v26);
    unint64_t v17 = v16;
    sub_1DC9E44AC((uint64_t)v27, 35, v15, v16);
    sub_1DC881920(v15, v17);
    sub_1DC8818D0((uint64_t)v27);
    *(void *)(v4 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_connect) = a1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v4 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_trackingID, v13, v7);
    *(void *)(v4 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_analytics) = a2;
    swift_retain();
    swift_retain();
    sub_1DC9E1A9C(v13);
    swift_release();
    swift_release();
    uint64_t v21 = sub_1DC99BA44();
    v22(v21);
  }
  return v4;
}

uint64_t sub_1DC9E9D5C()
{
  uint64_t v1 = v0;
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = v0 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_trackingID;
  sub_1DC9E1D30(v0 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_trackingID);
  uint64_t v3 = OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_connect;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtCV13SoundAnalysis20SharedAOPDebugStream15AOPSubscription_connect);
  uint64_t v5 = type metadata accessor for IOConnect();
  uint64_t v17 = v5;
  uint64_t v18 = &off_1F37F4348;
  v16[0] = v4;
  swift_retain();
  sub_1DC9E3F24(0, (uint64_t)v16);
  sub_1DC8818D0((uint64_t)v16);
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t v17 = v5;
  uint64_t v18 = &off_1F37F4348;
  v16[0] = v6;
  int v12 = 0;
  __int16 v13 = 1;
  char v14 = 0;
  swift_retain();
  uint64_t v7 = sub_1DC9E0FCC((uint64_t)&v12, (uint64_t)&v15);
  unint64_t v9 = v8;
  sub_1DC9E44AC((uint64_t)v16, 35, v7, v8);
  sub_1DC881920(v7, v9);
  sub_1DC8818D0((uint64_t)v16);
  uint64_t v10 = sub_1DCB86BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v2, v10);
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1DC9E9F44()
{
  sub_1DC9E9D5C();
  sub_1DC89F6D8();

  return swift_deallocClassInstance();
}

uint64_t sub_1DC9E9F7C()
{
  return type metadata accessor for SharedAOPDebugStream.AOPSubscription();
}

uint64_t type metadata accessor for SharedAOPDebugStream.AOPSubscription()
{
  uint64_t result = qword_1EAAA3F40;
  if (!qword_1EAAA3F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DC9E9FCC()
{
  uint64_t result = sub_1DCB86BF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedAOPDebugStream()
{
  return &type metadata for SharedAOPDebugStream;
}

ValueMetadata *type metadata accessor for SharedAOPDebugStream.Configuration()
{
  return &type metadata for SharedAOPDebugStream.Configuration;
}

unint64_t sub_1DC9EA090()
{
  unint64_t result = qword_1EAAA3F50;
  if (!qword_1EAAA3F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F50);
  }
  return result;
}

unint64_t sub_1DC9EA0DC()
{
  unint64_t result = qword_1EAAA3F60;
  if (!qword_1EAAA3F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F60);
  }
  return result;
}

void sub_1DC9EA128(void *a1@<X8>)
{
  sub_1DCB06D44();
  *a1 = v2;
}

uint64_t sub_1DC9EA154()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DC9EA194(void *a1@<X8>)
{
}

ValueMetadata *type metadata accessor for SharedAOPDebugStream.Configuration.CodingKeys()
{
  return &type metadata for SharedAOPDebugStream.Configuration.CodingKeys;
}

unint64_t sub_1DC9EA1B4()
{
  unint64_t result = qword_1EAAA3F78;
  if (!qword_1EAAA3F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F78);
  }
  return result;
}

unint64_t sub_1DC9EA204()
{
  unint64_t result = qword_1EAAA3F80;
  if (!qword_1EAAA3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3F80);
  }
  return result;
}

id sub_1DC9EA250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_resultsHandler];
  *(void *)uint64_t v10 = a3;
  *((void *)v10 + 1) = a4;
  uint64_t v11 = &v4[OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_completionHandler];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t sub_1DC9EA2D0()
{
  return (*(uint64_t (**)(void))(v0 + OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_resultsHandler))();
}

uint64_t sub_1DC9EA38C()
{
  return (*(uint64_t (**)(void))(v0 + OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_completionHandler))();
}

uint64_t sub_1DC9EA43C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1
                                                    + OBJC_IVAR____TtC13SoundAnalysis18SNResultsForwarder_completionHandler))(a1, 0);
}

void sub_1DC9EA4DC()
{
}

uint64_t type metadata accessor for SNResultsForwarder()
{
  return self;
}

uint64_t sub_1DC9EA594(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  return sub_1DC9EA5A4(a1, a2, a3, a4, a5);
}

uint64_t sub_1DC9EA59C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  return sub_1DC9EA5A4(a1, a2, a3, a4, a5);
}

uint64_t sub_1DC9EA5A4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  return a5(a1, a2);
}

void *sub_1DC9EA5FC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  unint64_t result = (void *)MEMORY[0x1E01A9AE0](v5);
  if (result)
  {
    uint64_t v7 = result;
    if (a2)
    {
      if (objc_msgSend(result, sel_respondsToSelector_, sel_request_didFailWithError_))
      {
        id v8 = a2;
        swift_unknownObjectRetain();
        unint64_t v9 = (void *)sub_1DCB86888();
        objc_msgSend(v7, sel_request_didFailWithError_, a1, v9);
        swift_unknownObjectRelease();
      }
    }
    else if (objc_msgSend(result, sel_respondsToSelector_, sel_requestDidComplete_))
    {
      objc_msgSend(v7, sel_requestDidComplete_, a1);
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1DC9EA6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  unint64_t result = (void *)MEMORY[0x1E01A9AE0](v5);
  if (result)
  {
    objc_msgSend(result, sel_request_didProduceResult_, a1, a2);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DC9EA76C()
{
  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeInt16ToFloatNode()
{
  return self;
}

uint64_t sub_1DC9EA7EC()
{
  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeEBankNode()
{
  return self;
}

uint64_t sub_1DC9EA86C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, char *a6@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  uint64_t v34 = a1;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  int v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  char v15 = (char *)v30 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v30 - v17;
  MEMORY[0x1F4188790](v16);
  unsigned __int8 v20 = (char *)v30 - v19;
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v21);
  int v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23(a6, v34, a3);
  v23(v18, (uint64_t)v35, a3);
  if (sub_1DCB878C8())
  {
    __int16 v24 = *(void (**)(char *, uint64_t))(v9 + 8);
    v24(v18, a3);
  }
  else
  {
    char v25 = *(void (**)(char *, char *, uint64_t, uint64_t))(v36 + 8);
    uint64_t v31 = (void (*)(char *, char *, uint64_t))v23;
    uint64_t v32 = v25;
    uint64_t v33 = v36 + 8;
    uint64_t v34 = a5;
    char v26 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v35 = v20;
    uint64_t v27 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    v30[1] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    do
    {
      v31(v15, v18, a3);
      v32(a6, v18, a3, v36);
      __int16 v24 = *v26;
      (*v26)(v18, a3);
      v24(a6, a3);
      uint64_t v28 = *v27;
      (*v27)(v18, v12, a3);
      v28(a6, v15, a3);
    }
    while ((sub_1DCB878C8() & 1) == 0);
    unsigned __int8 v20 = v35;
    v24(v18, a3);
  }
  return ((uint64_t (*)(char *, uint64_t))v24)(v20, a3);
}

void sub_1DC9EAB14(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t *sub_1DC9EAB1C@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = *a2;
  if (*a2)
  {
    if (*result != 0x8000000000000000 || v3 != -1)
    {
      *a3 = *result % v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1DC9EAB50@<X0>(void *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = *a2;
  if (*a2)
  {
    if (*result != 0x8000000000000000 || v3 != -1)
    {
      *a3 = *result / v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNNumberUtils.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DC9EAC1CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNNumberUtils.DomainError()
{
  return &type metadata for SNNumberUtils.DomainError;
}

unint64_t sub_1DC9EAC58()
{
  unint64_t result = qword_1EAAA3FA0;
  if (!qword_1EAAA3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3FA0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FeatureExtractorConfiguration(void *a1, void *a2)
{
  int v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for FeatureExtractorConfiguration(void *a1)
{
}

uint64_t *assignWithCopy for FeatureExtractorConfiguration(uint64_t *a1, uint64_t *a2)
{
  int v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v4 = *a1;
  *a1 = *a2;
  uint64_t v5 = (void *)(v4 & 0x7FFFFFFFFFFFFFFFLL);
  id v6 = v3;

  return a1;
}

uint64_t *assignWithTake for FeatureExtractorConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureExtractorConfiguration(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for FeatureExtractorConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1DC9EAE00(void *a1)
{
  return *a1 >> 63;
}

void *sub_1DC9EAE0C(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1DC9EAE1C(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for FeatureExtractorConfiguration()
{
  return &type metadata for FeatureExtractorConfiguration;
}

uint64_t sub_1DC9EAE40(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9EB910);
}

uint64_t sub_1DC9EAE6C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t *, id))
{
  void (*v5)(uint64_t *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v31[8];
  char v32[16];
  uint64_t v33;
  void v34[2];
  char v35[48];
  uint64_t v36;
  unsigned char v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52[8];

  uint64_t v28 = v2;
  uint64_t v3 = MGGetProductType();
  sub_1DC983D28(v3, v31);
  sub_1DC901EB8((uint64_t)v31, (uint64_t)v35, (uint64_t *)&unk_1EAA9E950);
  if (v36)
  {
    char v4 = v35[0];
    sub_1DC8CBC38(v31);
    sub_1DC9836F8(v4, (uint64_t)v32);
    uint64_t v5 = (void (*)(uint64_t *__return_ptr, uint64_t))v34[1];
    sub_1DC901EB8((uint64_t)&v33, (uint64_t)v37, (uint64_t *)&unk_1EAAA4140);
    swift_retain();
    sub_1DC8CBCC4((uint64_t)v37);
    sub_1DC901EB8((uint64_t)v34, (uint64_t)v52, &qword_1EAA9E980);
    sub_1DC8CBD50((uint64_t)v52);
    id v6 = swift_release();
    v5(&v38, v6);
    swift_release();
    uint64_t v7 = v38;
    id v8 = v39;
    uint64_t v9 = v40;
    uint64_t v10 = v41;
    uint64_t v11 = v42;
    int v12 = v43;
    uint64_t v13 = v44;
    uint64_t v14 = v45;
    char v15 = v46;
    uint64_t v16 = v47;
    uint64_t v17 = v48;
    uint64_t v18 = v49;
    uint64_t v19 = v50;
    unsigned __int8 v20 = v51;
  }
  else
  {
    if (qword_1EAA9D260 != -1) {
      swift_once();
    }
    id v8 = *(void *)algn_1EAAFFAA8;
    uint64_t v10 = qword_1EAAFFAB8;
    char v26 = qword_1EAAFFAB0;
    uint64_t v27 = qword_1EAAFFAA0;
    int v12 = qword_1EAAFFAC8;
    char v25 = qword_1EAAFFAC0;
    __int16 v24 = byte_1EAAFFAD0;
    uint64_t v14 = byte_1EAAFFAD1;
    char v15 = byte_1EAAFFAD2;
    uint64_t v16 = byte_1EAAFFAD3;
    uint64_t v17 = byte_1EAAFFAD4;
    uint64_t v18 = byte_1EAAFFAD5;
    uint64_t v19 = qword_1EAAFFAD8;
    unsigned __int8 v20 = byte_1EAAFFAE0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = v24;
    uint64_t v11 = v25;
    uint64_t v9 = v26;
    uint64_t v7 = v27;
  }
  int v38 = v7;
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  uint64_t v42 = v11;
  int v43 = v12;
  int v44 = v13;
  int v45 = v14;
  int v46 = v15;
  int v47 = v16;
  int v48 = v17;
  int v49 = v18;
  int v50 = v19;
  int v51 = v20;
  uint64_t v21 = v28;
  uint64_t v22 = a2(a1, &v38, v21);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1DC9EB0A4(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1DC9EB0BC(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9EC358);
}

uint64_t sub_1DC9EB0E8(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9F13B0);
}

uint64_t sub_1DC9EB114(uint64_t a1, long long *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = sub_1DC8863A8((uint64_t *)&unk_1EAAA4200);
  sub_1DC88CF34(&qword_1EAAA3FE0, (uint64_t *)&unk_1EAAA4200);
  v36[0] = a7;
  v36[1] = v15;
  uint64_t v16 = sub_1DCB87148();
  sub_1DC89D4E0();
  uint64_t v37 = v17;
  MEMORY[0x1F4188790](v18);
  unsigned __int8 v20 = (char *)v36 - v19;
  uint64_t v21 = *((void *)a2 + 2);
  uint64_t v22 = *((void *)a2 + 3);
  char v23 = *((unsigned char *)a2 + 48);
  char v24 = *((unsigned char *)a2 + 49);
  char v25 = *((unsigned char *)a2 + 50);
  char v26 = *((unsigned char *)a2 + 51);
  char v27 = *((unsigned char *)a2 + 52);
  char v28 = *((unsigned char *)a2 + 53);
  uint64_t v29 = *((void *)a2 + 7);
  char v30 = *((unsigned char *)a2 + 64);
  long long v38 = *a2;
  uint64_t v39 = v21;
  uint64_t v40 = v22;
  long long v41 = a2[2];
  char v42 = v23;
  char v43 = v24;
  char v44 = v25;
  char v45 = v26;
  char v46 = v27;
  char v47 = v28;
  uint64_t v48 = v29;
  char v49 = v30;
  uint64_t v31 = v50;
  sub_1DC9F2FAC(a1, (uint64_t)&v38, a4, a5, a6, a8);
  if (!v31)
  {
    *(void *)&long long v38 = v32;
    uint64_t v33 = (void *)swift_allocObject();
    uint64_t v34 = v36[0];
    void v33[2] = a6;
    v33[3] = v34;
    void v33[4] = a8;
    sub_1DCB874A8();
    swift_release();
    swift_release();
    swift_getWitnessTable();
    a8 = sub_1DCB873A8();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v16);
  }
  return a8;
}

uint64_t sub_1DC9EB34C(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9EFFCC);
}

uint64_t sub_1DC9EB378(unint64_t a1, void (*a2)(uint64_t *))
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1DCB88CC8())
  {
    uint64_t v5 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1E01A7AE0](v5 - 4, a1);
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5);
        swift_unknownObjectRetain();
      }
      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      uint64_t v9 = v6;
      char v10 = 0;
      swift_unknownObjectRetain();
      a2(&v9);
      swift_unknownObjectRelease_n();
      ++v5;
      if (v7 == v4) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9EB494(unint64_t a1, void (*a2)(id *))
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1DCB88CC8())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E01A7AE0](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v10 = v6;
      char v11 = 0;
      id v8 = v6;
      a2(&v10);

      ++v5;
      if (v7 == v4) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC9EB5A4(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9EEBD0);
}

uint64_t sub_1DC9EB5D0(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9ED754);
}

uint64_t sub_1DC9EB5FC(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t v7 = (void *)(a1 & 0x7FFFFFFFFFFFFFFFLL);
    type metadata accessor for SNSoundPrintFeatureExtractor();
    swift_allocObject();
    uint64_t v5 = sub_1DCAB5AFC((uint64_t)v7);
    id v8 = v7;
  }
  else
  {
    type metadata accessor for SNLogMelBasedFeatureExtractor();
    uint64_t v3 = swift_allocObject();
    id v4 = (id)a1;
    uint64_t v5 = v3;
    uint64_t v6 = sub_1DC91996C(v4);
    if (!v1) {
      return v6;
    }
  }
  return v5;
}

void sub_1DC9EB6AC(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  sub_1DCB891B8();
  id v3 = v2;
  sub_1DCB886B8();
}

uint64_t sub_1DC9EB70C(unint64_t a1, unint64_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      uint64_t v7 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
      sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7B0);
      id v4 = (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
      id v5 = v7;
      goto LABEL_7;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C7B0);
    id v4 = (id)a1;
    id v5 = (id)a2;
LABEL_7:
    char v6 = sub_1DCB886A8();

    return v6 & 1;
  }
  char v6 = 0;
  return v6 & 1;
}

uint64_t sub_1DC9EB7D8(uint64_t a1)
{
  sub_1DCB891A8();
  sub_1DCB891B8();
  id v2 = (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
  sub_1DCB886B8();

  return sub_1DCB891F8();
}

uint64_t sub_1DC9EB840()
{
  return sub_1DC9EB7D8(*v0);
}

void sub_1DC9EB848(uint64_t a1)
{
  sub_1DC9EB6AC(a1, *v1);
}

uint64_t sub_1DC9EB850()
{
  uint64_t v1 = *v0;
  sub_1DCB891A8();
  sub_1DCB891B8();
  id v2 = (id)(v1 & 0x7FFFFFFFFFFFFFFFLL);
  sub_1DCB886B8();

  return sub_1DCB891F8();
}

uint64_t sub_1DC9EB8B4(unint64_t *a1, unint64_t *a2)
{
  return sub_1DC9EB70C(*a1, *a2);
}

unint64_t sub_1DC9EB8C4()
{
  unint64_t result = qword_1EAAA3FB0;
  if (!qword_1EAAA3FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3FB0);
  }
  return result;
}

uint64_t sub_1DC9EB910(long long *a1, uint64_t a2, id a3)
{
  uint64_t v76 = a2;
  uint64_t v77 = a1;
  uint64_t v75 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v71 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v70 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v67 = *(v74 - 1);
  MEMORY[0x1F4188790](v74);
  char v66 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB870B8();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v68 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DC8A03C8();
  if (v3)
  {

    return (uint64_t)a3;
  }
  id v64 = a3;
  char v58 = v9;
  unsigned int v61 = v12;
  uint64_t v59 = v16;
  uint64_t v63 = v20;
  char v60 = v15;
  char v62 = v18;
  uint64_t v65 = v19;
  uint64_t v21 = v75;
  uint64_t v22 = v77;
  unint64_t v23 = sub_1DC9F3A40();
  double v25 = v24;
  unint64_t v26 = v23;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = *(void *)(v63 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  char v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1DCB5F5A0((uint64_t)v30);
  (*(void (**)(uint64_t))(v63 + 32))(ObjectType);
  a3 = v64;
  if (sub_1DCB60C88((uint64_t)v30) != 1 || (uint64_t v31 = sub_1DCB61370(v30)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v37 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  uint64_t v32 = v31;
  if (sub_1DCB59ECC((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1DCB5C080(v32, 0);
  double v34 = v33;
  uint64_t result = sub_1DCB5C510((uint64_t)v32, 0);
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    uint64_t v76 = result;
    long long v35 = v22[1];
    long long v78 = *v22;
    long long v79 = v35;
    long long v36 = v22[3];
    long long v80 = v22[2];
    long long v81 = v36;
    sub_1DC88D0CC((uint64_t)v22);
    sub_1DC9A805C(v76, (uint64_t)v34);
    uint64_t v76 = 0;
    sub_1DC9139C0((uint64_t)v22);
    uint64_t v38 = sub_1DC9A7A54();
    swift_release();
    uint64_t v82 = v38;
    uint64_t v39 = v58;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v58, *MEMORY[0x1E4F1A8F8], v73);
    uint64_t v40 = v66;
    *char v66 = sub_1DC9F4494;
    v40[1] = 0;
    uint64_t v41 = v67;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, void *))(v67 + 104))(v40, *MEMORY[0x1E4F1A920], v74);
    uint64_t v77 = (long long *)sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void *))(v41 + 8))(v40, v74);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v73);
    swift_release();
    uint64_t v42 = swift_allocObject();
    uint64_t v77 = (long long *)v32;
    *(void *)(v42 + 16) = sub_1DC8D9B90;
    *(void *)(v42 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    char v43 = v60;
    char v44 = v61;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v10);
    uint64_t v45 = sub_1DCB5EFCC((uint64_t)v30);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    uint64_t v47 = v69;
    uint64_t v48 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v62, v43, v13);
    uint64_t v49 = v59;
    uint64_t v50 = v48 + *(int *)(v59 + 84);
    *(void *)uint64_t v50 = 0;
    *(void *)(v50 + 8) = 0;
    *(unsigned char *)(v50 + 16) = 2;
    int v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *int v51 = sub_1DC9F7148;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v13);
    uint64_t v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    uint64_t v53 = swift_allocObject();
    uint64_t v74 = v30;
    uint64_t v54 = v63;
    *(void *)(v53 + 16) = v65;
    *(void *)(v53 + 24) = v54;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1DC9F714C;
    *(void *)(v55 + 24) = v52;
    char v56 = (void *)swift_allocObject();
    v56[2] = sub_1DC9F7244;
    v56[3] = v53;
    v56[4] = sub_1DC9F45E4;
    v56[5] = 0;
    v56[6] = sub_1DC9F721C;
    v56[7] = v55;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v57 = v70;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v56, v70);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    a3 = (id)sub_1DCB873A8();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v57, v21);
    sub_1DC88CC04((uint64_t)v62, &qword_1EAA9F230);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9EC358(long long *a1, uint64_t a2, id a3)
{
  uint64_t v76 = a2;
  uint64_t v77 = a1;
  uint64_t v75 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v71 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v70 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v67 = *(v74 - 1);
  MEMORY[0x1F4188790](v74);
  char v66 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB870B8();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v68 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DC8A2BD4();
  if (v3)
  {

    return (uint64_t)a3;
  }
  id v64 = a3;
  char v58 = v9;
  unsigned int v61 = v12;
  uint64_t v59 = v16;
  uint64_t v63 = v20;
  char v60 = v15;
  char v62 = v18;
  uint64_t v65 = v19;
  uint64_t v21 = v75;
  uint64_t v22 = v77;
  unint64_t v23 = sub_1DC9F3A40();
  double v25 = v24;
  unint64_t v26 = v23;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = *(void *)(v63 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  char v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1DCB5F5A0((uint64_t)v30);
  (*(void (**)(uint64_t))(v63 + 32))(ObjectType);
  a3 = v64;
  if (sub_1DCB60C88((uint64_t)v30) != 1 || (uint64_t v31 = sub_1DCB61370(v30)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v37 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  uint64_t v32 = v31;
  if (sub_1DCB59ECC((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1DCB5C080(v32, 0);
  double v34 = v33;
  uint64_t result = sub_1DCB5C510((uint64_t)v32, 0);
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    uint64_t v76 = result;
    long long v35 = v22[1];
    long long v78 = *v22;
    long long v79 = v35;
    long long v36 = v22[3];
    long long v80 = v22[2];
    long long v81 = v36;
    sub_1DC88D0CC((uint64_t)v22);
    sub_1DC9A805C(v76, (uint64_t)v34);
    uint64_t v76 = 0;
    sub_1DC9139C0((uint64_t)v22);
    uint64_t v38 = sub_1DC9A7A54();
    swift_release();
    uint64_t v82 = v38;
    uint64_t v39 = v58;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v58, *MEMORY[0x1E4F1A8F8], v73);
    uint64_t v40 = v66;
    *char v66 = sub_1DC9F4494;
    v40[1] = 0;
    uint64_t v41 = v67;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, void *))(v67 + 104))(v40, *MEMORY[0x1E4F1A920], v74);
    uint64_t v77 = (long long *)sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void *))(v41 + 8))(v40, v74);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v73);
    swift_release();
    uint64_t v42 = swift_allocObject();
    uint64_t v77 = (long long *)v32;
    *(void *)(v42 + 16) = sub_1DC8D9B90;
    *(void *)(v42 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    char v43 = v60;
    char v44 = v61;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v10);
    uint64_t v45 = sub_1DCB5EFCC((uint64_t)v30);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    uint64_t v47 = v69;
    uint64_t v48 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v62, v43, v13);
    uint64_t v49 = v59;
    uint64_t v50 = v48 + *(int *)(v59 + 84);
    *(void *)uint64_t v50 = 0;
    *(void *)(v50 + 8) = 0;
    *(unsigned char *)(v50 + 16) = 2;
    int v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *int v51 = sub_1DC9F7148;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v13);
    uint64_t v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    uint64_t v53 = swift_allocObject();
    uint64_t v74 = v30;
    uint64_t v54 = v63;
    *(void *)(v53 + 16) = v65;
    *(void *)(v53 + 24) = v54;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1DC9F714C;
    *(void *)(v55 + 24) = v52;
    char v56 = (void *)swift_allocObject();
    v56[2] = sub_1DC9F7244;
    v56[3] = v53;
    v56[4] = sub_1DC9F45E4;
    v56[5] = 0;
    v56[6] = sub_1DC9F721C;
    v56[7] = v55;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v57 = v70;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v56, v70);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    a3 = (id)sub_1DCB873A8();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v57, v21);
    sub_1DC88CC04((uint64_t)v62, &qword_1EAA9F230);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9ECDA0(long long *a1, void *a2, void *a3)
{
  uint64_t v72 = a2;
  uint64_t v73 = a1;
  uint64_t v71 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v66 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v65 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  MEMORY[0x1F4188790](v6);
  char v62 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1DCB870B8();
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v68 = v8;
  MEMORY[0x1F4188790](v8);
  unsigned int v61 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v63 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v64 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNSoundActionsDetector();
  uint64_t v19 = (long long *)swift_allocObject();
  uint64_t v20 = a3;
  sub_1DCAC7E08(v20);
  if (v3)
  {

    return (uint64_t)v19;
  }
  char v58 = v12;
  uint64_t v59 = v15;
  uint64_t v57 = v18;
  uint64_t v60 = v21;
  uint64_t v22 = v71;
  uint64_t v19 = v73;
  sub_1DC9F3A40();
  uint64_t v24 = v23;
  sub_1DCAC8C1C();
  unint64_t v26 = sub_1DCAC8BC8();
  sub_1DCB5F5A0((uint64_t)v26);
  if (sub_1DCB60C88((uint64_t)v26) != 1 || (uint64_t v72 = sub_1DCB61370(v26)) == 0)
  {
LABEL_14:
    sub_1DC95773C();
    swift_allocError();
    *double v34 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)v19;
  }
  if (sub_1DCB59ECC((uint64_t)v72) != 1)
  {

    goto LABEL_14;
  }
  uint64_t v56 = 0;
  char v27 = v72;
  sub_1DCB5C080(v72, 0);
  double v29 = v28;
  uint64_t result = sub_1DCB5C510((uint64_t)v27, 0);
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v29 < 9.22337204e18)
  {
    uint64_t v55 = result;
    uint64_t v30 = (uint64_t)v19;
    long long v31 = v19[1];
    long long v74 = *v19;
    long long v75 = v31;
    long long v32 = v19[3];
    long long v76 = v19[2];
    long long v77 = v32;
    sub_1DC88D0CC((uint64_t)v19);
    uint64_t v33 = v56;
    uint64_t v19 = (long long *)sub_1DC9A805C(v55, (uint64_t)v29);
    sub_1DC9139C0(v30);
    uint64_t v56 = v33;
    if (v33)
    {

      swift_release();
    }
    else
    {
      uint64_t v35 = sub_1DC9A7A54();
      swift_release();
      uint64_t v78 = v35;
      long long v36 = v61;
      (*(void (**)(char *, void, uint64_t))(v67 + 104))(v61, *MEMORY[0x1E4F1A8F8], v68);
      uint64_t v37 = v62;
      *char v62 = sub_1DC9F4494;
      v37[1] = 0;
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v69 + 104))(v37, *MEMORY[0x1E4F1A920], v70);
      uint64_t v73 = (long long *)sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
      sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
      sub_1DCB87478();
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v69 + 8))(v37, v70);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v68);
      swift_release();
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = sub_1DC8D9B90;
      *(void *)(v38 + 24) = 0;
      sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
      sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
      uint64_t v39 = v59;
      uint64_t v40 = v58;
      sub_1DCB873D8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v10);
      uint64_t v41 = sub_1DCB5EFCC((uint64_t)v26);
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v41;
      char v43 = v39;
      uint64_t v44 = v64;
      uint64_t v45 = (uint64_t)v57;
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v57, v43, v13);
      uint64_t v46 = v45 + *(int *)(v16 + 84);
      *(void *)uint64_t v46 = 0;
      *(void *)(v46 + 8) = 0;
      *(unsigned char *)(v46 + 16) = 2;
      uint64_t v47 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v45 + *(int *)(v16 + 88));
      *uint64_t v47 = sub_1DC9F7148;
      v47[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v42;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v59, v13);
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v24;
      uint64_t v49 = swift_allocObject();
      uint64_t v73 = (long long *)v26;
      uint64_t v50 = v49;
      *(void *)(v49 + 16) = v60;
      *(void *)(v49 + 24) = &off_1F37EE168;
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = sub_1DC9F714C;
      *(void *)(v51 + 24) = v48;
      uint64_t v52 = (void *)swift_allocObject();
      v52[2] = sub_1DC9F7244;
      uint64_t v52[3] = v50;
      v52[4] = sub_1DC9F45E4;
      v52[5] = 0;
      v52[6] = sub_1DC9F721C;
      v52[7] = v51;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v53 = v65;
      sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v52, v65);
      swift_release();
      swift_release();
      swift_release();
      sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
      uint64_t v19 = (long long *)sub_1DCB873A8();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v53, v22);
      sub_1DC88CC04(v45, &qword_1EAA9F230);
    }
    return (uint64_t)v19;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DC9ED754(long long *a1, uint64_t a2, id a3)
{
  uint64_t v76 = a2;
  long long v77 = a1;
  uint64_t v75 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v71 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v70 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v74 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v67 = *(v74 - 1);
  MEMORY[0x1F4188790](v74);
  uint64_t v66 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB870B8();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v68 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DC934768();
  if (v3)
  {

    return (uint64_t)a3;
  }
  id v64 = a3;
  char v58 = v9;
  unsigned int v61 = v12;
  uint64_t v59 = v16;
  uint64_t v63 = v20;
  uint64_t v60 = v15;
  char v62 = v18;
  uint64_t v65 = v19;
  uint64_t v21 = v75;
  uint64_t v22 = v77;
  unint64_t v23 = sub_1DC9F3A40();
  double v25 = v24;
  unint64_t v26 = v23;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = *(void *)(v63 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  uint64_t v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1DCB5F5A0((uint64_t)v30);
  (*(void (**)(uint64_t))(v63 + 32))(ObjectType);
  a3 = v64;
  if (sub_1DCB60C88((uint64_t)v30) != 1 || (long long v31 = sub_1DCB61370(v30)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v37 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  long long v32 = v31;
  if (sub_1DCB59ECC((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1DCB5C080(v32, 0);
  double v34 = v33;
  uint64_t result = sub_1DCB5C510((uint64_t)v32, 0);
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    uint64_t v76 = result;
    long long v35 = v22[1];
    long long v78 = *v22;
    long long v79 = v35;
    long long v36 = v22[3];
    long long v80 = v22[2];
    long long v81 = v36;
    sub_1DC88D0CC((uint64_t)v22);
    sub_1DC9A805C(v76, (uint64_t)v34);
    uint64_t v76 = 0;
    sub_1DC9139C0((uint64_t)v22);
    uint64_t v38 = sub_1DC9A7A54();
    swift_release();
    uint64_t v82 = v38;
    uint64_t v39 = v58;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v58, *MEMORY[0x1E4F1A8F8], v73);
    uint64_t v40 = v66;
    *uint64_t v66 = sub_1DC9F4494;
    v40[1] = 0;
    uint64_t v41 = v67;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, void *))(v67 + 104))(v40, *MEMORY[0x1E4F1A920], v74);
    long long v77 = (long long *)sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void *))(v41 + 8))(v40, v74);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v73);
    swift_release();
    uint64_t v42 = swift_allocObject();
    long long v77 = (long long *)v32;
    *(void *)(v42 + 16) = sub_1DC8D9B90;
    *(void *)(v42 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    char v43 = v60;
    uint64_t v44 = v61;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v10);
    uint64_t v45 = sub_1DCB5EFCC((uint64_t)v30);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    uint64_t v47 = v69;
    uint64_t v48 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v62, v43, v13);
    uint64_t v49 = v59;
    uint64_t v50 = v48 + *(int *)(v59 + 84);
    *(void *)uint64_t v50 = 0;
    *(void *)(v50 + 8) = 0;
    *(unsigned char *)(v50 + 16) = 2;
    uint64_t v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *uint64_t v51 = sub_1DC9F7148;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v13);
    uint64_t v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    uint64_t v53 = swift_allocObject();
    long long v74 = v30;
    uint64_t v54 = v63;
    *(void *)(v53 + 16) = v65;
    *(void *)(v53 + 24) = v54;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1DC9F714C;
    *(void *)(v55 + 24) = v52;
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = sub_1DC9F7244;
    v56[3] = v53;
    v56[4] = sub_1DC9F45E4;
    v56[5] = 0;
    v56[6] = sub_1DC9F721C;
    v56[7] = v55;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v57 = v70;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v56, v70);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    a3 = (id)sub_1DCB873A8();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v57, v21);
    sub_1DC88CC04((uint64_t)v62, &qword_1EAA9F230);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9EE19C(_OWORD *a1, uint64_t a2, void *a3)
{
  id v73 = a3;
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v70 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v65 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1DCB870B8();
  uint64_t v64 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v66 = *(void *)(v13 - 8);
  uint64_t v67 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v69 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v68 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DC87E988(&qword_1EAA9F230);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EAA9C6D0 != -1)
  {
    uint64_t v63 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v62 = v19;
    swift_once();
    uint64_t v19 = v62;
    uint64_t v21 = v63;
  }
  if (byte_1EAA9C6C8 != 1)
  {
    unint64_t v23 = (void *)type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD00000000000001ALL, 0x80000001DCB91A50);
    swift_willThrow();

    return (uint64_t)v23;
  }
  uint64_t v62 = v19;
  uint64_t v61 = v16;
  uint64_t v63 = v21;
  type metadata accessor for SNAudioLevelMeasurer();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  unint64_t v23 = a1;
  int v24 = sub_1DC9F3A40();
  if (v3)
  {

    swift_release();
    return (uint64_t)v23;
  }
  double v26 = v25;
  sub_1DCB1F784(v24, v25);
  unint64_t v23 = sub_1DCB1F728();
  sub_1DCB5F5A0((uint64_t)v23);
  if (sub_1DCB60C88((uint64_t)v23) != 1) {
    goto LABEL_17;
  }
  uint64_t v28 = sub_1DCB61370(v23);
  if (!v28) {
    goto LABEL_17;
  }
  uint64_t v60 = v23;
  double v29 = v28;
  if (sub_1DCB59ECC((uint64_t)v28) != 1)
  {

    unint64_t v23 = v60;
LABEL_17:
    sub_1DC95773C();
    swift_allocError();
    *long long v35 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)v23;
  }
  sub_1DCB5C080(v29, 0);
  double v31 = v30;
  id v59 = v29;
  uint64_t result = sub_1DCB5C510((uint64_t)v29, 0);
  if ((~*(void *)&v31 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v58 = v22;
  if (v31 < 9.22337204e18)
  {
    uint64_t v32 = result;
    uint64_t v57 = (uint64_t)v31;
    long long v33 = a1[1];
    long long v74 = *a1;
    long long v75 = v33;
    long long v34 = a1[3];
    long long v76 = a1[2];
    long long v77 = v34;
    sub_1DC88D0CC((uint64_t)a1);
    sub_1DC9A805C(v32, v57);
    sub_1DC9139C0((uint64_t)a1);
    uint64_t v36 = sub_1DC9A7A54();
    swift_release();
    uint64_t v78 = v36;
    uint64_t v37 = v64;
    (*(void (**)(char *, void, uint64_t))(v64 + 104))(v12, *MEMORY[0x1E4F1A8F8], v10);
    *uint64_t v9 = sub_1DC9F4494;
    v9[1] = 0;
    uint64_t v38 = v65;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v65 + 104))(v9, *MEMORY[0x1E4F1A920], v7);
    uint64_t v57 = sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v38 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v10);
    swift_release();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_1DC8D9B90;
    *(void *)(v39 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v40 = v67;
    uint64_t v41 = v68;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v40);
    uint64_t v42 = sub_1DCB5EFCC((uint64_t)v60);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v42;
    uint64_t v44 = v69;
    uint64_t v45 = (uint64_t)v63;
    uint64_t v46 = v61;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v63, v41, v61);
    uint64_t v47 = v62;
    uint64_t v48 = v45 + *(int *)(v62 + 84);
    *(void *)uint64_t v48 = 0;
    *(void *)(v48 + 8) = 0;
    *(unsigned char *)(v48 + 16) = 2;
    uint64_t v49 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v45 + *(int *)(v47 + 88));
    *uint64_t v49 = sub_1DC9F7148;
    v49[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v43;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v46);
    uint64_t v50 = swift_allocObject();
    *(double *)(v50 + 16) = v26;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v58;
    *(void *)(v51 + 24) = &off_1F37EB610;
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = sub_1DC9F714C;
    *(void *)(v52 + 24) = v50;
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = sub_1DC9F7244;
    v53[3] = v51;
    v53[4] = sub_1DC9F45E4;
    v53[5] = 0;
    v53[6] = sub_1DC9F721C;
    v53[7] = v52;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v54 = v70;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v53, v70);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    uint64_t v55 = v72;
    unint64_t v23 = (void *)sub_1DCB873A8();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v54, v55);
    sub_1DC88CC04(v45, &qword_1EAA9F230);

    return (uint64_t)v23;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1DC9EEBD0(long long *a1, uint64_t a2, id a3)
{
  uint64_t v76 = a2;
  long long v77 = a1;
  uint64_t v75 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v71 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v70 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v74 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v67 = *(v74 - 1);
  MEMORY[0x1F4188790](v74);
  uint64_t v66 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB870B8();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v68 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DC92FB08();
  if (v3)
  {

    return (uint64_t)a3;
  }
  id v64 = a3;
  uint64_t v58 = v9;
  uint64_t v61 = v12;
  uint64_t v59 = v16;
  uint64_t v63 = v20;
  uint64_t v60 = v15;
  uint64_t v62 = v18;
  uint64_t v65 = v19;
  uint64_t v21 = v75;
  uint64_t v22 = v77;
  unint64_t v23 = sub_1DC9F3A40();
  double v25 = v24;
  unint64_t v26 = v23;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = *(void *)(v63 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  double v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1DCB5F5A0((uint64_t)v30);
  (*(void (**)(uint64_t))(v63 + 32))(ObjectType);
  a3 = v64;
  if (sub_1DCB60C88((uint64_t)v30) != 1 || (double v31 = sub_1DCB61370(v30)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v37 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  uint64_t v32 = v31;
  if (sub_1DCB59ECC((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1DCB5C080(v32, 0);
  double v34 = v33;
  uint64_t result = sub_1DCB5C510((uint64_t)v32, 0);
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    uint64_t v76 = result;
    long long v35 = v22[1];
    long long v78 = *v22;
    long long v79 = v35;
    long long v36 = v22[3];
    long long v80 = v22[2];
    long long v81 = v36;
    sub_1DC88D0CC((uint64_t)v22);
    sub_1DC9A805C(v76, (uint64_t)v34);
    uint64_t v76 = 0;
    sub_1DC9139C0((uint64_t)v22);
    uint64_t v38 = sub_1DC9A7A54();
    swift_release();
    uint64_t v82 = v38;
    uint64_t v39 = v58;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v58, *MEMORY[0x1E4F1A8F8], v73);
    uint64_t v40 = v66;
    *uint64_t v66 = sub_1DC9F4494;
    v40[1] = 0;
    uint64_t v41 = v67;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, void *))(v67 + 104))(v40, *MEMORY[0x1E4F1A920], v74);
    long long v77 = (long long *)sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void *))(v41 + 8))(v40, v74);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v73);
    swift_release();
    uint64_t v42 = swift_allocObject();
    long long v77 = (long long *)v32;
    *(void *)(v42 + 16) = sub_1DC8D9B90;
    *(void *)(v42 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v43 = v60;
    uint64_t v44 = v61;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v10);
    uint64_t v45 = sub_1DCB5EFCC((uint64_t)v30);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    uint64_t v47 = v69;
    uint64_t v48 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v62, v43, v13);
    uint64_t v49 = v59;
    uint64_t v50 = v48 + *(int *)(v59 + 84);
    *(void *)uint64_t v50 = 0;
    *(void *)(v50 + 8) = 0;
    *(unsigned char *)(v50 + 16) = 2;
    uint64_t v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *uint64_t v51 = sub_1DC9F7148;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v13);
    uint64_t v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    uint64_t v53 = swift_allocObject();
    long long v74 = v30;
    uint64_t v54 = v63;
    *(void *)(v53 + 16) = v65;
    *(void *)(v53 + 24) = v54;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1DC9F714C;
    *(void *)(v55 + 24) = v52;
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = sub_1DC9F7244;
    v56[3] = v53;
    v56[4] = sub_1DC9F45E4;
    v56[5] = 0;
    v56[6] = sub_1DC9F721C;
    v56[7] = v55;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v57 = v70;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v56, v70);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    a3 = (id)sub_1DCB873A8();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v57, v21);
    sub_1DC88CC04((uint64_t)v62, &qword_1EAA9F230);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9EF618(uint64_t a1, void *a2, void *a3)
{
  id v74 = a3;
  uint64_t v71 = a2;
  uint64_t v72 = a1;
  uint64_t v70 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v66 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v65 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v68 = *(void *)(v5 - 8);
  uint64_t v69 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v62 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = (void *)sub_1DCB870B8();
  uint64_t v67 = *(v73 - 1);
  MEMORY[0x1F4188790](v73);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v63 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v64 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNAudioOffsetEstimator();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = sub_1DCAB6CE0();
  if (v3)
  {

    return v18;
  }
  uint64_t v57 = v8;
  uint64_t v20 = v73;
  uint64_t v58 = v11;
  uint64_t v56 = v9;
  uint64_t v60 = v14;
  uint64_t v59 = v17;
  uint64_t v61 = v19;
  uint64_t v21 = v70;
  id v22 = v74;
  unint64_t v23 = (long long *)v72;
  sub_1DC9F3A40();
  uint64_t v25 = v24;
  char v27 = sub_1DCAB74D8();
  sub_1DCB5F5A0((uint64_t)v27);
  uint64_t v18 = (uint64_t)v22;
  if (sub_1DCB60C88((uint64_t)v27) != 1 || (uint64_t v71 = sub_1DCB61370(v27)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *double v33 = 0;
    swift_willThrow();

    swift_release();
    return v18;
  }
  if (sub_1DCB59ECC((uint64_t)v71) != 1)
  {

    goto LABEL_13;
  }
  uint64_t v28 = v71;
  sub_1DCB5C080(v71, 0);
  double v30 = v29;
  uint64_t result = sub_1DCB5C510((uint64_t)v28, 0);
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v30 < 9.22337204e18)
  {
    uint64_t v55 = result;
    uint64_t v54 = (uint64_t)v30;
    long long v31 = v23[1];
    long long v75 = *v23;
    long long v76 = v31;
    long long v32 = v23[3];
    long long v77 = v23[2];
    long long v78 = v32;
    sub_1DC88D0CC((uint64_t)v23);
    sub_1DC9A805C(v55, v54);
    sub_1DC9139C0((uint64_t)v23);
    uint64_t v34 = sub_1DC9A7A54();
    swift_release();
    uint64_t v79 = v34;
    (*(void (**)(char *, void, void *))(v67 + 104))(v57, *MEMORY[0x1E4F1A8F8], v20);
    long long v35 = v62;
    *uint64_t v62 = sub_1DC9F4494;
    v35[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v68 + 104))(v35, *MEMORY[0x1E4F1A920], v69);
    uint64_t v72 = sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    long long v36 = v57;
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v68 + 8))(v35, v69);
    (*(void (**)(char *, void *))(v67 + 8))(v36, v73);
    swift_release();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1DC8D9B90;
    *(void *)(v37 + 24) = 0;
    uint64_t v73 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v38 = v58;
    uint64_t v39 = v56;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v39);
    uint64_t v40 = sub_1DCB5EFCC((uint64_t)v27);
    uint64_t v73 = (void *)swift_allocObject();
    v73[2] = v40;
    uint64_t v41 = v64;
    uint64_t v42 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v59, v60, v12);
    uint64_t v43 = v42 + *(int *)(v15 + 84);
    *(void *)uint64_t v43 = 0;
    *(void *)(v43 + 8) = 0;
    *(unsigned char *)(v43 + 16) = 2;
    uint64_t v44 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v42 + *(int *)(v15 + 88));
    uint64_t v45 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v73;
    *uint64_t v44 = sub_1DC9F7148;
    v44[1] = v45;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v60, v12);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v25;
    uint64_t v47 = v46;
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v61;
    *(void *)(v48 + 24) = &off_1F37EE090;
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = sub_1DC9F714C;
    *(void *)(v49 + 24) = v47;
    uint64_t v72 = v47;
    uint64_t v50 = (void *)swift_allocObject();
    uint64_t v73 = v27;
    uint64_t v51 = (uint64_t)v50;
    v50[2] = sub_1DC9F7244;
    v50[3] = v48;
    v50[4] = sub_1DC9F45E4;
    v50[5] = 0;
    v50[6] = sub_1DC9F721C;
    v50[7] = v49;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v52 = v65;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, v51, v65);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    uint64_t v18 = sub_1DCB873A8();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v52, v21);
    sub_1DC88CC04((uint64_t)v59, &qword_1EAA9F230);

    return v18;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9EFFCC(long long *a1, uint64_t a2, id a3)
{
  uint64_t v76 = a2;
  long long v77 = a1;
  uint64_t v75 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v71 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v70 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v74 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v67 = *(v74 - 1);
  MEMORY[0x1F4188790](v74);
  uint64_t v66 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB870B8();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v68 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DC8D301C();
  if (v3)
  {

    return (uint64_t)a3;
  }
  id v64 = a3;
  uint64_t v58 = v9;
  uint64_t v61 = v12;
  uint64_t v59 = v16;
  uint64_t v63 = v20;
  uint64_t v60 = v15;
  uint64_t v62 = v18;
  uint64_t v65 = v19;
  uint64_t v21 = v75;
  id v22 = v77;
  unint64_t v23 = sub_1DC9F3A40();
  double v25 = v24;
  unint64_t v26 = v23;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = *(void *)(v63 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t, double))(v28 + 8))(v26, ObjectType, v28, v25);
  double v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(ObjectType, v28);
  sub_1DCB5F5A0((uint64_t)v30);
  (*(void (**)(uint64_t))(v63 + 32))(ObjectType);
  a3 = v64;
  if (sub_1DCB60C88((uint64_t)v30) != 1 || (long long v31 = sub_1DCB61370(v30)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v37 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  long long v32 = v31;
  if (sub_1DCB59ECC((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1DCB5C080(v32, 0);
  double v34 = v33;
  uint64_t result = sub_1DCB5C510((uint64_t)v32, 0);
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 < 9.22337204e18)
  {
    uint64_t v76 = result;
    long long v35 = v22[1];
    long long v78 = *v22;
    long long v79 = v35;
    long long v36 = v22[3];
    long long v80 = v22[2];
    long long v81 = v36;
    sub_1DC88D0CC((uint64_t)v22);
    sub_1DC9A805C(v76, (uint64_t)v34);
    uint64_t v76 = 0;
    sub_1DC9139C0((uint64_t)v22);
    uint64_t v38 = sub_1DC9A7A54();
    swift_release();
    uint64_t v82 = v38;
    uint64_t v39 = v58;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v58, *MEMORY[0x1E4F1A8F8], v73);
    uint64_t v40 = v66;
    *uint64_t v66 = sub_1DC9F4494;
    v40[1] = 0;
    uint64_t v41 = v67;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, void *))(v67 + 104))(v40, *MEMORY[0x1E4F1A920], v74);
    long long v77 = (long long *)sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void *))(v41 + 8))(v40, v74);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v73);
    swift_release();
    uint64_t v42 = swift_allocObject();
    long long v77 = (long long *)v32;
    *(void *)(v42 + 16) = sub_1DC8D9B90;
    *(void *)(v42 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v43 = v60;
    uint64_t v44 = v61;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v10);
    uint64_t v45 = sub_1DCB5EFCC((uint64_t)v30);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    uint64_t v47 = v69;
    uint64_t v48 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v62, v43, v13);
    uint64_t v49 = v59;
    uint64_t v50 = v48 + *(int *)(v59 + 84);
    *(void *)uint64_t v50 = 0;
    *(void *)(v50 + 8) = 0;
    *(unsigned char *)(v50 + 16) = 2;
    uint64_t v51 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v48 + *(int *)(v49 + 88));
    *uint64_t v51 = sub_1DC9F7148;
    v51[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v46;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v13);
    uint64_t v52 = swift_allocObject();
    *(double *)(v52 + 16) = v25;
    uint64_t v53 = swift_allocObject();
    id v74 = v30;
    uint64_t v54 = v63;
    *(void *)(v53 + 16) = v65;
    *(void *)(v53 + 24) = v54;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1DC9F714C;
    *(void *)(v55 + 24) = v52;
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = sub_1DC9F7244;
    v56[3] = v53;
    v56[4] = sub_1DC9F45E4;
    v56[5] = 0;
    v56[6] = sub_1DC9F721C;
    v56[7] = v55;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v57 = v70;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v56, v70);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    a3 = (id)sub_1DCB873A8();
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v57, v21);
    sub_1DC88CC04((uint64_t)v62, &qword_1EAA9F230);

    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9F0A14(_OWORD *a1, uint64_t a2, void *a3)
{
  id v72 = a3;
  uint64_t v70 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v64 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v63 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v68 = *(v5 - 1);
  id v69 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v60 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB870B8();
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v65 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v62 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNSpeechEmotionEstimator();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  uint64_t v19 = v71;
  sub_1DC9F3A40();
  if (v19)
  {

    swift_release();
    return (uint64_t)a1;
  }
  uint64_t v21 = v20;
  uint64_t v71 = a1;
  uint64_t v58 = v11;
  uint64_t v59 = v14;
  uint64_t v57 = v17;
  uint64_t v22 = v70;
  unint64_t v23 = v72;
  sub_1DCB3A040();
  double v25 = sub_1DCB39FE4();
  sub_1DCB5F5A0((uint64_t)v25);
  a1 = v23;
  if (sub_1DCB60C88((uint64_t)v25) != 1 || (uint64_t v56 = sub_1DCB61370(v25)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *long long v32 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)a1;
  }
  if (sub_1DCB59ECC((uint64_t)v56) != 1)
  {

    goto LABEL_13;
  }
  uint64_t v55 = v18;
  unint64_t v26 = v56;
  sub_1DCB5C080(v56, 0);
  double v28 = v27;
  uint64_t result = sub_1DCB5C510((uint64_t)v26, 0);
  if ((~*(void *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  double v29 = v71;
  if (v28 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v28 < 9.22337204e18)
  {
    uint64_t v54 = result;
    uint64_t v53 = (uint64_t)v28;
    long long v30 = v71[1];
    long long v73 = *v71;
    long long v74 = v30;
    long long v31 = v71[3];
    long long v75 = v71[2];
    long long v76 = v31;
    sub_1DC88D0CC((uint64_t)v71);
    sub_1DC9A805C(v54, v53);
    sub_1DC9139C0((uint64_t)v29);
    uint64_t v33 = sub_1DC9A7A54();
    uint64_t v71 = 0;
    uint64_t v34 = v33;
    swift_release();
    uint64_t v77 = v34;
    (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, *MEMORY[0x1E4F1A8F8], v67);
    long long v35 = v60;
    *uint64_t v60 = sub_1DC9F4494;
    v35[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, id))(v68 + 104))(v35, *MEMORY[0x1E4F1A920], v69);
    uint64_t v54 = sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    long long v36 = v65;
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), id))(v68 + 8))(v35, v69);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v36, v67);
    swift_release();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1DC8D9B90;
    *(void *)(v37 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v38 = v58;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v9);
    uint64_t v39 = sub_1DCB5EFCC((uint64_t)v25);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v39;
    uint64_t v41 = v62;
    uint64_t v42 = (uint64_t)v57;
    uint64_t v43 = v59;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v57, v59, v12);
    uint64_t v44 = v42 + *(int *)(v15 + 84);
    *(void *)uint64_t v44 = 0;
    *(void *)(v44 + 8) = 0;
    *(unsigned char *)(v44 + 16) = 2;
    uint64_t v45 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v42 + *(int *)(v15 + 88));
    *uint64_t v45 = sub_1DC9F7148;
    v45[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v40;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v12);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v21;
    uint64_t v47 = v46;
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v55;
    *(void *)(v48 + 24) = &off_1F37EFD90;
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = sub_1DC9F714C;
    *(void *)(v49 + 24) = v47;
    uint64_t v68 = v47;
    uint64_t v50 = (void *)swift_allocObject();
    id v69 = v25;
    uint64_t v51 = (uint64_t)v50;
    v50[2] = sub_1DC9F7244;
    v50[3] = v48;
    v50[4] = sub_1DC9F45E4;
    v50[5] = 0;
    v50[6] = sub_1DC9F721C;
    v50[7] = v49;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v52 = v63;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, v51, v63);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    a1 = (_OWORD *)sub_1DCB873A8();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v52, v22);
    sub_1DC88CC04(v42, &qword_1EAA9F230);

    return (uint64_t)a1;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9F13B0(_OWORD *a1, uint64_t a2, void *a3)
{
  id v73 = a3;
  uint64_t v71 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v65 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v64 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v69 = *(v5 - 1);
  id v70 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v61 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DCB870B8();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v66 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v63 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNDistanceEstimator();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  uint64_t v19 = v72;
  int v20 = sub_1DC9F3A40();
  if (v19)
  {

    swift_release();
    return (uint64_t)a1;
  }
  double v22 = v21;
  id v72 = a1;
  uint64_t v59 = v11;
  uint64_t v60 = v14;
  uint64_t v58 = v17;
  uint64_t v23 = v71;
  double v24 = v73;
  sub_1DC8CF148(v20, v21);
  unint64_t v26 = sub_1DC8CF0EC();
  sub_1DCB5F5A0((uint64_t)v26);
  a1 = v24;
  if (sub_1DCB60C88((uint64_t)v26) != 1 || (uint64_t v57 = sub_1DCB61370(v26)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v33 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)a1;
  }
  if (sub_1DCB59ECC((uint64_t)v57) != 1)
  {

    goto LABEL_13;
  }
  uint64_t v56 = v18;
  double v27 = v57;
  sub_1DCB5C080(v57, 0);
  double v29 = v28;
  uint64_t result = sub_1DCB5C510((uint64_t)v27, 0);
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  long long v30 = v72;
  if (v29 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v29 < 9.22337204e18)
  {
    uint64_t v55 = result;
    uint64_t v54 = (uint64_t)v29;
    long long v31 = v72[1];
    long long v74 = *v72;
    long long v75 = v31;
    long long v32 = v72[3];
    long long v76 = v72[2];
    long long v77 = v32;
    sub_1DC88D0CC((uint64_t)v72);
    sub_1DC9A805C(v55, v54);
    sub_1DC9139C0((uint64_t)v30);
    uint64_t v34 = sub_1DC9A7A54();
    id v72 = 0;
    uint64_t v35 = v34;
    swift_release();
    uint64_t v78 = v35;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, *MEMORY[0x1E4F1A8F8], v68);
    long long v36 = v61;
    *uint64_t v61 = sub_1DC9F4494;
    v36[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, id))(v69 + 104))(v36, *MEMORY[0x1E4F1A920], v70);
    uint64_t v55 = sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    uint64_t v37 = v66;
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), id))(v69 + 8))(v36, v70);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v68);
    swift_release();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_1DC8D9B90;
    *(void *)(v38 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v39 = v59;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v9);
    uint64_t v40 = sub_1DCB5EFCC((uint64_t)v26);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v40;
    uint64_t v42 = v63;
    uint64_t v43 = (uint64_t)v58;
    uint64_t v44 = v60;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v58, v60, v12);
    uint64_t v45 = v43 + *(int *)(v15 + 84);
    *(void *)uint64_t v45 = 0;
    *(void *)(v45 + 8) = 0;
    *(unsigned char *)(v45 + 16) = 2;
    uint64_t v46 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v43 + *(int *)(v15 + 88));
    *uint64_t v46 = sub_1DC9F7148;
    v46[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v41;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v12);
    uint64_t v47 = swift_allocObject();
    *(double *)(v47 + 16) = v22;
    uint64_t v48 = v47;
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v56;
    *(void *)(v49 + 24) = &off_1F37EA6C8;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = sub_1DC9F714C;
    *(void *)(v50 + 24) = v48;
    uint64_t v69 = v48;
    uint64_t v51 = (void *)swift_allocObject();
    id v70 = v26;
    uint64_t v52 = (uint64_t)v51;
    v51[2] = sub_1DC9F7244;
    v51[3] = v49;
    v51[4] = sub_1DC9F45E4;
    v51[5] = 0;
    v51[6] = sub_1DC9F721C;
    v51[7] = v50;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v53 = v64;
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, v52, v64);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    a1 = (_OWORD *)sub_1DCB873A8();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v53, v23);
    sub_1DC88CC04(v43, &qword_1EAA9F230);

    return (uint64_t)a1;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9F1D4C(void *a1, char *a2, void *a3)
{
  long long v80 = a2;
  uint64_t v70 = sub_1DC87E988(&qword_1EAAA3FE8);
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  long long v79 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v75 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = (uint64_t (**)@<X0>(uint64_t *@<X8>))((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1DCB870B8();
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  MEMORY[0x1F4188790](v8);
  long long v76 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1DC87E988(&qword_1EAA9EFF0);
  uint64_t v69 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  uint64_t v77 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DC87E988(&qword_1EAA9F230);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNShazamSignatureGenerator();
  swift_allocObject();
  uint64_t v18 = a3;
  uint64_t v19 = sub_1DCA80C84(v18);
  int v20 = v81;
  double v21 = a1;
  int v22 = sub_1DC9F3A40();
  if (v20)
  {

    swift_release();
    return (uint64_t)v21;
  }
  double v24 = v23;
  uint64_t v67 = (long long *)a1;
  long long v80 = v11;
  uint64_t v65 = v15;
  uint64_t v26 = v77;
  uint64_t v25 = v78;
  long long v81 = v14;
  uint64_t v66 = v12;
  uint64_t v27 = (uint64_t)v79;
  sub_1DCA8164C(v22, v23);
  double v21 = (void *)v19;
  double v29 = sub_1DCA815F0();
  long long v30 = v29;
  sub_1DCB5F5A0((uint64_t)v29);
  if (sub_1DCB60C88((uint64_t)v30) != 1 || (long long v31 = sub_1DCB61370(v30)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *long long v36 = 0;
    swift_willThrow();

    swift_release();
    return (uint64_t)v21;
  }
  double v21 = v31;
  if (sub_1DCB59ECC((uint64_t)v31) != 1)
  {

    goto LABEL_13;
  }
  sub_1DCB5C080(v21, 0);
  double v33 = v32;
  uint64_t result = sub_1DCB5C510((uint64_t)v21, 0);
  if ((~*(void *)&v33 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v64 = v21;
  if (v33 < 9.22337204e18)
  {
    uint64_t v63 = result;
    uint64_t v62 = (uint64_t)v33;
    long long v34 = v67[1];
    long long v82 = *v67;
    long long v83 = v34;
    long long v35 = v67[3];
    long long v84 = v67[2];
    long long v85 = v35;
    sub_1DC88D0CC((uint64_t)v67);
    uint64_t v63 = sub_1DC9A805C(v63, v62);
    sub_1DC9139C0((uint64_t)v67);
    uint64_t v37 = sub_1DC9A7A54();
    uint64_t v67 = (long long *)v30;
    uint64_t v38 = v37;
    swift_release();
    uint64_t v86 = v38;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v76, *MEMORY[0x1E4F1A8F8], v73);
    uint64_t v39 = v68;
    *uint64_t v68 = sub_1DC9F4494;
    v39[1] = 0;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), void, uint64_t))(v74 + 104))(v39, *MEMORY[0x1E4F1A920], v75);
    uint64_t v63 = sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v74 + 8))(v39, v75);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v76, v73);
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_1DC8D9B90;
    *(void *)(v40 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    uint64_t v41 = v80;
    sub_1DCB873D8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v25);
    uint64_t v42 = sub_1DCB5EFCC((uint64_t)v67);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v42;
    uint64_t v44 = v26;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
    uint64_t v46 = v17;
    uint64_t v61 = v17;
    uint64_t v47 = v17;
    uint64_t v48 = v81;
    uint64_t v49 = v66;
    v45(v47, v81, v66);
    uint64_t v50 = v65;
    uint64_t v51 = &v46[*(int *)(v65 + 84)];
    *(void *)uint64_t v51 = 0;
    *((void *)v51 + 1) = 0;
    v51[16] = 2;
    uint64_t v52 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v46[*(int *)(v50 + 88)];
    *uint64_t v52 = sub_1DC9F7148;
    v52[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v43;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v49);
    uint64_t v53 = swift_allocObject();
    *(double *)(v53 + 16) = v24;
    uint64_t v54 = v53;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v19;
    *(void *)(v55 + 24) = &off_1F37F10D0;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = sub_1DC9F714C;
    *(void *)(v56 + 24) = v54;
    long long v81 = (char *)v54;
    uint64_t v57 = (void *)swift_allocObject();
    uint64_t v60 = v19;
    uint64_t v58 = (uint64_t)v57;
    v57[2] = sub_1DC9F7244;
    v57[3] = v55;
    void v57[4] = sub_1DC9F45E4;
    v57[5] = 0;
    v57[6] = sub_1DC9F721C;
    v57[7] = v56;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, v58, v27);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    uint64_t v59 = v70;
    double v21 = (void *)sub_1DCB873A8();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v27, v59);
    sub_1DC88CC04((uint64_t)v61, &qword_1EAA9F230);

    return (uint64_t)v21;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1DC9F26F4(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1DC87E988(&qword_1EAAA3FE8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v7);
  sub_1DC88D550();
  uint64_t v54 = v8;
  uint64_t v55 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v52 = v9;
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  uint64_t v51 = v11;
  sub_1DCB870B8();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v12);
  sub_1DC8A22D0();
  sub_1DC87E988(&qword_1EAA9EFF0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v13);
  sub_1DC8A22D0();
  uint64_t v14 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  sub_1DC89D4E0();
  uint64_t v53 = v15;
  MEMORY[0x1F4188790](v16);
  sub_1DC89D9A0();
  uint64_t v17 = sub_1DC87E988(&qword_1EAA9F230);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v18);
  sub_1DC89D970();
  sub_1DCA657C4();
  if (v3)
  {

    return (uint64_t)a3;
  }
  uint64_t v47 = v17;
  uint64_t v49 = v20;
  uint64_t v48 = v5;
  uint64_t v50 = v19;
  sub_1DC9F3A40();
  uint64_t v22 = v21;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = sub_1DC9F7320();
  v25(v24, ObjectType, v17);
  uint64_t v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(ObjectType, v17);
  sub_1DCB5F5A0((uint64_t)v27);
  (*(void (**)(uint64_t))(v49 + 32))(ObjectType);
  if (sub_1DCB60C88((uint64_t)v27) != 1 || (double v28 = sub_1DCB61370(v27)) == 0)
  {
LABEL_13:
    sub_1DC95773C();
    swift_allocError();
    *double v32 = 0;
    swift_willThrow();

    swift_unknownObjectRelease();
    return (uint64_t)a3;
  }
  double v29 = v28;
  if (sub_1DCB59ECC((uint64_t)v28) != 1)
  {

    goto LABEL_13;
  }
  sub_1DCB5C080(v29, 0);
  double v31 = v30;
  uint64_t result = sub_1DCB5C510((uint64_t)v29, 0);
  if ((~*(void *)&v31 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v31 < 9.22337204e18)
  {
    uint64_t v56 = result;
    sub_1DC88D0CC(a1);
    sub_1DC9A805C(v56, (uint64_t)v31);
    sub_1DC9139C0(a1);
    sub_1DC9A7A54();
    swift_release();
    sub_1DC8BAE70();
    v33();
    *uint64_t v51 = sub_1DC9F4494;
    v51[1] = 0;
    sub_1DC8BAE70();
    v34();
    sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
    sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
    sub_1DCB87478();
    (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v52 + 8))(v51, v55);
    sub_1DC88D5C8();
    v35();
    swift_release();
    uint64_t v36 = sub_1DC886810();
    uint64_t v58 = v29;
    *(void *)(v36 + 16) = sub_1DC8D9B90;
    *(void *)(v36 + 24) = 0;
    sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
    sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
    sub_1DCB873D8();
    swift_release();
    sub_1DC88D5C8();
    v37();
    uint64_t v38 = sub_1DCB5EFCC((uint64_t)v27);
    uint64_t v39 = sub_1DC8BABC0();
    *(void *)(v39 + 16) = v38;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v4, v48, v14);
    sub_1DC9F7350(v4 + *(int *)(v47 + 84));
    uint64_t v41 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v4 + v40);
    *uint64_t v41 = sub_1DC9F7148;
    v41[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v39;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v48, v14);
    uint64_t v42 = sub_1DC8BABC0();
    *(void *)(v42 + 16) = v22;
    uint64_t v43 = sub_1DC886810();
    *(void *)(v43 + 16) = v50;
    *(void *)(v43 + 24) = v49;
    uint64_t v44 = sub_1DC886810();
    *(void *)(v44 + 16) = sub_1DC9F714C;
    *(void *)(v44 + 24) = v42;
    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = sub_1DC9F7244;
    v45[3] = v43;
    v45[4] = sub_1DC9F45E4;
    v45[5] = 0;
    v45[6] = sub_1DC9F721C;
    v45[7] = v44;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v45, v54);
    swift_release();
    swift_release();
    swift_release();
    sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
    a3 = (void *)sub_1DCB873A8();
    swift_unknownObjectRelease();
    swift_release();

    sub_1DC88D5C8();
    v46();
    sub_1DC88CC04(v4, &qword_1EAA9F230);
    sub_1DC9F7338();
    return (uint64_t)a3;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_1DC9F2FAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1DC87E988(&qword_1EAAA3FE8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  uint64_t v60 = v9;
  uint64_t v58 = sub_1DC87E988((uint64_t *)&unk_1EAAA3CA0);
  sub_1DC89D4E0();
  uint64_t v63 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC88D550();
  uint64_t v61 = v12;
  uint64_t v64 = sub_1DCB870B8();
  sub_1DC89D4E0();
  uint64_t v62 = v13;
  MEMORY[0x1F4188790](v14);
  sub_1DC88D550();
  uint64_t v57 = v15;
  sub_1DC87E988(&qword_1EAA9EFF0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v16);
  sub_1DC89D9A0();
  uint64_t v17 = sub_1DC87E988((uint64_t *)&unk_1EAAA3FF0);
  sub_1DC89D4E0();
  uint64_t v59 = v18;
  MEMORY[0x1F4188790](v19);
  sub_1DC89D970();
  uint64_t v20 = sub_1DC87E988(&qword_1EAA9F230);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v21);
  sub_1DC8A22D0();
  uint64_t v24 = v23 - v22;
  uint64_t v65 = *(void *)a2;
  uint64_t v69 = *(void *)(a2 + 8);
  char v25 = *(unsigned char *)(a2 + 49);
  char v26 = *(unsigned char *)(a2 + 50);
  uint64_t v68 = *(void *)(a2 + 56);
  uint64_t v27 = *(unsigned __int8 *)(a2 + 64);
  uint64_t v28 = a3();
  if (!v79)
  {
    uint64_t v79 = v28;
    uint64_t v72 = v29;
    uint64_t v56 = v6;
    uint64_t v73 = v65;
    uint64_t v74 = v69;
    sub_1DC9F7284();
    char v75 = v25;
    char v76 = v26;
    sub_1DC9F72C8();
    uint64_t v77 = v68;
    char v78 = v27;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(a6 + 8))(&v73, a5, a6);
    uint64_t v31 = v30;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v33 = sub_1DC9F7320();
    v34(v33, ObjectType, v27);
    long long v35 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(ObjectType, v27);
    sub_1DCB5F5A0((uint64_t)v35);
    (*(void (**)(uint64_t))(v72 + 32))(ObjectType);
    if (sub_1DCB60C88((uint64_t)v35) == 1)
    {
      uint64_t v36 = sub_1DCB61370(v35);
      if (v36)
      {
        uint64_t v37 = v36;
        if (sub_1DCB59ECC((uint64_t)v36) == 1)
        {
          sub_1DCB5C080(v37, 0);
          double v39 = v38;
          sub_1DCB5C510((uint64_t)v37, 0);
          uint64_t v73 = v65;
          uint64_t v74 = v69;
          sub_1DC9F7284();
          char v75 = v25;
          char v76 = v26;
          sub_1DC9F72C8();
          uint64_t v77 = v68;
          char v78 = v27;
          if ((~*(void *)&v39 & 0x7FF0000000000000) != 0)
          {
            if (v39 > -9.22337204e18)
            {
              uint64_t v70 = v37;
              if (v39 < 9.22337204e18)
              {
                (*(void (**)(uint64_t *, void, uint64_t, uint64_t, uint64_t))(a6 + 16))(&v73, v40, (uint64_t)v39, a5, a6);
                uint64_t v42 = sub_1DC9A7A54();
                swift_release();
                uint64_t v73 = v42;
                sub_1DC8BAE70();
                v43();
                *uint64_t v61 = sub_1DC9F4494;
                v61[1] = 0;
                sub_1DC8BAE70();
                v44();
                sub_1DC87E988((uint64_t *)&unk_1EAA9F020);
                sub_1DC88CF34((unint64_t *)&unk_1EAAA5180, (uint64_t *)&unk_1EAA9F020);
                sub_1DCB87478();
                (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v63 + 8))(v61, v58);
                (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v57, v64);
                swift_release();
                uint64_t v45 = sub_1DC886810();
                *(void *)(v45 + 16) = sub_1DC8D9B90;
                *(void *)(v45 + 24) = 0;
                sub_1DC87E988((uint64_t *)&unk_1EAAA4000);
                sub_1DC88CF34(&qword_1EAA9F038, &qword_1EAA9EFF0);
                sub_1DCB873D8();
                swift_release();
                sub_1DC88D5C8();
                v46();
                uint64_t v47 = sub_1DCB5EFCC((uint64_t)v35);
                uint64_t v48 = sub_1DC8BABC0();
                *(void *)(v48 + 16) = v47;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v24, v56, v17);
                sub_1DC9F7350(v24 + *(int *)(v20 + 84));
                uint64_t v50 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v24 + v49);
                *uint64_t v50 = sub_1DC8E7204;
                v50[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v48;
                (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v56, v17);
                uint64_t v51 = sub_1DC8BABC0();
                *(void *)(v51 + 16) = v31;
                uint64_t v52 = sub_1DC886810();
                *(void *)(v52 + 16) = v79;
                *(void *)(v52 + 24) = v72;
                uint64_t v53 = sub_1DC886810();
                *(void *)(v53 + 16) = sub_1DC9F69FC;
                *(void *)(v53 + 24) = v51;
                uint64_t v54 = (void *)swift_allocObject();
                v54[2] = sub_1DC9F6A18;
                v54[3] = v52;
                uint64_t v54[4] = sub_1DC9F45E4;
                v54[5] = 0;
                v54[6] = sub_1DC9F6A34;
                v54[7] = v53;
                swift_unknownObjectRetain();
                swift_retain();
                swift_retain();
                swift_retain();
                sub_1DC9F49F4(0, (uint64_t)sub_1DC9F6A54, (uint64_t)v54, v60);
                swift_release();
                swift_release();
                swift_release();
                sub_1DC88CF34(&qword_1EAAA4010, &qword_1EAAA3FE8);
                sub_1DCB873A8();
                swift_unknownObjectRelease();
                swift_release();

                sub_1DC88D5C8();
                v55();
                sub_1DC88CC04(v24, &qword_1EAA9F230);
                return;
              }
              goto LABEL_15;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
LABEL_15:
          __break(1u);
          return;
        }
      }
    }
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v41 = 0;
    swift_willThrow();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1DC9F39B0(void *a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v2 = sub_1DC9F417C(a1);
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

unint64_t sub_1DC9F3A40()
{
  unint64_t result = *(void *)(v0 + 8);
  if ((result & 0x8000000000000000) != 0)
  {
    sub_1DC8AF148();
    sub_1DC9872D8();
LABEL_6:
    unint64_t result = sub_1DC987350();
    __break(1u);
    return result;
  }
  if (HIDWORD(result))
  {
    sub_1DC8AF148();
    sub_1DC9872C8();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1DC9F3AC8(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  long long v16 = a1[1];
  long long v17 = *a1;
  uint64_t v8 = *((void *)a1 + 4);
  uint64_t v7 = *((void *)a1 + 5);
  char v9 = *((unsigned char *)a1 + 48);
  char v10 = *((unsigned char *)a1 + 49);
  char v11 = *((unsigned char *)a1 + 50);
  LOBYTE(a1) = *((unsigned char *)a1 + 64);
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a2, a4);
  v20[0] = v17;
  v20[1] = v16;
  uint64_t v21 = v8;
  uint64_t v22 = v7;
  char v23 = v9;
  char v24 = v10;
  char v25 = v11;
  sub_1DC9F725C();
  char v26 = (char)a1;
  uint64_t v13 = (*(uint64_t (**)(_OWORD *, uint64_t))(v12 + 8))(v20, AssociatedTypeWitness);
  sub_1DC88D5C8();
  v14();
  return v13;
}

uint64_t sub_1DC9F3C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  char v8 = *(unsigned char *)(a1 + 52) & 1;
  char v9 = *(unsigned char *)(a1 + 53) & 1;
  long long __src = *(_OWORD *)a1;
  uint64_t v15 = v4;
  uint64_t v16 = v5;
  long long v17 = *(_OWORD *)(a1 + 32);
  v10.i32[1] = DWORD1(v17);
  v10.i32[0] = *(_DWORD *)(a1 + 48);
  int16x8_t v11 = (int16x8_t)vmovl_u8(v10);
  v11.i64[0] &= 0xFF01FF01FF01FF01;
  unsigned __int32 v18 = vmovn_s16(v11).u32[0];
  char v19 = v8;
  char v20 = v9;
  uint64_t v21 = v6;
  char v22 = v7 & 1;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DC882264(a1);
  uint64_t v12 = sub_1DC9A7F88(&__src);
  sub_1DC88CABC(a1);
  swift_release();
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_1DC9F3D60(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  long long v18 = a1[1];
  long long v19 = *a1;
  uint64_t v10 = *((void *)a1 + 4);
  uint64_t v9 = *((void *)a1 + 5);
  char v11 = *((unsigned char *)a1 + 48);
  char v12 = *((unsigned char *)a1 + 49);
  char v13 = *((unsigned char *)a1 + 50);
  LOBYTE(a1) = *((unsigned char *)a1 + 64);
  (*(void (**)(uint64_t, uint64_t))(a6 + 16))(a4, a6);
  v24[0] = v19;
  v24[1] = v18;
  uint64_t v25 = v10;
  uint64_t v26 = v9;
  char v27 = v11;
  char v28 = v12;
  char v29 = v13;
  sub_1DC9F725C();
  char v30 = (char)a1;
  uint64_t v15 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(v14 + 16))(v24, a2, a3, AssociatedTypeWitness);
  sub_1DC88D5C8();
  v16();
  return v15;
}

uint64_t sub_1DC9F3EFC()
{
  sub_1DCACBA4C();
  if (v1) {
    return v0;
  }
  unint64_t v0 = v2;
  swift_release();
  if ((v0 & 0x8000000000000000) != 0)
  {
    sub_1DC8AF148();
    sub_1DC9872D8();
  }
  else
  {
    if (!HIDWORD(v0)) {
      return v0;
    }
    sub_1DC8AF148();
    sub_1DC9872C8();
  }
  uint64_t result = sub_1DC987350();
  __break(1u);
  return result;
}

void sub_1DC9F3FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1DC9F4888();
  sub_1DC9F48D4();
  sub_1DC9F4920();
  sub_1DC9A79A8(a2, a3, (uint64_t)&v14);
  long long v13 = v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1DC9A8144((uint64_t)&v13, a4, WitnessTable, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17, v18, v19, v20, vars0,
    vars8);
}

uint64_t sub_1DC9F4068()
{
  return sub_1DC9F3EFC();
}

void sub_1DC9F4080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1DC9F4098(long long *a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DC9F3AC8(a1, a2, v5, WitnessTable);
}

uint64_t sub_1DC9F40FC(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1DC9F3D60(a1, a2, a3, a4, v9, WitnessTable);
}

uint64_t sub_1DC9F417C(void *a1)
{
  unint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  sub_1DC9F72A8();
  LOBYTE(v5) = *(unsigned char *)(v5 + 64);
  __src[0] = v6;
  __src[1] = v2;
  __src[2] = v7;
  __src[3] = v3;
  __src[4] = v8;
  __src[5] = v4;
  char v19 = v9;
  char v20 = v10;
  char v21 = v11;
  char v22 = v12;
  char v23 = v13;
  char v24 = v14;
  uint64_t v25 = v15;
  char v26 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1DC91B018(__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v1) {
    return v2;
  }
  unint64_t v2 = *(void *)(v16 + 24);
  swift_release();
  if ((v2 & 0x8000000000000000) != 0)
  {
    sub_1DC8AF148();
    sub_1DC9872D8();
  }
  else
  {
    if (!HIDWORD(v2)) {
      return v2;
    }
    sub_1DC8AF148();
    sub_1DC9872C8();
  }
  uint64_t result = sub_1DC987350();
  __break(1u);
  return result;
}

uint64_t sub_1DC9F42C8(void *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[5];
  sub_1DC9F72A8();
  LOBYTE(v4) = *(unsigned char *)(v4 + 64);
  __src[0] = v5;
  __src[1] = v1;
  __src[2] = v6;
  __src[3] = v2;
  __src[4] = v7;
  __src[5] = v3;
  char v20 = v8;
  char v21 = v9;
  char v22 = v10;
  char v23 = v11;
  char v24 = v12;
  char v25 = v13;
  uint64_t v26 = v14;
  char v27 = v4;
  uint64_t v28 = v15;
  uint64_t v29 = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1DC9A7F88(__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v17;
}

uint64_t sub_1DC9F439C(void *a1)
{
  return sub_1DC9F417C(a1);
}

uint64_t sub_1DC9F43B4(void *a1)
{
  return sub_1DC9F42C8(a1);
}

uint64_t sub_1DC9F43CC(void *__src)
{
  memcpy(__dst, __src, 0x41uLL);
  long long v2 = v1[1];
  long long v5 = *v1;
  long long v6 = v2;
  uint64_t v7 = *((void *)v1 + 4);
  return sub_1DC9F39B0(__dst);
}

uint64_t sub_1DC9F4424(void *__src, uint64_t a2, uint64_t a3)
{
  memcpy(__dst, __src, 0x41uLL);
  long long v6 = v3[1];
  long long v9 = *v3;
  long long v10 = v6;
  uint64_t v11 = *((void *)v3 + 4);
  return sub_1DC9F3C64((uint64_t)__dst, a2, a3);
}

uint64_t sub_1DC9F4494@<X0>(uint64_t *a1@<X8>)
{
  sub_1DC95773C();
  uint64_t result = swift_allocError();
  *a1 = result;
  *uint64_t v3 = 3;
  return result;
}

CMTimeValue sub_1DC9F44DC(CMTimeValue result, uint64_t a2, CMTimeEpoch a3, double a4)
{
  if ((~*(void *)&a4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a4 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a4 < 2147483650.0)
  {
    time.value = result;
    *(void *)&time.timescale = a2;
    time.epoch = a3;
    CMTimeConvertScale(&v4, &time, (int)a4, kCMTimeRoundingMethod_RoundTowardZero);
    return v4.value;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1DC9F4574(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 16))(ObjectType);
  if (!v3)
  {
    *a1 = a2;
    a1[1] = a3;
    swift_unknownObjectRetain();
  }
  return v8;
}

uint64_t sub_1DC9F45E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2);
}

uint64_t sub_1DC9F4634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a4 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, a3, a5, a6, ObjectType, v10);
}

uint64_t sub_1DC9F46BC@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DCB88718();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)v12 - v8;
  v12[1] = *a1;
  swift_unknownObjectRetain();
  sub_1DC87E988(&qword_1EAA9E960);
  if (swift_dynamicCast())
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v9, a2);
  }
  else
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1DC95773C();
    swift_allocError();
    *uint64_t v11 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1DC9F485C(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9F1D4C);
}

unint64_t sub_1DC9F4888()
{
  unint64_t result = qword_1EAAA3FC0;
  if (!qword_1EAAA3FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3FC0);
  }
  return result;
}

unint64_t sub_1DC9F48D4()
{
  unint64_t result = qword_1EAAA3FC8;
  if (!qword_1EAAA3FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3FC8);
  }
  return result;
}

unint64_t sub_1DC9F4920()
{
  unint64_t result = qword_1EAAA3FD0;
  if (!qword_1EAAA3FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA3FD0);
  }
  return result;
}

uint64_t sub_1DC9F496C()
{
  return swift_deallocObject();
}

uint64_t sub_1DC9F497C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9F46BC(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1DC9F499C(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, sub_1DC9EF618);
}

uint64_t sub_1DC9F49C8(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9ECDA0);
}

uint64_t sub_1DC9F49F4@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  v20[1] = a4;
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA4018);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA4020);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  *(unsigned char *)(v15 + 32) = a1;
  sub_1DC8B9F3C(v5, (uint64_t)v11, &qword_1EAA9F230);
  uint64_t v16 = &v11[*(int *)(v9 + 52)];
  *(void *)uint64_t v16 = sub_1DC9F6AA4;
  *((void *)v16 + 1) = v15;
  uint64_t v17 = &v11[*(int *)(v9 + 56)];
  *(void *)uint64_t v17 = sub_1DC9F6878;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1DC9F68A4;
  *(void *)(v18 + 24) = 0;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA4028);
  sub_1DC88CF34(&qword_1EAAA4030, &qword_1EAAA4018);
  sub_1DC88CF34(&qword_1EAAA4038, &qword_1EAAA4028);
  sub_1DCB874D8();
  swift_release();
  sub_1DC88CC04((uint64_t)v11, &qword_1EAAA4018);
  sub_1DC87E988(&qword_1EAA9E960);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA4040, &qword_1EAAA4020);
  sub_1DCB874A8();
  return sub_1DC88CC04((uint64_t)v14, &qword_1EAAA4020);
}

uint64_t sub_1DC9F4CB0@<X0>(uint64_t a1@<X8>)
{
  sub_1DC9F7308(a1);
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA4080);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v8);
  sub_1DC909E14();
  sub_1DC87E988(&qword_1EAAA4088);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v9);
  sub_1DC981E40();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v4;
  *(unsigned char *)(v10 + 32) = v1;
  sub_1DC8B9F3C(v5, v2, &qword_1EAAA4090);
  uint64_t v11 = (void *)(v2 + *(int *)(v7 + 52));
  *uint64_t v11 = sub_1DC9F6BB0;
  v11[1] = v10;
  uint64_t v12 = (void *)(v2 + *(int *)(v7 + 56));
  *uint64_t v12 = sub_1DC9F6878;
  v12[1] = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1DC9F6BEC;
  *(void *)(v13 + 24) = 0;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA4098);
  sub_1DC88CF34(&qword_1EAAA40A0, &qword_1EAAA4080);
  sub_1DC88CF34(&qword_1EAAA40A8, &qword_1EAAA4098);
  sub_1DC9F72E4();
  swift_release();
  sub_1DC88CC04(v2, &qword_1EAAA4080);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA40B0, &qword_1EAAA4088);
  sub_1DCB874A8();
  return sub_1DC88CC04(v3, &qword_1EAAA4088);
}

uint64_t sub_1DC9F4F0C@<X0>(uint64_t a1@<X8>)
{
  sub_1DC9F7308(a1);
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA40E0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v8);
  sub_1DC909E14();
  sub_1DC87E988(&qword_1EAAA40E8);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v9);
  sub_1DC89D970();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v4;
  *(unsigned char *)(v10 + 32) = v1;
  sub_1DC8B9F3C(v5, v2, &qword_1EAA9F230);
  uint64_t v11 = (void *)(v2 + *(int *)(v7 + 52));
  *uint64_t v11 = sub_1DC9F6D74;
  v11[1] = v10;
  uint64_t v12 = (void *)(v2 + *(int *)(v7 + 56));
  *uint64_t v12 = sub_1DC9F6878;
  v12[1] = 0;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1DC9F6DB0;
  *(void *)(v13 + 24) = 0;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA40F0);
  sub_1DC88CF34(&qword_1EAAA40F8, &qword_1EAAA40E0);
  sub_1DC88CF34((unint64_t *)&unk_1EAAA4100, &qword_1EAAA40F0);
  sub_1DC9F72E4();
  swift_release();
  sub_1DC88CC04(v2, &qword_1EAAA40E0);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9D0E8);
  sub_1DC88CF34(&qword_1EAAA4110, &qword_1EAAA40E8);
  sub_1DCB874A8();
  return sub_1DC88CC04(v3, &qword_1EAAA40E8);
}

uint64_t sub_1DC9F5180(uint64_t a1, void **a2, void (*a3)(_OWORD *, void *, void **, uint64_t, uint64_t, unint64_t *, int *, uint64_t *))
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  long long v4 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 32);
  uint64_t v26 = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v27 = v6;
  unint64_t v23 = 0;
  uint64_t v8 = v6 - v5;
  if (v6 < v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (__OFSUB__(v6, v5))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v10 = a2;
  uint64_t v11 = *a2;
  sub_1DC88CD74(a1);
  sub_1DCB61B48((uint64_t)v11);
  if (sub_1DCB60FFC((uint64_t)v11))
  {
    uint64_t v12 = sub_1DCB6175C(v11);
    if (!v12)
    {
      __break(1u);
      sub_1DC8AF148();
      sub_1DC9872D8();
LABEL_17:
      uint64_t result = sub_1DC987350();
      __break(1u);
      return result;
    }
    uint64_t v13 = v12;
    unsigned int v14 = sub_1DCB5B768((uint64_t)v12, 0);

    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v15 = 0;
  }
  unint64_t v16 = v23;
  if ((unsigned __int128)(v15 * (__int128)(uint64_t)v23) >> 64 != (uint64_t)(v15 * v23) >> 63) {
LABEL_14:
  }
    __break(1u);
  uint64_t v17 = sub_1DCA07864(v15 * v23);
  *(void *)(v17 + 16) = v15 * v23;
  v22[0] = v17;
  v22[1] = v15;
  _OWORD v22[2] = v16;
  uint64_t v21 = 0;
  if (HIDWORD(v16))
  {
    sub_1DC8AF148();
    sub_1DC9872C8();
    goto LABEL_17;
  }
  int v20 = v16;
  a3(v24, v22, v10, v8, v7, &v23, &v20, &v21);
  if (!v3)
  {
    uint64_t v18 = v10[2];
    swift_beginAccess();
    uint64_t v10 = (void **)v18[2];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease();
    v18[2] = MEMORY[0x1E4FBC860];
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v10;
}

id sub_1DC9F53C8(uint64_t (*a1)(id *, uint64_t, uint64_t), uint64_t a2, char a3, uint64_t *a4, uint64_t a5)
{
  sub_1DC87E988(a4);
  uint64_t v9 = sub_1DC8BABC0();
  *(void *)(v9 + 16) = MEMORY[0x1E4FBC860];
  swift_retain();
  id v10 = (id)a1(&v38, a5, v9);
  swift_release();
  if (v5)
  {
    swift_release();
    return v10;
  }
  if (a3)
  {
    if (qword_1EAA9CB50 != -1) {
      swift_once();
    }
    if (byte_1EAAFF828 == 1)
    {
      if (qword_1EAA9CAC0 != -1) {
        swift_once();
      }
      id v11 = objc_msgSend((id)qword_1EAA9CAB8, sel_dictionaryRepresentation);
      sub_1DCB877B8();

      id v12 = sub_1DCAA49F8();
      char v14 = v13;
      swift_bridgeObjectRelease();
      id v15 = 0;
      if ((v14 & 1) != 0 || !v12) {
        goto LABEL_23;
      }
      uint64_t v16 = self;
      int v17 = sub_1DCB67C0C(v16, v10);
      type metadata accessor for SNUtils();
      sub_1DCB217E4((uint64_t)&v37);
      sub_1DC8B9F3C((uint64_t)&v37, (uint64_t)v36, &qword_1EAA9CAB0);
      if (v36[3])
      {
        if ((swift_dynamicCast() & 1) != 0 && ((v17 | v35 ^ 1) & 1) == 0)
        {
          id v18 = objc_allocWithZone((Class)SNTunableDSPGraphHost);
          id v15 = sub_1DCA3C04C(v10);
          sub_1DC88CC04((uint64_t)&v37, &qword_1EAA9CAB0);
          goto LABEL_23;
        }
      }
      else
      {
        sub_1DC88CC04((uint64_t)v36, &qword_1EAA9CAB0);
      }
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1DCB86FE8();
      sub_1DC89F57C(v19, (uint64_t)qword_1EAAFF810);
      id v20 = v10;
      uint64_t v21 = sub_1DCB86FC8();
      os_log_type_t v22 = sub_1DCB88468();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        v36[0] = v34;
        *(_DWORD *)uint64_t v23 = 136315650;
        os_log_type_t type = v22;
        id v24 = sub_1DCB609C8((uint64_t)v20);
        uint64_t v25 = sub_1DCB87938();
        unint64_t v27 = v26;

        sub_1DC9F8920(v25, v27, v36);
        sub_1DCB88778();

        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 1024;
        sub_1DCB88778();
        *(_WORD *)(v23 + 18) = 1024;
        sub_1DCB88778();
        _os_log_impl(&dword_1DC873000, v21, type, "Refusing to publish graph for tuning: %s. Boxes can be tuned? %{BOOL}d; Process is entitled? %{BOOL}d",
          (uint8_t *)v23,
          0x18u);
        swift_arrayDestroy();
        MEMORY[0x1E01A99C0](v34, -1, -1);
        MEMORY[0x1E01A99C0](v23, -1, -1);
      }
      else
      {
      }
      sub_1DC88CC04((uint64_t)&v37, &qword_1EAA9CAB0);
    }
  }
  id v15 = 0;
LABEL_23:
  id v28 = v38;
  id v29 = v15;
  id v30 = v28;
  swift_retain();
  id v10 = v10;
  if (sub_1DCB60C88((uint64_t)v10) == 1
    && (!sub_1DCB60FFC((uint64_t)v10) || sub_1DCB60FFC((uint64_t)v10) == 1)
    && sub_1DCB5F080((uint64_t)v10)
    && sub_1DCB5F13C((uint64_t)v10))
  {

    swift_release();
  }
  else
  {
    sub_1DC987224();
    swift_allocError();
    *uint64_t v31 = 1;
    swift_willThrow();

    swift_release_n();
  }
  return v10;
}

uint64_t sub_1DC9F5A40(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_1DC9F6CC8(a1);
  sub_1DC9B45A0();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) + 16);
  sub_1DC9B46A4(v4);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(v5 + 16) = v4 + 1;
  sub_1DC901EB8(a1, v5 + 72 * v4 + 32, (uint64_t *)&unk_1EAAA69A0);
  return swift_endAccess();
}

uint64_t sub_1DC9F5AD8(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t), void (*a6)(uint64_t))
{
  swift_beginAccess();
  uint64_t v12 = a2 & 1;
  uint64_t v13 = a4(a1, v12);
  a5(v13);
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) + 16);
  a6(v14);
  uint64_t v15 = *(void *)(a3 + 16);
  *(void *)(v15 + 16) = v14 + 1;
  uint64_t v16 = v15 + 16 * v14;
  *(void *)(v16 + 32) = a1;
  *(unsigned char *)(v16 + 40) = v12;
  return swift_endAccess();
}

uint64_t sub_1DC9F5B94(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v7 = sub_1DC87E988(a2);
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC981E40();
  sub_1DC87E988(a3);
  sub_1DC88CF34(a4, a3);
  sub_1DCB87AE8();
  sub_1DC87E988(&qword_1EAA9DF60);
  sub_1DCB87178();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v4, v7);
}

id sub_1DC9F5CA4(id a1, char a2)
{
  if (a2)
  {
    id v3 = a1;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
  }
  else
  {
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1DC9F5D08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1DC901EB8(a1, (uint64_t)v14, (uint64_t *)&unk_1EAAA69A0);
  uint64_t v4 = (void *)v14[0];
  uint64_t v5 = v14[1];
  uint64_t v6 = v14[4];
  uint64_t v11 = v14[3];
  uint64_t v12 = v14[2];
  uint64_t v7 = v14[6];
  uint64_t v13 = v14[5];
  uint64_t v8 = v14[7];
  sub_1DC901EB8(a1, (uint64_t)v15, (uint64_t *)&unk_1EAAA69A0);
  if (v15[64])
  {
    uint64_t v16 = v4;
    id v9 = v4;
    sub_1DC87E988(&qword_1EAA9DF60);
    return swift_willThrowTypedImpl();
  }
  else
  {
    *a2 = v4;
    a2[1] = v5;
    a2[2] = v12;
    a2[3] = v11;
    a2[4] = v6;
    a2[5] = v13;
    a2[6] = v7;
    a2[7] = v8;
    return swift_bridgeObjectRetain();
  }
}

void *sub_1DC9F5E14(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(long long *), uint64_t a5, uint64_t (*a6)(uint64_t, long long *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v15 = a4(&v30);
  uint64_t v16 = (void *)v15;
  if (!v9)
  {
    int v17 = (void *)a6(v15, &v30);
    unint64_t v27 = a1;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v30;
    uint64_t v28 = self;
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v19;
    v21[3] = v20;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = v18;
    v21[7] = a2;
    void v21[8] = a3;
    aBlock[4] = sub_1DC9F6B38;
    aBlock[5] = v21;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1DCA3BBB8;
    void aBlock[3] = &unk_1F37FAA80;
    os_log_type_t v22 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    char v23 = sub_1DCB6C8B8(v28, v17, v22, (uint64_t)aBlock);
    _Block_release(v22);
    id v24 = aBlock[0];
    if (v23)
    {
      swift_unknownObjectRelease();
      *unint64_t v27 = v17;
      swift_release();
    }
    else
    {
      uint64_t v25 = v24;
      sub_1DCB86898();

      swift_willThrow();
      swift_release();
      swift_unknownObjectRelease();
    }
  }
  return v16;
}

void *sub_1DC9F60C4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1DC9F61B4(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1F3800700, sub_1DC9F6D2C, &unk_1F37FB1D8);
}

void *sub_1DC9F613C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1DC9F61B4(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1F3800778, sub_1DC9F6EC8, &unk_1F37FB2A0);
}

void *sub_1DC9F61B4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  id aBlock[6] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v18 = a4();
  uint64_t v19 = (void *)v18;
  if (!v12)
  {
    long long v30 = (void *)a6(v18);
    uint64_t v20 = swift_allocEmptyBox();
    uint64_t v29 = self;
    uint64_t v21 = sub_1DC8BABC0();
    swift_unknownObjectWeakInit();
    uint64_t v22 = sub_1DC8BABC0();
    swift_unknownObjectWeakInit();
    char v23 = (void *)swift_allocObject();
    _OWORD v23[2] = v21;
    uint64_t v23[3] = v22;
    v23[4] = a8;
    v23[5] = a9;
    v23[6] = v20;
    v23[7] = a2;
    v23[8] = a3;
    aBlock[4] = a11;
    aBlock[5] = v23;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1DCA3BBB8;
    void aBlock[3] = a12;
    id v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    char v25 = sub_1DCB6C8B8(v29, v30, v24, (uint64_t)aBlock);
    _Block_release(v24);
    id v26 = aBlock[0];
    if (v25)
    {
      *a1 = v30;
      swift_release();
    }
    else
    {
      unint64_t v27 = v26;
      sub_1DCB86898();

      swift_willThrow();
      swift_release();
    }
  }
  return v19;
}

void sub_1DC9F63F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *, uint64_t, uint64_t), uint64_t a5, uint64_t a6, void (*a7)(uint64_t *))
{
  uint64_t v12 = a2 + 16;
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1E01A9AE0](v12);
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    swift_beginAccess();
    uint64_t v15 = MEMORY[0x1E01A9AE0](a3 + 16);
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      swift_beginAccess();
      unint64_t v17 = a4(v14, v16, a1, a6 + 16);
      swift_endAccess();
      swift_retain();
      sub_1DC9EB378(v17, a7);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1DC9F654C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t), uint64_t a5, uint64_t a6, void (*a7)(_OWORD *))
{
  uint64_t v11 = a2 + 16;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E01A9AE0](v11);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    swift_beginAccess();
    uint64_t v14 = MEMORY[0x1E01A9AE0](a3 + 16);
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      uint64_t v16 = a4(v13, v14, a1);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = (uint64_t *)(v16 + 88);
        do
        {
          uint64_t v19 = *(v18 - 1);
          uint64_t v20 = *v18;
          long long v21 = *(_OWORD *)(v18 - 5);
          v22[0] = *(_OWORD *)(v18 - 7);
          v22[1] = v21;
          _OWORD v22[2] = *(_OWORD *)(v18 - 3);
          uint64_t v23 = v19;
          uint64_t v24 = v20;
          char v25 = 0;
          swift_bridgeObjectRetain();
          a7(v22);
          swift_bridgeObjectRelease();
          v18 += 8;
          --v17;
        }
        while (v17);

        swift_bridgeObjectRelease_n();
        return;
      }
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1DC9F66F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t), uint64_t a5, uint64_t a6, void (*a7)(id *))
{
  uint64_t v11 = a2 + 16;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E01A9AE0](v11);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    swift_beginAccess();
    uint64_t v14 = MEMORY[0x1E01A9AE0](a3 + 16);
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      unint64_t v16 = a4(v13, v14, a1);
      swift_retain();
      sub_1DC9EB494(v16, a7);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1DC9F6820(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9EE19C);
}

uint64_t sub_1DC9F684C(uint64_t a1)
{
  return sub_1DC9EAE6C(a1, (uint64_t (*)(uint64_t, uint64_t *, id))sub_1DC9F0A14);
}

uint64_t sub_1DC9F6878@<X0>(_OWORD *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1DC9F6B68(a1, a2, (void (*)(_OWORD *, void *, void **, uint64_t, uint64_t, unint64_t *, int *, uint64_t *))sub_1DC985230, a3);
}

uint64_t sub_1DC9F68A4(uint64_t *a1)
{
  return sub_1DC9F5B94(*a1, &qword_1EAAA4050, &qword_1EAAA4058, &qword_1EAAA4060);
}

id sub_1DC9F68D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1DC9F5CA4(*(id *)a1, *(unsigned char *)(a1 + 8));
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1DC9F6910()
{
}

uint64_t sub_1DC9F6918(uint64_t a1, uint64_t a2)
{
  return sub_1DC9F5AD8(*(void *)a1, *(unsigned char *)(a1 + 8), a2, (uint64_t (*)(uint64_t, uint64_t))sub_1DC9F6AF0, (void (*)(uint64_t))sub_1DC9B4588, (void (*)(uint64_t))sub_1DC9B468C);
}

uint64_t sub_1DC9F697C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DC9AB95C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC9F69A4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9AACB4(*a1, a1[1], a1[2], a1[3], a2, a3);
}

uint64_t sub_1DC9F69BC()
{
  swift_release();

  return swift_deallocObject();
}

CMTimeValue sub_1DC9F69FC(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  return sub_1DC9F44DC(a1, a2, a3, *(double *)(v3 + 16));
}

uint64_t sub_1DC9F6A18(void *a1)
{
  return sub_1DC9F4574(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DC9F6A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC9F4634(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void *sub_1DC9F6A54(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9F6FC4(a1, a2, a3);
}

uint64_t sub_1DC9F6A6C()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1DC9F6AA4@<X0>(void *a1@<X8>)
{
  return sub_1DC9F6D44(*(uint64_t (**)(id *, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), &qword_1EAAA4068, (uint64_t)sub_1DC9F6AE8, a1);
}

void sub_1DC9F6AE0()
{
}

uint64_t sub_1DC9F6AE8(uint64_t a1)
{
  return sub_1DC9F6918(a1, v1);
}

id sub_1DC9F6AF0(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_unknownObjectRetain();
  }
}

uint64_t sub_1DC9F6AFC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1DC9F6B38(uint64_t a1)
{
  return sub_1DC9F6EE0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1DC9F63F8);
}

uint64_t sub_1DC9F6B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DC9F6B60()
{
  return swift_release();
}

uint64_t sub_1DC9F6B68@<X0>(_OWORD *a1@<X0>, void **a2@<X1>, void (*a3)(_OWORD *, void *, void **, uint64_t, uint64_t, unint64_t *, int *, uint64_t *)@<X2>, uint64_t *a4@<X8>)
{
  long long v6 = a1[1];
  v9[0] = *a1;
  v9[1] = v6;
  long long v7 = a1[3];
  void v9[2] = a1[2];
  void v9[3] = v7;
  uint64_t result = sub_1DC9F5180((uint64_t)v9, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

id sub_1DC9F6BB0@<X0>(void *a1@<X8>)
{
  return sub_1DC9F6D44(*(uint64_t (**)(id *, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), &qword_1EAAA40D8, (uint64_t)sub_1DC9F6CC0, a1);
}

uint64_t sub_1DC9F6BEC(uint64_t *a1)
{
  return sub_1DC9F5B94(*a1, &qword_1EAAA40C0, &qword_1EAAA40C8, &qword_1EAAA40D0);
}

uint64_t sub_1DC9F6C20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1DC901EB8(a1, (uint64_t)v4, (uint64_t *)&unk_1EAAA69A0);
  return sub_1DC9F5D08((uint64_t)v4, a2);
}

void sub_1DC9F6C6C()
{
}

void sub_1DC9F6C74()
{
}

uint64_t sub_1DC9F6C7C(uint64_t a1, uint64_t a2)
{
  sub_1DC901EB8(a1, (uint64_t)v4, (uint64_t *)&unk_1EAAA69A0);
  return sub_1DC9F5A40((uint64_t)v4, a2);
}

uint64_t sub_1DC9F6CC0(uint64_t a1)
{
  return sub_1DC9F6C7C(a1, v1);
}

uint64_t sub_1DC9F6CC8(uint64_t a1)
{
  return a1;
}

id sub_1DC9F6D14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1DC9F6D2C(uint64_t a1)
{
  return sub_1DC9F6EE0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1DC9F654C);
}

id sub_1DC9F6D44@<X0>(uint64_t (*a1)(id *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  id result = sub_1DC9F53C8(a1, a2, a3, a4, a5);
  if (!v6)
  {
    *a6 = result;
    a6[1] = v9;
    a6[2] = v10;
    a6[3] = v11;
  }
  return result;
}

id sub_1DC9F6D74@<X0>(void *a1@<X8>)
{
  return sub_1DC9F6D44(*(uint64_t (**)(id *, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), (uint64_t *)&unk_1EAAA4130, (uint64_t)sub_1DC9F6E58, a1);
}

uint64_t sub_1DC9F6DB0(uint64_t *a1)
{
  return sub_1DC9F5B94(*a1, &qword_1EAAA4118, &qword_1EAAA4120, &qword_1EAAA4128);
}

void sub_1DC9F6DE4()
{
}

void sub_1DC9F6DEC()
{
}

uint64_t sub_1DC9F6DF4(uint64_t a1, uint64_t a2)
{
  return sub_1DC9F5AD8(*(void *)a1, *(unsigned char *)(a1 + 8), a2, (uint64_t (*)(uint64_t, uint64_t))sub_1DC9F6E60, (void (*)(uint64_t))sub_1DC9B45D0, (void (*)(uint64_t))sub_1DC9B46D8);
}

uint64_t sub_1DC9F6E58(uint64_t a1)
{
  return sub_1DC9F6DF4(a1, v1);
}

id sub_1DC9F6E60(id a1)
{
  return a1;
}

uint64_t sub_1DC9F6E70()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9F6EC8(uint64_t a1)
{
  return sub_1DC9F6EE0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1DC9F66F4);
}

uint64_t sub_1DC9F6EE0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1DC9F6F10()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void *sub_1DC9F6FC4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC9F5E14(a1, a2, a3, *(uint64_t (**)(long long *))(v3 + 16), *(void *)(v3 + 24), *(uint64_t (**)(uint64_t, long long *))(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56));
}

unsigned char *storeEnumTagSinglePayload for ProcessingUtils.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DC9F70C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessingUtils.DomainError()
{
  return &type metadata for ProcessingUtils.DomainError;
}

unint64_t sub_1DC9F70FC()
{
  unint64_t result = qword_1EAAA4150[0];
  if (!qword_1EAAA4150[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA4150);
  }
  return result;
}

CMTimeValue sub_1DC9F714C(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  return sub_1DC9F69FC(a1, a2, a3);
}

uint64_t sub_1DC9F721C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DC9F6A34(a1, a2, a3, a4);
}

uint64_t sub_1DC9F7244(void *a1)
{
  return sub_1DC9F6A18(a1);
}

void sub_1DC9F725C()
{
  *(unsigned char *)(v0 - 109) = *(_DWORD *)(v0 - 244);
  *(unsigned char *)(v0 - 108) = *(_DWORD *)(v0 - 248);
  *(unsigned char *)(v0 - 107) = *(_DWORD *)(v0 - 252);
  *(void *)(v0 - 104) = *(void *)(v0 - 264);
}

void sub_1DC9F7284()
{
  uint64_t v1 = *(void *)(v0 - 208);
  *(void *)(v0 - 160) = *(void *)(v0 - 200);
  *(void *)(v0 - 152) = v1;
  uint64_t v2 = *(void *)(v0 - 224);
  *(void *)(v0 - 144) = *(void *)(v0 - 216);
  *(void *)(v0 - 136) = v2;
  *(unsigned char *)(v0 - 128) = *(_DWORD *)(v0 - 228);
}

void sub_1DC9F72C8()
{
  *(unsigned char *)(v0 - 125) = *(_DWORD *)(v0 - 232);
  *(unsigned char *)(v0 - 124) = *(_DWORD *)(v0 - 236);
  *(unsigned char *)(v0 - 123) = *(_DWORD *)(v0 - 240);
}

uint64_t sub_1DC9F72E4()
{
  return sub_1DCB874D8();
}

void sub_1DC9F7308(uint64_t a1@<X8>)
{
  *(void *)(v1 - 88) = a1;
}

uint64_t sub_1DC9F7320()
{
  return v0;
}

void sub_1DC9F7338()
{
  uint64_t v2 = *(void **)(v0 - 288);
}

void sub_1DC9F7350(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
}

uint64_t sub_1DC9F7364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v22 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DCB89268();
  sub_1DCB870E8();
  sub_1DCB87318();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1DCB870F8();
  swift_getWitnessTable();
  uint64_t v23 = sub_1DCB870A8();
  uint64_t v24 = a4;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = a6;
  uint64_t v12 = sub_1DCB87158();
  sub_1DC88D668();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&AssociatedTypeWitness - v14;
  unint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a4;
  void v16[3] = a5;
  v16[4] = a6;
  v16[5] = a7;
  void v16[6] = v19;
  v16[7] = v20;
  swift_retain();
  sub_1DCB874D8();
  swift_release();
  swift_getWitnessTable();
  return sub_1DCA5D800((uint64_t)v15, v12, v22);
}

uint64_t sub_1DC9F7610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_1DC9F76E0@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1DCB89268();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t sub_1DC9F7894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v27 = a1;
  uint64_t v30 = a6;
  uint64_t v9 = sub_1DCB88718();
  sub_1DC8863A8(&qword_1EAA9DF60);
  uint64_t v26 = v9;
  sub_1DCB89268();
  uint64_t v10 = sub_1DCB870E8();
  sub_1DC89D4E0();
  uint64_t v12 = v11;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = sub_1DCB87148();
  sub_1DC89D4E0();
  uint64_t v29 = v17;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v26 - v19;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a3;
  v21[3] = a4;
  uint64_t v22 = v27;
  v21[4] = a5;
  v21[5] = v22;
  v21[6] = v28;
  swift_retain();
  sub_1DCB873D8();
  swift_release();
  uint64_t v23 = (void *)swift_allocObject();
  _OWORD v23[2] = a3;
  uint64_t v23[3] = a4;
  v23[4] = a5;
  sub_1DCB870C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  uint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = a3;
  uint64_t v24[3] = a4;
  v24[4] = a5;
  swift_getWitnessTable();
  sub_1DCB873B8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v20, v16);
}

uint64_t sub_1DC9F7B38@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC9F76E0((void (*)(unsigned char *))sub_1DC9F9230, a1);
}

uint64_t sub_1DC9F7BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DCB88718();
  sub_1DC8863A8(&qword_1EAA9DF60);
  uint64_t v4 = sub_1DCB89268();
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v8 - v5, a1, v4);
  return sub_1DC9F7610(v4, (uint64_t)&v9, a2);
}

uint64_t sub_1DC9F7CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DCB88718();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_1DC9F7D40(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DCB89268();
  uint64_t v4 = sub_1DCB870E8();
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  sub_1DC88D668();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1DCB873D8();
  swift_release();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  sub_1DCB87318();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1DCB87438();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_1DC9F7F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1DCB89268();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1DC9F8068(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = sub_1DCB89268();
  MEMORY[0x1F4188790](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))((char *)&v6 - v4, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  return sub_1DCB87328();
}

uint64_t sub_1DC9F81BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v10);
  sub_1DC9F7D40(a5, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a5);
}

void sub_1DC9F82A0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DCB86FE8();
  sub_1DC89F57C(v5, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1DCB86FC8();
  os_log_type_t v7 = sub_1DCB88488();
  if (os_log_type_enabled(v6, v7))
  {
    swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    sub_1DC9F92B0(4.8751e-34);
    sub_1DC9F8920(a2, a3, &v10);
    sub_1DC9F9270();
    swift_bridgeObjectRelease_n();
    sub_1DC9F92D0(&dword_1DC873000, v8, v9, "%{public}sreceive subscription");
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1DC9F8400(uint64_t a1, unint64_t a2)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1DCB86FE8();
  sub_1DC89F57C(v4, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1DCB86FC8();
  os_log_type_t v6 = sub_1DCB88488();
  if (os_log_type_enabled(v5, v6))
  {
    swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    sub_1DC9F92B0(4.8751e-34);
    sub_1DC9F8920(a1, a2, &v9);
    sub_1DC9F9270();
    swift_bridgeObjectRelease_n();
    sub_1DC9F92D0(&dword_1DC873000, v7, v8, "%{public}scancelled");
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1DC9F8560(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1DC9F8568@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1DC9F8570(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v10 = *a1;
  if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    uint64_t v12 = *(void *)a2 + a3;
    if ((unint64_t)(v10 - v12) >= 0x7FFFFFFF) {
      unint64_t v13 = 0x7FFFFFFFLL;
    }
    else {
      unint64_t v13 = v10 - v12;
    }
    if (v13) {
      BOOL v14 = v13 > a4;
    }
    else {
      BOOL v14 = 0;
    }
    if (v14)
    {
      if (qword_1EAA9C658 == -1) {
        goto LABEL_11;
      }
      goto LABEL_35;
    }
    while (1)
    {
      uint64_t v24 = *(void *)(a2 + 24);
      BOOL v26 = __CFADD__(v24, 1);
      unint64_t v25 = v24 + 1;
      if (!v26) {
        break;
      }
      __break(1u);
LABEL_35:
      swift_once();
LABEL_11:
      uint64_t v15 = sub_1DCB86FE8();
      sub_1DC89F57C(v15, (uint64_t)qword_1EAAFF810);
      uint64_t v16 = sub_1DCB86FC8();
      os_log_type_t v17 = sub_1DCB88458();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v33 = a6;
        uint64_t v18 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        unint64_t v34 = v31;
        *(_DWORD *)uint64_t v18 = 136315394;
        if (v10 == v12) {
          uint64_t v19 = 0x646E69686562;
        }
        else {
          uint64_t v19 = 0x6461656861;
        }
        uint64_t v32 = v7;
        if (v10 == v12) {
          unint64_t v20 = 0xE600000000000000;
        }
        else {
          unint64_t v20 = 0xE500000000000000;
        }
        uint64_t v12 = v18 + 4;
        sub_1DC9F8920(v19, v20, (uint64_t *)&v34);
        sub_1DCB88778();
        uint64_t v7 = v32;
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 1024;
        sub_1DCB88778();
        _os_log_impl(&dword_1DC873000, v16, v17, "Timestamp is %s by %d samples", (uint8_t *)v18, 0x12u);
        unint64_t v13 = v31;
        swift_arrayDestroy();
        MEMORY[0x1E01A99C0](v31, -1, -1);
        uint64_t v21 = v18;
        a6 = v33;
        MEMORY[0x1E01A99C0](v21, -1, -1);
      }

      uint64_t v22 = *(void *)(a2 + 16);
      BOOL v26 = __CFADD__(v22, 1);
      uint64_t v23 = v22 + 1;
      if (v26)
      {
        __break(1u);
LABEL_37:
        swift_once();
LABEL_29:
        uint64_t v27 = sub_1DCB86FE8();
        sub_1DC89F57C(v27, (uint64_t)qword_1EAAFF810);
        uint64_t v28 = sub_1DCB86FC8();
        os_log_type_t v29 = sub_1DCB88468();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = swift_slowAlloc();
          *(_DWORD *)uint64_t v30 = 134218240;
          unint64_t v34 = v13;
          sub_1DCB88778();
          *(_WORD *)(v30 + 12) = 2048;
          unint64_t v34 = a5;
          sub_1DCB88778();
          _os_log_impl(&dword_1DC873000, v28, v29, "Detected %lu timestamp deviations in the last %ld timestamps", (uint8_t *)v30, 0x16u);
          MEMORY[0x1E01A99C0](v30, -1, -1);
        }

        *(void *)(a2 + 16) = 0;
        a6 = v33;
LABEL_32:
        *(void *)(a2 + 24) = 0;
        goto LABEL_33;
      }
      *(void *)(a2 + 16) = v23;
    }
    *(void *)(a2 + 24) = v25;
    BOOL v26 = a5 < 1 || v25 >= a5;
    if (v26)
    {
      unint64_t v13 = *(void *)(a2 + 16);
      if (v13)
      {
        uint64_t v33 = a6;
        if (qword_1EAA9C658 != -1) {
          goto LABEL_37;
        }
        goto LABEL_29;
      }
      goto LABEL_32;
    }
  }
LABEL_33:
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = 0;
  *a6 = v10;
}

uint64_t sub_1DC9F88DC()
{
  return 0;
}

uint64_t sub_1DC9F88F8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1DC9F8920(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1DC9F89F4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1DC87E9DC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1DC87E9DC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1DC8818D0((uint64_t)v12);
  return v7;
}

uint64_t sub_1DC9F89F4(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1DC9F8B4C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1DCB88798();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_1DC9F8C24(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_1DCB88B28();
    if (!v8)
    {
      uint64_t result = sub_1DCB88C58();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1DC9F8B4C(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1DCB88D08();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_1DC9F8C24(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1DC9F8CBC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_1DC9F8EF4(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_1DC9F8EF4((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DC9F8CBC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_1DCB87A38();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x1E4FBC860];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_6:
  unint64_t v3 = sub_1DC9F8E30(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1DCB88AA8();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_1DCB88D08();
  __break(1u);
LABEL_14:
  uint64_t result = sub_1DCB88C58();
  __break(1u);
  return result;
}

void *sub_1DC9F8E30(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1DC87E988(&qword_1EAA9C718);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  uint64_t v4[2] = a1;
  uint64_t v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1DC9F8E98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_1DCB87A78();
    sub_1DC9F9298(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E01A6A50](15, a1 >> 16);
    sub_1DC9F9298(v3);
    return v4 | 8;
  }
}

char *sub_1DC9F8EF4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1DC87E988(&qword_1EAA9C718);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1DC9F90A4(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DC9F8FCC(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1DC9F8FCC(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1DCB88D08();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_1DC9F90A4(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    long long __src = (char *)sub_1DCB88D08();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_1DC9F9134()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC9F9140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9F7F64(a1, a2);
}

uint64_t sub_1DC9F9148()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC9F9154(uint64_t a1)
{
  return sub_1DC9F8068(a1);
}

uint64_t sub_1DC9F915C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9F9194(uint64_t a1)
{
  return sub_1DC9F81BC(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1DC9F91A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DC9F91DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC9F7B38(a1);
}

uint64_t sub_1DC9F91EC()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC9F91F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9F7BB8(a1, a2);
}

uint64_t sub_1DC9F9218()
{
  return sub_1DC88389C();
}

uint64_t sub_1DC9F9224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9F7CD0(a1, a2);
}

uint64_t sub_1DC9F9230(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 40))(*(void *)(v1 + 56));
  if (v2) {
    *a1 = v2;
  }
  return result;
}

uint64_t sub_1DC9F9270()
{
  return sub_1DCB88778();
}

unint64_t sub_1DC9F9298(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_1DC9F92B0(float a1)
{
  float *v1 = a1;
  return swift_bridgeObjectRetain();
}

void sub_1DC9F92D0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1DC9F92F0()
{
  swift_beginAccess();
  uint64_t result = *(void *)(v0 + 112);
  *(void *)(v0 + 112) = MEMORY[0x1E4FBC860];
  return result;
}

void sub_1DC9F9330()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  sub_1DCA03908(v3, v45);
  uint64_t v4 = v0 + 112;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  sub_1DCA03AF4(v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
  unint64_t v6 = sub_1DC9F9CD4(v5, v45);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    *(void *)(v2 + 32) = 0;
    *(_OWORD *)uint64_t v2 = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    goto LABEL_6;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(void *)(*(void *)v4 + 16))
  {
    sub_1DCA036C4(*(void *)v4 + 160 * v6 + 32, (uint64_t)v34, &qword_1EAAA41B0);
    swift_beginAccess();
    sub_1DCA36EF0(v6, v20);
    swift_endAccess();
    sub_1DCA02F4C(v20[0], v20[1], v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32);
    sub_1DC8818D0((uint64_t)v33);
    uint64_t v9 = v34[0];
    uint64_t v10 = v34[1];
    char v11 = v35;
    uint64_t v12 = v36;
    uint64_t v13 = v37;
    uint64_t v14 = v38;
    uint64_t v16 = v39;
    uint64_t v15 = v40;
    long long v18 = v42;
    long long v19 = v41;
    long long v17 = v43;
    sub_1DC8BA1CC(v44, (uint64_t)v33);
    sub_1DCA02F4C(v9, v10, v11, v12, v13, v14, v16, v15, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((unint64_t *)&v17 + 1));
    sub_1DC8BA1CC(v33, v2);
LABEL_6:
    sub_1DC89DA54();
    return;
  }
  __break(1u);
}

void sub_1DC9F9514()
{
  sub_1DC89D9F8();
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  long long v8 = *(_OWORD *)(v0 + 48);
  int8x16_t v7 = *(int8x16_t *)(v0 + 64);
  int8x16_t v9 = *(int8x16_t *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 96);
  unint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = v13[2];
  uint64_t v17 = v13[3];
  unint64_t v18 = v13[4];
  uint64_t v19 = v13[5];
  uint64_t v20 = v13[6];
  uint64_t v21 = v13[7];
  uint64_t v23 = v13[8];
  uint64_t v22 = v13[9];
  uint64_t v24 = v13[10];
  uint64_t v25 = v13[11];
  uint64_t v26 = v13[12];
  unint64_t v27 = v13[13];
  uint64_t v28 = v13[14];
  v383[0] = v2;
  v383[1] = v1;
  v383[2] = v4;
  v383[3] = v3;
  v383[4] = v5;
  v383[5] = v6;
  long long v384 = v8;
  int8x16_t v385 = v7;
  int8x16_t v386 = v9;
  uint64_t v387 = v10;
  unint64_t v388 = v11;
  uint64_t v389 = v12;
  uint64_t v390 = v14;
  uint64_t v391 = v15;
  uint64_t v392 = v16;
  uint64_t v393 = v17;
  unint64_t v394 = v18;
  uint64_t v395 = v19;
  uint64_t v396 = v20;
  uint64_t v397 = v21;
  uint64_t v398 = v23;
  uint64_t v399 = v22;
  uint64_t v400 = v24;
  uint64_t v401 = v25;
  uint64_t v402 = v26;
  unint64_t v403 = v27;
  uint64_t v404 = v28;
  switch(v11 >> 61)
  {
    case 1uLL:
      if (v27 >> 61 != 1) {
        goto LABEL_29;
      }
      goto LABEL_5;
    case 2uLL:
      if (v27 >> 61 != 2) {
        goto LABEL_29;
      }
      unint64_t v344 = HIDWORD(v18);
      uint64_t v350 = v17;
      uint64_t v353 = v19;
      unsigned int v347 = v18;
      uint64_t v356 = v16;
      uint64_t v57 = v14;
      uint64_t v58 = v4;
      uint64_t v59 = v3;
      uint64_t v327 = v8;
      sub_1DCA03E78((uint64_t)v383);
      *(void *)&long long v372 = v2;
      *((void *)&v372 + 1) = v1;
      uint64_t v373 = v58;
      uint64_t v374 = v59;
      uint64_t v375 = v5;
      uint64_t v376 = v6;
      *(void *)&long long v377 = v327;
      *(void *)&long long v358 = v57;
      *((void *)&v358 + 1) = v15;
      uint64_t v359 = v356;
      uint64_t v360 = v350;
      unint64_t v361 = __PAIR64__(v344, v347);
      uint64_t v362 = v353;
      uint64_t v363 = v20;
      sub_1DCA7D81C((uint64_t)&v372, (uint64_t)&v358);
      goto LABEL_30;
    case 3uLL:
      if (v27 >> 61 == 3)
      {
        *(void *)&long long v372 = v2;
        *((void *)&v372 + 1) = v1;
        LOBYTE(v373) = v4;
        uint64_t v374 = v3;
        uint64_t v375 = v5;
        LOBYTE(v376) = v6;
        *(void *)&long long v358 = v14;
        *((void *)&v358 + 1) = v15;
        LOBYTE(v359) = v16;
        uint64_t v360 = v17;
        unint64_t v361 = v18;
        LOBYTE(v362) = v19;
        uint64_t v60 = sub_1DCA04EA4();
        uint64_t v272 = v2;
        uint64_t v280 = v61;
        uint64_t v317 = v62;
        uint64_t v322 = v20;
        uint64_t v63 = v20;
        uint64_t v65 = v64;
        uint64_t v296 = v66;
        uint64_t v303 = v64;
        uint64_t v289 = v67;
        uint64_t v69 = v68;
        uint64_t v312 = v68;
        long long v335 = v71;
        long long v340 = v70;
        long long v328 = v72;
        uint64_t v78 = sub_1DCA02E30(v60, v73, v74, v75, v76, v77, v63, v21, v164, v176, v188, v202, v217, v232);
        sub_1DCA050B4(v78, v79, v80, v81, v82, v83, v84, v85, v168, v180, v194, v208, v222, v237, v246, v251, v256, v261, v266,
          v272,
          v280,
          v289,
          v296,
          v303,
          v307,
          v312,
          v317,
          v322,
          v328);
        uint64_t v247 = v69;
        uint64_t v223 = v65;
        LOBYTE(v69) = v281;
        uint64_t v86 = v318;
        uint64_t v89 = sub_1DCA02E30(v273, v1, v281, v318, v5, v290, v87, v88, v340, *((uint64_t *)&v340 + 1), v335, *((uint64_t *)&v335 + 1), v223, v11);
        sub_1DCA04F70(v89, v90, v91, v92, v93, v94, v309, v95, v169, v181, v195, v209, v224, v238, v247, v252, v257, v262, v267,
          v273,
          v281,
          v290,
          v297,
          v304,
          v309,
          v313,
          v318,
          v323,
          v329,
          v332,
          v335,
          *((uint64_t *)&v335 + 1),
          v340);
        sub_1DCA02E30(v274, v1, v69, v86, v5, v291, v96, v330, v170, v182, v196, v210, v225, v239);
        sub_1DCA04E0C();
        uint64_t v105 = sub_1DCA04E24(v97, v98, v99, v100, v101, v102, v103, v104, v171, v183, v197, v211, v226, v240, v248, v253, v258, v263, v268,
                 v274,
                 v282,
                 v291,
                 v298);
        sub_1DCA02E30(v105, v106, v107, v108, v109, v110, v111, v112, v172, v184, v198, v212, v227, v241);
        sub_1DC8C4BE0(&v372, &v358);
        sub_1DCA03E78((uint64_t)v383);
        sub_1DCA04E0C();
        uint64_t v121 = sub_1DCA04E24(v113, v114, v115, v116, v117, v118, v119, v120, v173, v185, v199, v213, v228, v242, v249, v254, v259, v264, v269,
                 v275,
                 v283,
                 v292,
                 v299);
        uint64_t v129 = sub_1DCA02F4C(v121, v122, v123, v124, v125, v126, v127, v128, v174, v186, v200, v214, v229, v243);
        sub_1DCA04F70(v129, v130, v131, v319, v132, v133, v134, v135, v175, v187, v201, v215, v230, v244, v250, v255, v260, v265, v270,
          v276,
          v284,
          v293,
          v300,
          v305,
          v310,
          v314,
          v319,
          v324,
          v330,
          v333,
          v336,
          v338,
          v341);
        uint64_t v52 = v277;
        char v56 = v285;
        uint64_t v53 = v1;
        uint64_t v55 = v5;
        goto LABEL_10;
      }
      sub_1DCA04FB4();
      sub_1DC882C30(v2, v1, v155);
      goto LABEL_28;
    case 4uLL:
      uint64_t v345 = v22;
      sub_1DCA04FB4();
      uint64_t v143 = v142;
      uint64_t v354 = v145;
      char v357 = v144;
      uint64_t v348 = v147;
      uint64_t v351 = v146;
      if (v27 >> 61 != 4) {
        goto LABEL_28;
      }
      uint64_t v320 = v136;
      BOOL v148 = v2 == v15 && v1 == v21;
      uint64_t v306 = v137;
      if (!v148)
      {
        char v286 = v138;
        long long v337 = v140;
        int8x16_t v342 = v139;
        long long v331 = v141;
        sub_1DCB89018();
        long long v141 = v331;
        long long v140 = v337;
        int8x16_t v139 = v342;
        char v138 = v286;
      }
      sub_1DCA02E30(v2, v1, v138, v320, v5, v143, v141, *((uint64_t *)&v141 + 1), v139.i64[0], v139.i64[1], v140, *((uint64_t *)&v140 + 1), v306, v11);
      sub_1DCA04E0C();
      sub_1DCA02E30(v15, v21, v357, v351, v348, v354, v20, v23, v307, v345, v163, v216, v231, v245);
      sub_1DCA03E78((uint64_t)v383);
      goto LABEL_30;
    case 5uLL:
      if (v11 != 0xA000000000000000
        || (int8x16_t v149 = vorrq_s8(v9, v7),
            v4 | *(void *)&vorr_s8(*(int8x8_t *)v149.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v149, v149, 8uLL)) | v3 | v5 | v6 | v10 | v12 | v2 | v1 | *((void *)&v8 + 1) | (unint64_t)v8))
      {
        if (v27 >> 61 != 5 || v28) {
          goto LABEL_29;
        }
        BOOL v162 = v27 == 0xA000000000000000 && v14 == 1;
        if (!v162 || v16 | v15 | v17 | v18 | v19 | v20 | v21 | v23 | v22 | v24 | v25 | v26) {
          goto LABEL_29;
        }
LABEL_5:
        sub_1DCA03E78((uint64_t)v383);
        goto LABEL_30;
      }
      BOOL v150 = v27 >> 61 == 5 && v27 == 0xA000000000000000;
      if (v150 && !(v15 | v14 | v16 | v17 | v18 | v19 | v20 | v21 | v23 | v22 | v24 | v25 | v26 | v28)) {
        goto LABEL_5;
      }
LABEL_29:
      uint64_t v156 = sub_1DCA04EA4();
      sub_1DCA02E30(v156, v157, v158, v159, v160, v161, v20, v21, v164, v176, v188, v202, v217, v232);
      sub_1DCA03E78((uint64_t)v383);
LABEL_30:
      sub_1DC89DA54();
      return;
    default:
      uint64_t v311 = v12;
      uint64_t v349 = v17;
      uint64_t v352 = v19;
      uint64_t v343 = v22;
      uint64_t v346 = v18;
      char v355 = v16;
      int8x16_t v334 = v9;
      int8x16_t v339 = v7;
      long long v325 = v8;
      if (!(v27 >> 61))
      {
        *(void *)&long long v372 = v2;
        *((void *)&v372 + 1) = v1;
        uint64_t v278 = v4;
        LOBYTE(v373) = v4 & 1;
        uint64_t v374 = v3;
        uint64_t v375 = v5;
        long long v377 = v8;
        int8x16_t v378 = v7;
        int8x16_t v379 = v9;
        uint64_t v376 = v6;
        uint64_t v380 = v10;
        char v381 = v11 & 1;
        uint64_t v382 = v12;
        *(void *)&long long v358 = v14;
        *((void *)&v358 + 1) = v15;
        LOBYTE(v359) = v16 & 1;
        uint64_t v360 = v17;
        unint64_t v361 = v18;
        uint64_t v362 = v19;
        uint64_t v363 = v20;
        uint64_t v364 = v21;
        uint64_t v365 = v23;
        uint64_t v366 = v22;
        uint64_t v367 = v24;
        uint64_t v368 = v25;
        uint64_t v369 = v26;
        char v370 = v27 & 1;
        uint64_t v371 = v28;
        uint64_t v29 = sub_1DCA04EA4();
        uint64_t v315 = v30;
        uint64_t v294 = v32;
        uint64_t v301 = v31;
        uint64_t v287 = v33;
        uint64_t v39 = sub_1DCA02E30(v29, v34, v35, v36, v37, v38, v20, v21, v164, v176, v188, v202, v217, v232);
        sub_1DCA050B4(v39, v40, v41, v42, v43, v44, v45, v46, v165, v177, v189, v203, v218, v233, v246, v251, v256, v261, v266,
          v271,
          v278,
          v287,
          v294,
          v301,
          v307,
          v311,
          v315,
          v321,
          v325);
        sub_1DCA02E30(v2, v1, v279, v316, v5, v288, v47, v48, v339.i64[0], v339.i64[1], v334.i64[0], v334.i64[1], v302, v11);
        uint64_t v49 = sub_1DCA0509C();
        sub_1DCA02E30(v49, v50, v279, v316, v51, v288, v308, v326, v166, v178, v190, v204, v302, v11);
        sub_1DCA04E80();
        sub_1DCA02E30(v295, v15, v355, v349, v346, v352, v20, v21, v23, v343, v191, v205, v219, v234);
        sub_1DCA184B4((uint64_t)&v372, (uint64_t)&v358);
        sub_1DCA03E78((uint64_t)v383);
        sub_1DCA04E80();
        sub_1DCA02F4C(v295, v15, v355, v349, v346, v352, v20, v21, v23, v343, v192, v206, v220, v235);
        unint64_t v236 = v11;
        uint64_t v221 = v302;
        uint64_t v52 = sub_1DCA0509C();
        char v56 = v279;
LABEL_10:
        sub_1DCA02F4C(v52, v53, v56, v54, v55, v288, v308, v326, v167, v179, v193, v207, v221, v236);
        goto LABEL_30;
      }
      sub_1DCA04FB4();
      char v151 = v11 & 1;
      uint64_t v154 = v153;
      sub_1DC88244C(v2, v1, v152 & 1);
      sub_1DC88245C(*((uint64_t *)&v325 + 1), v339.i64[0], v339.i64[1], v334.i64[0], v334.i64[1], v154, v151);
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v21 = v23;
      goto LABEL_29;
  }
}

uint64_t sub_1DC9F9CD4(uint64_t a1, void *__src)
{
  sub_1DCA03908(__src, __dst);
  uint64_t v212 = *(void *)(a1 + 16);
  if (!v212)
  {
LABEL_221:
    sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
    return 0;
  }
  uint64_t v3 = 0;
  long long v210 = __dst[1];
  long long v211 = __dst[0];
  long long v208 = __dst[3];
  long long v209 = __dst[2];
  uint64_t v207 = a1 + 32;
  long long v205 = __dst[5];
  long long v206 = __dst[4];
  long long v204 = __dst[6];
  uint64_t v203 = v235;
  while (1)
  {
    uint64_t v4 = (uint64_t *)(v207 + 160 * v3);
    uint64_t v6 = *v4;
    uint64_t v5 = v4[1];
    uint64_t v8 = v4[2];
    uint64_t v7 = v4[3];
    unint64_t v9 = v4[4];
    uint64_t v10 = v4[5];
    uint64_t v12 = v4[6];
    uint64_t v11 = v4[7];
    uint64_t v13 = v4[8];
    uint64_t v14 = v4[9];
    uint64_t v15 = v4[10];
    uint64_t v16 = v4[11];
    uint64_t v18 = v4[12];
    unint64_t v17 = v4[13];
    uint64_t v19 = v4[14];
    v225[0] = *v4;
    v225[1] = v5;
    v225[2] = v8;
    v225[3] = v7;
    unint64_t v292 = v9;
    v225[4] = v9;
    v225[5] = v10;
    v225[6] = v12;
    uint64_t v222 = v11;
    v225[7] = v11;
    v225[8] = v13;
    v225[9] = v14;
    v225[10] = v15;
    v225[11] = v16;
    v225[12] = v18;
    v225[13] = v17;
    v225[14] = v19;
    long long v226 = v211;
    long long v227 = v210;
    long long v228 = v209;
    long long v229 = v208;
    long long v230 = v206;
    long long v231 = v205;
    long long v232 = v204;
    uint64_t v233 = v203;
    switch(v17 >> 61)
    {
      case 1uLL:
        sub_1DCA03908(__src, v253);
        if (v254 >> 61 != 1) {
          goto LABEL_69;
        }
        v254 &= 0x1FFFFFFFFFFFFFFFuLL;
        uint64_t v25 = v253[0];
        sub_1DCA03E78((uint64_t)v225);
        if (v6 != v25) {
          goto LABEL_164;
        }
        goto LABEL_225;
      case 2uLL:
        unint64_t v186 = HIDWORD(v292);
        double v26 = *(double *)&v12;
        uint64_t v27 = v6;
        uint64_t v28 = v5;
        sub_1DCA03908(__src, &v273);
        if (v282 >> 61 != 2) {
          goto LABEL_69;
        }
        v282 &= 0x1FFFFFFFFFFFFFFFuLL;
        double v29 = v26;
        uint64_t v218 = v10;
        uint64_t v214 = v273;
        int v30 = v274;
        int v31 = v275;
        uint64_t v199 = v277;
        uint64_t v201 = v276;
        int v32 = v278;
        int v33 = v279;
        uint64_t v223 = v3;
        uint64_t v34 = v280;
        double v35 = v281;
        sub_1DCA03E78((uint64_t)v225);
        BOOL v42 = v27 == v214
           && v30 == v28
           && v31 == HIDWORD(v28)
           && v8 == v201
           && v7 == v199
           && v32 == v292
           && v33 == v186
           && v218 == v34;
        uint64_t v3 = v223;
        if (!v42 || v35 != v29) {
          goto LABEL_164;
        }
        goto LABEL_225;
      case 3uLL:
        uint64_t v200 = v12;
        uint64_t v220 = v16;
        uint64_t v215 = v15;
        uint64_t v197 = v5;
        uint64_t v192 = v7;
        sub_1DCA03908(__src, &v283);
        if (v289 >> 61 != 3)
        {
          sub_1DC882C30(v6, v197, v8);
          goto LABEL_68;
        }
        v289 &= 0x1FFFFFFFFFFFFFFFuLL;
        uint64_t v177 = v283;
        uint64_t v180 = v18;
        uint64_t v183 = v6;
        uint64_t v187 = v284;
        char v172 = v8;
        uint64_t v217 = v10;
        char v194 = v8;
        uint64_t v182 = v13;
        unint64_t v189 = v17;
        uint64_t v191 = v14;
        if (!(_BYTE)v8)
        {
          uint64_t v44 = v220;
          if (v285) {
            goto LABEL_103;
          }
          uint64_t v169 = v287;
          uint64_t v173 = v286;
          int v166 = v288;
          if (v6) {
            unint64_t v68 = 0xD00000000000001BLL;
          }
          else {
            unint64_t v68 = 0xD000000000000016;
          }
          if (v6) {
            unint64_t v69 = 0x80000001DCB8FF60;
          }
          else {
            unint64_t v69 = 0x80000001DCB8FF40;
          }
          if (v283) {
            unint64_t v70 = 0xD00000000000001BLL;
          }
          else {
            unint64_t v70 = 0xD000000000000016;
          }
          if (v283) {
            unint64_t v71 = 0x80000001DCB8FF60;
          }
          else {
            unint64_t v71 = 0x80000001DCB8FF40;
          }
          if (v68 == v70 && v69 == v71)
          {
            sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
            sub_1DCA02E30(v6, v197, v8, v192, v292, v10, v200, v222, v13, v14, v215, v220, v18, v17);
            char v100 = v8;
            uint64_t v45 = v197;
            sub_1DCA02E30(v6, v197, v100, v192, v292, v10, v200, v222, v13, v14, v215, v220, v18, v17);
            sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
            uint64_t v74 = v177;
            uint64_t v75 = v187;
            sub_1DC882C30(v177, v187, 0);
            sub_1DC882C30(v6, v197, 0);
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v162 = sub_1DCB89018();
            sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
            unint64_t v150 = v17;
            char v73 = v8;
            sub_1DCA02E30(v6, v197, v8, v192, v292, v10, v200, v222, v13, v14, v215, v220, v18, v150);
            uint64_t v45 = v197;
            sub_1DCA02E30(v6, v197, v73, v192, v292, v10, v200, v222, v13, v14, v215, v220, v18, v189);
            sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
            uint64_t v74 = v177;
            uint64_t v75 = v187;
            sub_1DC882C30(v177, v187, 0);
            sub_1DC882C30(v6, v197, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v76 = 0;
            char v77 = 0;
            if ((v162 & 1) == 0) {
              goto LABEL_104;
            }
          }
          type metadata accessor for SNMLModelHashableUncodableWrapper();
          char v164 = sub_1DC971658(v45, v75);
          sub_1DC882BC4(v6, v45, 0);
          sub_1DC882BC4(v74, v75, 0);
          char v52 = v194;
          uint64_t v53 = v180;
          uint64_t v50 = v182;
          uint64_t v51 = v14;
          uint64_t v48 = v215;
LABEL_148:
          uint64_t v80 = v220;
          goto LABEL_149;
        }
        uint64_t v44 = v220;
        if (v8 == 1)
        {
          if (v285 != 1) {
            goto LABEL_103;
          }
          uint64_t v169 = v287;
          uint64_t v173 = v286;
          int v166 = v288;
          uint64_t v45 = v197;
          if (v6 == v283 && v197 == v284)
          {
            sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
            uint64_t v144 = v13;
            unint64_t v98 = v292;
            sub_1DCA02E30(v6, v197, v194, v192, v292, v10, v200, v222, v144, v14, v215, v220, v18, v17);
            unint64_t v152 = v17;
            char v52 = v194;
            uint64_t v99 = v98;
            uint64_t v50 = v182;
            sub_1DCA02E30(v6, v197, v194, v192, v99, v10, v200, v222, v182, v14, v215, v220, v18, v152);
            uint64_t v51 = v14;
            uint64_t v48 = v215;
            sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
            sub_1DC882C30(v6, v197, 1);
            sub_1DC882C30(v6, v197, 1);
            sub_1DC882BC4(v6, v197, 1);
            sub_1DC882BC4(v6, v197, 1);
            uint64_t v53 = v180;
            uint64_t v80 = v220;
            goto LABEL_150;
          }
          char v164 = sub_1DCB89018();
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
          uint64_t v140 = v13;
          unint64_t v47 = v292;
          sub_1DCA02E30(v6, v197, v194, v192, v292, v10, v200, v222, v140, v14, v215, v220, v18, v17);
          uint64_t v48 = v215;
          uint64_t v49 = v47;
          uint64_t v50 = v182;
          uint64_t v51 = v191;
          char v52 = v194;
          sub_1DCA02E30(v6, v197, v194, v192, v49, v10, v200, v222, v182, v191, v215, v220, v180, v189);
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
          sub_1DC882C30(v177, v187, 1);
          sub_1DC882C30(v6, v197, 1);
          sub_1DC882BC4(v6, v197, 1);
          sub_1DC882BC4(v177, v187, 1);
          uint64_t v53 = v180;
          goto LABEL_148;
        }
        if (v285 != 2)
        {
LABEL_103:
          char v167 = v285;
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
          uint64_t v45 = v197;
          sub_1DCA02E30(v6, v197, v194, v192, v292, v10, v200, v222, v13, v14, v215, v44, v18, v17);
          char v77 = v167;
          sub_1DCA02E30(v6, v197, v194, v192, v292, v10, v200, v222, v13, v14, v215, v44, v18, v189);
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
          uint64_t v74 = v177;
          uint64_t v75 = v187;
          sub_1DC882C30(v177, v187, v167);
          char v76 = v172;
          sub_1DC882C30(v6, v197, v172);
LABEL_104:
          sub_1DC882BC4(v6, v45, v76);
          sub_1DC882BC4(v74, v75, v77);
          char v52 = v194;
          uint64_t v53 = v180;
          uint64_t v50 = v182;
          uint64_t v51 = v14;
          uint64_t v48 = v215;
          uint64_t v80 = v220;
LABEL_160:
          sub_1DCA03E78((uint64_t)v225);
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
          unint64_t v149 = v189;
          uint64_t v147 = v80;
          uint64_t v148 = v53;
          uint64_t v145 = v51;
          uint64_t v146 = v48;
          uint64_t v141 = v50;
          uint64_t v65 = v6;
          uint64_t v66 = v45;
          char v67 = v52;
          goto LABEL_161;
        }
        uint64_t v169 = v287;
        uint64_t v173 = v286;
        int v166 = v288;
        type metadata accessor for SNMLModelHashableUncodableWrapper();
        sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
        uint64_t v78 = v10;
        uint64_t v142 = v13;
        unint64_t v79 = v292;
        sub_1DCA02E30(v6, v197, v8, v192, v292, v10, v200, v222, v142, v14, v215, v220, v18, v17);
        unint64_t v151 = v17;
        uint64_t v51 = v14;
        uint64_t v48 = v215;
        uint64_t v80 = v220;
        uint64_t v81 = v79;
        uint64_t v50 = v182;
        char v52 = v8;
        sub_1DCA02E30(v6, v197, v8, v192, v81, v78, v200, v222, v182, v191, v215, v220, v180, v151);
        sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
        sub_1DC882C30(v177, v187, 2);
        sub_1DC882C30(v6, v197, 2);
        char v164 = sub_1DC971658(v6, v177);
        sub_1DC882BC4(v6, v197, 2);
        uint64_t v45 = v197;
        uint64_t v53 = v180;
        sub_1DC882BC4(v177, v187, 2);
LABEL_149:
        if ((v164 & 1) == 0) {
          goto LABEL_160;
        }
LABEL_150:
        char v101 = v52;
        BOOL v102 = v192 == v173 && v292 == v169;
        if (!v102 && (sub_1DCB89018() & 1) == 0)
        {
          sub_1DCA03E78((uint64_t)v225);
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
          uint64_t v66 = v197;
          unint64_t v149 = v189;
          uint64_t v147 = v80;
          uint64_t v148 = v53;
          uint64_t v145 = v51;
          uint64_t v146 = v48;
          uint64_t v141 = v50;
          uint64_t v65 = v6;
          char v67 = v52;
          uint64_t v109 = v192;
          goto LABEL_162;
        }
        uint64_t v103 = v48;
        if ((_BYTE)v217)
        {
          int v104 = v166;
          if (v217 == 1)
          {
            unint64_t v105 = 0xE300000000000000;
            uint64_t v106 = 7696483;
            if (!v166) {
              goto LABEL_170;
            }
          }
          else
          {
            uint64_t v106 = 0x4E41646E41757063;
            unint64_t v105 = 0xE900000000000045;
            if (!v166)
            {
LABEL_170:
              unint64_t v107 = 0xE300000000000000;
              uint64_t v108 = 7105633;
              goto LABEL_172;
            }
          }
        }
        else
        {
          unint64_t v105 = 0xE300000000000000;
          uint64_t v106 = 7105633;
          int v104 = v166;
          if (!v166) {
            goto LABEL_170;
          }
        }
        if (v104 == 1)
        {
          unint64_t v107 = 0xE300000000000000;
          uint64_t v108 = 7696483;
        }
        else
        {
          uint64_t v108 = 0x4E41646E41757063;
          unint64_t v107 = 0xE900000000000045;
        }
LABEL_172:
        if (v106 == v108 && v105 == v107)
        {
          swift_bridgeObjectRelease_n();
          sub_1DCA03E78((uint64_t)v225);
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
          sub_1DCA02F4C(v183, v197, v101, v192, v292, v217, v200, v222, v50, v191, v103, v80, v53, v189);
          goto LABEL_225;
        }
        char v114 = sub_1DCB89018();
        uint64_t v115 = v103;
        uint64_t v116 = v50;
        uint64_t v117 = v80;
        uint64_t v118 = v115;
        char v119 = v114;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCA03E78((uint64_t)v225);
        sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
        sub_1DCA02F4C(v183, v197, v194, v192, v292, v217, v200, v222, v116, v191, v118, v117, v53, v189);
        if (v119) {
          goto LABEL_225;
        }
        goto LABEL_164;
      case 4uLL:
        uint64_t v202 = v12;
        uint64_t v221 = v16;
        uint64_t v216 = v15;
        char v195 = v8;
        uint64_t v54 = v5;
        sub_1DCA03908(__src, v290);
        if (v291 >> 61 != 4) {
          goto LABEL_68;
        }
        v291 &= 0x1FFFFFFFFFFFFFFFuLL;
        if (v6 != v290[0] || v54 != v290[1])
        {
          char v56 = sub_1DCB89018();
          uint64_t v57 = v7;
          char v58 = v56;
          sub_1DCA02E30(v6, v54, v195, v57, v292, v10, v202, v222, v13, v14, v216, v221, v18, v17);
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
          sub_1DCA03E78((uint64_t)v225);
          if (v58) {
            goto LABEL_225;
          }
          goto LABEL_164;
        }
        sub_1DCA02E30(v6, v54, v195, v7, v292, v10, v202, v222, v13, v14, v216, v221, v18, v17);
        sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
LABEL_224:
        sub_1DCA03E78((uint64_t)v225);
LABEL_225:
        sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
        return v3;
      case 5uLL:
        if (v17 != 0xA000000000000000
          || v5 | v6 | v8 | v7 | v292 | v10 | v12 | v11 | v13 | v14 | v15 | v16 | v18 | v19)
        {
          sub_1DCA03908(__src, &v264);
          if (v271 >> 61 == 5 && !v272 && v271 == 0xA000000000000000 && v264 == 1)
          {
            int8x16_t v63 = vorrq_s8(vorrq_s8(vorrq_s8(v267, v269), vorrq_s8(v268, v270)), vorrq_s8(v265, v266));
            if (!*(void *)&vorr_s8(*(int8x8_t *)v63.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL))) {
              goto LABEL_224;
            }
          }
        }
        else
        {
          sub_1DCA03908(__src, v255);
          if (v262 >> 61 == 5 && v262 == 0xA000000000000000)
          {
            v59.i64[0] = v263;
            v59.i64[1] = v261;
            int8x16_t v60 = vorrq_s8(v260, v258);
            int8x16_t v61 = vorrq_s8(v59, vorrq_s8(vorrq_s8(vextq_s8(v259, v259, 8uLL), vextq_s8(v60, v60, 8uLL)), vorrq_s8(v256, v257)));
            if (!(*(void *)&vorr_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL)) | v255[1] | v255[0])) {
              goto LABEL_224;
            }
          }
        }
        goto LABEL_69;
      default:
        unint64_t v185 = HIDWORD(v292);
        uint64_t v217 = v10;
        uint64_t v219 = v16;
        uint64_t v20 = v12;
        uint64_t v213 = v15;
        uint64_t v196 = v5;
        uint64_t v198 = (void *)v19;
        sub_1DCA03908(__src, &v236);
        if (!(v250 >> 61))
        {
          double v21 = v243;
          char v252 = v250;
          uint64_t v192 = v7;
          char v193 = v8;
          uint64_t v181 = v13;
          uint64_t v200 = v20;
          unint64_t v188 = v17;
          uint64_t v190 = v14;
          if (v8)
          {
            if (v238)
            {
              uint64_t v160 = v244;
              uint64_t v161 = v242;
              int v163 = v241;
              int v165 = v240;
              uint64_t v168 = v239;
              uint64_t v154 = v251;
              uint64_t v155 = v249;
              uint64_t v158 = v245;
              uint64_t v159 = v246;
              uint64_t v156 = v247;
              uint64_t v157 = v248;
              if (v6 == v236 && v196 == v237)
              {
                sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
                sub_1DCA02E30(v6, v196, v8, v7, v292, v217, v20, v222, v13, v14, v213, v219, v18, v17);
                uint64_t v143 = v13;
                char v23 = v8;
                sub_1DCA02E30(v6, v196, v8, v7, v292, v217, v20, v222, v143, v14, v213, v219, v18, v17);
                sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
                sub_1DC88244C(v6, v196, 1);
                sub_1DC88244C(v6, v196, 1);
                sub_1DC8823A0(v6, v196, 1);
                sub_1DC8823A0(v6, v196, 1);
                uint64_t v24 = v6;
              }
              else
              {
                uint64_t v171 = v236;
                uint64_t v176 = v237;
                char v153 = sub_1DCB89018();
                sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
                sub_1DCA02E30(v6, v196, v8, v7, v292, v217, v20, v222, v13, v14, v213, v219, v18, v17);
                uint64_t v139 = v13;
                char v23 = v8;
                sub_1DCA02E30(v6, v196, v8, v7, v292, v217, v20, v222, v139, v14, v213, v219, v18, v17);
                sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
                sub_1DC88244C(v171, v176, 1);
                sub_1DC88244C(v6, v196, 1);
                sub_1DC8823A0(v6, v196, 1);
                sub_1DC8823A0(v171, v176, 1);
                uint64_t v24 = v6;
                if ((v153 & 1) == 0)
                {
LABEL_106:
                  sub_1DCA03E78((uint64_t)v225);
                  sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
                  unint64_t v149 = v17;
                  uint64_t v147 = v219;
                  uint64_t v148 = v18;
                  uint64_t v145 = v14;
                  uint64_t v146 = v213;
                  uint64_t v141 = v181;
                  uint64_t v65 = v6;
                  uint64_t v66 = v196;
                  char v67 = v23;
                  goto LABEL_161;
                }
              }
LABEL_108:
              uint64_t v184 = v24;
              char v83 = v23;
              uint64_t v84 = v192;
              if (v192 != v168 || v165 != v292 || v163 != v185 || v217 != v161)
              {
                sub_1DCA03E78((uint64_t)v225);
                sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
                uint64_t v66 = v196;
                unint64_t v149 = v17;
                uint64_t v147 = v219;
                uint64_t v148 = v18;
                uint64_t v145 = v14;
                uint64_t v146 = v213;
                uint64_t v141 = v181;
                uint64_t v65 = v24;
                char v67 = v23;
                goto LABEL_220;
              }
              uint64_t v88 = v181;
              char v89 = v23;
              if (v21 == *(double *)&v20)
              {
                char v90 = v252;
                if (v188)
                {
                  if (v252)
                  {
                    sub_1DC8823B0(v222, v181, v14, v213, v219, v18, 1);
                    sub_1DC8823B0(v160, v158, v159, v156, v157, v155, 1);
                    uint64_t v88 = v181;
                    BOOL v97 = v222 == v160
                       && v181 == v158
                       && HIDWORD(v181) == HIDWORD(v158)
                       && v14 == v159
                       && v213 == v156
                       && v219 == v157
                       && HIDWORD(v219) == HIDWORD(v157)
                       && v18 == v155;
                    uint64_t v84 = v192;
                    char v89 = v193;
                    if (!v97) {
                      goto LABEL_219;
                    }
LABEL_198:
                    unint64_t v130 = v198[2];
                    uint64_t v131 = v154;
                    if (v130 == v154[2])
                    {
                      if (!v130 || v154 == v198)
                      {
LABEL_227:
                        sub_1DCA03E78((uint64_t)v225);
                        sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
                        sub_1DCA02F4C(v184, v196, v193, v192, v292, v217, v200, v222, v88, v190, v213, v219, v18, v188);
                        goto LABEL_225;
                      }
                      BOOL v132 = v198[4] == v154[4] && v198[5] == v154[5];
                      if (v132 || (char v133 = sub_1DCB89018(), v131 = v154, (v133 & 1) != 0))
                      {
                        if (v130 == 1) {
                          goto LABEL_227;
                        }
                        uint64_t v134 = v131 + 7;
                        uint64_t v135 = v198 + 7;
                        unint64_t v136 = 1;
                        while (1)
                        {
                          if (v136 >= v130)
                          {
                            __break(1u);
                            JUMPOUT(0x1DC9FB948);
                          }
                          BOOL v137 = *(v135 - 1) == *(v134 - 1) && *v135 == *v134;
                          if (!v137 && (sub_1DCB89018() & 1) == 0) {
                            break;
                          }
                          ++v136;
                          v134 += 2;
                          v135 += 2;
                          if (v130 == v136) {
                            goto LABEL_227;
                          }
                        }
                      }
                    }
                    sub_1DCA03E78((uint64_t)v225);
                    sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
                    uint64_t v66 = v196;
                    unint64_t v149 = v188;
                    uint64_t v147 = v219;
                    uint64_t v148 = v18;
                    uint64_t v145 = v190;
                    uint64_t v146 = v213;
                    uint64_t v141 = v88;
                    uint64_t v65 = v184;
LABEL_81:
                    char v67 = v193;
LABEL_161:
                    uint64_t v109 = v192;
LABEL_162:
                    uint64_t v110 = v292;
                    uint64_t v111 = v217;
                    uint64_t v112 = v200;
LABEL_163:
                    sub_1DCA02F4C(v65, v66, v67, v109, v110, v111, v112, v222, v141, v145, v146, v147, v148, v149);
                    goto LABEL_164;
                  }
LABEL_180:
                  char v120 = v188 & 1;
                  uint64_t v121 = v156;
                  uint64_t v122 = v157;
                  uint64_t v123 = v155;
                  sub_1DC88245C(v160, v158, v159, v156, v157, v155, v90);
                }
                else
                {
                  if (v252)
                  {
                    swift_bridgeObjectRetain();
                    goto LABEL_180;
                  }
                  uint64_t v124 = *(void *)(v222 + 16);
                  if (v124 == *(void *)(v160 + 16))
                  {
                    if (!v124 || v222 == v160)
                    {
LABEL_197:
                      sub_1DC88245C(v160, v158, v159, v156, v157, v155, 0);
                      sub_1DC88245C(v222, v181, v14, v213, v219, v18, 0);
                      sub_1DC8823B0(v222, v181, v14, v213, v219, v18, 0);
                      sub_1DC8823B0(v160, v158, v159, v156, v157, v155, 0);
                      goto LABEL_198;
                    }
                    uint64_t v125 = (void *)(v160 + 48);
                    uint64_t v126 = (void *)(v222 + 48);
                    while (1)
                    {
                      BOOL v127 = *(v126 - 2) == *(v125 - 2) && *((_DWORD *)v126 - 2) == *((_DWORD *)v125 - 2);
                      BOOL v128 = v127 && *((_DWORD *)v126 - 1) == *((_DWORD *)v125 - 1);
                      if (!v128 || *v126 != *v125) {
                        break;
                      }
                      v125 += 3;
                      v126 += 3;
                      if (!--v124) {
                        goto LABEL_197;
                      }
                    }
                  }
                  uint64_t v121 = v156;
                  uint64_t v122 = v157;
                  uint64_t v123 = v155;
                  sub_1DC88245C(v160, v158, v159, v156, v157, v155, 0);
                  sub_1DC88245C(v222, v181, v14, v213, v219, v18, 0);
                  char v120 = 0;
                  char v90 = 0;
                }
                sub_1DC8823B0(v222, v181, v190, v213, v219, v18, v120);
                sub_1DC8823B0(v160, v158, v159, v121, v122, v123, v90);
                uint64_t v84 = v192;
                char v89 = v83;
                uint64_t v20 = v200;
              }
LABEL_219:
              sub_1DCA03E78((uint64_t)v225);
              sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
              uint64_t v66 = v196;
              unint64_t v149 = v188;
              uint64_t v147 = v219;
              uint64_t v148 = v18;
              uint64_t v145 = v190;
              uint64_t v146 = v213;
              uint64_t v141 = v88;
              uint64_t v65 = v184;
              char v67 = v89;
LABEL_220:
              uint64_t v109 = v84;
              uint64_t v110 = v292;
              uint64_t v111 = v217;
              uint64_t v112 = v20;
              goto LABEL_163;
            }
          }
          else if ((v238 & 1) == 0)
          {
            uint64_t v160 = v244;
            uint64_t v161 = v242;
            int v163 = v241;
            int v165 = v240;
            uint64_t v168 = v239;
            uint64_t v154 = v251;
            uint64_t v155 = v249;
            uint64_t v158 = v245;
            uint64_t v159 = v246;
            uint64_t v156 = v247;
            uint64_t v157 = v248;
            uint64_t v175 = v236;
            uint64_t v179 = v237;
            type metadata accessor for SNMLModelHashableUncodableWrapper();
            sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
            uint64_t v24 = v6;
            sub_1DCA02E30(v6, v196, v193, v7, v292, v217, v20, v222, v13, v14, v213, v219, v18, v17);
            sub_1DC88244C(v175, v179, 0);
            sub_1DC88244C(v6, v196, 0);
            sub_1DCA02E30(v6, v196, v193, v7, v292, v217, v20, v222, v13, v14, v213, v219, v18, v17);
            char v23 = v193;
            sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
            sub_1DC88244C(v175, v179, 0);
            sub_1DC88244C(v6, v196, 0);
            char v82 = sub_1DC971658(v6, v175);
            sub_1DC8823A0(v6, v196, 0);
            sub_1DC8823A0(v175, v179, 0);
            sub_1DC8823A0(v175, v179, 0);
            sub_1DC8823A0(v6, v196, 0);
            if ((v82 & 1) == 0) {
              goto LABEL_106;
            }
            goto LABEL_108;
          }
          char v170 = v238 & 1;
          uint64_t v174 = v236;
          uint64_t v178 = v237;
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
          uint64_t v64 = v292;
          sub_1DCA02E30(v6, v196, v8, v7, v292, v217, v200, v222, v13, v14, v213, v219, v18, v17);
          sub_1DCA02E30(v6, v196, v8, v7, v64, v217, v200, v222, v13, v14, v213, v219, v18, v17);
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
          sub_1DC88244C(v174, v178, v170);
          sub_1DC88244C(v6, v196, v8 & 1);
          sub_1DC8823A0(v6, v196, v8 & 1);
          sub_1DC8823A0(v174, v178, v170);
          sub_1DCA03E78((uint64_t)v225);
          sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
          unint64_t v149 = v17;
          uint64_t v147 = v219;
          uint64_t v148 = v18;
          uint64_t v145 = v14;
          uint64_t v146 = v213;
          uint64_t v141 = v13;
          uint64_t v65 = v6;
          uint64_t v66 = v196;
          goto LABEL_81;
        }
        sub_1DC88244C(v6, v196, v8 & 1);
        sub_1DC88245C(v222, v13, v14, v213, v219, v18, v17 & 1);
LABEL_68:
        swift_bridgeObjectRetain();
LABEL_69:
        sub_1DCA03AF4(__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
        sub_1DCA03E78((uint64_t)v225);
LABEL_164:
        if (++v3 == v212) {
          goto LABEL_221;
        }
        break;
    }
  }
}

uint64_t sub_1DC9FB960()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1DC9FB998()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[12];
  unint64_t v6 = v0[13];
  switch(v6 >> 61)
  {
    case 1uLL:
      sub_1DCB891B8();
      goto LABEL_9;
    case 2uLL:
      sub_1DCB891B8();
      sub_1DCB891E8();
      sub_1DCB891D8();
      sub_1DCB891D8();
      sub_1DCB891E8();
      sub_1DCB891E8();
      sub_1DCB891D8();
      sub_1DCB891D8();
      sub_1DCB891E8();
      uint64_t result = sub_1DCB891E8();
      break;
    case 3uLL:
      uint64_t v24 = v0[11];
      uint64_t v26 = v0[9];
      uint64_t v20 = v0[10];
      uint64_t v22 = v0[7];
      uint64_t v28 = v0[5];
      sub_1DCB891B8();
      sub_1DC882C30(v1, v2, v3);
      swift_bridgeObjectRetain();
      sub_1DC8C296C();
      swift_bridgeObjectRetain();
      sub_1DCB879B8();
      swift_bridgeObjectRelease();
      sub_1DCB879B8();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_1DCA04FFC();
      uint64_t result = sub_1DCA02F4C(v14, v15, v16, v17, v4, v28, v18, v22, v19, v26, v20, v24, v5, v6);
      break;
    case 4uLL:
      uint64_t v23 = v0[11];
      uint64_t v27 = v0[5];
      uint64_t v21 = v0[3];
      uint64_t v25 = v0[9];
      uint64_t v8 = v0[10];
      sub_1DCB891B8();
      swift_bridgeObjectRetain();
      sub_1DCB879B8();
      uint64_t v9 = sub_1DCA04FFC();
      uint64_t result = sub_1DCA02F4C(v9, v10, v11, v21, v4, v27, v12, v13, v19, v25, v8, v23, v5, v6);
      break;
    case 5uLL:
      if (v6 == 0xA000000000000000) {
        sub_1DCA0510C();
      }
LABEL_9:
      uint64_t result = sub_1DCB891B8();
      break;
    default:
      sub_1DCB891B8();
      uint64_t result = sub_1DCA19528();
      break;
  }
  return result;
}

uint64_t sub_1DC9FBD08(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001DCB935A0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x7455686365657073 && a2 == 0xEF65636E61726574;
    if (v5 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x6D45686365657073 && a2 == 0xED00006E6F69746FLL;
      if (v6 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v7 = a1 == 0x76654C6F69647561 && a2 == 0xEA00000000006C65;
        if (v7 || (sub_1DCB89018() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v8 = a1 == 0x69536D617A616873 && a2 == 0xEF65727574616E67;
          if (v8 || (sub_1DCB89018() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v9 = a1 == 0x746544646E756F73 && a2 == 0xEE006E6F69746365;
            if (v9 || (sub_1DCB89018() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001DCB935C0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v10 = sub_1DCB89018();
              swift_bridgeObjectRelease();
              if (v10) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1DC9FC070(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7455686365657073;
      break;
    case 2:
      unint64_t result = 0x6D45686365657073;
      break;
    case 3:
      unint64_t result = 0x76654C6F69647561;
      break;
    case 4:
      unint64_t result = 0x69536D617A616873;
      break;
    case 5:
      unint64_t result = 0x746544646E756F73;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DC9FC198(void *a1)
{
  sub_1DC87E988(&qword_1EAAA43A0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC88D550();
  sub_1DC888164(v5);
  sub_1DC87E988(&qword_1EAAA43A8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  sub_1DC888164(v7);
  sub_1DC87E988(&qword_1EAAA43B0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v8);
  sub_1DC88D550();
  sub_1DC888164(v9);
  sub_1DC87E988(&qword_1EAAA43B8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v10);
  sub_1DC88D550();
  sub_1DC888164(v11);
  sub_1DC87E988(&qword_1EAAA43C0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  sub_1DC888164(v13);
  sub_1DC87E988(&qword_1EAAA43C8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v14);
  sub_1DC981E40();
  sub_1DC87E988(&qword_1EAAA43D0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v15);
  sub_1DC88D550();
  sub_1DC888164(v16);
  uint64_t v53 = sub_1DC87E988((uint64_t *)&unk_1EAAA43D8);
  sub_1DC89D4E0();
  uint64_t v51 = v17;
  MEMORY[0x1F4188790](v18);
  sub_1DC89D9A0();
  uint64_t v19 = v1[1];
  uint64_t v52 = *v1;
  uint64_t v50 = v1[2];
  uint64_t v20 = v1[4];
  uint64_t v48 = v1[3];
  uint64_t v49 = v1[5];
  uint64_t v47 = v1[7];
  uint64_t v46 = v1[8];
  uint64_t v45 = v1[9];
  uint64_t v44 = v1[10];
  uint64_t v43 = v1[11];
  unint64_t v21 = v1[13];
  uint64_t v42 = v1[12];
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA03C18();
  sub_1DCB892B8();
  switch(v21 >> 61)
  {
    case 1uLL:
      sub_1DCA03DE0();
      sub_1DCB88E88();
      sub_1DC882A04();
      sub_1DCA04F24();
      sub_1DC88D5C8();
      v29();
      uint64_t v30 = sub_1DCA05038();
      uint64_t v32 = v53;
      goto LABEL_13;
    case 2uLL:
      sub_1DCA03CFC();
      uint64_t v20 = v53;
      sub_1DCB88E88();
      sub_1DC882094();
      sub_1DCB88F18();
      sub_1DC88D5C8();
      v33();
      int v31 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8);
      uint64_t v30 = v2;
      goto LABEL_12;
    case 3uLL:
      sub_1DC882C30(v52, v19, v50);
      sub_1DCA03CB0();
      swift_bridgeObjectRetain();
      sub_1DCB88E88();
      sub_1DC882B34();
      sub_1DCA04F24();
      sub_1DC88D5C8();
      v34();
      sub_1DCA05038();
      sub_1DC88D5C8();
      v35();
      uint64_t v36 = sub_1DCA05118();
      return sub_1DCA02F4C(v36, v37, v38, v48, v20, v49, v39, v47, v46, v45, v44, v43, v42, v21);
    case 4uLL:
      sub_1DCA03C64();
      sub_1DCA04CE0();
      sub_1DC882640();
      sub_1DCA04F24();
      goto LABEL_11;
    case 5uLL:
      if (v21 != 0xA000000000000000 || (sub_1DCA0510C(), sub_1DCA0510C(), sub_1DCA0510C(), v40))
      {
        sub_1DCA03D48();
        sub_1DCA04CE0();
        sub_1DC881C58();
        sub_1DCA05078();
      }
      else
      {
        sub_1DCA03D94();
        sub_1DCA04CE0();
        sub_1DC881B1C();
        sub_1DCA05078();
      }
LABEL_11:
      sub_1DC88D5C8();
      v41();
      uint64_t v30 = sub_1DCA05038();
LABEL_12:
      uint64_t v32 = v20;
LABEL_13:
      uint64_t result = v31(v30, v32);
      break;
    default:
      sub_1DC88244C(v52, v19, v50 & 1);
      sub_1DC88245C(v47, v46, v45, v44, v43, v42, v21 & 1);
      sub_1DCA03E2C();
      swift_bridgeObjectRetain();
      sub_1DCB88E88();
      sub_1DC8822FC();
      sub_1DCB88F18();
      sub_1DC88D5C8();
      v22();
      sub_1DC88D5C8();
      v23();
      uint64_t v24 = sub_1DCA05118();
      uint64_t result = sub_1DCA02F4C(v24, v25, v26, v48, v20, v49, v27, v47, v46, v45, v44, v43, v42, v21);
      break;
  }
  return result;
}

uint64_t sub_1DC9FCB94()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9FCC04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  v74[11] = sub_1DC87E988(&qword_1EAAA42E0);
  sub_1DC89D4E0();
  v74[16] = v5;
  MEMORY[0x1F4188790](v6);
  sub_1DC88D550();
  uint64_t v78 = v7;
  v74[14] = sub_1DC87E988(&qword_1EAAA42E8);
  sub_1DC89D4E0();
  v74[15] = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC88D550();
  uint64_t v77 = v10;
  v74[13] = sub_1DC87E988(&qword_1EAAA42F0);
  sub_1DC89D4E0();
  v74[12] = v11;
  MEMORY[0x1F4188790](v12);
  sub_1DC88D550();
  v74[18] = v13;
  v74[7] = sub_1DC87E988(&qword_1EAAA42F8);
  sub_1DC89D4E0();
  v74[10] = v14;
  MEMORY[0x1F4188790](v15);
  sub_1DC88D550();
  sub_1DC888164(v16);
  v74[9] = sub_1DC87E988(&qword_1EAAA4300);
  sub_1DC89D4E0();
  v74[8] = v17;
  MEMORY[0x1F4188790](v18);
  sub_1DC88D550();
  uint64_t v76 = v19;
  v74[6] = sub_1DC87E988(&qword_1EAAA4308);
  sub_1DC89D4E0();
  v74[5] = v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1DC87E988(&qword_1EAAA4310);
  sub_1DC89D4E0();
  v74[4] = v25;
  MEMORY[0x1F4188790](v26);
  sub_1DC8CD750();
  uint64_t v27 = sub_1DC87E988(&qword_1EAAA4318);
  sub_1DC89D4E0();
  uint64_t v29 = v28;
  MEMORY[0x1F4188790](v30);
  sub_1DC89D9A0();
  uint64_t v31 = a1[3];
  unint64_t v79 = a1;
  sub_1DC881A8C(a1, v31);
  sub_1DCA03C18();
  uint64_t v32 = v90;
  sub_1DCB89298();
  if (v32)
  {
    uint64_t v27 = (uint64_t)v79;
    return sub_1DC8818D0(v27);
  }
  v74[2] = v2;
  v74[1] = v24;
  v74[3] = v23;
  uint64_t v90 = v29;
  uint64_t v33 = v3;
  uint64_t v34 = sub_1DCB88E58();
  uint64_t v35 = *(void *)(v34 + 16);
  if (!v35)
  {
    uint64_t v55 = v27;
    uint64_t v27 = (uint64_t)v79;
    uint64_t v56 = v90;
LABEL_9:
    uint64_t v57 = sub_1DCB88B18();
    swift_allocError();
    int8x16_t v59 = v58;
    sub_1DC87E988(&qword_1EAA9E130);
    *int8x16_t v59 = &unk_1F37F1AE8;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v57 - 8) + 104))(v59, *MEMORY[0x1E4FBBA70], v57);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v33, v55);
    return sub_1DC8818D0(v27);
  }
  uint64_t v36 = v3;
  v74[0] = 0;
  uint64_t v37 = *(unsigned __int8 *)(v34 + 32);
  sub_1DC9CFE4C(1, v35, v34, v34 + 32, 0, (2 * v35) | 1);
  uint64_t v39 = v38;
  unint64_t v41 = v40;
  swift_bridgeObjectRelease();
  if (v39 != v41 >> 1)
  {
    uint64_t v55 = v27;
    uint64_t v27 = (uint64_t)v79;
    uint64_t v56 = v90;
    uint64_t v33 = v36;
    goto LABEL_9;
  }
  uint64_t v42 = v75;
  switch(v37)
  {
    case 1:
      LOBYTE(v80) = 1;
      sub_1DCA03DE0();
      sub_1DCA04B7C();
      sub_1DC882A50();
      sub_1DCA04DB8();
      sub_1DC88D5C8();
      v66();
      swift_unknownObjectRelease();
      sub_1DC88D5C8();
      v67();
      sub_1DCA04DD8();
      *(void *)&long long v45 = v80;
      long long v49 = 0uLL;
      unint64_t v53 = 0x2000000000000000;
      long long v50 = 0uLL;
      long long v51 = 0uLL;
      long long v52 = 0uLL;
      uint64_t v27 = (uint64_t)v79;
      break;
    case 2:
      LOBYTE(v80) = 2;
      sub_1DCA03D94();
      sub_1DCA04B7C();
      uint64_t v27 = (uint64_t)v79;
      sub_1DC881B68();
      sub_1DCA0514C();
      sub_1DC88D5C8();
      v60();
      swift_unknownObjectRelease();
      sub_1DC88D5C8();
      v61();
      sub_1DCA04DD8();
      long long v45 = 0uLL;
      goto LABEL_13;
    case 3:
      LOBYTE(v80) = 3;
      sub_1DCA03D48();
      sub_1DCA04B7C();
      sub_1DCA04FA4();
      sub_1DC881CA4();
      sub_1DCA04DB8();
      sub_1DC88D5C8();
      v62();
      swift_unknownObjectRelease();
      sub_1DC88D5C8();
      v63();
      sub_1DCA04DD8();
      long long v45 = xmmword_1DCBC0380;
LABEL_13:
      long long v49 = 0uLL;
      unint64_t v53 = 0xA000000000000000;
      goto LABEL_18;
    case 4:
      LOBYTE(v80) = 4;
      sub_1DCA03CFC();
      sub_1DCA04B7C();
      uint64_t v27 = (uint64_t)v79;
      sub_1DC8820EC();
      sub_1DCA0514C();
      sub_1DC88D5C8();
      v68();
      swift_unknownObjectRelease();
      sub_1DC88D5C8();
      v69();
      uint64_t v54 = 0;
      long long v45 = v80;
      uint64_t v46 = v81;
      uint64_t v47 = v82;
      long long v50 = 0uLL;
      unint64_t v53 = 0x4000000000000000;
      uint64_t v48 = v83;
      long long v51 = 0uLL;
      long long v52 = 0uLL;
      long long v49 = v84;
      break;
    case 5:
      LOBYTE(v80) = 5;
      sub_1DCA03CB0();
      sub_1DCA04B7C();
      sub_1DCA04FA4();
      sub_1DC882C5C();
      sub_1DCA04DB8();
      sub_1DC88D5C8();
      v70();
      swift_unknownObjectRelease();
      sub_1DC88D5C8();
      v71();
      uint64_t v54 = 0;
      long long v45 = v80;
      uint64_t v46 = v81;
      uint64_t v47 = v82;
      uint64_t v48 = v83;
      long long v50 = 0uLL;
      long long v49 = v84;
      unint64_t v53 = 0x6000000000000000;
      goto LABEL_19;
    case 6:
      LOBYTE(v80) = 6;
      sub_1DCA03C64();
      sub_1DCA04B7C();
      uint64_t v65 = v27;
      uint64_t v27 = (uint64_t)v79;
      uint64_t v77 = v65;
      sub_1DC88268C();
      sub_1DCB88DF8();
      sub_1DC88D5C8();
      v72();
      swift_unknownObjectRelease();
      sub_1DCA050E4();
      sub_1DC88D5C8();
      v73();
      sub_1DCA04DD8();
      long long v45 = v80;
      long long v49 = 0uLL;
      unint64_t v53 = 0x8000000000000000;
LABEL_18:
      long long v50 = 0uLL;
LABEL_19:
      long long v51 = 0uLL;
      long long v52 = 0uLL;
      break;
    default:
      LOBYTE(v80) = 0;
      sub_1DCA03E2C();
      sub_1DCA04B7C();
      sub_1DCA04FA4();
      sub_1DC882468();
      sub_1DCA04DB8();
      sub_1DC88D5C8();
      v43();
      swift_unknownObjectRelease();
      sub_1DC88D5C8();
      v44();
      long long v45 = v80;
      uint64_t v46 = v81;
      uint64_t v47 = v82;
      uint64_t v48 = v83;
      long long v49 = v84;
      long long v50 = v85;
      long long v51 = v86;
      long long v52 = v87;
      unint64_t v53 = v88;
      uint64_t v54 = v89;
      break;
  }
  *(_OWORD *)uint64_t v42 = v45;
  *(void *)(v42 + 16) = v46;
  *(void *)(v42 + 24) = v47;
  *(void *)(v42 + 32) = v48;
  *(_OWORD *)(v42 + 40) = v49;
  *(_OWORD *)(v42 + 56) = v50;
  *(_OWORD *)(v42 + 72) = v51;
  *(_OWORD *)(v42 + 88) = v52;
  *(void *)(v42 + 104) = v53;
  *(void *)(v42 + 112) = v54;
  return sub_1DC8818D0(v27);
}

uint64_t sub_1DC9FD724(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03D48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9FD760(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03D48();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1DC9FD79C()
{
  return sub_1DC9FC070(*v0);
}

uint64_t sub_1DC9FD7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DC9FBD08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC9FD7CC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03C18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9FD808(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03C18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9FD844(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03C64();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9FD880(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03C64();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9FD8BC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03CFC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9FD8F8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03CFC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9FD934(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03E2C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9FD970(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03E2C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9FD9AC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03CB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9FD9E8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03CB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9FDA24(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03D94();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9FDA60(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03D94();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9FDA9C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03DE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DC9FDAD8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA03DE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DC9FDB1C()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DC9FDB88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC9FCC04(a1, a2);
}

uint64_t sub_1DC9FDBA0(void *a1)
{
  return sub_1DC9FC198(a1);
}

uint64_t sub_1DC9FDBBC(uint64_t a1, uint64_t a2)
{
  v3[58] = a2;
  v3[59] = v2;
  v3[57] = a1;
  sub_1DC89F6D8();
  v3[60] = v4;
  return sub_1DC99A434((uint64_t)sub_1DC9FDBEC, 0);
}

uint64_t sub_1DC9FDBEC()
{
  sub_1DC9FE2E4(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 472);
  sub_1DCA03908((void *)(v0 + 136), (void *)(v0 + 16));
  sub_1DCA03908((void *)(v0 + 16), (void *)(v0 + 256));
  uint64_t v2 = v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_audioConfiguration;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_audioConfiguration);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_audioConfiguration + 8);
  *(void *)(v0 + 488) = v3;
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  *(void *)(v0 + 496) = v6;
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  *(void *)(v0 + 504) = v8;
  char v9 = *(unsigned char *)(v2 + 48);
  char v10 = *(unsigned char *)(v2 + 49);
  char v11 = *(unsigned char *)(v2 + 50);
  char v12 = *(unsigned char *)(v2 + 51);
  char v13 = *(unsigned char *)(v2 + 52);
  char v14 = *(unsigned char *)(v2 + 53);
  uint64_t v15 = *(void *)(v2 + 56);
  LOBYTE(v2) = *(unsigned char *)(v2 + 64);
  *(void *)(v0 + 376) = v4;
  *(void *)(v0 + 384) = v3;
  *(void *)(v0 + 392) = v5;
  *(void *)(v0 + 400) = v6;
  *(void *)(v0 + 408) = v7;
  *(void *)(v0 + 416) = v8;
  *(unsigned char *)(v0 + 424) = v9;
  *(unsigned char *)(v0 + 425) = v10;
  *(unsigned char *)(v0 + 426) = v11;
  *(unsigned char *)(v0 + 427) = v12;
  *(unsigned char *)(v0 + 428) = v13;
  *(unsigned char *)(v0 + 429) = v14;
  *(void *)(v0 + 432) = v15;
  *(unsigned char *)(v0 + 440) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1DC9FDE00;
  sub_1DC8CD7C8();
  return sub_1DC9FE6E4();
}

uint64_t sub_1DC9FDE00()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 520) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v5 + 528) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9FDF24()
{
  uint64_t v1 = v0[59];
  uint64_t v2 = v0[57];
  v0[56] = v0[66];
  uint64_t v3 = sub_1DC8BABC0();
  swift_unknownObjectWeakInit();
  uint64_t v4 = sub_1DC8BABC0();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = v4;
  void v5[3] = v2;
  _OWORD v5[4] = v3;
  uint64_t v6 = sub_1DC8BABC0();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v2;
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAAA4200);
  sub_1DC88CF34(&qword_1EAAA3FE0, (uint64_t *)&unk_1EAAA4200);
  v0[67] = sub_1DCB87428();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_state);
  v0[68] = v8;
  swift_retain();
  return MEMORY[0x1F4188298](sub_1DC9FE10C, v8, 0);
}

uint64_t sub_1DC9FE10C()
{
  sub_1DC8867A8();
  sub_1DCA039F0((void *)(v0 + 16), *(void *)(v0 + 536));
  swift_release();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_1DC9FE180()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DCA03AF4((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
  swift_release();
  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DC9FE204()
{
  sub_1DCA03AF4((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02F4C);
  uint64_t v1 = *(void **)(v0 + 520);
  if (objc_msgSend(*(id *)(v0 + 464), sel_respondsToSelector_, sel_request_didFailWithError_))
  {
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v2 = *(void **)(v0 + 464);
    swift_unknownObjectRetain();
    uint64_t v4 = (void *)sub_1DCB86888();
    objc_msgSend(v2, sel_request_didFailWithError_, v3, v4);

    swift_unknownObjectRelease();
  }

  sub_1DC8BA978();
  return v5();
}

void sub_1DC9FE2E4(uint64_t a1@<X8>)
{
  uint64_t v7 = v1;
  type metadata accessor for _SNClassifySoundRequest();
  uint64_t v9 = sub_1DCA04EFC();
  unint64_t v98 = (void *)a1;
  uint64_t v99 = v1;
  if (v9)
  {
    uint64_t v10 = sub_1DCA04EC0((uint64_t *)(v9 + OBJC_IVAR____SNClassifySoundRequest_impl));
    a1 = v11[7];
    uint64_t v105 = v11[6];
    uint64_t v12 = v11[8];
    uint64_t v5 = v11[9];
    sub_1DCA04F44(v10, v13, v14);
    uint64_t v103 = v12;
    uint64_t v104 = a1;
    sub_1DCA0516C(a1, v12, v5);
  }
  else
  {
    uint64_t v101 = 0;
    uint64_t v109 = 0;
    uint64_t v106 = 0;
    uint64_t v100 = 0;
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    sub_1DCA04BD4();
    unint64_t v3 = 0x1FFFFFFFELL;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {
    sub_1DCA050CC();
    uint64_t v15 = sub_1DCA18740();
    sub_1DCA05014(v101, v16, v17, v18, v19, v20, v21, v22, v103, v5, v2, v1, v6, v3, v4, v15, (uint64_t)v98, v1, v100,
      v101,
      v103,
      v104,
      v105);
    swift_unknownObjectRelease();
    uint64_t v23 = sub_1DCA04EC0((uint64_t *)(v15 + OBJC_IVAR____SNClassifySoundRequest_impl));
    uint64_t v25 = v24[7];
    uint64_t v105 = v24[6];
    uint64_t v26 = v24[8];
    a1 = v24[9];
    sub_1DCA04F44(v23, v27, v28);
    uint64_t v103 = v26;
    uint64_t v104 = v25;
    uint64_t v29 = v26;
    uint64_t v5 = a1;
    sub_1DCA0516C(v25, v29, a1);
  }
  type metadata accessor for SNDetectSpeechUtteranceRequest();
  if (sub_1DCA04EFC())
  {
    sub_1DCA050CC();
    sub_1DCA05014(v101, v30, v31, v32, v33, v34, v35, v36, v103, v5, v2, v1, v6, v3, v4, (uint64_t)v97, (uint64_t)v98, v99, v100,
      v101,
      v103,
      v104,
      v105);
    uint64_t v37 = *(void *)(a1 + OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl);
    swift_unknownObjectRelease();
    uint64_t v109 = 0;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v38 = 0;
    uint64_t v108 = 0;
    sub_1DCA04BD4();
    unint64_t v3 = 0x2000000000000000;
  }
  else
  {
    uint64_t v38 = v100;
    uint64_t v37 = v101;
  }
  type metadata accessor for SNEstimateSpeechEmotionRequest();
  if (sub_1DCA04EFC())
  {
    uint64_t v39 = swift_unknownObjectRetain();
    sub_1DCA04D70(v39, v40, v41, v42, v43, v44, v45, v46, v90, v91, v92, v93, v94, v95, v96, (uint64_t)v97, (uint64_t)v98, v99, v100,
      v101,
      v103,
      v104,
      v105);
    swift_unknownObjectRelease();
    uint64_t v37 = 0;
    uint64_t v109 = 0;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v38 = 0;
    uint64_t v108 = 0;
    sub_1DCA04BD4();
    unint64_t v3 = 0xA000000000000000;
  }
  type metadata accessor for SNMeasureLKFSRequest();
  if (sub_1DCA04EFC())
  {
    uint64_t v47 = swift_unknownObjectRetain();
    sub_1DCA04D70(v47, v48, v49, v50, v51, v52, v53, v54, v90, v91, v92, v93, v94, v95, v96, (uint64_t)v97, (uint64_t)v98, v99, v100,
      v101,
      v103,
      v104,
      v105);
    swift_unknownObjectRelease();
    uint64_t v109 = 0;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v38 = 0;
    uint64_t v108 = 0;
    uint64_t v104 = 0;
    uint64_t v105 = 0;
    uint64_t v5 = 0;
    uint64_t v2 = 0;
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    uint64_t v4 = 0;
    unint64_t v3 = 0xA000000000000000;
    uint64_t v102 = 1;
    uint64_t v103 = 0;
  }
  else
  {
    uint64_t v102 = v37;
  }
  type metadata accessor for SNGenerateShazamSignatureRequest();
  if (sub_1DCA04EFC())
  {
    uint64_t v55 = sub_1DCA050CC();
    sub_1DCA04B9C(v55, v56, v57, v58, v59, v60, v61, v62, v90, v91, v92, v93, v94, v95, v96, (uint64_t)v97, (uint64_t)v98, v99, v100,
      v102,
      v103,
      v104,
      v105);
    uint64_t v102 = *(void *)(v37 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl);
    uint64_t v109 = *(void *)(v37 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 8);
    uint64_t v38 = *(void *)(v37 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 24);
    uint64_t v108 = *(void *)(v37 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 32);
    uint64_t v106 = *(void *)(v37 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 16);
    uint64_t v107 = *(void *)(v37 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 40);
    uint64_t v105 = *(void *)(v37 + OBJC_IVAR___SNGenerateShazamSignatureRequest_impl + 48);
    swift_unknownObjectRelease();
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    sub_1DCA04C1C();
    unint64_t v3 = 0x4000000000000000;
  }
  type metadata accessor for SNDetectSoundRequest();
  if (sub_1DCA04EFC())
  {
    uint64_t v63 = sub_1DCA050CC();
    sub_1DCA04B9C(v63, v64, v65, v66, v67, v68, v69, v70, v90, v91, v92, v93, v94, v95, v96, (uint64_t)v97, (uint64_t)v98, v99, v100,
      v102,
      v103,
      v104,
      v105);
    uint64_t v38 = *(void *)(v37 + OBJC_IVAR___SNDetectSoundRequest_impl + 24);
    uint64_t v7 = *(void *)(v37 + OBJC_IVAR___SNDetectSoundRequest_impl + 32);
    uint64_t v106 = *(unsigned __int8 *)(v37 + OBJC_IVAR___SNDetectSoundRequest_impl + 16);
    uint64_t v107 = *(unsigned __int8 *)(v37 + OBJC_IVAR___SNDetectSoundRequest_impl + 40);
    uint64_t v102 = *(void *)(v37 + OBJC_IVAR___SNDetectSoundRequest_impl);
    uint64_t v109 = *(void *)(v37 + OBJC_IVAR___SNDetectSoundRequest_impl + 8);
    sub_1DC882C30(v102, v109, *(unsigned char *)(v37 + OBJC_IVAR___SNDetectSoundRequest_impl + 16));
    uint64_t v108 = v7;
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    sub_1DCA04BD4();
    unint64_t v3 = 0x6000000000000000;
  }
  type metadata accessor for SNEstimateDirectionOfArrivalRequest();
  if (sub_1DCA04EFC())
  {
    uint64_t v71 = sub_1DCA050CC();
    sub_1DCA04B9C(v71, v72, v73, v74, v75, v76, v77, v78, v90, v91, v92, v93, v94, v95, v96, (uint64_t)v97, (uint64_t)v98, v99, v100,
      v102,
      v103,
      v104,
      v105);
    uint64_t v79 = v37 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl;
    uint64_t v80 = *(void *)(v37 + OBJC_IVAR___SNEstimateDirectionOfArrivalRequest_impl);
    uint64_t v81 = *(void *)(v79 + 8);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    sub_1DCA04C1C();
    unint64_t v3 = 0x8000000000000000;
  }
  else
  {
    uint64_t v80 = v102;
    uint64_t v88 = v103;
    uint64_t v82 = v38;
    uint64_t v81 = v109;
    uint64_t v84 = v107;
    uint64_t v83 = v108;
    uint64_t v85 = v106;
    uint64_t v87 = v104;
    uint64_t v86 = v105;
    if (v3 >> 1 == 0xFFFFFFFF)
    {
      sub_1DCA03784();
      swift_allocError();
      *uint64_t v89 = 1;
      swift_willThrow();
      return;
    }
  }
  *unint64_t v98 = v80;
  v98[1] = v81;
  v98[2] = v85;
  v98[3] = v82;
  v98[4] = v83;
  v98[5] = v84;
  v98[6] = v86;
  v98[7] = v87;
  v98[8] = v88;
  v98[9] = v5;
  v98[10] = v2;
  v98[11] = v7;
  v98[12] = v6;
  v98[13] = v3;
  v98[14] = v4;
}

uint64_t sub_1DC9FE6E4()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  *(void *)(v0 + 264) = v5;
  uint64_t v6 = sub_1DC87E988((uint64_t *)&unk_1EAAA28B0);
  *(void *)(v0 + 272) = v6;
  sub_1DC89D568(v6);
  *(void *)(v0 + 280) = v7;
  *(void *)(v0 + 288) = sub_1DC8BAE7C();
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA4220);
  *(void *)(v0 + 296) = v8;
  sub_1DC89D568(v8);
  *(void *)(v0 + 304) = v9;
  *(void *)(v0 + 312) = sub_1DC8BAE7C();
  uint64_t v10 = sub_1DC87E988(&qword_1EAAA4228);
  *(void *)(v0 + 320) = v10;
  sub_1DC89D568(v10);
  *(void *)(v0 + 328) = v11;
  *(void *)(v0 + 336) = sub_1DC8BAE7C();
  uint64_t v12 = sub_1DC87E988(&qword_1EAAA4230);
  *(void *)(v0 + 344) = v12;
  sub_1DC89D568(v12);
  *(void *)(v0 + 352) = v13;
  *(void *)(v0 + 360) = sub_1DC8BAE7C();
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA4238);
  *(void *)(v0 + 368) = v14;
  sub_1DC89D568(v14);
  *(void *)(v0 + 376) = v15;
  *(void *)(v0 + 384) = sub_1DC8BAE7C();
  uint64_t v16 = sub_1DC87E988(&qword_1EAAA4240);
  *(void *)(v0 + 392) = v16;
  sub_1DC89D568(v16);
  *(void *)(v0 + 400) = v17;
  *(void *)(v0 + 408) = sub_1DC8BAE7C();
  uint64_t v18 = sub_1DC87E988(&qword_1EAAA4248);
  *(void *)(v0 + 416) = v18;
  sub_1DC89D568(v18);
  *(void *)(v0 + 424) = v19;
  *(void *)(v0 + 432) = sub_1DC8BAE7C();
  uint64_t v20 = type metadata accessor for RemoteRequest();
  *(void *)(v0 + 440) = v20;
  sub_1DC8BADF0(v20);
  *(void *)(v0 + 448) = swift_task_alloc();
  *(void *)(v0 + 456) = swift_task_alloc();
  *(void *)(v0 + 464) = swift_task_alloc();
  *(void *)(v0 + 472) = swift_task_alloc();
  *(void *)(v0 + 480) = swift_task_alloc();
  *(void *)(v0 + 488) = swift_task_alloc();
  *(void *)(v0 + 496) = swift_task_alloc();
  long long v21 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v0 + 504) = *(_OWORD *)v4;
  *(_OWORD *)(v0 + 520) = v21;
  long long v22 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v0 + 536) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v0 + 552) = v22;
  long long v23 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(v0 + 568) = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(v0 + 584) = v23;
  *(_OWORD *)(v0 + 600) = *(_OWORD *)(v4 + 96);
  *(void *)(v0 + 616) = *(void *)(v4 + 112);
  uint64_t v24 = *(void *)(v2 + 8);
  *(void *)(v0 + 624) = *(void *)v2;
  *(void *)(v0 + 632) = v24;
  uint64_t v25 = *(void *)(v2 + 24);
  *(void *)(v0 + 640) = *(void *)(v2 + 16);
  *(void *)(v0 + 648) = v25;
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v2 + 32);
  *(unsigned char *)(v0 + 201) = *(unsigned char *)(v2 + 48);
  *(unsigned char *)(v0 + 202) = *(unsigned char *)(v2 + 49);
  *(unsigned char *)(v0 + 203) = *(unsigned char *)(v2 + 50);
  *(unsigned char *)(v0 + 204) = *(unsigned char *)(v2 + 51);
  *(unsigned char *)(v0 + 205) = *(unsigned char *)(v2 + 52);
  *(unsigned char *)(v0 + 206) = *(unsigned char *)(v2 + 53);
  *(void *)(v0 + 672) = *(void *)(v2 + 56);
  *(unsigned char *)(v0 + 207) = *(unsigned char *)(v2 + 64);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v26, v27, v28);
}

uint64_t sub_1DC9FE9C0()
{
  unint64_t v1 = *(void *)(v0 + 608);
  switch(v1 >> 61)
  {
    case 1uLL:
      LODWORD(v133) = *(unsigned __int8 *)(v0 + 207);
      uint64_t v131 = *(void *)(v0 + 672);
      char v128 = *(unsigned char *)(v0 + 206);
      char v125 = *(unsigned char *)(v0 + 205);
      char v122 = *(unsigned char *)(v0 + 204);
      char v118 = *(unsigned char *)(v0 + 203);
      char v114 = *(unsigned char *)(v0 + 202);
      char v107 = *(unsigned char *)(v0 + 201);
      uint64_t v37 = *(void *)(v0 + 664);
      uint64_t v102 = *(void *)(v0 + 656);
      uint64_t v38 = *(void *)(v0 + 648);
      uint64_t v39 = *(void *)(v0 + 640);
      uint64_t v40 = *(void *)(v0 + 632);
      uint64_t v41 = *(void *)(v0 + 624);
      uint64_t v42 = *(void *)(v0 + 504);
      uint64_t v43 = *(void *)(v0 + 488);
      uint64_t v44 = *(void **)(v0 + 264);
      uint64_t v45 = v44[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC881A8C(v44, v45);
      *(void *)uint64_t v43 = v42;
      *(void *)(v43 + 8) = v41;
      *(void *)(v43 + 16) = v40;
      *(void *)(v43 + 24) = v39;
      *(void *)(v43 + 32) = v38;
      *(void *)(v43 + 40) = v102;
      *(void *)(v43 + 48) = v37;
      *(unsigned char *)(v43 + 56) = v107;
      *(unsigned char *)(v43 + 57) = v114;
      *(unsigned char *)(v43 + 58) = v118;
      *(unsigned char *)(v43 + 59) = v122;
      *(unsigned char *)(v43 + 60) = v125;
      *(unsigned char *)(v43 + 61) = v128;
      *(void *)(v43 + 64) = v131;
      *(unsigned char *)(v43 + 72) = (_BYTE)v133;
      swift_storeEnumTagMultiPayload();
      sub_1DCA04CBC((int *)&unk_1EAA9E390);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v46 = (void *)swift_task_alloc();
      *(void *)(v0 + 712) = v46;
      *uint64_t v46 = v0;
      v46[1] = sub_1DC9FF720;
      uint64_t v36 = *(void *)(v0 + 488);
      break;
    case 2uLL:
      char v133 = *(uint64_t (**)(uint64_t))(v0 + 672);
      char v132 = *(unsigned char *)(v0 + 206);
      char v129 = *(unsigned char *)(v0 + 205);
      char v126 = *(unsigned char *)(v0 + 204);
      char v123 = *(unsigned char *)(v0 + 203);
      char v119 = *(unsigned char *)(v0 + 202);
      char v115 = *(unsigned char *)(v0 + 201);
      uint64_t v47 = *(void *)(v0 + 664);
      uint64_t v48 = *(void *)(v0 + 648);
      uint64_t v103 = *(void *)(v0 + 640);
      uint64_t v108 = *(void *)(v0 + 656);
      uint64_t v49 = *(void *)(v0 + 632);
      uint64_t v100 = *(void *)(v0 + 624);
      long long v96 = *(_OWORD *)(v0 + 544);
      uint64_t v50 = *(void *)(v0 + 536);
      uint64_t v91 = *(void *)(v0 + 520);
      uint64_t v93 = *(void *)(v0 + 528);
      uint64_t v51 = *(void *)(v0 + 504);
      uint64_t v52 = *(void *)(v0 + 512);
      uint64_t v53 = *(void *)(v0 + 464);
      uint64_t v54 = *(void **)(v0 + 264);
      *(unsigned char *)(v0 + 848) = *(unsigned char *)(v0 + 207);
      uint64_t v55 = v54[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC881A8C(v54, v55);
      *(void *)uint64_t v53 = v51;
      *(void *)(v53 + 8) = v52;
      *(void *)(v53 + 16) = v91;
      *(void *)(v53 + 24) = v93;
      *(void *)(v53 + 32) = v50;
      *(_OWORD *)(v53 + 40) = v96;
      *(void *)(v53 + 56) = v100;
      *(void *)(v53 + 64) = v49;
      *(void *)(v53 + 72) = v103;
      *(void *)(v53 + 80) = v48;
      *(void *)(v53 + 88) = v108;
      *(void *)(v53 + 96) = v47;
      *(unsigned char *)(v53 + 104) = v115;
      *(unsigned char *)(v53 + 105) = v119;
      *(unsigned char *)(v53 + 106) = v123;
      *(unsigned char *)(v53 + 107) = v126;
      *(unsigned char *)(v53 + 108) = v129;
      *(unsigned char *)(v53 + 109) = v132;
      *(void *)(v53 + 112) = v133;
      *(unsigned char *)(v53 + 120) = *(unsigned char *)(v0 + 848);
      swift_storeEnumTagMultiPayload();
      sub_1DCA04CBC((int *)&unk_1EAA9E3D8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v56 = (void *)swift_task_alloc();
      *(void *)(v0 + 728) = v56;
      *uint64_t v56 = v0;
      v56[1] = sub_1DC9FF810;
      uint64_t v36 = *(void *)(v0 + 464);
      break;
    case 3uLL:
      sub_1DCA04C78();
      uint64_t v94 = *(void *)(v0 + 664);
      uint64_t v109 = *(void *)(v0 + 656);
      uint64_t v92 = *(void *)(v0 + 648);
      uint64_t v104 = *(void *)(v0 + 640);
      uint64_t v90 = *(void *)(v0 + 632);
      uint64_t v97 = *(void *)(v0 + 624);
      uint64_t v84 = *(void *)(v0 + 592);
      uint64_t v85 = *(void *)(v0 + 600);
      uint64_t v82 = *(void *)(v0 + 576);
      uint64_t v83 = *(void *)(v0 + 584);
      uint64_t v81 = *(void *)(v0 + 568);
      uint64_t v86 = *(void *)(v0 + 552);
      uint64_t v87 = *(void *)(v0 + 560);
      uint64_t v57 = *(void *)(v0 + 544);
      uint64_t v58 = *(void *)(v0 + 536);
      uint64_t v59 = *(void *)(v0 + 528);
      uint64_t v60 = *(void *)(v0 + 520);
      uint64_t v62 = *(void *)(v0 + 504);
      uint64_t v61 = *(void *)(v0 + 512);
      uint64_t v63 = *(void *)(v0 + 456);
      uint64_t v89 = *(void **)(v0 + 264);
      uint64_t v88 = v59;
      sub_1DCA02E30(v62, v61, v60, v59, v58, v57, v86, v87, v81, v82, v83, v84, v85, v1);
      sub_1DCA02E30(v62, v61, v60, v59, v58, v57, v86, v87, v81, v82, v83, v84, v85, v1);
      uint64_t v64 = v89[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC881A8C(v89, v64);
      *(void *)uint64_t v63 = v62;
      *(void *)(v63 + 8) = v61;
      *(unsigned char *)(v63 + 16) = v60;
      *(void *)(v63 + 24) = v88;
      *(void *)(v63 + 32) = v58;
      *(unsigned char *)(v63 + 40) = v57;
      *(void *)(v63 + 48) = v97;
      *(void *)(v63 + 56) = v90;
      *(void *)(v63 + 64) = v104;
      *(void *)(v63 + 72) = v92;
      *(void *)(v63 + 80) = v109;
      *(void *)(v63 + 88) = v94;
      *(unsigned char *)(v63 + 96) = v111;
      *(unsigned char *)(v63 + 97) = v113;
      *(unsigned char *)(v63 + 98) = v116;
      *(unsigned char *)(v63 + 99) = v120;
      *(unsigned char *)(v63 + 100) = v124;
      *(unsigned char *)(v63 + 101) = v127;
      *(void *)(v63 + 104) = v130;
      *(unsigned char *)(v63 + 112) = (_BYTE)v133;
      swift_storeEnumTagMultiPayload();
      sub_1DC882C30(v62, v61, v60);
      char v133 = (uint64_t (*)(uint64_t))((char *)&dword_1EAA9E3F0 + dword_1EAA9E3F0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v65 = (void *)swift_task_alloc();
      *(void *)(v0 + 744) = v65;
      *uint64_t v65 = v0;
      v65[1] = sub_1DC9FF900;
      uint64_t v36 = *(void *)(v0 + 456);
      break;
    case 4uLL:
      sub_1DCA04C78();
      uint64_t v66 = *(void *)(v0 + 664);
      uint64_t v67 = *(void *)(v0 + 648);
      uint64_t v105 = *(void *)(v0 + 640);
      uint64_t v110 = *(void *)(v0 + 656);
      uint64_t v68 = *(void *)(v0 + 632);
      uint64_t v98 = *(void *)(v0 + 624);
      uint64_t v69 = *(void *)(v0 + 504);
      uint64_t v70 = *(void *)(v0 + 512);
      uint64_t v71 = *(void *)(v0 + 448);
      uint64_t v72 = *(void **)(v0 + 264);
      sub_1DCA02E30(v69, v70, *(void *)(v0 + 520), *(void *)(v0 + 528), *(void *)(v0 + 536), *(void *)(v0 + 544), *(void *)(v0 + 552), *(void *)(v0 + 560), *(void *)(v0 + 568), *(void *)(v0 + 576), *(void *)(v0 + 584), *(void *)(v0 + 592), *(void *)(v0 + 600), v1);
      uint64_t v73 = v72[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DC881A8C(v72, v73);
      *(void *)uint64_t v71 = v69;
      *(void *)(v71 + 8) = v70;
      *(void *)(v71 + 16) = v98;
      *(void *)(v71 + 24) = v68;
      *(void *)(v71 + 32) = v105;
      *(void *)(v71 + 40) = v67;
      *(void *)(v71 + 48) = v110;
      *(void *)(v71 + 56) = v66;
      *(unsigned char *)(v71 + 64) = v111;
      *(unsigned char *)(v71 + 65) = v113;
      *(unsigned char *)(v71 + 66) = v116;
      *(unsigned char *)(v71 + 67) = v120;
      *(unsigned char *)(v71 + 68) = v124;
      *(unsigned char *)(v71 + 69) = v127;
      *(void *)(v71 + 72) = v130;
      *(unsigned char *)(v71 + 80) = (_BYTE)v133;
      swift_storeEnumTagMultiPayload();
      char v133 = (uint64_t (*)(uint64_t))((char *)&dword_1EAA9E408 + dword_1EAA9E408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v74 = (void *)swift_task_alloc();
      *(void *)(v0 + 760) = v74;
      *uint64_t v74 = v0;
      v74[1] = sub_1DC9FF9F0;
      uint64_t v36 = *(void *)(v0 + 448);
      break;
    case 5uLL:
      LODWORD(v133) = *(unsigned __int8 *)(v0 + 207);
      if (v1 != 0xA000000000000000
        || (v75.i64[0] = *(void *)(v0 + 616),
            v75.i64[1] = *(void *)(v0 + 600),
            int8x16_t v76 = vorrq_s8(*(int8x16_t *)(v0 + 584), *(int8x16_t *)(v0 + 552)),
            int8x16_t v77 = vorrq_s8(vorrq_s8(v75, vorrq_s8(vextq_s8(*(int8x16_t *)(v0 + 568), *(int8x16_t *)(v0 + 568), 8uLL), vextq_s8(v76, v76, 8uLL))), vorrq_s8(*(int8x16_t *)(v0 + 512), *(int8x16_t *)(v0 + 528))), *(void *)&vorr_s8(*(int8x8_t *)v77.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL)) | *(void *)(v0 + 544) | *(void *)(v0 + 504)))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DCA04B0C();
        swift_storeEnumTagMultiPayload();
        sub_1DCA04CBC((int *)&unk_1EAA9E3C0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v79 = (void *)swift_task_alloc();
        *(void *)(v0 + 680) = v79;
        *uint64_t v79 = v0;
        v79[1] = sub_1DC9FF540;
        uint64_t v36 = *(void *)(v0 + 472);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DCA04B0C();
        swift_storeEnumTagMultiPayload();
        sub_1DCA04CBC((int *)&unk_1EAA9E3A8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v78 = (void *)swift_task_alloc();
        *(void *)(v0 + 792) = v78;
        void *v78 = v0;
        v78[1] = sub_1DCA00160;
        uint64_t v36 = *(void *)(v0 + 480);
      }
      break;
    default:
      char v2 = *(unsigned char *)(v0 + 207);
      uint64_t v3 = *(void *)(v0 + 672);
      char v4 = *(unsigned char *)(v0 + 206);
      char v5 = *(unsigned char *)(v0 + 205);
      char v6 = *(unsigned char *)(v0 + 204);
      char v7 = *(unsigned char *)(v0 + 203);
      char v8 = *(unsigned char *)(v0 + 202);
      char v9 = *(unsigned char *)(v0 + 201);
      uint64_t v10 = *(void *)(v0 + 656);
      uint64_t v11 = *(void *)(v0 + 648);
      uint64_t v12 = *(void *)(v0 + 640);
      uint64_t v117 = *(void *)(v0 + 664);
      uint64_t v121 = *(void *)(v0 + 632);
      uint64_t v13 = *(void *)(v0 + 624);
      uint64_t v14 = *(void *)(v0 + 616);
      uint64_t v15 = *(void *)(v0 + 600);
      uint64_t v16 = *(void *)(v0 + 592);
      uint64_t v17 = *(void *)(v0 + 584);
      uint64_t v18 = *(void *)(v0 + 520);
      uint64_t v106 = *(void *)(v0 + 536);
      char v112 = v18;
      *(unsigned char *)(v0 + 32) = v18 & 1;
      *(void *)(v0 + 48) = v106;
      *(unsigned char *)(v0 + 120) = v1 & 1;
      uint64_t v19 = *(void *)(v0 + 576);
      *(void *)(v0 + 128) = v14;
      *(void *)(v0 + 136) = v13;
      uint64_t v20 = *(void *)(v0 + 568);
      *(void *)(v0 + 144) = v121;
      *(void *)(v0 + 152) = v12;
      uint64_t v21 = *(void *)(v0 + 560);
      *(void *)(v0 + 160) = v11;
      *(void *)(v0 + 168) = v10;
      uint64_t v22 = *(void *)(v0 + 552);
      *(unsigned char *)(v0 + 184) = v9;
      uint64_t v23 = *(void *)(v0 + 544);
      *(unsigned char *)(v0 + 185) = v8;
      uint64_t v24 = *(void *)(v0 + 528);
      *(unsigned char *)(v0 + 186) = v7;
      uint64_t v26 = *(void *)(v0 + 504);
      uint64_t v25 = *(void *)(v0 + 512);
      *(unsigned char *)(v0 + 187) = v6;
      *(unsigned char *)(v0 + 188) = v5;
      *(unsigned char *)(v0 + 189) = v4;
      *(void *)(v0 + 192) = v3;
      *(void *)(v0 + 16) = v26;
      *(unsigned char *)(v0 + 200) = v2;
      *(void *)(v0 + 24) = v25;
      *(void *)(v0 + 40) = v24;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v22;
      *(void *)(v0 + 72) = v21;
      *(void *)(v0 + 80) = v20;
      *(void *)(v0 + 88) = v19;
      *(void *)(v0 + 96) = v17;
      uint64_t v99 = v16;
      uint64_t v101 = v17;
      *(void *)(v0 + 104) = v16;
      *(void *)(v0 + 112) = v15;
      uint64_t v95 = v15;
      *(void *)(v0 + 176) = v117;
      sub_1DCA0512C(v26, v25, v18, v121, v106, v15, v16, v17, v20, v19, v17, v16, v15, v1);
      sub_1DCA0512C(v26, v25, v112, v27, v106, v28, v29, v30, v20, v19, v101, v99, v95, v1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = (void *)sub_1DC8CD7C8();
      sub_1DC881A8C(v31, v32);
      uint64_t v33 = (void *)sub_1DC8CD7C8();
      memcpy(v33, v34, 0xB9uLL);
      swift_storeEnumTagMultiPayload();
      sub_1DCA03B58(v0 + 16);
      char v133 = (uint64_t (*)(uint64_t))((char *)&dword_1EAA9E358 + dword_1EAA9E358);
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 696) = v35;
      *uint64_t v35 = v0;
      v35[1] = sub_1DC9FF630;
      uint64_t v36 = *(void *)(v0 + 496);
      break;
  }
  return v133(v36);
}

uint64_t sub_1DC9FF540()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *char v8 = v7;
  *(void *)(v5 + 688) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 816) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9FF630()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *char v8 = v7;
  *(void *)(v5 + 704) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 776) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9FF720()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *char v8 = v7;
  *(void *)(v5 + 720) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 784) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9FF810()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *char v8 = v7;
  *(void *)(v5 + 736) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 824) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9FF900()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *char v8 = v7;
  *(void *)(v5 + 752) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 832) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9FF9F0()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *char v8 = v7;
  *(void *)(v5 + 768) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 840) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1DC9FFAE0()
{
  uint64_t v1 = v0[97];
  __n128 v17 = sub_1DCA050F8();
  long long v18 = v2;
  sub_1DCA04FC8();
  uint64_t v20 = v3;
  uint64_t v21 = v4;
  uint64_t v19 = v0[68];
  uint64_t v16 = v0[67];
  uint64_t v12 = v0[65];
  uint64_t v13 = v0[66];
  uint64_t v5 = v0[63];
  uint64_t v11 = v0[64];
  uint64_t v6 = v0[53];
  uint64_t v7 = v0[54];
  uint64_t v8 = v0[52];
  sub_1DC8865D4(v0[62]);
  sub_1DC9574E0((uint64_t)(v0 + 2));
  v0[30] = v1;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA42C8);
  sub_1DC87E988(&qword_1EAA9E960);
  sub_1DC88CF34(&qword_1EAAA42D0, &qword_1EAAA42C8);
  sub_1DCB873D8();
  swift_release();
  sub_1DC88CF34(&qword_1EAAA42D8, &qword_1EAAA4248);
  uint64_t v22 = sub_1DCB873A8();
  swift_release();
  sub_1DCA02F4C(v5, v11, v12, v13, v16, v19, v20, v21, v14, v15, v17.n128_i64[0], v17.n128_i64[1], v18, *((unint64_t *)&v18 + 1));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  sub_1DCA04BF4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v22);
}

uint64_t sub_1DC9FFD5C()
{
  uint64_t v1 = v0[77];
  sub_1DCA04E5C();
  uint64_t v33 = v0[70];
  uint64_t v2 = v0[69];
  uint64_t v3 = v0[68];
  uint64_t v4 = v0[67];
  uint64_t v5 = v0[66];
  uint64_t v6 = v0[65];
  uint64_t v8 = v0[63];
  uint64_t v7 = v0[64];
  sub_1DC8865D4(v0[62]);
  uint64_t v9 = sub_1DC9574E0((uint64_t)(v0 + 2));
  sub_1DCA04F8C(v9, v10, v11, v12, v13, v14, v15, v16, v19, v21, v23, v25, v27, v29, v1, v31, v32);
  sub_1DCA02F4C(v8, v7, v6, v5, v4, v3, v2, v33, v20, v22, v24, v26, v28, v30);
  sub_1DCA04BF4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  __n128 v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

#error "1DCA00044: call analysis failed (funcsize=100)"

uint64_t sub_1DCA00074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1DCA04AF0();
  sub_1DCA04DAC();
  sub_1DCA04D60();
  sub_1DC8865D4(*(void *)(v16 + 488));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCA04A64();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DCA04E4C();
  sub_1DC99A4BC();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1DCA00160()
{
  sub_1DC886900();
  uint64_t v3 = v2;
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_1DC88678C();
  *uint64_t v8 = v7;
  *(void *)(v5 + 800) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 808) = v3;
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

#error "1DCA003C8: call analysis failed (funcsize=100)"

uint64_t sub_1DCA003F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1DCA04AF0();
  sub_1DCA04DAC();
  sub_1DCA04D60();
  sub_1DC8865D4(*(void *)(v16 + 480));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCA04A64();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DCA04E4C();
  sub_1DC99A4BC();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

#error "1DCA0065C: call analysis failed (funcsize=100)"

uint64_t sub_1DCA0068C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1DCA04AF0();
  sub_1DCA04DAC();
  sub_1DCA04D60();
  sub_1DC8865D4(*(void *)(v16 + 472));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCA04A64();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DCA04E4C();
  sub_1DC99A4BC();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

#error "1DCA008F0: call analysis failed (funcsize=100)"

uint64_t sub_1DCA00920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1DCA04AF0();
  sub_1DCA04DAC();
  sub_1DCA04D60();
  sub_1DC8865D4(*(void *)(v16 + 464));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCA04A64();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DCA04E4C();
  sub_1DC99A4BC();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1DCA00A0C()
{
  uint64_t v1 = v0[104];
  __n128 v16 = sub_1DCA050F8();
  long long v17 = v2;
  sub_1DCA04FC8();
  uint64_t v19 = v3;
  uint64_t v20 = v4;
  uint64_t v18 = v0[68];
  uint64_t v5 = v0[65];
  uint64_t v6 = v0[63];
  uint64_t v7 = v0[64];
  uint64_t v13 = v0[66];
  uint64_t v11 = v0[67];
  sub_1DC8865D4(v0[57]);
  sub_1DC882BC4(v6, v7, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[26] = v1;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA4260);
  sub_1DC87E988(&qword_1EAA9E960);
  sub_1DC88CF34(&qword_1EAA9E968, &qword_1EAAA4260);
  sub_1DCB873D8();
  swift_release();
  sub_1DC88CF34((unint64_t *)&unk_1EAA9E970, &qword_1EAAA4220);
  uint64_t v12 = sub_1DCB873A8();
  swift_release();
  sub_1DCA02F4C(v6, v7, v5, v13, v11, v18, v19, v20, v14, v15, v16.n128_i64[0], v16.n128_i64[1], v17, *((unint64_t *)&v17 + 1));
  sub_1DC88D5C8();
  v8();
  sub_1DCA04BF4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v12);
}

uint64_t sub_1DCA00CBC()
{
  sub_1DCA04D60();
  uint64_t v31 = v0[77];
  sub_1DCA04E5C();
  uint64_t v32 = v0[69];
  uint64_t v33 = v0[70];
  uint64_t v1 = v0[68];
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[66];
  uint64_t v4 = v0[65];
  uint64_t v6 = v0[63];
  uint64_t v5 = v0[64];
  sub_1DC8865D4(v0[57]);
  sub_1DC882BC4(v6, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRelease();
  sub_1DCA04F8C(v7, v8, v9, v10, v11, v12, v13, v14, v17, v19, v21, v23, v25, v27, v31, v29, v30);
  sub_1DCA02F4C(v6, v5, v4, v3, v2, v1, v32, v33, v18, v20, v22, v24, v26, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

#error "1DCA01038: call analysis failed (funcsize=118)"

uint64_t sub_1DCA01068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1DCA04AF0();
  sub_1DCA04DAC();
  sub_1DCA04D60();
  sub_1DC8865D4(*(void *)(v16 + 448));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCA04A64();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1DCA04E4C();
  sub_1DC99A4BC();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15, a16);
}

void sub_1DCA01160(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a4 + 16;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1DCA017A0();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1E01A9AE0](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    if (v5)
    {
      id v9 = v5;
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1DCB86FE8();
      sub_1DC89F57C(v10, (uint64_t)qword_1EAAFF810);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v11 = v5;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v12 = v5;
      uint64_t v13 = sub_1DCB86FC8();
      os_log_type_t v14 = sub_1DCB88488();
      if (os_log_type_enabled(v13, v14))
      {
        os_log_type_t type = v14;
        uint64_t v15 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v45 = v43;
        *(_DWORD *)uint64_t v15 = 136315650;
        id v16 = objc_msgSend(v8, sel_description);
        uint64_t v17 = sub_1DCB87938();
        unint64_t v19 = v18;

        sub_1DC9F8920(v17, v19, &v45);
        sub_1DCB88778();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2080;
        id v20 = objc_msgSend(a3, (SEL)&selRef_dictionaryWithDictionary_);
        uint64_t v21 = sub_1DCB87938();
        unint64_t v23 = v22;

        sub_1DC9F8920(v21, v23, &v45);
        sub_1DCB88778();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 22) = 2080;
        uint64_t v24 = (void *)sub_1DCB86888();
        id v25 = objc_msgSend(v24, sel_description);

        uint64_t v26 = sub_1DCB87938();
        unint64_t v28 = v27;

        sub_1DC9F8920(v26, v28, &v45);
        sub_1DCB88778();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1DC873000, v13, type, "Observer %s for request %s failed with error %s", (uint8_t *)v15, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1E01A99C0](v43, -1, -1);
        MEMORY[0x1E01A99C0](v15, -1, -1);
      }
      else
      {
        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease_n();
      }
      if ((objc_msgSend(v8, sel_respondsToSelector_, sel_request_didFailWithError_) & 1) == 0)
      {
        swift_unknownObjectRelease();

        return;
      }
      swift_unknownObjectRetain();
      uint64_t v41 = (void *)sub_1DCB86888();
      objc_msgSend(v8, sel_request_didFailWithError_, a3, v41);
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1EAA9C658 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1DCB86FE8();
      sub_1DC89F57C(v29, (uint64_t)qword_1EAAFF810);
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain_n();
      long long v30 = sub_1DCB86FC8();
      os_log_type_t v31 = sub_1DCB88488();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v45 = v44;
        *(_DWORD *)uint64_t v32 = 136315394;
        id v33 = objc_msgSend(v8, sel_description);
        uint64_t v34 = sub_1DCB87938();
        unint64_t v36 = v35;

        sub_1DC9F8920(v34, v36, &v45);
        sub_1DCB88778();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        id v37 = objc_msgSend(a3, sel_description);
        uint64_t v38 = sub_1DCB87938();
        unint64_t v40 = v39;

        sub_1DC9F8920(v38, v40, &v45);
        sub_1DCB88778();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DC873000, v30, v31, "Observer %s for request %s completed", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E01A99C0](v44, -1, -1);
        MEMORY[0x1E01A99C0](v32, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease_n();
      }
      if (objc_msgSend(v8, sel_respondsToSelector_, sel_requestDidComplete_)) {
        objc_msgSend(v8, sel_requestDidComplete_, a3);
      }
    }
    swift_unknownObjectRelease();
  }
}

void sub_1DCA017A0()
{
  sub_1DC89D9F8();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA2180);
  uint64_t v4 = sub_1DC8BADF0(v3);
  MEMORY[0x1F4188790](v4);
  sub_1DC981E40();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DCB86FE8();
  sub_1DC89F57C(v5, (uint64_t)qword_1EAAFF810);
  swift_retain_n();
  swift_unknownObjectRetain_n();
  uint64_t v6 = sub_1DCB86FC8();
  os_log_type_t v7 = sub_1DCB88488();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v18 = v0;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_1DCB86BF8();
    sub_1DC88CBB4();
    uint64_t v9 = sub_1DCB88F98();
    sub_1DC9F8920(v9, v10, &v19);
    sub_1DCB88778();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    id v11 = objc_msgSend(v2, sel_description);
    uint64_t v12 = sub_1DCB87938();
    unint64_t v14 = v13;

    sub_1DC9F8920(v12, v14, &v19);
    sub_1DCB88778();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v6, v7, "(SNSystemAudioAnalyzerRemote:%s removeRequest:%s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    sub_1DC8E7728();
    uint64_t v0 = v18;
    sub_1DC8E7728();
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_release_n();
  }
  uint64_t v15 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, 1, 1, v15);
  uint64_t v16 = sub_1DC8BABC0();
  swift_weakInit();
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = 0;
  v17[3] = 0;
  long long v17[4] = v16;
  void v17[5] = v2;
  swift_unknownObjectRetain();
  sub_1DCA97644();
  swift_release();
  sub_1DC89DA54();
}

void *sub_1DCA01AA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x1E01A9AE0](v5);
  if (result)
  {
    objc_msgSend(result, sel_request_didProduceResult_, a3, v4);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DCA01B18(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  sub_1DC89F6D8();
  v2[24] = v3;
  return sub_1DC99A434((uint64_t)sub_1DCA01B44, 0);
}

uint64_t sub_1DCA01B44()
{
  id v33 = v0;
  sub_1DC9FE2E4((uint64_t)v19);
  uint64_t v1 = v0[23];
  uint64_t v2 = v19[0];
  uint64_t v3 = v19[1];
  v0[25] = v19[0];
  v0[26] = v3;
  uint64_t v4 = v20;
  uint64_t v5 = v21;
  v0[27] = v20;
  v0[28] = v5;
  uint64_t v6 = v22;
  uint64_t v7 = v23;
  v0[29] = v22;
  v0[30] = v7;
  uint64_t v8 = v24;
  uint64_t v9 = v25;
  v0[31] = v24;
  v0[32] = v9;
  uint64_t v10 = v26;
  uint64_t v11 = v27;
  v0[33] = v26;
  v0[34] = v11;
  uint64_t v12 = v28;
  uint64_t v13 = v29;
  v0[35] = v28;
  v0[36] = v13;
  uint64_t v14 = v30;
  uint64_t v15 = v31;
  v0[37] = v30;
  v0[38] = v15;
  uint64_t v16 = v32;
  v0[39] = v32;
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_state);
  v0[40] = v17;
  v0[2] = v2;
  v0[3] = v3;
  v0[4] = v4;
  v0[5] = v5;
  v0[6] = v6;
  v0[7] = v7;
  v0[8] = v8;
  v0[9] = v9;
  v0[10] = v10;
  v0[11] = v11;
  v0[12] = v12;
  v0[13] = v13;
  v0[14] = v14;
  v0[15] = v15;
  v0[16] = v16;
  return MEMORY[0x1F4188298](sub_1DCA01C68, v17, 0);
}

uint64_t sub_1DCA01C68()
{
  sub_1DC8867A8();
  sub_1DC9F9330();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v0, v1, v2);
}

uint64_t sub_1DCA01CD0()
{
  sub_1DCA036C4((uint64_t)(v0 + 17), (uint64_t)(v0 + 2), &qword_1EAAA41D0);
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[31];
  if (v1)
  {
    uint64_t v24 = v0[32];
    sub_1DC881A8C(v0 + 2, v1);
    sub_1DCB871C8();
    uint64_t v4 = sub_1DCA04C34();
    sub_1DCA02F4C(v4, v5, v6, v7, v8, v9, v3, v24, v18, v19, v20, v21, v22, v23);
    sub_1DCA03724((uint64_t)(v0 + 17));
    sub_1DC8818D0((uint64_t)(v0 + 2));
  }
  else
  {
    sub_1DCA03724((uint64_t)(v0 + 17));
    uint64_t v10 = sub_1DCA04C34();
    sub_1DCA02F4C(v10, v11, v12, v13, v14, v15, v3, v2, v18, v19, v20, v21, v22, v23);
    sub_1DCA03724((uint64_t)(v0 + 2));
  }
  sub_1DC8BA978();
  return v16();
}

uint64_t sub_1DCA01E14()
{
  *(void *)(v1 + 176) = v0;
  return sub_1DC99A434((uint64_t)sub_1DCA01E30, 0);
}

uint64_t sub_1DCA01E30()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 176) + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_state);
  *(void *)(v0 + 184) = v1;
  return sub_1DC99A434((uint64_t)sub_1DCA01E58, v1);
}

uint64_t sub_1DCA01E58()
{
  sub_1DC8867A8();
  *(void *)(v0 + 192) = sub_1DC9F92F0();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_1DCA01EBC()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      sub_1DCA036C4(v3, (uint64_t)(v0 + 2), &qword_1EAAA41B0);
      sub_1DCA02F4C(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13], v0[14], v0[15]);
      sub_1DC881A8C(v0 + 17, v0[20]);
      sub_1DCB871C8();
      sub_1DC8818D0((uint64_t)(v0 + 17));
      v3 += 160;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  sub_1DC8BA978();
  return v4();
}

uint64_t sub_1DCA01FC8(void *a1, void *a2)
{
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2180);
  uint64_t v7 = sub_1DC8BADF0(v6);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1DCB86FE8();
  sub_1DC89F57C(v10, (uint64_t)qword_1EAAFF810);
  swift_retain_n();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v11 = sub_1DCB86FC8();
  os_log_type_t v12 = sub_1DCB88488();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v38 = v33;
    *(_DWORD *)uint64_t v14 = 136315650;
    HIDWORD(v32) = v13;
    sub_1DCB86BF8();
    uint64_t v36 = v3;
    sub_1DC88CBB4();
    uint64_t v15 = sub_1DCB88F98();
    uint64_t v37 = sub_1DC9F8920(v15, v16, &v38);
    sub_1DCA04FE0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    id v17 = objc_msgSend(a1, sel_description);
    uint64_t v18 = sub_1DCB87938();
    uint64_t v34 = v2;
    unint64_t v35 = v9;
    uint64_t v19 = v18;
    unint64_t v21 = v20;

    uint64_t v37 = sub_1DC9F8920(v19, v21, &v38);
    sub_1DCA04FE0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2080;
    id v22 = objc_msgSend(a2, sel_description);
    uint64_t v23 = sub_1DCB87938();
    unint64_t v25 = v24;

    uint64_t v26 = v23;
    uint64_t v9 = v35;
    uint64_t v37 = sub_1DC9F8920(v26, v25, &v38);
    sub_1DCA04FE0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v11, BYTE4(v32), "(SNSystemAudioAnalyzerRemote:%s addRequest:%s withObserver:%s", (uint8_t *)v14, 0x20u);
    uint64_t v27 = v33;
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v27, -1, -1);
    MEMORY[0x1E01A99C0](v14, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    swift_release_n();
  }
  uint64_t v28 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v9, 1, 1, v28);
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = 0;
  void v30[3] = 0;
  v30[4] = v29;
  void v30[5] = a1;
  v30[6] = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1DCA97644();
  return swift_release();
}

uint64_t sub_1DCA0238C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[5] = a4;
  return MEMORY[0x1F4188298](sub_1DCA023B0, 0, 0);
}

uint64_t sub_1DCA023B0()
{
  sub_1DC8867A8();
  sub_1DCA04D38();
  uint64_t Strong = swift_weakLoadStrong();
  v0[8] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[9] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1DCA02484;
    uint64_t v4 = v0[6];
    uint64_t v3 = v0[7];
    return sub_1DC9FDBBC(v4, v3);
  }
  else
  {
    sub_1DC8BA978();
    return v6();
  }
}

uint64_t sub_1DCA02484()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA0254C()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCA025A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x1F4188298](sub_1DCA025C4, 0, 0);
}

uint64_t sub_1DCA025C4()
{
  sub_1DC8867A8();
  sub_1DCA04D38();
  uint64_t Strong = swift_weakLoadStrong();
  v0[7] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[8] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1DCA02698;
    uint64_t v3 = v0[6];
    return sub_1DCA01B18(v3);
  }
  else
  {
    sub_1DC8BA978();
    return v5();
  }
}

uint64_t sub_1DCA02698()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA02760()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

void sub_1DCA027B8()
{
  sub_1DC89D9F8();
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA2180);
  uint64_t v2 = sub_1DC8BADF0(v1);
  MEMORY[0x1F4188790](v2);
  sub_1DC8CD750();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DCB86FE8();
  sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
  swift_retain_n();
  uint64_t v4 = sub_1DCB86FC8();
  os_log_type_t v5 = sub_1DCB88488();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v13 = v7;
    sub_1DCB86BF8();
    sub_1DC88CBB4();
    uint64_t v8 = sub_1DCB88F98();
    sub_1DC9F8920(v8, v9, &v13);
    sub_1DCB88778();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DC873000, v4, v5, "(SNSystemAudioAnalyzerRemote:%s removeAllRequests", v6, 0xCu);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v0, 1, 1, v10);
  uint64_t v11 = sub_1DC8BABC0();
  swift_weakInit();
  os_log_type_t v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  void v12[3] = 0;
  _OWORD v12[4] = v11;
  sub_1DCA97644();
  swift_release();
  sub_1DC89DA54();
}

uint64_t sub_1DCA02A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return MEMORY[0x1F4188298](sub_1DCA02A34, 0, 0);
}

uint64_t sub_1DCA02A34()
{
  sub_1DC8867A8();
  sub_1DCA04D38();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 48) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1DCA02B00;
    return sub_1DCA01E14();
  }
  else
  {
    sub_1DC8BA978();
    return v4();
  }
}

uint64_t sub_1DCA02B00()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1DC886854();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1DCA02BC8()
{
  sub_1DC8867A8();
  swift_release();
  sub_1DC8BA978();
  return v0();
}

uint64_t sub_1DCA02C20()
{
  sub_1DCB86BF8();
  sub_1DC88D5C8();
  v1();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC8818D0(v0 + OBJC_IVAR____TtC13SoundAnalysis27SNSystemAudioAnalyzerRemote_environment);
  swift_release();
  return v0;
}

uint64_t sub_1DCA02CD4()
{
  sub_1DCA02C20();
  sub_1DC89F6D8();

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA02D0C()
{
  return type metadata accessor for SNSystemAudioAnalyzerRemote();
}

uint64_t type metadata accessor for SNSystemAudioAnalyzerRemote()
{
  uint64_t result = qword_1EAAA4168;
  if (!qword_1EAAA4168) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCA02D5C()
{
  uint64_t result = sub_1DCB86BF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SNSystemAudioAnalyzerRemote.State()
{
  return self;
}

uint64_t sub_1DCA02E30(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  unint64_t v14 = a14 >> 61;
  if (a14 >> 61 != 4)
  {
    if (v14 == 3)
    {
      sub_1DC882C30(result, a2, a3);
    }
    else
    {
      if (v14) {
        return result;
      }
      sub_1DC88244C(result, a2, a3 & 1);
      sub_1DC88245C(a8, a9, a10, a11, a12, a13, a14 & 1);
    }
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA02F00(uint64_t *a1)
{
  return sub_1DCA02F4C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
}

uint64_t sub_1DCA02F4C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  unint64_t v14 = a14 >> 61;
  if (a14 >> 61 != 4)
  {
    if (v14 == 3)
    {
      sub_1DC882BC4(result, a2, a3);
    }
    else
    {
      if (v14) {
        return result;
      }
      sub_1DC8823A0(result, a2, a3 & 1);
      sub_1DC8823B0(a8, a9, a10, a11, a12, a13, a14 & 1);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t *sub_1DCA0301C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  unint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  sub_1DCA02E30(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  return a1;
}

uint64_t sub_1DCA0310C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v25 = a2[10];
  uint64_t v26 = a2[11];
  uint64_t v27 = a2[12];
  unint64_t v28 = a2[13];
  uint64_t v29 = a2[14];
  sub_1DCA02E30(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v25;
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v27;
  *(void *)(a1 + 104) = v28;
  *(void *)(a1 + 112) = v29;
  sub_1DCA02F4C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((unint64_t *)&v22 + 1));
  return a1;
}

void *sub_1DCA03228(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t sub_1DCA03230(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 112);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  long long v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = v3;
  sub_1DCA02F4C(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((unint64_t *)&v14 + 1));
  return a1;
}

uint64_t sub_1DCA032B8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *(void *)(a1 + 104) >> 1;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

double sub_1DCA03300(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 2 * -a2;
      *(void *)(a1 + 112) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1DCA03374(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 104) >> 61;
  if (v1 <= 4) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1DCA03390(uint64_t result)
{
  *(void *)(result + 104) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1DCA033A0(uint64_t result, uint64_t a2)
{
  if (a2 < 5)
  {
    *(void *)(result + 104) = *(void *)(result + 104) & 1 | (a2 << 61);
  }
  else
  {
    *(void *)double result = (a2 - 5);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = xmmword_1DCBCA020;
  }
  return result;
}

void type metadata accessor for SNSystemAudioAnalyzerRemote.Request()
{
}

unint64_t sub_1DCA033FC()
{
  unint64_t result = qword_1EAAA4180;
  if (!qword_1EAAA4180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4180);
  }
  return result;
}

uint64_t sub_1DCA03448(void *a1, void *a2)
{
  return sub_1DCA01FC8(a1, a2);
}

void sub_1DCA0346C()
{
}

void sub_1DCA03490()
{
}

uint64_t sub_1DCA034B4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1DCA034EC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA0352C()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_1DC886800(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1DC8D6930;
  return sub_1DCA02A14(v2, v3, v4, v5);
}

uint64_t sub_1DCA035D4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA0361C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_1DC886800(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1DC8D78C0;
  uint64_t v5 = sub_1DCA05048();
  return sub_1DCA025A4(v5, v6, v7, v8, v1);
}

uint64_t sub_1DCA036C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1DC87E988(a3);
  uint64_t v4 = sub_1DC8CD7C8();
  v5(v4);
  return a2;
}

uint64_t sub_1DCA03724(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA41D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DCA03784()
{
  unint64_t result = qword_1EAAA41D8;
  if (!qword_1EAAA41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAAA41D8);
  }
  return result;
}

uint64_t sub_1DCA037D0(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a14 >> 1 != 0xFFFFFFFF) {
    return sub_1DCA02F4C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
  return result;
}

uint64_t sub_1DCA03808()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA03858()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_1DC886800(v3);
  void *v4 = v5;
  v4[1] = sub_1DC8D78C0;
  uint64_t v6 = sub_1DCA05048();
  return sub_1DCA0238C(v6, v7, v8, v9, v1, v2);
}

void *sub_1DCA03908(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x78uLL);
}

uint64_t sub_1DCA0391C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1DCA03954()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1DCA0399C(void **a1)
{
  sub_1DCA01160(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1DCA039A8()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void *sub_1DCA039E8(uint64_t *a1)
{
  return sub_1DCA01AA0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DCA039F0(void *a1, uint64_t a2)
{
  uint64_t v6[3] = sub_1DCB87278();
  v6[4] = MEMORY[0x1E4F1AB08];
  v6[0] = a2;
  sub_1DC87E988((uint64_t *)&unk_1EAAA4210);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  sub_1DCA03908(a1, (void *)(inited + 32));
  sub_1DC8B9960((uint64_t)v6, inited + 152);
  swift_beginAccess();
  swift_retain();
  sub_1DCA03AF4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1DCA02E30);
  swift_bridgeObjectRetain();
  sub_1DCB190A8();
  swift_endAccess();
  swift_setDeallocating();
  sub_1DC9377B4();
  return sub_1DC8818D0((uint64_t)v6);
}

void *sub_1DCA03AF4(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1DCA03B58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  char v8 = *(unsigned char *)(a1 + 104);
  sub_1DC88244C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1DC88245C(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1DCA03C18()
{
  unint64_t result = qword_1EAAA4320;
  if (!qword_1EAAA4320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4320);
  }
  return result;
}

unint64_t sub_1DCA03C64()
{
  unint64_t result = qword_1EAAA4330;
  if (!qword_1EAAA4330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4330);
  }
  return result;
}

unint64_t sub_1DCA03CB0()
{
  unint64_t result = qword_1EAAA4340;
  if (!qword_1EAAA4340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4340);
  }
  return result;
}

unint64_t sub_1DCA03CFC()
{
  unint64_t result = qword_1EAAA4350;
  if (!qword_1EAAA4350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4350);
  }
  return result;
}

unint64_t sub_1DCA03D48()
{
  unint64_t result = qword_1EAAA4360;
  if (!qword_1EAAA4360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4360);
  }
  return result;
}

unint64_t sub_1DCA03D94()
{
  unint64_t result = qword_1EAAA4370;
  if (!qword_1EAAA4370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4370);
  }
  return result;
}

unint64_t sub_1DCA03DE0()
{
  unint64_t result = qword_1EAAA4380;
  if (!qword_1EAAA4380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4380);
  }
  return result;
}

unint64_t sub_1DCA03E2C()
{
  unint64_t result = qword_1EAAA4390;
  if (!qword_1EAAA4390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4390);
  }
  return result;
}

uint64_t sub_1DCA03E78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 168);
  uint64_t v9 = *(void *)(a1 + 176);
  long long v12 = *(_OWORD *)(a1 + 200);
  long long v13 = *(_OWORD *)(a1 + 184);
  long long v11 = *(_OWORD *)(a1 + 216);
  sub_1DCA02F4C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104));
  sub_1DCA02F4C(v2, v3, v4, v5, v6, v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((unint64_t *)&v11 + 1));
  return a1;
}

unsigned char *storeEnumTagSinglePayload for SNSystemAudioAnalyzerRemote.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA04024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.CodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.SoundClassificationCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundClassificationCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.SpeechUtteranceCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechUtteranceCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.SpeechEmotionCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.SpeechEmotionCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.AudioLevelCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.AudioLevelCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.ShazamSignatureCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.ShazamSignatureCodingKeys;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.SoundDetectionCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.SoundDetectionCodingKeys;
}

unsigned char *_s13SoundAnalysis27SNSystemAudioAnalyzerRemoteC7RequestO29SoundClassificationCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA0415CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SNSystemAudioAnalyzerRemote.Request.DirectionOfArrivalCodingKeys()
{
  return &type metadata for SNSystemAudioAnalyzerRemote.Request.DirectionOfArrivalCodingKeys;
}

unsigned char *sub_1DCA04194(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA04260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SNSystemAudioAnalyzerRemote.DomainError()
{
}

unint64_t sub_1DCA04298()
{
  unint64_t result = qword_1EAAA43E8;
  if (!qword_1EAAA43E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA43E8);
  }
  return result;
}

unint64_t sub_1DCA042E8()
{
  unint64_t result = qword_1EAAA43F0;
  if (!qword_1EAAA43F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA43F0);
  }
  return result;
}

unint64_t sub_1DCA04338()
{
  unint64_t result = qword_1EAAA43F8;
  if (!qword_1EAAA43F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA43F8);
  }
  return result;
}

unint64_t sub_1DCA04388()
{
  unint64_t result = qword_1EAAA4400;
  if (!qword_1EAAA4400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4400);
  }
  return result;
}

unint64_t sub_1DCA043D8()
{
  unint64_t result = qword_1EAAA4408;
  if (!qword_1EAAA4408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4408);
  }
  return result;
}

unint64_t sub_1DCA04428()
{
  unint64_t result = qword_1EAAA4410;
  if (!qword_1EAAA4410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4410);
  }
  return result;
}

unint64_t sub_1DCA04478()
{
  unint64_t result = qword_1EAAA4418;
  if (!qword_1EAAA4418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4418);
  }
  return result;
}

unint64_t sub_1DCA044C8()
{
  unint64_t result = qword_1EAAA4420;
  if (!qword_1EAAA4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4420);
  }
  return result;
}

unint64_t sub_1DCA04518()
{
  unint64_t result = qword_1EAAA4428;
  if (!qword_1EAAA4428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4428);
  }
  return result;
}

unint64_t sub_1DCA04568()
{
  unint64_t result = qword_1EAAA4430;
  if (!qword_1EAAA4430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4430);
  }
  return result;
}

unint64_t sub_1DCA045B8()
{
  unint64_t result = qword_1EAAA4438;
  if (!qword_1EAAA4438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4438);
  }
  return result;
}

unint64_t sub_1DCA04608()
{
  unint64_t result = qword_1EAAA4440;
  if (!qword_1EAAA4440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4440);
  }
  return result;
}

unint64_t sub_1DCA04658()
{
  unint64_t result = qword_1EAAA4448;
  if (!qword_1EAAA4448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4448);
  }
  return result;
}

unint64_t sub_1DCA046A8()
{
  unint64_t result = qword_1EAAA4450;
  if (!qword_1EAAA4450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4450);
  }
  return result;
}

unint64_t sub_1DCA046F8()
{
  unint64_t result = qword_1EAAA4458;
  if (!qword_1EAAA4458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4458);
  }
  return result;
}

unint64_t sub_1DCA04748()
{
  unint64_t result = qword_1EAAA4460;
  if (!qword_1EAAA4460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4460);
  }
  return result;
}

unint64_t sub_1DCA04798()
{
  unint64_t result = qword_1EAAA4468;
  if (!qword_1EAAA4468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4468);
  }
  return result;
}

unint64_t sub_1DCA047E8()
{
  unint64_t result = qword_1EAAA4470;
  if (!qword_1EAAA4470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4470);
  }
  return result;
}

unint64_t sub_1DCA04838()
{
  unint64_t result = qword_1EAAA4478;
  if (!qword_1EAAA4478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4478);
  }
  return result;
}

unint64_t sub_1DCA04888()
{
  unint64_t result = qword_1EAAA4480;
  if (!qword_1EAAA4480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4480);
  }
  return result;
}

unint64_t sub_1DCA048D8()
{
  unint64_t result = qword_1EAAA4488;
  if (!qword_1EAAA4488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4488);
  }
  return result;
}

unint64_t sub_1DCA04928()
{
  unint64_t result = qword_1EAAA4490;
  if (!qword_1EAAA4490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4490);
  }
  return result;
}

unint64_t sub_1DCA04978()
{
  unint64_t result = qword_1EAAA4498;
  if (!qword_1EAAA4498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4498);
  }
  return result;
}

unint64_t sub_1DCA049C8()
{
  unint64_t result = qword_1EAAA44A0;
  if (!qword_1EAAA44A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA44A0);
  }
  return result;
}

unint64_t sub_1DCA04A18()
{
  unint64_t result = qword_1EAAA44A8[0];
  if (!qword_1EAAA44A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EAAA44A8);
  }
  return result;
}

uint64_t sub_1DCA04A64()
{
  return swift_task_dealloc();
}

uint64_t sub_1DCA04AAC()
{
  return swift_task_dealloc();
}

uint64_t sub_1DCA04B0C()
{
  sub_1DC881A8C(v3, v5);
  *(void *)uint64_t v4 = v6;
  *(void *)(v4 + 8) = v2;
  *(void *)(v4 + 16) = v7;
  *(void *)(v4 + 24) = v0;
  *(void *)(v4 + 32) = *(void *)(v8 - 160);
  *(void *)(v4 + 40) = v1;
  *(unsigned char *)(v4 + 48) = *(_DWORD *)(v8 - 152);
  *(unsigned char *)(v4 + 49) = *(_DWORD *)(v8 - 144);
  *(unsigned char *)(v4 + 50) = *(_DWORD *)(v8 - 136);
  *(unsigned char *)(v4 + 51) = *(_DWORD *)(v8 - 128);
  *(unsigned char *)(v4 + 52) = *(_DWORD *)(v8 - 120);
  *(unsigned char *)(v4 + 53) = *(_DWORD *)(v8 - 112);
  *(void *)(v4 + 56) = *(void *)(v8 - 96);
  *(unsigned char *)(v4 + 64) = *(_DWORD *)(v8 - 88);
  return v4;
}

uint64_t sub_1DCA04B7C()
{
  return sub_1DCB88D58();
}

uint64_t sub_1DCA04B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v31 = *(void *)(v29 - 72);
  uint64_t v32 = *(void *)(v29 - 104);
  uint64_t v33 = *(void *)(v29 - 96);
  uint64_t v34 = *(void *)(v29 - 88);
  return sub_1DCA037D0(a20, v31, v32, v26, v34, v33, a23, a22, a21, v27, v24, v23, v28, v25);
}

uint64_t sub_1DCA04BF4()
{
  return *(void *)(v0 + 496);
}

uint64_t sub_1DCA04C34()
{
  return v0;
}

void sub_1DCA04C78()
{
  *(_DWORD *)(v1 - 88) = *(unsigned __int8 *)(v0 + 207);
  *(void *)(v1 - 96) = *(void *)(v0 + 672);
  *(_DWORD *)(v1 - 104) = *(unsigned __int8 *)(v0 + 206);
  *(_DWORD *)(v1 - 112) = *(unsigned __int8 *)(v0 + 205);
  *(_DWORD *)(v1 - 120) = *(unsigned __int8 *)(v0 + 204);
  *(_DWORD *)(v1 - 128) = *(unsigned __int8 *)(v0 + 203);
  *(_DWORD *)(v1 - 136) = *(unsigned __int8 *)(v0 + 202);
  *(_DWORD *)(v1 - 144) = *(unsigned __int8 *)(v0 + 201);
}

uint64_t sub_1DCA04CBC@<X0>(int *a1@<X8>)
{
  *(void *)(v1 - 88) = (char *)a1 + *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA04CE0()
{
  return sub_1DCB88E88();
}

uint64_t sub_1DCA04D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

uint64_t sub_1DCA04D20()
{
  return v0;
}

uint64_t sub_1DCA04D38()
{
  return swift_beginAccess();
}

uint64_t sub_1DCA04D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v32 = *(void *)(v30 - 72);
  uint64_t v33 = *(void *)(v30 - 104);
  uint64_t v34 = *(void *)(v30 - 96);
  uint64_t v35 = *(void *)(v30 - 88);
  return sub_1DCA037D0(v24, v32, v33, v27, v35, v34, a23, a22, a21, v28, v25, v23, v29, v26);
}

uint64_t sub_1DCA04DB8()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCA04DEC()
{
  return sub_1DCB873D8();
}

uint64_t sub_1DCA04E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return a23;
}

uint64_t sub_1DCA04E4C()
{
  return v0 + 8;
}

__n128 sub_1DCA04E5C()
{
  return *(__n128 *)(v0 + 568);
}

uint64_t sub_1DCA04EA4()
{
  return v0;
}

uint64_t sub_1DCA04EC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = *a1;
  uint64_t v3 = a1[4];
  *(void *)(v1 - 96) = a1[5];
  *(void *)(v1 - 88) = v3;
  return result;
}

uint64_t sub_1DCA04EE0()
{
  return sub_1DCB873A8();
}

uint64_t sub_1DCA04EFC()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1DCA04F24()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DCA04F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 72) = a2;
  *(void *)(v3 - 104) = a3;
  return sub_1DC88244C(a1, a2, a3);
}

__n128 sub_1DCA04F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,long long a33)
{
  return (__n128)a33;
}

__n128 sub_1DCA04F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17)
{
  return (__n128)a17;
}

__n128 sub_1DCA04FC8()
{
  return *(__n128 *)(v0 + 568);
}

uint64_t sub_1DCA04FE0()
{
  return sub_1DCB88778();
}

uint64_t sub_1DCA04FFC()
{
  return v0;
}

uint64_t sub_1DCA05014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v25 = *(void *)(v23 - 72);
  uint64_t v26 = *(void *)(v23 - 104);
  uint64_t v27 = *(void *)(v23 - 96);
  uint64_t v28 = *(void *)(v23 - 88);
  return sub_1DCA037D0(a1, v25, v26, a19, v28, v27, a23, a22, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1DCA05038()
{
  return v0;
}

uint64_t sub_1DCA05048()
{
  return v0;
}

uint64_t sub_1DCA05060()
{
  return v0;
}

uint64_t sub_1DCA05078()
{
  return sub_1DCB88F18();
}

uint64_t sub_1DCA0509C()
{
  return v0;
}

__n128 sub_1DCA050B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,long long a29)
{
  return (__n128)a29;
}

uint64_t sub_1DCA050CC()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1DCA050E4()
{
  return v0;
}

__n128 sub_1DCA050F8()
{
  return *(__n128 *)(v0 + 584);
}

uint64_t sub_1DCA05118()
{
  return *(void *)(v0 - 216);
}

uint64_t sub_1DCA0512C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  return sub_1DCA02E30(a1, a2, a3, v14, a5, v15, v16, v17, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1DCA0514C()
{
  return sub_1DCB88DF8();
}

uint64_t sub_1DCA0516C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DC88245C(a1, a2, a3, v4, v3, v6, v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCA051A4()
{
  return swift_release();
}

uint64_t type metadata accessor for UnsafeMemcpyNode()
{
  return self;
}

uint64_t sub_1DCA051E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCA05284(long long *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1DC8BA1CC(a1, v4 + 16);
  *(void *)(v4 + 56) = a2;
  return v4;
}

uint64_t sub_1DCA052D8()
{
  sub_1DC881A8C((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1DCB87248();
}

uint64_t sub_1DCA05324()
{
  swift_retain();
  os_unfair_recursive_lock_lock_with_options();
  sub_1DCA05394(v0);
  os_unfair_recursive_lock_unlock();

  return swift_release();
}

uint64_t sub_1DCA05394(uint64_t a1)
{
  return sub_1DCB871C8();
}

uint64_t sub_1DCA053E4()
{
  sub_1DC8818D0(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_1DCA0540C()
{
  sub_1DCA053E4();

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA05440()
{
  return sub_1DCA052D8();
}

uint64_t sub_1DCA05464()
{
  return sub_1DCA05324();
}

uint64_t sub_1DCA05488(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 104);
  uint64_t v9 = *(void *)(*v2 + 80);
  long long v10 = *(_OWORD *)(v4 + 88);
  uint64_t v11 = v5;
  uint64_t v6 = type metadata accessor for UpstreamEventSerializer.InnerSubscriber.InnerSubscription();
  sub_1DC8B9960(a1, (uint64_t)&v9);
  uint64_t v7 = sub_1DCA05284((long long *)&v9, *(uint64_t *)((char *)v2 + *(void *)(*v2 + 120)));
  uint64_t v11 = v6;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = v7;
  swift_retain();
  swift_retain();
  sub_1DCB871A8();
  swift_release();
  return sub_1DC8818D0((uint64_t)&v9);
}

uint64_t sub_1DCA055E8()
{
  return sub_1DCB871B8();
}

uint64_t sub_1DCA05648()
{
  return sub_1DCB87198();
}

uint64_t sub_1DCA056A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1DCA056F8(a1, a2);
  return v4;
}

uint64_t sub_1DCA056F8(uint64_t a1, uint64_t a2)
{
  sub_1DCA05D84();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 88) - 8) + 32))(v2 + *(void *)(v4 + 112));
  *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = a2;
  return v2;
}

uint64_t sub_1DCA05788()
{
  sub_1DCA05D84();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 88) - 8) + 8))(v0 + *(void *)(v1 + 112));
  swift_release();
  return v0;
}

uint64_t sub_1DCA0580C()
{
  return sub_1DCA05B58((void (*)(void))sub_1DCA05788);
}

uint64_t sub_1DCA05824(uint64_t a1)
{
  return sub_1DCA05488(a1);
}

uint64_t sub_1DCA05848()
{
  return sub_1DCA055E8();
}

uint64_t sub_1DCA0586C()
{
  return sub_1DCA05648();
}

uint64_t sub_1DCA05890(uint64_t a1, uint64_t a2)
{
  swift_retain();
  os_unfair_recursive_lock_lock_with_options();
  sub_1DCA05920(v2, a1, a2);
  os_unfair_recursive_lock_unlock();

  return swift_release();
}

uint64_t sub_1DCA05920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 88);
  v14[0] = *(void *)(v9 + 80);
  v14[1] = v11;
  void v14[2] = v10;
  v14[3] = v12;
  type metadata accessor for UpstreamEventSerializer.InnerSubscriber();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, a3);
  v14[0] = sub_1DCA056A8((uint64_t)v8, *(void *)(a1 + 16));
  swift_retain();
  swift_getWitnessTable();
  sub_1DCB87388();
  return swift_release();
}

uint64_t *sub_1DCA05AC0()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  return v0;
}

uint64_t sub_1DCA05B40()
{
  return sub_1DCA05B58((void (*)(void))sub_1DCA05AC0);
}

uint64_t sub_1DCA05B58(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UpstreamEventSerializer()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA05BCC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for UpstreamEventSerializer.InnerSubscriber()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCA05C84()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UpstreamEventSerializer.InnerSubscriber.InnerSubscription()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCA05CEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCA05D08()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCA05D24()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCA05D40()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1DCA05D5C(uint64_t a1, uint64_t a2)
{
  return sub_1DCA05890(a1, a2);
}

void *sub_1DCA05D94@<X0>(void *a1@<X8>)
{
  if (qword_1EAA9D240 != -1) {
    swift_once();
  }
  if (byte_1EAAFF9B8)
  {
    id v3 = (id)xmmword_1EAAFF990;
    sub_1DC87E988(&qword_1EAA9DF60);
    return (void *)swift_willThrowTypedImpl();
  }
  else
  {
    uint64_t v6 = xmmword_1EAAFF990;
    int v7 = DWORD2(xmmword_1EAAFF990);
    uint64_t v8 = qword_1EAAFF9A0;
    uint64_t v9 = qword_1EAAFF9A8;
    uint64_t v10 = qword_1EAAFF9B0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCA17054((uint64_t)&v6, __src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (!v1) {
      return memcpy(a1, __src, 0x50uLL);
    }
  }
  return result;
}

id sub_1DCA05EB8()
{
  return sub_1DCA06168(20, 0x80000001DCB95EA0);
}

id sub_1DCA05ED0()
{
  return sub_1DCA06168(24, 0x80000001DCB95E80);
}

id sub_1DCA05EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86C28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DC87E988(qword_1EAAA4630);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1DCA06104(a1, a2, v11);
  sub_1DCB86C38();
  uint64_t v12 = sub_1DCB86C58();
  long long v13 = 0;
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v12) != 1)
  {
    long long v13 = (void *)sub_1DCB86C48();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }
  objc_msgSend(v11, sel_setTimeZone_, v13);

  sub_1DCB86C08();
  uint64_t v14 = (void *)sub_1DCB86C18();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v11, sel_setLocale_, v14);

  return v11;
}

void sub_1DCA06104(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1DCB87908();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDateFormat_, v4);
}

id sub_1DCA06168(uint64_t a1, uint64_t a2)
{
  return sub_1DCA05EE8(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2);
}

uint64_t sub_1DCA06170()
{
  return swift_initClassMetadata2();
}

uint64_t *sub_1DCA061B8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1DCB86BF8();
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  int v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0[2];
  uint64_t v9 = (char *)v0 + *(void *)(v1 + 96);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v2);
  sub_1DCA06320(v8, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  uint64_t v10 = type metadata accessor for ContextDictionary.Record();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  return v0;
}

uint64_t sub_1DCA06320(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  type metadata accessor for ContextDictionary.Record();
  type metadata accessor for ReservableSlot();
  uint64_t v6 = sub_1DCB88718();
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  id v11 = &v13[-v10];
  uint64_t v16 = a1;
  uint64_t v14 = v5;
  uint64_t v15 = a2;
  sub_1DCACBFC8();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v6);
}

uint64_t sub_1DCA0642C()
{
  sub_1DCA061B8();

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA06484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[1] = a2;
  uint64_t v19 = a3;
  uint64_t v4 = type metadata accessor for ContextDictionary.Record();
  uint64_t v5 = type metadata accessor for ReservableSlot();
  uint64_t v6 = sub_1DCB88718();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v17 - v9;
  v17[0] = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - v11;
  long long v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v18 = a1;
  v13(v10, a1, v6);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v10, v5);
  }
  else
  {
    uint64_t v14 = v17[0];
    (*(void (**)(char *, char *, uint64_t))(v17[0] + 32))(v12, v10, v4);
    char v15 = sub_1DCB86BB8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v4);
    if (v15) {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v19, 1, 1, v5);
    }
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v19, v18, v6);
}

uint64_t type metadata accessor for ContextDictionary()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA06714()
{
  uint64_t result = type metadata accessor for ContextDictionary.Record();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ContextDictionary.Registration()
{
  return sub_1DC8866E4();
}

uint64_t type metadata accessor for ContextDictionary.Record()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA067F4()
{
  uint64_t result = sub_1DCB86BF8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DCA068C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v7 + 64) + v10;
  int v13 = *(_DWORD *)(v7 + 80) | v10;
  uint64_t v14 = v13;
  int v15 = v13 & 0x100000;
  if (v14 > 7
    || v15 != 0
    || (v12 & (unint64_t)~v11) + *(void *)(*(void *)(v8 - 8) + 64) > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v19 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v19, ((unint64_t)a2 + v12) & v19, v8);
  }
  return a1;
}

uint64_t sub_1DCA06A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCB86BF8();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v8);
}

uint64_t sub_1DCA06AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 48) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1DCA06B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1DCA06C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 32) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1DCA06CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(void *)(v7 + 24) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1DCA06DB4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB86BF8();
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  if (v10 <= v9) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v14 = v6;
  uint64_t v15 = *(void *)(*(void *)(v6 - 8) + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v16 = (v15 & ~v12) + v13;
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((a2 - v11 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v9 >= v10)
        {
          uint64_t v23 = (uint64_t)a1;
          uint64_t v7 = v14;
        }
        else
        {
          uint64_t v23 = ((unint64_t)a1 + v15) & ~v12;
          uint64_t v9 = v10;
        }
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v23, v9, v7);
      }
      return 0;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_24;
  }
LABEL_14:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v21 = v16;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v11 + (v22 | v20) + 1;
}

void sub_1DCA06FDC(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DCB86BF8();
  uint64_t v9 = *(unsigned int *)(*(void *)(v8 - 8) + 84);
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v9) {
    unsigned int v13 = *(_DWORD *)(*(void *)(v8 - 8) + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v11 + 64);
  char v17 = 8 * v16;
  if (a3 <= v13)
  {
    int v18 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v21 = ((a3 - v13 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v21))
    {
      int v18 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v21 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v19 = ~v13 + a2;
    if (v16 < 4)
    {
      int v20 = (v19 >> v17) + 1;
      if (v16)
      {
        int v22 = v19 & ~(-1 << v17);
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v16] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v20;
        return;
      case 3:
        goto LABEL_40;
      case 4:
        *(_DWORD *)&a1[v16] = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_40:
      __break(1u);
      JUMPOUT(0x1DCA0727CLL);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = (uint64_t)a1;
          uint64_t v24 = a2;
          uint64_t v10 = v8;
        }
        else
        {
          uint64_t v23 = (unint64_t)&a1[v15] & ~v14;
          uint64_t v24 = a2;
          uint64_t v9 = v12;
        }
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v23, v24, v9, v10);
      }
      return;
  }
}

uint64_t sub_1DCA072A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCA06484(a1, *(void *)(v2 + 24), a2);
}

unsigned char *storeEnumTagSinglePayload for CoerceUtils.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA0735CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoerceUtils.DomainError()
{
  return &type metadata for CoerceUtils.DomainError;
}

unint64_t sub_1DCA07398()
{
  unint64_t result = qword_1EAAA47B8;
  if (!qword_1EAAA47B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA47B8);
  }
  return result;
}

uint64_t sub_1DCA073E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  unsigned int v13 = (char *)v18 - v12;
  sub_1DC88D538();
  MEMORY[0x1F4188790](v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  if (swift_dynamicCast())
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 0, 1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v13, a3);
  }
  else
  {
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v13, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
    sub_1DC8DA330();
    swift_allocError();
    return swift_willThrow();
  }
}

void SNClassifySoundRequest.windowDurationConstraint.getter(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_windowDurationConstraint);
  id v4 = objc_msgSend(v3, sel_type);
  if (v4 == (id)2)
  {
    objc_msgSend(v3, sel_durationRange);

    *(_OWORD *)a1 = v16;
    *(_OWORD *)(a1 + 16) = v17;
    *(_OWORD *)(a1 + 32) = v18;
    *(unsigned char *)(a1 + 48) = 1;
    return;
  }
  if (v4 != (id)1) {
    goto LABEL_19;
  }
  id v5 = objc_msgSend(v3, sel_enumeratedDurations);
  sub_1DC8A8794();
  unint64_t v6 = sub_1DCB87C38();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();

    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_17:
    *(void *)a1 = v9;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 33) = 0u;
    return;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1DC897B3C();
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = v3;
    uint64_t v8 = 0;
    uint64_t v9 = v15;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1E01A7AE0](v8, v6);
      }
      else {
        id v10 = *(id *)(v6 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      objc_msgSend(v10, sel_CMTimeValue);

      unint64_t v12 = *(void *)(v15 + 16);
      if (v12 >= *(void *)(v15 + 24) >> 1) {
        sub_1DC897B3C();
      }
      *(void *)(v15 + 16) = v12 + 1;
      uint64_t v13 = v15 + 24 * v12;
      *(_OWORD *)(v13 + 32) = v16;
      ++v8;
      *(void *)(v13 + 48) = v17;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();

    goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  sub_1DCB88C68();
  __break(1u);
}

uint64_t sub_1DCA07864(uint64_t a1)
{
  return sub_1DCA07990(a1);
}

uint64_t sub_1DCA07870(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1DCA07A34();
    uint64_t result = sub_1DCA07A10();
    __break(1u);
  }
  else if (a1)
  {
    sub_1DC87E988(qword_1EAAA47C0);
    uint64_t result = sub_1DCB87CF8();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1DCA078F0(uint64_t a1)
{
  return sub_1DCA07990(a1);
}

uint64_t sub_1DCA078FC(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1DCA07A34();
    uint64_t result = sub_1DCA07A10();
    __break(1u);
  }
  else if (a1)
  {
    type metadata accessor for CMTime(0);
    uint64_t result = sub_1DCB87CF8();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1DCA07978(uint64_t a1)
{
  return sub_1DCA07990(a1);
}

uint64_t sub_1DCA07984(uint64_t a1)
{
  return sub_1DCA07990(a1);
}

uint64_t sub_1DCA07990(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1DCA07A34();
    uint64_t result = sub_1DCA07A10();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1DCB87CF8();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

ValueMetadata *type metadata accessor for SNTimeDurationConstraint()
{
  return &type metadata for SNTimeDurationConstraint;
}

uint64_t sub_1DCA07A10()
{
  return sub_1DCB88C58();
}

uint64_t sub_1DCA07A4C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1DCA07A8C(a1);
  return v2;
}

char *sub_1DCA07A8C(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  type metadata accessor for SafeRecursiveLock();
  uint64_t v4 = swift_allocObject();
  id v5 = (void *)swift_slowAlloc();
  *id v5 = 0;
  *(void *)(v4 + 16) = v5;
  *((void *)v1 + 2) = v4;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 32))(&v1[*(void *)(*(void *)v1 + 104)], a1);
  return v1;
}

uint64_t sub_1DCA07B44()
{
  swift_retain();
  os_unfair_recursive_lock_lock_with_options();
  sub_1DCA07BD4();
  os_unfair_recursive_lock_unlock();

  return swift_release();
}

uint64_t sub_1DCA07BD4()
{
  return sub_1DCB87388();
}

uint64_t sub_1DCA07C50()
{
  sub_1DCA05AC0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SubscriptionSerializer()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA07CC0()
{
  return sub_1DCA07B44();
}

uint64_t sub_1DCA07CE4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SubscriptionSerializer();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  return sub_1DCA07A4C((uint64_t)v5);
}

uint64_t sub_1DCA07DC0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1DCB88718();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1DCA07EA0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = sub_1DCB88718();
  sub_1DC88D538();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v13 - v9;
  (*(void (**)(uint64_t))((char *)v1 + *(void *)(v2 + 136)))(v8);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v10, 0, 1, v3);
  uint64_t v11 = (char *)v1 + *(void *)(*v1 + 128);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v11, v10, v4);
  swift_endAccess();
  return sub_1DCB871A8();
}

uint64_t sub_1DCA080AC()
{
  return sub_1DCB871B8();
}

uint64_t sub_1DCA0810C()
{
  return sub_1DCB87198();
}

uint64_t sub_1DCA0817C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1DCA081D4(a1, a2, a3);
  return v6;
}

uint64_t *sub_1DCA081D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v3 + *(void *)(*v3 + 128), 1, 1, *(void *)(*v3 + 88));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v7 + 96) - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 120), a1);
  uint64_t v8 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 136));
  *uint64_t v8 = a2;
  v8[1] = a3;
  return v3;
}

uint64_t sub_1DCA082C0()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 96) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 120));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  uint64_t v2 = sub_1DCB88718();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_1DCA083BC()
{
  sub_1DCA082C0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeepAliveDuringSubscriptionPublisher.Middle()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1DCA0842C()
{
  return sub_1DCA07EA0();
}

uint64_t sub_1DCA08450()
{
  return sub_1DCA080AC();
}

uint64_t sub_1DCA08474()
{
  return sub_1DCA0810C();
}

uint64_t sub_1DCA0849C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1DCA084B8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCA08554(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCA08690);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1DCA086A4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1DCA08874);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for KeepAliveDuringSubscriptionPublisher()
{
  return sub_1DC8866E4();
}

uint64_t sub_1DCA088B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1DC88D538();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 32);
  long long v18 = *(_OWORD *)(v13 + 16);
  long long v19 = v18;
  uint64_t v20 = v15;
  uint64_t v21 = v14;
  uint64_t v22 = v16;
  type metadata accessor for KeepAliveDuringSubscriptionPublisher.Middle();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  *(void *)&long long v19 = sub_1DCA0817C((uint64_t)v12, *(void *)(v4 + *(int *)(a2 + 44)), *(void *)(v4 + *(int *)(a2 + 44) + 8));
  swift_retain();
  swift_getWitnessTable();
  sub_1DCB87388();
  return swift_release();
}

uint64_t sub_1DCA089F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCA088B4(a1, a4, a2);
}

void sub_1DCA08A0C(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SNFileServer_link);
  *(void *)(v1 + OBJC_IVAR___SNFileServer_link) = a1;
}

id sub_1DCA08A20(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1DCB884C8();
  MEMORY[0x1F4188790](v5);
  sub_1DC9D2FF4();
  uint64_t v6 = sub_1DCB875B8();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DC8A22D0();
  uint64_t v7 = sub_1DCB884D8();
  sub_1DC89D4E0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  sub_1DC8A22D0();
  uint64_t v13 = v12 - v11;
  *(void *)&v2[OBJC_IVAR___SNFileServer_link] = 0;
  sub_1DC9C573C();
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v13, *MEMORY[0x1E4FBCC68], v7);
  uint64_t v14 = v2;
  sub_1DCB875A8();
  sub_1DCA0C7B8();
  sub_1DC87E988((uint64_t *)&unk_1EAA9D0D0);
  sub_1DCA0C808();
  sub_1DCB88928();
  uint64_t v15 = (void *)sub_1DCB88508();
  *(void *)&v14[OBJC_IVAR___SNFileServer_queue] = v15;
  uint64_t v16 = (objc_class *)type metadata accessor for SNFileServer();
  id v17 = v15;
  id v18 = sub_1DCA08D94(a1, a2, (uint64_t)v17);

  *(void *)&v14[OBJC_IVAR___SNFileServer_server] = v18;
  long long v19 = (uint64_t *)&v14[OBJC_IVAR___SNFileServer_rootDirectory];
  *long long v19 = a1;
  v19[1] = a2;
  swift_bridgeObjectRetain();

  id v20 = objc_msgSend(self, sel_defaultManager);
  uint64_t v21 = (void *)sub_1DCB87908();
  id v28 = 0;
  unsigned int v22 = objc_msgSend(v20, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v28);

  if (v22)
  {
    id v23 = v28;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v24 = v28;
    uint64_t v25 = (void *)sub_1DCB86898();

    swift_willThrow();
    id v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_1DCB88A98();
    swift_bridgeObjectRelease();
    id v28 = (id)0xD000000000000020;
    unint64_t v29 = 0x80000001DCB960C0;
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCAC5F78((uint64_t)v28, v29);
    swift_bridgeObjectRelease();
  }
  v27.receiver = v14;
  v27.super_class = v16;
  return objc_msgSendSuper2(&v27, sel_init);
}

id sub_1DCA08D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F5E120]), sel_init);
  sub_1DCA0C280(0xD000000000000017, 0x80000001DCB960F0, v11);
  sub_1DCB86928();
  uint64_t v12 = (void *)sub_1DCB86948();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  objc_msgSend(v11, sel_setRootDirectoryURL_, v12);

  objc_msgSend(v11, sel_setDispatchQueue_, a3);
  return v11;
}

uint64_t sub_1DCA08EEC(uint64_t a1, void (*a2)(void))
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1DCB86FE8();
  sub_1DC89F57C(v3, (uint64_t)qword_1EAAFF810);
  uint64_t v4 = sub_1DCB86FC8();
  os_log_type_t v5 = sub_1DCB88488();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1DC873000, v4, v5, "Received version request", v6, 2u);
    sub_1DC8E7728();
  }

  sub_1DC87E988(&qword_1EAA9E7E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DCBB93B0;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  sub_1DCB88A38();
  *(void *)(inited + 96) = v8;
  *(void *)(inited + 72) = 3157553;
  *(void *)(inited + 80) = 0xE300000000000000;
  sub_1DCB877D8();
  sub_1DC886854();
  a2();
  return swift_bridgeObjectRelease();
}

void sub_1DCA09084(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  uint64_t v70 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1DC8A22D0();
  uint64_t v69 = v15 - v14;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1DCB86FE8();
  sub_1DC89F57C(v16, (uint64_t)qword_1EAAFF810);
  id v17 = sub_1DCB86FC8();
  os_log_type_t v18 = sub_1DCB88488();
  if (os_log_type_enabled(v17, v18))
  {
    long long v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v19 = 0;
    _os_log_impl(&dword_1DC873000, v17, v18, "Received file transfer request", v19, 2u);
    sub_1DC8E7728();
  }

  sub_1DCB877D8();
  sub_1DC886854();
  a2();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F94710]), sel_init);
  objc_msgSend(v20, sel_setDispatchQueue_, a7);
  id aBlock = 0;
  if (!objc_msgSend(v20, sel_prepareTemplateAndReturnError_, &aBlock))
  {
    id v32 = aBlock;
    uint64_t v33 = (void *)sub_1DCB86898();

    swift_willThrow();
    return;
  }
  id v21 = aBlock;
  unsigned int v22 = NSTemporaryDirectory();
  sub_1DCB87938();

  sub_1DCB86928();
  swift_bridgeObjectRelease();
  id v23 = (void *)sub_1DCB86948();
  uint64_t v63 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t v24 = v63(v69, v70);
  sub_1DCA0CA0C(v24, sel_setTemporaryDirectoryURL_);

  uint64_t v80 = sub_1DCA09AA4;
  uint64_t v81 = 0;
  id aBlock = (id)MEMORY[0x1E4F143A8];
  uint64_t v77 = 1107296256;
  uint64_t v78 = sub_1DCA09C70;
  uint64_t v79 = &unk_1F37FAE90;
  uint64_t v25 = _Block_copy(&aBlock);
  sub_1DCA0CA0C((uint64_t)v25, sel_setProgressHandler_);
  _Block_release(v25);
  sub_1DCA0CA5C();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a1;
  *(void *)(v26 + 24) = a6;
  uint64_t v80 = sub_1DCA0C278;
  uint64_t v81 = v26;
  id aBlock = (id)MEMORY[0x1E4F143A8];
  uint64_t v77 = 1107296256;
  uint64_t v78 = sub_1DCA0A750;
  uint64_t v79 = &unk_1F37FAF30;
  objc_super v27 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v28 = a6;
  uint64_t v29 = swift_release();
  sub_1DCA0CA0C(v29, sel_setCompletionHandler_);
  _Block_release(v27);
  sub_1DCA0CB38();
  sub_1DCA0C9F0();
  sub_1DC8A8EA0((uint64_t)&aBlock);
  if (v75)
  {
    uint64_t v30 = sub_1DCA0C9D0();
    if (v30)
    {
      uint64_t v31 = (void *)sub_1DCB86AB8();
      uint64_t v30 = sub_1DC881920(0x7550746567726174, 0xEF79654B63696C62);
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v30 = sub_1DC9AEC6C((uint64_t)v74, &qword_1EAA9CAB0);
  }
  uint64_t v31 = 0;
LABEL_12:
  sub_1DCA0CA0C(v30, sel_setPeerPublicKey_);

  sub_1DCA0CA80();
  sub_1DCA0CB38();
  sub_1DCA0C9F0();
  sub_1DC8A8EA0((uint64_t)&aBlock);
  if (v75)
  {
    uint64_t v34 = sub_1DCA0C9D0();
    if (v34)
    {
      uint64_t v35 = (void *)sub_1DCB87908();
      uint64_t v34 = swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v34 = sub_1DC9AEC6C((uint64_t)v74, &qword_1EAA9CAB0);
  }
  uint64_t v35 = 0;
LABEL_17:
  sub_1DCA0CA0C(v34, sel_setTargetID_);

  sub_1DCA0CA24();
  uint64_t v71 = v36;
  sub_1DCA0CB38();
  sub_1DCA0C9F0();
  sub_1DC8A8EA0((uint64_t)&aBlock);
  if (!v75)
  {
LABEL_35:
    sub_1DC9AEC6C((uint64_t)v74, &qword_1EAA9CAB0);
    goto LABEL_36;
  }
  sub_1DC87E988(&qword_1EAA9E7F0);
  if ((sub_1DCA0C9D0() & 1) == 0) {
    goto LABEL_36;
  }
  uint64_t v37 = v71;
  sub_1DCA0CA68();
  uint64_t v72 = v38;
  uint64_t v73 = v39;
  sub_1DCA0CB38();
  sub_1DCA0C9F0();
  sub_1DC8A8EA0((uint64_t)&aBlock);
  if (!v75)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (sub_1DCA0C9D0())
  {
    uint64_t v40 = v73;
    uint64_t v41 = *(void *)(v37 + 16);
    uint64_t v42 = a5;
    if (v41)
    {
      uint64_t v64 = self;
      uint64_t v43 = (unint64_t *)(v37 + 40);
      id v65 = v20;
      do
      {
        uint64_t v44 = *(v43 - 1);
        unint64_t v45 = *v43;
        sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = xmmword_1DCBB9440;
        *(void *)(v46 + 32) = a4;
        *(void *)(v46 + 40) = v42;
        *(void *)(v46 + 48) = v72;
        *(void *)(v46 + 56) = v40;
        uint64_t v67 = v44;
        *(void *)(v46 + 64) = v44;
        *(void *)(v46 + 72) = v45;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v47 = (void *)sub_1DCB87C08();
        swift_bridgeObjectRelease();
        id v48 = objc_msgSend(v64, sel_pathWithComponents_, v47);

        sub_1DCB87938();
        if (sub_1DCA0A7BC())
        {
          uint64_t v62 = v41;
          swift_bridgeObjectRetain_n();
          uint64_t v49 = sub_1DCB86FC8();
          os_log_type_t v50 = sub_1DCB88488();
          if (os_log_type_enabled(v49, v50))
          {
            uint64_t v51 = sub_1DCA0CAB4();
            uint64_t v52 = swift_slowAlloc();
            *(_DWORD *)uint64_t v51 = sub_1DCA0CB04(v52).n128_u32[0];
            swift_bridgeObjectRetain();
            uint64_t v53 = v67;
            *(void *)(v51 + 4) = sub_1DC9F8920(v67, v45, (uint64_t *)&aBlock);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1DC873000, v49, v50, "Requested file path %s", (uint8_t *)v51, 0xCu);
            swift_arrayDestroy();
            uint64_t v40 = v73;
            sub_1DC8E7728();
            uint64_t v42 = a5;
            sub_1DC8E7728();
          }
          else
          {
            swift_bridgeObjectRelease_n();

            uint64_t v53 = v67;
          }
          id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F946F8]), sel_init);
          sub_1DCA0C2D8(v53, v45, v58);
          sub_1DCB86928();
          swift_bridgeObjectRelease();
          uint64_t v59 = (void *)sub_1DCB86948();
          v63(v69, v70);
          objc_msgSend(v58, sel_setItemURL_, v59);

          id v20 = v65;
          sub_1DCA0CA0C(v60, sel_addItem_);

          uint64_t v41 = v62;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v54 = sub_1DCB86FC8();
          os_log_type_t v55 = sub_1DCB88488();
          if (os_log_type_enabled(v54, v55))
          {
            uint64_t v56 = sub_1DCA0CAB4();
            uint64_t v57 = swift_slowAlloc();
            *(_DWORD *)uint64_t v56 = sub_1DCA0CB04(v57).n128_u32[0];
            swift_bridgeObjectRetain();
            *(void *)(v56 + 4) = sub_1DC9F8920(v67, v45, (uint64_t *)&aBlock);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1DC873000, v54, v55, "Skipping transferring of file %s", (uint8_t *)v56, 0xCu);
            swift_arrayDestroy();
            uint64_t v40 = v73;
            sub_1DC8E7728();
            sub_1DC8E7728();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          id v20 = v65;
        }
        v43 += 2;
        --v41;
      }
      while (v41);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_activate);
    objc_msgSend(v20, sel_finish);
    goto LABEL_37;
  }
  swift_bridgeObjectRelease();
LABEL_36:
  sub_1DCA0BD68();
  swift_allocError();
  *uint64_t v61 = 1;
  swift_willThrow();
LABEL_37:
}

void sub_1DCA09AA4(void *a1)
{
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DCB86FE8();
  sub_1DC89F57C(v2, (uint64_t)qword_1EAAFF810);
  id v8 = a1;
  uint64_t v3 = sub_1DCB86FC8();
  os_log_type_t v4 = sub_1DCB88488();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 138412290;
    id v7 = v8;
    sub_1DCB88778();
    void *v6 = v8;

    _os_log_impl(&dword_1DC873000, v3, v4, "Progressing %@", v5, 0xCu);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v6, -1, -1);
    MEMORY[0x1E01A99C0](v5, -1, -1);
  }
  else
  {
  }
}

void sub_1DCA09C70(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1DCA09CD8(void *a1, uint64_t a2, void *a3)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1DCB86FE8();
  sub_1DC89F57C(v9, (uint64_t)qword_1EAAFF810);
  id v10 = a1;
  id v11 = a1;
  uint64_t v12 = sub_1DCB86FC8();
  os_log_type_t v13 = sub_1DCB88488();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    if (a1)
    {
      id v16 = a1;
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
      v22[0] = v17;
      sub_1DCB88778();
    }
    else
    {
      v22[0] = 0;
      sub_1DCB88778();
      uint64_t v17 = 0;
    }
    *uint64_t v15 = v17;

    _os_log_impl(&dword_1DC873000, v12, v13, "Finished transferring files with error %@", v14, 0xCu);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v15, -1, -1);
    MEMORY[0x1E01A99C0](v14, -1, -1);
  }
  else
  {
  }
  uint64_t v18 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v8, 1, 1, v18);
  long long v19 = (void *)swift_allocObject();
  void v19[2] = 0;
  _OWORD v19[3] = 0;
  v19[4] = a2;
  v19[5] = a3;
  swift_bridgeObjectRetain();
  id v20 = a3;
  sub_1DCA97644();
  return swift_release();
}

uint64_t sub_1DCA09F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 128) = a4;
  *(void *)(v5 + 136) = a5;
  return MEMORY[0x1F4188298](sub_1DCA09FB4, 0, 0);
}

uint64_t sub_1DCA09FB4()
{
  sub_1DCA0CA80();
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = *(void *)(v0 + 128);
  *(void *)(v0 + 96) = 0xE800000000000000;
  sub_1DCB88A38();
  sub_1DC9614B8(v2, (_OWORD *)(v0 + 56));
  sub_1DC8A8EA0(v0 + 16);
  if (*(void *)(v0 + 80))
  {
    if (swift_dynamicCast())
    {
      uint64_t v4 = *(void *)(v0 + 104);
      uint64_t v3 = *(void *)(v0 + 112);
      *(void *)(v0 + 144) = v3;
      type metadata accessor for SNFileSharingUtils();
      uint64_t v5 = sub_1DCB877D8();
      *(void *)(v0 + 152) = v5;
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v6;
      void *v6 = v0;
      v6[1] = sub_1DCA0A340;
      uint64_t v7 = *(void *)(v0 + 136);
      return sub_1DC914EA0(0xD000000000000014, 0x80000001DCB960A0, v5, v4, v3, v7);
    }
  }
  else
  {
    sub_1DC9AEC6C(v0 + 56, &qword_1EAA9CAB0);
  }
  sub_1DCA0BD68();
  uint64_t v9 = (void *)swift_allocError();
  unsigned char *v10 = 0;
  swift_willThrow();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1DCB86FE8();
  sub_1DC89F57C(v11, (uint64_t)qword_1EAAFF810);
  id v12 = v9;
  id v13 = v9;
  uint64_t v14 = sub_1DCB86FC8();
  os_log_type_t v15 = sub_1DCB88488();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    id v20 = (void *)swift_slowAlloc();
    *(_DWORD *)id v16 = 138412290;
    id v17 = v9;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v18;
    sub_1DCB88778();
    *id v20 = v18;

    _os_log_impl(&dword_1DC873000, v14, v15, "Message transmitted with error: %@", v16, 0xCu);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
  }
  sub_1DC8BA978();
  return v19();
}

uint64_t sub_1DCA0A340()
{
  sub_1DC886900();
  sub_1DC886774();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  *(void *)(v3 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1DC886854();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1DCA0A454()
{
  sub_1DC886900();
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1DCB86FE8();
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF810);
  uint64_t v1 = sub_1DCB86FC8();
  os_log_type_t v2 = sub_1DCB88488();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1DC873000, v1, v2, "Message transmitted successfully!", v3, 2u);
    sub_1DC8E7728();
  }

  sub_1DC8BA978();
  return v4();
}

uint64_t sub_1DCA0A558()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 168);
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DCB86FE8();
  sub_1DC89F57C(v2, (uint64_t)qword_1EAAFF810);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1DCB86FC8();
  os_log_type_t v6 = sub_1DCB88488();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v10;
    sub_1DCB88778();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1DC873000, v5, v6, "Message transmitted with error: %@", v7, 0xCu);
    sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
  }
  sub_1DC8BA978();
  return v11();
}

void sub_1DCA0A750(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

BOOL sub_1DCA0A7BC()
{
  uint64_t v1 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  sub_1DC9D2FF4();
  sub_1DCB86928();
  if (sub_1DCB868E8() == 7758199 && v5 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v7 = sub_1DCB89018();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_8:
    type metadata accessor for SNAudioFileUtils();
    BOOL v8 = (uint64_t)sub_1DCAB8FDC() > 0;
    goto LABEL_9;
  }
  BOOL v8 = 1;
LABEL_9:
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v8;
}

void sub_1DCA0A8D4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  sub_1DCA0CA68();
  uint64_t v45 = v9;
  uint64_t v47 = v10;
  sub_1DCB88A38();
  sub_1DC9614B8(a1, &v50);
  sub_1DC8A8EA0((uint64_t)v49);
  if (!v51) {
    goto LABEL_12;
  }
  if ((sub_1DCA0CAE4() & 1) == 0)
  {
LABEL_13:
    sub_1DCA0BD68();
    swift_allocError();
    *id v28 = 1;
    swift_willThrow();
    return;
  }
  uint64_t v11 = v45;
  uint64_t v12 = v47;
  sub_1DCA0CA24();
  uint64_t v46 = v13;
  uint64_t v48 = v14;
  sub_1DCB88A38();
  sub_1DC9614B8(a1, &v50);
  sub_1DC8A8EA0((uint64_t)v49);
  if (!v51)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1DC9AEC6C((uint64_t)&v50, &qword_1EAA9CAB0);
    goto LABEL_13;
  }
  if ((sub_1DCA0CAE4() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v44 = a2;
  os_log_type_t v15 = self;
  sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DCBB9440;
  *(void *)(v16 + 32) = a4;
  *(void *)(v16 + 40) = a5;
  *(void *)(v16 + 48) = v11;
  *(void *)(v16 + 56) = v12;
  *(void *)(v16 + 64) = v46;
  *(void *)(v16 + 72) = v48;
  swift_bridgeObjectRetain();
  id v17 = (void *)sub_1DCB87C08();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_pathWithComponents_, v17);

  long long v19 = v18;
  if (!v18)
  {
    sub_1DCB87938();
    long long v19 = (void *)sub_1DCB87908();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_1DCB87938();
  unint64_t v22 = v21;
  if (qword_1EAA9C658 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1DCB86FE8();
  sub_1DC89F57C(v23, (uint64_t)qword_1EAAFF810);
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1DCB86FC8();
  os_log_type_t v25 = sub_1DCB88488();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = v20;
    objc_super v27 = (uint8_t *)sub_1DCA0CAB4();
    v49[0] = (id)swift_slowAlloc();
    *(_DWORD *)objc_super v27 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&long long v50 = sub_1DC9F8920(v26, v22, (uint64_t *)v49);
    sub_1DCB88778();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DC873000, v24, v25, "Received file deletion request on server for file path: %s", v27, 0xCu);
    swift_arrayDestroy();
    sub_1DC8E7728();
    sub_1DC8E7728();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v29 = objc_msgSend(self, sel_defaultManager);
  v49[0] = 0;
  unsigned int v30 = objc_msgSend(v29, sel_removeItemAtPath_error_, v19, v49);

  if (v30)
  {
    id v31 = v49[0];
    sub_1DCB877D8();
    sub_1DC886854();
    v44();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v32 = v49[0];
    uint64_t v33 = (void *)sub_1DCB86898();

    swift_willThrow();
    id v34 = v33;
    id v35 = v33;
    uint64_t v36 = sub_1DCB86FC8();
    os_log_type_t v37 = sub_1DCB88468();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)sub_1DCA0CAB4();
      uint64_t v39 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 138412290;
      id v40 = v33;
      uint64_t v41 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v49[0] = v41;
      sub_1DCB88778();
      *uint64_t v39 = v41;

      _os_log_impl(&dword_1DC873000, v36, v37, "File deletion request failed on the server: %@", v38, 0xCu);
      sub_1DC87E988((uint64_t *)&unk_1EAAA5940);
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
    }
    else
    {
    }
    uint64_t v42 = sub_1DCB877D8();
    id v43 = v33;
    ((void (*)(uint64_t, void, void *))v44)(v42, 0, v33);

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DCA0AEC8()
{
  *(void *)(v1 + 192) = v0;
  sub_1DC886854();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DCA0AEEC()
{
  uint64_t v1 = (char *)v0[24];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F946E0]), sel_init);
  v0[25] = v2;
  id v3 = v2;
  sub_1DCA08A0C((uint64_t)v2);
  objc_msgSend(v3, sel_setDispatchQueue_, *(void *)&v1[OBJC_IVAR___SNFileServer_queue]);
  uint64_t v4 = (void *)sub_1DCB87908();
  objc_msgSend(v3, sel_deregisterRequestID_, v4);

  uint64_t v5 = (void *)sub_1DCB87908();
  v0[22] = sub_1DCA0B670;
  v0[23] = 0;
  uint64_t v6 = MEMORY[0x1E4F143A8];
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 1107296256;
  v0[20] = sub_1DCB296CC;
  v0[21] = &unk_1F37FAAA8;
  char v7 = _Block_copy(v0 + 18);
  sub_1DCA0CB18((uint64_t)v7, sel_registerRequestID_options_handler_);
  _Block_release(v7);

  uint64_t v8 = sub_1DCA0CACC();
  sub_1DCA0CA94(v8);

  uint64_t v9 = (void *)sub_1DCA0CACC();
  sub_1DCA0CA5C();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  *(void *)(v10 + 24) = v3;
  v0[22] = sub_1DCA0BD20;
  v0[23] = v10;
  v0[18] = v6;
  v0[19] = 1107296256;
  v0[20] = sub_1DCB296CC;
  v0[21] = &unk_1F37FB278;
  uint64_t v11 = _Block_copy(v0 + 18);
  uint64_t v12 = (void *)v0[23];
  id v13 = v3;
  uint64_t v14 = v1;
  uint64_t v15 = swift_release();
  sub_1DCA0CB18(v15, sel_registerRequestID_options_handler_);
  _Block_release(v11);

  uint64_t v16 = sub_1DCA0CACC();
  sub_1DCA0CA94(v16);

  id v17 = (void *)sub_1DCA0CACC();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  v0[22] = sub_1DCA0BD60;
  v0[23] = v18;
  v0[18] = v6;
  v0[19] = 1107296256;
  v0[20] = sub_1DCB296CC;
  v0[21] = &unk_1F37FACD8;
  long long v19 = _Block_copy(v0 + 18);
  uint64_t v20 = v14;
  swift_release();
  objc_msgSend(v13, sel_registerRequestID_options_handler_, v17, 0, v19);
  _Block_release(v19);

  v0[2] = v0;
  v0[3] = sub_1DCA0B278;
  uint64_t v21 = swift_continuation_init();
  v0[18] = v6;
  v0[19] = 0x40000000;
  v0[20] = sub_1DCB29604;
  v0[21] = &unk_1E6CA7600;
  v0[22] = v21;
  objc_msgSend(v13, sel_activateWithCompletion_, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1DCA0B278()
{
  sub_1DC8867A8();
  sub_1DC886774();
  *(void *)(v1 + 208) = *(void *)(v0 + 48);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DCA0B35C()
{
  sub_1DC886900();
  uint64_t v1 = *(void **)(v0[24] + OBJC_IVAR___SNFileServer_server);
  v0[10] = v0;
  v0[11] = sub_1DCA0B458;
  uint64_t v2 = swift_continuation_init();
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 0x40000000;
  v0[20] = sub_1DCB29604;
  v0[21] = &unk_1E6CA71F0;
  v0[22] = v2;
  objc_msgSend(v1, sel_activateWithCompletion_, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 10);
}

uint64_t sub_1DCA0B458()
{
  sub_1DC8867A8();
  sub_1DC886774();
  *(void *)(v1 + 216) = *(void *)(v0 + 112);
  sub_1DC886854();
  return MEMORY[0x1F4188298](v2, v3, v4);
}

uint64_t sub_1DCA0B53C()
{
  sub_1DC8867A8();

  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DCA0B59C()
{
  sub_1DC886900();
  swift_willThrow();

  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DCA0B604()
{
  sub_1DC886900();
  swift_willThrow();

  sub_1DC8BA978();
  return v1();
}

uint64_t sub_1DCA0B670(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = type metadata accessor for SNFileServer();
  return sub_1DCA08EEC(v4, a3);
}

void sub_1DCA0B6A4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
}

void sub_1DCA0B750(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1DCA0B854(const void *a1, void *a2)
{
  _OWORD v2[2] = a2;
  void v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  void *v4 = v2;
  v4[1] = sub_1DCA0B8FC;
  return sub_1DCA0AEC8();
}

uint64_t sub_1DCA0B8FC()
{
  sub_1DC88688C();
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  sub_1DC88678C();
  *uint64_t v5 = v4;
  uint64_t v6 = *(void **)(v3 + 16);
  uint64_t v7 = *v1;
  *uint64_t v5 = *v1;
  swift_task_dealloc();

  uint64_t v8 = *(void *)(v3 + 24);
  if (v2)
  {
    uint64_t v9 = (void *)sub_1DCB86888();

    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_1DCA0BA74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  void v8[3] = 0;
  v8[4] = a1;
  void v8[5] = a2;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  void v9[3] = 0;
  _OWORD v9[4] = &unk_1EAAA4920;
  void v9[5] = v8;
  sub_1DCA0BF4C((uint64_t)v6, (uint64_t)&unk_1EAAA4930, (uint64_t)v9);
  return swift_release();
}

id SNFileServer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SNFileServer.init()()
{
}

id SNFileServer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNFileServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileServer()
{
  return self;
}

uint64_t method lookup function for SNFileServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SNFileServer);
}

uint64_t sub_1DCA0BCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1DCA0BCDC()
{
  return swift_release();
}

uint64_t sub_1DCA0BCE4()
{
  sub_1DCA0CA5C();

  return swift_deallocObject();
}

void sub_1DCA0BD20(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1DCA0B6A4(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1DCA0BD28()
{
  return swift_deallocObject();
}

void sub_1DCA0BD60(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1DCA0B750(a1, a2, a3, a4, *(void *)(v4 + 16));
}

unint64_t sub_1DCA0BD68()
{
  unint64_t result = qword_1EAAA48F0;
  if (!qword_1EAAA48F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EAAA48F0);
  }
  return result;
}

uint64_t sub_1DCA0BDB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  void *v4 = v3;
  v4[1] = sub_1DC8D78C0;
  return v6();
}

uint64_t sub_1DCA0BE80(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1DC8D78C0;
  return v7();
}

uint64_t sub_1DCA0BF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DCB87E48();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v6) == 1)
  {
    sub_1DC9AEC6C(a1, &qword_1EAAA2180);
  }
  else
  {
    sub_1DCB87E38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DCB87DE8();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1DCA0C0BC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1DCA0C198;
  return v6(a1);
}

uint64_t sub_1DCA0C198()
{
  sub_1DC8867A8();
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1DCA0C260()
{
  return sub_1DCA0C43C(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1DCA0C278(void *a1)
{
  return sub_1DCA09CD8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1DCA0C280(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1DCB87908();
  objc_msgSend(a3, sel_setServiceType_, v4);
}

void sub_1DCA0C2D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1DCB87908();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setFilename_, v4);
}

uint64_t sub_1DCA0C33C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1DCA0C384()
{
  sub_1DC88688C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D6930;
  uint64_t v3 = sub_1DCA0CA40();
  return sub_1DCA09F94(v3, v4, v5, v6, v7);
}

uint64_t sub_1DCA0C424()
{
  return sub_1DCA0C43C(MEMORY[0x1E4F14388]);
}

uint64_t sub_1DCA0C43C(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  sub_1DCA0CA5C();

  return swift_deallocObject();
}

uint64_t sub_1DCA0C480()
{
  sub_1DC886900();
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_1DC8D78C0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EAAA4908 + dword_1EAAA4908);
  return v5(v2, v3);
}

uint64_t sub_1DCA0C52C()
{
  sub_1DC88688C();
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1DC8D78C0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EAAA4918 + dword_1EAAA4918);
  return v6(v2, v3, v4);
}

uint64_t sub_1DCA0C5EC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA0C62C()
{
  sub_1DC88688C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_1DC886800(v0);
  void *v1 = v2;
  v1[1] = sub_1DC8D78C0;
  uint64_t v3 = sub_1DCA0CA40();
  return v4(v3);
}

uint64_t sub_1DCA0C6D8()
{
  swift_release();
  sub_1DCA0CA5C();

  return swift_deallocObject();
}

uint64_t sub_1DCA0C70C()
{
  sub_1DC886900();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_1DC886800(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1DC8D6930;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAAA4938 + dword_1EAAA4938);
  return v7(v2, v3);
}

unint64_t sub_1DCA0C7B8()
{
  unint64_t result = qword_1EAA9D0F0;
  if (!qword_1EAA9D0F0)
  {
    sub_1DCB884C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9D0F0);
  }
  return result;
}

unint64_t sub_1DCA0C808()
{
  unint64_t result = qword_1EAA9D0E0;
  if (!qword_1EAA9D0E0)
  {
    sub_1DC8863A8((uint64_t *)&unk_1EAA9D0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAA9D0E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNFileServer.DomainError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA0C928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNFileServer.DomainError()
{
  return &type metadata for SNFileServer.DomainError;
}

unint64_t sub_1DCA0C964()
{
  unint64_t result = qword_1EAAA4948;
  if (!qword_1EAAA4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4948);
  }
  return result;
}

uint64_t sub_1DCA0C9D0()
{
  return swift_dynamicCast();
}

double sub_1DCA0C9F0()
{
  return sub_1DC9614B8(v0, (_OWORD *)(v1 - 176));
}

id sub_1DCA0CA0C(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_1DCA0CA40()
{
  return v0;
}

id sub_1DCA0CA94(uint64_t a1)
{
  return objc_msgSend(v2, (SEL)(v1 + 2897), a1);
}

uint64_t sub_1DCA0CAB4()
{
  return swift_slowAlloc();
}

uint64_t sub_1DCA0CACC()
{
  return sub_1DCB87908();
}

uint64_t sub_1DCA0CAE4()
{
  return swift_dynamicCast();
}

__n128 sub_1DCA0CB04(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return *(__n128 *)(v1 - 336);
}

id sub_1DCA0CB18(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3, 0, v4);
}

uint64_t sub_1DCA0CB38()
{
  return sub_1DCB88A38();
}

const char *static LogUtils.audioBufferProcessedSignpostName.getter()
{
  return "AudioBufferProcessed";
}

uint64_t sub_1DCA0CB64()
{
  uint64_t v0 = sub_1DCB86F68();
  sub_1DCA0E188(v0, qword_1EAAFF838);
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF838);
  return sub_1DCB86F58();
}

uint64_t sub_1DCA0CBD0()
{
  uint64_t v1 = sub_1DCB884C8();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = sub_1DCB875B8();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1DC9D2FF4();
  uint64_t v3 = sub_1DCB884D8();
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D970();
  sub_1DC9C573C();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v0, *MEMORY[0x1E4FBCC68], v3);
  sub_1DCB875A8();
  sub_1DCA0C7B8();
  sub_1DC87E988((uint64_t *)&unk_1EAA9D0D0);
  sub_1DCA0C808();
  sub_1DCB88928();
  uint64_t result = sub_1DCB88508();
  qword_1EAAFF940 = result;
  return result;
}

uint64_t LogUtils.AudioBufferProcessedSignpostPayload.audioStreamID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LogUtils.AudioBufferProcessedSignpostPayload.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t static LogUtils.AudioBufferProcessedSignpostPayload.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1DCB89018();
  }
}

uint64_t sub_1DCA0CE38(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7274536F69647561 && a2 == 0xED000044496D6165)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1DCA0CEE4()
{
  return 0x7274536F69647561;
}

uint64_t sub_1DCA0CF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA0CE38(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DCA0CF38(uint64_t a1)
{
  unint64_t v2 = sub_1DCA0D0A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA0CF74(uint64_t a1)
{
  unint64_t v2 = sub_1DCA0D0A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LogUtils.AudioBufferProcessedSignpostPayload.encode(to:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA4950);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  sub_1DC981E40();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA0D0A0();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_1DC88D674();
}

unint64_t sub_1DCA0D0A0()
{
  unint64_t result = qword_1EAAA4958;
  if (!qword_1EAAA4958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4958);
  }
  return result;
}

uint64_t LogUtils.AudioBufferProcessedSignpostPayload.hashValue.getter()
{
  return sub_1DCB891F8();
}

void LogUtils.AudioBufferProcessedSignpostPayload.init(from:)()
{
  sub_1DC88D6B0();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA4960);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC981E40();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA0D0A0();
  sub_1DCB89298();
  if (!v0)
  {
    uint64_t v6 = sub_1DCB88DA8();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1DC8E76BC();
    v10(v9);
    uint64_t *v4 = v6;
    v4[1] = v8;
  }
  sub_1DC8818D0((uint64_t)v2);
  sub_1DC88D674();
}

void sub_1DCA0D250()
{
}

void sub_1DCA0D268()
{
}

unint64_t sub_1DCA0D28C()
{
  unint64_t result = qword_1EAAA4968;
  if (!qword_1EAAA4968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4968);
  }
  return result;
}

ValueMetadata *type metadata accessor for LogUtils()
{
  return &type metadata for LogUtils;
}

ValueMetadata *type metadata accessor for LogUtils.AudioBufferProcessedSignpostPayload()
{
  return &type metadata for LogUtils.AudioBufferProcessedSignpostPayload;
}

unsigned char *storeEnumTagSinglePayload for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA0D398);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys()
{
  return &type metadata for LogUtils.AudioBufferProcessedSignpostPayload.CodingKeys;
}

unint64_t sub_1DCA0D3D4()
{
  unint64_t result = qword_1EAAA4970;
  if (!qword_1EAAA4970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4970);
  }
  return result;
}

unint64_t sub_1DCA0D424()
{
  unint64_t result = qword_1EAAA4978;
  if (!qword_1EAAA4978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4978);
  }
  return result;
}

unint64_t sub_1DCA0D474()
{
  unint64_t result = qword_1EAAA4980;
  if (!qword_1EAAA4980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4980);
  }
  return result;
}

void sub_1DCA0D4C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11)
{
  if (a5)
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a5;
    *(void *)(v16 + 24) = a6;
    id v17 = sub_1DC8BA1B0;
  }
  else
  {
    id v17 = sub_1DCA0D958;
  }
  if (a7)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a7;
    *(void *)(v18 + 24) = a8;
    uint64_t v20 = (void (*)(uint64_t, uint64_t *, uint64_t *))sub_1DCA0E224;
  }
  else
  {
    uint64_t v20 = (void (*)(uint64_t, uint64_t *, uint64_t *))sub_1DCA0D9D4;
  }
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  char v27 = a4;
  sub_1DC8BA198(a5);
  sub_1DC8BA198(a7);
  ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))v17)(&v28, a1, &v25);
  if (v21)
  {

    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v19 = v28;
    sub_1DC8BE8B8(a9, a10, a11);
    uint64_t v25 = a2;
    uint64_t v26 = a3;
    char v27 = a4;
    uint64_t v28 = v19;
    v20(a1, &v25, &v28);

    swift_release();
    swift_release();
  }
}

uint64_t sub_1DCA0D70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, void, void, void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = a3(a1, *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_1DCA0D750(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v6 = sub_1DCB86F38();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  sub_1DCB86F28();
  id v13 = sub_1DCB86F48();
  os_signpost_type_t v14 = sub_1DCB88538();
  uint64_t result = sub_1DCB886F8();
  if ((result & 1) == 0) {
    goto LABEL_10;
  }
  if ((a4 & 1) == 0)
  {
    if (a2)
    {
LABEL_9:
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      os_signpost_id_t v17 = sub_1DCB86F18();
      _os_signpost_emit_with_name_impl(&dword_1DC873000, v13, v14, v17, a2, "", v16, 2u);
      MEMORY[0x1E01A99C0](v16, -1, -1);
LABEL_10:

      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
      sub_1DCB86FA8();
      swift_allocObject();
      uint64_t v18 = sub_1DCB86F98();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      return v18;
    }
    __break(1u);
  }
  if ((unint64_t)a2 >> 32)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (a2 >> 11 != 27)
  {
    if (a2 >> 16 <= 0x10)
    {
      a2 = &v20;
      goto LABEL_9;
    }
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1DCA0D958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1DCA0D750(a1, *(const char **)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
  *a3 = result;
  return result;
}

uint64_t sub_1DCA0D994(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, void, void, void, void))
{
  return a4(a1, *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *a3);
}

uint64_t sub_1DCA0D9D4(uint64_t a1, uint64_t a2)
{
  sub_1DCB86F78();
  sub_1DC89D4E0();
  uint64_t v23 = v5;
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DCB86F38();
  sub_1DC89D4E0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1DC9D2FF4();
  uint64_t v12 = *(const char **)a2;
  char v13 = *(unsigned char *)(a2 + 16);
  os_signpost_type_t v14 = sub_1DCB86F48();
  sub_1DCB86F88();
  os_signpost_type_t v15 = sub_1DCB88528();
  uint64_t result = sub_1DCB886F8();
  if ((result & 1) == 0)
  {
LABEL_13:

    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v2, v8);
  }
  uint64_t v22 = v8;
  if ((v13 & 1) == 0)
  {
    if (v12)
    {
LABEL_9:
      swift_retain();
      sub_1DCB86FB8();
      swift_release();
      uint64_t v18 = v23;
      uint64_t v17 = v24;
      if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v7, v24) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v19 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
        uint64_t v19 = "";
      }
      char v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v20 = 0;
      os_signpost_id_t v21 = sub_1DCB86F18();
      _os_signpost_emit_with_name_impl(&dword_1DC873000, v14, v15, v21, v12, v19, v20, 2u);
      MEMORY[0x1E01A99C0](v20, -1, -1);
      uint64_t v8 = v22;
      goto LABEL_13;
    }
    __break(1u);
  }
  if ((unint64_t)v12 >> 32)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v12 >> 11 != 27)
  {
    if (v12 >> 16 <= 0x10)
    {
      uint64_t v12 = &v25;
      goto LABEL_9;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_1DCA0DC14()
{
  sub_1DC88D6B0();
  uint64_t v19 = v1;
  int v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = sub_1DCB86F68();
  sub_1DC89D4E0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  sub_1DC89D970();
  uint64_t v14 = qword_1EAA9CB60;
  id v15 = v5;
  id v16 = v3;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1DC89F57C(v10, (uint64_t)qword_1EAAFF838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v0, v17, v10);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v9;
  *(void *)(v18 + 24) = v7;
  swift_bridgeObjectRetain();
  sub_1DCA0D4C0(v0, (uint64_t)"AudioBufferProcessed", 20, 2, (uint64_t)sub_1DC8BA17C, v18, 0, 0, v15, v16, v19);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v10);

  swift_release();
  sub_1DC88D674();
}

#error "1DCA0DDD0: call analysis failed (funcsize=12)"

uint64_t sub_1DCA0DDE8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1DCA0DE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1DC88D6B0();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  char v26 = v25;
  uint64_t v28 = v27;
  uint64_t v52 = sub_1DCB86F38();
  sub_1DC89D4E0();
  uint64_t v30 = v29;
  uint64_t v32 = MEMORY[0x1F4188790](v31);
  id v34 = (char *)&v45 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v45 - v35;
  unint64_t v37 = v24[1];
  uint64_t v51 = *v24;
  swift_bridgeObjectRetain_n();
  sub_1DCB86F28();
  uint64_t v38 = sub_1DCB86F48();
  int v39 = sub_1DCB88538();
  if ((sub_1DCB886F8() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    uint64_t v40 = v52;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v34, v36, v52);
LABEL_11:
    sub_1DCB86FA8();
    swift_allocObject();
    sub_1DCB86F98();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v40);
    sub_1DC88D674();
    return;
  }
  os_log_t v49 = v38;
  uint64_t v50 = v20;
  int v48 = v39;
  if (v26)
  {
    if ((unint64_t)v28 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v28 >> 11 == 27)
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
      if (v28 >> 16 <= 0x10)
      {
        uint64_t v46 = (const char *)&a10;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  if (v28)
  {
    uint64_t v46 = v28;
LABEL_10:
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v47(v34, v36, v52);
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v54 = v42;
    *(_DWORD *)uint64_t v41 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1DC9F8920(v51, v37, &v54);
    sub_1DCB88778();
    uint64_t v40 = v52;
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v43 = sub_1DCB86F18();
    os_log_t v44 = v49;
    _os_signpost_emit_with_name_impl(&dword_1DC873000, v49, (os_signpost_type_t)v48, v43, v46, "{\n  \"audioStreamID\": \"%s\"\n}", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01A99C0](v42, -1, -1);
    MEMORY[0x1E01A99C0](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v40);
    v47(v34, v36, v40);
    goto LABEL_11;
  }
LABEL_15:
  swift_bridgeObjectRelease_n();
  __break(1u);
}

uint64_t sub_1DCA0E12C()
{
  swift_retain();

  return sub_1DCA148A0();
}

uint64_t *sub_1DCA0E188(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1DCA0E1EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA0E224(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, void, void, void, void))(v3 + 16))(a1, *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *a3);
}

uint64_t sub_1DCA0E264(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, void *a6)
{
  sub_1DC87E988(&qword_1EAAA4988);
  swift_allocObject();
  uint64_t v12 = sub_1DCB872B8();
  type metadata accessor for SNAudioRecordingQueue();
  swift_allocObject();
  swift_retain_n();
  id v13 = a1;
  swift_retain();
  sub_1DCA9A988((uint64_t)v13, a3, a4, a5, (uint64_t)a2, (uint64_t)a6, (uint64_t)sub_1DCA0E460, v12, (uint64_t)sub_1DCA0E4FC, v12);
  sub_1DCA0E50C();
  swift_retain_n();
  sub_1DCB873C8();
  swift_release();
  return swift_release_n();
}

void sub_1DCA0E408(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  sub_1DCB87298();
}

void sub_1DCA0E460(void *a1, void *a2)
{
}

void sub_1DCA0E468()
{
  type metadata accessor for SNError();
  id v0 = sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 2, 0, 0xD000000000000016, 0x80000001DCB96140);
  sub_1DCB87288();
}

void sub_1DCA0E4FC()
{
}

unint64_t sub_1DCA0E50C()
{
  unint64_t result = qword_1EAAA4990;
  if (!qword_1EAAA4990)
  {
    sub_1DC8863A8(&qword_1EAAA4988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4990);
  }
  return result;
}

unint64_t sub_1DCA0E564()
{
  unint64_t result = qword_1EAAA4998;
  if (!qword_1EAAA4998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4998);
  }
  return result;
}

uint64_t sub_1DCA0E5B0()
{
  return sub_1DCA0EEA8(&qword_1EAAA49A0);
}

unint64_t sub_1DCA0E5E4()
{
  unint64_t result = qword_1EAAA49A8;
  if (!qword_1EAAA49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA49A8);
  }
  return result;
}

uint64_t sub_1DCA0E630()
{
  return sub_1DCA0ED5C(&qword_1EAAA49B0, (void (*)(void))sub_1DCA0E678);
}

unint64_t sub_1DCA0E678()
{
  unint64_t result = qword_1EAAA49C0;
  if (!qword_1EAAA49C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA49C0);
  }
  return result;
}

uint64_t sub_1DCA0E6C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v10 = a4();
  uint64_t result = swift_release();
  uint64_t v21 = v10;
  uint64_t v22 = a6;
  if (!a2)
  {
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
LABEL_14:
    *a1 = v10;
    a1[1] = a6;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = swift_retain();
    id v13 = (void *)MEMORY[0x1E01A8D20](v12);
    uint64_t v14 = *(void **)(v10 + 16);
    if (v14)
    {
      uint64_t v15 = 0;
      while (1)
      {
        id v19 = v14;
        sub_1DCAB9318(&v19, (uint64_t)&v21, &v20);
        uint64_t v16 = v20;
        swift_release();
        if (!v16) {
          break;
        }
        *(void *)(a2 + 8 * v15) = v16;
        if (a3 - 1 == v15) {
          goto LABEL_14;
        }
        uint64_t v17 = swift_retain();
        id v13 = (void *)MEMORY[0x1E01A8D20](v17);
        uint64_t v14 = *(void **)(v10 + 16);
        ++v15;
        if (!v14) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      uint64_t v15 = 0;
LABEL_12:
      sub_1DC87E988(&qword_1EAA9E2E8);
      sub_1DC88CF34((unint64_t *)&qword_1EAA9E2F0, &qword_1EAA9E2E8);
      uint64_t v18 = (void *)swift_allocError();
      swift_willThrow();
      swift_release();
    }
    uint64_t v10 = v21;
    sub_1DCABB9A4();
    a6 = v22;
    a3 = v15;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA0E8A4(uint64_t result, uint64_t a2, unsigned int *a3)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*a3 < a2) {
LABEL_5:
  }
    __break(1u);
  return result;
}

BOOL sub_1DCA0E8C0(_DWORD *a1)
{
  return *a1 == 0;
}

uint64_t sub_1DCA0E8D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result >= a2)
  {
    BOOL v4 = __OFSUB__(result, a3);
    BOOL v3 = result - a3 < 0;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v3 = 0;
  }
  if (v3 == v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA0E8E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA0E8F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCA0E90C()
{
  return 0;
}

uint64_t sub_1DCA0E918(unsigned int *a1)
{
  return *a1;
}

uint64_t sub_1DCA0E920@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCA0E918(*v1);
  *a1 = result;
  return result;
}

void *sub_1DCA0E94C(void *result, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(unsigned int *)*v2)
  {
    uint64_t v4 = *v2 + 16 * v3;
    uint64_t v5 = *(void *)(v4 + 16);
    *uint64_t result = *(void *)(v4 + 8);
    result[1] = v5;
    return nullsub_1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA0E9A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCA0E8A4(*a1, a1[1], *v2);
  *a2 = result;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

uint64_t sub_1DCA0E9DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCA0E90C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_1DCA0EA08()
{
  return sub_1DCA0E8C0(*v0);
}

uint64_t sub_1DCA0EA10()
{
  return sub_1DCA0E918(*v0);
}

void sub_1DCA0EA18(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

unint64_t sub_1DCA0EA28(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  BOOL v3 = __OFADD__(a1, a2);
  unint64_t result = a1 + a2;
  if (v3)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result > *a3) {
LABEL_5:
  }
    __break(1u);
  return result;
}

unint64_t sub_1DCA0EA4C(unint64_t result, uint64_t a2, unint64_t a3, unsigned int *a4)
{
  unint64_t v4 = *a4;
  if (v4 < result || v4 < a3)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = a3 - result;
  if (a2 < 1)
  {
    if (v6 <= 0)
    {
      BOOL v9 = __OFSUB__(v6, a2);
      BOOL v7 = v6 == a2;
      BOOL v8 = v6 - a2 < 0;
    }
    else
    {
      BOOL v9 = 0;
      BOOL v7 = 1;
      BOOL v8 = 0;
    }
    if (!(v8 ^ v9 | v7)) {
      return 0;
    }
  }
  else if ((v6 & 0x8000000000000000) == 0 && v6 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v9 = __OFADD__(result, a2);
  result += a2;
  if (v9) {
    goto LABEL_18;
  }
  if (result > v4) {
LABEL_19:
  }
    __break(1u);
  return result;
}

unint64_t sub_1DCA0EAB0(unint64_t result, unint64_t a2, unsigned int *a3)
{
  unint64_t v3 = *a3;
  if (v3 >= result && v3 >= a2) {
    return a2 - result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCA0EACC(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCA0E8D0(*a1, *a2, a2[1]);
}

uint64_t sub_1DCA0EAE0(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCA0E8E4(*a1, *a2, a2[1]);
}

uint64_t sub_1DCA0EAF4(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCA0E8F8(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1DCA0EB0C@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1DCA0EB3C(*a1, *v2);
  *a2 = result;
  return result;
}

unint64_t sub_1DCA0EB3C(unint64_t result, unsigned int *a2)
{
  if (*a2 <= result)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (__OFADD__(result++, 1)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t *sub_1DCA0EB5C(uint64_t *result)
{
  uint64_t v2 = *result;
  if (*result >= (unint64_t)**v1)
  {
    __break(1u);
  }
  else
  {
    BOOL v3 = __OFADD__(v2, 1);
    uint64_t v4 = v2 + 1;
    if (!v3)
    {
      *unint64_t result = v4;
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_1DCA0EB88(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_1DCA0EB94()
{
  return sub_1DCA0EB9C(*v0);
}

uint64_t sub_1DCA0EBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCA0E6C4(a1, a2, a3, *v3);
}

unint64_t sub_1DCA0EBA8@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1DCA0EBD8(*a1, *v2);
  *a2 = result;
  return result;
}

unint64_t sub_1DCA0EBD8(uint64_t a1, unsigned int *a2)
{
  BOOL v2 = __OFSUB__(a1, 1);
  unint64_t result = a1 - 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result >= *a2) {
LABEL_5:
  }
    __break(1u);
  return result;
}

unint64_t *sub_1DCA0EBF8(unint64_t *result)
{
  unint64_t v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else if (v2 < **v1)
  {
    *unint64_t result = v2;
    return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DCA0EC24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_1DCA0EA28(*a1, a2, *v3);
  *a3 = result;
  return result;
}

unint64_t sub_1DCA0EC54@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = sub_1DCA0EA4C(*a1, a2, *a3, *v4);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v7 & 1;
  return result;
}

unint64_t sub_1DCA0EC90(unint64_t *a1, unint64_t *a2)
{
  return sub_1DCA0EAB0(*a1, *a2, *v2);
}

uint64_t sub_1DCA0ECA0()
{
  return sub_1DC88CF34(&qword_1EAAA49C8, &qword_1EAAA49D0);
}

uint64_t sub_1DCA0ECE0()
{
  return sub_1DCA0EEA8(&qword_1EAAA49D8);
}

uint64_t sub_1DCA0ED14()
{
  return sub_1DCA0ED5C(&qword_1EAAA49E0, (void (*)(void))sub_1DCA0EDCC);
}

uint64_t sub_1DCA0ED5C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA49B8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCA0EDCC()
{
  unint64_t result = qword_1EAAA49E8;
  if (!qword_1EAAA49E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA49E8);
  }
  return result;
}

unint64_t sub_1DCA0EE1C()
{
  unint64_t result = qword_1EAAA49F0;
  if (!qword_1EAAA49F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA49F0);
  }
  return result;
}

uint64_t sub_1DCA0EE68()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_1DCA0EE74()
{
  return sub_1DCA0EEA8(&qword_1EAAA49F8);
}

uint64_t sub_1DCA0EEA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DC8863A8(&qword_1EAAA22B0);
    sub_1DCA0E5E4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCA0EF18()
{
  return sub_1DC88CF34(&qword_1EAAA4A00, &qword_1EAAA49B8);
}

ValueMetadata *type metadata accessor for UnsafeAudioBufferListPointer()
{
  return &type metadata for UnsafeAudioBufferListPointer;
}

uint64_t sub_1DCA0EF70()
{
  uint64_t v1 = MEMORY[0x1E4FBC860] + 32;
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 24) = v1;
  *(_OWORD *)(v0 + 32) = xmmword_1DCBCB680;
  type metadata accessor for SafeLock();
  uint64_t v2 = swift_allocObject();
  BOOL v3 = (_DWORD *)swift_slowAlloc();
  *BOOL v3 = 0;
  *(void *)(v2 + 16) = v3;
  *(void *)(v0 + 48) = v2;
  return v0;
}

uint64_t sub_1DCA0EFDC(void *a1, char a2)
{
  uint64_t v5 = *(os_unfair_lock_s **)(v2[6] + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  sub_1DC9D5CA0(a1, a2);
  uint64_t result = sub_1DCA0FD74(&unk_1EAAA4A40, sub_1DCA10268, &unk_1EAAA69B0, sub_1DC896E0C);
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5] >> 1;
  uint64_t v9 = v8 - v7;
  if (__OFSUB__(v8, v7))
  {
    __break(1u);
  }
  else
  {
    sub_1DCA0FDFC(v8 - v7, &unk_1EAAA4A40, sub_1DCA10268, &unk_1EAAA69B0, sub_1DC896E0C);
    sub_1DCA0FFC0(v9 + 1);
    uint64_t v10 = v2[3] + 16 * v2[4] + 16 * v9;
    *(void *)uint64_t v10 = a1;
    *(unsigned char *)(v10 + 8) = a2;
    swift_endAccess();
    os_unfair_lock_unlock(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCA0F124(void *a1, char a2)
{
  uint64_t v5 = *(os_unfair_lock_s **)(v2[6] + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  sub_1DC9D5CA0(a1, a2);
  uint64_t result = sub_1DCA0FD74(&unk_1EAAA4A58, sub_1DCA10268, &unk_1EAAA69F0, sub_1DC896E0C);
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5] >> 1;
  uint64_t v9 = v8 - v7;
  if (__OFSUB__(v8, v7))
  {
    __break(1u);
  }
  else
  {
    sub_1DCA0FDFC(v8 - v7, &unk_1EAAA4A58, sub_1DCA10268, &unk_1EAAA69F0, sub_1DC896E0C);
    sub_1DCA0FFC0(v9 + 1);
    uint64_t v10 = v2[3] + 16 * v2[4] + 16 * v9;
    *(void *)uint64_t v10 = a1;
    *(unsigned char *)(v10 + 8) = a2;
    swift_endAccess();
    os_unfair_lock_unlock(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCA0F26C(void *a1, char a2)
{
  return sub_1DCA0EFDC(a1, a2);
}

uint64_t sub_1DCA0F290(void *a1, char a2)
{
  return sub_1DCA0F124(a1, a2);
}

void *sub_1DCA0F2B4(uint64_t a1, uint64_t a2)
{
  return sub_1DCA0F2DC(a1, a2, &qword_1EAAA4A48, &qword_1EAAA4A50);
}

void *sub_1DCA0F2DC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v4[2] = a1;
  _OWORD v4[4] = a2;
  swift_retain_n();
  swift_retain_n();
  sub_1DC87E988(a3);
  sub_1DC88CF34(a4, a3);
  uint64_t v7 = sub_1DCB87558();
  swift_release();
  swift_release_n();
  swift_release();
  uint64_t v4[3] = v7;
  return v4;
}

void *sub_1DCA0F3C0(uint64_t a1)
{
  sub_1DC87E988(&qword_1EAAA4A60);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA4A68);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC8C1FC4();
  sub_1DC87E988(&qword_1EAAA4A70);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v6 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  MEMORY[0x1F4188790](v6 - 8);
  sub_1DC89D970();
  type metadata accessor for SoundRecognition.Session();
  sub_1DC88819C();
  MEMORY[0x1F4188790](v7);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  sub_1DC87E988(&qword_1EAAA3B20);
  swift_allocObject();
  uint64_t v19 = sub_1DCA0EF70();
  uint64_t v11 = (void *)j_nullsub_1(a1);
  uint64_t v12 = type metadata accessor for SNUltronUtils.UltronReportingPlan(0);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v1, 1, 1, v12);
  sub_1DCA272A8();
  sub_1DCA10790(v1);
  if (v18)
  {
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1DC87E988(&qword_1EAAA0CE8);
    sub_1DC88CF34(&qword_1EAAA0CF0, &qword_1EAAA0CE8);
    sub_1DCB874A8();
    swift_release();
    sub_1DC87E988(&qword_1EAAA69B0);
    sub_1DCB87138();
    sub_1DC88D5C8();
    v13();
    sub_1DC87E988(&qword_1EAAA4A20);
    sub_1DC88CF34(&qword_1EAAA4A78, &qword_1EAAA4A68);
    sub_1DC88CF34(&qword_1EAAA4A30, &qword_1EAAA4A20);
    sub_1DCB87438();
    sub_1DC88D5C8();
    v14();
    sub_1DC88CF34(&qword_1EAAA4A80, &qword_1EAAA4A70);
    sub_1DCB87468();
    sub_1DC88D5C8();
    v15();
    sub_1DC87E988(&qword_1EAAA4A88);
    sub_1DC88CF34(&qword_1EAAA4A90, &qword_1EAAA4A88);
    uint64_t v16 = sub_1DCB873A8();
    swift_release();
    sub_1DC87E988(&qword_1EAA9E7A8);
    swift_allocObject();
    uint64_t v11 = sub_1DCA0F2DC(v19, v16, &qword_1EAAA3B28, qword_1EAAA3B30);
    sub_1DCA107F0(v10, (void (*)(void))type metadata accessor for SoundRecognition.Session);
  }
  return v11;
}

void *sub_1DCA0F894(const void *a1)
{
  sub_1DC87E988(&qword_1EAAA4A08);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA4A10);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA4A18);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC8C1FC4();
  uint64_t v5 = type metadata accessor for AccessibilitySoundRecognition.Session(0);
  sub_1DC88819C();
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  sub_1DC87E988(&qword_1EAAA3B20);
  swift_allocObject();
  uint64_t v17 = sub_1DCA0EF70();
  memcpy(v18, a1, sizeof(v18));
  uint64_t v10 = v18;
  sub_1DCA46178(&v20[2]);
  v20[0] = 0x6E776F6E6B6E753CLL;
  v20[1] = 0xE90000000000003ELL;
  memcpy(v19, v20, sizeof(v19));
  sub_1DCA45930();
  if (v16)
  {
    swift_release();
    sub_1DC957D00((uint64_t)v20);
  }
  else
  {
    sub_1DC957D00((uint64_t)v20);
    v20[28] = *(void *)(v9 + *(int *)(v5 + 20));
    swift_retain();
    sub_1DC87E988(&qword_1EAAA11A8);
    sub_1DC88CF34(&qword_1EAAA11B0, &qword_1EAAA11A8);
    sub_1DCB874A8();
    swift_release();
    sub_1DC87E988(&qword_1EAAA69B0);
    sub_1DCB87138();
    sub_1DC88D5C8();
    v11();
    sub_1DC87E988(&qword_1EAAA4A20);
    sub_1DC88CF34(&qword_1EAAA4A28, &qword_1EAAA4A10);
    sub_1DC88CF34(&qword_1EAAA4A30, &qword_1EAAA4A20);
    sub_1DCB87438();
    sub_1DC88D5C8();
    v12();
    sub_1DC88CF34(&qword_1EAAA4A38, &qword_1EAAA4A18);
    uint64_t v13 = sub_1DCB873A8();
    sub_1DC88D5C8();
    v14();
    sub_1DC87E988(&qword_1EAA9E7A8);
    swift_allocObject();
    uint64_t v10 = sub_1DCA0F2DC(v17, v13, &qword_1EAAA3B28, qword_1EAAA3B30);
    sub_1DCA107F0(v9, (void (*)(void))type metadata accessor for AccessibilitySoundRecognition.Session);
  }
  return v10;
}

unsigned char *sub_1DCA0FD00@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_1DCA0FD0C@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1DCA0FD1C(id *a1)
{
  id v1 = *a1;
  sub_1DC87E988(&qword_1EAAA69B0);
  return sub_1DCB87328();
}

#error "1DCA0FDDC: call analysis failed (funcsize=34)"

#error "1DCA0FEE4: call analysis failed (funcsize=61)"

uint64_t sub_1DCA0FEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_1DC89D76C();
  a21 = v23;
  a22 = v24;
  char v26 = v25;
  uint64_t v45 = v27;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v32 + 1;
  uint64_t v35 = *v22;
  uint64_t v36 = v22[1];
  uint64_t v38 = v22[2];
  unint64_t v37 = v22[3];
  swift_unknownObjectRetain();
  uint64_t v39 = sub_1DCA10078(v33, v34, v35, v36, v38, v37, v31);
  uint64_t v40 = swift_unknownObjectRelease();
  a10 = v39;
  uint64_t v41 = (void (*)(uint64_t, uint64_t))v29(v40);
  sub_1DCA10284(&a10, v33, 0, v41, v42, v45, (uint64_t)v26, v26);
  swift_release();
  sub_1DC89D71C();
  return swift_release();
}

uint64_t sub_1DCA0FFC0(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = v3 >> 1;
  BOOL v5 = __OFSUB__(v3 >> 1, v2);
  uint64_t v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7) {
    return result;
  }
  sub_1DCB89088();
  swift_unknownObjectRetain();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = *(void *)(result + 16);
  BOOL v5 = __OFADD__(v8, v7);
  uint64_t v9 = v8 + v7;
  if (v5) {
    goto LABEL_13;
  }
  *(void *)(result + 16) = v9;
  uint64_t result = swift_release();
  uint64_t v10 = v4 + v7;
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v10 < 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(void *)(v1 + 24) = v3 & 1 | (2 * v10);
  return result;
}

uint64_t sub_1DCA10078(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t *a7)
{
  uint64_t v10 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v10 >= v9) {
      goto LABEL_21;
    }
LABEL_18:
    if (v10 + 0x4000000000000000 >= 0)
    {
      v10 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = a7;
  uint64_t v9 = a2;
  uint64_t v7 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_32;
  }
  sub_1DCB89088();
  swift_unknownObjectRetain();
  uint64_t v14 = swift_dynamicCastClass();
  if (!v14)
  {
    swift_unknownObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  uint64_t v15 = *(void *)(v14 + 16);
  if (a4 + 16 * a5 + 16 * v10 == v14 + 16 * v15 + 32)
  {
    unint64_t v17 = *(void *)(v14 + 24);
    uint64_t result = swift_release();
    uint64_t v18 = (v17 >> 1) - v15;
    uint64_t v16 = v10 + v18;
    if (__OFADD__(v10, v18))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    uint64_t v16 = v10;
  }
  swift_unknownObjectRetain();
  uint64_t v19 = swift_dynamicCastClass();
  if (v16 < v9)
  {
    if (!v19) {
      swift_unknownObjectRelease();
    }
    sub_1DCA10860();
    if (v21)
    {
      unint64_t v23 = *(void *)(v20 + 24);
      uint64_t result = swift_release();
      uint64_t v24 = (v23 >> 1) - a3;
      BOOL v25 = __OFADD__(v10, v24);
      v10 += v24;
      if (v25)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v19) {
    swift_unknownObjectRelease();
  }
  sub_1DCA10860();
  if (v21)
  {
    unint64_t v26 = *(void *)(v22 + 24);
    uint64_t result = swift_release();
    uint64_t v27 = (v26 >> 1) - a3;
    BOOL v25 = __OFADD__(v10, v27);
    v10 += v27;
    if (!v25) {
      goto LABEL_21;
    }
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v10 <= v9) {
    uint64_t v28 = v9;
  }
  else {
    uint64_t v28 = v10;
  }
  if (v28 <= v7) {
    uint64_t v29 = v7;
  }
  else {
    uint64_t v29 = v28;
  }
  if (!v29) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1DC87E988(v8);
  uint64_t v30 = (void *)swift_allocObject();
  size_t v31 = j__malloc_size(v30);
  void v30[2] = v7;
  void v30[3] = 2 * ((uint64_t)(v31 - 32) / 16);
  return (uint64_t)v30;
}

uint64_t (*sub_1DCA10268())(void)
{
  return nullsub_1;
}

void sub_1DCA10284(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t *a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = v8[2];
  unint64_t v10 = (unint64_t)v8[3] >> 1;
  unint64_t v11 = v10 - v9;
  if (__OFSUB__(v10, v9))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v13 = *a1;
  uint64_t v14 = *(void *)(*a1 + 16);
  BOOL v15 = __OFSUB__(v14, a2);
  uint64_t v16 = v14 - a2;
  if (v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v17 = v16 - a3;
  if (__OFSUB__(v16, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v18 = v11 - a2;
  if (__OFSUB__(v11, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  BOOL v15 = __OFSUB__(v18, v17);
  uint64_t v19 = v18 - v17;
  if (v15)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v37 = v19;
  uint64_t v21 = v13 + 32;
  uint64_t v22 = v13 + 32 + 16 * a2;
  uint64_t v35 = v17;
  uint64_t v36 = v22 + 16 * a3;
  sub_1DCA10548();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v34 = v8[2];
    uint64_t v26 = v8[1] + 16 * v34;
    sub_1DC87E988(a6);
    swift_arrayDestroy();
    a8(v26, a2, v21);
    swift_arrayDestroy();
    a4(v22, a3);
    a8(v26 + 16 * a2 + 16 * v37, v35, v36);
    uint64_t v27 = v34;
    swift_arrayDestroy();
    *(void *)(v25 + 16) = 0;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    *uint64_t v8 = sub_1DCA10500(v13, v27);
    v8[1] = v31;
    _OWORD v8[2] = v32;
    void v8[3] = v33;
    return;
  }
  uint64_t v27 = v8[2];
  uint64_t v28 = v27 + a2;
  if (__OFADD__(v27, a2)) {
    goto LABEL_21;
  }
  if (v28 < v27)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v28, v27))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1DC87E988(a6);
  swift_arrayInitWithCopy();
  a4(v21 + 16 * a2, a3);
  int64_t v29 = v28 + v37;
  if (__OFADD__(v28, v37))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v30 = (unint64_t)v8[3] >> 1;
  if (v30 < v29)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!__OFSUB__(v30, v29))
  {
    swift_arrayInitWithCopy();
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1DCA104EC(uint64_t a1)
{
  return sub_1DCA0F26C(*(void **)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1DCA10500(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)(result + 16);
  BOOL v3 = __OFADD__(a2, v2);
  uint64_t v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0) {
LABEL_9:
  }
    __break(1u);
  return result;
}

void sub_1DCA10548()
{
  sub_1DC89D76C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    goto LABEL_16;
  }
  uint64_t v10 = v0[2];
  unint64_t v9 = v0[3];
  uint64_t v11 = (v9 >> 1) - v10;
  if (__OFSUB__(v9 >> 1, v10))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = v0[1];
  if ((v9 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1DCB89088();
  swift_unknownObjectRetain();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = *(void *)(v13 + 16);
  if (v12 + 16 * v10 + 16 * v11 != v13 + 16 * v14 + 32)
  {
    swift_release();
LABEL_8:
    uint64_t v15 = v11;
    goto LABEL_10;
  }
  unint64_t v16 = *(void *)(v13 + 24);
  swift_release();
  uint64_t v17 = (v16 >> 1) - v14;
  BOOL v18 = __OFADD__(v11, v17);
  uint64_t v15 = v11 + v17;
  if (!v18)
  {
LABEL_10:
    if (v15 < v6) {
      goto LABEL_16;
    }
    sub_1DCB89088();
    swift_unknownObjectRetain();
    uint64_t v19 = swift_dynamicCastClass();
    if (!v19)
    {
      swift_unknownObjectRelease();
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    uint64_t v20 = (v12 + 16 * v10 - v19 - 32) / 16;
    uint64_t isUniquelyReferenced_nonNull = v11 + v20;
    if (!__OFADD__(v11, v20))
    {
      uint64_t v8 = *(void *)(v19 + 16);
      if (isUniquelyReferenced_nonNull >= v8)
      {
LABEL_16:
        sub_1DC89D71C();
        return;
      }
LABEL_19:
      sub_1DCA106B4(isUniquelyReferenced_nonNull, v8, 0, v4, v2);
      goto LABEL_16;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_1DCA106B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = *v5;
  uint64_t v11 = v10 + 32 + 16 * result;
  sub_1DC87E988(a4);
  uint64_t result = swift_arrayDestroy();
  BOOL v12 = __OFSUB__(a3, v6);
  uint64_t v13 = a3 - v6;
  if (v12)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v13) {
    goto LABEL_7;
  }
  uint64_t v14 = *(void *)(v10 + 16);
  if (__OFSUB__(v14, a2)) {
    goto LABEL_11;
  }
  uint64_t result = a5(v10 + 32 + 16 * a2, v14 - a2, v11 + 16 * a3);
  uint64_t v15 = *(void *)(v10 + 16);
  BOOL v12 = __OFADD__(v15, v13);
  uint64_t v16 = v15 + v13;
  if (v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v10 + 16) = v16;
LABEL_7:
  if (a3 > 0) {
LABEL_13:
  }
    __break(1u);
  return result;
}

uint64_t sub_1DCA10774(uint64_t a1)
{
  return sub_1DCA0F290(*(void **)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1DCA10788(uint64_t a1)
{
  return sub_1DCA10774(a1);
}

uint64_t sub_1DCA10790(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988((uint64_t *)&unk_1EAAA0D00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCA107F0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_1DC88819C();
  sub_1DC88D5C8();
  v3();
  return a1;
}

unsigned char *sub_1DCA10844@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1DCA0FD00(a1, a2);
}

ValueMetadata *type metadata accessor for SNSystemConfiguration()
{
  return &type metadata for SNSystemConfiguration;
}

uint64_t sub_1DCA10884()
{
  return sub_1DCB891D8();
}

BOOL sub_1DCA108C0(int a1, int a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

uint64_t sub_1DCA108D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x436C656E6E616863 && a2 == 0xEC000000746E756FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA109E4(char a1)
{
  if (a1) {
    return 0x436C656E6E616863;
  }
  else {
    return 0x6152656C706D6173;
  }
}

uint64_t sub_1DCA10A28(void *a1)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA4AB0);
  sub_1DC89D4E0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA10F04();
  sub_1DCB892B8();
  char v12 = 0;
  sub_1DCB88EE8();
  if (!v1)
  {
    char v11 = 1;
    sub_1DCB88F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_1DCA10B68()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA10BD0(void *a1)
{
  sub_1DC87E988(&qword_1EAAA4AA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = (uint64_t)sub_1DC881A8C(a1, a1[3]);
  sub_1DCA10F04();
  sub_1DCB89298();
  if (!v1)
  {
    sub_1DCB88DC8();
    uint64_t v4 = sub_1DCB88E38();
    uint64_t v5 = sub_1DC9AF7F4();
    v6(v5);
  }
  sub_1DC8818D0((uint64_t)a1);
  return v4;
}

uint64_t sub_1DCA10D30()
{
  return sub_1DCA109E4(*v0);
}

uint64_t sub_1DCA10D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA108D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA10D60(uint64_t a1)
{
  unint64_t v2 = sub_1DCA10F04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA10D9C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA10F04();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA10DD8()
{
  return sub_1DCA10B68();
}

uint64_t sub_1DCA10DE4()
{
  return sub_1DCA10884();
}

uint64_t sub_1DCA10DF0()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA10E50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DCA10BD0(a1);
  if (!v2)
  {
    *(void *)a2 = v5;
    *(_DWORD *)(a2 + 8) = result;
  }
  return result;
}

uint64_t sub_1DCA10E80(void *a1)
{
  return sub_1DCA10A28(a1);
}

BOOL sub_1DCA10EA0(uint64_t a1, uint64_t a2)
{
  return sub_1DCA108C0(*(_DWORD *)(a1 + 8), *(_DWORD *)(a2 + 8), *(double *)a1, *(double *)a2);
}

unint64_t sub_1DCA10EB8()
{
  unint64_t result = qword_1EAAA4A98;
  if (!qword_1EAAA4A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4A98);
  }
  return result;
}

unint64_t sub_1DCA10F04()
{
  unint64_t result = qword_1EAAA4AA8;
  if (!qword_1EAAA4AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4AA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SNSystemConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA1101CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SNSystemConfiguration.CodingKeys()
{
  return &type metadata for SNSystemConfiguration.CodingKeys;
}

unint64_t sub_1DCA11058()
{
  unint64_t result = qword_1EAAA4AB8;
  if (!qword_1EAAA4AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4AB8);
  }
  return result;
}

unint64_t sub_1DCA110A8()
{
  unint64_t result = qword_1EAAA4AC0;
  if (!qword_1EAAA4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4AC0);
  }
  return result;
}

unint64_t sub_1DCA110F8()
{
  unint64_t result = qword_1EAAA4AC8;
  if (!qword_1EAAA4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4AC8);
  }
  return result;
}

uint64_t sub_1DCA11144()
{
  sub_1DC87E988(&qword_1EAAA4AD0);
  sub_1DC89D4E0();
  uint64_t v23 = v1;
  uint64_t v24 = v0;
  MEMORY[0x1F4188790](v0);
  sub_1DC8A22D0();
  uint64_t v4 = v3 - v2;
  uint64_t v28 = sub_1DC87E988(&qword_1EAAA4AD8);
  sub_1DC89D4E0();
  uint64_t v26 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v9 = v8 - v7;
  uint64_t v27 = sub_1DC87E988(&qword_1EAAA4AE0);
  sub_1DC89D4E0();
  uint64_t v25 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC8A22D0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for AccessibilitySoundActions.Session();
  MEMORY[0x1F4188790](v15);
  sub_1DC8A22D0();
  uint64_t v18 = v17 - v16;
  sub_1DC87E988(&qword_1EAAA4AE8);
  uint64_t v19 = sub_1DC8AAF10();
  sub_1DC9DA4FC();
  if (v29)
  {
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1DC87E988((uint64_t *)&unk_1EAAA3C00);
    sub_1DCA115D4();
    uint64_t v20 = v19;
    sub_1DCB874A8();
    swift_release();
    sub_1DC87E988(&qword_1EAAA69F0);
    sub_1DCB87138();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v4, v24);
    sub_1DC87E988(qword_1EAAA4AF0);
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_1DCB87438();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v9, v28);
    swift_getWitnessTable();
    uint64_t v21 = sub_1DCB873A8();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v14, v27);
    sub_1DC87E988(&qword_1EAA9E7B8);
    swift_allocObject();
    uint64_t v19 = (uint64_t)sub_1DCA0F2B4(v20, v21);
    sub_1DCA11680(v18);
  }
  return v19;
}

uint64_t sub_1DCA114F0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  if (qword_1EAA9D2A8 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EAAFFBC0;
  if (*(void *)(qword_1EAAFFBC0 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1DC9637DC(v4, v3);
    if (v7)
    {
      char v8 = *(unsigned char *)(*(void *)(v5 + 56) + v6);
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v8;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1DC958C74();
  swift_allocError();
  unsigned char *v10 = 2;
  return swift_willThrow();
}

unint64_t sub_1DCA115D4()
{
  unint64_t result = qword_1EAAA13B0;
  if (!qword_1EAAA13B0)
  {
    sub_1DC8863A8((uint64_t *)&unk_1EAAA3C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA13B0);
  }
  return result;
}

uint64_t sub_1DCA11628(id *a1)
{
  id v1 = *a1;
  sub_1DC87E988(&qword_1EAAA69F0);
  return sub_1DCB87328();
}

uint64_t sub_1DCA11680(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccessibilitySoundActions.Session();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DCA116DC(CMTimeValue a1, unint64_t a2, CMTimeEpoch a3, void *a4, int32_t a5, void (*a6)(uint64_t), Float64 a7, uint64_t a8, void (*a9)(void *))
{
  CMTimeScale v13 = a2;
  unint64_t v15 = HIDWORD(a2);
  type metadata accessor for SNTimeUtils();
  id v16 = sub_1DC8ACD44(a4);
  CMTimeScale v18 = v17;
  CMTimeEpoch v20 = v19;
  unint64_t v21 = HIDWORD(v17);
  CMTimeMakeWithSeconds(&time1, a7, a5);
  CMTimeEpoch epoch = time1.epoch;
  time1.value = a1;
  time1.timescale = v13;
  time1.flags = v15;
  time1.CMTimeEpoch epoch = a3;
  time2.value = (CMTimeValue)v16;
  time2.timescale = v18;
  time2.flags = v21;
  time2.CMTimeEpoch epoch = v20;
  if (CMTimeCompare(&time1, &time2) < 1 || (uint64_t v23 = sub_1DCA118DC(), a6(v23), (sub_1DCB88638() & 1) != 0))
  {
    CMTimeValue v24 = sub_1DCA118DC();
    sub_1DC8AD2A8(v24, v25, v26, v27, v28, v29, v30, v31, epoch, kCMTimeRoundingMethod_RoundTowardZero, a9);
  }
  else
  {
    type metadata accessor for SNError();
    sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, 1, 0, 0xD000000000000012, 0x80000001DCB96160);
    swift_willThrow();
  }
}

unint64_t sub_1DCA1187C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((sub_1DCB6623C(*(unsigned __int8 **)(a1 + 16)) & 1) == 0) {
    a2();
  }
  char v8 = *(atomic_ullong **)(a4 + 16);

  return sub_1DCB66218(v8, a5);
}

uint64_t sub_1DCA118DC()
{
  return v0;
}

uint64_t sub_1DCA118F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_1DCA11988()
{
  sub_1DCB891B8();

  return sub_1DCB879B8();
}

uint64_t sub_1DCA119DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
  }
  else if (a6)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  else {
    return sub_1DCB89018();
  }
}

uint64_t sub_1DCA11A14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6761726F74537772 && a2 == 0xED00006874615065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6150656C646E7562 && a2 == 0xEA00000000006874)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA11B34(char a1)
{
  if (a1) {
    return 0x6150656C646E7562;
  }
  else {
    return 0x6761726F74537772;
  }
}

uint64_t sub_1DCA11B7C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1DC87E988(&qword_1EAAA4C30);
  sub_1DC89D4E0();
  uint64_t v24 = v7;
  uint64_t v25 = v6;
  MEMORY[0x1F4188790](v6);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_1DC87E988(&qword_1EAAA4C38);
  sub_1DC89D4E0();
  uint64_t v23 = v12;
  MEMORY[0x1F4188790](v13);
  sub_1DC89D988();
  uint64_t v14 = sub_1DC87E988(&qword_1EAAA4C40);
  sub_1DC89D4E0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  sub_1DC8A22D0();
  uint64_t v20 = v19 - v18;
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA1317C();
  sub_1DCB892B8();
  unint64_t v21 = (uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
  if (a4)
  {
    sub_1DCA131C8();
    sub_1DCB88E88();
    sub_1DCB88EC8();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v25);
  }
  else
  {
    sub_1DCA13214();
    sub_1DCB88E88();
    sub_1DCB88EC8();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v4, v11);
  }
  return (*v21)(v20, v14);
}

uint64_t sub_1DCA11DC8()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA11E30(void *a1)
{
  sub_1DC87E988(&qword_1EAAA4C00);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v2);
  sub_1DC8A22D0();
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA4C08);
  sub_1DC89D4E0();
  uint64_t v34 = v4;
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_1DC87E988(&qword_1EAAA4C10);
  sub_1DC89D4E0();
  uint64_t v35 = v10;
  MEMORY[0x1F4188790](v11);
  sub_1DC8A22D0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = (uint64_t)sub_1DC881A8C(a1, a1[3]);
  sub_1DCA1317C();
  sub_1DCB89298();
  if (v36) {
    goto LABEL_10;
  }
  uint64_t v37 = (uint64_t)a1;
  uint64_t v16 = sub_1DCB88E58();
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
    uint64_t v24 = v9;
    uint64_t v25 = v35;
LABEL_8:
    uint64_t v26 = sub_1DCB88B18();
    sub_1DC883884();
    uint64_t v28 = v27;
    sub_1DC87E988(&qword_1EAA9E130);
    *uint64_t v28 = &_s11FileAddressON;
    uint64_t v15 = v14;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x1E4FBBA70], v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v14, v24);
    a1 = (void *)v37;
LABEL_10:
    sub_1DC8818D0((uint64_t)a1);
    return v15;
  }
  uint64_t v18 = v14;
  char v19 = *(unsigned char *)(v16 + 32);
  sub_1DC9CFE4C(1, v17, v16, v16 + 32, 0, (2 * v17) | 1);
  uint64_t v21 = v20;
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 != v23 >> 1)
  {
    uint64_t v24 = v9;
    uint64_t v25 = v35;
    uint64_t v14 = v18;
    goto LABEL_8;
  }
  if (v19)
  {
    sub_1DCA131C8();
    sub_1DCB88D58();
    uint64_t v15 = sub_1DCB88DA8();
    uint64_t v30 = sub_1DCA1371C();
    v31(v30);
  }
  else
  {
    sub_1DCA13214();
    sub_1DCB88D58();
    uint64_t v15 = sub_1DCB88DA8();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v8, v3);
  }
  swift_unknownObjectRelease();
  uint64_t v32 = sub_1DCA13734();
  v33(v32);
  sub_1DC8818D0(v37);
  return v15;
}

uint64_t sub_1DCA122C4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA131C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA12300(uint64_t a1)
{
  unint64_t v2 = sub_1DCA131C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA1233C()
{
  return sub_1DCA11B34(*v0);
}

uint64_t sub_1DCA12344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA11A14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA1236C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA1317C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA123A8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA1317C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA123E4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA13214();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA12420(uint64_t a1)
{
  unint64_t v2 = sub_1DCA13214();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA1245C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1DCA118F8(a1, a2, *v3);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7 & 1;
  return result;
}

uint64_t sub_1DCA12494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1DCA11E30(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1DCA124C8(void *a1)
{
  return sub_1DCA11B7C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_1DCA124E8()
{
  return sub_1DCA11DC8();
}

uint64_t sub_1DCA124F4()
{
  return sub_1DCA11988();
}

uint64_t sub_1DCA12500()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA12560(uint64_t a1, uint64_t a2)
{
  return sub_1DCA119DC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1DCA1257C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v39 = a2;
  uint64_t v38 = a1;
  uint64_t v8 = sub_1DCB86A18();
  sub_1DC89D4E0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  sub_1DC89D988();
  uint64_t v12 = sub_1DC87E988(qword_1EAA9CBC0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v35 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  if (a3)
  {
    uint64_t v36 = a4;
    uint64_t v37 = v4;
    uint64_t v35 = v10;
    type metadata accessor for SoundAnalysisBundleMarker();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v23 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v24 = (void *)sub_1DCB87908();
    id v25 = objc_msgSend(v23, sel_URLForResource_withExtension_, v24, 0);

    if (v25)
    {
      sub_1DCB869B8();

      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = 1;
    }
    uint64_t v10 = v36;
    uint64_t v27 = v37;
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v18, v26, 1, v8);
    sub_1DC90A1C4((uint64_t)v18, (uint64_t)v20);
    sub_1DC90A3F8((uint64_t)v20, (uint64_t)v15);
    if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v15, 1, v8) == 1)
    {
      sub_1DC916734((uint64_t)v15);
      _s13FileInterfaceV11DomainErrorOMa();
      swift_getWitnessTable();
      sub_1DC883884();
      *uint64_t v28 = 0;
      swift_willThrow();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v5, v15, v8);
      uint64_t v29 = sub_1DCB86A58();
      if (!v27)
      {
        uint64_t v10 = v29;

        uint64_t v33 = sub_1DCA1375C();
        v34(v33);
        sub_1DC916734((uint64_t)v20);
        return v10;
      }

      uint64_t v30 = sub_1DCA1375C();
      v31(v30);
    }
    sub_1DC916734((uint64_t)v20);
  }
  else
  {
    _s13FileInterfaceV11DomainErrorOMa();
    swift_getWitnessTable();
    sub_1DC883884();
    *uint64_t v21 = 3;
    swift_willThrow();
  }
  return v10;
}

uint64_t sub_1DCA128A8(uint64_t a1, uint64_t a2)
{
  return sub_1DCA1257C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), a2);
}

unint64_t sub_1DCA128D0(unsigned __int8 a1)
{
  unint64_t result = sub_1DCAAE748(a1);
  if (!v2) {
    return 0;
  }
  return result;
}

unint64_t sub_1DCA12908@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1DCA128D0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1DCA12938(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    type metadata accessor for SoundAnalysisBundleMarker();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v6 = objc_msgSend(v5, sel_resourcePath);

    if (v6)
    {
      uint64_t v7 = sub_1DCB87938();

      swift_bridgeObjectRetain();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1DCB87A18();
      swift_bridgeObjectRelease();
      return v7;
    }
    char v3 = 2;
  }
  else
  {
    char v3 = 1;
  }
  _s13FileInterfaceV11DomainErrorOMa();
  swift_getWitnessTable();
  sub_1DC883884();
  *uint64_t v9 = v3;
  return swift_willThrow();
}

uint64_t sub_1DCA12A98(uint64_t a1)
{
  return sub_1DCA12938(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

_UNKNOWN **sub_1DCA12AC0()
{
  return &off_1F37EAD88;
}

uint64_t _s13FileInterfaceV11DomainErrorOMa()
{
  return sub_1DC8866E4();
}

unsigned char *sub_1DCA12AE4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA12BB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t _s11FileAddressOwxx()
{
  return sub_1DCA12BEC();
}

uint64_t sub_1DCA12BEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s11FileAddressOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1DC911068();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11FileAddressOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1DC911068();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1DCA12BEC();
  return a1;
}

uint64_t _s11FileAddressOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1DCA12BEC();
  return a1;
}

uint64_t _s11FileAddressOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s11FileAddressOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DCA12D64(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *_s11FileAddressOMa()
{
  return &_s11FileAddressON;
}

uint64_t sub_1DCA12D80(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1DCA12ECC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1DCA130D0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t _s13FileInterfaceVMa()
{
  return sub_1DC8866E4();
}

unint64_t sub_1DCA13114()
{
  unint64_t result = qword_1EAAA4BF8;
  if (!qword_1EAAA4BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4BF8);
  }
  return result;
}

uint64_t sub_1DCA13160()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DCA1317C()
{
  unint64_t result = qword_1EAAA4C18;
  if (!qword_1EAAA4C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C18);
  }
  return result;
}

unint64_t sub_1DCA131C8()
{
  unint64_t result = qword_1EAAA4C20;
  if (!qword_1EAAA4C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C20);
  }
  return result;
}

unint64_t sub_1DCA13214()
{
  unint64_t result = qword_1EAAA4C28;
  if (!qword_1EAAA4C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C28);
  }
  return result;
}

unsigned char *_s11FileAddressO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCA1332CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11FileAddressO10CodingKeysOMa()
{
  return &_s11FileAddressO10CodingKeysON;
}

ValueMetadata *_s11FileAddressO23RwStoragePathCodingKeysOMa()
{
  return &_s11FileAddressO23RwStoragePathCodingKeysON;
}

unsigned char *_s11FileAddressO23RwStoragePathCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA13414);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s11FileAddressO20BundlePathCodingKeysOMa()
{
  return &_s11FileAddressO20BundlePathCodingKeysON;
}

unint64_t sub_1DCA13450()
{
  unint64_t result = qword_1EAAA4C48;
  if (!qword_1EAAA4C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C48);
  }
  return result;
}

unint64_t sub_1DCA134A0()
{
  unint64_t result = qword_1EAAA4C50;
  if (!qword_1EAAA4C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C50);
  }
  return result;
}

unint64_t sub_1DCA134F0()
{
  unint64_t result = qword_1EAAA4C58;
  if (!qword_1EAAA4C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C58);
  }
  return result;
}

unint64_t sub_1DCA13540()
{
  unint64_t result = qword_1EAAA4C60;
  if (!qword_1EAAA4C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C60);
  }
  return result;
}

unint64_t sub_1DCA13590()
{
  unint64_t result = qword_1EAAA4C68;
  if (!qword_1EAAA4C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C68);
  }
  return result;
}

unint64_t sub_1DCA135E0()
{
  unint64_t result = qword_1EAAA4C70;
  if (!qword_1EAAA4C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C70);
  }
  return result;
}

unint64_t sub_1DCA13630()
{
  unint64_t result = qword_1EAAA4C78;
  if (!qword_1EAAA4C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C78);
  }
  return result;
}

unint64_t sub_1DCA13680()
{
  unint64_t result = qword_1EAAA4C80;
  if (!qword_1EAAA4C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C80);
  }
  return result;
}

unint64_t sub_1DCA136D0()
{
  unint64_t result = qword_1EAAA4C88;
  if (!qword_1EAAA4C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4C88);
  }
  return result;
}

uint64_t sub_1DCA1371C()
{
  return v0;
}

uint64_t sub_1DCA13734()
{
  return v0;
}

uint64_t sub_1DCA1374C()
{
  return v0;
}

uint64_t sub_1DCA1375C()
{
  return v0;
}

uint64_t sub_1DCA13770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA4C90);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC8A22D0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  swift_retain();
  sub_1DC87E988(&qword_1EAAA4CA8);
  sub_1DCB87E78();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
}

uint64_t sub_1DCA1386C()
{
  uint64_t v0 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1DC8A22D0();
  uint64_t v36 = v2 - v1;
  uint64_t v34 = sub_1DC87E988(&qword_1EAAA4CB0);
  sub_1DC89D4E0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  sub_1DC8A22D0();
  uint64_t v8 = v7 - v6;
  uint64_t v35 = sub_1DC87E988(&qword_1EAAA4CB8);
  sub_1DC89D4E0();
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  unsigned int v15 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = sub_1DC87E988(&qword_1EAAA4CC0);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v23 = (char *)&v33 - v22;
  uint64_t v24 = sub_1DC87E988(&qword_1EAAA4CA8);
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v23, 1, 1, v24);
  uint64_t v37 = v23;
  sub_1DC87E988(qword_1EAA9C990);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v8, *MEMORY[0x1E4FBD028], v34);
  sub_1DCB87ED8();
  uint64_t v25 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v36, 1, 1, v25);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v34 = (uint64_t)v17;
  uint64_t v27 = v17;
  uint64_t v28 = v35;
  v26(v15, v27, v35);
  unint64_t v29 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v30 + v29, v15, v28);
  sub_1DCA97644();
  swift_release();
  sub_1DCA147D4((uint64_t)v23, (uint64_t)v21);
  uint64_t result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v21, 1, v24);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v34, v28);
    uint64_t v32 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v33 + OBJC_IVAR____TtC13SoundAnalysis18AsyncDispatchQueue_queueContinuation, v21, v24);
    sub_1DCA1483C((uint64_t)v23);
    return v32;
  }
  return result;
}

uint64_t sub_1DCA13BE8(uint64_t a1, uint64_t a2)
{
  sub_1DCA1483C(a2);
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA4CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, 0, 1, v4);
}

uint64_t sub_1DCA13C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[4] = a4;
  uint64_t v5 = sub_1DC87E988(&qword_1EAAA4CD8);
  void v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCA13D44, 0, 0);
}

uint64_t sub_1DCA13D44()
{
  sub_1DC87E988(&qword_1EAAA4CB8);
  sub_1DCB87EA8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_1DCA13E14;
  uint64_t v2 = *(void *)(v0 + 40);
  return MEMORY[0x1F4187D58](v0 + 16, 0, 0, v2);
}

uint64_t sub_1DCA13E14()
{
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DCA13EE4, 0, 0);
}

uint64_t sub_1DCA13EE4()
{
  uint64_t v1 = (int *)v0[2];
  v0[9] = v1;
  if (v1)
  {
    v0[10] = v0[3];
    uint64_t v5 = (uint64_t (*)(void))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1DCA14014;
    return v5();
  }
  else
  {
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1DCA14014()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  sub_1DC88678C();
  *uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *v0;
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  sub_1DC884EC0(v4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v6;
  void *v6 = v5;
  v6[1] = sub_1DCA13E14;
  uint64_t v7 = *(void *)(v1 + 40);
  return MEMORY[0x1F4187D58](v2 + 16, 0, 0, v7);
}

uint64_t sub_1DCA141BC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13SoundAnalysis18AsyncDispatchQueue_queueContinuation;
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA4CA8);
  sub_1DCB87E88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1DCA14274()
{
  return type metadata accessor for AsyncDispatchQueue();
}

uint64_t type metadata accessor for AsyncDispatchQueue()
{
  uint64_t result = qword_1EAA9C978;
  if (!qword_1EAA9C978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DCA142C4()
{
  sub_1DCA14354();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1DCA14354()
{
  if (!qword_1EAA9C988)
  {
    sub_1DC8863A8(qword_1EAA9C990);
    unint64_t v0 = sub_1DCB87E98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAA9C988);
    }
  }
}

uint64_t sub_1DCA143B0(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1DCA1489C;
  return v5();
}

uint64_t sub_1DCA1447C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA144B4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DCA1489C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAAA4C98 + dword_1EAAA4C98);
  return v6(a1, v4);
}

uint64_t sub_1DCA1456C(uint64_t a1)
{
  return sub_1DCA13BE8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DCA14574()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA4CB8);
  sub_1DC89D4E0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

uint64_t sub_1DCA1461C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1DC87E988(&qword_1EAAA4CB8) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1DCA1470C;
  return sub_1DCA13C80(a1, v5, v6, v7);
}

uint64_t sub_1DCA1470C()
{
  sub_1DC886774();
  uint64_t v1 = *v0;
  sub_1DC88678C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1DCA147D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA4CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCA1483C(uint64_t a1)
{
  uint64_t v2 = sub_1DC87E988(&qword_1EAAA4CC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCA148A0()
{
  sub_1DCA15644();
  uint64_t v1 = v0();
  void v9[3] = sub_1DC87E988(&qword_1EAA9E7F8);
  v9[0] = v1;
  uint64_t v2 = sub_1DC8819D8((uint64_t)v9, (uint64_t)v10);
  sub_1DCA15650(v2, v3, v4, v5, v6, v7);
  return swift_release();
}

uint64_t sub_1DCA14944(uint64_t a1, void (*a2)(void))
{
  sub_1DCA15644();
  uint64_t v15 = sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9D0E8);
  sub_1DCA15628();
  a2();
  if (v2)
  {
    sub_1DC8E6BC8((uint64_t)v14);
    sub_1DCA15638();
    if (v3)
    {
      uint64_t v5 = (void *)sub_1DCB86888();
      id v6 = v5;
      *uint64_t v3 = v5;
    }
  }
  else
  {
    uint64_t v7 = sub_1DC8819D8((uint64_t)v14, (uint64_t)v16);
  }
  sub_1DCA15650(v7, v8, v9, v10, v11, v12);
  return swift_release();
}

uint64_t sub_1DCA149F0(uint64_t a1, void (*a2)(void))
{
  sub_1DCA15644();
  uint64_t v15 = sub_1DC87E988(&qword_1EAA9E048);
  sub_1DCA15628();
  a2();
  if (v2)
  {
    sub_1DC8E6BC8((uint64_t)v14);
    sub_1DCA15638();
    if (v3)
    {
      uint64_t v5 = (void *)sub_1DCB86888();
      id v6 = v5;
      *uint64_t v3 = v5;
    }
  }
  else
  {
    uint64_t v7 = sub_1DC8819D8((uint64_t)v14, (uint64_t)v16);
  }
  sub_1DCA15650(v7, v8, v9, v10, v11, v12);
  return swift_release();
}

uint64_t sub_1DCA14A90()
{
  sub_1DCA15644();
  uint64_t v13 = MEMORY[0x1E4FBC848] + 8;
  sub_1DCA15628();
  v2();
  if (v0)
  {
    sub_1DC8E6BC8((uint64_t)v12);
    sub_1DCA15638();
    if (v1)
    {
      uint64_t v3 = (void *)sub_1DCB86888();
      id v4 = v3;
      void *v1 = v3;
    }
  }
  else
  {
    uint64_t v5 = sub_1DC8819D8((uint64_t)v12, (uint64_t)v14);
  }
  sub_1DCA15650(v5, v6, v7, v8, v9, v10);
  return swift_release();
}

id sub_1DCA14B2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6)
{
  if (a4)
  {
    uint64_t v10 = qword_1EAA9C658;
    id v11 = a4;
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1DCB86FE8();
    sub_1DC89F57C(v12, (uint64_t)qword_1EAAFF810);
    id v13 = v11;
    swift_bridgeObjectRetain_n();
    id v14 = v13;
    uint64_t v15 = sub_1DCB86FC8();
    os_log_type_t v16 = sub_1DCB88468();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      swift_bridgeObjectRetain();
      sub_1DC9F8920(a5, a6, &v38);
      sub_1DCB88778();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      os_log_type_t type = v16;
      id v18 = objc_msgSend(v14, sel_description);
      uint64_t v19 = sub_1DCB87938();
      uint64_t v20 = a1;
      uint64_t v21 = a2;
      unint64_t v23 = v22;

      sub_1DC9F8920(v19, v23, &v38);
      sub_1DCB88778();

      a2 = v21;
      a1 = v20;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DC873000, v15, type, "error: %s; underlying: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1DC87E988(&qword_1EAAA0900);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DCBBCDA0;
    *(void *)(inited + 32) = sub_1DCB87938();
    *(void *)(inited + 40) = v29;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = a5;
    *(void *)(inited + 56) = a6;
    *(void *)(inited + 80) = sub_1DCB87938();
    *(void *)(inited + 88) = v30;
    *(void *)(inited + 120) = sub_1DC89C89C(0, qword_1EAAA34D8);
    *(void *)(inited + 96) = v14;
  }
  else
  {
    if (qword_1EAA9C658 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1DCB86FE8();
    sub_1DC89F57C(v24, (uint64_t)qword_1EAAFF810);
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_1DCB86FC8();
    os_log_type_t v26 = sub_1DCB88468();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      swift_bridgeObjectRetain();
      sub_1DC9F8920(a5, a6, &v38);
      sub_1DCB88778();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DC873000, v25, v26, "error: %s", v27, 0xCu);
      swift_arrayDestroy();
      sub_1DC8E7728();
      sub_1DC8E7728();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1DC87E988(&qword_1EAAA0900);
    uint64_t v31 = swift_initStackObject();
    *(_OWORD *)(v31 + 16) = xmmword_1DCBB93B0;
    *(void *)(v31 + 32) = sub_1DCB87938();
    *(void *)(v31 + 40) = v32;
    *(void *)(v31 + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(v31 + 48) = a5;
    *(void *)(v31 + 56) = a6;
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1DCB877D8();
  id v34 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  swift_bridgeObjectRetain();
  return sub_1DCB2FA98(a1, a2, a3, v33);
}

id sub_1DCA150C4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  return sub_1DCA14B2C(0xD000000000000017, 0x80000001DCB90E90, a1, a2, a3, a4);
}

void *sub_1DCA15188(void *result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7)
{
  if (result)
  {
    uint64_t v7 = result;
    id v8 = sub_1DCA14B2C(a2, a3, a4, a5, a6, a7);
    uint64_t result = v8;
    *uint64_t v7 = v8;
  }
  return result;
}

void **sub_1DCA15284(void **result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result)
  {
    id v11 = result;
    uint64_t v12 = *result;
    if (*result) {
      swift_unknownObjectRetain();
    }
    sub_1DCA15188(v11, a2, a3, a4, v12, a5, a6);
    return (void **)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1DCA153A8(void *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  return sub_1DCA15188(a1, 0xD000000000000017, 0x80000001DCB90E90, a2, a3, a4, a5);
}

void sub_1DCA15468(void *a1, uint64_t a2, void (**a3)(void, void))
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)MEMORY[0x1E01A8D20]();
  v9[0] = 0;
  ((void (**)(void, id *))a3)[2](a3, v9);
  id v6 = v9[0];
  if (a1)
  {
    id v7 = v6;
    *a1 = v6;
    id v8 = v7;
  }

  _Block_release(a3);
}

id sub_1DCA15578()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNError();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_1DCA155D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNError();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNError()
{
  return self;
}

double sub_1DCA15638()
{
  return 0.0;
}

uint64_t sub_1DCA15650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_1DC8819D8((uint64_t)va, v6);
}

uint64_t sub_1DCA15668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EAA9D220 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1DCB86A18();
  uint64_t v10 = sub_1DC89F57C(v9, (uint64_t)qword_1EAAFF948);
  sub_1DC87E988((uint64_t *)&unk_1EAA9C810);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DCBC6B50;
  *(void *)(v11 + 32) = 6715437;
  *(void *)(v11 + 40) = 0xE300000000000000;
  *(void *)(v11 + 48) = a1;
  *(void *)(v11 + 56) = a2;
  *(void *)(v11 + 64) = 17197;
  *(void *)(v11 + 72) = 0xE200000000000000;
  *(void *)(v11 + 80) = a3;
  *(void *)(v11 + 88) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCAD23D0(v10, v11, 0);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCA15788()
{
  uint64_t v0 = sub_1DCB86A18();
  sub_1DCA0E188(v0, qword_1EAAFF948);
  sub_1DC89F57C(v0, (uint64_t)qword_1EAAFF948);
  return sub_1DCB86928();
}

uint64_t sub_1DCA157F0(uint64_t a1, uint64_t (*a2)(id, uint64_t), uint64_t a3, void (*a4)(uint64_t *__return_ptr), uint64_t a5)
{
  void (*v33)(uint64_t *__return_ptr);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(id, uint64_t);
  uint64_t v38;

  uint64_t v32 = a5;
  uint64_t v33 = a4;
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  id v34 = a1;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA4CE0);
  sub_1DC89D4E0();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v32 - v14;
  os_log_type_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v16((char *)&v32 - v14, a1, v6);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v35 = swift_allocObject();
  id v18 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v19 = v15;
  uint64_t v20 = v34;
  v18(v35 + v17, v19, v6);
  v16(v13, v20, v6);
  uint64_t v21 = swift_allocObject();
  v18(v21 + v17, v13, v6);
  id v22 = objc_allocWithZone((Class)type metadata accessor for SNResultsForwarder());
  id v23 = sub_1DC9EA250((uint64_t)sub_1DCA16430, v35, (uint64_t)sub_1DCA1644C, v21);
  uint64_t v25 = (void *)v37(v23, v24);
  v33(&v38);
  sub_1DC87E988((uint64_t *)&unk_1EAAA4CE8);
  uint64_t v26 = swift_allocObject();
  id v27 = v23;
  swift_defaultActor_initialize();
  *(void *)(v26 + 112) = v23;
  uint64_t v28 = v38;
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v28;
  void v29[3] = v25;
  v29[4] = v26;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1DCB87F58();
  id v30 = v27;
  sub_1DCA37438(v25, v30);
  swift_release();
  swift_unknownObjectRelease();

  return swift_release();
}

void sub_1DCA15B04(uint64_t a1, uint64_t (*a2)(id, uint64_t), uint64_t a3, void (*a4)(void **__return_ptr), uint64_t a5)
{
  void (*v30)(void **__return_ptr);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(id, uint64_t);
  void *v35;

  uint64_t v29 = a5;
  id v30 = a4;
  uint64_t v33 = a3;
  id v34 = a2;
  uint64_t v31 = a1;
  uint64_t v6 = sub_1DC87E988(&qword_1EAAA4CE0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v29 - v11;
  id v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v29 - v11, a1, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v32 = swift_allocObject();
  uint64_t v15 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  os_log_type_t v16 = v12;
  uint64_t v17 = v31;
  v15(v32 + v14, v16, v6);
  v13(v10, v17, v6);
  uint64_t v18 = swift_allocObject();
  v15(v18 + v14, v10, v6);
  id v19 = objc_allocWithZone((Class)type metadata accessor for SNResultsForwarder());
  id v20 = sub_1DC9EA250((uint64_t)sub_1DCA16430, v32, (uint64_t)sub_1DCA16BBC, v18);
  id v22 = (void *)v34(v20, v21);
  v30(&v35);
  sub_1DC87E988((uint64_t *)&unk_1EAAA4CE8);
  uint64_t v23 = swift_allocObject();
  id v24 = v20;
  swift_defaultActor_initialize();
  *(void *)(v23 + 112) = v20;
  uint64_t v25 = v35;
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = v25;
  v26[3] = v22;
  v26[4] = v23;
  id v27 = v25;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1DCB87F58();
  id v28 = v24;
  sub_1DC9DFCA0(v22, v28);
  swift_release();
  swift_unknownObjectRelease();
}

uint64_t sub_1DCA15E38(int a1, id a2)
{
  if (a2) {
    id v2 = a2;
  }
  sub_1DC87E988(&qword_1EAAA4CE0);
  return sub_1DCB87F78();
}

uint64_t sub_1DCA15E90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DC87E988(&qword_1EAAA4D08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = a2;
  swift_unknownObjectRetain();
  sub_1DC87E988(&qword_1EAAA4CE0);
  sub_1DCB87F68();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DCA15F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = sub_1DC87E988(&qword_1EAAA2180);
  MEMORY[0x1F4188790](v8 - 8);
  sub_1DC8A22D0();
  uint64_t v11 = v10 - v9;
  a5(a3);
  uint64_t v12 = sub_1DCB87E48();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v11, 1, 1, v12);
  id v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  void v13[4] = a4;
  swift_retain();
  sub_1DCA97644();
  return swift_release();
}

uint64_t sub_1DCA1607C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1DCA1609C, a4, 0);
}

uint64_t sub_1DCA1609C()
{
  sub_1DCA16584(0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static AnalyzerUtils.systemAudioAnalyzerResultsStream(makeRequest:createAnalyzer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v9 = (void *)swift_allocObject();
  id v9[2] = a1;
  void v9[3] = a2;
  void v9[4] = sub_1DCA16270;
  void v9[5] = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1DCA162E4;
  *(void *)(v10 + 24) = v9;
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAA9ED90);
  sub_1DC88CF34((unint64_t *)&unk_1EAA9E890, (uint64_t *)&unk_1EAA9ED90);
  return sub_1DCB87378();
}

uint64_t sub_1DCA16238()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1DCA16270@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DCA162A4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1DCA162E4(uint64_t a1)
{
  sub_1DCA15B04(a1, *(uint64_t (**)(id, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void **__return_ptr))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1DCA162F0()
{
  uint64_t v0 = sub_1DC87E988((uint64_t *)&unk_1EAAA4D10);
  sub_1DC89D4E0();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  uint64_t v6 = v5 - v4;
  sub_1DC87E988(&qword_1EAA9E960);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v6, *MEMORY[0x1E4FBD120], v0);
  return sub_1DCB87F88();
}

ValueMetadata *type metadata accessor for AnalyzerUtils()
{
  return &type metadata for AnalyzerUtils;
}

uint64_t sub_1DCA163F0()
{
  return sub_1DC88CF34(&qword_1EAA9EDA0, &qword_1EAA9E870);
}

uint64_t sub_1DCA16430(uint64_t a1, uint64_t a2)
{
  return sub_1DCA1679C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DCA15E38);
}

uint64_t sub_1DCA1644C(uint64_t a1, uint64_t a2)
{
  return sub_1DCA1679C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DCA15E90);
}

uint64_t sub_1DCA16464(uint64_t a1, uint64_t a2)
{
  return sub_1DCA164B4(a1, a2, &qword_1EAAA4D30);
}

uint64_t sub_1DCA1648C(uint64_t a1, uint64_t a2)
{
  return sub_1DCA164B4(a1, a2, &qword_1EAAA4D28);
}

uint64_t sub_1DCA164B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1DC87E988(a3);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC8A22D0();
  (*(void (**)(uint64_t, void))(v6 + 104))(v5 - v4, *MEMORY[0x1E4FBD120]);
  return sub_1DCB87F88();
}

uint64_t sub_1DCA16584(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
  swift_unknownObjectRetain();

  return swift_unknownObjectRelease();
}

uint64_t sub_1DCA165C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCA15F88(a1, *a2, a3, a4, (void (*)(uint64_t))sub_1DCA393C0);
}

uint64_t sub_1DCA1660C()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_1DC8BAD04();

  return swift_deallocObject();
}

uint64_t sub_1DCA1664C(uint64_t a1)
{
  return sub_1DCA165C0(a1, v1 + 2, v1[3], v1[4]);
}

uint64_t sub_1DCA1665C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DCA16BC0;
  uint64_t v2 = sub_1DC99A480();
  return sub_1DCA1607C(v2, v3, v4, v5);
}

uint64_t sub_1DCA16708()
{
  uint64_t v1 = sub_1DC87E988(&qword_1EAAA4CE0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1DCA1679C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_1DC87E988(&qword_1EAAA4CE0) - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7);
}

uint64_t sub_1DCA16834(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCA15F88(a1, *a2, a3, a4, (void (*)(uint64_t))sub_1DC9E0470);
}

uint64_t sub_1DCA16880()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_1DC8BAD04();

  return swift_deallocObject();
}

uint64_t sub_1DCA168C0(uint64_t a1)
{
  return sub_1DCA16834(a1, v1 + 2, v1[3], v1[4]);
}

uint64_t sub_1DCA168D0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DCA16974;
  uint64_t v2 = sub_1DC99A480();
  return sub_1DCA1607C(v2, v3, v4, v5);
}

uint64_t sub_1DCA16974()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1DCA16A68()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unsigned char *storeEnumTagSinglePayload for AnalyzerUtils.DomainError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCA16B2CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyzerUtils.DomainError()
{
  return &type metadata for AnalyzerUtils.DomainError;
}

unint64_t sub_1DCA16B68()
{
  unint64_t result = qword_1EAAA4D38;
  if (!qword_1EAAA4D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4D38);
  }
  return result;
}

void type metadata accessor for EBankUtils()
{
}

uint64_t sub_1DCA16BD4(uint64_t *a1, uint64_t a2)
{
  return sub_1DCA1809C(a1, a2, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1DCA16BEC(uint64_t *a1, uint64_t *a2)
{
  sub_1DCA181D0(a1, a2);
  swift_retain();
  swift_retain();
  swift_retain();
  return v2;
}

void *sub_1DCA16C2C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *sub_1DCA16CA4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCA1815C(a1, a2, a3, MEMORY[0x1E4FBC8D0]);
}

void type metadata accessor for EBankUtils.CoefficientAllocations()
{
}

uint64_t sub_1DCA16CD0(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (result == 0x8000000000000000 && a2 == -1) {
    goto LABEL_12;
  }
  uint64_t v3 = result / a2;
  uint64_t v4 = a2 * (result / a2);
  if ((unsigned __int128)(a2 * (__int128)(result / a2)) >> 64 != v4 >> 63)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if (v4 != result)
  {
    sub_1DCA17B00();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1DCA16D5C(uint64_t a1)
{
  uint64_t v3 = sub_1DCB89248();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[3] = sub_1DC87E988(&qword_1EAAA4D48);
  uint64_t v7 = swift_allocObject();
  v14[0] = v7;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)(v7 + 16) = *(void *)a1;
  *(void *)(v7 + 24) = v8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a1 + 16);
  *(void *)(v7 + 48) = *(void *)(a1 + 32);
  *(_OWORD *)(v7 + 56) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v7 + 72) = *(_OWORD *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 80);
  *(void *)(v7 + 88) = *(void *)(a1 + 72);
  *(void *)(v7 + 96) = v9;
  uint64_t v10 = *(void *)(a1 + 96);
  *(void *)(v7 + 104) = *(void *)(a1 + 88);
  *(void *)(v7 + 112) = v10;
  uint64_t v11 = *(void *)(a1 + 112);
  *(void *)(v7 + 120) = *(void *)(a1 + 104);
  *(void *)(v7 + 128) = v11;
  *(void *)(v7 + 136) = *(void *)(a1 + 120);
  sub_1DCB89208();
  sub_1DCB89238();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v12 = sub_1DCB88BE8();
  if (v1)
  {
    v14[0] = v1;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
  }
  swift_release();
  return v12;
}

uint64_t sub_1DCA16F18(uint64_t a1)
{
  sub_1DC87E9DC(a1 + 16, (uint64_t)&v3);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    sub_1DC96ECF8();
    swift_allocError();
    *uint64_t v2 = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA16FBC(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!(v2 >> 61))
  {
    uint64_t v3 = 4 * v2;
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      if (v3 == *(void *)(a2 + 24) - v4)
      {
LABEL_4:
        sub_1DCB88778();
        return swift_release();
      }
    }
    else if (!v3)
    {
      goto LABEL_4;
    }
    sub_1DC96EDAC();
    swift_allocError();
    *uint64_t v5 = 0;
    swift_willThrow();
    return swift_release();
  }
  __break(1u);
  return result;
}

void *sub_1DCA17054@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t result = (void *)sub_1DCA176EC(*(void *)(v7 + 16), *(void *)(v5 + 16), *(void *)(v6 + 16));
  if (!v2)
  {
    uint64_t v9 = sub_1DCA17764((uint64_t)result);
    uint64_t v10 = sub_1DCA17A68(v7);
    uint64_t v11 = sub_1DCA17A68(v5);
    uint64_t v12 = sub_1DCA17A68(v6);
    sub_1DCA17814(v10, v11, v12, *(void *)a1, v9, (uint64_t)v13, *(float *)(a1 + 8));
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return memcpy(a2, v13, 0x50uLL);
  }
  return result;
}

void *sub_1DCA171A0(uint64_t a1)
{
  return sub_1DCA172EC(a1, (void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1DCA171C4, &qword_1EAAFF960, &byte_1EAAFF968);
}

uint64_t sub_1DCA171C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v6[0] = xmmword_1DCBE3FB0;
  v6[1] = unk_1DCBE3FC0;
  void v6[2] = xmmword_1DCBE3FD0;
  uint64_t v6[3] = unk_1DCBE3FE0;
  v6[4] = xmmword_1DCBE3FF0;
  void v6[5] = unk_1DCBE4000;
  v6[6] = xmmword_1DCBE4010;
  v6[7] = unk_1DCBE4020;
  uint64_t result = sub_1DCA16D5C((uint64_t)v6);
  if (v2) {
    *a1 = v2;
  }
  else {
    *a2 = result;
  }
  return result;
}

void *sub_1DCA17234(uint64_t a1)
{
  return sub_1DCA172EC(a1, (void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1DCA17258, &qword_1EAAFF970, &byte_1EAAFF978);
}

uint64_t sub_1DCA17258@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v6[0] = xmmword_1DCBE4030;
  v6[1] = unk_1DCBE4040;
  void v6[2] = xmmword_1DCBE4050;
  uint64_t v6[3] = unk_1DCBE4060;
  v6[4] = xmmword_1DCBE4070;
  void v6[5] = unk_1DCBE4080;
  v6[6] = xmmword_1DCBE4090;
  v6[7] = unk_1DCBE40A0;
  uint64_t result = sub_1DCA16D5C((uint64_t)v6);
  if (v2) {
    *a1 = v2;
  }
  else {
    *a2 = result;
  }
  return result;
}

void *sub_1DCA172C8(uint64_t a1)
{
  return sub_1DCA172EC(a1, (void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1DCA17354, &qword_1EAAFF980, &byte_1EAAFF988);
}

void *sub_1DCA172EC(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, uint64_t *), void *a3, unsigned char *a4)
{
  uint64_t result = a2(&v8, &v7);
  *a3 = v8;
  *a4 = 0;
  return result;
}

uint64_t sub_1DCA17354@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v6[0] = xmmword_1DCBE3F30;
  v6[1] = unk_1DCBE3F40;
  void v6[2] = xmmword_1DCBE3F50;
  uint64_t v6[3] = unk_1DCBE3F60;
  v6[4] = xmmword_1DCBE3F70;
  void v6[5] = unk_1DCBE3F80;
  v6[6] = xmmword_1DCBE3F90;
  v6[7] = unk_1DCBE3FA0;
  uint64_t result = sub_1DCA16D5C((uint64_t)v6);
  if (v2) {
    *a1 = v2;
  }
  else {
    *a2 = result;
  }
  return result;
}

void sub_1DCA173C4()
{
  sub_1DCA17430(&v0, (uint64_t)v1);
  xmmword_1EAAFF990 = v1[0];
  *(_OWORD *)&qword_1EAAFF9A0 = v1[1];
  qword_1EAAFF9B0 = v2;
  byte_1EAAFF9B8 = 0;
}

void sub_1DCA17430(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1EAA9D228 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1EAAFF960;
  if (byte_1EAAFF968)
  {
    id v5 = (id)qword_1EAAFF960;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
LABEL_13:
    *a1 = v4;
    return;
  }
  uint64_t v6 = qword_1EAA9D230;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EAAFF970;
  if (byte_1EAAFF978)
  {
    id v8 = (id)qword_1EAAFF970;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    sub_1DC9022A0(v4, 0);
    uint64_t v4 = v7;
    goto LABEL_13;
  }
  uint64_t v9 = qword_1EAA9D238;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EAAFF980;
  if (byte_1EAAFF988)
  {
    id v11 = (id)qword_1EAAFF980;
    sub_1DC87E988(&qword_1EAA9DF60);
    swift_willThrowTypedImpl();
    sub_1DC9022A0(v4, 0);
    sub_1DC9022A0(v7, 0);
    uint64_t v4 = (void *)v10;
    goto LABEL_13;
  }
  *(void *)a2 = 160;
  *(_DWORD *)(a2 + 8) = 1065101558;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v10;
  swift_bridgeObjectRetain();
}

uint64_t sub_1DCA17638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    uint64_t v7 = *(void *)(a1 + 24) - v6;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = sub_1DCA16CD0(v7, 4);
  if (!v3)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    if (v9) {
      uint64_t v10 = *(void *)(a2 + 24) - v9;
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t v11 = sub_1DCA16CD0(v10, 4);
    uint64_t v12 = *(void *)(a3 + 16);
    if (v12) {
      uint64_t v13 = *(void *)(a3 + 24) - v12;
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = sub_1DCA16CD0(v13, 4);
    sub_1DCA176EC(v8, v11, v14);
  }
  return v8;
}

uint64_t sub_1DCA176EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2 || a1 != a3)
  {
    type metadata accessor for SNError();
    sub_1DC931D18(0x80000001DCB90E90, 0xD000000000000026, (uint64_t)"inconsistent filter coefficient counts");
    swift_willThrow();
  }
  return a1;
}

uint64_t sub_1DCA17764(uint64_t result)
{
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v3 = sub_1DCB4EFD4(result);
  type metadata accessor for FixedAddressMutableRawBuffer();
  swift_allocObject();
  uint64_t v4 = sub_1DCABE73C(v3);
  sub_1DCA179A0(*(void **)(v4 + 16), *(void *)(v4 + 24), v2);
  if (v1) {
    swift_release();
  }
  return v4;
}

uint64_t sub_1DCA17814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, float a7@<S0>)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t result = sub_1DCA17638(a1, a2, a3);
  if (!v7)
  {
    memset(v22, 0, 44);
    if (result > 0x7FFFFFFF)
    {
      __break(1u);
    }
    else if (a4 >= (uint64_t)0xFFFFFFFF80000000 && result >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (a4 <= 0x7FFFFFFF)
      {
        if (sub_1DCB4F064((uint64_t)v22, *(void *)(a1 + 16), *(void *)(a2 + 16), *(void *)(a3 + 16), result, a4, *(void *)(a5 + 16), a7))
        {
          uint64_t v17 = *(void *)&v22[1];
          int v18 = DWORD2(v22[1]);
          uint64_t v19 = *(void *)((char *)&v22[2] + 4);
          uint64_t v20 = *(void *)((char *)&v22[1] + 12);
          *(_OWORD *)a6 = v22[0];
          *(void *)(a6 + 16) = v17;
          *(_DWORD *)(a6 + 24) = v18;
          *(void *)(a6 + 28) = v20;
          *(void *)(a6 + 36) = v19;
          *(void *)(a6 + 48) = a5;
          *(void *)(a6 + 56) = a1;
          *(void *)(a6 + 64) = a2;
          *(void *)(a6 + 72) = a3;
          swift_retain();
          swift_retain();
          swift_retain();
          return swift_retain();
        }
        else
        {
          type metadata accessor for SNError();
          sub_1DCA181E8();
          sub_1DC931D18(0x80000001DCB90E90, v21, (uint64_t)"BOOL success status indicates failure");
          return swift_willThrow();
        }
      }
LABEL_14:
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1DCA179A0(void *a1, uint64_t a2, uint64_t a3)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  size_t v3 = a2 - (void)a1;
  if (!a1) {
    size_t v3 = 0;
  }
  v6[0] = v3;
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  if (a3 > 0x7FFFFFFF) {
    goto LABEL_9;
  }
  uint64_t result = sub_1DCB4EFE0(a1, v6, a3);
  if ((result & 1) == 0)
  {
    type metadata accessor for SNError();
    sub_1DCA181E8();
    sub_1DC931D18(0x80000001DCB90E90, v5, (uint64_t)"BOOL success status indicates failure");
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCA17A68(uint64_t result)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2 >> 61)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    uint64_t v4 = 4 * v2;
    type metadata accessor for FixedAddressMutableRawBuffer();
    swift_allocObject();
    uint64_t v5 = sub_1DCABE73C(v4);
    swift_retain();
    sub_1DCA16FBC(v3, v5);
    if (v1) {
      swift_release();
    }
    return v5;
  }
  return result;
}

unint64_t sub_1DCA17B00()
{
  unint64_t result = qword_1EAAA4D40;
  if (!qword_1EAAA4D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAAA4D40);
  }
  return result;
}

uint64_t sub_1DCA17B4C()
{
  return swift_deallocObject();
}

uint64_t sub_1DCA17B5C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1DCA16F18(a1);
  if (v2)
  {
    sub_1DC87E988(&qword_1EAA9DF60);
    uint64_t result = swift_allocError();
    void *v6 = v2;
  }
  else
  {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1DCA17BBC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DCA17C08(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DCA17C70(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1DCA17D38(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t sub_1DCA17D40(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 28) = *(void *)(a2 + 28);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t sub_1DCA17DC0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA17E00(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EBankUtils.StateWithAllocations()
{
}

uint64_t sub_1DCA17E60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA17EA4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCA17F04(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCA17F8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCA17FEC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCA1802C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EBankUtils.Configuration()
{
}

uint64_t sub_1DCA18084(uint64_t *a1, uint64_t a2)
{
  return sub_1DCA1809C(a1, a2, MEMORY[0x1E4FBC898]);
}

uint64_t sub_1DCA1809C(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  a3(*a1);
  a3(a1[1]);
  uint64_t v4 = a1[2];

  return a3(v4);
}

uint64_t sub_1DCA18104(uint64_t *a1, uint64_t *a2)
{
  sub_1DCA181D0(a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t *sub_1DCA18144(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCA1815C(a1, a2, a3, MEMORY[0x1E4FBC898]);
}

uint64_t *sub_1DCA1815C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  a4(*a1);
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a4(v7);
  uint64_t v8 = a1[2];
  a1[2] = *(void *)(a2 + 16);
  a4(v8);
  return a1;
}

void type metadata accessor for EBankUtils.Coefficients()
{
}

uint64_t sub_1DCA181D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  return result;
}

uint64_t sub_1DCA181FC()
{
  return sub_1DCB891F8();
}

uint64_t sub_1DCA18274()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64);
  sub_1DCB891A8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  swift_bridgeObjectRetain();
  sub_1DC920218((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  sub_1DCB891C8();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
  }
  return sub_1DCB891F8();
}

void sub_1DCA183A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1DCB891A8();
    sub_1DCB879B8();
    uint64_t v6 = sub_1DCB891F8();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v8 = v6 & ~v7;
    sub_1DCA23F48();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_1DCB89018() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_1DCA23F48();
        if (v15)
        {
          do
          {
            os_log_type_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_1DCB89018()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_1DCA23F48();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_1DCA184B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  double v5 = *(double *)(a1 + 48);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v11 = *(_DWORD *)(a2 + 32);
  int v10 = *(_DWORD *)(a2 + 36);
  uint64_t v12 = *(void *)(a2 + 40);
  double v13 = *(double *)(a2 + 48);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0)
    {
      uint64_t v17 = *(void *)(a1 + 24);
      int v25 = *(_DWORD *)(a1 + 32);
      sub_1DCA23EBC();
      type metadata accessor for SNMLModelHashableUncodableWrapper();
      sub_1DCA23FA0();
      sub_1DCA23FA0();
      char v18 = sub_1DC971658(v3, v7);
      sub_1DC8823A0(v3, v2, 0);
      sub_1DC8823A0(v7, v6, 0);
      sub_1DC8823A0(v7, v6, 0);
      sub_1DC8823A0(v3, v2, 0);
      if (v18)
      {
        BOOL v19 = v17 == v9 && v25 == v11;
        goto LABEL_19;
      }
      return 0;
    }
LABEL_10:
    sub_1DC88244C(*(void *)a2, *(void *)(a2 + 8), v8);
    sub_1DC88244C(v3, v2, v4);
    sub_1DC8823A0(v3, v2, v4);
    sub_1DC8823A0(v7, v6, v8);
    return 0;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v14 = *(void *)(a1 + 24);
  int v15 = *(_DWORD *)(a1 + 32);
  sub_1DCA23EBC();
  if (v3 == v7 && v2 == v6)
  {
    sub_1DCA23F04(v3, v2);
    sub_1DC8823A0(v3, v2, 1);
  }
  else
  {
    char v24 = sub_1DCB89018();
    sub_1DCA23F04(v7, v6);
    sub_1DC8823A0(v7, v6, 1);
    if ((v24 & 1) == 0) {
      return 0;
    }
  }
  BOOL v19 = v14 == v9 && v15 == v11;
LABEL_19:
  if (!v19 || v36 != v10 || v37 != v12 || v5 != v13) {
    return 0;
  }
  v40[0] = v35;
  v40[1] = v34;
  v40[2] = v33;
  char v41 = v32;
  v38[0] = v31;
  v38[1] = v30;
  v38[2] = v29;
  char v39 = v28;
  if (!sub_1DC8A48B4((uint64_t)v40, (uint64_t)v38)) {
    return 0;
  }

  return sub_1DC8DCAE8(v26, v27);
}

uint64_t sub_1DCA18740()
{
  id v1 = objc_msgSend(v0, sel_impl);
  sub_1DCB88808();
  swift_unknownObjectRelease();
  type metadata accessor for _SNClassifySoundRequest();
  swift_dynamicCast();
  return v3;
}

uint64_t sub_1DCA187B8()
{
  self;
  uint64_t v0 = swift_dynamicCastObjCClass();
  if (v0)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    sub_1DCA22648();
    swift_allocError();
    swift_willThrow();
  }
  return v0;
}

uint64_t sub_1DCA18840(uint64_t a1)
{
  return sub_1DCA1891C(a1, (void (*)(void))type metadata accessor for SNSpeechUtteranceResult);
}

uint64_t sub_1DCA1886C(uint64_t a1)
{
  return sub_1DCA1891C(a1, (void (*)(void))type metadata accessor for SNSpeechEmotionResult);
}

uint64_t sub_1DCA18898(uint64_t a1)
{
  return sub_1DCA1891C(a1, (void (*)(void))type metadata accessor for SNLKFSResult);
}

uint64_t sub_1DCA188C4(uint64_t a1)
{
  return sub_1DCA1891C(a1, (void (*)(void))type metadata accessor for SNShazamSignatureResult);
}

uint64_t sub_1DCA188F0(uint64_t a1)
{
  return sub_1DCA1891C(a1, (void (*)(void))type metadata accessor for SNDetectionResult);
}

uint64_t sub_1DCA1891C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    swift_unknownObjectRetain();
  }
  else
  {
    sub_1DCA22648();
    sub_1DC883884();
    sub_1DCA240FC();
  }
  return v2;
}

uint64_t sub_1DCA18994()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1DCB891B8();
    return sub_1DCB879B8();
  }
  else
  {
    sub_1DCB891B8();
    swift_retain();
    sub_1DC9700D8();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    return sub_1DC8823A0(v1, v2, 0);
  }
}

uint64_t sub_1DCA18A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0)
    {
      type metadata accessor for SNMLModelHashableUncodableWrapper();
      uint64_t v10 = sub_1DCA240F0();
      sub_1DC88244C(v10, v11, 0);
      sub_1DC88244C(v2, v3, 0);
      char v9 = sub_1DC971658(v2, v5);
      char v4 = 0;
      char v7 = 0;
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
LABEL_9:
    sub_1DC88244C(*(void *)a2, *(void *)(a2 + 8), v7);
    sub_1DC88244C(v2, v3, v4);
    char v9 = 0;
    goto LABEL_13;
  }
  if (v2 == v5 && v3 == v6) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1DCB89018();
  }
  char v4 = 1;
  uint64_t v12 = sub_1DCA240F0();
  sub_1DC88244C(v12, v13, 1);
  sub_1DC88244C(v2, v3, 1);
  char v7 = 1;
LABEL_13:
  sub_1DC8823A0(v2, v3, v4);
  sub_1DC8823A0(v5, v6, v7);
  return v9 & 1;
}

uint64_t sub_1DCA18B8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C65646F4D6C6DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB92910)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA18C7C(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x6C65646F4D6C6DLL;
  }
}

void sub_1DCA18CB8()
{
  sub_1DC88D6B0();
  BOOL v2 = v1;
  sub_1DC87E988(&qword_1EAAA4F40);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC88D550();
  sub_1DC87E988(&qword_1EAAA4F48);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC8CD750();
  sub_1DC87E988(&qword_1EAAA4F50);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D970();
  uint64_t v6 = *(void *)v0;
  uint64_t v14 = *(void *)(v0 + 8);
  char v7 = *(unsigned char *)(v0 + 16);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA23640();
  sub_1DCB892B8();
  if (v7)
  {
    sub_1DCA2368C();
    sub_1DCB88E88();
    sub_1DC87E988(&qword_1EAAA4F20);
    sub_1DCA23724((uint64_t)&unk_1EAAA4F58);
    sub_1DCB88F18();
    sub_1DC88D5C8();
    v8();
    uint64_t v9 = sub_1DCA23FDC();
    v10(v9);
  }
  else
  {
    sub_1DCA236D8();
    swift_retain();
    sub_1DCB88E88();
    type metadata accessor for SNMLModelHashableUncodableWrapper();
    sub_1DCA23780((uint64_t)&qword_1EAAA4F60);
    sub_1DCB88F18();
    sub_1DC88D5C8();
    v11();
    uint64_t v12 = sub_1DCA23FDC();
    v13(v12);
    sub_1DC8823A0(v6, v14, 0);
  }
  sub_1DC88D674();
}

uint64_t sub_1DCA18F9C()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1DC89D754();
  sub_1DCB891B8();
  if (v3)
  {
    sub_1DCB879B8();
  }
  else
  {
    swift_retain();
    sub_1DC9700D8();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    sub_1DC8823A0(v1, v2, 0);
  }
  return sub_1DCB891F8();
}

void sub_1DCA1904C()
{
  sub_1DC88D6B0();
  char v3 = v2;
  uint64_t v29 = v4;
  sub_1DC87E988(&qword_1EAAA4EF0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D970();
  sub_1DC87E988(&qword_1EAAA4EF8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC981E40();
  uint64_t v7 = sub_1DC87E988(&qword_1EAAA4F00);
  sub_1DC89D4E0();
  uint64_t v30 = v8;
  MEMORY[0x1F4188790](v9);
  sub_1DC8CD750();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA23640();
  sub_1DCB89298();
  if (v1) {
    goto LABEL_8;
  }
  long long v33 = v3;
  uint64_t v10 = sub_1DCB88E58();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11
    || (char v12 = *(unsigned char *)(v10 + 32),
        sub_1DC9CFE4C(1, v11, v10, v10 + 32, 0, (2 * v11) | 1),
        uint64_t v14 = v13,
        unint64_t v16 = v15,
        swift_bridgeObjectRelease(),
        v14 != v16 >> 1))
  {
    uint64_t v17 = sub_1DCB88B18();
    sub_1DC883884();
    BOOL v19 = v18;
    sub_1DC87E988(&qword_1EAA9E130);
    *BOOL v19 = &unk_1F37E92E0;
    sub_1DCB88D68();
    sub_1DCB88B08();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x1E4FBBA70], v17);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v0, v7);
    char v3 = v33;
LABEL_8:
    uint64_t v20 = (uint64_t)v3;
    goto LABEL_9;
  }
  if (v12)
  {
    LOBYTE(v31) = 1;
    sub_1DCA2368C();
    sub_1DCA2407C();
    sub_1DC87E988(&qword_1EAAA4F20);
    sub_1DCA23724((uint64_t)&unk_1EAAA4F28);
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v21();
    swift_unknownObjectRelease();
    uint64_t v22 = sub_1DCA23DF8();
    v23(v22);
    uint64_t v24 = v31;
    uint64_t v25 = v32;
  }
  else
  {
    LOBYTE(v31) = 0;
    sub_1DCA236D8();
    sub_1DCA2407C();
    type metadata accessor for SNMLModelHashableUncodableWrapper();
    sub_1DCA23780((uint64_t)&qword_1EAA9EA18);
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v26();
    swift_unknownObjectRelease();
    uint64_t v27 = sub_1DCA23DF8();
    v28(v27);
    uint64_t v25 = 0;
    uint64_t v24 = v31;
  }
  *(void *)uint64_t v29 = v24;
  *(void *)(v29 + 8) = v25;
  *(unsigned char *)(v29 + 16) = v12;
  uint64_t v20 = (uint64_t)v33;
LABEL_9:
  sub_1DC8818D0(v20);
  sub_1DC88D674();
}

uint64_t sub_1DCA19528()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  char v5 = *(unsigned char *)(v0 + 104);
  sub_1DCB891B8();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
  }
  else
  {
    swift_retain_n();
    sub_1DC9700D8();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    sub_1DC8823A0(v1, v2, 0);
  }
  sub_1DC8823A0(v1, v2, v3);
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891B8();
  if (v5)
  {
    sub_1DCB891E8();
    sub_1DCB891D8();
    sub_1DCB891D8();
    sub_1DCB891E8();
    sub_1DCB891E8();
    sub_1DCB891D8();
    sub_1DCB891D8();
    sub_1DCB891E8();
  }
  else
  {
    sub_1DC8A81E0();
  }
  swift_bridgeObjectRetain();
  sub_1DC8A7C04();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA1971C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001DCB966C0 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x7544776F646E6977 && a2 == 0xEE006E6F69746172;
    if (v5 || (sub_1DCB89018() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x4670616C7265766FLL && a2 == 0xED0000726F746361;
      if (v6 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001DCB962E0 || (sub_1DCB89018() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB96330)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v7 = sub_1DCB89018();
        swift_bridgeObjectRelease();
        if (v7) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_1DCA19968(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7544776F646E6977;
      break;
    case 2:
      unint64_t result = 0x4670616C7265766FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DCA19A2C()
{
  sub_1DCA24004();
  char v3 = v2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA4E28);
  sub_1DC89D4E0();
  uint64_t v8 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D970();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA22734();
  sub_1DCB892B8();
  sub_1DCA227CC();
  sub_1DCA2409C();
  sub_1DCB88F18();
  if (v0)
  {
    sub_1DC88D5C8();
    v7();
  }
  else
  {
    sub_1DC8CD9B4();
    sub_1DC89C18C();
    sub_1DCA23F6C();
    sub_1DCB88EE8();
    sub_1DC882D40();
    sub_1DCA23F6C();
    sub_1DC87E988(&qword_1EAA9E7F0);
    sub_1DCA23724((uint64_t)&unk_1EAAAB460);
    sub_1DCA2409C();
    sub_1DCB88F18();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v4);
  }
  sub_1DCA24020();
}

uint64_t sub_1DCA19CBC()
{
  return sub_1DCB891F8();
}

void sub_1DCA19D54()
{
  sub_1DCA24004();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA4E00);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA22734();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DCA22780();
    sub_1DCA23E38();
    uint64_t v12 = v4;
    uint64_t v6 = v13;
    sub_1DC8CD9B4();
    sub_1DC88244C(v13, v14, v15);
    sub_1DC89C0C0();
    sub_1DCA23E38();
    uint64_t v7 = v13;
    LOBYTE(v13) = 2;
    sub_1DCB88DC8();
    uint64_t v9 = v8;
    sub_1DC882E68();
    sub_1DCA23E38();
    sub_1DC87E988(&qword_1EAA9E7F0);
    sub_1DC88245C(v13, v14, v15, v16, v17, v18, v19);
    sub_1DCA23724((uint64_t)&qword_1EAAA1850);
    sub_1DCB88DF8();
    uint64_t v10 = sub_1DCA23EA4();
    v11(v10);
    sub_1DC88244C(v6, v14, v15);
    sub_1DC88245C(v13, v14, v15, v16, v17, v18, v19);
    swift_bridgeObjectRetain();
    sub_1DC8823B0(v13, v14, v15, v16, v17, v18, v19);
    sub_1DC8823A0(v6, v14, v15);
    *(void *)uint64_t v12 = v6;
    *(void *)(v12 + 8) = v14;
    *(unsigned char *)(v12 + 16) = v15;
    *(void *)(v12 + 24) = v7;
    *(void *)(v12 + 32) = v14;
    *(void *)(v12 + 40) = v15;
    *(void *)(v12 + 48) = v9;
    *(void *)(v12 + 56) = v13;
    *(void *)(v12 + 64) = v14;
    *(void *)(v12 + 72) = v15;
    *(void *)(v12 + 80) = v16;
    *(void *)(v12 + 88) = v17;
    *(void *)(v12 + 96) = v18;
    *(unsigned char *)(v12 + 104) = v19;
    *(void *)(v12 + 112) = v13;
    sub_1DC8818D0((uint64_t)v2);
    sub_1DC8823A0(v6, v14, v15);
    sub_1DC8823B0(v13, v14, v15, v16, v17, v18, v19);
    swift_bridgeObjectRelease();
  }
  sub_1DCA24020();
}

uint64_t sub_1DCA1A188()
{
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1DCA1A2AC(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v3 = *((void *)a1 + 5);
  uint64_t v4 = *((void *)a1 + 6);
  char v5 = *((unsigned char *)a1 + 104);
  uint64_t v6 = *((void *)a1 + 14);
  uint64_t v46 = *((void *)a1 + 16);
  uint64_t v47 = *((void *)a1 + 15);
  uint64_t v44 = *((void *)a1 + 18);
  uint64_t v45 = *((void *)a1 + 17);
  uint64_t v42 = *((void *)a1 + 20);
  uint64_t v43 = *((void *)a1 + 19);
  char v40 = *((unsigned char *)a1 + 169);
  char v41 = *((unsigned char *)a1 + 168);
  char v38 = *((unsigned char *)a1 + 171);
  char v39 = *((unsigned char *)a1 + 170);
  char v36 = *((unsigned char *)a1 + 173);
  char v37 = *((unsigned char *)a1 + 172);
  uint64_t v35 = *((void *)a1 + 22);
  char v34 = *((unsigned char *)a1 + 184);
  char v7 = *((unsigned char *)a2 + 16);
  uint64_t v8 = *((void *)a2 + 3);
  uint64_t v9 = *((void *)a2 + 5);
  uint64_t v10 = *((void *)a2 + 6);
  char v11 = *((unsigned char *)a2 + 104);
  uint64_t v12 = *((void *)a2 + 14);
  uint64_t v13 = *((void *)a2 + 15);
  LOBYTE(v60) = *((unsigned char *)a1 + 16);
  uint64_t v61 = v2;
  uint64_t v14 = *((void *)a2 + 16);
  uint64_t v15 = *((void *)a2 + 18);
  uint64_t v32 = *((void *)a2 + 17);
  uint64_t v33 = v13;
  long long v59 = *a1;
  long long v65 = *(long long *)((char *)a1 + 56);
  long long v66 = *(long long *)((char *)a1 + 72);
  long long v67 = *(long long *)((char *)a1 + 88);
  uint64_t v16 = *((void *)a1 + 4);
  uint64_t v17 = *((void *)a2 + 20);
  uint64_t v30 = *((void *)a2 + 19);
  uint64_t v31 = v14;
  uint64_t v63 = v3;
  char v68 = v5;
  char v18 = *((unsigned char *)a2 + 168);
  uint64_t v69 = v6;
  char v19 = *((unsigned char *)a2 + 169);
  LOBYTE(v49) = v7;
  char v20 = *((unsigned char *)a2 + 170);
  uint64_t v50 = v8;
  char v21 = *((unsigned char *)a2 + 171);
  uint64_t v52 = v9;
  char v22 = *((unsigned char *)a2 + 172);
  char v57 = v11;
  char v23 = *((unsigned char *)a2 + 173);
  uint64_t v58 = v12;
  uint64_t v24 = *((void *)a2 + 22);
  uint64_t v62 = v16;
  uint64_t v64 = v4;
  long long v48 = *a2;
  uint64_t v51 = *((void *)a2 + 4);
  uint64_t v53 = v10;
  long long v25 = *(long long *)((char *)a2 + 72);
  long long v26 = *(long long *)((char *)a2 + 88);
  char v27 = *((unsigned char *)a2 + 184);
  long long v54 = *(long long *)((char *)a2 + 56);
  long long v55 = v25;
  long long v56 = v26;
  if (sub_1DCA184B4((uint64_t)&v59, (uint64_t)&v48))
  {
    *(void *)&long long v59 = v47;
    *((void *)&v59 + 1) = v46;
    uint64_t v60 = v45;
    uint64_t v61 = v44;
    uint64_t v62 = v43;
    uint64_t v63 = v42;
    LOBYTE(v64) = v41;
    BYTE1(v64) = v40;
    BYTE2(v64) = v39;
    BYTE3(v64) = v38;
    BYTE4(v64) = v37;
    BYTE5(v64) = v36;
    *(void *)&long long v65 = v35;
    BYTE8(v65) = v34;
    *(void *)&long long v48 = v33;
    *((void *)&v48 + 1) = v31;
    uint64_t v49 = v32;
    uint64_t v50 = v15;
    uint64_t v51 = v30;
    uint64_t v52 = v17;
    LOBYTE(v53) = v18;
    BYTE1(v53) = v19;
    BYTE2(v53) = v20;
    BYTE3(v53) = v21;
    BYTE4(v53) = v22;
    BYTE5(v53) = v23;
    *(void *)&long long v54 = v24;
    BYTE8(v54) = v27;
    char v28 = static AudioConfiguration.== infix(_:_:)((uint64_t)&v59, (uint64_t)&v48);
  }
  else
  {
    char v28 = 0;
  }
  return v28 & 1;
}

void sub_1DCA1A4F4()
{
  sub_1DC8E79D0();
  uint64_t v2 = v1;
  sub_1DC87E988(&qword_1EAAA4F68);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v3);
  sub_1DC89D988();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA237C0();
  sub_1DCB892B8();
  sub_1DC8822FC();
  sub_1DCA240C8();
  sub_1DCB88F18();
  if (!v0)
  {
    sub_1DC8821D0();
    sub_1DCA240C8();
    sub_1DCB88F18();
  }
  sub_1DC88D5C8();
  v4();
  sub_1DC8E7A74();
}

uint64_t sub_1DCA1A82C()
{
  return sub_1DCB891F8();
}

void sub_1DCA1A9AC()
{
  sub_1DC8E79D0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA4F78);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D9A0();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA237C0();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    LOBYTE(v37[0]) = 0;
    sub_1DC882468();
    sub_1DCB88DF8();
    uint64_t v23 = v41;
    unsigned int v21 = v43;
    unsigned int v22 = v42;
    uint64_t v20 = v44;
    uint64_t v6 = v45;
    uint64_t v29 = v38;
    uint64_t v30 = v48;
    uint64_t v33 = v49;
    uint64_t v34 = v46;
    uint64_t v32 = v53;
    char v81 = v40;
    char v80 = v52;
    char v68 = 1;
    uint64_t v28 = v39;
    char v31 = v40;
    sub_1DC88244C(v38, v39, v40);
    uint64_t v25 = v50;
    uint64_t v26 = v47;
    uint64_t v7 = v48;
    uint64_t v24 = v51;
    char v27 = v52;
    sub_1DC88245C(v46, v47, v48, v49, v50, v51, v52);
    sub_1DC8822B0();
    swift_bridgeObjectRetain();
    sub_1DCB88DF8();
    sub_1DC88D5C8();
    v8();
    uint64_t v35 = v70;
    uint64_t v36 = v69;
    uint64_t v18 = v72;
    uint64_t v19 = v71;
    uint64_t v16 = v74;
    uint64_t v17 = v73;
    char v14 = BYTE1(v75);
    char v15 = v75;
    char v12 = HIBYTE(v75);
    char v13 = BYTE2(v75);
    char v10 = HIBYTE(v76);
    char v11 = v76;
    uint64_t v9 = v77;
    char v79 = v78;
    v37[0] = v29;
    v37[1] = v28;
    LOBYTE(v37[2]) = v31;
    v37[3] = v23;
    v37[4] = __PAIR64__(v21, v22);
    v37[5] = v20;
    v37[6] = v6;
    v37[7] = v34;
    v37[8] = v26;
    v37[9] = v7;
    v37[10] = v33;
    v37[11] = v25;
    v37[12] = v24;
    LOBYTE(v37[13]) = v27;
    v37[14] = v32;
    v37[15] = v69;
    v37[16] = v70;
    v37[17] = v71;
    v37[18] = v72;
    v37[19] = v73;
    v37[20] = v74;
    LODWORD(v37[21]) = v75;
    WORD2(v37[21]) = v76;
    v37[22] = v77;
    LOBYTE(v37[23]) = v78;
    sub_1DCA03B58((uint64_t)v37);
    sub_1DC8823A0(v29, v28, v31);
    sub_1DC8823B0(v34, v26, v30, v33, v25, v24, v27);
    swift_bridgeObjectRelease();
    memcpy(v4, v37, 0xB9uLL);
    sub_1DC8818D0((uint64_t)v2);
    uint64_t v38 = v29;
    uint64_t v39 = v28;
    char v40 = v81;
    uint64_t v41 = v23;
    unsigned int v42 = v22;
    unsigned int v43 = v21;
    uint64_t v44 = v20;
    uint64_t v45 = v6;
    uint64_t v46 = v34;
    uint64_t v47 = v26;
    uint64_t v48 = v30;
    uint64_t v49 = v33;
    uint64_t v50 = v25;
    uint64_t v51 = v24;
    char v52 = v80;
    uint64_t v53 = v32;
    uint64_t v54 = v36;
    uint64_t v55 = v35;
    uint64_t v56 = v19;
    uint64_t v57 = v18;
    uint64_t v58 = v17;
    uint64_t v59 = v16;
    char v60 = v15;
    char v61 = v14;
    char v62 = v13;
    char v63 = v12;
    char v64 = v11;
    char v65 = v10;
    uint64_t v66 = v9;
    char v67 = v79;
    sub_1DC9574E0((uint64_t)&v38);
  }
  sub_1DC8E7A74();
}

uint64_t sub_1DCA1AE78()
{
  return sub_1DCB891E8();
}

BOOL sub_1DCA1AEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (a1 == a3 && a2 == a4) {
    return a5 == a6;
  }
  char v9 = sub_1DCB89018();
  BOOL result = 0;
  if (v9) {
    return a5 == a6;
  }
  return result;
}

uint64_t sub_1DCA1AF34(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCA1B034(char a1)
{
  if (a1) {
    return 0x6E656469666E6F63;
  }
  else {
    return 0x696669746E656469;
  }
}

void sub_1DCA1B070()
{
  sub_1DC8E79D0();
  BOOL v3 = v2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA4E70);
  sub_1DC89D4E0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  sub_1DC89D988();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA228C8();
  sub_1DCB892B8();
  sub_1DCB88EC8();
  if (!v0) {
    sub_1DCB88EE8();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1DC8E7A74();
}

double sub_1DCA1B19C(void *a1)
{
  sub_1DC87E988(&qword_1EAAA4E60);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC981E40();
  sub_1DC881A8C(a1, a1[3]);
  sub_1DCA228C8();
  sub_1DCB89298();
  if (v1)
  {
    sub_1DC8818D0((uint64_t)a1);
  }
  else
  {
    sub_1DCB88DA8();
    swift_bridgeObjectRetain();
    sub_1DCB88DC8();
    double v2 = v6;
    sub_1DCA2403C();
    v7();
    sub_1DC8818D0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1DCA1B344(uint64_t a1)
{
  unint64_t v2 = sub_1DCA2368C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA1B380(uint64_t a1)
{
  unint64_t v2 = sub_1DCA2368C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA1B3BC()
{
  return sub_1DCA18C7C(*v0);
}

uint64_t sub_1DCA1B3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA18B8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA1B3EC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA23640();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA1B428(uint64_t a1)
{
  unint64_t v2 = sub_1DCA23640();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA1B464(uint64_t a1)
{
  unint64_t v2 = sub_1DCA236D8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA1B4A0(uint64_t a1)
{
  unint64_t v2 = sub_1DCA236D8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCA1B4DC()
{
}

void sub_1DCA1B4F4()
{
}

uint64_t sub_1DCA1B514()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1DCB891A8();
  sub_1DCB891B8();
  if (v3)
  {
    sub_1DCB879B8();
  }
  else
  {
    swift_retain();
    sub_1DC9700D8();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
    sub_1DC8823A0(v1, v2, 0);
  }
  return sub_1DCB891F8();
}

unint64_t sub_1DCA1B5CC()
{
  return sub_1DCA19968(*v0);
}

uint64_t sub_1DCA1B5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA1971C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA1B5FC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA22734();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA1B638(uint64_t a1)
{
  unint64_t v2 = sub_1DCA22734();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA1B67C()
{
  return sub_1DCB891F8();
}

void sub_1DCA1B718()
{
}

void sub_1DCA1B730()
{
}

uint64_t sub_1DCA1B74C(uint64_t a1)
{
  unint64_t v2 = sub_1DCA237C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA1B788(uint64_t a1)
{
  unint64_t v2 = sub_1DCA237C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA1B7CC()
{
  return sub_1DCB891F8();
}

void sub_1DCA1B948()
{
}

void sub_1DCA1B960()
{
}

uint64_t sub_1DCA1B97C()
{
  return sub_1DCA1B034(*v0);
}

uint64_t sub_1DCA1B984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA1AF34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA1B9AC(uint64_t a1)
{
  unint64_t v2 = sub_1DCA228C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA1B9E8(uint64_t a1)
{
  unint64_t v2 = sub_1DCA228C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA1BA24()
{
  return sub_1DCA181FC();
}

uint64_t sub_1DCA1BA30()
{
  return sub_1DCA1AE78();
}

uint64_t sub_1DCA1BA3C()
{
  return sub_1DCB891F8();
}

void sub_1DCA1BAB0(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = sub_1DCA1B19C(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

void sub_1DCA1BAE0()
{
}

BOOL sub_1DCA1BB00(uint64_t a1, uint64_t a2)
{
  return sub_1DCA1AEE8(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8), *(double *)(a1 + 16), *(double *)(a2 + 16));
}

uint64_t sub_1DCA1BB1C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v2 + 64);
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  swift_bridgeObjectRetain();
  sub_1DC920218(a1, v4);
  swift_bridgeObjectRelease();
  if (!v5) {
    return sub_1DCB891C8();
  }
  sub_1DCB891C8();
  swift_bridgeObjectRetain();
  sub_1DCB879B8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCA1BC3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[7];
  uint64_t v6 = a1[8];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v9 = a2[8];
  uint64_t v17 = a2[5];
  v18[0] = v2;
  v18[1] = a1[1];
  long long v19 = *((_OWORD *)a1 + 1);
  uint64_t v20 = a1[4];
  uint64_t v21 = v3;
  v14[0] = v7;
  v14[1] = a2[1];
  long long v15 = *((_OWORD *)a2 + 1);
  uint64_t v16 = a2[4];
  if (static TimeRange.== infix(_:_:)((uint64_t)v18, (uint64_t)v14))
  {
    sub_1DC91BE9C(v4, v8);
    if (v11)
    {
      if (v6)
      {
        if (v9)
        {
          BOOL v12 = v5 == v10 && v6 == v9;
          if (v12 || (sub_1DCB89018() & 1) != 0) {
            return 1;
          }
        }
      }
      else if (!v9)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1DCA1BD24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DCB92930 || (sub_1DCB89018() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DCB92910)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DCA1BE80(char a1)
{
  if (!a1) {
    return 0x676E6152656D6974;
  }
  if (a1 == 1) {
    return 0xD000000000000018;
  }
  return 0xD000000000000014;
}

void sub_1DCA1BEE8()
{
  sub_1DC88D6B0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_1DC87E988(&qword_1EAAA4E58);
  sub_1DC89D4E0();
  uint64_t v8 = v5;
  MEMORY[0x1F4188790](v6);
  sub_1DC89D988();
  sub_1DC881A8C(v3, v3[3]);
  sub_1DCA22818();
  sub_1DCB892B8();
  sub_1DC89C64C();
  sub_1DCA2409C();
  sub_1DCB88F18();
  if (v0)
  {
    sub_1DC88D5C8();
    v7();
  }
  else
  {
    sub_1DC8CD9B4();
    sub_1DC87E988(&qword_1EAAA0190);
    sub_1DCA22864((uint64_t)&qword_1EAAA0198);
    sub_1DCA2409C();
    sub_1DCB88F18();
    sub_1DCB88E98();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v4);
  }
  sub_1DC88D674();
}

void sub_1DCA1C0EC()
{
  sub_1DCA24004();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_1DC87E988(&qword_1EAAA4E40);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC8C1FC4();
  sub_1DC881A8C(v2, v2[3]);
  sub_1DCA22818();
  sub_1DCB89298();
  if (v0)
  {
    sub_1DC8818D0((uint64_t)v2);
  }
  else
  {
    sub_1DC89C600();
    sub_1DCB88DF8();
    sub_1DC87E988(&qword_1EAAA0190);
    sub_1DC8CD9B4();
    sub_1DCA22864((uint64_t)&qword_1EAAA01B0);
    sub_1DCB88DF8();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DCB88D78();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1DC8CD878();
    v10(v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void *v4 = v11;
    v4[1] = v12;
    uint64_t v4[2] = v13;
    uint64_t v4[3] = v14;
    _OWORD v4[4] = v15;
    void v4[5] = v16;
    v4[6] = v11;
    v4[7] = v6;
    v4[8] = v8;
    sub_1DC8818D0((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1DCA24020();
}

uint64_t sub_1DCA1C358()
{
  return sub_1DCA1BE80(*v0);
}

uint64_t sub_1DCA1C360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCA1BD24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCA1C388(uint64_t a1)
{
  unint64_t v2 = sub_1DCA22818();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCA1C3C4(uint64_t a1)
{
  unint64_t v2 = sub_1DCA22818();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCA1C408()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64);
  sub_1DCB891A8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  sub_1DCB891E8();
  sub_1DCB891D8();
  sub_1DCB891D8();
  sub_1DCB891E8();
  swift_bridgeObjectRetain();
  sub_1DC920218((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  sub_1DCB891C8();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1DCB879B8();
    swift_bridgeObjectRelease();
  }
  return sub_1DCB891F8();
}

void sub_1DCA1C530()
{
}

void sub_1DCA1C548()
{
}

uint64_t sub_1DCA1C564()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DCA1C5F4;
  return sub_1DC977FC0();
}

uint64_t sub_1DCA1C5F4(uint64_t a1)
{
  sub_1DC886774();
  uint64_t v5 = v4;
  sub_1DC88679C();
  void *v6 = v5;
  uint64_t v7 = *v2;
  sub_1DC88679C();
  *uint64_t v8 = v7;
  _OWORD v5[4] = a1;
  void v5[5] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1DC8C67E4, 0, 0);
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(void))((char *)&dword_1EAAA26E0 + dword_1EAAA26E0);
    uint64_t v9 = (void *)swift_task_alloc();
    v5[6] = v9;
    *uint64_t v9 = v7;
    v9[1] = sub_1DC8C6678;
    return v11();
  }
}

uint64_t sub_1DCA1C764(uint64_t a1, uint64_t a2)
{
  sub_1DCAD2DD0();
  uint64_t v4[3] = sub_1DC87E988(&qword_1EAAA42C8);
  _OWORD v4[4] = sub_1DCA235CC();
  v4[0] = a2;
  swift_retain();
  sub_1DCAD2E10(v4);
  swift_release();
  return sub_1DC8818D0((uint64_t)v4);
}

uint64_t sub_1DCA1C7EC()
{
  sub_1DC8867A8();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1DC8C69C8;
  return sub_1DCA1C564();
}

uint64_t sub_1DCA1C884(uint64_t a1)
{
  return sub_1DCA1C764(a1, *v1);
}

uint64_t sub_1DCA1C8A0()
{
  sub_1DC8867A8();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DC8C6B48;
  return sub_1DCA1C7EC();
}

id sub_1DCA1C934@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  v11[0] = *(void *)a1;
  v11[1] = *(void *)(a1 + 8);
  long long v12 = *(_OWORD *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = v3;
  uint64_t v15 = v4;
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  uint64_t v7 = (objc_class *)type metadata accessor for _SNClassificationResult();
  objc_allocWithZone(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = sub_1DC91E308((uint64_t)v11);
  *((void *)&v12 + 1) = v7;
  v11[0] = v8;
  id v9 = objc_allocWithZone((Class)SNClassificationResult);
  id result = sub_1DCA21A88(v11);
  *a2 = result;
  return result;
}

void sub_1DCA1C9F0()
{
  sub_1DC88D6B0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_1DC87E988(&qword_1EAA9E870);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v4);
  sub_1DC87E988(&qword_1EAAA4DA0);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v5);
  sub_1DC89D9A0();
  sub_1DC87E988(&qword_1EAAA4DA8);
  sub_1DC89D4E0();
  MEMORY[0x1F4188790](v6);
  sub_1DC8C1FC4();
  memcpy(v15, v3, 0xB9uLL);
  uint64_t v7 = swift_allocObject();
  memcpy((void *)(v7 + 16), v3, 0xB9uLL);
  sub_1DC8B9960(v1, (uint64_t)v14);
  uint64_t v8 = swift_allocObject();
  sub_1DC8BA1CC(v14, v8 + 16);
  memcpy((void *)(v8 + 56), v15, 0xB9uLL);
  id v9 = (void *)swift_allocObject();
  id v9[2] = sub_1DCA2251C;
  void v9[3] = v7;
  void v9[4] = sub_1DCA225B0;
  void v9[5] = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1DC8CB980;
  *(void *)(v10 + 24) = v9;
  sub_1DCA03B58((uint64_t)v15);
  sub_1DCA03B58((uint64_t)v15);
  swift_retain();
  swift_retain();
  sub_1DC87E988((uint64_t *)&unk_1EAA9ED90);
  sub_1DC8E7358((uint64_t)&unk_1EAA9E890);
  sub_1DCB87378();
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAAA4DB0);
  sub_1DC8E7358((uint64_t)&qword_1EAA9EDA0);
  sub_1DCB874A8();
  sub_1DCA2403C();
  v11();
  swift_release();
  swift_release();
  sub_1DC8E7358((uint64_t)&unk_1EAAA4DC0);
  sub_1DCB873D8();
  sub_1DC88D5C8();
  v12();
  sub_1DC8E7358((uint64_t)&unk_1EAAA4DC8);
  sub_1DCB873A8();
  sub_1DC88D5C8();
  v13();
  sub_1DC88D674();
}

id sub_1DCA1CE04(const void *a1)
{
  uint64_t v2 = type metadata accessor for _SNClassifySoundRequest();
  memcpy(__dst, a1, sizeof(__dst));
  memcpy(v6, a1, sizeof(v6));
  sub_1DC8823BC((uint64_t)__dst);
  id v3 = sub_1DCA1CE98((uint64_t)v6);
  uint64_t v6[3] = v2;
  v6[0] = v3;
  id v4 = objc_allocWithZone((Class)SNClassifySoundRequest);
  return sub_1DCA21A88(v6);
}

id sub_1DCA1CE98(uint64_t a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 104);
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v10 = &v3[OBJC_IVAR____SNClassifySoundRequest_impl];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)a1;
  v10[16] = v4;
  *((void *)v10 + 3) = v5;
  *((void *)v10 + 4) = *(void *)(a1 + 32);
  *((void *)v10 + 5) = v6;
  *((void *)v10 + 6) = v7;
  *(_OWORD *)(v10 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(v10 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(v10 + 88) = *(_OWORD *)(a1 + 88);
  v10[104] = v8;
  *((void *)v10 + 14) = v9;
  v12.receiver = v3;
  v12.super_class = v1;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1DCA1CF40@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_1DC881A8C(a1, v6);
  memcpy(__dst, (const void *)(a2 + 120), 0x41uLL);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 8))(__dst, v6, v7);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

void sub_1DCA1CFD0(void *a1@<X8>)
{
  uint64_t v2 = (char *)sub_1DC91F190();
  uint64_t v3 = &v2[OBJC_IVAR____SNClassificationResult_impl];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *((void *)v3 + 2);
  uint64_t v6 = *((void *)v3 + 3);
  uint64_t v8 = *((void *)v3 + 5);
  uint64_t v7 = *((void *)v3 + 6);
  uint64_t v10 = *((void *)v3 + 7);
  uint64_t v9 = *((void *)v3 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = *((void *)v3 + 1);
  uint64_t v12 = *((void *)v3 + 4);

  *a1 = v4;
  a1[1] = v11;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v12;
  a1[5] = v8;
  a1[6] = v7;
  a1[7] = v10;
  a1[8] = v9;
}

void sub_1DCA1D094(void *a1)
{
  type metadata accessor for SNUtils();
  sub_1DCB23C1C(a1, 0);
  if (v2[2] != 1)
  {
    type metadata accessor for SNError();
    sub_1DCB88A98();
    sub_1DC8E7B68();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    sub_1DCB88F98();
    sub_1DCB87A18();
    swift_bridgeObjectRelease();
    unint64_t v15 = sub_1DCA23EE4();
    sub_1DCA14B2C(v15, v16, v17, v18, v19, v20);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return;
  }
  uint64_t v3 = v2[4];
  uint64_t v4 = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a1, sel_inputDescriptionsByName);
  sub_1DC89C89C(0, (unint64_t *)&qword_1EAA9C680);
  uint64_t v6 = sub_1DCB877B8();

  uint64_t v7 = sub_1DC9612B8(v3, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v7 || (id v8 = objc_msgSend(v7, sel_multiArrayConstraint)) == 0)
  {
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DCA23E10(v21, v22, (uint64_t)"Invalid model, input feature must be a multi-array");
    sub_1DCA240FC();
    goto LABEL_8;
  }
  uint64_t v9 = v8;
  unint64_t v10 = sub_1DCB21C80(a1);
  int v11 = sub_1DCB21D88(v10);
  swift_bridgeObjectRelease();
  if (v11 <= 2)
  {
    unint64_t v23 = sub_1DCB21C80(a1);
    unsigned int v24 = sub_1DCB2395C(v23, 1u);
    swift_bridgeObjectRelease();
    if (v24 < 2)
    {
      type metadata accessor for SNError();
      sub_1DC8F65EC();
      sub_1DC8E7B68();
      uint64_t v14 = "Invalid model, block size must be 2 or greater";
      goto LABEL_17;
    }
    sub_1DCA89304(a1);
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    if (!v26)
    {
      type metadata accessor for SNError();
      sub_1DC8F65EC();
      sub_1DC8E7B68();
      uint64_t v14 = "Invalid model, classification models must have 'predictedProbabilitesName' property";
      goto LABEL_17;
    }
    id v27 = objc_msgSend(v9, sel_dataType);
    if (v27 == (id)65552 || v27 == (id)65568 || v27 == (id)65600)
    {

      return;
    }
    type metadata accessor for SNError();
    sub_1DC8F65EC();
    sub_1DC8E7B68();
    sub_1DCA23E10(v28, v29, (uint64_t)"Invalid model, expected input type to be floating point format (fixed-point audio formats are unsupported).");
    sub_1DCA240FC();

LABEL_8:
    return;
  }
  type metadata accessor for SNError();
  sub_1DC8F65EC();
  sub_1DC8E7B68();
  uint64_t v14 = "Invalid model, input feature must be one dimensional (for mono audio), or two dimensional (for multichannel audio).";
LABEL_17:
  sub_1DCA23E10(v12, v13, (uint64_t)v14);
  sub_1DCA240FC();
}

void sub_1DCA1D404()
{
}

id sub_1DCA1D470(uint64_t a1)
{
  type metadata accessor for SNMLModelAdapter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  type metadata accessor for AnySNMLModel();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = &off_1F37FEC00;
  type metadata accessor for SNMLModelHashableUncodableWrapper();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  v8[0] = v5;
  v8[1] = 0;
  char v9 = 0;
  id v6 = objc_allocWithZone(v1);
  return sub_1DCA1D534((uint64_t)v8);
}

id sub_1DCA1D534(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  v58[0] = *(void *)a1;
  v58[1] = v5;
  char v59 = v7;
  id v8 = v1;
  sub_1DCA1D994((uint64_t)v58);
  if (v2)
  {

    sub_1DC8823A0(v6, v5, v7);
    return (id)swift_deallocPartialClassInstance();
  }
  uint64_t v10 = v9;
  uint64_t v60 = v6;
  uint64_t v55 = v5;
  uint64_t v56 = (objc_class *)ObjectType;
  uint64_t v11 = swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(void))(v10 + 16);
  sub_1DCA23F5C();
  uint64_t v13 = (void *)v12();
  sub_1DCA1D094(v13);
  char v54 = v7;
  char v52 = v8;

  type metadata accessor for SNModelMetadataUtils();
  sub_1DCA23F5C();
  unint64_t v15 = (void *)v12();
  unsigned int v49 = sub_1DCB30BDC(v15, 16000);

  type metadata accessor for SNUtils();
  sub_1DCA23F5C();
  uint64_t v16 = (void *)v12();
  unint64_t v17 = sub_1DCB21C80(v16);

  uint64_t v18 = v12;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DCB88CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v20 = v60;
  if (!v19)
  {
    swift_bridgeObjectRelease();
    sub_1DC884E74();
    uint64_t v24 = sub_1DC883884();
    sub_1DC9C08D4(v24, v25);

    sub_1DC8823A0(v20, v55, v54);
    swift_unknownObjectRelease();
    return (id)swift_deallocPartialClassInstance();
  }
  if (__OFSUB__(v19, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_1DC8A42E0(v19 - 1, (v17 & 0xC000000000000001) == 0, v17);
  if ((v17 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v21 = (id)MEMORY[0x1E01A7AE0](v19 - 1, v17);
    goto LABEL_11;
  }
  id v21 = *(id *)(v17 + 8 * (v19 - 1) + 32);
LABEL_11:
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_integerValue);

  uint64_t v47 = v11;
  unint64_t v23 = (void *)((uint64_t (*)(uint64_t, uint64_t))v18)(v11, v10);
  sub_1DCB21F0C(v23, v49);
  id v44 = v26;

  id v27 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, v49);
  sub_1DC8AE910(v27);

  CMTimeValue v28 = sub_1DCB88628();
  CMTimeValue v31 = sub_1DCB22068(v28, v29, v30, v44);
  int v45 = v32;
  CMTimeValue v46 = v31;
  unint64_t v48 = HIDWORD(v32);
  uint64_t v50 = v33;
  uint64_t v34 = (void *)((uint64_t (*)(uint64_t, uint64_t))v18)(v47, v10);
  sub_1DCB223BC(v34);
  uint64_t v51 = v35;

  uint64_t v36 = (unsigned char *)sub_1DC8A6800();
  swift_unknownObjectRelease();

  uint64_t v37 = *(void *)&v36[OBJC_IVAR____SNTimeDurationConstraint_impl];
  uint64_t v38 = *(void *)&v36[OBJC_IVAR____SNTimeDurationConstraint_impl + 8];
  uint64_t v39 = *(void *)&v36[OBJC_IVAR____SNTimeDurationConstraint_impl + 16];
  uint64_t v40 = *(void *)&v36[OBJC_IVAR____SNTimeDurationConstraint_impl + 24];
  uint64_t v42 = *(void *)&v36[OBJC_IVAR____SNTimeDurationConstraint_impl + 32];
  uint64_t v41 = *(void *)&v36[OBJC_IVAR____SNTimeDurationConstraint_impl + 40];
  char v53 = v36[OBJC_IVAR____SNTimeDurationConstraint_impl + 48];
  sub_1DC88245C(v37, v38, v39, v40, v42, v41, v53);

  unsigned int v43 = &v52[OBJC_IVAR____SNClassifySoundRequest_impl];
  *(void *)unsigned int v43 = v60;
  *((void *)v43 + 1) = v55;
  v43[16] = v54;
  *((void *)v43 + 3) = v46;
  *((_DWORD *)v43 + 8) = v45;
  *((_DWORD *)v43 + 9) = v48;
  *((void *)v43 + 5) = v50;
  *((void *)v43 + 6) = 0x3FE0000000000000;
  *((void *)v43 + 7) = v37;
  *((void *)v43 + 8) = v38;
  *((void *)v43 + 9) = v39;
  *((void *)v43 + 10) = v40;
  *((void *)v43 + 11) = v42;
  *((void *)v43 + 12) = v41;
  v43[104] = v53;
  *((void *)v43 + 14) = v51;

  v57.receiver = v52;
  v57.super_class = v56;
  return objc_msgSendSuper2(&v57, sel_init);
}

uint64_t sub_1DCA1D994(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1DC89DCDC();
    uint64_t v1 = (void *)sub_1DCB87908();
    uint64_t v2 = sub_1DC89DCDC();
    sub_1DC8823A0(v2, v3, 1);
    sub_1DCA1DA94();
  }
  else
  {
    swift_retain();
  }
  return sub_1DC89DCDC();
}

uint64_t sub_1DCA1DA2C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16) != 1) {
    return 0;
  }
  uint64_t v2 = *(void *)a1;
  uint64_t v1 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1DCB87908();
  sub_1DC8823A0(v2, v1, 1);
  return v3;
}

uint64_t sub_1DCA1DA94()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = sub_1DCB87938();
  uint64_t v4 = v3;
  if (v2 == sub_1DCB87938() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_1DCB89018();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      uint64_t v8 = sub_1DCB87938();
      char v10 = sub_1DC9AC3CC(v8, v9);
      if (v0)
      {
        swift_bridgeObjectRelease();
        type metadata accessor for SNError();
        sub_1DCB88A98();
        swift_bridgeObjectRelease();
        sub_1DCB87938();
        sub_1DCB87A18();
        swift_bridgeObjectRelease();
        unint64_t v11 = sub_1DCA23EE4();
        sub_1DCA14B2C(v11, v12, v13, v14, v15, v16);
        swift_bridgeObjectRelease();
        swift_willThrow();
      }
      else
      {
        char v21 = v10;
        uint64_t v22 = swift_bridgeObjectRelease();
        unint64_t v23 = (void *)MEMORY[0x1E01A8D20](v22);
        uint64_t v24 = (void *)MEMORY[0x1E01A8D20]();
        if (qword_1EAA9D1E0 != -1) {
          swift_once();
        }
        uint64_t v25 = swift_allocObject();
        *(unsigned char *)(v25 + 16) = v21;
        MEMORY[0x1F4188790](v25);
        swift_retain();
        sub_1DCAC3890();
        uint64_t v1 = v26;
        swift_release();
        swift_release();
      }
      return v1;
    }
  }
  if (sub_1DC984DE4()) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = 0;
  }
  id v18 = sub_1DC9AD840(0x23u, (void *)v17);
  if (!v0)
  {
    id v19 = v18;
    type metadata accessor for SNMLModelAdapter();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v19;
  }
  return v1;
}

uint64_t (*sub_1DCA1DDA4(uint64_t a1, uint64_t (*a2)(uint64_t)))(uint64_t)
{
  if (!a1)
  {
    sub_1DC957690();
    uint64_t v6 = sub_1DC883884();
    sub_1DC9C08D4(v6, v7);
    goto LABEL_5;
  }
  uint64_t v3 = a2;
  swift_getObjectType();
  uint64_t v5 = v3(a1);
  if (v2)
  {
LABEL_5:
    swift_getObjectType();
    sub_1DCA24114();
    swift_deallocPartialClassInstance();
    return v3;
  }
  uint64_t v3 = (uint64_t (*)(uint64_t))v5;
  swift_deallocPartialClassInstance();
  return v3;
}

id sub_1DCA1DE5C(void *a1)
{
  v7[0] = sub_1DCB87938();
  v7[1] = v3;
  char v8 = 1;
  id v4 = objc_allocWithZone(v1);
  swift_bridgeObjectRetain();
  id v5 = sub_1DCA1D534((uint64_t)v7);
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t (*sub_1DCA1DEF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t)))(uint64_t)
{
  id v7 = a3;
  return sub_1DCA1DDA4((uint64_t)a3, a5);
}

double sub_1DCA1DFAC()
{
  return *(double *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 48);
}

void sub_1DCA1DFC0(double a1)
{
  if (a1 >= 0.0 && a1 < 1.0)
  {
    *(double *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 48) = a1;
  }
  else
  {
    uint64_t v3 = sub_1DCB87938();
    uint64_t v5 = v4;
    sub_1DCA22914();
    sub_1DC883884();
    uint64_t *v6 = v3;
    v6[1] = v5;
    size_t v6[2] = 0xD00000000000003ELL;
    uint64_t v6[3] = 0x80000001DCB96400;
    swift_willThrow();
  }
}

uint64_t sub_1DCA1E12C()
{
  return *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 24);
}

void sub_1DCA1E1AC(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  uint64_t v4 = v3;
  type metadata accessor for SNUtils();
  id v8 = sub_1DCA1E248();
  CMTimeValue v9 = sub_1DCB22068(a1, a2, a3, v8);
  uint64_t v11 = v10;
  uint64_t v13 = v12;

  uint64_t v14 = (void *)(v4 + OBJC_IVAR____SNClassifySoundRequest_impl);
  v14[3] = v9;
  void v14[4] = v11;
  v14[5] = v13;
}

id sub_1DCA1E248()
{
  uint64_t v1 = type metadata accessor for _SNTimeDurationConstraint();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 64);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 72);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 80);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 88);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 96);
  char v7 = *(unsigned char *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
  v11[0] = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 56);
  v11[1] = v2;
  void v11[2] = v3;
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  char v15 = v7;
  sub_1DC88245C(v11[0], v2, v3, v4, v5, v6, v7);
  id v8 = sub_1DC8A5DD8((uint64_t)v11);
  uint64_t v12 = v1;
  v11[0] = (uint64_t)v8;
  id v9 = objc_allocWithZone((Class)SNTimeDurationConstraint);
  return sub_1DCA21A88(v11);
}

uint64_t sub_1DCA1E36C()
{
  return swift_bridgeObjectRetain();
}

double *sub_1DCA1E380()
{
  swift_getObjectType();
  uint64_t v2 = (double *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl);
  sub_1DCA24064();
  sub_1DCA1D994(v3);
  if (!v1)
  {
    sub_1DCA24064();
    uint64_t v5 = sub_1DCA1DA2C(v4);
    if (!v5) {
      uint64_t v5 = sub_1DCB87908();
    }
    uint64_t v6 = (void *)v5;
    double v7 = v2[6];
    uint64_t v8 = *((void *)v2 + 3);
    uint64_t v9 = *((void *)v2 + 4);
    CMTimeEpoch v10 = *((void *)v2 + 5);
    type metadata accessor for SNSoundClassifier();
    uint64_t v2 = (double *)swift_allocObject();
    uint64_t v11 = sub_1DC89DCDC();
    sub_1DCA1F798(v11, v12, v7, v8, v9, v10, v6);
  }
  return v2;
}

id _SNClassifySoundRequest.copy(with:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = v2 + OBJC_IVAR____SNClassifySoundRequest_impl;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 8);
  char v8 = *(unsigned char *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 16);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 24);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 40);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 48);
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____SNClassifySoundRequest_impl + 56);
  uint64_t v13 = *(void *)(v5 + 64);
  uint64_t v14 = *(void *)(v5 + 72);
  uint64_t v15 = *(void *)(v5 + 80);
  uint64_t v16 = *(void *)(v5 + 88);
  uint64_t v17 = *(void *)(v5 + 96);
  char v18 = *(unsigned char *)(v5 + 104);
  uint64_t v19 = *(void *)(v5 + 112);
  v21[0] = v6;
  v21[1] = v7;
  char v22 = v8;
  uint64_t v23 = v9;
  uint64_t v24 = *(void *)(v5 + 32);
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  uint64_t v27 = v12;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  uint64_t v31 = v16;
  uint64_t v32 = v17;
  char v33 = v18;
  uint64_t v34 = v19;
  sub_1DC88244C(v6, v7, v8);
  sub_1DC88245C(v12, v13, v14, v15, v16, v17, v18);
  swift_bridgeObjectRetain();
  id result = sub_1DCA1CE98((uint64_t)v21);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

uint64_t _SNClassifySoundRequest.hash.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 8);
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 16);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 96);
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 88);
  char v5 = *(unsigned char *)(v0 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
  sub_1DCB891A8();
  sub_1DC88244C(v1, v2, v3);
  sub_1DCA23FF4();
  sub_1DC88245C(v6, v7, v8, v9, v16, v4, v5);
  swift_bridgeObjectRetain();
  sub_1DCA19528();
  uint64_t v10 = sub_1DCB891F8();
  sub_1DC8823A0(v1, v2, v3);
  sub_1DCA23FF4();
  sub_1DC8823B0(v11, v12, v13, v14, v16, v4, v5);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _SNClassifySoundRequest.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_1DC87E920(a1, (uint64_t)&v41);
  if (v42)
  {
    sub_1DC87E9CC(&v41, v40);
    sub_1DC87E9DC((uint64_t)v40, (uint64_t)&v29);
    if (swift_dynamicCast())
    {
      char v3 = (void *)v18;
      char v4 = *(unsigned char *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 16);
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 24);
      uint64_t v6 = *(void *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 40);
      uint64_t v7 = *(void *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 48);
      char v8 = *(unsigned char *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
      uint64_t v9 = *(void *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 112);
      long long v29 = *(_OWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl);
      char v30 = v4;
      uint64_t v31 = v5;
      uint64_t v32 = *(void *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 32);
      uint64_t v33 = v6;
      uint64_t v34 = v7;
      long long v35 = *(_OWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 56);
      long long v36 = *(_OWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 72);
      long long v37 = *(_OWORD *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl + 88);
      char v38 = v8;
      uint64_t v39 = v9;
      uint64_t v10 = v18 + OBJC_IVAR____SNClassifySoundRequest_impl;
      char v11 = *(unsigned char *)(v18 + OBJC_IVAR____SNClassifySoundRequest_impl + 16);
      uint64_t v12 = *(void *)(v18 + OBJC_IVAR____SNClassifySoundRequest_impl + 24);
      uint64_t v13 = *(void *)(v18 + OBJC_IVAR____SNClassifySoundRequest_impl + 40);
      uint64_t v14 = *(void *)(v18 + OBJC_IVAR____SNClassifySoundRequest_impl + 48);
      LOBYTE(v5) = *(unsigned char *)(v18 + OBJC_IVAR____SNClassifySoundRequest_impl + 104);
      uint64_t v15 = *(void *)(v18 + OBJC_IVAR____SNClassifySoundRequest_impl + 112);
      long long v18 = *(_OWORD *)(v18 + OBJC_IVAR____SNClassifySoundRequest_impl);
      char v19 = v11;
      uint64_t v20 = v12;
      uint64_t v21 = *(void *)(v10 + 32);
      uint64_t v22 = v13;
      uint64_t v23 = v14;
      long long v24 = *(_OWORD *)(v10 + 56);
      long long v25 = *(_OWORD *)(v10 + 72);
      long long v26 = *(_OWORD *)(v10 + 88);
      char v27 = v5;
      uint64_t v28 = v15;
      char v16 = sub_1DCA184B4((uint64_t)&v29, (uint64_t)&v18);
    }
    else
    {
      char v16 = 0;
    }
    sub_1DC8818D0((uint64_t)v40);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

id _SNClassifySoundRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return _SNClassifySoundRequest.init(coder:)(a1);
}

id _SNClassifySoundRequest.init(coder:)(void *a1)
{
  id v3 = v1;
  sub_1DC87DB28();
  swift_getObjectType();

  uint64_t v21 = v24;
  uint64_t v22 = v23;
  char v20 = v25;
  sub_1DC88244C(v23, v24, v25);
  sub_1DC9D9240();
  sub_1DC88245C(v4, v5, v6, v7, v8, v9, v10);
  swift_bridgeObjectRetain();
  id v11 = sub_1DCA1CE98((uint64_t)&v23);

  sub_1DC8823A0(v22, v21, v20);
  sub_1DC9D9240();
  sub_1DC8823B0(v12, v13, v14, v15, v16, v17, v18);
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return v11;
}

Swift::Void __swiftcall _SNClassifySoundRequest.encode(with:)(NSCoder with)
{
  memcpy(__dst, (const void *)(v1 + OBJC_IVAR____SNClassifySoundRequest_impl), sizeof(__dst));
  sub_1DC8823BC((uint64_t)__dst);
  sub_1DC87BBD0(__dst, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1DCA21138((uint64_t)__dst);
}

uint64_t static _SNClassifySoundRequest.supportsSecureCoding.getter()
{
  return 1;
}

void sub_1DCA1EC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v30)(void *__return_ptr, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  void v57[6];
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66[8];
  uint64_t v67;
  uint64_t v68;
  void v69[3];
  char v70[48];
  uint64_t v71;
  unsigned char v72[16];
  unsigned char v73[120];
  void v74[6];
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  uint64_t v81;
  char v82;

  sub_1DC88D6B0();
  a19 = v22;
  a20 = v23;
  uint64_t v55 = v24;
  uint64_t v56 = v21;
  swift_getObjectType();
  sub_1DC87E988(&qword_1EAAA4248);
  sub_1DC89D4E0();
  char v53 = v26;
  char v54 = v25;
  MEMORY[0x1F4188790](v25);
  sub_1DC88D550();
  char v52 = v27;
  memcpy(v73, (const void *)(v20 + OBJC_IVAR____SNClassifySoundRequest_impl), sizeof(v73));
  sub_1DC8823BC((uint64_t)v73);
  uint64_t v28 = MGGetProductType();
  sub_1DC983D28(v28, v66);
  sub_1DC978E04((uint64_t)v66, (uint64_t)v70, (uint64_t *)&unk_1EAA9E950);
  if (v71)
  {
    char v29 = v70[0];
    sub_1DC8CBC38(v66);
    sub_1DC9836F8(v29, (uint64_t)&v67);
    char v30 = (void (*)(void *__return_ptr, uint64_t))v69[1];
    sub_1DC978E04((uint64_t)&v68, (uint64_t)v72, (uint64_t *)&unk_1EAAA4140);
    swift_retain();
    sub_1DC8CBCC4((uint64_t)v72);
    sub_1DC978E04((uint64_t)v69, (uint64_t)&a10, &qword_1EAA9E980);
    sub_1DC8CBD50((uint64_t)&a10);
    uint64_t v31 = swift_release();
    v30(v57, v31);
    swift_release();
    uint64_t v32 = v57[0];
    uint64_t v33 = v57[1];
    uint64_t v34 = v57[2];
    long long v35 = v57[3];
    long long v36 = v57[4];
    long long v37 = v57[5];
    char v38 = v58;
    uint64_t v39 = v59;
    uint64_t v40 = v60;
    long long v41 = v61;
    uint64_t v42 = v62;
    unsigned int v43 = v63;
    id v44 = v64;
    int v45 = v65;
  }
  else
  {
    if (qword_1EAA9D260 != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)algn_1EAAFFAA8;
    long long v35 = qword_1EAAFFAB8;
    uint64_t v50 = qword_1EAAFFAB0;
    uint64_t v51 = qword_1EAAFFAA0;
    long long v37 = qword_1EAAFFAC8;
    unsigned int v49 = qword_1EAAFFAC0;
    uint64_t v47 = byte_1EAAFFAD1;
    unint64_t v48 = byte_1EAAFFAD0;
    uint64_t v40 = byte_1EAAFFAD2;
    long long v41 = byte_1EAAFFAD3;
    uint64_t v42 = byte_1EAAFFAD4;
    unsigned int v43 = byte_1EAAFFAD5;
    id v44 = qword_1EAAFFAD8;
    int v45 = byte_1EAAFFAE0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = v47;
    char v38 = v48;
    long long v36 = v49;
    uint64_t v34 = v50;
    uint64_t v32 = v51;
  }
  v74[0] = v32;
  v74[1] = v33;
  v74[2] = v34;
  v74[3] = v35;
  v74[4] = v36;
  v74[5] = v37;
  int v75 = v38;
  __int16 v76 = v39;
  uint64_t v77 = v40;
  char v78 = v41;
  char v79 = v42;
  char v80 = v43;
  char v81 = v44;
  uint64_t v82 = v45;
  CMTimeValue v46 = sub_1DC94A160((uint64_t)v73, (uint64_t)v74, v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCA21138((uint64_t)v73);
  if (!v56)
  {
    v57[0] = v46;
    swift_retain();
    sub_1DC87E988(&qword_1EAAA42C8);
    sub_1DC87E988(&qword_1EAA9E960);
    sub_1DC8E7358((uint64_t)&qword_1EAAA42D0);
    sub_1DCB873D8();
    swift_release();
    sub_1DC8E7358((uint64_t)&qword_1EAAA42D8);
    sub_1DCB873A8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
  }
  sub_1DC88D674();
}