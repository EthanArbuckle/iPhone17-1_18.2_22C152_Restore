uint64_t sub_1000049FC()
{
  swift_getWitnessTable();
  return sub_10009CDD0();
}

uint64_t sub_100004A48()
{
  return sub_10009CDC0();
}

Swift::Int sub_100004AA0()
{
  return sub_10009E300();
}

void *sub_100004B08@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100004B18(void *a1@<X8>)
{
  *a1 = *v1;
}

void type metadata accessor for AKAppleIDAuthenticationMode(uint64_t a1)
{
}

void type metadata accessor for CWFNearbyShareableStatus(uint64_t a1)
{
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void sub_100004B74(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100004BBC()
{
  swift_getWitnessTable();

  return sub_10009CDB0();
}

uint64_t sub_100004C28()
{
  return sub_100004C90(&qword_1000D54D0);
}

uint64_t sub_100004C5C()
{
  return sub_100004C90(&qword_1000D54D8);
}

uint64_t sub_100004C90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CFString(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100004CDC()
{
  id v13 = *(id *)(v0 + 16);
  sub_10009C9A0();
  swift_allocObject();
  sub_10009C990();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  sub_10000D308((uint64_t *)&unk_1000D5608);
  sub_10000FE80();
  uint64_t v1 = sub_10009C980();
  uint64_t v3 = v2;
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  uint64_t v7 = v16;
  uint64_t v8 = v17;
  sub_10000FD00(v14, v15);
  swift_release();
  uint64_t v14 = v1;
  uint64_t v15 = v3;
  uint64_t v4 = sub_10009E250();
  sub_10000FF48((uint64_t)&v14);
  if (qword_1000D5278 != -1) {
    swift_once();
  }
  NSString v5 = sub_10009DC70();
  objc_msgSend(v13, "setValue:forKey:", v4, v5, v7, v8, v9, v10, v11, v12);

  return swift_unknownObjectRelease();
}

double sub_100004EFC@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

void (*sub_100004F90(void *a1))(uint64_t **a1, char a2)
{
  long long v3 = malloc(0xE8uLL);
  *a1 = v3;
  v3[28] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  long long v4 = *((_OWORD *)v3 + 8);
  long long v5 = *((_OWORD *)v3 + 9);
  long long v6 = *((_OWORD *)v3 + 10);
  long long v7 = *((_OWORD *)v3 + 11);
  long long v8 = *((_OWORD *)v3 + 12);
  long long v9 = *((_OWORD *)v3 + 13);
  *(_OWORD *)long long v3 = *((_OWORD *)v3 + 7);
  *((_OWORD *)v3 + 1) = v4;
  *((_OWORD *)v3 + 2) = v5;
  *((_OWORD *)v3 + 3) = v6;
  *((_OWORD *)v3 + 4) = v7;
  *((_OWORD *)v3 + 5) = v8;
  *((_OWORD *)v3 + 6) = v9;
  return sub_100005058;
}

void sub_100005058(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = **a1;
  uint64_t v4 = (*a1)[1];
  uint64_t v13 = (*a1)[2];
  uint64_t v15 = (*a1)[3];
  uint64_t v14 = (*a1)[4];
  uint64_t v5 = (*a1)[6];
  uint64_t v17 = (*a1)[5];
  uint64_t v6 = (*a1)[7];
  uint64_t v7 = (*a1)[8];
  uint64_t v8 = (*a1)[9];
  uint64_t v9 = (*a1)[11];
  uint64_t v11 = (*a1)[12];
  uint64_t v12 = (*a1)[10];
  uint64_t v10 = (*a1)[13];
  swift_getKeyPath();
  swift_getKeyPath();
  v2[14] = v3;
  v2[15] = v4;
  v2[16] = v13;
  v2[17] = v15;
  v2[18] = v14;
  v2[19] = v17;
  v2[20] = v5;
  v2[21] = v6;
  v2[22] = v7;
  v2[23] = v8;
  v2[24] = v12;
  v2[25] = v9;
  v2[26] = v11;
  v2[27] = v10;
  swift_retain();
  if (a2)
  {
    sub_10000FDF0(v3, v4);
    sub_10009CF40();
    sub_100004CDC();
    sub_10000FD00(*v2, v2[1]);
  }
  else
  {
    sub_10009CF40();
    sub_100004CDC();
  }

  free(v2);
}

uint64_t sub_1000051F4()
{
  uint64_t v1 = sub_10009CE60();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 16);
  if (qword_1000D5278 != -1) {
    swift_once();
  }
  NSString v6 = sub_10009DC70();
  id v7 = [v5 valueForKey:v6];

  if (v7)
  {
    sub_10009E000();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v96, 0, sizeof(v96));
  }
  sub_100010800((uint64_t)v96, (uint64_t)&v80, &qword_1000D58B8);
  if (!v83) {
    return sub_100010864((uint64_t)&v80, &qword_1000D58B8);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    v76 = v4;
    uint64_t v69 = v2;
    uint64_t v70 = v1;
    uint64_t v63 = v0;
    uint64_t v9 = v94;
    unint64_t v10 = v95;
    sub_10009C970();
    swift_allocObject();
    sub_10009C960();
    sub_1000108C0();
    uint64_t v62 = v9;
    unint64_t v61 = v10;
    sub_10009C950();
    swift_release();
    uint64_t v11 = v80;
    uint64_t v78 = v81;
    uint64_t v12 = v82;
    uint64_t v79 = v83;
    uint64_t v14 = v88;
    uint64_t v13 = v89;
    uint64_t v16 = v90;
    uint64_t v15 = v91;
    uint64_t v17 = v92;
    uint64_t v18 = v93;
    uint64_t v59 = v84;
    uint64_t v65 = v86;
    uint64_t v71 = v87;
    uint64_t v66 = v85;
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v19 = v70;
    uint64_t v20 = sub_10000D690(v70, (uint64_t)qword_1000E3488);
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v76, v20, v19);
    uint64_t v77 = v13;
    uint64_t v21 = v78;
    uint64_t v22 = v79;
    uint64_t v23 = v59;
    sub_10000FDF0(v11, v78);
    uint64_t v75 = v18;
    uint64_t v74 = v17;
    uint64_t v73 = v15;
    uint64_t v72 = v16;
    uint64_t v67 = v14;
    uint64_t v64 = v11;
    uint64_t v24 = v11;
    uint64_t v78 = v21;
    uint64_t v25 = v21;
    uint64_t v68 = v12;
    uint64_t v79 = v22;
    uint64_t v26 = v23;
    uint64_t v27 = v66;
    uint64_t v28 = v65;
    uint64_t v29 = v71;
    sub_10000FDF0(v24, v25);
    v30 = sub_10009CE40();
    os_log_type_t v31 = sub_10009DEA0();
    int v32 = v31;
    v60 = v30;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      int v58 = v32;
      uint64_t v34 = v33;
      uint64_t v57 = swift_slowAlloc();
      v96[0] = v57;
      *(_DWORD *)uint64_t v34 = 136315394;
      uint64_t v35 = v29;
      uint64_t v36 = v28;
      uint64_t v37 = v27;
      uint64_t v38 = v79;
      uint64_t v39 = v68;
      uint64_t v40 = v78;
      uint64_t v41 = v64;
      uint64_t v80 = sub_10000DBA8(0x6F63634164616F6CLL, 0xED00002928746E75, v96);
      sub_10009DFC0();
      *(_WORD *)(v34 + 12) = 2082;
      v56[1] = (uint8_t *)(v34 + 14);
      v56[0] = (uint8_t *)v34;
      uint64_t v42 = v41;
      uint64_t v80 = v41;
      uint64_t v81 = v40;
      uint64_t v43 = v40;
      uint64_t v82 = v39;
      uint64_t v83 = v38;
      uint64_t v84 = v26;
      uint64_t v85 = v37;
      uint64_t v44 = v37;
      uint64_t v86 = v36;
      uint64_t v87 = v35;
      uint64_t v88 = v67;
      uint64_t v89 = v77;
      uint64_t v90 = v72;
      uint64_t v91 = v73;
      uint64_t v92 = v74;
      uint64_t v93 = v75;
      uint64_t v45 = v42;
      sub_10000FDF0(v42, v43);
      sub_10000D308((uint64_t *)&unk_1000D5608);
      uint64_t v46 = sub_10009DCF0();
      uint64_t v80 = sub_10000DBA8(v46, v47, v96);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      uint64_t v48 = v67;
      uint64_t v49 = v68;
      uint64_t v50 = v71;
      sub_10000FD00(v45, v43);
      uint64_t v29 = v50;
      uint64_t v51 = v43;
      uint64_t v52 = v49;
      uint64_t v53 = v44;
      sub_10000FD00(v45, v51);
      v54 = v60;
      _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v58, "%s Account retrieved from UserDefaults: %{public}s", v56[0], 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v69 + 8))(v76, v70);
    }
    else
    {
      sub_10000FD00(v64, v78);
      uint64_t v48 = v67;
      uint64_t v55 = v64;
      uint64_t v52 = v68;
      sub_10000FD00(v64, v78);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v76, v70);
      uint64_t v36 = v28;
      uint64_t v53 = v27;
      uint64_t v45 = v55;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v80 = v45;
    uint64_t v81 = v78;
    uint64_t v82 = v52;
    uint64_t v83 = v79;
    uint64_t v84 = v26;
    uint64_t v85 = v53;
    uint64_t v86 = v36;
    uint64_t v87 = v29;
    uint64_t v88 = v48;
    uint64_t v89 = v77;
    uint64_t v90 = v72;
    uint64_t v91 = v73;
    uint64_t v92 = v74;
    uint64_t v93 = v75;
    swift_retain();
    sub_10009CF40();
    sub_100004CDC();
    return sub_10000EE7C(v62, v61);
  }
  return result;
}

void sub_100005B7C()
{
  id v7 = (id)sub_10000EB98();
  id v0 = [objc_allocWithZone((Class)DMTMobileGestaltBackedDeviceInformationPrimitives) init];
  NSString v1 = [v0 deviceUDID];

  if (!v1)
  {
    sub_10009DC80();
    NSString v1 = sub_10009DC70();
    swift_bridgeObjectRelease();
  }
  NSString v2 = sub_10009DC70();
  [v7 setValue:v1 forHTTPHeaderField:v2];

  objc_msgSend(v7, "ak_addClientInfoHeader");
  NSString v3 = sub_10009DC70();
  NSString v4 = sub_10009DC70();
  [v7 setValue:v3 forHTTPHeaderField:v4];

  NSString v5 = sub_10009DC70();
  NSString v6 = sub_10009DC70();
  objc_msgSend(v7, "ak_addAuthorizationHeaderWithServiceToken:forAltDSID:", v5, v6);

  sub_10009C910();
}

uint64_t sub_100005D64(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  uint64_t v4 = sub_10009C940();
  v3[22] = v4;
  v3[23] = *(void *)(v4 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  return _swift_task_switch(sub_100005E64, 0, 0);
}

uint64_t sub_100005E64()
{
  sub_10000FF9C((void *)(*(void *)(v0 + 168) + 24), *(void *)(*(void *)(v0 + 168) + 48));
  NSString v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v1;
  void *v1 = v0;
  v1[1] = sub_100005F30;
  return sub_100086218();
}

uint64_t sub_100005F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[27] = a1;
  v4[28] = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    NSString v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_1000060C4, 0, 0);
  }
}

uint64_t sub_1000060C4()
{
  v30 = v0;
  if (v0[28])
  {
    id v1 = [self ephemeralSessionConfiguration];
    v0[29] = v1;
    id v2 = objc_allocWithZone((Class)AKAppleIDSession);
    NSString v3 = sub_10009DC70();
    id v4 = [v2 initWithIdentifier:v3];

    if (v4)
    {
      objc_msgSend(v1, "set_appleIDContext:", v4);

      v0[30] = [self sessionWithConfiguration:v1];
      sub_100005B7C();
      swift_bridgeObjectRelease();
      if (qword_1000D51D8 != -1) {
        swift_once();
      }
      uint64_t v8 = v0[24];
      uint64_t v7 = v0[25];
      uint64_t v10 = v0[22];
      uint64_t v9 = v0[23];
      uint64_t v11 = sub_10009CE60();
      v0[31] = sub_10000D690(v11, (uint64_t)qword_1000E3488);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
      uint64_t v12 = sub_10009CE40();
      os_log_type_t v13 = sub_10009DEA0();
      BOOL v14 = os_log_type_enabled(v12, v13);
      uint64_t v15 = v0[23];
      uint64_t v16 = v0[24];
      if (v14)
      {
        uint64_t v28 = v0[22];
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136446210;
        v0[17] = sub_10009C900();
        sub_10000D308(&qword_1000D58B0);
        uint64_t v18 = sub_10009DCF0();
        v0[18] = sub_10000DBA8(v18, v19, &v29);
        sub_10009DFC0();
        swift_bridgeObjectRelease();
        uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v20(v16, v28);
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Authtoken request headers: %{public}s", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v20(v0[24], v0[22]);
      }

      v0[32] = v20;
      uint64_t v26 = (void *)swift_task_alloc();
      v0[33] = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_1000065DC;
      uint64_t v5 = v0[25];
      uint64_t v6 = 0;
    }
    else
    {
      __break(1u);
    }
    return NSURLSession.data(for:delegate:)(v5, v6);
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10009CE60();
    sub_10000D690(v21, (uint64_t)qword_1000E3488);
    uint64_t v22 = sub_10009CE40();
    os_log_type_t v23 = sub_10009DEB0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "No grand slam token found, unable to fetch nonce", v24, 2u);
      swift_slowDealloc();
    }

    uint64_t v25 = (void *)swift_task_alloc();
    v0[40] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_100006EC8;
    v25[16] = v0[21];
    return _swift_task_switch(sub_1000072B4, 0, 0);
  }
}

uint64_t sub_1000065DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)*v4;
  uint64_t v9 = (void *)*v4;
  v8[34] = a1;
  v8[35] = a2;
  v8[36] = a3;
  v8[37] = v3;
  swift_task_dealloc();
  if (v3)
  {
    return _swift_task_switch(sub_1000070BC, 0, 0);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v8[38] = v10;
    *uint64_t v10 = v9;
    v10[1] = sub_1000067D0;
    return sub_1000081C8(a1, a2, a3);
  }
}

uint64_t sub_1000067D0()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_100007194;
  }
  else {
    id v2 = sub_100006910;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100006910()
{
  uint64_t v38 = v0;
  unint64_t v1 = *(void *)(v0 + 280);
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v35 = (void *)(v0 + 16);
      uint64_t v3 = *(void *)(v0 + 272);
      if (v3 >> 32 < (int)v3) {
        __break(1u);
      }
      uint64_t v4 = *(void *)(v0 + 312);
      sub_10000EE24(*(void *)(v0 + 272), v1);
      swift_retain();
      uint64_t v5 = sub_10000E8EC((int)v3, v3 >> 32, v1 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10000EB58);
      unint64_t v7 = v6;
      uint64_t result = sub_10000EE7C(v3, v1);
      if (!v4) {
        goto LABEL_5;
      }
      break;
    case 2uLL:
      uint64_t v35 = (void *)(v0 + 16);
      uint64_t v13 = *(void *)(v0 + 312);
      uint64_t v14 = *(void *)(v0 + 272);
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v14 + 24);
      sub_10000EE24(v14, v1);
      swift_retain();
      swift_retain();
      uint64_t v5 = sub_10000E8EC(v15, v16, v1 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10000EB58);
      unint64_t v7 = v17;
      swift_release();
      uint64_t result = swift_release();
      if (!v13)
      {
LABEL_5:
        uint64_t v9 = *(void *)(v0 + 272);
        unint64_t v10 = *(void *)(v0 + 280);
        if (v7) {
          goto LABEL_13;
        }
        *(void *)(v0 + 96) = v9;
        *(void *)(v0 + 104) = v10;
        sub_10000EE24(v9, v10);
        sub_10000D308(&qword_1000D58A0);
        if (swift_dynamicCast())
        {
          sub_1000107E8((long long *)(v0 + 56), (uint64_t)v35);
          sub_10000FF9C(v35, *(void *)(v0 + 40));
          if (sub_10009E130())
          {
            uint64_t v12 = *(void *)(v0 + 272);
            unint64_t v11 = *(void *)(v0 + 280);
            sub_10000FF9C(v35, *(void *)(v0 + 40));
            sub_10009E120();
            sub_10000EE7C(v12, v11);
            uint64_t v5 = *(void *)(v0 + 112);
            unint64_t v7 = *(void *)(v0 + 120);
            sub_1000100E8((uint64_t)v35);
            goto LABEL_14;
          }
          sub_1000100E8((uint64_t)v35);
        }
        else
        {
          *(void *)(v0 + 88) = 0;
          *(_OWORD *)(v0 + 56) = 0u;
          *(_OWORD *)(v0 + 72) = 0u;
          sub_100010864(v0 + 56, &qword_1000D58A8);
        }
        uint64_t v28 = *(void *)(v0 + 272);
        unint64_t v29 = *(void *)(v0 + 280);
        uint64_t v5 = sub_10000E200(v28, v29);
        unint64_t v7 = v30;
        uint64_t v9 = v28;
        unint64_t v10 = v29;
        goto LABEL_13;
      }
      break;
    case 3uLL:
      uint64_t v2 = *(void *)(v0 + 272);
      *(void *)(v0 + 342) = 0;
      *(void *)(v0 + 348) = 0;
      goto LABEL_12;
    default:
      uint64_t v2 = *(void *)(v0 + 272);
      *(void *)(v0 + 328) = v2;
      *(_WORD *)(v0 + 336) = v1;
      *(unsigned char *)(v0 + 338) = BYTE2(v1);
      *(unsigned char *)(v0 + 339) = BYTE3(v1);
      *(unsigned char *)(v0 + 340) = BYTE4(v1);
      *(unsigned char *)(v0 + 341) = BYTE5(v1);
LABEL_12:
      uint64_t v5 = sub_10009DD10();
      unint64_t v7 = v18;
      uint64_t v9 = v2;
      unint64_t v10 = v1;
LABEL_13:
      sub_10000EE7C(v9, v10);
LABEL_14:
      swift_bridgeObjectRetain_n();
      unint64_t v19 = sub_10009CE40();
      os_log_type_t v20 = sub_10009DEA0();
      BOOL v21 = os_log_type_enabled(v19, v20);
      int v32 = *(void **)(v0 + 288);
      uint64_t v33 = *(void *)(v0 + 272);
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
      os_log_type_t v23 = *(void **)(v0 + 232);
      uint64_t v24 = *(void **)(v0 + 240);
      uint64_t v25 = *(void *)(v0 + 200);
      unint64_t v34 = *(void *)(v0 + 280);
      uint64_t v36 = *(void *)(v0 + 176);
      if (v21)
      {
        uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136380675;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 128) = sub_10000DBA8(v5, v7, &v37);
        sub_10009DFC0();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Decoded authorization token: '%{private}s'", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_10000EE7C(v33, v34);
        v31(v25, v36);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        sub_10000EE7C(v33, v34);

        v22(v25, v36);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v27 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
      uint64_t result = v27(v5, v7);
      break;
  }
  return result;
}

uint64_t sub_100006EC8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100006FF0, 0, 0);
}

uint64_t sub_100006FF0()
{
  sub_10000D6C8();
  swift_allocError();
  unsigned char *v1 = 3;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000070BC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  uint64_t v2 = *(void **)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 176);

  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100007194()
{
  unint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  uint64_t v5 = *(void **)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 176);

  sub_10000EE7C(v3, v1);
  v4(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100007294()
{
  *(void *)(v1 + 128) = v0;
  return _swift_task_switch(sub_1000072B4, 0, 0);
}

uint64_t sub_1000072B4()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  swift_retain();
  sub_10009CF40();
  sub_100004CDC();
  uint64_t v2 = sub_10000FF9C((void *)(v1 + 24), *(void *)(v1 + 48));
  uint64_t v3 = *v2;
  *(void *)(v0 + 136) = *(void *)(*v2 + 16);
  uint64_t v4 = *(void *)(v3 + 24);
  *(void *)(v0 + 144) = v4;
  *(void *)(v0 + 152) = swift_getObjectType();
  *(void *)(v0 + 160) = *(void *)(v4 + 32);
  *(void *)(v0 + 168) = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x5359000000000000;
  uint64_t v6 = sub_10009DE10();
  return _swift_task_switch(sub_1000073C4, v6, v5);
}

uint64_t sub_1000073C4()
{
  (*(void (**)(unint64_t, unint64_t, void, void))(v0 + 160))(0xD000000000000011, 0x80000001000A66A0, *(void *)(v0 + 152), *(void *)(v0 + 144));
  *(void *)(v0 + 176) = 0;
  return _swift_task_switch(sub_100007470, 0, 0);
}

uint64_t sub_100007470()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 128) + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 48) + **(int **)(v1 + 48));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100007738;
  return v5(ObjectType, v1);
}

uint64_t sub_100007570()
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  uint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEB0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to remove grand slam token on sign out.", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  uint64_t v5 = *(void *)(*(void *)(v0 + 128) + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5 + 48) + **(int **)(v5 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100007738;
  return v9(ObjectType, v5);
}

uint64_t sub_100007738()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10000782C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_10009C940();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000078F0, 0, 0);
}

uint64_t sub_1000078F0()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = (void *)sub_10000EB98();
  sub_10009C910();

  v11._object = (void *)0x80000001000A63C0;
  v9.value._countAndFlagsBits = v2;
  v9.value._object = v1;
  v11._countAndFlagsBits = 0xD000000000000012;
  sub_10009C930(v9, v11);
  sub_10009C8F0();
  v10.value._countAndFlagsBits = 0xD00000000000001FLL;
  v10.value._object = (void *)0x80000001000A63E0;
  v12._countAndFlagsBits = 0x2D746E65746E6F43;
  v12._object = (void *)0xEC00000065707954;
  sub_10009C930(v10, v12);
  id v4 = [self ephemeralSessionConfiguration];
  v0[9] = v4;
  v0[10] = [self sessionWithConfiguration:v4];
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100007A9C;
  uint64_t v6 = v0[8];
  return NSURLSession.data(for:delegate:)(v6, 0);
}

uint64_t sub_100007A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)*v4;
  Swift::String_optional v9 = (void *)*v4;
  v8[12] = a1;
  v8[13] = a2;
  v8[14] = a3;
  v8[15] = v3;
  swift_task_dealloc();
  if (v3)
  {
    return _swift_task_switch(sub_100008070, 0, 0);
  }
  else
  {
    Swift::String_optional v10 = (void *)swift_task_alloc();
    v8[16] = v10;
    *Swift::String_optional v10 = v9;
    v10[1] = sub_100007C40;
    return sub_1000081C8(a1, a2, a3);
  }
}

uint64_t sub_100007C40()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100008108;
  }
  else {
    uint64_t v2 = sub_100007D54;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100007D54()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[17];
  sub_10009C970();
  swift_allocObject();
  sub_10009C960();
  sub_100010794();
  sub_10009C950();
  if (v2)
  {
    unint64_t v3 = v0[13];
    uint64_t v4 = (void *)v0[14];
    uint64_t v5 = v0[12];
    uint64_t v7 = (void *)v0[9];
    uint64_t v6 = (void *)v0[10];
    (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);

    swift_release();
    sub_10000EE7C(v5, v3);
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  swift_release();
  uint64_t v10 = *(void *)(*v1 + 16);
  unint64_t v29 = v0;
  if (v10)
  {
    Swift::String v11 = (unsigned char *)(*v1 + 64);
    do
    {
      uint64_t v12 = *((void *)v11 - 4);
      uint64_t v13 = *((void *)v11 - 3);
      uint64_t v14 = *((void *)v11 - 2);
      uint64_t v15 = *((void *)v11 - 1);
      int v16 = *v11;
      if (!*v11 || v16 != 1)
      {
        char v17 = sub_10009E260();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_10000E2B4(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v19 = _swiftEmptyArrayStorage[2];
          unint64_t v18 = _swiftEmptyArrayStorage[3];
          if (v19 >= v18 >> 1) {
            sub_10000E2B4(v18 > 1, v19 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v19 + 1;
          os_log_type_t v20 = (char *)&_swiftEmptyArrayStorage[5 * v19];
          *((void *)v20 + 4) = v12;
          *((void *)v20 + 5) = v13;
          *((void *)v20 + 6) = v14;
          *((void *)v20 + 7) = v15;
          v20[64] = v16;
          goto LABEL_9;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_9:
      v11 += 40;
      --v10;
    }
    while (v10);
  }
  unint64_t v21 = v29[13];
  uint64_t v22 = v29[12];
  os_log_type_t v23 = (void *)v29[9];
  uint64_t v24 = (void *)v29[10];
  uint64_t v26 = v29[7];
  uint64_t v25 = v29[8];
  uint64_t v27 = v29[6];

  swift_bridgeObjectRelease();
  sub_10000EE7C(v22, v21);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void *))v29[1];
  return v28(_swiftEmptyArrayStorage);
}

uint64_t sub_100008070()
{
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100008108()
{
  unint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void **)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 48);

  sub_10000EE7C(v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1000081C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  sub_10009DCD0();
  v4[11] = swift_task_alloc();
  sub_10009CD30();
  v4[12] = swift_task_alloc();
  uint64_t v5 = sub_10009CD50();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_1000082E4, 0, 0);
}

uint64_t sub_1000082E4()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void **)(v0 + 72);
    uint64_t v8 = sub_10009CE60();
    sub_10000D690(v8, (uint64_t)qword_1000E3488);
    id v9 = v7;
    uint64_t v10 = sub_10009CE40();
    os_log_type_t v11 = sub_10009DEB0();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void **)(v0 + 72);
    if (v12)
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138543362;
      *(void *)(v0 + 16) = v13;
      id v15 = v13;
      sub_10009DFC0();
      *uint64_t v69 = v13;

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Account details request failed with response: %{public}@", v14, 0xCu);
      sub_10000D308(&qword_1000D5880);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v36 = *(void *)(v0 + 112);
    uint64_t v35 = *(void *)(v0 + 120);
    uint64_t v37 = *(void *)(v0 + 104);
    sub_10009CD10();
    sub_10000D8B0((uint64_t)&_swiftEmptyArrayStorage);
    sub_1000106C8();
    sub_10009CA60();
    sub_10009CD40();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    swift_willThrow();
    goto LABEL_44;
  }
  uint64_t v2 = (void *)v1;
  id v3 = *(id *)(v0 + 72);
  uint64_t v4 = (char *)[v2 statusCode];
  if (v4 != (char *)401)
  {
    if (v4 != (char *)403)
    {
      if ((unint64_t)(v4 - 300) >= 0xFFFFFFFFFFFFFF9CLL)
      {

        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
LABEL_45:
        return v39();
      }
      if (qword_1000D51D8 != -1) {
        swift_once();
      }
      uint64_t v26 = *(void **)(v0 + 72);
      uint64_t v27 = sub_10009CE60();
      sub_10000D690(v27, (uint64_t)qword_1000E3488);
      id v28 = v26;
      unint64_t v29 = sub_10009CE40();
      os_log_type_t v30 = sub_10009DEB0();
      BOOL v31 = os_log_type_enabled(v29, v30);
      int v32 = *(void **)(v0 + 72);
      if (v31)
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v68 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 138543362;
        *(void *)(v0 + 24) = v32;
        id v34 = v32;
        sub_10009DFC0();
        *uint64_t v68 = v32;

        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Account details request failed with response: %{public}@", v33, 0xCu);
        sub_10000D308(&qword_1000D5880);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v63 = *(void *)(v0 + 112);
      uint64_t v62 = *(void *)(v0 + 120);
      uint64_t v64 = *(void *)(v0 + 104);
      uint64_t v65 = *(void **)(v0 + 72);
      sub_10009CD20();
      sub_10000D8B0((uint64_t)&_swiftEmptyArrayStorage);
      sub_1000106C8();
      sub_10009CA60();
      sub_10009CD40();
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
      swift_willThrow();

LABEL_44:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_45;
    }
    sub_10009DCC0();
    uint64_t v5 = sub_10009DCA0();
    if (v6)
    {
      if (v5 == 0xD000000000000010 && v6 == 0x80000001000A6730)
      {
        swift_bridgeObjectRelease();
LABEL_29:
        if (qword_1000D51D8 != -1) {
          swift_once();
        }
        uint64_t v41 = *(void **)(v0 + 72);
        uint64_t v42 = sub_10009CE60();
        sub_10000D690(v42, (uint64_t)qword_1000E3488);
        id v43 = v41;
        uint64_t v44 = sub_10009CE40();
        os_log_type_t v45 = sub_10009DEB0();
        BOOL v46 = os_log_type_enabled(v44, v45);
        unint64_t v47 = *(void **)(v0 + 72);
        if (v46)
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v70 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 138543362;
          *(void *)(v0 + 48) = v47;
          id v49 = v47;
          sub_10009DFC0();
          *uint64_t v70 = v47;

          _os_log_impl((void *)&_mh_execute_header, v44, v45, "An administrator needs to accept the updated Terms and Conditions: %{public}@", v48, 0xCu);
          sub_10000D308(&qword_1000D5880);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        v60 = *(void **)(v0 + 72);
        sub_10000D6C8();
        swift_allocError();
        *uint64_t v66 = 0;
LABEL_43:
        swift_willThrow();

        goto LABEL_44;
      }
      char v40 = sub_10009E260();
      swift_bridgeObjectRelease();
      if (v40) {
        goto LABEL_29;
      }
    }
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v50 = *(void **)(v0 + 72);
    uint64_t v51 = sub_10009CE60();
    sub_10000D690(v51, (uint64_t)qword_1000E3488);
    id v52 = v50;
    uint64_t v53 = sub_10009CE40();
    os_log_type_t v54 = sub_10009DEB0();
    BOOL v55 = os_log_type_enabled(v53, v54);
    v56 = *(void **)(v0 + 72);
    if (v55)
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      int v58 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 138543362;
      *(void *)(v0 + 40) = v56;
      id v59 = v56;
      sub_10009DFC0();
      *int v58 = v56;

      _os_log_impl((void *)&_mh_execute_header, v53, v54, "This user does not have privileges to add devices. signed in failed: %{public}@", v57, 0xCu);
      sub_10000D308(&qword_1000D5880);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    v60 = *(void **)(v0 + 72);
    sub_10000D6C8();
    swift_allocError();
    *unint64_t v61 = 1;
    goto LABEL_43;
  }
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  int v16 = *(void **)(v0 + 72);
  uint64_t v17 = sub_10009CE60();
  sub_10000D690(v17, (uint64_t)qword_1000E3488);
  id v18 = v16;
  unint64_t v19 = sub_10009CE40();
  os_log_type_t v20 = sub_10009DEB0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = *(void **)(v0 + 72);
  if (v21)
  {
    os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v23 = 138543362;
    *(void *)(v0 + 32) = v22;
    id v25 = v22;
    sub_10009DFC0();
    *uint64_t v24 = v22;

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "The grand slam token expired, the user has to sign in again. response: %{public}@", v23, 0xCu);
    sub_10000D308(&qword_1000D5880);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v38;
  *uint64_t v38 = v0;
  v38[1] = sub_100008D44;
  v38[16] = *(void *)(v0 + 80);
  return _swift_task_switch(sub_1000072B4, 0, 0);
}

uint64_t sub_100008D44()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100008E40, 0, 0);
}

uint64_t sub_100008E40()
{
  uint64_t v1 = *(void **)(v0 + 72);
  sub_10000D6C8();
  swift_allocError();
  *uint64_t v2 = 5;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100008EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D5860);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_10000D308(&qword_1000D5820);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D5828);
  sub_10009CF10();
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_10000FFE0();
  swift_retain();
  uint64_t v13 = sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)(a2 + 96) = v13;
  return swift_release();
}

void sub_100009140(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v5 = sub_10000D308(&qword_1000D5860);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  id v49 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v56 = a1[2];
  uint64_t v57 = v11;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  uint64_t v63 = a1[5];
  uint64_t v64 = v13;
  uint64_t v54 = a1[6];
  uint64_t v55 = v14;
  uint64_t v15 = a1[7];
  uint64_t v16 = a1[8];
  uint64_t v61 = a1[9];
  uint64_t v62 = v15;
  uint64_t v52 = a1[10];
  uint64_t v53 = v16;
  uint64_t v17 = a1[12];
  uint64_t v60 = a1[11];
  uint64_t v58 = a1[13];
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_10009CE60();
  uint64_t v59 = sub_10000D690(v18, (uint64_t)qword_1000E3488);
  unint64_t v19 = sub_10009CE40();
  os_log_type_t v20 = sub_10009DEA0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v50 = v5;
  uint64_t v51 = a2;
  uint64_t v48 = v10;
  if (v21)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v65 = sub_10000DBA8(0xD000000000000032, 0x80000001000A66F0, v66);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s account updated", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (v12)
  {
    int v46 = v17 & 1;
    uint64_t v23 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = v58;
    swift_bridgeObjectRetain();
    id v25 = sub_10009CE40();
    os_log_type_t v26 = sub_10009DEA0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      v66[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v65 = sub_10000DBA8(0xD000000000000032, 0x80000001000A66F0, v66);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s we have an account, user signed in", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v29 = v50;
    uint64_t v28 = v51;
    uint64_t v31 = (uint64_t)v48;
    os_log_type_t v30 = v49;
    uint64_t v32 = v47;
    if (*(void *)(v51 + 96))
    {
      swift_retain();
      sub_10009CE80();
      swift_release();
    }
    uint64_t v33 = sub_10009DE70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 1, 1, v33);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v30, v32, v29);
    unint64_t v34 = (*(unsigned __int8 *)(v6 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = 0;
    *(void *)(v35 + 24) = 0;
    uint64_t v36 = v57;
    *(void *)(v35 + 32) = v28;
    *(void *)(v35 + 40) = v36;
    uint64_t v37 = v56;
    *(void *)(v35 + 48) = v23;
    *(void *)(v35 + 56) = v37;
    uint64_t v38 = v55;
    *(void *)(v35 + 64) = v64;
    *(void *)(v35 + 72) = v38;
    uint64_t v39 = v54;
    *(void *)(v35 + 80) = v63;
    *(void *)(v35 + 88) = v39;
    uint64_t v40 = v53;
    *(void *)(v35 + 96) = v62;
    *(void *)(v35 + 104) = v40;
    uint64_t v41 = v52;
    *(void *)(v35 + 112) = v61;
    *(void *)(v35 + 120) = v41;
    *(void *)(v35 + 128) = v60;
    *(unsigned char *)(v35 + 136) = v46;
    LODWORD(v41) = v66[0];
    *(_DWORD *)(v35 + 140) = *(_DWORD *)((char *)v66 + 3);
    *(_DWORD *)(v35 + 137) = v41;
    *(void *)(v35 + 144) = v24;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v35 + v34, v30, v29);
    swift_retain();
    sub_100088B08(v31, (uint64_t)&unk_1000D5870, v35);
    swift_release();
  }
  else
  {
    uint64_t v42 = sub_10009CE40();
    os_log_type_t v43 = sub_10009DEA0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      v66[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v65 = sub_10000DBA8(0xD000000000000032, 0x80000001000A66F0, v66);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s no account yet", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000097B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 80) = a6;
  uint64_t v7 = *(void *)(a5 + 16);
  uint64_t v8 = *(void *)(a5 + 24);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 88) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_10000985C;
  return sub_100005D64(v7, v8);
}

uint64_t sub_10000985C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[12] = a1;
  v4[13] = a2;
  v4[14] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100009B50;
  }
  else {
    uint64_t v5 = sub_100009974;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100009974()
{
  uint64_t v9 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  uint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEA0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[9] = sub_10000DBA8(0xD000000000000032, 0x80000001000A66F0, &v8);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s successfully fetched authSessionToken", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = v0[13];
  v0[4] = v0[12];
  v0[5] = v5;
  sub_10000D308(&qword_1000D5860);
  sub_10009DE20();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100009B50()
{
  uint64_t v12 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEA0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[14];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[6] = sub_10000DBA8(0xD000000000000032, 0x80000001000A66F0, &v11);
    sub_10009DFC0();
    *(_WORD *)(v6 + 12) = 2082;
    v0[7] = v5;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v7 = sub_10009DCF0();
    v0[8] = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s failed fetching authSessionToken: %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[3] = 0;
  v0[2] = 0;
  sub_10000D308(&qword_1000D5860);
  sub_10009DE20();
  swift_errorRelease();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100009DD8()
{
  *(void *)(v1 + 152) = v0;
  return _swift_task_switch(sub_100009DF8, 0, 0);
}

uint64_t sub_100009DF8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 160) = *(void *)(v0 + 16);
  *(void *)(v0 + 168) = v1;
  uint64_t v2 = *(void *)(v0 + 32);
  *(void *)(v0 + 176) = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 184) = v3;
  *(_OWORD *)(v0 + 200) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 104);
  *(void *)(v0 + 264) = *(void *)(v0 + 120);
  if (v1)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10000A050;
    return sub_100005D64(v2, v4);
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_10009CE60();
    sub_10000D690(v7, (uint64_t)qword_1000E3488);
    unint64_t v8 = sub_10009CE40();
    os_log_type_t v9 = sub_10009DEB0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "No account found, fetch nonce failed", v10, 2u);
      swift_slowDealloc();
    }

    sub_10000D6C8();
    swift_allocError();
    *uint64_t v11 = 2;
    swift_willThrow();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_10000A050(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[35] = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_10000A1D0, 0, 0);
  }
  else
  {
    sub_10000FD00(v6[20], v6[21]);
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v6[1];
    return v7(a1, a2);
  }
}

uint64_t sub_10000A1D0()
{
  uint64_t v1 = *(void *)(v0 + 280);
  sub_10000FD00(*(void *)(v0 + 160), *(void *)(v0 + 168));
  *(void *)(v0 + 144) = v1;
  swift_errorRetain();
  sub_10000D308(&qword_1000D5858);
  if (swift_dynamicCast()
    && ((int v2 = *(unsigned __int8 *)(v0 + 296), v2 != 5) ? (v3 = v2 == 3) : (v3 = 1), v3))
  {
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v4;
    uint64_t v5 = sub_10000D308((uint64_t *)&unk_1000D9FA0);
    *uint64_t v4 = v0;
    v4[1] = sub_10000A384;
    uint64_t v6 = *(void *)(v0 + 152);
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 128, 0, 0, 0xD000000000000032, 0x80000001000A66F0, sub_100010360, v6, v5);
  }
  else
  {
    swift_errorRelease();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_10000A384()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10000A480, 0, 0);
}

uint64_t sub_10000A480()
{
  if (v0[17])
  {
    uint64_t v1 = v0[16];
    int v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    sub_10000D6C8();
    swift_allocError();
    *uint64_t v4 = 5;
    swift_willThrow();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_10000A554(char a1, char a2)
{
  if (*(void *)&aNone_2[8 * a1] == *(void *)&aNone_2[8 * a2] && qword_10009F0A8[a1] == qword_10009F0A8[a2]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_10000A5DC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x80000001000A60C0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1684628597;
      break;
    case 2:
      break;
    case 3:
      unint64_t v3 = 0xED000064695F7265;
      unint64_t v5 = 0x767265735F6D646DLL;
      break;
    default:
      unint64_t v3 = 0xED00007265626D75;
      unint64_t v5 = 0x6E5F6C6169726573;
      break;
  }
  unint64_t v6 = 0x80000001000A60C0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v2 = 1684628597;
      goto LABEL_9;
    case 2:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
      goto LABEL_12;
    case 3:
      unint64_t v6 = 0xED000064695F7265;
      if (v5 == 0x767265735F6D646DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
      unint64_t v6 = 0xED00007265626D75;
      if (v5 != 0x6E5F6C6169726573) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_10009E260();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10000A784(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000013;
    }
    else {
      unint64_t v3 = 0x444D5F44554F4C43;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x80000001000A6190;
    }
    else {
      unint64_t v4 = 0xE90000000000004DLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000013;
      }
      else {
        unint64_t v6 = 0x444D5F44554F4C43;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x80000001000A6190;
      }
      else {
        unint64_t v7 = 0xE90000000000004DLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x52414C55474552;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x52414C55474552)
  {
LABEL_21:
    char v8 = sub_10009E260();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10000A898(char a1, char a2)
{
  if (*(void *)&aOrgNameorgEmai[8 * a1] == *(void *)&aOrgNameorgEmai[8 * a2]
    && *(void *)&aOrgNameorgEmai[8 * a1 + 40] == *(void *)&aOrgNameorgEmai[8 * a2 + 40])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_10000A920(char a1, char a2)
{
  if (*(void *)&aMdmServname[8 * a1] == *(void *)&aMdmServname[8 * a2]
    && *(void *)&aServerTerId[8 * a1 + 8] == *(void *)&aServerTerId[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_10000A9A8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x4E64616F6C796170;
  }
  else {
    uint64_t v3 = 0x546B726F7774656ELL;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000657079;
  }
  else {
    unint64_t v4 = 0xEB00000000656D61;
  }
  if (a2) {
    uint64_t v5 = 0x4E64616F6C796170;
  }
  else {
    uint64_t v5 = 0x546B726F7774656ELL;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000656D61;
  }
  else {
    unint64_t v6 = 0xEB00000000657079;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10000AA54(char a1, char a2)
{
  if (*(void *)&aCredentipayloa[8 * a1] == *(void *)&aCredentipayloa[8 * a2]
    && *(void *)&aNotshareal[8 * a1 + 8] == *(void *)&aNotshareal[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_10000AADC(char a1, char a2)
{
  if (*(void *)&aEnrolledfailed[8 * a1] == *(void *)&aEnrolledfailed[8 * a2]
    && qword_10009F188[a1] == qword_10009F188[a2])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_10000AB64(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x44454C494146;
  }
  else {
    uint64_t v3 = 0x53534543435553;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x44454C494146;
  }
  else {
    uint64_t v5 = 0x53534543435553;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10000AC04(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000015;
  }
  else {
    unint64_t v3 = 0x4C414E5245544E49;
  }
  if (v2) {
    unint64_t v4 = 0xEE00524F5252455FLL;
  }
  else {
    unint64_t v4 = 0x80000001000A6130;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000015;
  }
  else {
    unint64_t v5 = 0x4C414E5245544E49;
  }
  if (a2) {
    unint64_t v6 = 0x80000001000A6130;
  }
  else {
    unint64_t v6 = 0xEE00524F5252455FLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10000ACB8(char a1, char a2)
{
  if (*(void *)&aStatus_1[8 * a1] == *(void *)&aStatus_1[8 * a2]
    && *(void *)&aMdmServerrorRe[8 * a1 + 16] == *(void *)&aMdmServerrorRe[8 * a2 + 16])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_10009E260();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_10000AD40()
{
  sub_1000100E8(v0 + 24);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension33UserDefaultsBackedAccountProvider__account;
  uint64_t v2 = sub_10000D308(&qword_1000D5828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10000AE14()
{
  return type metadata accessor for UserDefaultsBackedAccountProvider();
}

uint64_t type metadata accessor for UserDefaultsBackedAccountProvider()
{
  uint64_t result = qword_1000D55D0;
  if (!qword_1000D55D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10000AE68()
{
  sub_10000AF28();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10000AF28()
{
  if (!qword_1000D5600)
  {
    sub_10000AF84((uint64_t *)&unk_1000D5608);
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D5600);
    }
  }
}

uint64_t sub_10000AF84(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000AFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[30] = a6;
  v7[31] = v6;
  v7[28] = a4;
  v7[29] = a5;
  v7[26] = a2;
  v7[27] = a3;
  v7[25] = a1;
  return _swift_task_switch(sub_10000AFF8, 0, 0);
}

uint64_t sub_10000AFF8()
{
  uint64_t v1 = v0[30];
  sub_10000FF9C((void *)(v0[31] + 24), *(void *)(v0[31] + 48));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[32] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10000B0A4;
  uint64_t v3 = v0[29];
  return sub_100086924(v3, v1);
}

uint64_t sub_10000B0A4()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[33] = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_10000B21C;
    uint64_t v7 = v2[28];
    uint64_t v8 = v2[27];
    return sub_100005D64(v8, v7);
  }
}

uint64_t sub_10000B21C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  uint64_t v7 = (void *)*v3;
  v6[34] = a1;
  v6[35] = a2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = (uint64_t (*)(void))v7[1];
    return v8();
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v6[36] = v10;
    *uint64_t v10 = v7;
    v10[1] = sub_10000B3B4;
    return sub_10000EF80((uint64_t)(v6 + 16), a1, a2);
  }
}

uint64_t sub_10000B3B4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 136);
    *(void *)(v2 + 296) = *(void *)(v2 + 128);
    *(void *)(v2 + 304) = v6;
    *(_OWORD *)(v2 + 312) = *(_OWORD *)(v2 + 144);
    *(void *)(v2 + 328) = *(void *)(v2 + 160);
    *(_OWORD *)(v2 + 336) = *(_OWORD *)(v2 + 168);
    *(void *)(v2 + 352) = *(void *)(v2 + 184);
    *(unsigned char *)(v2 + 193) = *(unsigned char *)(v2 + 192);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v2 + 360) = v7;
    *uint64_t v7 = v3;
    v7[1] = sub_10000B558;
    uint64_t v8 = *(void *)(v2 + 280);
    uint64_t v9 = *(void *)(v2 + 272);
    return sub_10000782C(v9, v8);
  }
}

uint64_t sub_10000B558(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    sub_10001003C(v4 + 128);
    swift_bridgeObjectRelease();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 368) = a1;
    return _swift_task_switch(sub_10000B6B8, 0, 0);
  }
}

uint64_t sub_10000B6B8()
{
  uint64_t v12 = *(unsigned __int8 *)(v0 + 193);
  uint64_t v13 = *(void *)(v0 + 368);
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v11 = *(void *)(v0 + 352);
  long long v9 = *(_OWORD *)(v0 + 312);
  long long v10 = *(_OWORD *)(v0 + 328);
  long long v8 = *(_OWORD *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 208);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v2;
  *(_OWORD *)(v0 + 48) = v8;
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 80) = v10;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v11;
  *(void *)(v0 + 112) = v12;
  *(void *)(v0 + 120) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10009CF40();
  sub_100004CDC();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10000B7FC(uint64_t a1)
{
  v2[37] = a1;
  v2[38] = v1;
  uint64_t v3 = sub_10009C940();
  v2[39] = v3;
  v2[40] = *(void *)(v3 - 8);
  v2[41] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[42] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10000B904;
  v4[19] = v1;
  return _swift_task_switch(sub_100009DF8, 0, 0);
}

uint64_t sub_10000B904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v4[43] = a1;
  v4[44] = a2;
  v4[45] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return _swift_task_switch(sub_10000BA58, 0, 0);
  }
}

uint64_t sub_10000BA58()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[37];
  sub_10000D308(&qword_1000D57D0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10009EF80;
  long long v5 = *(_OWORD *)(v2 + 16);
  long long v4 = *(_OWORD *)(v2 + 32);
  long long v6 = *(_OWORD *)v2;
  *(void *)(v3 + 80) = *(void *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = v5;
  *(_OWORD *)(v3 + 64) = v4;
  *(_OWORD *)(v3 + 32) = v6;
  sub_10009C9A0();
  swift_allocObject();
  sub_10000D34C(v2);
  sub_10009C990();
  v0[34] = v3;
  sub_10000D398();
  uint64_t v7 = sub_10009C980();
  v0[46] = v7;
  v0[47] = v8;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10009CE60();
    sub_10000D690(v9, (uint64_t)qword_1000E3488);
    long long v10 = sub_10009CE40();
    os_log_type_t v11 = sub_10009DEB0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Could not encode nonce request Info, fetch nonce failed", v12, 2u);
      swift_slowDealloc();
    }

    sub_10000D6C8();
    swift_allocError();
    *uint64_t v13 = 4;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  else
  {
    uint64_t v16 = v7;
    unint64_t v17 = v8;
    uint64_t v19 = v0[43];
    uint64_t v18 = (void *)v0[44];
    swift_release();
    swift_bridgeObjectRelease();
    os_log_type_t v20 = (void *)sub_10000EB98();
    sub_10009C910();

    v27._object = (void *)0x80000001000A63C0;
    v25.value._countAndFlagsBits = v19;
    v25.value._object = v18;
    v27._countAndFlagsBits = 0xD000000000000012;
    sub_10009C930(v25, v27);
    sub_10009C8F0();
    v26.value._countAndFlagsBits = 0xD00000000000001FLL;
    v26.value._object = (void *)0x80000001000A63E0;
    v28._countAndFlagsBits = 0x2D746E65746E6F43;
    v28._object = (void *)0xEC00000065707954;
    sub_10009C930(v26, v28);
    swift_bridgeObjectRelease();
    sub_10000EE24(v16, v17);
    sub_10009C920();
    id v21 = [self ephemeralSessionConfiguration];
    v0[48] = v21;
    v0[49] = [self sessionWithConfiguration:v21];
    uint64_t v22 = (void *)swift_task_alloc();
    v0[50] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_10000BE2C;
    uint64_t v23 = v0[41];
    return NSURLSession.data(for:delegate:)(v23, 0);
  }
}

uint64_t sub_10000BE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = (void *)*v4;
  uint64_t v9 = (void *)*v4;
  v8[51] = a1;
  v8[52] = a2;
  v8[53] = a3;
  v8[54] = v3;
  swift_task_dealloc();
  if (v3)
  {
    return _swift_task_switch(sub_10000C6C4, 0, 0);
  }
  else
  {
    long long v10 = (void *)swift_task_alloc();
    v8[55] = v10;
    *long long v10 = v9;
    v10[1] = sub_10000BFD0;
    return sub_1000081C8(a1, a2, a3);
  }
}

uint64_t sub_10000BFD0()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10000C774;
  }
  else {
    uint64_t v2 = sub_10000C0E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000C0E4()
{
  uint64_t v52 = v0;
  uint64_t v2 = v0 + 264;
  uint64_t v3 = *(void *)(v0 + 448);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 416);
  sub_10009C970();
  swift_allocObject();
  sub_10009C960();
  sub_10000EED4();
  sub_10009C950();
  if (v3)
  {
    unint64_t v6 = *(void *)(v0 + 416);
    uint64_t v7 = *(void **)(v0 + 424);
    uint64_t v8 = *(void *)(v0 + 408);
    long long v10 = *(void **)(v0 + 384);
    uint64_t v9 = *(void **)(v0 + 392);
    uint64_t v12 = *(void *)(v0 + 368);
    unint64_t v11 = *(void *)(v0 + 376);
    (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 328), *(void *)(v0 + 312));
    sub_10000EE7C(v12, v11);

    swift_release();
    sub_10000EE7C(v8, v6);
    swift_task_dealloc();
    unint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  swift_release();
  uint64_t v13 = *(_OWORD **)v2;
  if (*(void *)(*(void *)v2 + 16))
  {
    uint64_t v5 = v0 + 128;
    *(_OWORD *)(v0 + 128) = v13[2];
    long long v14 = v13[3];
    long long v15 = v13[4];
    long long v16 = v13[5];
    *(_OWORD *)(v0 + 185) = *(_OWORD *)((char *)v13 + 89);
    *(_OWORD *)(v0 + 160) = v15;
    *(_OWORD *)(v0 + 176) = v16;
    *(_OWORD *)(v0 + 144) = v14;
    sub_10000EF28(v0 + 128);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10000F900((unsigned char *)(v0 + 128));
    unint64_t v1 = v19;
    uint64_t v20 = qword_1000D51D8;
    swift_bridgeObjectRetain();
    if (v20 == -1) {
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_9:
  uint64_t v21 = *(void *)(v0 + 296);
  uint64_t v22 = sub_10009CE60();
  sub_10000D690(v22, (uint64_t)qword_1000E3488);
  sub_10000D34C(v21);
  swift_bridgeObjectRetain();
  sub_10000D34C(v21);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_10009CE40();
  os_log_type_t v24 = sub_10009DEA0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = *(void *)(v0 + 296);
  unint64_t v50 = v1;
  if (v25)
  {
    uint64_t v27 = swift_slowAlloc();
    v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446467;
    long long v29 = *(_OWORD *)(v26 + 16);
    long long v28 = *(_OWORD *)(v26 + 32);
    long long v30 = *(_OWORD *)v26;
    *(void *)(v0 + 256) = *(void *)(v26 + 48);
    *(_OWORD *)(v0 + 224) = v29;
    *(_OWORD *)(v0 + 240) = v28;
    *(_OWORD *)(v0 + 208) = v30;
    sub_10000D34C(v26);
    uint64_t v31 = sub_10009DCF0();
    *(void *)(v0 + 280) = sub_10000DBA8(v31, v32, v51);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    sub_10000FCAC(v26);
    sub_10000FCAC(v26);
    *(_WORD *)(v27 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 288) = sub_10000DBA8(v4, v1, v51);
    sub_10009DFC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Nonce value for device %{public}s is '%{private}s'", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000FCAC(v26);
    sub_10000FCAC(v26);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v49 = v4;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v33 = *(void *)(v0 + 24);
  if (!v33)
  {
    sub_10000FC54(v5);
LABEL_17:
    uint64_t v40 = *(void **)(v0 + 424);

    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    goto LABEL_18;
  }
  uint64_t type = *(void *)(v0 + 16);
  uint64_t v34 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  sub_10000FD00(type, v33);
  uint64_t v35 = (void *)sub_10000F758(v34, v5);
  sub_10000FC54(v5);
  swift_bridgeObjectRelease();
  if (!v35[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v36 = *(void **)(v0 + 424);
  uint64_t v37 = *(void **)(v0 + 392);
  uint64_t v38 = v35[6];
  unint64_t v39 = v35[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

LABEL_18:
  unint64_t v41 = *(void *)(v0 + 376);
  uint64_t v42 = *(void **)(v0 + 384);
  uint64_t v43 = *(void *)(v0 + 368);
  uint64_t v45 = *(void *)(v0 + 320);
  uint64_t v44 = *(void *)(v0 + 328);
  uint64_t v46 = *(void *)(v0 + 312);
  sub_10000EE7C(*(void *)(v0 + 408), *(void *)(v0 + 416));

  sub_10000EE7C(v43, v41);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
  swift_task_dealloc();
  uint64_t v47 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t))(v0 + 8);
  return v47(v49, v50, v38, v39);
}

uint64_t sub_10000C6C4()
{
  unint64_t v1 = *(void **)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 368);
  unint64_t v3 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 312);

  sub_10000EE7C(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10000C774()
{
  unint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void **)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v4 = *(void **)(v0 + 384);
  uint64_t v6 = *(void *)(v0 + 368);
  unint64_t v5 = *(void *)(v0 + 376);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v9 = *(void *)(v0 + 312);

  sub_10000EE7C(v3, v1);
  sub_10000EE7C(v6, v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  long long v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10000C84C()
{
  *(void *)(v1 + 48) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10000C8F8;
  v2[19] = v0;
  return _swift_task_switch(sub_100009DF8, 0, 0);
}

uint64_t sub_10000C8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 64) = a2;
    long long v10 = (void *)swift_task_alloc();
    *(void *)(v6 + 72) = v10;
    *long long v10 = v7;
    v10[1] = sub_10000CA88;
    return sub_10000782C(a1, a2);
  }
}

uint64_t sub_10000CA88(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10000CBDC, 0, 0);
  }
}

uint64_t sub_10000CBDC()
{
  uint64_t v2 = sub_100004F90(v0 + 2);
  if (*(void *)(v1 + 8)) {
    *(void *)(v1 + 104) = v0[10];
  }
  swift_bridgeObjectRelease();
  v2(v0 + 2, 0);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10000CC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *v6;
  long long v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *long long v15 = v7;
  v15[1] = sub_10000CD64;
  v15[30] = a6;
  v15[31] = v14;
  v15[28] = a4;
  v15[29] = a5;
  v15[26] = a2;
  v15[27] = a3;
  v15[25] = a1;
  return _swift_task_switch(sub_10000AFF8, 0, 0);
}

uint64_t sub_10000CD64()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

double sub_10000CE58@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

uint64_t sub_10000CEF0()
{
  uint64_t v0 = sub_10000D308(&qword_1000D5820);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D5828);
  sub_10009CF10();
  swift_endAccess();
  sub_10000FFE0();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_10000D00C()
{
  uint64_t v2 = *v0;
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_100010914;
  v3[16] = v2;
  return _swift_task_switch(sub_1000072B4, 0, 0);
}

uint64_t sub_10000D0B8(uint64_t a1)
{
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_10000D150;
  return sub_10000B7FC(a1);
}

uint64_t sub_10000D150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = *v5;
  uint64_t v10 = swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
  if (!v4)
  {
    uint64_t v10 = a1;
    uint64_t v11 = a2;
    uint64_t v12 = a3;
    uint64_t v13 = a4;
  }
  return v14(v10, v11, v12, v13);
}

uint64_t sub_10000D278()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100010914;
  return sub_10000C84C();
}

uint64_t sub_10000D308(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10000D34C(uint64_t a1)
{
  return a1;
}

unint64_t sub_10000D398()
{
  unint64_t result = qword_1000D57D8;
  if (!qword_1000D57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D57D8);
  }
  return result;
}

uint64_t sub_10000D3EC()
{
  return sub_10000D3F8(qword_1000E3440);
}

uint64_t sub_10000D3F8@<X0>(void *a1@<X8>)
{
  if (qword_1000D51F0 != -1) {
    swift_once();
  }
  sub_1000102FC((uint64_t)&qword_1000E34B8, (uint64_t)v21);
  uint64_t v2 = type metadata accessor for KeychainBackedGrandSlamTokenStorage();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v22;
  uint64_t v5 = v23;
  sub_10000FF9C(v21, v22);
  *(void *)(v3 + 16) = ((uint64_t (*)(uint64_t, _UNKNOWN **))v5[1])(v4, v5);
  *(void *)(v3 + 24) = v6;
  sub_1000100E8((uint64_t)v21);
  id v7 = [self standardUserDefaults];
  uint64_t v8 = qword_1000D5268;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1000E3570;
  uint64_t v10 = *(void *)algn_1000E3578;
  uint64_t v22 = v2;
  uint64_t v23 = &off_1000CE410;
  v21[0] = v3;
  uint64_t v11 = type metadata accessor for UserDefaultsBackedAccountProvider();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = sub_100010138((uint64_t)v21, v2);
  __chkstk_darwin(v13);
  long long v15 = (void *)((char *)&v21[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = *v15;
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v18 = sub_100010188(v7, v17, v9, v10, v12);

  swift_unknownObjectRelease();
  sub_1000100E8((uint64_t)v21);
  swift_release();
  a1[3] = v11;
  a1[4] = &off_1000CAFB8;
  uint64_t result = swift_release();
  *a1 = v18;
  return result;
}

uint64_t sub_10000D690(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_10000D6C8()
{
  unint64_t result = qword_1000D57E0;
  if (!qword_1000D57E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D57E0);
  }
  return result;
}

double sub_10000D71C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

uint64_t sub_10000D7B4(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10000FDF0(v3, v2);
  swift_retain();
  sub_10009CF40();
  return sub_100004CDC();
}

unint64_t sub_10000D8B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D308(&qword_1000D5888);
  uint64_t v2 = sub_10009E100();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100010720(v6, (uint64_t)&v15, &qword_1000D5890);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10000D9E8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100010784(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000D9E8(uint64_t a1, uint64_t a2)
{
  sub_10009E2D0();
  sub_10009DD20();
  Swift::Int v4 = sub_10009E300();

  return sub_10000DA60(a1, a2, v4);
}

unint64_t sub_10000DA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_10009E260() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_10009E260() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_10009E260()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_10000DBA8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10000DC7C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10000FD90((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10000FD90((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1000100E8((uint64_t)v12);
  return v7;
}

uint64_t sub_10000DC7C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_10009DFD0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10000DE38(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_10009E0B0();
  if (!v8)
  {
    sub_10009E0C0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_10009E110();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10000DE38(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10000DED0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10000E0B0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10000E0B0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10000DED0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10000E048(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_10009E070();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_10009E0C0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_10009DD60();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_10009E110();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_10009E0C0();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10000E048(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000D308(&qword_1000D57F0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10000E0B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000D308(&qword_1000D57F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10009E110();
  __break(1u);
  return result;
}

uint64_t sub_10000E200(uint64_t a1, unint64_t a2)
{
  sub_10000EE24(a1, a2);
  sub_10000E99C(a1, a2);
  sub_10000EE7C(a1, a2);
  uint64_t v4 = sub_10009DD10();
  swift_release();
  return v4;
}

uint64_t sub_10000E278@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009DD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000E2B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10000E36C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10000E2D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10000E4E4(a1, a2, a3, (void *)*v3, &qword_1000D58D0, (uint64_t (*)(void))type metadata accessor for DeviceRowViewModel);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10000E310(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10000E4E4(a1, a2, a3, (void *)*v3, &qword_1000D5850, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10000E34C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10000E72C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10000E36C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000D308(&qword_1000D57F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10009E110();
  __break(1u);
  return result;
}

uint64_t sub_10000E4E4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000D308(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  os_log_type_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_10009E110();
  __break(1u);
  return result;
}

uint64_t sub_10000E72C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000D308(&qword_1000D58C8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10009E110();
  __break(1u);
  return result;
}

void *sub_10000E898(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_10000E8EC(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_10009C9D0();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_10009C9F0();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_10009C9E0();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_10000E898(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

void *sub_10000E99C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10009CBC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &_swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_10000D308(&qword_1000D57F0);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = j__malloc_size(v8);
          v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_10000EE24(a1, a2);
        uint64_t v13 = sub_10009CB80();
        sub_10000EE7C(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x10000EB48);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_10000EB58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009DD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000EB90()
{
  return 1;
}

uint64_t sub_10000EB98()
{
  sub_10000D308(&qword_1000D9E30);
  uint64_t v0 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17 - v3;
  sub_10009CB40();
  sub_100010720((uint64_t)v4, (uint64_t)v2, &qword_1000D9E30);
  uint64_t v5 = sub_10009CB50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    id v8 = objc_allocWithZone((Class)NSMutableURLRequest);
    sub_10009CAF0(v9);
    uint64_t v11 = v10;
    id v12 = [v8 initWithURL:v10];

    (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    [v12 setCachePolicy:1];
    NSString v13 = sub_10009DC70();
    NSString v14 = sub_10009DC70();
    [v12 setValue:v13 forHTTPHeaderField:v14];

    NSString v15 = sub_10009DC70();
    NSString v16 = sub_10009DC70();
    swift_bridgeObjectRelease();
    [v12 setValue:v15 forHTTPHeaderField:v16];

    sub_100010864((uint64_t)v4, &qword_1000D9E30);
    return (uint64_t)v12;
  }
  return result;
}

uint64_t sub_10000EE24(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10000EE7C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_10000EED4()
{
  unint64_t result = qword_1000D57E8;
  if (!qword_1000D57E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D57E8);
  }
  return result;
}

uint64_t sub_10000EF28(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000EF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  uint64_t v5 = sub_10009C940();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_10000F044, 0, 0);
}

uint64_t sub_10000F044()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = (void *)v0[13];
  uint64_t v3 = (void *)sub_10000EB98();
  sub_10009C910();

  v10._object = (void *)0x80000001000A63C0;
  v9.value._countAndFlagsBits = v2;
  v9.value._object = v1;
  v10._countAndFlagsBits = 0xD000000000000012;
  sub_10009C930(v9, v10);
  id v4 = [self ephemeralSessionConfiguration];
  v0[18] = v4;
  v0[19] = [self sessionWithConfiguration:v4];
  uint64_t v5 = (void *)swift_task_alloc();
  v0[20] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10000F19C;
  uint64_t v6 = v0[17];
  return NSURLSession.data(for:delegate:)(v6, 0);
}

uint64_t sub_10000F19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)*v4;
  Swift::String_optional v9 = (void *)*v4;
  v8[21] = a1;
  v8[22] = a2;
  v8[23] = a3;
  v8[24] = v3;
  swift_task_dealloc();
  if (v3)
  {
    return _swift_task_switch(sub_10000F600, 0, 0);
  }
  else
  {
    Swift::String v10 = (void *)swift_task_alloc();
    v8[25] = v10;
    *Swift::String v10 = v9;
    v10[1] = sub_10000F340;
    return sub_1000081C8(a1, a2, a3);
  }
}

uint64_t sub_10000F340()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10000F698;
  }
  else {
    uint64_t v2 = sub_10000F454;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000F454()
{
  uint64_t v1 = *(void *)(v0 + 208);
  sub_10009C970();
  swift_allocObject();
  sub_10009C960();
  sub_100010094();
  sub_10009C950();
  unint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v6 = *(void **)(v0 + 144);
  uint64_t v5 = *(void **)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 120);
  if (v1)
  {
    (*(void (**)(void, uint64_t))(v7 + 8))(*(void *)(v0 + 136), v8);

    swift_release();
    sub_10000EE7C(v4, v2);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 88);
    (*(void (**)(void, uint64_t))(v7 + 8))(*(void *)(v0 + 136), v8);

    swift_release();
    sub_10000EE7C(v4, v2);
    long long v16 = *(_OWORD *)(v0 + 32);
    long long v17 = *(_OWORD *)(v0 + 16);
    long long v15 = *(_OWORD *)(v0 + 48);
    uint64_t v12 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 72);
    char v13 = *(unsigned char *)(v0 + 80);
    swift_task_dealloc();
    *(_OWORD *)uint64_t v10 = v17;
    *(_OWORD *)(v10 + 16) = v16;
    *(_OWORD *)(v10 + 32) = v15;
    *(void *)(v10 + 48) = v12;
    *(void *)(v10 + 56) = v11;
    *(unsigned char *)(v10 + 64) = v13;
  }
  Swift::String_optional v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10000F600()
{
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 120);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10000F698()
{
  unint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void **)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void **)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 120);

  sub_10000EE7C(v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10000F758(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  unint64_t v21 = v2 - 1;
  uint64_t v6 = _swiftEmptyArrayStorage;
  unint64_t v24 = *(void *)(result + 16);
  uint64_t v22 = result + 32;
  do
  {
    uint64_t v23 = v6;
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    uint64_t v8 = v5 + 40 * v4;
    unint64_t v9 = v4;
    while (1)
    {
      if (v7 == v9)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *(void *)(a2 + 64);
      if (v10)
      {
        uint64_t v11 = *(void *)v8;
        uint64_t v12 = *(void *)(v8 + 8);
        uint64_t v14 = *(void *)(v8 + 16);
        uint64_t v13 = *(void *)(v8 + 24);
        char v15 = *(unsigned char *)(v8 + 32);
        if (*(void *)v8 == *(void *)(a2 + 56) && v10 == v12) {
          break;
        }
        unint64_t result = sub_10009E260();
        unint64_t v2 = v24;
        if (result) {
          break;
        }
      }
      ++v9;
      v8 += 40;
      if (v2 == v9) {
        return (uint64_t)v23;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = v23;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_10000E2B4(0, v23[2] + 1, 1);
      uint64_t v6 = v23;
    }
    unint64_t v18 = v6[2];
    unint64_t v17 = v6[3];
    unint64_t v19 = v18 + 1;
    if (v18 >= v17 >> 1)
    {
      unint64_t result = sub_10000E2B4(v17 > 1, v18 + 1, 1);
      unint64_t v19 = v18 + 1;
      uint64_t v6 = v23;
    }
    unint64_t v4 = v9 + 1;
    v6[2] = v19;
    unint64_t v20 = &v6[5 * v18];
    v20[4] = v11;
    v20[5] = v12;
    v20[6] = v14;
    v20[7] = v13;
    *((unsigned char *)v20 + 64) = v15;
    uint64_t v5 = v22;
    unint64_t v2 = v24;
  }
  while (v21 != v9);
  return (uint64_t)v6;
}

uint64_t sub_10000F900(unsigned char *a1)
{
  sub_100010800((uint64_t)(a1 + 8), (uint64_t)v17, (uint64_t *)&unk_1000D9FA0);
  sub_100010800((uint64_t)v17, (uint64_t)v18, (uint64_t *)&unk_1000D9FA0);
  if (v18[1]) {
    return v18[0];
  }
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10009CE60();
  sub_10000D690(v3, (uint64_t)qword_1000E3488);
  unint64_t v4 = sub_10009CE40();
  os_log_type_t v5 = sub_10009DEB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Nonce value missing, request failed.", v6, 2u);
    swift_slowDealloc();
  }

  if (*a1 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_10009E260();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_14;
    }
  }
  sub_10000EF28((uint64_t)a1);
  sub_10000EF28((uint64_t)a1);
  uint64_t v8 = sub_10009CE40();
  os_log_type_t v9 = sub_10009DEB0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_100010800((uint64_t)(a1 + 72), (uint64_t)&v20, &qword_1000D5810);
    sub_100010800((uint64_t)&v20, (uint64_t)&v15, &qword_1000D5810);
    sub_10000D308(&qword_1000D5810);
    uint64_t v11 = sub_10009DCF0();
    uint64_t v15 = sub_10000DBA8(v11, v12, &v16);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    sub_10000FC54((uint64_t)a1);
    sub_10000FC54((uint64_t)a1);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Nonce error reason: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000FC54((uint64_t)a1);
    sub_10000FC54((uint64_t)a1);
  }

  sub_100010800((uint64_t)(a1 + 72), (uint64_t)&v19, &qword_1000D5810);
  sub_100010800((uint64_t)&v19, (uint64_t)&v21, &qword_1000D5810);
  if (v21)
  {
    char v13 = 7;
    goto LABEL_16;
  }
LABEL_14:
  char v13 = 6;
LABEL_16:
  sub_10000D6C8();
  swift_allocError();
  *uint64_t v14 = v13;
  return swift_willThrow();
}

uint64_t sub_10000FC54(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000FCAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000FD00(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10000FD90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10000FDF0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_10000FE80()
{
  unint64_t result = qword_1000D5800;
  if (!qword_1000D5800)
  {
    sub_10000AF84((uint64_t *)&unk_1000D5608);
    sub_10000FEF4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5800);
  }
  return result;
}

unint64_t sub_10000FEF4()
{
  unint64_t result = qword_1000D5808;
  if (!qword_1000D5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5808);
  }
  return result;
}

uint64_t sub_10000FF48(uint64_t a1)
{
  return a1;
}

void *sub_10000FF9C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10000FFE0()
{
  unint64_t result = qword_1000D5830;
  if (!qword_1000D5830)
  {
    sub_10000AF84(&qword_1000D5820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D5830);
  }
  return result;
}

uint64_t sub_10001003C(uint64_t a1)
{
  return a1;
}

unint64_t sub_100010094()
{
  unint64_t result = qword_1000D5848;
  if (!qword_1000D5848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5848);
  }
  return result;
}

uint64_t sub_1000100E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100010138(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void *sub_100010188(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_10000D308(&qword_1000D5828);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[3] = type metadata accessor for KeychainBackedGrandSlamTokenStorage();
  v18[4] = &off_1000CE410;
  v18[0] = a2;
  a5[11] = 0;
  a5[12] = 0;
  a5[10] = 0;
  uint64_t v14 = (char *)a5
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension33UserDefaultsBackedAccountProvider__account;
  memset(v17, 0, sizeof(v17));
  sub_10000D308((uint64_t *)&unk_1000D5608);
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  a5[2] = a1;
  sub_1000102FC((uint64_t)v18, (uint64_t)(a5 + 3));
  a5[8] = a3;
  a5[9] = a4;
  id v15 = a1;
  swift_unknownObjectRetain();
  sub_1000051F4();
  sub_1000100E8((uint64_t)v18);
  return a5;
}

uint64_t sub_1000102FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100010360(uint64_t a1)
{
  return sub_100008EF4(a1, v1);
}

uint64_t sub_100010368()
{
  uint64_t v1 = sub_10000D308(&qword_1000D5860);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100010438(uint64_t *a1)
{
  uint64_t v3 = *(void *)(sub_10000D308(&qword_1000D5860) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100009140(a1, v4, v5);
}

uint64_t sub_1000104B0()
{
  uint64_t v1 = sub_10000D308(&qword_1000D5860);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 152) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000105C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000D308(&qword_1000D5860) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)(v1 + 5);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000CD64;
  return sub_1000097B4(a1, v5, v6, v7, v8, v9);
}

unint64_t sub_1000106C8()
{
  unint64_t result = qword_1000D5878;
  if (!qword_1000D5878)
  {
    sub_10009CD50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5878);
  }
  return result;
}

uint64_t sub_100010720(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000D308(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_100010784(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100010794()
{
  unint64_t result = qword_1000D5898;
  if (!qword_1000D5898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5898);
  }
  return result;
}

uint64_t sub_1000107E8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100010800(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000D308(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100010864(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000D308(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000108C0()
{
  unint64_t result = qword_1000D58C0;
  if (!qword_1000D58C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D58C0);
  }
  return result;
}

uint64_t sub_100010918()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FakeDeviceStatusViewModelProviderFactory()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for Organization(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SignInView()
{
  swift_release();

  return swift_release();
}

void *initializeWithCopy for SignInView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SignInView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

__n128 initializeWithTake for SignInView(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for SignInView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SignInView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInView()
{
  return &type metadata for SignInView;
}

void *sub_100010B88()
{
  return &protocol witness table for Never;
}

uint64_t sub_100010B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_10009CE60();
    sub_10000D690(v15, (uint64_t)qword_1000E3488);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v16 = sub_10009CE40();
    os_log_type_t v17 = sub_10009DEA0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = a3;
      uint64_t v38 = v35;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v37 = sub_10000DBA8(0xD000000000000038, 0x80000001000A6A20, &v38);
      sub_10009DFC0();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v37 = a2;
      swift_errorRetain();
      sub_10000D308(&qword_1000D5858);
      uint64_t v19 = sub_10009DCF0();
      uint64_t v37 = sub_10000DBA8(v19, v20, &v38);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s: Authentication failed with error %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      a3 = v36;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_10009DE50();
    uint64_t v26 = sub_10009DE70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 0, 1, v26);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = a3;
    v27[5] = a4;
    v27[6] = a5;
    v27[7] = a6;
    v27[8] = a2;
    swift_errorRetain();
    swift_retain();
    swift_retain();
    sub_10008DD48((uint64_t)v14, (uint64_t)&unk_1000D59C0, (uint64_t)v27);
    swift_release();
    swift_errorRelease();
  }
  else
  {
    if (a1)
    {
      swift_bridgeObjectRetain();
      sub_10009DE50();
      uint64_t v21 = sub_10009DE70();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 0, 1, v21);
      uint64_t v22 = (void *)swift_allocObject();
      v22[2] = 0;
      v22[3] = 0;
      v22[4] = a3;
      v22[5] = a4;
      v22[6] = a5;
      v22[7] = a6;
      v22[8] = a1;
      swift_retain();
      swift_retain();
      uint64_t v23 = &unk_1000D59B0;
      uint64_t v24 = (uint64_t)v14;
      uint64_t v25 = (uint64_t)v22;
    }
    else
    {
      if (qword_1000D51D8 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_10009CE60();
      sub_10000D690(v28, (uint64_t)qword_1000E3488);
      long long v29 = sub_10009CE40();
      os_log_type_t v30 = sub_10009DEA0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t v36 = a4;
        *(_DWORD *)uint64_t v31 = 136315138;
        uint64_t v37 = sub_10000DBA8(0xD000000000000038, 0x80000001000A6A20, &v38);
        a4 = v36;
        sub_10009DFC0();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s: Authentication finished without any errors, but we don't have results either, this should never happen", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_10009DE50();
      uint64_t v32 = sub_10009DE70();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v14, 0, 1, v32);
      uint64_t v33 = (void *)swift_allocObject();
      v33[2] = 0;
      v33[3] = 0;
      v33[4] = a3;
      v33[5] = a4;
      v33[6] = a5;
      v33[7] = a6;
      swift_retain();
      swift_retain();
      uint64_t v23 = &unk_1000D59A0;
      uint64_t v24 = (uint64_t)v14;
      uint64_t v25 = (uint64_t)v33;
    }
    sub_10008DD48(v24, (uint64_t)v23, v25);
    swift_release();
  }
  return sub_100012628((uint64_t)v14);
}

uint64_t sub_10001117C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a5;
  v8[4] = a8;
  v8[2] = a4;
  return _swift_task_switch(sub_1000111A0, 0, 0);
}

uint64_t sub_1000111A0()
{
  sub_10009DE40();
  *(void *)(v0 + 40) = sub_10009DE30();
  uint64_t v2 = sub_10009DE10();
  return _swift_task_switch(sub_100011234, v2, v1);
}

uint64_t sub_100011234()
{
  uint64_t v1 = v0[2];
  swift_release();
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[6] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100012890;
    uint64_t v3 = v0[4];
    return sub_100064180(v3);
  }
  else
  {
    type metadata accessor for SignInViewModel();
    sub_1000124EC((unint64_t *)&unk_1000D9E40, (void (*)(uint64_t))type metadata accessor for SignInViewModel);
    return sub_10009D260();
  }
}

uint64_t sub_10001135C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a5;
  v8[4] = a8;
  v8[2] = a4;
  return _swift_task_switch(sub_100011380, 0, 0);
}

uint64_t sub_100011380()
{
  sub_10009DE40();
  *(void *)(v0 + 40) = sub_10009DE30();
  uint64_t v2 = sub_10009DE10();
  return _swift_task_switch(sub_100011414, v2, v1);
}

uint64_t sub_100011414()
{
  uint64_t v1 = v0[2];
  swift_release();
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[6] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10001153C;
    uint64_t v3 = v0[4];
    return sub_100062958(v3);
  }
  else
  {
    type metadata accessor for SignInViewModel();
    sub_1000124EC((unint64_t *)&unk_1000D9E40, (void (*)(uint64_t))type metadata accessor for SignInViewModel);
    return sub_10009D260();
  }
}

uint64_t sub_10001153C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10001164C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_10001166C, 0, 0);
}

uint64_t sub_10001166C()
{
  sub_10009DE40();
  *(void *)(v0 + 32) = sub_10009DE30();
  uint64_t v2 = sub_10009DE10();
  return _swift_task_switch(sub_100011700, v2, v1);
}

uint64_t sub_100011700()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100011824;
    return sub_100064664(0);
  }
  else
  {
    type metadata accessor for SignInViewModel();
    sub_1000124EC((unint64_t *)&unk_1000D9E40, (void (*)(uint64_t))type metadata accessor for SignInViewModel);
    return sub_10009D260();
  }
}

uint64_t sub_100011824()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_100011938(void *a1, uint64_t a2)
{
  sub_100011F9C(a1, a2, *v2);
}

id sub_100011948@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (objc_class *)type metadata accessor for DMCEnrollmentAuthenticationCoordinator();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  uint64_t v9 = &v8[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38DMCEnrollmentAuthenticationCoordinator_parentView];
  *(void *)uint64_t v9 = v3;
  *((void *)v9 + 1) = v4;
  *((void *)v9 + 2) = v5;
  *((void *)v9 + 3) = v6;
  v11.receiver = v8;
  v11.super_class = v7;
  swift_retain();
  swift_retain();
  id result = objc_msgSendSuper2(&v11, "init");
  *a1 = result;
  return result;
}

uint64_t sub_1000119D8()
{
  return sub_10009D570();
}

uint64_t sub_100011A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100012228();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100011A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100012228();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100011ADC()
{
  return sub_10009D7D0();
}

void sub_100011AF8()
{
}

unint64_t sub_100011B24()
{
  unint64_t result = qword_1000DA170;
  if (!qword_1000DA170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA170);
  }
  return result;
}

uint64_t sub_100011B78@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100011BF8()
{
  return sub_10009CF40();
}

id sub_100011C6C()
{
  uint64_t v0 = sub_10009CCC0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10009DC60();
  __chkstk_darwin(v1 - 8);
  id v2 = [objc_allocWithZone((Class)DMCEnrollmentAuthenticationViewController) init];
  sub_10000D308(&qword_1000D5980);
  sub_10009D5E0();
  [v2 setDelegate:v11];

  id v3 = v2;
  sub_10009DC00();
  sub_10009CCB0();
  sub_10009DCE0();
  NSString v4 = sub_10009DC70();
  swift_bridgeObjectRelease();
  [v3 setTitleText:v4];

  id v5 = v3;
  sub_10009DC00();
  sub_10009CCB0();
  sub_10009DCE0();
  NSString v6 = sub_10009DC70();
  swift_bridgeObjectRelease();
  [v5 setSubtitleText:v6];

  sub_10009DC00();
  sub_10009CCB0();
  sub_10009DCE0();
  NSString v7 = sub_10009DC70();
  swift_bridgeObjectRelease();
  [v5 setCancelButtonTitle:v7];

  sub_10009DC00();
  sub_10009CCB0();
  sub_10009DCE0();
  NSString v8 = sub_10009DC70();
  swift_bridgeObjectRelease();
  [v5 setBottomText:v8];

  id v9 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v5];
  return v9;
}

void sub_100011F9C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = [a1 viewControllers];
  sub_1000121E0();
  unint64_t v5 = sub_10009DDC0();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10009E0D0();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_13;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)sub_10009E080();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_18:
      type metadata accessor for SignInViewModel();
      sub_1000124EC((unint64_t *)&unk_1000D9E40, (void (*)(uint64_t))type metadata accessor for SignInViewModel);
      id v11 = v12;
      sub_10009D260();
      __break(1u);
      return;
    }
    id v6 = *(id *)(v5 + 32);
  }
  id v12 = v6;
  swift_bridgeObjectRelease();
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    if (a3)
    {
      NSString v8 = (void *)v7;
      swift_getKeyPath();
      swift_getKeyPath();
      id v9 = v12;
      swift_retain();
      sub_10009CF30();
      swift_release();
      swift_release();
      swift_release();
      [v8 setInProgress:v13];

      return;
    }
    goto LABEL_18;
  }
}

unint64_t sub_1000121E0()
{
  unint64_t result = qword_1000D5978;
  if (!qword_1000D5978)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D5978);
  }
  return result;
}

unint64_t sub_100012228()
{
  unint64_t result = qword_1000D5988;
  if (!qword_1000D5988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5988);
  }
  return result;
}

void sub_10001227C(uint64_t a1)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  id v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 136315138;
    sub_10000DBA8(0xD000000000000012, 0x80000001000A6A00, &v8);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a1)
  {
    if ((*(unsigned char *)(a1
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesExtensionContainerViewModel_hostAppInfo) & 1) != 0)
    {
      id v6 = [self standardUserDefaults];
      NSString v7 = sub_10009DC70();
      [v6 setBool:0 forKey:v7];
    }
    else
    {
      [*(id *)(a1 + 16) dismissAutomatedDeviceEnrollmentAdditionExtension];
    }
  }
  else
  {
    type metadata accessor for AddDevicesExtensionContainerViewModel();
    sub_1000124EC(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
    sub_10009D260();
    __break(1u);
  }
}

uint64_t sub_1000124EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100012534()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10001257C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  os_log_type_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *os_log_type_t v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_100010914;
  return _swift_task_switch(sub_10001166C, 0, 0);
}

uint64_t sub_100012628(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D9350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100012688()
{
  return sub_100012774((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000126A0()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10000CD64;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return _swift_task_switch(sub_100011380, 0, 0);
}

uint64_t sub_10001275C()
{
  return sub_100012774((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_100012774(void (*a1)(void))
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 64));

  return _swift_deallocObject(v1, 72, 7);
}

uint64_t sub_1000127D4()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100010914;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return _swift_task_switch(sub_1000111A0, 0, 0);
}

id sub_100012894(OSStatus a1)
{
  if (a1 == -25300 || a1 == 0) {
    return 0;
  }
  CFStringRef v4 = SecCopyErrorMessageString(a1, 0);
  if (!v4)
  {
    sub_10009DC80();
    goto LABEL_11;
  }
  long long v5 = (__CFString *)v4;
  uint64_t v6 = sub_10009DC80();
  uint64_t v8 = v7;

  sub_10000D308((uint64_t *)&unk_1000D59D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10009EF80;
  *(void *)(inited + 32) = sub_10009DC80();
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  unint64_t v11 = sub_100035590(inited);
  sub_10009DC80();
  if (!v11)
  {
LABEL_11:
    unint64_t v12 = 0;
    goto LABEL_12;
  }
  unint64_t v12 = sub_100012A28(v11);
  swift_bridgeObjectRelease();
LABEL_12:
  NSString v13 = sub_10009DC70();
  swift_bridgeObjectRelease();
  if (v12)
  {
    v14.super.isa = sub_10009DBB0().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v14.super.isa = 0;
  }
  id v2 = [objc_allocWithZone((Class)NSError) initWithDomain:v13 code:a1 userInfo:v14.super.isa];

  return v2;
}

unint64_t sub_100012A28(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10000D308(&qword_1000D5888);
    id v2 = (void *)sub_10009E100();
  }
  else
  {
    id v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (char *)&type metadata for Any + 8;
  unint64_t v11 = &type metadata for String;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_100013100();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100010784(v6, v7);
    sub_100010784(v7, v40);
    sub_100010784(v40, &v38);
    unint64_t result = sub_100035E30(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      NSString v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      os_log_type_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *os_log_type_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      unint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_1000100E8((uint64_t)v18);
      unint64_t result = (unint64_t)sub_100010784(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_100010784(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_100012D94(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10000D308(&qword_1000D5888);
    id v2 = (void *)sub_10009E100();
  }
  else
  {
    id v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (uint64_t *)&unk_1000D59E0;
  unint64_t v11 = (char *)&type metadata for Any + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_100013100();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_10000D308(v10);
    swift_dynamicCast();
    sub_100010784(v6, v7);
    sub_100010784(v7, v40);
    sub_100010784(v40, &v38);
    unint64_t result = sub_100035E30(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      NSString v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      os_log_type_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *os_log_type_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      unint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_1000100E8((uint64_t)v18);
      unint64_t result = (unint64_t)sub_100010784(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_100010784(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100013100()
{
  return swift_release();
}

uint64_t sub_100013108@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for AddDevicesExtensionContainerViewModelProvider();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = &off_1000CB278;
  sub_100013720();
  swift_retain();
  uint64_t v5 = sub_10009CDA0();
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_10001319C(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009CE60();
  sub_10000D690(v4, (uint64_t)qword_1000E3488);
  uint64_t v5 = sub_10009CE40();
  os_log_type_t v6 = sub_10009DED0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_10000DBA8(0xD000000000000019, 0x80000001000A6AF0, &v15);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Begin %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = self;
  id v9 = [v8 interfaceWithProtocol:&OBJC_PROTOCOL____TtP25AutomatedDeviceEnrollment39HostAppToAddDevicesExtensionXPCProtocol_];
  [a1 setExportedInterface:v9];

  [a1 setExportedObject:*(void *)(v2 + 16)];
  id v10 = [v8 interfaceWithProtocol:&OBJC_PROTOCOL____TtP25AutomatedDeviceEnrollment39AddDevicesExtensionToHostAppXPCProtocol_];
  [a1 setRemoteObjectInterface:v10];

  [a1 resume];
  uint64_t v11 = *(void *)(v2 + 16);
  unint64_t v12 = *(void **)(v11 + 16);
  *(void *)(v11 + 16) = a1;
  id v13 = a1;

  return 1;
}

uint64_t sub_1000133E0()
{
  swift_release();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesToADEExtensionConfiguration_content;
  uint64_t v2 = sub_10009CD90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100013488()
{
  return type metadata accessor for AddDevicesToADEExtensionConfiguration();
}

uint64_t type metadata accessor for AddDevicesToADEExtensionConfiguration()
{
  uint64_t result = qword_1000D5A18;
  if (!qword_1000D5A18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000134DC()
{
  uint64_t result = sub_10009CD90();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10001357C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesToADEExtensionConfiguration_content;
  uint64_t v4 = sub_10009CD90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1000135F4(void *a1)
{
  return 1;
}

uint64_t sub_10001361C()
{
  return sub_1000136DC(&qword_1000D5AC8);
}

uint64_t sub_100013650(void *a1)
{
  a1[1] = sub_1000136DC(&qword_1000D5AD0);
  a1[2] = sub_1000136DC(&qword_1000D5AD8);
  uint64_t result = sub_1000136DC(&qword_1000D5AE0);
  a1[3] = result;
  return result;
}

uint64_t sub_1000136DC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AddDevicesToADEExtensionConfiguration();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100013720()
{
  unint64_t result = qword_1000D5AE8;
  if (!qword_1000D5AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5AE8);
  }
  return result;
}

uint64_t sub_100013778()
{
  sub_1000100E8(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SignInViewModelProvider()
{
  return self;
}

uint64_t sub_1000137D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  os_log_type_t v6 = sub_100013860((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v6, a1, a3);
  type metadata accessor for SignInViewModelProvider();
  uint64_t v7 = swift_allocObject();
  sub_1000107E8(&v9, v7 + 16);
  return v7;
}

uint64_t *sub_100013860(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t *sub_1000138C4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10009CCA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    id v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    unint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    unint64_t v21 = (uint64_t *)((char *)a1 + v17);
    int64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *unint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000139E8(uint64_t a1)
{
  uint64_t v2 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100013A90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  id v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  unint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100013B64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100013C84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100013D1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100013DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100013E10);
}

uint64_t sub_100013E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100013EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100013EF4);
}

uint64_t sub_100013EF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10009CCA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for Device()
{
  uint64_t result = qword_1000D5C08;
  if (!qword_1000D5C08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100014000()
{
  uint64_t result = sub_10009CCA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001409C(char a1)
{
  return *(void *)&aIdentifimodeln[8 * a1];
}

BOOL sub_1000140BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000140D0()
{
  Swift::UInt v1 = *v0;
  sub_10009E2D0();
  sub_10009E2E0(v1);
  return sub_10009E300();
}

void sub_100014118()
{
  sub_10009E2E0(*v0);
}

Swift::Int sub_100014144()
{
  Swift::UInt v1 = *v0;
  sub_10009E2D0();
  sub_10009E2E0(v1);
  return sub_10009E300();
}

uint64_t sub_100014188()
{
  return sub_10001409C(*v0);
}

uint64_t sub_100014190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100014D2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000141B8()
{
  return 0;
}

void sub_1000141C4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1000141D0(uint64_t a1)
{
  unint64_t v2 = sub_100014914();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001420C(uint64_t a1)
{
  unint64_t v2 = sub_100014914();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100014248(void *a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D5C68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000FF9C(a1, a1[3]);
  sub_100014914();
  sub_10009E320();
  v8[15] = 0;
  sub_10009CCA0();
  sub_100014A28(&qword_1000D5C70);
  sub_10009E220();
  if (!v1)
  {
    type metadata accessor for Device();
    v8[14] = 1;
    sub_10009E1E0();
    v8[13] = 2;
    sub_10009E1E0();
    v8[12] = 3;
    sub_10009E1E0();
    v8[11] = 4;
    sub_10009E1E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100014480@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_10009CCA0();
  uint64_t v37 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10000D308(&qword_1000D5C50);
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Device();
  unint64_t v10 = (int *)__chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &v12[v10[7]];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v40 = (uint64_t *)v13;
  uint64_t v14 = &v12[v10[8]];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  unint64_t v41 = (uint64_t *)v14;
  uint64_t v15 = &v12[v10[9]];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v42 = (uint64_t *)v15;
  uint64_t v16 = &v12[v10[10]];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v39 = v16;
  sub_10000FF9C(a1, a1[3]);
  sub_100014914();
  sub_10009E310();
  if (v2)
  {
    sub_1000100E8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v36;
    uint64_t v18 = v37;
    uint64_t v34 = a1;
    char v47 = 0;
    sub_100014A28(&qword_1000D5C60);
    sub_10009E1B0();
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v6, v4);
    char v46 = 1;
    uint64_t v19 = sub_10009E170();
    uint64_t v20 = v40;
    *uint64_t v40 = v19;
    v20[1] = v21;
    char v45 = 2;
    uint64_t v22 = sub_10009E170();
    uint64_t v23 = v41;
    *unint64_t v41 = v22;
    v23[1] = v24;
    char v44 = 3;
    uint64_t v25 = sub_10009E170();
    uint64_t v26 = v42;
    *uint64_t v42 = v25;
    v26[1] = v27;
    char v43 = 4;
    uint64_t v28 = sub_10009E170();
    uint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v38);
    int64_t v31 = (uint64_t *)v39;
    swift_bridgeObjectRelease();
    *int64_t v31 = v28;
    v31[1] = v30;
    sub_100014968((uint64_t)v12, v35);
    sub_1000100E8((uint64_t)v34);
    return sub_1000149CC((uint64_t)v12);
  }
}

uint64_t sub_1000148E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100014480(a1, a2);
}

uint64_t sub_1000148FC(void *a1)
{
  return sub_100014248(a1);
}

unint64_t sub_100014914()
{
  unint64_t result = qword_1000D5C58;
  if (!qword_1000D5C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C58);
  }
  return result;
}

uint64_t sub_100014968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000149CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100014A28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10009CCA0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for AXMMDMServerType(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Device.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Device.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100014BD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_100014C00(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100014C0C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Device.CodingKeys()
{
  return &type metadata for Device.CodingKeys;
}

unint64_t sub_100014C28()
{
  unint64_t result = qword_1000D5C78;
  if (!qword_1000D5C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C78);
  }
  return result;
}

unint64_t sub_100014C80()
{
  unint64_t result = qword_1000D5C80;
  if (!qword_1000D5C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C80);
  }
  return result;
}

unint64_t sub_100014CD8()
{
  unint64_t result = qword_1000D5C88;
  if (!qword_1000D5C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5C88);
  }
  return result;
}

uint64_t sub_100014D2C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E6C65646F6DLL && a2 == 0xE900000000000065 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564496C65646F6DLL && a2 == 0xEF7265696669746ELL || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65767265536D646DLL && a2 == 0xED0000656D614E72)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_10009E260();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100014F7C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension19FakeDevicesProvider__enrollmentErrors;
  uint64_t v2 = sub_10000D308((uint64_t *)&unk_1000D9E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension19FakeDevicesProvider__assignmentStatus;
  uint64_t v4 = sub_10000D308((uint64_t *)&unk_1000D92F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100015098()
{
  return type metadata accessor for FakeDevicesProvider();
}

uint64_t type metadata accessor for FakeDevicesProvider()
{
  uint64_t result = qword_1000D5CC8;
  if (!qword_1000D5CC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000150EC()
{
  sub_1000151C8();
  if (v0 <= 0x3F)
  {
    sub_100015224();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000151C8()
{
  if (!qword_1000D8F50[0])
  {
    sub_10000AF84(&qword_1000D9EB0);
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, qword_1000D8F50);
    }
  }
}

void sub_100015224()
{
  if (!qword_1000D5CD8)
  {
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D5CD8);
    }
  }
}

uint64_t sub_10001527C(uint64_t a1, uint64_t a2)
{
  return sub_100015448(a1, a2, (uint64_t)&OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension19FakeDevicesProvider_pendingDevicesSubject, (uint64_t *)&unk_1000D9EA0, (unint64_t *)&unk_1000D9320);
}

uint64_t sub_100015298(uint64_t a1, uint64_t a2)
{
  return sub_1000152E0(a1, a2, (uint64_t *)&unk_1000D9300, (uint64_t)&OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension19FakeDevicesProvider__enrollmentErrors, (uint64_t *)&unk_1000D9E90, (unint64_t *)&unk_1000D9310);
}

uint64_t sub_1000152BC(uint64_t a1, uint64_t a2)
{
  return sub_1000152E0(a1, a2, &qword_1000D5E28, (uint64_t)&OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension19FakeDevicesProvider__assignmentStatus, (uint64_t *)&unk_1000D92F0, &qword_1000D5E30);
}

uint64_t sub_1000152E0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, unint64_t *a6)
{
  uint64_t v9 = sub_10000D308(a3);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(a5);
  sub_10009CF10();
  swift_endAccess();
  sub_100015700(a6, a3);
  uint64_t v13 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

uint64_t sub_10001542C(uint64_t a1, uint64_t a2)
{
  return sub_100015448(a1, a2, (uint64_t)&OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension19FakeDevicesProvider_enrolledDeviceRecordsSubject, &qword_1000D5E20, (unint64_t *)&unk_1000D92E0);
}

uint64_t sub_100015448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  return sub_10009CF60();
}

void sub_1000154C8()
{
}

void sub_1000154F8()
{
}

void sub_100015528()
{
}

void sub_100015558(uint64_t a1, unint64_t a2)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009CE60();
  sub_10000D690(v4, (uint64_t)qword_1000E3488);
  oslog = sub_10009CE40();
  os_log_type_t v5 = sub_10009DEA0();
  if (os_log_type_enabled(oslog, v5))
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)char v6 = 136315138;
    sub_10000DBA8(a1, a2, &v8);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100015700(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_100015744@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1000157C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *char v6 = v4;
  v6[1] = sub_10000CD64;
  v6[12] = a4;
  return _swift_task_switch(sub_100015894, 0, 0);
}

uint64_t sub_100015874()
{
  *(void *)(v1 + 96) = v0;
  return _swift_task_switch(sub_100015894, 0, 0);
}

uint64_t sub_100015894()
{
  uint64_t v1 = v0[12];
  v0[13] = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[14] = v2;
  v0[15] = swift_getObjectType();
  if (qword_1000D5290 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_1000E35C8;
  v0[16] = qword_1000E35C0;
  v0[17] = v3;
  v0[18] = *(void *)(v2 + 24);
  v0[19] = (v2 + 24) & 0xFFFFFFFFFFFFLL | 0xA2EC000000000000;
  uint64_t v5 = sub_10009DE10();
  return _swift_task_switch(sub_100015984, v5, v4);
}

uint64_t sub_100015984()
{
  uint64_t v1 = (void (*)(ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))v0[18];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  unint64_t v6 = sub_1000165E8();
  unint64_t v7 = sub_1000166AC();
  v1(&type metadata for MDMServerInfo, v3, v2, &type metadata for MDMServerInfo, v6, v7, v4, v5);
  v0[20] = 0;
  return _swift_task_switch(sub_100015A6C, 0, 0);
}

uint64_t sub_100015A6C()
{
  long long v6 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_OWORD *)(v0 + 56) = v6;
  *(void *)(v0 + 72) = v1;
  *(void *)(v0 + 80) = v2;
  *(unsigned char *)(v0 + 88) = v3;
  swift_retain();
  sub_10009CF40();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100015B44()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100015B5C()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension39KeyValueStoreBackedMDMServerInfoStorage__mdmServerInfo;
  uint64_t v2 = sub_10000D308(&qword_1000D9DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100015C08()
{
  return type metadata accessor for KeyValueStoreBackedMDMServerInfoStorage();
}

uint64_t type metadata accessor for KeyValueStoreBackedMDMServerInfoStorage()
{
  uint64_t result = qword_1000D5E68;
  if (!qword_1000D5E68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100015C5C()
{
  sub_100015CF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100015CF8()
{
  if (!qword_1000D5E80)
  {
    sub_10000AF84(&qword_1000D9E10);
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D5E80);
    }
  }
}

uint64_t sub_100015D54(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return _swift_task_switch(sub_100015D74, 0, 0);
}

uint64_t sub_100015D74()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  v0[9] = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  v0[10] = v3;
  v0[11] = swift_getObjectType();
  sub_100016580(v2, (uint64_t)(v0 + 2));
  if (qword_1000D5290 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)algn_1000E35C8;
  v0[12] = qword_1000E35C0;
  v0[13] = v4;
  v0[14] = *(void *)(v3 + 16);
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0x30FA000000000000;
  uint64_t v6 = sub_10009DE10();
  return _swift_task_switch(sub_100015E7C, v6, v5);
}

uint64_t sub_100015E7C()
{
  uint64_t v1 = (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[14];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = sub_10000D308(&qword_1000D9E10);
  uint64_t v7 = sub_10001663C(&qword_1000D5F68, (void (*)(void))sub_1000165E8);
  uint64_t v8 = sub_10001663C(&qword_1000D5F78, (void (*)(void))sub_1000166AC);
  v1(v0 + 2, v3, v2, v6, v7, v8, v4, v5);
  v0[16] = 0;
  return _swift_task_switch(sub_100015FD4, 0, 0);
}

uint64_t sub_100015FD4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100016580(v1, v0 + 16);
  swift_retain();
  sub_10001683C(v1);
  sub_10009CF40();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100016098()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000160B0(uint64_t a1)
{
  uint64_t v3 = *v1;
  v2[7] = a1;
  v2[8] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[9] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100016160;
  v4[12] = v3;
  return _swift_task_switch(sub_100015894, 0, 0);
}

uint64_t sub_100016160()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_100016290, 0, 0);
  }
}

uint64_t sub_100016290()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  char v2 = *(unsigned char *)(v0 + 48);
  long long v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 32) = v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100016358(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100010914;
  v5[7] = a1;
  v5[8] = v4;
  return _swift_task_switch(sub_100015D74, 0, 0);
}

uint64_t sub_100016408()
{
  uint64_t v0 = sub_10000D308(&qword_1000D5F50);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D9DE0);
  sub_10009CF10();
  swift_endAccess();
  sub_100016524();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

unint64_t sub_100016524()
{
  unint64_t result = qword_1000D5F58;
  if (!qword_1000D5F58)
  {
    sub_10000AF84(&qword_1000D5F50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D5F58);
  }
  return result;
}

uint64_t sub_100016580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D9E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000165E8()
{
  unint64_t result = qword_1000D5F70;
  if (!qword_1000D5F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5F70);
  }
  return result;
}

uint64_t sub_10001663C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(&qword_1000D9E10);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000166AC()
{
  unint64_t result = qword_1000D5F80;
  if (!qword_1000D5F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D5F80);
  }
  return result;
}

double sub_100016700@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10001678C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100016874(v1, v2);
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_10001683C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100016874(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_100016884(a1, a2);
  }
  return a1;
}

uint64_t sub_100016884(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000168CC()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for UserDefaultsBackedKeyValueStorage()
{
  return self;
}

uint64_t sub_100016928()
{
  return v0;
}

uint64_t sub_100016934()
{
  sub_10009C9A0();
  swift_allocObject();
  sub_10009C990();
  uint64_t v2 = sub_10009C980();
  unint64_t v4 = v3;
  uint64_t result = swift_release();
  if (!v1)
  {
    uint64_t v6 = *(void **)(v0 + 112);
    Class isa = sub_10009CB90().super.isa;
    NSString v8 = sub_10009DC70();
    [v6 setObject:isa forKey:v8];

    return sub_10000EE7C(v2, v4);
  }
  return result;
}

uint64_t sub_100016A30@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v10 = *(void **)(v4 + 112);
  NSString v11 = sub_10009DC70();
  id v12 = [v10 valueForKey:v11];

  if (v12)
  {
    sub_10009E000();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  sub_100016F54((uint64_t)v25, (uint64_t)v26);
  if (!v26[3])
  {
    sub_100016FBC((uint64_t)v26);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v20 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v20, 1, a3);
  }
  uint64_t type = a1;
  sub_10009C970();
  swift_allocObject();
  sub_10009C960();
  uint64_t v27 = a4;
  sub_10009C950();
  if (v5)
  {
    swift_release();
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10009CE60();
    sub_10000D690(v13, (uint64_t)qword_1000E3488);
    swift_bridgeObjectRetain();
    sub_10000EE24(v23, v24);
    swift_bridgeObjectRetain();
    sub_10000EE24(v23, v24);
    uint64_t v14 = sub_10009CE40();
    os_log_type_t v15 = sub_10009DEB0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      swift_bridgeObjectRetain();
      *(void *)&v25[0] = sub_10000DBA8(type, a2, v26);
      sub_10009DFC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2082;
      sub_10000EE24(v23, v24);
      uint64_t v17 = sub_10009CB70();
      unint64_t v19 = v18;
      sub_10000EE7C(v23, v24);
      *(void *)&v25[0] = sub_10000DBA8(v17, v19, v26);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      sub_10000EE7C(v23, v24);
      sub_10000EE7C(v23, v24);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error decoding value for key: %{public}s, encodedValue: %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();

      sub_10000EE7C(v23, v24);
    }
    else
    {
      sub_10000EE7C(v23, v24);
      swift_bridgeObjectRelease_n();
      sub_10000EE7C(v23, v24);
      sub_10000EE7C(v23, v24);
      swift_errorRelease();
    }
    uint64_t v20 = 1;
  }
  else
  {
    sub_10000EE7C(v23, v24);
    swift_release();
    uint64_t v20 = 0;
  }
  a4 = v27;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v20, 1, a3);
}

uint64_t sub_100016E58()
{
  return sub_100016934();
}

uint64_t sub_100016E70@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_100016A30(a1, a2, a3, a4);
}

void sub_100016E88()
{
  uint64_t v1 = *(void **)(v0 + 112);
  NSString v2 = sub_10009DC70();
  [v1 removeObjectForKey:v2];
}

unint64_t sub_100016ED8(uint64_t a1)
{
  unint64_t result = sub_100016F00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100016F00()
{
  unint64_t result = qword_1000D6038;
  if (!qword_1000D6038)
  {
    type metadata accessor for UserDefaultsBackedKeyValueStorage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6038);
  }
  return result;
}

uint64_t sub_100016F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D58B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016FBC(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D58B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001701C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

void sub_100017094()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 remoteObjectProxy];
    sub_10009E000();
    swift_unknownObjectRelease();
    sub_10000D308(&qword_1000D6170);
    if (swift_dynamicCast())
    {
      [v8 dismissAutomatedDeviceEnrollmentAdditionExtension];

      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1000D51D8 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_10009CE60();
      sub_10000D690(v4, (uint64_t)qword_1000E3488);
      uint64_t v5 = sub_10009CE40();
      os_log_type_t v6 = sub_10009DEB0();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        v9[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 136315138;
        sub_10000DBA8(0xD000000000000033, 0x80000001000A6EB0, v9);
        sub_10009DFC0();
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s Unable to retrieve remote object proxy to talk to the app", v7, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
    }
  }
}

void sub_1000172B0()
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  id v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEA0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    id v40 = (id)sub_10000DBA8(0xD000000000000011, 0x80000001000A6E70, (uint64_t *)&v41);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Begin %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = *(void **)(v0 + 16);
  if (v5)
  {
    id v6 = v5;
    [v6 auditToken];
    long long v37 = v42;
    long long v39 = v41;
    uint64_t v7 = self;
    id v40 = 0;
    long long v41 = v39;
    long long v42 = v37;
    id v8 = [v7 bundleRecordForAuditToken:&v41 error:&v40];
    id v9 = v40;
    if (v8)
    {
      id v10 = v8;
      id v11 = v8;
      id v12 = v9;
      uint64_t v13 = sub_10009CE40();
      os_log_type_t v14 = sub_10009DEA0();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        id v38 = v6;
        uint64_t v16 = (void *)swift_slowAlloc();
        *(void *)&long long v41 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315394;
        id v40 = (id)sub_10000DBA8(0xD000000000000011, 0x80000001000A6E70, (uint64_t *)&v41);
        sub_10009DFC0();
        *(_WORD *)(v15 + 12) = 2112;
        id v40 = v11;
        id v17 = v11;
        sub_10009DFC0();
        *uint64_t v16 = v10;

        _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s bundle record retrieved from auditToken is: %@", (uint8_t *)v15, 0x16u);
        sub_10000D308(&qword_1000D5880);
        swift_arrayDestroy();
        id v6 = v38;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v25 = [v11 bundleIdentifier];
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v27 = sub_10009DC80();
        uint64_t v29 = v28;

        if (v27 == 0xD00000000000001ALL && v29 == 0x80000001000A6E90)
        {
          swift_bridgeObjectRelease();
          uint64_t v30 = 1;
        }
        else
        {
          char v31 = sub_10009E260();
          swift_bridgeObjectRelease();
          uint64_t v30 = v31 & 1;
        }
      }
      else
      {
        uint64_t v30 = 0;
      }
      id v32 = [v11 bundleIdentifier];
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = sub_10009DC80();
        uint64_t v36 = v35;
      }
      else
      {
        uint64_t v34 = 0;
        uint64_t v36 = 0;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)&long long v41 = v30;
      *((void *)&v41 + 1) = v34;
      *(void *)&long long v42 = v36;
      swift_retain();
      sub_10009CF40();
    }
    else
    {
      id v18 = v40;
      sub_10009CA80();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      unint64_t v19 = sub_10009CE40();
      os_log_type_t v20 = sub_10009DEB0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = (void *)swift_slowAlloc();
        *(void *)&long long v41 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315394;
        id v40 = (id)sub_10000DBA8(0xD000000000000011, 0x80000001000A6E70, (uint64_t *)&v41);
        sub_10009DFC0();
        *(_WORD *)(v21 + 12) = 2112;
        swift_errorRetain();
        id v23 = v6;
        unint64_t v24 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v40 = v24;
        sub_10009DFC0();
        *uint64_t v22 = v24;
        id v6 = v23;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s Retrieving bundle record from audit token failed with error: %@", (uint8_t *)v21, 0x16u);
        sub_10000D308(&qword_1000D5880);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_getKeyPath();
      swift_getKeyPath();
      long long v41 = 0uLL;
      *(void *)&long long v42 = 0;
      swift_retain();
      sub_10009CF40();

      swift_errorRelease();
    }
  }
}

uint64_t sub_1000179C4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

uint64_t sub_100017A08()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension36ConcreteHostAppCommunicationProvider__hostAppInfo;
  uint64_t v2 = sub_10000D308(&qword_1000D6178);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100017AB4()
{
  return type metadata accessor for ConcreteHostAppCommunicationProvider();
}

uint64_t type metadata accessor for ConcreteHostAppCommunicationProvider()
{
  uint64_t result = qword_1000D6070;
  if (!qword_1000D6070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100017B08()
{
  sub_100017BA4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100017BA4()
{
  if (!qword_1000D6080)
  {
    sub_10000AF84((uint64_t *)&unk_1000D6088);
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D6080);
    }
  }
}

void *sub_100017C00()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100017C0C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ConcreteHostAppCommunicationProvider();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

double sub_100017C4C@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_100017CD8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100017D70(v1, v2, v3);
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_100017D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MDMServerSelectionViewNavigationLink(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for MDMServerSelectionViewNavigationLink()
{
  return swift_release();
}

void *assignWithCopy for MDMServerSelectionViewNavigationLink(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

__n128 initializeWithTake for MDMServerSelectionViewNavigationLink(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for MDMServerSelectionViewNavigationLink(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for MDMServerSelectionViewNavigationLink(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MDMServerSelectionViewNavigationLink(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MDMServerSelectionViewNavigationLink()
{
  return &type metadata for MDMServerSelectionViewNavigationLink;
}

uint64_t sub_100017F14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100017F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000D308(&qword_1000D6180);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  type metadata accessor for SettingsViewModel();
  sub_1000180CC();
  uint64_t v8 = sub_10009D280();
  if (v7)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v9;
    swift_retain();
    uint64_t v12 = sub_10009CE90();
    v14[0] = v10;
    v14[1] = v11;
    v14[2] = v12;
    v14[3] = v7;
    sub_10000D308(&qword_1000D6190);
    sub_100018124();
    sub_10009D180();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
  }
  else
  {
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

unint64_t sub_1000180CC()
{
  unint64_t result = qword_1000D6188;
  if (!qword_1000D6188)
  {
    type metadata accessor for SettingsViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6188);
  }
  return result;
}

unint64_t sub_100018124()
{
  unint64_t result = qword_1000D6198;
  if (!qword_1000D6198)
  {
    sub_10000AF84(&qword_1000D6190);
    sub_1000181C4();
    sub_100015700(&qword_1000D61A8, &qword_1000D61B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6198);
  }
  return result;
}

unint64_t sub_1000181C4()
{
  unint64_t result = qword_1000D61A0;
  if (!qword_1000D61A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D61A0);
  }
  return result;
}

uint64_t sub_100018218()
{
  return sub_100015700(&qword_1000D61B8, &qword_1000D6180);
}

uint64_t sub_100018258()
{
  return sub_100018280();
}

uint64_t sub_10001826C()
{
  return sub_100018280();
}

uint64_t sub_100018280()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

BOOL sub_1000182EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v0 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v0) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  return v2 != 0;
}

void *sub_1000183CC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  unint64_t v50 = a3;
  uint64_t v60 = a2;
  uint64_t v61 = a1;
  uint64_t v5 = sub_10000D308(&qword_1000D63A0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  __chkstk_darwin(v5);
  uint64_t v57 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000D308(&qword_1000D9E80);
  __chkstk_darwin(v8 - 8);
  uint64_t v52 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000D308(&qword_1000D63A8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  uint64_t v54 = v11;
  __chkstk_darwin(v10);
  uint64_t v49 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000D308(&qword_1000D63B0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  uint64_t v56 = v14;
  __chkstk_darwin(v13);
  uint64_t v51 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000D308(&qword_1000D6398);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000D308(&qword_1000D6390);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[9] = 0;
  v4[10] = 0;
  unint64_t v24 = (char *)v4
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension21DeviceStatusViewModel__pendingDevices;
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_10000D308(&qword_1000D6210);
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v23, v20);
  id v25 = (char *)v4
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension21DeviceStatusViewModel__enrolledDeviceSections;
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_10000D308((uint64_t *)&unk_1000D6220);
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v19, v16);
  uint64_t v26 = v61;
  sub_1000102FC((uint64_t)v61, (uint64_t)(v4 + 2));
  uint64_t v27 = v50;
  v4[7] = v60;
  v4[8] = v27;
  uint64_t v28 = v26[3];
  uint64_t v29 = v26[4];
  sub_10000FF9C(v26, v28);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8);
  swift_unknownObjectRetain();
  uint64_t v63 = (void *)v30(v28, v29);
  sub_10000D308(&qword_1000D63B8);
  unint64_t v50 = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_100015700(&qword_1000D63C0, &qword_1000D63B8);
  char v31 = v49;
  sub_10009CF70();
  swift_release();
  sub_10001B664();
  uint64_t v63 = (void *)sub_10009DF00();
  uint64_t v32 = sub_10009DEF0();
  uint64_t v33 = *(void *)(v32 - 8);
  char v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  uint64_t v48 = v33 + 56;
  uint64_t v34 = (uint64_t)v52;
  v47(v52, 1, 1, v32);
  sub_100015700(&qword_1000D63C8, &qword_1000D63A8);
  sub_10001B6A4((unint64_t *)&qword_1000D9F00, (void (*)(uint64_t))sub_10001B664);
  uint64_t v35 = v51;
  uint64_t v36 = v53;
  sub_10009CF90();
  sub_10001B6EC(v34);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v36);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v4;
  sub_100015700(&qword_1000D63D0, &qword_1000D63B0);
  uint64_t v37 = v55;
  id v38 = v35;
  uint64_t v39 = sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v37);
  v4[9] = v39;
  swift_release();
  uint64_t v40 = v61[3];
  uint64_t v41 = v61[4];
  sub_10000FF9C(v61, v40);
  uint64_t v63 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 32))(v40, v41);
  id v62 = (id)sub_10009DF00();
  v47((char *)v34, 1, 1, v32);
  sub_10000D308(&qword_1000D63D8);
  sub_100015700(&qword_1000D63E0, &qword_1000D63D8);
  long long v42 = v57;
  sub_10009CF90();
  sub_10001B6EC(v34);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v4;
  sub_100015700(&qword_1000D63E8, &qword_1000D63A0);
  uint64_t v43 = v58;
  uint64_t v44 = sub_10009CFA0();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v43);
  v4[10] = v44;
  swift_release();
  sub_1000100E8((uint64_t)v61);
  return v4;
}

uint64_t sub_100018BA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for Device();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = (int *)type metadata accessor for DeviceRowViewModel();
  uint64_t v26 = *((void *)v11 - 1);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  int64_t v16 = *(void *)(*a1 + 16);
  uint64_t v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    unint64_t v24 = a2;
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_10000E2D4(0, v16, 0);
    uint64_t v18 = v15 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v25 = *(void *)(v5 + 72);
    do
    {
      sub_10001B7FC(v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Device);
      sub_10001B7FC((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Device);
      uint64_t v19 = v11[8];
      uint64_t v20 = v11[9];
      uint64_t v21 = sub_10009CCA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v14, v8, v21);
      *(_OWORD *)&v14[v11[5]] = *(_OWORD *)&v8[v4[5]];
      *(_OWORD *)&v14[v11[6]] = *(_OWORD *)&v8[v4[6]];
      *(_OWORD *)&v14[v19] = *(_OWORD *)&v8[v4[7]];
      *(_OWORD *)&v14[v20] = *(_OWORD *)&v8[v4[8]];
      v14[v11[7]] = 1;
      sub_10001B8CC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Device);
      uint64_t v17 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10000E2D4(0, v17[2] + 1, 1);
        uint64_t v17 = v27;
      }
      unint64_t v23 = v17[2];
      unint64_t v22 = v17[3];
      if (v23 >= v22 >> 1)
      {
        sub_10000E2D4(v22 > 1, v23 + 1, 1);
        uint64_t v17 = v27;
      }
      v17[2] = v23 + 1;
      uint64_t result = sub_10001B864((uint64_t)v14, (uint64_t)v17+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v23, (uint64_t (*)(void))type metadata accessor for DeviceRowViewModel);
      v18 += v25;
      --v16;
    }
    while (v16);
    a2 = v24;
  }
  *a2 = v17;
  return result;
}

uint64_t sub_100018ECC()
{
  return sub_10009CF40();
}

uint64_t sub_100018F48(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_unownedRetainStrong();
  sub_100018F90(v1);

  return swift_release();
}

uint64_t sub_100018F90(uint64_t a1)
{
  uint64_t v107 = a1;
  uint64_t v146 = type metadata accessor for Device();
  __chkstk_darwin(v146);
  uint64_t v2 = (char *)v106 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (int *)type metadata accessor for DeviceRowViewModel();
  uint64_t v145 = *((void *)v3 - 1);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DeviceStatusSectionViewModel();
  uint64_t v130 = *(void *)(v6 - 8);
  uint64_t v131 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v140 = (uint64_t)v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v139 = (uint64_t)v106 - v9;
  uint64_t v10 = sub_10000D308(&qword_1000D63F0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  v135 = (char *)v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v14 = (unint64_t)v106 - v13;
  uint64_t v15 = sub_10000D308(&qword_1000D63F8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v126 = sub_10009CD00();
  v141 = *(char **)(v126 - 8);
  __chkstk_darwin(v126);
  v138 = (char *)v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10009CA40();
  v137 = *(void (***)(uint64_t, char *, uint8_t *))(v124 - 8);
  __chkstk_darwin(v124);
  v125 = (char *)v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint8_t *)sub_10009CC50();
  uint64_t v132 = *((void *)v20 - 1);
  uint64_t v21 = __chkstk_darwin(v20);
  v144 = (char *)v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v123 = (char *)v106 - v23;
  uint64_t v147 = type metadata accessor for EnrolledDeviceRecord();
  uint64_t v127 = *(void *)(v147 - 8);
  uint64_t v24 = __chkstk_darwin(v147);
  uint64_t v26 = (char *)v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v122 = (uint64_t)v106 - v28;
  __chkstk_darwin(v27);
  v142 = (void *)((char *)v106 - v29);
  if (qword_1000D51D8 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    uint64_t v30 = sub_10009CE60();
    v106[1] = sub_10000D690(v30, (uint64_t)qword_1000E3488);
    char v31 = sub_10009CE40();
    os_log_type_t v32 = sub_10009DEA0();
    BOOL v33 = os_log_type_enabled(v31, v32);
    unint64_t v136 = v14;
    v128 = v17;
    if (v33)
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      v149 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136315138;
      v143 = v34 + 4;
      uint64_t v148 = sub_10000DBA8(0xD00000000000001DLL, 0x80000001000A7020, (uint64_t *)&v149);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s begin", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v14 = v136;
      swift_slowDealloc();
    }

    uint64_t v35 = (char *)&_swiftEmptyDictionarySingleton;
    v149 = (char *)&_swiftEmptyDictionarySingleton;
    uint64_t v36 = *(void *)(v107 + 16);
    uint64_t v17 = v135;
    v143 = v20;
    if (!v36) {
      break;
    }
    uint64_t v37 = *(unsigned __int8 *)(v127 + 80);
    uint64_t v38 = (v37 + 32) & ~v37;
    uint64_t v39 = v107 + v38;
    uint64_t v40 = *(void *)(v127 + 72);
    unsigned int v121 = enum case for Calendar.Component.calendar(_:);
    unsigned int v120 = enum case for Calendar.Component.year(_:);
    unsigned int v119 = enum case for Calendar.Component.month(_:);
    v118 = (void (**)(char *, int64_t))(v141 + 8);
    v117 = (unsigned int (**)(char *, uint64_t, uint8_t *))(v132 + 48);
    v114 = (void (**)(char *, uint64_t))(v137 + 1);
    unsigned int v116 = enum case for Calendar.Component.day(_:);
    v129 = (uint8_t **)(v132 + 32);
    uint64_t v113 = v38;
    uint64_t v111 = v40 + v38;
    uint64_t v110 = v37 | 7;
    v109 = (void (**)(uint64_t, uint8_t *))(v132 + 8);
    swift_bridgeObjectRetain();
    long long v115 = xmmword_10009F9B0;
    long long v108 = xmmword_10009EF80;
    uint64_t v112 = v40;
    while (1)
    {
      uint64_t v133 = v39;
      uint64_t v134 = v36;
      v141 = v35;
      sub_10001B7FC(v39, (uint64_t)v142, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
      sub_10009CCE0();
      sub_10000D308(&qword_1000D6370);
      uint64_t v43 = sub_10009CCF0();
      uint64_t v44 = *(void *)(v43 - 8);
      uint64_t v45 = *(void *)(v44 + 72);
      unint64_t v46 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      char v47 = (void (**)(uint64_t, char *, uint8_t *))swift_allocObject();
      v137 = v47;
      *((_OWORD *)v47 + 1) = v115;
      uint64_t v48 = (char *)v47 + v46;
      uint64_t v49 = *(void (**)(char *, void, uint64_t))(v44 + 104);
      v49(v48, v121, v43);
      v49(&v48[v45], v120, v43);
      v49(&v48[2 * v45], v119, v43);
      v49(&v48[3 * v45], v116, v43);
      sub_10008D704((uint64_t)v137);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      unint64_t v50 = v125;
      uint64_t v51 = v138;
      sub_10009CCD0();
      swift_bridgeObjectRelease();
      (*v118)(v51, v126);
      uint64_t v17 = v128;
      sub_10009CA10();
      uint64_t v52 = v143;
      if ((*v117)(v17, 1, v143) == 1) {
        goto LABEL_68;
      }
      (*v114)(v50, v124);
      uint64_t v20 = *v129;
      uint64_t v53 = (uint64_t)v123;
      ((void (*)(char *, char *, uint8_t *))*v129)(v123, v17, v52);
      uint64_t v35 = v141;
      unint64_t v14 = sub_100035F60(v53);
      uint64_t v55 = *((void *)v35 + 2);
      BOOL v56 = (v54 & 1) == 0;
      uint64_t v57 = v55 + v56;
      if (__OFADD__(v55, v56)) {
        break;
      }
      char v58 = v54;
      uint64_t v17 = v135;
      if (*((void *)v35 + 3) < v57)
      {
        sub_10007B4EC(v57, 1);
        uint64_t v35 = v149;
        unint64_t v59 = sub_100035F60(v53);
        if ((v58 & 1) != (v60 & 1)) {
          goto LABEL_69;
        }
        unint64_t v14 = v59;
      }
      if (v58)
      {
        (*v109)(v53, v143);
        uint64_t v35 = v149;
        uint64_t v61 = *((void *)v149 + 7);
        sub_10001B864((uint64_t)v142, v122, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
        unint64_t v62 = *(void *)(v61 + 8 * v14);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v61 + 8 * v14) = v62;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v62 = sub_10008D2D8(0, *(void *)(v62 + 16) + 1, 1, v62);
          *(void *)(v61 + 8 * v14) = v62;
        }
        unint64_t v65 = *(void *)(v62 + 16);
        unint64_t v64 = *(void *)(v62 + 24);
        if (v65 >= v64 >> 1)
        {
          unint64_t v62 = sub_10008D2D8(v64 > 1, v65 + 1, 1, v62);
          *(void *)(v61 + 8 * v14) = v62;
        }
        unint64_t v14 = v136;
        uint64_t v41 = v133;
        *(void *)(v62 + 16) = v65 + 1;
        uint64_t v42 = v112;
        sub_10001B864(v122, v62 + v113 + v65 * v112, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
        uint64_t v17 = v135;
      }
      else
      {
        sub_10000D308(&qword_1000D5850);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = v108;
        sub_10001B864((uint64_t)v142, v66 + v113, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
        *(void *)&v35[8 * (v14 >> 6) + 64] |= 1 << v14;
        ((void (*)(unint64_t, uint64_t, uint8_t *))v20)(*((void *)v35 + 6) + *(void *)(v132 + 72) * v14, v53, v143);
        *(void *)(*((void *)v35 + 7) + 8 * v14) = v66;
        uint64_t v67 = *((void *)v35 + 2);
        BOOL v68 = __OFADD__(v67, 1);
        uint64_t v69 = v67 + 1;
        if (v68) {
          goto LABEL_65;
        }
        *((void *)v35 + 2) = v69;
        unint64_t v14 = v136;
        uint64_t v41 = v133;
        uint64_t v42 = v112;
      }
      uint64_t v39 = v41 + v42;
      uint64_t v36 = v134 - 1;
      if (v134 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v143;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
  }
LABEL_21:
  uint64_t v134 = 0;
  uint64_t v70 = *((void *)v35 + 8);
  v125 = v35 + 64;
  uint64_t v71 = 1 << v35[32];
  uint64_t v72 = -1;
  if (v71 < 64) {
    uint64_t v72 = ~(-1 << v71);
  }
  unint64_t v73 = v72 & v70;
  v137 = (void (**)(uint64_t, char *, uint8_t *))(v132 + 16);
  v129 = (uint8_t **)(v132 + 32);
  v128 = (char *)(v132 + 8);
  int64_t v126 = (unint64_t)(v71 + 63) >> 6;
  uint64_t v124 = v126 - 1;
  uint64_t v74 = _swiftEmptyArrayStorage;
  v141 = v35;
  v142 = _swiftEmptyArrayStorage;
  if ((v72 & v70) != 0)
  {
LABEL_24:
    unint64_t v75 = v14;
    v138 = (char *)((v73 - 1) & v73);
    unint64_t v76 = __clz(__rbit64(v73)) | (v134 << 6);
LABEL_25:
    (*(void (**)(char *, unint64_t, uint8_t *))(v132 + 16))(v17, *((void *)v35 + 6) + *(void *)(v132 + 72) * v76, v20);
    uint64_t v77 = *((void *)v35 + 7);
    uint64_t v78 = sub_10000D308(&qword_1000D6400);
    *(void *)&v17[*(int *)(v78 + 48)] = *(void *)(v77 + 8 * v76);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v17, 0, 1, v78);
    swift_bridgeObjectRetain();
    unint64_t v14 = v75;
    uint64_t v74 = v142;
    goto LABEL_44;
  }
  while (1)
  {
    int64_t v79 = v134 + 1;
    if (__OFADD__(v134, 1)) {
      goto LABEL_64;
    }
    if (v79 < v126)
    {
      unint64_t v80 = *(void *)&v125[8 * v79];
      if (v80) {
        goto LABEL_29;
      }
      int64_t v81 = v134 + 2;
      ++v134;
      if (v79 + 1 < v126)
      {
        unint64_t v80 = *(void *)&v125[8 * v81];
        if (v80) {
          goto LABEL_32;
        }
        uint64_t v134 = v79 + 1;
        if (v79 + 2 < v126)
        {
          unint64_t v80 = *(void *)&v125[8 * v79 + 16];
          if (v80)
          {
            v79 += 2;
LABEL_29:
            unint64_t v75 = v14;
            v138 = (char *)((v80 - 1) & v80);
            unint64_t v76 = __clz(__rbit64(v80)) + (v79 << 6);
            uint64_t v134 = v79;
            goto LABEL_25;
          }
          int64_t v81 = v79 + 3;
          uint64_t v134 = v79 + 2;
          if (v79 + 3 < v126)
          {
            unint64_t v80 = *(void *)&v125[8 * v81];
            if (!v80)
            {
              while (1)
              {
                int64_t v79 = v81 + 1;
                if (__OFADD__(v81, 1)) {
                  break;
                }
                if (v79 >= v126)
                {
                  uint64_t v134 = v124;
                  goto LABEL_43;
                }
                unint64_t v80 = *(void *)&v125[8 * v79];
                ++v81;
                if (v80) {
                  goto LABEL_29;
                }
              }
              __break(1u);
LABEL_68:
              __break(1u);
LABEL_69:
              uint64_t result = sub_10009E280();
              __break(1u);
              return result;
            }
LABEL_32:
            int64_t v79 = v81;
            goto LABEL_29;
          }
        }
      }
    }
LABEL_43:
    uint64_t v82 = sub_10000D308(&qword_1000D6400);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v17, 1, 1, v82);
    v138 = 0;
LABEL_44:
    sub_10001B794((uint64_t)v17, v14);
    uint64_t v83 = sub_10000D308(&qword_1000D6400);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48))(v14, 1, v83) == 1)break; {
    uint64_t v84 = *(void *)(v14 + *(int *)(v83 + 48));
    }
    ((void (*)(char *, unint64_t, uint8_t *))*v129)(v144, v14, v20);
    int64_t v85 = *(void *)(v84 + 16);
    if (v85)
    {
      v149 = (char *)_swiftEmptyArrayStorage;
      sub_10000E2D4(0, v85, 0);
      uint64_t v86 = *(unsigned __int8 *)(v127 + 80);
      uint64_t v133 = v84;
      uint64_t v87 = v84 + ((v86 + 32) & ~v86);
      uint64_t v88 = *(void *)(v127 + 72);
      do
      {
        sub_10001B7FC(v87, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
        char v89 = v26[*(int *)(v147 + 24)] + 2;
        sub_10001B7FC((uint64_t)v26, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for Device);
        uint64_t v90 = v3[8];
        uint64_t v91 = v3[9];
        uint64_t v92 = sub_10009CCA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v5, v2, v92);
        uint64_t v93 = (int *)v146;
        *(_OWORD *)&v5[v3[5]] = *(_OWORD *)&v2[*(int *)(v146 + 20)];
        *(_OWORD *)&v5[v3[6]] = *(_OWORD *)&v2[v93[6]];
        *(_OWORD *)&v5[v90] = *(_OWORD *)&v2[v93[7]];
        *(_OWORD *)&v5[v91] = *(_OWORD *)&v2[v93[8]];
        v5[v3[7]] = v89;
        sub_10001B8CC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
        uint64_t v94 = v149;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10000E2D4(0, *((void *)v94 + 2) + 1, 1);
          uint64_t v94 = v149;
        }
        unint64_t v96 = *((void *)v94 + 2);
        unint64_t v95 = *((void *)v94 + 3);
        if (v96 >= v95 >> 1)
        {
          sub_10000E2D4(v95 > 1, v96 + 1, 1);
          uint64_t v94 = v149;
        }
        *((void *)v94 + 2) = v96 + 1;
        sub_10001B864((uint64_t)v5, (uint64_t)&v94[((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80))+ *(void *)(v145 + 72) * v96], (uint64_t (*)(void))type metadata accessor for DeviceRowViewModel);
        v87 += v88;
        --v85;
      }
      while (v85);
      swift_bridgeObjectRelease();
      v97 = v135;
      uint64_t v74 = v142;
      uint64_t v20 = v143;
    }
    else
    {
      v97 = v17;
      swift_bridgeObjectRelease();
      uint64_t v94 = (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v98 = v139;
    (*v137)(v139, v144, v20);
    *(void *)(v98 + *(int *)(v131 + 20)) = v94;
    sub_10001B7FC(v98, v140, (uint64_t (*)(void))type metadata accessor for DeviceStatusSectionViewModel);
    char v99 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = v136;
    if ((v99 & 1) == 0) {
      uint64_t v74 = (void *)sub_10008D30C(0, v74[2] + 1, 1, (unint64_t)v74);
    }
    uint64_t v35 = v141;
    unint64_t v101 = v74[2];
    unint64_t v100 = v74[3];
    if (v101 >= v100 >> 1) {
      uint64_t v74 = (void *)sub_10008D30C(v100 > 1, v101 + 1, 1, (unint64_t)v74);
    }
    v74[2] = v101 + 1;
    sub_10001B864(v140, (uint64_t)v74+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(void *)(v130 + 72) * v101, (uint64_t (*)(void))type metadata accessor for DeviceStatusSectionViewModel);
    sub_10001B8CC(v139, (uint64_t (*)(void))type metadata accessor for DeviceStatusSectionViewModel);
    uint64_t v20 = v143;
    (*(void (**)(char *, uint8_t *))v128)(v144, v143);
    uint64_t v17 = v97;
    unint64_t v73 = (unint64_t)v138;
    v142 = v74;
    if (v138) {
      goto LABEL_24;
    }
  }
  swift_release();
  v102 = sub_10009CE40();
  os_log_type_t v103 = sub_10009DEA0();
  if (os_log_type_enabled(v102, v103))
  {
    v104 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v104 = 0;
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "Publishing device status enrolled device changes", v104, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  v149 = (char *)v74;
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_10001A2E0(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v2 - 8);
  unint64_t v59 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10009CD00();
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  __chkstk_darwin(v4);
  BOOL v68 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10009CA40();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10009CC50();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v57 - v13;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10009CE60();
  uint64_t v16 = sub_10000D690(v15, (uint64_t)qword_1000E3488);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v71 = a1;
  uint64_t v63 = v17;
  uint64_t v64 = v9 + 16;
  v17(v14, a1, v8);
  uint64_t v65 = v16;
  uint64_t v18 = sub_10009CE40();
  os_log_type_t v19 = sub_10009DEA0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v62 = v9;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    char v58 = v12;
    uint64_t v74 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v73 = sub_10000DBA8(0xD00000000000001ALL, 0x80000001000A7000, &v74);
    sub_10009DFC0();
    *(_WORD *)(v21 + 12) = 2080;
    sub_10001B6A4(&qword_1000D6378, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v23 = sub_10009E230();
    uint64_t v73 = sub_10000DBA8(v23, v24, &v74);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    uint64_t v25 = v8;
    uint64_t v61 = *(void (**)(char *, uint64_t))(v9 + 8);
    v61(v14, v8);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s begin with date: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    uint64_t v12 = v58;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v25 = v8;
    uint64_t v61 = *(void (**)(char *, uint64_t))(v9 + 8);
    v61(v14, v8);
  }

  uint64_t v26 = v68;
  sub_10009CCE0();
  sub_10000D308(&qword_1000D6370);
  uint64_t v27 = sub_10009CCF0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 72);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10009F9B0;
  unint64_t v32 = v31 + v30;
  BOOL v33 = *(void (**)(unint64_t, void, uint64_t))(v28 + 104);
  v33(v32, enum case for Calendar.Component.calendar(_:), v27);
  v33(v32 + v29, enum case for Calendar.Component.year(_:), v27);
  v33(v32 + 2 * v29, enum case for Calendar.Component.month(_:), v27);
  v33(v32 + 3 * v29, enum case for Calendar.Component.day(_:), v27);
  sub_10008D704(v31);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v34 = v71;
  uint64_t v35 = v72;
  sub_10009CCD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v26, v70);
  uint64_t v36 = sub_10009CA20();
  if ((v37 & 1) != 0
    || (uint64_t v38 = v36, v39 = sub_10009CA30(), (v40 & 1) != 0)
    || (uint64_t v41 = v39, v42 = sub_10009CA00(), (v43 & 1) != 0))
  {
    v63(v12, v34, v25);
    unint64_t v50 = sub_10009CE40();
    os_log_type_t v51 = sub_10009DEB0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = v12;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v73 = sub_10000DBA8(0xD00000000000001ALL, 0x80000001000A7000, &v74);
      sub_10009DFC0();
      *(_WORD *)(v53 + 12) = 2080;
      sub_10001B6A4(&qword_1000D6378, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v54 = sub_10009E230();
      uint64_t v73 = sub_10000DBA8(v54, v55, &v74);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      v61(v52, v25);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "%s: %s is missing one of the required components", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v61(v12, v25);
    }
  }
  else
  {
    uint64_t v44 = v42;
    uint64_t v45 = sub_10009DE70();
    uint64_t v46 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v59, 1, 1, v45);
    sub_10009DE40();
    uint64_t v47 = v60;
    swift_retain();
    uint64_t v48 = sub_10009DE30();
    uint64_t v49 = (void *)swift_allocObject();
    v49[2] = v48;
    v49[3] = &protocol witness table for MainActor;
    v49[4] = v47;
    v49[5] = v38;
    v49[6] = v41;
    v49[7] = v44;
    sub_100088B08(v46, (uint64_t)&unk_1000D6388, (uint64_t)v49);
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v35, v67);
}

uint64_t sub_10001AB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_10009DE40();
  v7[6] = sub_10009DE30();
  uint64_t v9 = sub_10009DE10();
  v7[7] = v9;
  v7[8] = v8;
  return _swift_task_switch(sub_10001AC38, v9, v8);
}

uint64_t sub_10001AC38()
{
  uint64_t v1 = *(void *)(v0[2] + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 32) + **(int **)(v1 + 32));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10001AD44;
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  return v8(v6, v4, v5, ObjectType, v1);
}

uint64_t sub_10001AD44()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10001AE64, v3, v2);
}

uint64_t sub_10001AE64()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001AEC4()
{
  uint64_t v1 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_10000DBA8(0xD000000000000015, 0x80000001000A6FE0, &v10);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v6 = v1 + 2;
  uint64_t v8 = v1[5];
  uint64_t v7 = v1[6];
  sub_10000FF9C(v6, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(v8, v7);
}

uint64_t sub_10001B074()
{
  sub_1000100E8(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension21DeviceStatusViewModel__pendingDevices;
  uint64_t v2 = sub_10000D308(&qword_1000D6390);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension21DeviceStatusViewModel__enrolledDeviceSections;
  uint64_t v4 = sub_10000D308(&qword_1000D6398);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_10001B180()
{
  return type metadata accessor for DeviceStatusViewModel();
}

uint64_t type metadata accessor for DeviceStatusViewModel()
{
  uint64_t result = qword_1000D61F8;
  if (!qword_1000D61F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001B1D4()
{
  sub_10001B2DC(319, &qword_1000D6208, &qword_1000D6210);
  if (v0 <= 0x3F)
  {
    sub_10001B2DC(319, &qword_1000D6218, (uint64_t *)&unk_1000D6220);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10001B2DC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10000AF84(a3);
    unint64_t v4 = sub_10009CF50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10001B32C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DeviceStatusViewModel();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

uint64_t sub_10001B36C@<X0>(void *a1@<X8>)
{
  return sub_10001B3A8(a1);
}

uint64_t sub_10001B380()
{
  return sub_10001B438();
}

uint64_t sub_10001B394@<X0>(void *a1@<X8>)
{
  return sub_10001B3A8(a1);
}

uint64_t sub_10001B3A8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10001B424()
{
  return sub_10001B438();
}

uint64_t sub_10001B438()
{
  return sub_10009CF40();
}

uint64_t sub_10001B4B0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10001B4F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000CD64;
  return sub_10001AB9C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10001B5C4@<X0>(void *a1@<X8>)
{
  return sub_10001B3A8(a1);
}

uint64_t sub_10001B5EC()
{
  return sub_10001B438();
}

uint64_t sub_10001B614@<X0>(void *a1@<X8>)
{
  return sub_10001B3A8(a1);
}

uint64_t sub_10001B63C()
{
  return sub_10001B438();
}

unint64_t sub_10001B664()
{
  unint64_t result = qword_1000D69E0;
  if (!qword_1000D69E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D69E0);
  }
  return result;
}

uint64_t sub_10001B6A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001B6EC(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D9E80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001B74C()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001B784()
{
  return sub_100018ECC();
}

uint64_t sub_10001B78C(uint64_t *a1)
{
  return sub_100018F48(a1);
}

uint64_t sub_10001B794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D63F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001B7FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001B864(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001B8CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_10001B930(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *uint64_t v4 = *a2;
    v4[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_10009D120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    *uint64_t v15 = v17;
    v15[1] = v18;
    os_log_type_t v19 = (uint64_t *)((char *)v4 + v14);
    BOOL v20 = (uint64_t *)((char *)a2 + v14);
    uint64_t v21 = v20[1];
    *os_log_type_t v19 = *v20;
    v19[1] = v21;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10001BA84(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

void *sub_10001BB4C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10009D120();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  *uint64_t v13 = v15;
  v13[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v12);
  uint64_t v18 = (void *)((char *)a2 + v12);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_10001BC54(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100010864((uint64_t)a1 + v6, (uint64_t *)&unk_1000DA200);
    sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_10009D120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10001BDA8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10009D120();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  return a1;
}

void *sub_10001BEA0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100010864((uint64_t)a1 + v6, (uint64_t *)&unk_1000DA200);
    uint64_t v9 = sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10009D120();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_release();
  *((void *)v12 + 1) = *((void *)v13 + 1);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_10001BFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001BFFC);
}

uint64_t sub_10001BFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000D308(&qword_1000D6408);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10001C0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001C0D8);
}

uint64_t sub_10001C0D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000D308(&qword_1000D6408);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DeviceStatusView()
{
  uint64_t result = qword_1000D6468;
  if (!qword_1000D6468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001C1E8()
{
  sub_10001C290();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10001C290()
{
  if (!qword_1000D6478)
  {
    sub_10009D120();
    unint64_t v0 = sub_10009D0C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D6478);
    }
  }
}

uint64_t sub_10001C2E8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10001C304(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000D308(&qword_1000D64B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D64B8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_10009D400();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v10 = sub_10000D308(&qword_1000D64C0);
  sub_10001C4B4(v2, (uint64_t)&v6[*(int *)(v10 + 44)]);
  NSString v11 = sub_10009DC70();
  id v12 = [self colorNamed:v11];

  if (v12)
  {
    uint64_t v13 = sub_10009D8A0();
    char v14 = sub_10009D600();
    sub_100010720((uint64_t)v6, (uint64_t)v9, &qword_1000D64B0);
    uint64_t v15 = &v9[*(int *)(v7 + 36)];
    *(void *)uint64_t v15 = v13;
    v15[8] = v14;
    sub_100010864((uint64_t)v6, &qword_1000D64B0);
    sub_100010800((uint64_t)v9, a1, &qword_1000D64B8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10001C4B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  BOOL v68 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10009DC60();
  __chkstk_darwin(v6 - 8);
  uint64_t v66 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10000D308(&qword_1000D64C8);
  __chkstk_darwin(v80);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10009D520();
  uint64_t v69 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  NSString v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10000D308(&qword_1000D64D0);
  uint64_t v67 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10000D308(&qword_1000D64D8);
  uint64_t v71 = *(void *)(v83 - 8);
  uint64_t v14 = __chkstk_darwin(v83);
  uint64_t v65 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v70 = (char *)&v64 - v16;
  uint64_t v17 = sub_10000D308(&qword_1000D64E0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  BOOL v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v84 = (char *)&v64 - v21;
  uint64_t v22 = type metadata accessor for DeviceStatusView();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  __chkstk_darwin(v22);
  sub_10001FDE4((uint64_t)a1, (uint64_t)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DeviceStatusView);
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v82 = swift_allocObject();
  sub_10001E3D4((uint64_t)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v82 + v25);
  LOBYTE(v25) = sub_10009D620();
  int v26 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v25) {
    int v26 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v35 = a1[1];
  uint64_t v99 = *a1;
  uint64_t v100 = v35;
  sub_10000D308(&qword_1000D64E8);
  sub_10009D960();
  sub_10009DA90();
  sub_10009D0E0();
  if (*(uint64_t *)((char *)a1 + *(int *)(v22 + 24)))
  {
    int v78 = v26;
    int64_t v85 = v20;
    uint64_t v77 = v99;
    int v76 = v100;
    uint64_t v75 = v101;
    int v74 = v102;
    uint64_t v73 = v103;
    uint64_t v72 = v104;
    swift_retain();
    BOOL v36 = sub_1000182EC();
    uint64_t v37 = swift_release();
    if (v36)
    {
      __chkstk_darwin(v37);
      *(&v64 - 2) = (uint64_t)a1;
      sub_10000D308(&qword_1000D6518);
      BOOL v68 = (char *)&protocol conformance descriptor for TupleView<A>;
      sub_100015700(&qword_1000D6520, &qword_1000D6518);
      sub_10009D6F0();
      sub_10009D510();
      uint64_t v38 = sub_100015700(&qword_1000D6500, &qword_1000D64D0);
      uint64_t v39 = v65;
      uint64_t v40 = v79;
      uint64_t v41 = v81;
      sub_10009D840();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v11, v41);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v40);
      uint64_t v42 = v71;
      char v43 = v70;
      uint64_t v44 = v39;
      uint64_t v45 = v83;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v44, v83);
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v9, v43, v45);
      swift_storeEnumTagMultiPayload();
      sub_10000D308(&qword_1000D64F8);
      uint64_t v86 = v40;
      uint64_t v87 = v41;
      uint64_t v88 = v38;
      char v89 = &protocol witness table for InsetGroupedListStyle;
      swift_getOpaqueTypeConformance2();
      sub_100015700(&qword_1000D6508, &qword_1000D64F8);
      uint64_t v46 = (uint64_t)v84;
      sub_10009D4E0();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v45);
    }
    else
    {
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v86 = sub_10009DCE0();
      uint64_t v87 = v47;
      sub_10001E4B8();
      uint64_t v48 = sub_10009D750();
      uint64_t v50 = v49;
      uint64_t v52 = v51;
      char v54 = v53 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v56 = sub_10009D930();
      uint64_t v57 = swift_getKeyPath();
      LODWORD(v69) = sub_10009D600();
      char v93 = 1;
      char v92 = v54;
      char v91 = 1;
      char v90 = 1;
      sub_10001F79C(v48, v50, v54);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10001F79C(v48, v50, v54);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10001F7AC(v48, v50, v54);
      swift_release();
      swift_release();
      uint64_t v70 = (char *)KeyPath;
      swift_release();
      uint64_t v71 = v52;
      swift_bridgeObjectRelease();
      *(void *)uint64_t v9 = 0;
      v9[8] = 1;
      *(_DWORD *)(v9 + 9) = *(_DWORD *)v98;
      *((_DWORD *)v9 + 3) = *(_DWORD *)&v98[3];
      *((void *)v9 + 2) = v48;
      *((void *)v9 + 3) = v50;
      v9[32] = v54;
      *(_DWORD *)(v9 + 33) = *(_DWORD *)v97;
      *((_DWORD *)v9 + 9) = *(_DWORD *)&v97[3];
      *((void *)v9 + 5) = v52;
      *((void *)v9 + 6) = KeyPath;
      v9[56] = 1;
      *(_DWORD *)(v9 + 57) = *(_DWORD *)v96;
      *((_DWORD *)v9 + 15) = *(_DWORD *)&v96[3];
      *((void *)v9 + 8) = v57;
      *((void *)v9 + 9) = v56;
      v9[80] = v69;
      *((_DWORD *)v9 + 21) = *(_DWORD *)&v95[3];
      *(_DWORD *)(v9 + 81) = *(_DWORD *)v95;
      *(_OWORD *)(v9 + 104) = 0u;
      *(_OWORD *)(v9 + 88) = 0u;
      v9[120] = 1;
      *(_DWORD *)(v9 + 121) = *(_DWORD *)v94;
      *((_DWORD *)v9 + 31) = *(_DWORD *)&v94[3];
      *((void *)v9 + 16) = 0;
      v9[136] = 1;
      swift_storeEnumTagMultiPayload();
      sub_10000D308(&qword_1000D64F8);
      uint64_t v58 = sub_100015700(&qword_1000D6500, &qword_1000D64D0);
      uint64_t v86 = v79;
      uint64_t v87 = v81;
      uint64_t v88 = v58;
      char v89 = &protocol witness table for InsetGroupedListStyle;
      swift_getOpaqueTypeConformance2();
      sub_100015700(&qword_1000D6508, &qword_1000D64F8);
      uint64_t v46 = (uint64_t)v84;
      sub_10009D4E0();
      sub_10001F7AC(v48, v50, v54);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    uint64_t v59 = (uint64_t)v85;
    sub_100010720(v46, (uint64_t)v85, &qword_1000D64E0);
    uint64_t v60 = v82;
    *(void *)a2 = sub_10001E438;
    *(void *)(a2 + 8) = v60;
    *(unsigned char *)(a2 + 16) = v78;
    *(void *)(a2 + 24) = v28;
    *(void *)(a2 + 32) = v30;
    *(void *)(a2 + 40) = v32;
    *(void *)(a2 + 48) = v34;
    *(unsigned char *)(a2 + 56) = 0;
    *(void *)(a2 + 64) = v77;
    *(unsigned char *)(a2 + 72) = v76;
    *(void *)(a2 + 80) = v75;
    *(unsigned char *)(a2 + 88) = v74;
    uint64_t v61 = v72;
    *(void *)(a2 + 96) = v73;
    *(void *)(a2 + 104) = v61;
    uint64_t v62 = sub_10000D308(&qword_1000D6510);
    sub_100010720(v59, a2 + *(int *)(v62 + 48), &qword_1000D64E0);
    swift_retain();
    sub_100010864(v46, &qword_1000D64E0);
    sub_100010864(v59, &qword_1000D64E0);
    return swift_release();
  }
  else
  {
    type metadata accessor for DeviceStatusViewModel();
    sub_1000201F8((unint64_t *)&qword_1000D64F0, (void (*)(uint64_t))type metadata accessor for DeviceStatusViewModel);
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10001D0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DeviceStatusView();
  uint64_t v5 = v4 - 8;
  uint64_t v52 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v53 = v6;
  uint64_t v54 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D6528);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  NSString v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v57 = (char *)&v50 - v12;
  uint64_t v13 = sub_10000D308(&qword_1000D6530);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v50 - v18;
  uint64_t v20 = sub_10000D308(&qword_1000D6538);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v56 = (uint64_t)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v55 = (char *)&v50 - v23;
  uint64_t v24 = *(int *)(v5 + 32);
  uint64_t v61 = a1;
  unint64_t v25 = (uint64_t *)(a1 + v24);
  if (!*v25)
  {
LABEL_8:
    type metadata accessor for DeviceStatusViewModel();
    sub_1000201F8((unint64_t *)&qword_1000D64F0, (void (*)(uint64_t))type metadata accessor for DeviceStatusViewModel);
    sub_10009D260();
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v58 = v11;
  uint64_t v59 = v8;
  uint64_t v60 = v7;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = *(void *)(v62 + 16);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    uint64_t v35 = 1;
    uint64_t v34 = (uint64_t)v55;
LABEL_6:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v34, v35, 1, v13);
    if (*v25)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_10009CF30();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v36 = v62;
      uint64_t v37 = *(void *)(v62 + 16);
      uint64_t v62 = 0;
      uint64_t v63 = v37;
      swift_getKeyPath();
      uint64_t v38 = v54;
      sub_10001FDE4(v61, v54, (uint64_t (*)(void))type metadata accessor for DeviceStatusView);
      unint64_t v39 = (*(unsigned __int8 *)(v52 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v36;
      sub_10001E3D4(v38, v40 + v39);
      sub_10000D308(&qword_1000D6540);
      sub_10000D308(&qword_1000D6548);
      sub_10001F9A8();
      sub_10001FA78();
      uint64_t v41 = v57;
      sub_10009D9F0();
      uint64_t v42 = v56;
      sub_100010720(v34, v56, &qword_1000D6538);
      uint64_t v44 = v58;
      uint64_t v43 = v59;
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
      uint64_t v46 = v60;
      v45(v58, v41, v60);
      sub_100010720(v42, a2, &qword_1000D6538);
      uint64_t v47 = sub_10000D308(&qword_1000D65B0);
      v45((char *)(a2 + *(int *)(v47 + 48)), v44, v46);
      uint64_t v48 = *(void (**)(char *, uint64_t))(v43 + 8);
      v48(v41, v46);
      sub_100010864(v34, &qword_1000D6538);
      v48(v44, v46);
      return sub_100010864(v42, &qword_1000D6538);
    }
    goto LABEL_8;
  }
  uint64_t v51 = a2;
  type metadata accessor for DeviceStatusViewModel();
  sub_1000201F8((unint64_t *)&qword_1000D64F0, (void (*)(uint64_t))type metadata accessor for DeviceStatusViewModel);
  uint64_t v27 = sub_10009D280();
  uint64_t v29 = *v25;
  if (*v25)
  {
    uint64_t v30 = v27;
    uint64_t v31 = v28;
    swift_retain();
    uint64_t v32 = sub_10009CE90();
    uint64_t v62 = v30;
    uint64_t v63 = v31;
    uint64_t v64 = v32;
    uint64_t v65 = v29;
    __chkstk_darwin(v32);
    sub_10000D308(&qword_1000D65B8);
    sub_10000D308(&qword_1000D65A0);
    sub_10001FCF0();
    sub_10001FC44();
    sub_10009DA10();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v33(v19, v17, v13);
    uint64_t v34 = (uint64_t)v55;
    v33(v55, v19, v13);
    uint64_t v35 = 0;
    a2 = v51;
    goto LABEL_6;
  }
LABEL_9:
  uint64_t result = sub_10009D260();
  __break(1u);
  return result;
}

uint64_t sub_10001D7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000D308(&qword_1000D65A0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + *(int *)(type metadata accessor for DeviceStatusView() + 24)))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    swift_release();
    sub_10000D308(&qword_1000D6210);
    sub_10009CCA0();
    type metadata accessor for DeviceRowView();
    sub_100015700(&qword_1000D65D0, &qword_1000D6210);
    sub_1000201F8(&qword_1000D65A8, (void (*)(uint64_t))type metadata accessor for DeviceRowView);
    sub_1000201F8(&qword_1000D65D8, (void (*)(uint64_t))type metadata accessor for DeviceRowViewModel);
    sub_10009DA00();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
  else
  {
    type metadata accessor for DeviceStatusViewModel();
    sub_1000201F8((unint64_t *)&qword_1000D64F0, (void (*)(uint64_t))type metadata accessor for DeviceStatusViewModel);
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10001DA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001FDE4(a1, a2, (uint64_t (*)(void))type metadata accessor for DeviceRowViewModel);
}

uint64_t sub_10001DAAC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v40 = a4;
  uint64_t v6 = type metadata accessor for DeviceStatusCompleteSectionView();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10000D308(&qword_1000D6580);
  __chkstk_darwin(v9);
  NSString v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10000D308(&qword_1000D6570);
  uint64_t v12 = *(void *)(v39 - 8);
  uint64_t v13 = __chkstk_darwin(v39);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v38 = (char *)&v37 - v16;
  uint64_t v17 = type metadata accessor for DeviceStatusSectionViewModel();
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v21 >= *(void *)(a2 + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_10001FDE4(a2+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v21, (uint64_t)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DeviceStatusSectionViewModel);
  uint64_t v22 = *(void *)&v20[*(int *)(v17 + 20)];
  if (!*(void *)(v22 + 16))
  {
    sub_10001FE4C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DeviceStatusSectionViewModel);
    uint64_t v35 = 1;
    uint64_t v33 = v39;
    uint64_t v34 = v40;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v34, v35, 1, v33);
  }
  uint64_t v23 = (char *)v8 + *(int *)(v6 + 20);
  uint64_t v24 = sub_10009CC50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v23, v20, v24);
  type metadata accessor for DeviceStatusViewModel();
  sub_1000201F8((unint64_t *)&qword_1000D64F0, (void (*)(uint64_t))type metadata accessor for DeviceStatusViewModel);
  swift_bridgeObjectRetain();
  *uint64_t v8 = sub_10009D280();
  v8[1] = v25;
  uint64_t v26 = *(void *)(v37 + *(int *)(type metadata accessor for DeviceStatusView() + 24));
  if (v26)
  {
    swift_retain();
    uint64_t v27 = sub_10009CE90();
    sub_10001FDE4((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DeviceStatusCompleteSectionView);
    uint64_t v28 = (uint64_t *)&v11[*(int *)(v9 + 36)];
    *uint64_t v28 = v27;
    v28[1] = v26;
    uint64_t v29 = sub_10001FE4C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DeviceStatusCompleteSectionView);
    __chkstk_darwin(v29);
    *(&v37 - 2) = v22;
    sub_10000D308(&qword_1000D65A0);
    sub_10001FB74();
    sub_10001FC44();
    sub_10009DA10();
    sub_10001FE4C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DeviceStatusSectionViewModel);
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v31 = v38;
    uint64_t v32 = v15;
    uint64_t v33 = v39;
    v30(v38, v32, v39);
    uint64_t v34 = v40;
    v30(v40, v31, v33);
    uint64_t v35 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v34, v35, 1, v33);
  }
LABEL_10:
  uint64_t result = sub_10009D260();
  __break(1u);
  return result;
}

uint64_t sub_10001DF78()
{
  return sub_10009DA00();
}

uint64_t sub_10001E0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v5 = type metadata accessor for DeviceStatusView();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v34 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v33 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D65E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000D308(&qword_1000D65E8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000D308(&qword_1000D65F0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_10009D3D0();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v18 = sub_10000D308(&qword_1000D65F8);
  sub_10001E50C(a2, a1, (uint64_t)&v9[*(int *)(v18 + 44)]);
  LOBYTE(a1) = sub_10009D600();
  sub_100010720((uint64_t)v9, (uint64_t)v13, &qword_1000D65E0);
  uint64_t v19 = &v13[*(int *)(v11 + 44)];
  *uint64_t v19 = a1;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  v19[40] = 1;
  sub_100010864((uint64_t)v9, &qword_1000D65E0);
  uint64_t v20 = sub_10009D8E0();
  LOBYTE(v11) = sub_10009D600();
  sub_100010720((uint64_t)v13, (uint64_t)v17, &qword_1000D65E8);
  unint64_t v21 = &v17[*(int *)(v15 + 44)];
  *(void *)unint64_t v21 = v20;
  v21[8] = v11;
  sub_100010864((uint64_t)v13, &qword_1000D65E8);
  uint64_t v22 = a2;
  uint64_t v23 = v33;
  sub_10001FDE4(v22, v33, (uint64_t (*)(void))type metadata accessor for DeviceStatusView);
  unint64_t v24 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v25 = swift_allocObject();
  sub_10001E3D4(v23, v25 + v24);
  uint64_t v26 = sub_10009DA90();
  uint64_t v28 = v27;
  uint64_t v29 = v35;
  sub_100010720((uint64_t)v17, v35, &qword_1000D65F0);
  uint64_t v30 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))(v29 + *(int *)(sub_10000D308(&qword_1000D6600) + 36));
  unsigned char *v30 = sub_10001FEB8;
  v30[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v25;
  v30[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v26;
  v30[3] = v28;
  return sub_100010864((uint64_t)v17, &qword_1000D65F0);
}

uint64_t sub_10001E3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceStatusView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001E438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for DeviceStatusView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10001E0B8(a1, v6, a2);
}

unint64_t sub_10001E4B8()
{
  unint64_t result = qword_1000DA210;
  if (!qword_1000DA210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA210);
  }
  return result;
}

uint64_t sub_10001E50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v76 = a1;
  uint64_t v92 = a3;
  uint64_t v88 = sub_10000D308(&qword_1000D6608);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v81 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10000D308(&qword_1000D6610);
  __chkstk_darwin(v83);
  char v89 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10000D308(&qword_1000D6618);
  uint64_t v6 = __chkstk_darwin(v86);
  uint64_t v91 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v85 = (uint64_t)&v72 - v9;
  __chkstk_darwin(v8);
  uint64_t v90 = (uint64_t)&v72 - v10;
  uint64_t v11 = type metadata accessor for DeviceStatusView();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v80 = v11 - 8;
  uint64_t v79 = v12;
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = sub_10009CCC0();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_10009DC60();
  __chkstk_darwin(v15 - 8);
  uint64_t v82 = (char *)sub_10000D308(&qword_1000D6620);
  uint64_t v16 = *((void *)v82 - 1);
  __chkstk_darwin(v82);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000D308(&qword_1000D6628);
  uint64_t v20 = v19 - 8;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v84 = (uint64_t)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v72 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v72 - v26;
  sub_10009DC00();
  sub_10009CCB0();
  *(void *)&long long v97 = sub_10009DCE0();
  *((void *)&v97 + 1) = v28;
  uint64_t v77 = type metadata accessor for DeviceStatusView;
  uint64_t v73 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FDE4(a1, v73, (uint64_t (*)(void))type metadata accessor for DeviceStatusView);
  uint64_t v29 = *(unsigned __int8 *)(v79 + 80);
  uint64_t v30 = (v29 + 16) & ~v29;
  uint64_t v75 = v30 + v13;
  uint64_t v74 = v29 | 7;
  uint64_t v31 = swift_allocObject();
  sub_10001E3D4((uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + v30);
  sub_10001E4B8();
  sub_10009D9A0();
  sub_10009D130();
  sub_10009DAA0();
  sub_10009D0E0();
  uint64_t v32 = (uint64_t)v82;
  (*(void (**)(char *, char *, char *))(v16 + 16))(v25, v18, v82);
  uint64_t v33 = &v25[*(int *)(v20 + 44)];
  long long v34 = v95;
  *(_OWORD *)uint64_t v33 = v94;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v96;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v32);
  uint64_t v82 = v27;
  sub_100010800((uint64_t)v25, (uint64_t)v27, &qword_1000D6628);
  sub_10009DC00();
  sub_10009CCB0();
  *(void *)&long long v97 = sub_10009DCE0();
  *((void *)&v97 + 1) = v35;
  uint64_t v36 = sub_10009D750();
  uint64_t v38 = v37;
  LOBYTE(v20) = v39 & 1;
  uint64_t v40 = sub_10009D730();
  uint64_t v78 = v41;
  char v43 = v42;
  uint64_t v79 = v44;
  char v45 = v20;
  uint64_t v46 = v81;
  sub_10001F7AC(v36, v38, v45);
  swift_bridgeObjectRelease();
  uint64_t v47 = v76;
  uint64_t v48 = v73;
  sub_10001FDE4(v76, v73, (uint64_t (*)(void))v77);
  uint64_t v49 = swift_allocObject();
  sub_10001E3D4(v48, v49 + v30);
  sub_10000D308(&qword_1000D6630);
  sub_100020434();
  sub_10009D990();
  if (*(void *)(v47 + *(int *)(v80 + 32)))
  {
    char v50 = v43 & 1;
    swift_retain();
    BOOL v51 = sub_1000182EC();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v53 = swift_allocObject();
    *(unsigned char *)(v53 + 16) = !v51;
    uint64_t v54 = v87;
    uint64_t v55 = v88;
    uint64_t v56 = (uint64_t)v89;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v89, v46, v88);
    uint64_t v57 = (uint64_t *)(v56 + *(int *)(v83 + 36));
    *uint64_t v57 = KeyPath;
    v57[1] = (uint64_t)sub_1000205A8;
    v57[2] = v53;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v55);
    sub_10009D130();
    sub_10009DAB0();
    sub_10009D0E0();
    uint64_t v58 = v85;
    sub_100010720(v56, v85, &qword_1000D6610);
    uint64_t v59 = (_OWORD *)(v58 + *(int *)(v86 + 36));
    long long v60 = v98;
    *uint64_t v59 = v97;
    v59[1] = v60;
    v59[2] = v99;
    sub_100010864(v56, &qword_1000D6610);
    uint64_t v61 = v90;
    sub_100010800(v58, v90, &qword_1000D6618);
    uint64_t v62 = (uint64_t)v82;
    uint64_t v63 = v84;
    sub_100010720((uint64_t)v82, v84, &qword_1000D6628);
    uint64_t v64 = v91;
    sub_100010720(v61, v91, &qword_1000D6618);
    uint64_t v65 = v92;
    sub_100010720(v63, v92, &qword_1000D6628);
    uint64_t v66 = (int *)sub_10000D308(&qword_1000D6650);
    uint64_t v67 = v65 + v66[12];
    *(void *)uint64_t v67 = 0;
    *(unsigned char *)(v67 + 8) = 1;
    uint64_t v68 = v65 + v66[16];
    uint64_t v69 = v78;
    *(void *)uint64_t v68 = v40;
    *(void *)(v68 + 8) = v69;
    *(unsigned char *)(v68 + 16) = v50;
    *(void *)(v68 + 24) = v79;
    uint64_t v70 = v65 + v66[20];
    *(void *)uint64_t v70 = 0;
    *(unsigned char *)(v70 + 8) = 1;
    sub_100010720(v64, v65 + v66[24], &qword_1000D6618);
    sub_10001F79C(v40, v69, v50);
    swift_bridgeObjectRetain();
    sub_100010864(v61, &qword_1000D6618);
    sub_100010864(v62, &qword_1000D6628);
    sub_100010864(v64, &qword_1000D6618);
    sub_10001F7AC(v40, v69, v50);
    swift_bridgeObjectRelease();
    return sub_100010864(v63, &qword_1000D6628);
  }
  else
  {
    type metadata accessor for DeviceStatusViewModel();
    sub_1000201F8((unint64_t *)&qword_1000D64F0, (void (*)(uint64_t))type metadata accessor for DeviceStatusViewModel);
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10001EF14()
{
  uint64_t v0 = sub_10009D120();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DeviceStatusView();
  sub_100072190((uint64_t)v3);
  sub_10009D110();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10001EFF8(uint64_t a1)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Export button tapped", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = type metadata accessor for DeviceStatusView();
  return (*(uint64_t (**)(void))(a1 + *(int *)(v6 + 28)))();
}

uint64_t sub_10001F0F0@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1000D5220 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1000E3510;
  uint64_t v3 = self;
  swift_retain();
  id v4 = [v3 systemBlueColor];
  uint64_t v5 = sub_10009D8A0();
  uint64_t result = swift_getKeyPath();
  *a1 = v2;
  a1[1] = result;
  a1[2] = v5;
  return result;
}

uint64_t sub_10001F19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v29 = a3;
  uint64_t v25 = sub_10009DB00();
  uint64_t v28 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10009DB30();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10009D140();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = type metadata accessor for DeviceStatusView();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B664();
  uint64_t v24 = sub_10009DF00();
  sub_10001FDE4(v22, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceStatusView);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + *(unsigned __int8 *)(v9 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10001E3D4((uint64_t)v14, v17 + v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_100020114;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100026280;
  aBlock[3] = &unk_1000CB420;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  sub_10009DB20();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000201F8((unint64_t *)&qword_1000D9F80, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000D308(&qword_1000D69F0);
  sub_100015700((unint64_t *)&qword_1000D9F90, &qword_1000D69F0);
  uint64_t v19 = v25;
  sub_10009E010();
  uint64_t v20 = (void *)v24;
  sub_10009DF10();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  uint64_t result = sub_10009D8E0();
  *uint64_t v29 = result;
  return result;
}

uint64_t sub_10001F5E8()
{
  return sub_10009D970();
}

uint64_t sub_10001F644@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10009D300();
  *a1 = result;
  return result;
}

uint64_t sub_10001F670@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10009D300();
  *a1 = result;
  return result;
}

uint64_t sub_10001F69C()
{
  return sub_10009D310();
}

uint64_t sub_10001F6C4()
{
  return sub_10009D310();
}

uint64_t sub_10001F6EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009D2C0();
  *a1 = result;
  return result;
}

uint64_t sub_10001F718@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009D2C0();
  *a1 = result;
  return result;
}

uint64_t sub_10001F744()
{
  return sub_10009D2D0();
}

uint64_t sub_10001F770()
{
  return sub_10009D2D0();
}

uint64_t sub_10001F79C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10001F7AC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10001F7BC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001D0E8(*(void *)(v1 + 16), a1);
}

uint64_t sub_10001F7D4()
{
  uint64_t v1 = type metadata accessor for DeviceStatusView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10001F924@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for DeviceStatusView() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10001DAAC(a1, v6, v7, a2);
}

unint64_t sub_10001F9A8()
{
  unint64_t result = qword_1000D6550;
  if (!qword_1000D6550)
  {
    sub_10000AF84(&qword_1000D6540);
    sub_10001FA24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6550);
  }
  return result;
}

unint64_t sub_10001FA24()
{
  unint64_t result = qword_1000D6558;
  if (!qword_1000D6558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6558);
  }
  return result;
}

unint64_t sub_10001FA78()
{
  unint64_t result = qword_1000D6560;
  if (!qword_1000D6560)
  {
    sub_10000AF84(&qword_1000D6548);
    sub_10001FAEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6560);
  }
  return result;
}

unint64_t sub_10001FAEC()
{
  unint64_t result = qword_1000D6568;
  if (!qword_1000D6568)
  {
    sub_10000AF84(&qword_1000D6570);
    sub_10001FB74();
    sub_10001FC44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6568);
  }
  return result;
}

unint64_t sub_10001FB74()
{
  unint64_t result = qword_1000D6578;
  if (!qword_1000D6578)
  {
    sub_10000AF84(&qword_1000D6580);
    sub_1000201F8(&qword_1000D6588, (void (*)(uint64_t))type metadata accessor for DeviceStatusCompleteSectionView);
    sub_100015700(&qword_1000D6590, (uint64_t *)&unk_1000DA1D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6578);
  }
  return result;
}

unint64_t sub_10001FC44()
{
  unint64_t result = qword_1000D6598;
  if (!qword_1000D6598)
  {
    sub_10000AF84(&qword_1000D65A0);
    sub_1000201F8(&qword_1000D65A8, (void (*)(uint64_t))type metadata accessor for DeviceRowView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6598);
  }
  return result;
}

uint64_t sub_10001FCE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10001D7CC(*(void *)(v1 + 16), a1);
}

unint64_t sub_10001FCF0()
{
  unint64_t result = qword_1000D65C0;
  if (!qword_1000D65C0)
  {
    sub_10000AF84(&qword_1000D65B8);
    sub_10001FD90();
    sub_100015700(&qword_1000D6590, (uint64_t *)&unk_1000DA1D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D65C0);
  }
  return result;
}

unint64_t sub_10001FD90()
{
  unint64_t result = qword_1000D65C8;
  if (!qword_1000D65C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D65C8);
  }
  return result;
}

uint64_t sub_10001FDE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001FE4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001FEAC()
{
  return sub_10001DF78();
}

uint64_t sub_10001FEB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for DeviceStatusView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10001F19C(a1, v6, a2);
}

uint64_t sub_10001FF38()
{
  uint64_t v1 = type metadata accessor for DeviceStatusView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v12 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_10009D140();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_release();
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 20);
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = (v3 + v12 + v6) & ~v6;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);

  return _swift_deallocObject(v0, v10 + v7, v2 | v6 | 7);
}

uint64_t sub_100020114()
{
  type metadata accessor for DeviceStatusView();
  sub_10009D140();

  return sub_10001F5E8();
}

uint64_t sub_1000201E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000201F0()
{
  return swift_release();
}

uint64_t sub_1000201F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100020244()
{
  return sub_1000203C0((uint64_t (*)(uint64_t))sub_10001EF14);
}

uint64_t sub_100020260()
{
  uint64_t v1 = type metadata accessor for DeviceStatusView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000203A8()
{
  return sub_1000203C0(sub_10001EFF8);
}

uint64_t sub_1000203C0(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for DeviceStatusView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

unint64_t sub_100020434()
{
  unint64_t result = qword_1000D6638;
  if (!qword_1000D6638)
  {
    sub_10000AF84(&qword_1000D6630);
    sub_100015700(&qword_1000D6640, &qword_1000D6648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6638);
  }
  return result;
}

uint64_t sub_1000204D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10009D360();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100020504@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10009D360();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100020534()
{
  return sub_10009D370();
}

uint64_t sub_10002055C()
{
  return sub_10009D370();
}

unsigned char *sub_100020584(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_100020598()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_1000205A8(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_1000205C4()
{
  unint64_t result = qword_1000D6658;
  if (!qword_1000D6658)
  {
    sub_10000AF84(&qword_1000D64B8);
    sub_100015700(&qword_1000D6660, &qword_1000D64B0);
    sub_100015700(&qword_1000D6668, &qword_1000D6670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6658);
  }
  return result;
}

uint64_t destroy for AXMDevice()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AXMDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AXMDevice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AXMDevice(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AXMDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AXMDevice(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXMDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMDevice()
{
  return &type metadata for AXMDevice;
}

unint64_t sub_1000208E8(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684628597;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x767265735F6D646DLL;
      break;
    default:
      unint64_t result = 0x6E5F6C6169726573;
      break;
  }
  return result;
}

unint64_t sub_100020990(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684628597;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x767265735F6D646DLL;
      break;
    default:
      unint64_t result = 0x6E5F6C6169726573;
      break;
  }
  return result;
}

uint64_t sub_100020A38(unsigned __int8 *a1, char *a2)
{
  return sub_10000A5DC(*a1, *a2);
}

Swift::Int sub_100020A44()
{
  return sub_100028D9C();
}

uint64_t sub_100020A4C()
{
  return sub_10002A750();
}

Swift::Int sub_100020A54()
{
  return sub_10002980C();
}

uint64_t sub_100020A5C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10002126C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_100020A8C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000208E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100020AB8()
{
  return sub_100020990(*v0);
}

uint64_t sub_100020AC0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10002126C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100020AE8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100020AF4(uint64_t a1)
{
  unint64_t v2 = sub_1000215A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100020B30(uint64_t a1)
{
  unint64_t v2 = sub_1000215A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100020B6C()
{
  swift_bridgeObjectRetain();
  sub_10009DD20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10009DD20();
  swift_bridgeObjectRelease();
  sub_10009DD20();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    sub_10009E2F0(1u);
    swift_bridgeObjectRetain();
    sub_10009DD20();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10009E2F0(0);
  }
}

uint64_t sub_100020C70(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000D308(&qword_1000D6698);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000FF9C(a1, a1[3]);
  sub_1000215A0();
  sub_10009E320();
  v10[15] = 0;
  sub_10009E200();
  if (!v2)
  {
    v10[14] = 1;
    sub_10009E200();
    v10[13] = *(unsigned char *)(v3 + 32);
    v10[12] = 2;
    sub_100021648();
    sub_10009E220();
    v10[11] = 3;
    sub_10009E1E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100020E38(char a1)
{
  return *(void *)&aNone_3[8 * a1];
}

double sub_100020E58@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000212B8(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_100020EA8(void *a1)
{
  return sub_100020C70(a1);
}

Swift::Int sub_100020EC0()
{
  return sub_10009E300();
}

Swift::Int sub_100020F04()
{
  return sub_10009E300();
}

uint64_t sub_100020F40(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_100021124((uint64_t)v5, (uint64_t)v7) & 1;
}

unint64_t sub_100020FA0()
{
  unint64_t result = qword_1000D6678;
  if (!qword_1000D6678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6678);
  }
  return result;
}

uint64_t sub_100020FF4(char *a1, char *a2)
{
  return sub_10000A554(*a1, *a2);
}

Swift::Int sub_100021000()
{
  return sub_100028E8C();
}

uint64_t sub_100021008()
{
  return sub_10002A6FC();
}

Swift::Int sub_100021010()
{
  return sub_1000297A4();
}

uint64_t sub_100021018@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100021B78(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100021048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100020E38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100021074()
{
  return sub_10009DD90();
}

uint64_t sub_1000210D4()
{
  return sub_10009DD80();
}

uint64_t sub_100021124(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_10009E260(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (v8 = sub_10009E260(), uint64_t result = 0, (v8 & 1) != 0))
    {
      if (*(void *)&aNone_3[8 * *(char *)(a1 + 32)] == *(void *)&aNone_3[8 * *(char *)(a2 + 32)]
        && qword_1000A0028[*(char *)(a1 + 32)] == qword_1000A0028[*(char *)(a2 + 32)])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = sub_10009E260();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      uint64_t v11 = *(void *)(a1 + 48);
      uint64_t v12 = *(void *)(a2 + 48);
      if (v11)
      {
        if (v12 && (*(void *)(a1 + 40) == *(void *)(a2 + 40) && v11 == v12 || (sub_10009E260() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v12)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_10002126C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000CA978;
  v6._object = a2;
  unint64_t v4 = sub_10009E140(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000212B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000D308(&qword_1000D6680);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_1000215A0();
  sub_10009E310();
  if (v2) {
    return sub_1000100E8((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_10009E190();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10009E190();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v26 = 2;
  sub_1000215F4();
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  sub_10009E1B0();
  HIDWORD(v21) = v27;
  char v25 = 3;
  uint64_t v15 = sub_10009E170();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  sub_1000100E8((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = BYTE4(v21);
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v17;
  return result;
}

unint64_t sub_1000215A0()
{
  unint64_t result = qword_1000D6688;
  if (!qword_1000D6688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6688);
  }
  return result;
}

unint64_t sub_1000215F4()
{
  unint64_t result = qword_1000D6690;
  if (!qword_1000D6690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6690);
  }
  return result;
}

unint64_t sub_100021648()
{
  unint64_t result = qword_1000D66A0;
  if (!qword_1000D66A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AXMDevice.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AXMDevice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000217F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMDevice.CodingKeys()
{
  return &type metadata for AXMDevice.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FetchNonceError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MDMServerAssignmentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002198CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MDMServerAssignmentType()
{
  return &type metadata for MDMServerAssignmentType;
}

unint64_t sub_1000219C8()
{
  unint64_t result = qword_1000D66A8;
  if (!qword_1000D66A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66A8);
  }
  return result;
}

unint64_t sub_100021A20()
{
  unint64_t result = qword_1000D66B0;
  if (!qword_1000D66B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66B0);
  }
  return result;
}

unint64_t sub_100021A78()
{
  unint64_t result = qword_1000D66B8;
  if (!qword_1000D66B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66B8);
  }
  return result;
}

unint64_t sub_100021AD0()
{
  unint64_t result = qword_1000D66C0;
  if (!qword_1000D66C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66C0);
  }
  return result;
}

unint64_t sub_100021B24()
{
  unint64_t result = qword_1000D66C8;
  if (!qword_1000D66C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66C8);
  }
  return result;
}

uint64_t sub_100021B78(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000CA9F8;
  v6._object = a2;
  unint64_t v4 = sub_10009E140(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t destroy for HostAppInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s46AddDevicesToAutomatedDeviceEnrollmentExtension11HostAppInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HostAppInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for HostAppInfo(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for HostAppInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SettingsConfigurationButtonView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SettingsConfigurationButtonView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsConfigurationButtonView()
{
  return &type metadata for SettingsConfigurationButtonView;
}

uint64_t sub_100021D44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100021D60@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_10001E4B8();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10009D750();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  if (a1)
  {
    uint64_t v11 = sub_10009D940();
    uint64_t v12 = sub_10009D8D0();
    uint64_t KeyPath = swift_getKeyPath();
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t KeyPath = 0;
    uint64_t v12 = 0;
  }
  char v14 = v8 & 1;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = KeyPath;
  *(void *)(a2 + 64) = v12;
  sub_10001F79C(v4, v6, v14);
  swift_bridgeObjectRetain();
  sub_100021F34(v11);
  sub_100021F84(v11);
  sub_10001F7AC(v4, v6, v14);
  return swift_bridgeObjectRelease();
}

__n128 sub_100021E9C@<Q0>(uint64_t a1@<X8>)
{
  char v3 = *v1;
  uint64_t v4 = sub_10009D3D0();
  sub_100021D60(v3, (uint64_t)&v12);
  char v5 = v13;
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  char v8 = v16;
  uint64_t v9 = v18;
  __n128 result = v12;
  long long v11 = v17;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 72) = v11;
  *(void *)(a1 + 88) = v9;
  return result;
}

uint64_t sub_100021F34(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100021F84(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_100021FDC()
{
  unint64_t result = qword_1000D66D0;
  if (!qword_1000D66D0)
  {
    sub_10000AF84(&qword_1000D66D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HostAppInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HostAppInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HostAppInfo()
{
  return &type metadata for HostAppInfo;
}

uint64_t sub_1000220F8(char a1)
{
  return *(void *)&aStatus_2[8 * a1];
}

uint64_t sub_100022118(char a1)
{
  if (a1) {
    return 0x44454C494146;
  }
  else {
    return 0x53534543435553;
  }
}

uint64_t sub_10002214C(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0x4C414E5245544E49;
  }
}

uint64_t sub_100022194(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_10000D308(&qword_1000D6730);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000FF9C(a1, a1[3]);
  sub_1000235E8();
  sub_10009E320();
  v11[6] = *v3;
  v11[5] = 0;
  sub_1000236E4();
  sub_10009E220();
  if (!v2)
  {
    v11[4] = 1;
    sub_10009E1E0();
    v11[3] = 2;
    sub_10009E200();
    v11[2] = 3;
    sub_10009E200();
    v11[1] = 4;
    sub_10009E1E0();
    sub_100023738((uint64_t)(v3 + 72), (uint64_t)&v12);
    sub_100023738((uint64_t)&v12, (uint64_t)v11);
    v10[7] = 5;
    sub_1000237A0();
    sub_10009E1F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000223D4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D6750);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_100023540();
  sub_10009E320();
  v9[1] = a2;
  sub_10000D308(&qword_1000D66F8);
  sub_100023848(&qword_1000D6758, (void (*)(void))sub_1000238B8);
  sub_10009E220();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100022554(char *a1, char *a2)
{
  return sub_10000ACB8(*a1, *a2);
}

Swift::Int sub_100022560()
{
  return sub_100028EF8();
}

uint64_t sub_100022568()
{
  return sub_10002AB68();
}

Swift::Int sub_100022570()
{
  return sub_100029360();
}

uint64_t sub_100022578@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100022E8C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000225A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000220F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000225D4()
{
  return sub_1000220F8(*v0);
}

uint64_t sub_1000225DC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100022E8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100022604(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_100022610(uint64_t a1)
{
  unint64_t v2 = sub_1000235E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002264C(uint64_t a1)
{
  unint64_t v2 = sub_1000235E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100022688(char *a1, char *a2)
{
  return sub_10000AB64(*a1, *a2);
}

Swift::Int sub_100022694()
{
  return sub_100028F64();
}

uint64_t sub_10002269C()
{
  return sub_10002AA84();
}

Swift::Int sub_1000226A4()
{
  return sub_100029458();
}

uint64_t sub_1000226AC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100022AC4(a1, (Swift::OpaquePointer)&off_1000CAB10, a2);
}

uint64_t sub_1000226B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100022118(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t destroy for AXMNonceInfoForDevice()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AXMNonceInfoForDevice(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AXMNonceInfoForDevice(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for AXMNonceInfoForDevice(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AXMNonceInfoForDevice(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXMNonceInfoForDevice(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXMNonceInfoForDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMNonceInfoForDevice()
{
  return &type metadata for AXMNonceInfoForDevice;
}

unsigned char *sub_1000229B8(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AXMNonceInfoForDevice.errorReason()
{
  return &type metadata for AXMNonceInfoForDevice.errorReason;
}

ValueMetadata *type metadata accessor for AXMNonceResponse()
{
  return &type metadata for AXMNonceResponse;
}

uint64_t sub_1000229E4()
{
  return sub_10009DD90();
}

uint64_t sub_100022A44()
{
  return sub_10009DD80();
}

uint64_t sub_100022A94(char *a1, char *a2)
{
  return sub_10000AC04(*a1, *a2);
}

Swift::Int sub_100022AA0()
{
  return sub_100028FE4();
}

uint64_t sub_100022AA8()
{
  return sub_10002AAEC();
}

Swift::Int sub_100022AB0()
{
  return sub_1000293C8();
}

uint64_t sub_100022AB8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100022AC4(a1, (Swift::OpaquePointer)&off_1000CAB60, a2);
}

uint64_t sub_100022AC4@<X0>(uint64_t *a1@<X0>, Swift::OpaquePointer a2@<X3>, char *a3@<X8>)
{
  v9._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v9._object = v4;
  Swift::Int v6 = sub_10009E140(a2, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_100022B20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002214C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100022B4C()
{
  return sub_10009DD90();
}

uint64_t sub_100022BAC()
{
  return sub_10009DD80();
}

__n128 sub_100022BFC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100022ED8(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100022C48(void *a1)
{
  return sub_100022194(a1);
}

Swift::Int sub_100022C8C()
{
  return sub_10009E300();
}

void sub_100022CD0()
{
}

Swift::Int sub_100022CF8()
{
  return sub_10009E300();
}

uint64_t sub_100022D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100023304(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_100022D68(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100022D74(uint64_t a1)
{
  unint64_t v2 = sub_100023540();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100022DB0(uint64_t a1)
{
  unint64_t v2 = sub_100023540();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100022DEC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100023398(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100022E18(void *a1)
{
  return sub_1000223D4(a1, *v1);
}

unint64_t sub_100022E38()
{
  unint64_t result = qword_1000D66E0;
  if (!qword_1000D66E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66E0);
  }
  return result;
}

uint64_t sub_100022E8C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000CAA60;
  v6._object = a2;
  unint64_t v4 = sub_10009E140(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_100022ED8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000D308(&qword_1000D6710);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_1000235E8();
  sub_10009E310();
  if (v2)
  {
    sub_1000100E8((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v38 = 0;
    sub_10002363C();
    sub_10009E1B0();
    int v9 = v39;
    char v37 = 1;
    uint64_t v29 = sub_10009E170();
    char v36 = 2;
    uint64_t v11 = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10009E190();
    uint64_t v31 = v11;
    uint64_t v27 = v12;
    int v28 = v9;
    char v35 = 3;
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10009E190();
    uint64_t v15 = v14;
    char v34 = 4;
    uint64_t v30 = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_10009E170();
    uint64_t v19 = v18;
    uint64_t v25 = v17;
    char v32 = 5;
    sub_100023690();
    swift_bridgeObjectRetain();
    sub_10009E180();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v20 = v33;
    sub_1000100E8((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v21 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v31;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v28;
    *(void *)(a2 + 8) = v29;
    *(void *)(a2 + 16) = v22;
    *(void *)(a2 + 24) = v27;
    *(void *)(a2 + 32) = v15;
    *(void *)(a2 + 40) = v26;
    *(void *)(a2 + 48) = v21;
    *(void *)(a2 + 56) = v25;
    *(void *)(a2 + 64) = v19;
    *(unsigned char *)(a2 + 72) = v20;
  }
  return result;
}

uint64_t sub_100023304(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7365636E6F6ELL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10009E260();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100023384()
{
  return 0x7365636E6F6ELL;
}

void *sub_100023398(void *a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D66E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000FF9C(a1, a1[3]);
  sub_100023540();
  sub_10009E310();
  if (v1)
  {
    sub_1000100E8((uint64_t)a1);
  }
  else
  {
    sub_10000D308(&qword_1000D66F8);
    sub_100023848(&qword_1000D6700, (void (*)(void))sub_100023594);
    sub_10009E1B0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    sub_1000100E8((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_100023540()
{
  unint64_t result = qword_1000D66F0;
  if (!qword_1000D66F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D66F0);
  }
  return result;
}

unint64_t sub_100023594()
{
  unint64_t result = qword_1000D6708;
  if (!qword_1000D6708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6708);
  }
  return result;
}

unint64_t sub_1000235E8()
{
  unint64_t result = qword_1000D6718;
  if (!qword_1000D6718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6718);
  }
  return result;
}

unint64_t sub_10002363C()
{
  unint64_t result = qword_1000D6720;
  if (!qword_1000D6720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6720);
  }
  return result;
}

unint64_t sub_100023690()
{
  unint64_t result = qword_1000D6728;
  if (!qword_1000D6728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6728);
  }
  return result;
}

unint64_t sub_1000236E4()
{
  unint64_t result = qword_1000D6738;
  if (!qword_1000D6738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6738);
  }
  return result;
}

uint64_t sub_100023738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D5810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000237A0()
{
  unint64_t result = qword_1000D6740;
  if (!qword_1000D6740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6740);
  }
  return result;
}

unint64_t sub_1000237F4()
{
  unint64_t result = qword_1000D6748;
  if (!qword_1000D6748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6748);
  }
  return result;
}

uint64_t sub_100023848(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(&qword_1000D66F8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000238B8()
{
  unint64_t result = qword_1000D6760;
  if (!qword_1000D6760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6760);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AXMNonceInfoForDevice.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AXMNonceInfoForDevice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100023A68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMNonceInfoForDevice.CodingKeys()
{
  return &type metadata for AXMNonceInfoForDevice.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AXMNonceResponse.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AXMNonceResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100023B90);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100023BB8()
{
  return 0;
}

ValueMetadata *type metadata accessor for AXMNonceResponse.CodingKeys()
{
  return &type metadata for AXMNonceResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NetworkInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s46AddDevicesToAutomatedDeviceEnrollmentExtension21AXMNonceInfoForDeviceV11nonceStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100023D2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMNonceInfoForDevice.nonceStatus()
{
  return &type metadata for AXMNonceInfoForDevice.nonceStatus;
}

unint64_t sub_100023D68()
{
  unint64_t result = qword_1000D6768;
  if (!qword_1000D6768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6768);
  }
  return result;
}

unint64_t sub_100023DC0()
{
  unint64_t result = qword_1000D6770;
  if (!qword_1000D6770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6770);
  }
  return result;
}

unint64_t sub_100023E18()
{
  unint64_t result = qword_1000D6778;
  if (!qword_1000D6778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6778);
  }
  return result;
}

unint64_t sub_100023E70()
{
  unint64_t result = qword_1000D6780;
  if (!qword_1000D6780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6780);
  }
  return result;
}

unint64_t sub_100023EC8()
{
  unint64_t result = qword_1000D6788;
  if (!qword_1000D6788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6788);
  }
  return result;
}

unint64_t sub_100023F20()
{
  unint64_t result = qword_1000D6790;
  if (!qword_1000D6790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6790);
  }
  return result;
}

unint64_t sub_100023F78()
{
  unint64_t result = qword_1000D6798;
  if (!qword_1000D6798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6798);
  }
  return result;
}

unint64_t sub_100023FCC()
{
  unint64_t result = qword_1000D67A0;
  if (!qword_1000D67A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D67A0);
  }
  return result;
}

uint64_t sub_100024024()
{
  uint64_t v0 = sub_10009CE60();
  sub_10002409C(v0, qword_1000E3488);
  sub_10000D690(v0, (uint64_t)qword_1000E3488);
  return sub_10009CE50();
}

uint64_t *sub_10002409C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_100024100()
{
  uint64_t v0 = sub_10009CCC0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10009DC60();
  __chkstk_darwin(v1 - 8);
  sub_10000D308(&qword_1000D67A8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000A06A0;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v3 = sub_10009DCE0();
  uint64_t v5 = v4;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v6 = sub_10009DCE0();
  uint64_t v8 = v7;
  NSString v9 = sub_10009DC70();
  uint64_t v10 = self;
  id v11 = [v10 imageNamed:v9];

  if (!v11)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 48) = v6;
  *(void *)(v2 + 56) = v8;
  *(void *)(v2 + 64) = v11;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v12 = sub_10009DCE0();
  uint64_t v35 = v13;
  uint64_t v36 = v12;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v14 = sub_10009DCE0();
  uint64_t v16 = v15;
  NSString v17 = sub_10009DC70();
  char v37 = v10;
  id v18 = [v10 systemImageNamed:v17];

  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v19 = self;
  id v20 = [v19 systemBlueColor];
  uint64_t v21 = self;
  id v22 = [v21 configurationWithHierarchicalColor:v20];

  id v23 = [v18 imageWithConfiguration:v22];
  *(void *)(v2 + 72) = v36;
  *(void *)(v2 + 80) = v35;
  *(void *)(v2 + 88) = v14;
  *(void *)(v2 + 96) = v16;
  *(void *)(v2 + 104) = v23;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v24 = sub_10009DCE0();
  uint64_t v26 = v25;
  if (qword_1000D52C0 != -1) {
    swift_once();
  }
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v27 = sub_10009DCE0();
  uint64_t v29 = v28;
  NSString v30 = sub_10009DC70();
  id v31 = [v37 systemImageNamed:v30];

  if (v31)
  {
    id v32 = [v19 systemBlueColor];
    id v33 = [v21 configurationWithHierarchicalColor:v32];

    id v34 = [v31 imageWithConfiguration:v33];
    *(void *)(v2 + 112) = v24;
    *(void *)(v2 + 120) = v26;
    *(void *)(v2 + 128) = v27;
    *(void *)(v2 + 136) = v29;
    *(void *)(v2 + 144) = v34;
    qword_1000E34A0 = v2;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t destroy for CSVHistoryDocument()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s46AddDevicesToAutomatedDeviceEnrollmentExtension18CSVHistoryDocumentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CSVHistoryDocument(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CSVHistoryDocument(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CSVHistoryDocument(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CSVHistoryDocument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CSVHistoryDocument()
{
  return &type metadata for CSVHistoryDocument;
}

uint64_t sub_10002481C()
{
  uint64_t v0 = sub_10009CCC0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10009DC60();
  __chkstk_darwin(v1 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t result = sub_10009DCE0();
  qword_1000E34A8 = result;
  unk_1000E34B0 = v3;
  return result;
}

uint64_t sub_10002491C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v68 = sub_10009CBF0();
  uint64_t v6 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10009CC20();
  uint64_t v8 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v65 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for Device();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for EnrolledDeviceRecord();
  uint64_t v13 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = a1;
  uint64_t v86 = a2;
  swift_bridgeObjectRetain();
  v87._countAndFlagsBits = 10;
  v87._object = (void *)0xE100000000000000;
  sub_10009DD50(v87);
  uint64_t v63 = *(void *)(a3 + 16);
  if (v63)
  {
    uint64_t v61 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v60 = *(void *)(v13 + 72);
    uint64_t v59 = &v75;
    uint64_t v58 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v57 = (void (**)(char *, uint64_t))(v8 + 8);
    v53[1] = a3;
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    long long v56 = xmmword_1000A06B0;
    NSString v17 = _swiftEmptyArrayStorage;
    uint64_t v55 = v10;
    uint64_t v54 = v12;
    uint64_t v62 = v15;
    do
    {
      sub_100025588(v61 + v60 * v16, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
      sub_100025588((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Device);
      long long v74 = v56;
      id v18 = &v12[v10[7]];
      unint64_t v19 = *((void *)v18 + 1);
      if (v19)
      {
        uint64_t v20 = *(void *)v18;
        unint64_t v21 = v19;
      }
      else
      {
        uint64_t v20 = 0;
        unint64_t v21 = 0xE000000000000000;
      }
      uint64_t v75 = v20;
      unint64_t v76 = v21;
      id v22 = (uint64_t *)&v12[v10[5]];
      uint64_t v23 = v22[1];
      uint64_t v70 = v17;
      if (v23)
      {
        uint64_t v77 = *v22;
        uint64_t v78 = v23;
      }
      else
      {
        uint64_t v24 = qword_1000D51E8;
        swift_bridgeObjectRetain();
        if (v24 != -1) {
          swift_once();
        }
        uint64_t v77 = qword_1000E34A8;
        uint64_t v78 = unk_1000E34B0;
      }
      swift_bridgeObjectRetain();
      uint64_t v25 = &v12[v10[6]];
      unint64_t v26 = *((void *)v25 + 1);
      if (v26)
      {
        uint64_t v27 = *(void *)v25;
      }
      else
      {
        uint64_t v27 = 0;
        unint64_t v26 = 0xE000000000000000;
      }
      uint64_t v69 = v16 + 1;
      uint64_t v79 = v27;
      unint64_t v80 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_100025440();
      uint64_t v82 = v28;
      uint64_t v29 = v65;
      sub_10009CC10();
      NSString v30 = v67;
      sub_10009CBE0();
      uint64_t v31 = sub_10009CC30();
      uint64_t v33 = v32;
      (*v58)(v30, v68);
      (*v57)(v29, v66);
      uint64_t v83 = v31;
      uint64_t v84 = v33;
      uint64_t v73 = _swiftEmptyArrayStorage;
      sub_10000E34C(0, 5, 0);
      uint64_t v34 = 0;
      uint64_t v35 = v73;
      do
      {
        uint64_t v36 = *(uint64_t *)((char *)&v75 + v34);
        char v37 = *(void **)((char *)&v76 + v34);
        uint64_t v71 = 34;
        unint64_t v72 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        v88._countAndFlagsBits = v36;
        v88._object = v37;
        sub_10009DD50(v88);
        v89._countAndFlagsBits = 34;
        v89._object = (void *)0xE100000000000000;
        sub_10009DD50(v89);
        swift_bridgeObjectRelease();
        uint64_t v38 = v71;
        unint64_t v39 = v72;
        uint64_t v73 = v35;
        unint64_t v41 = v35[2];
        unint64_t v40 = v35[3];
        if (v41 >= v40 >> 1)
        {
          sub_10000E34C(v40 > 1, v41 + 1, 1);
          uint64_t v35 = v73;
        }
        v35[2] = v41 + 1;
        char v42 = &v35[2 * v41];
        v42[4] = v38;
        v42[5] = v39;
        v34 += 16;
      }
      while (v34 != 80);
      swift_arrayDestroy();
      uint64_t v71 = (uint64_t)v35;
      sub_10000D308(&qword_1000D67C0);
      sub_1000255F0();
      uint64_t v43 = sub_10009DBE0();
      uint64_t v45 = v44;
      swift_release();
      NSString v17 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        NSString v17 = sub_10008D5F4(0, v17[2] + 1, 1, v17);
      }
      uint64_t v10 = v55;
      uint64_t v12 = v54;
      unint64_t v47 = v17[2];
      unint64_t v46 = v17[3];
      if (v47 >= v46 >> 1) {
        NSString v17 = sub_10008D5F4((void *)(v46 > 1), v47 + 1, 1, v17);
      }
      v17[2] = v47 + 1;
      uint64_t v48 = &v17[2 * v47];
      v48[4] = v43;
      v48[5] = v45;
      sub_10002564C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Device);
      uint64_t v15 = v62;
      sub_10002564C((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
      uint64_t v16 = v69;
    }
    while (v69 != v63);
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v71 = (uint64_t)v17;
  sub_10000D308(&qword_1000D67C0);
  sub_1000255F0();
  uint64_t v49 = sub_10009DBE0();
  BOOL v51 = v50;
  swift_bridgeObjectRelease();
  v90._countAndFlagsBits = v49;
  v90._object = v51;
  sub_10009DD50(v90);
  swift_bridgeObjectRelease();
  return v85;
}

uint64_t sub_100025038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  uint64_t v7 = sub_10009DCD0();
  v6[7] = v7;
  v6[8] = *(void *)(v7 - 8);
  v6[9] = swift_task_alloc();
  return _swift_task_switch(sub_1000250FC, 0, 0);
}

uint64_t sub_1000250FC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  id v3 = [self defaultManager];
  sub_10009CB30();
  NSString v4 = sub_10009DC70();
  swift_bridgeObjectRelease();
  Class isa = sub_10009CB90().super.isa;
  [v3 createFileAtPath:v4 contents:isa attributes:0];

  v0[2] = v2;
  v0[3] = v1;
  sub_10009DCC0();
  sub_10001E4B8();
  sub_10009DFE0();
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100025264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1000252F4, 0, 0);
}

uint64_t sub_1000252F4()
{
  id v1 = [self defaultManager];
  sub_10009CAF0(v2);
  uint64_t v4 = v3;
  *(void *)(v0 + 16) = 0;
  unsigned int v5 = [v1 removeItemAtURL:v3 error:v0 + 16];

  uint64_t v6 = *(void **)(v0 + 16);
  if (v5)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    id v7 = v6;
    uint64_t v8 = v11;
  }
  else
  {
    id v9 = v6;
    sub_10009CA80();

    swift_willThrow();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v8();
}

uint64_t sub_100025440()
{
  uint64_t v0 = sub_10009CCC0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10009DC60();
  __chkstk_darwin(v1 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  return sub_10009DCE0();
}

uint64_t sub_100025588(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000255F0()
{
  unint64_t result = qword_1000D67C8;
  if (!qword_1000D67C8)
  {
    sub_10000AF84(&qword_1000D67C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D67C8);
  }
  return result;
}

uint64_t sub_10002564C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_1000256AC@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

void (*sub_100025740(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_10009CF20();
  return sub_1000257CC;
}

void sub_1000257CC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_100025834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[21] = a6;
  v7[22] = v6;
  v7[19] = a4;
  v7[20] = a5;
  v7[17] = a2;
  v7[18] = a3;
  v7[16] = a1;
  return _swift_task_switch(sub_100025860, 0, 0);
}

uint64_t sub_100025860()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[17];
  uint64_t v16 = v0[16];
  uint64_t v17 = v0[18];
  *(void *)(v2 + 88) = v0[20];
  *(void *)(v2 + 96) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = *(void *)(v2 + 56);
  uint64_t v14 = *(void *)(v2 + 48);
  uint64_t v15 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 72);
  uint64_t v12 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v13 = *(void *)(v2 + 64);
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v16;
  v0[3] = v4;
  v0[4] = v17;
  v0[5] = v3;
  v0[6] = v6;
  v0[7] = v5;
  v0[8] = v15;
  v0[9] = v7;
  v0[10] = v14;
  v0[11] = v8;
  v0[12] = v13;
  v0[13] = v9;
  v0[14] = v12;
  v0[15] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10009CF40();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1000259CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension19FakeAccountProvider__account;
  uint64_t v2 = sub_10000D308(&qword_1000D5828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100025AAC()
{
  return type metadata accessor for FakeAccountProvider();
}

uint64_t type metadata accessor for FakeAccountProvider()
{
  uint64_t result = qword_1000D6800;
  if (!qword_1000D6800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100025B00()
{
  sub_10000AF28();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100025BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *v6;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_10000CD64;
  v15[21] = a6;
  v15[22] = v14;
  v15[19] = a4;
  v15[20] = a5;
  v15[17] = a2;
  v15[18] = a3;
  v15[16] = a1;
  return _swift_task_switch(sub_100025860, 0, 0);
}

double sub_100025C8C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

uint64_t sub_100025D24()
{
  uint64_t v0 = sub_10000D308(&qword_1000D5820);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D5828);
  sub_10009CF10();
  swift_endAccess();
  sub_10000FFE0();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_100025E40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF40();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_100026278(v1);
}

uint64_t sub_100025F14()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000D6948 + dword_1000D6948);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000D150;
  return v3();
}

uint64_t sub_100025FB4()
{
  *(void *)(v1 + 48) = *v0;
  return _swift_task_switch(sub_100025FD8, 0, 0);
}

uint64_t sub_100025FD8()
{
  uint64_t v2 = sub_100025740((void *)(v0 + 16));
  if (*(void *)(v1 + 8))
  {
    *(void *)(v1 + 104) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  ((void (*)(uint64_t, void))v2)(v0 + 16, 0);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

double sub_100026078@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

uint64_t sub_100026110(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10000FDF0(v3, v2);
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_10002620C()
{
  return _swift_task_switch(sub_100026228, 0, 0);
}

uint64_t sub_100026228()
{
  return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, unint64_t))(v0 + 8))(0x6B6F5465636E6F4ELL, 0xEA00000000006E65, 0xD000000000000010, 0x80000001000A7520);
}

uint64_t sub_100026278(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100026280(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_1000262C4(int a1, int a2, int a3, uint64_t a4, id a5)
{
  [a5 setInProgress:1];
  id v8 = [objc_allocWithZone((Class)AKAppleIDAuthenticationController) init];
  if (v8)
  {
    long long v9 = v8;
    id v10 = [objc_allocWithZone((Class)AKAppleIDAuthenticationInAppContext) init];
    NSString v11 = sub_10009DC70();
    [v10 setServiceIdentifier:v11];

    NSString v12 = sub_10009DC70();
    [v10 setUsername:v12];

    if (a4)
    {
      id v13 = v10;
      NSString v14 = sub_10009DC70();
      [v13 _setPassword:v14];
    }
    [v10 setSupportsPiggybacking:0];
    [v10 setIsEphemeral:1];
    [v10 setShouldUpdatePersistentServiceTokens:0];
    [v10 setPresentingViewController:a5];
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v5;
    aBlock[4] = sub_1000277E8;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000267D4;
    aBlock[3] = &unk_1000CBC30;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = v10;
    id v18 = v5;
    swift_release();
    [v9 authenticateWithContext:v17 completion:v16];
    _Block_release(v16);
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10009CE60();
    sub_10000D690(v19, (uint64_t)qword_1000E3488);
    oslog = sub_10009CE40();
    os_log_type_t v20 = sub_10009DEB0();
    if (os_log_type_enabled(oslog, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v20, "Unable to create AKAppleIDAuthenticationController", v21, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000265FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10009CE60();
  sub_10000D690(v6, (uint64_t)qword_1000E3488);
  long long v7 = sub_10009CE40();
  os_log_type_t v8 = sub_10009DEA0();
  if (os_log_type_enabled(v7, v8))
  {
    long long v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)long long v9 = 136315138;
    sub_10000DBA8(0xD000000000000029, 0x80000001000A7690, &v16);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s: Authentication finished", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = a3
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38DMCEnrollmentAuthenticationCoordinator_parentView;
  uint64_t v11 = *(void *)(a3
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38DMCEnrollmentAuthenticationCoordinator_parentView);
  uint64_t v12 = *(void *)(a3
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38DMCEnrollmentAuthenticationCoordinator_parentView
                  + 8);
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v14 = *(void *)(v10 + 24);
  if (a1) {
    a1 = sub_100012D94(a1);
  }
  sub_100010B94(a1, a2, v11, v12, v13, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000267D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  long long v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10000D308((uint64_t *)&unk_1000D59E0);
    uint64_t v4 = sub_10009DBC0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1000268AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DMCEnrollmentAuthenticationCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DMCEnrollmentAuthenticationCoordinator()
{
  return self;
}

void sub_10002694C(void *a1, uint64_t a2, uint64_t a3)
{
  [a1 setInProgress:1];
  id v6 = [objc_allocWithZone((Class)AKAppleIDAuthenticationController) init];
  if (v6)
  {
    long long v7 = v6;
    id v8 = [objc_allocWithZone((Class)AKAppleIDAuthenticationContext) init];
    NSString v9 = sub_10009DC70();
    [v8 setUsername:v9];

    NSString v10 = sub_10009DC70();
    [v8 setServiceIdentifier:v10];

    [v8 setIsEphemeral:1];
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v11;
    uint64_t v12[3] = v3;
    v12[4] = a2;
    v12[5] = a3;
    aBlock[4] = sub_100027680;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100027088;
    aBlock[3] = &unk_1000CBB68;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = v8;
    id v15 = v3;
    swift_bridgeObjectRetain();
    swift_release();
    [v7 fetchAuthModeWithContext:v14 completion:v13];
    _Block_release(v13);
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10009CE60();
    sub_10000D690(v16, (uint64_t)qword_1000E3488);
    oslog = sub_10009CE40();
    os_log_type_t v17 = sub_10009DEB0();
    if (os_log_type_enabled(oslog, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, "Unable to create AKAppleIDAuthenticationController", v18, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100026C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a5;
  uint64_t v8 = sub_10009DB00();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10009DB30();
  uint64_t v12 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    sub_10001B664();
    uint64_t v27 = sub_10009DF00();
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v18 = (void *)swift_allocObject();
    void v18[2] = v17;
    v18[3] = a1;
    uint64_t v19 = v28;
    v18[4] = v16;
    void v18[5] = v19;
    v18[6] = a6;
    aBlock[4] = sub_1000276EC;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100026280;
    aBlock[3] = &unk_1000CBBE0;
    os_log_type_t v20 = _Block_copy(aBlock);
    id v21 = v16;
    swift_bridgeObjectRetain();
    swift_release();
    sub_10009DB20();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000276FC();
    sub_10000D308(&qword_1000D69F0);
    sub_100027754();
    sub_10009E010();
    id v22 = (void *)v27;
    sub_10009DF10();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v29);
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_10009CE60();
    sub_10000D690(v23, (uint64_t)qword_1000E3488);
    uint64_t v24 = sub_10009CE40();
    os_log_type_t v25 = sub_10009DEB0();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Sign in dismissed before authentication mode was fetched", v26, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100026FCC(uint64_t a1, uint64_t a2, void *a3, int a4, int a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    if (a2 == 1)
    {
      [a3 setInProgress:0];
      [a3 showPasswordField:1];
    }
    else
    {
      sub_1000262C4(a4, a5, 0, 0, a3);
    }
  }
}

void sub_100027088(uint64_t a1, uint64_t a2, void *a3)
{
  long long v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100027178(void *a1, int a2, uint64_t a3, int a4, int a5)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10009CE60();
  sub_10000D690(v10, (uint64_t)qword_1000E3488);
  uint64_t v11 = sub_10009CE40();
  os_log_type_t v12 = sub_10009DEA0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_10000DBA8(0xD00000000000003FLL, 0x80000001000A7600, &v14);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_1000262C4(a4, a5, a2, a3, a1);
}

void sub_10002746C()
{
  uint64_t v1 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEB0();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)long long v5 = 136315138;
    sub_10000DBA8(0xD000000000000029, 0x80000001000A75D0, &v6);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Going back to welcome view", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10001227C(*(void *)(v1
                          + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38DMCEnrollmentAuthenticationCoordinator_parentView
                          + 16));
}

uint64_t sub_100027600()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100027638()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100027680(uint64_t a1, uint64_t a2)
{
  sub_100026C20(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_10002768C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002769C()
{
  return swift_release();
}

uint64_t sub_1000276A4()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1000276EC()
{
  sub_100026FCC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

unint64_t sub_1000276FC()
{
  unint64_t result = qword_1000D9F80;
  if (!qword_1000D9F80)
  {
    sub_10009DB00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9F80);
  }
  return result;
}

unint64_t sub_100027754()
{
  unint64_t result = qword_1000D9F90;
  if (!qword_1000D9F90)
  {
    sub_10000AF84(&qword_1000D69F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9F90);
  }
  return result;
}

uint64_t sub_1000277B0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000277E8(unint64_t a1, uint64_t a2)
{
  return sub_1000265FC(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_100027804()
{
  uint64_t v0 = type metadata accessor for SystemKeychainProvider();
  uint64_t v1 = swift_allocObject();
  type metadata accessor for SystemKeychainBackedKeyValuePasswordStorage();
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  unint64_t result = sub_100027904();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = result;
  qword_1000E34D0 = v0;
  unk_1000E34D8 = &off_1000CBC58;
  qword_1000E34B8 = v1;
  return result;
}

uint64_t sub_10002787C()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SystemKeychainProvider()
{
  return self;
}

uint64_t sub_1000278D8()
{
  return swift_unknownObjectRetain();
}

unint64_t sub_100027904()
{
  unint64_t result = qword_1000D6A98;
  if (!qword_1000D6A98)
  {
    type metadata accessor for SystemKeychainBackedKeyValuePasswordStorage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6A98);
  }
  return result;
}

NSString sub_10002795C()
{
  NSString result = sub_10009DC70();
  qword_1000E34E0 = (uint64_t)result;
  return result;
}

NSString sub_100027994()
{
  NSString result = sub_10009DC70();
  qword_1000E34E8 = (uint64_t)result;
  return result;
}

uint64_t destroy for Account()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Account(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Account(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for Account(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for Account(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Account(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Account(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Account()
{
  return &type metadata for Account;
}

uint64_t sub_100027D68(char a1)
{
  return *(void *)&aAppleid_0[8 * a1];
}

uint64_t sub_100027D88(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000D308(&qword_1000D6AC8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_10002871C();
  sub_10009E320();
  LOBYTE(v14) = 0;
  sub_10009E200();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_10009E200();
    long long v9 = *(_OWORD *)(v3 + 80);
    long long v16 = *(_OWORD *)(v3 + 64);
    long long v17 = v9;
    char v18 = *(unsigned char *)(v3 + 96);
    long long v10 = *(_OWORD *)(v3 + 48);
    long long v14 = *(_OWORD *)(v3 + 32);
    long long v15 = v10;
    char v13 = 2;
    sub_1000287C4();
    sub_10009E220();
    *(void *)&long long v14 = *(void *)(v3 + 104);
    char v13 = 3;
    sub_10000D308(&qword_1000D6AB0);
    sub_100028818(&qword_1000D6AD8, (void (*)(void))sub_100028888);
    sub_10009E220();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100027FB4()
{
  return sub_100027D68(*v0);
}

uint64_t sub_100027FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000280C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100027FE4(uint64_t a1)
{
  unint64_t v2 = sub_10002871C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100028020(uint64_t a1)
{
  unint64_t v2 = sub_10002871C();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_10002805C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100028284(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1000280B0(void *a1)
{
  return sub_100027D88(a1);
}

uint64_t sub_1000280C8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4449656C707061 && a2 == 0xE700000000000000;
  if (v3 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617A696E6167726FLL && a2 == 0xEC0000006E6F6974 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65767265536D646DLL && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10009E260();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100028284@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000D308(&qword_1000D6AA0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_10002871C();
  sub_10009E310();
  if (v2) {
    return sub_1000100E8((uint64_t)a1);
  }
  LOBYTE(v38) = 0;
  uint64_t v9 = sub_10009E190();
  uint64_t v11 = v10;
  LOBYTE(v38) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10009E190();
  uint64_t v37 = v13;
  uint64_t v33 = v12;
  uint64_t v34 = v9;
  char v48 = 2;
  sub_100010094();
  swift_bridgeObjectRetain();
  uint64_t v35 = 0;
  sub_10009E1B0();
  uint64_t v14 = v39;
  uint64_t v15 = v41;
  uint64_t v27 = v40;
  uint64_t v28 = v38;
  uint64_t v26 = v42;
  uint64_t v29 = v43;
  uint64_t v25 = v44;
  uint64_t v32 = v45;
  int v47 = v46;
  uint64_t v30 = sub_10000D308(&qword_1000D6AB0);
  char v48 = 3;
  sub_100028818(&qword_1000D6AB8, (void (*)(void))sub_100028770);
  uint64_t v36 = v14;
  swift_bridgeObjectRetain();
  uint64_t v31 = v15;
  uint64_t v16 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10009E1B0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v38;
  swift_bridgeObjectRetain();
  uint64_t v18 = v16;
  uint64_t v20 = v36;
  uint64_t v19 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000100E8((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v21 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v34;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v28;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v27;
  *(void *)(a2 + 56) = v22;
  *(void *)(a2 + 64) = v26;
  *(void *)(a2 + 72) = v18;
  *(void *)(a2 + 80) = v25;
  *(void *)(a2 + 88) = v21;
  *(unsigned char *)(a2 + 96) = v47;
  *(void *)(a2 + 104) = v17;
  return result;
}

unint64_t sub_10002871C()
{
  unint64_t result = qword_1000D6AA8;
  if (!qword_1000D6AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6AA8);
  }
  return result;
}

unint64_t sub_100028770()
{
  unint64_t result = qword_1000D6AC0;
  if (!qword_1000D6AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6AC0);
  }
  return result;
}

unint64_t sub_1000287C4()
{
  unint64_t result = qword_1000D6AD0;
  if (!qword_1000D6AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6AD0);
  }
  return result;
}

uint64_t sub_100028818(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(&qword_1000D6AB0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100028888()
{
  unint64_t result = qword_1000D6AE0;
  if (!qword_1000D6AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6AE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Account.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000289A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Account.CodingKeys()
{
  return &type metadata for Account.CodingKeys;
}

unint64_t sub_1000289E4()
{
  unint64_t result = qword_1000D6AE8;
  if (!qword_1000D6AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6AE8);
  }
  return result;
}

unint64_t sub_100028A3C()
{
  unint64_t result = qword_1000D6AF0;
  if (!qword_1000D6AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6AF0);
  }
  return result;
}

unint64_t sub_100028A94()
{
  unint64_t result = qword_1000D6AF8;
  if (!qword_1000D6AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6AF8);
  }
  return result;
}

uint64_t destroy for Organization()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Organization(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Organization(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for Organization(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for Organization(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for Organization(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Organization(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Organization()
{
  return &type metadata for Organization;
}

Swift::Int sub_100028D9C()
{
  return sub_10009E300();
}

Swift::Int sub_100028E8C()
{
  return sub_10009E300();
}

Swift::Int sub_100028EF8()
{
  return sub_10009E300();
}

Swift::Int sub_100028F64()
{
  return sub_10009E300();
}

Swift::Int sub_100028FE4()
{
  return sub_10009E300();
}

Swift::Int sub_100029078()
{
  return sub_10009E300();
}

Swift::Int sub_1000290E4()
{
  return sub_10009E300();
}

Swift::Int sub_100029190()
{
  return sub_10009E300();
}

Swift::Int sub_1000291FC()
{
  return sub_10009E300();
}

Swift::Int sub_100029268()
{
  return sub_10009E300();
}

Swift::Int sub_1000292D4()
{
  return sub_10009E300();
}

Swift::Int sub_100029360()
{
  return sub_10009E300();
}

Swift::Int sub_1000293C8()
{
  return sub_10009E300();
}

Swift::Int sub_100029458()
{
  return sub_10009E300();
}

Swift::Int sub_1000294D4()
{
  return sub_10009E300();
}

Swift::Int sub_10002953C()
{
  return sub_10009E300();
}

Swift::Int sub_1000295A4()
{
  return sub_10009E300();
}

Swift::Int sub_10002962C()
{
  return sub_10009E300();
}

Swift::Int sub_100029694()
{
  return sub_10009E300();
}

Swift::Int sub_1000296FC()
{
  return sub_10009E300();
}

Swift::Int sub_1000297A4()
{
  return sub_10009E300();
}

Swift::Int sub_10002980C()
{
  return sub_10009E300();
}

uint64_t sub_1000298F8(char a1)
{
  return *(void *)&aOrgNameorgEmai_0[8 * a1];
}

uint64_t sub_100029918(void *a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D6B10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000FF9C(a1, a1[3]);
  sub_10002A2A0();
  sub_10009E320();
  v8[15] = 0;
  sub_10009E200();
  if (!v1)
  {
    v8[14] = 1;
    sub_10009E200();
    v8[13] = 2;
    sub_10009E200();
    v8[12] = 3;
    sub_10009E200();
    v8[11] = 4;
    sub_10009E210();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100029AF0(char *a1, char *a2)
{
  return sub_10000A898(*a1, *a2);
}

Swift::Int sub_100029AFC()
{
  return sub_100029078();
}

uint64_t sub_100029B04()
{
  return sub_10002A8C0();
}

Swift::Int sub_100029B0C()
{
  return sub_100029694();
}

uint64_t sub_100029B14@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100029E7C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100029B44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000298F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100029B70()
{
  return sub_1000298F8(*v0);
}

uint64_t sub_100029B78@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100029E7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100029BA0(uint64_t a1)
{
  unint64_t v2 = sub_10002A2A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100029BDC(uint64_t a1)
{
  unint64_t v2 = sub_10002A2A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100029C18@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100029EC8(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100029C6C(void *a1)
{
  return sub_100029918(a1);
}

uint64_t sub_100029C84()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  BOOL v3 = v1 == 6779503 && v2 == 0xE300000000000000;
  char v4 = v3;
  if (v3 || (sub_10009E260()) && (*(unsigned char *)(v0 + 64))
    return 3;
  if (v1 == 7693413 && v2 == 0xE300000000000000) {
    return 1;
  }
  char v6 = sub_10009E260();
  char v7 = v6 | v4;
  if (v6) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = 2;
  }
  if ((v7 & 1) == 0)
  {
    if (sub_10009E260()) {
      return 2;
    }
    else {
      return 0;
    }
  }
  return result;
}

Swift::Int sub_100029D70()
{
  return sub_100029DA8();
}

Swift::Int sub_100029D88()
{
  return sub_100029DA8();
}

Swift::Int sub_100029DA8()
{
  return sub_10009E300();
}

Swift::Int sub_100029DF4()
{
  return sub_100029E2C();
}

Swift::Int sub_100029E14()
{
  return sub_100029E2C();
}

Swift::Int sub_100029E2C()
{
  return sub_10009E300();
}

uint64_t sub_100029E7C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000CABB0;
  v6._object = a2;
  unint64_t v4 = sub_10009E140(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_100029EC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000D308(&qword_1000D6B00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_10002A2A0();
  sub_10009E310();
  if (v2) {
    return sub_1000100E8((uint64_t)a1);
  }
  char v35 = 0;
  uint64_t v9 = sub_10009E190();
  uint64_t v11 = v10;
  uint64_t v29 = v9;
  char v34 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10009E190();
  uint64_t v30 = v13;
  uint64_t v26 = v12;
  char v33 = 2;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  uint64_t v25 = sub_10009E190();
  char v32 = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10009E190();
  uint64_t v27 = v15;
  uint64_t v23 = v16;
  uint64_t v24 = v17;
  char v31 = 4;
  swift_bridgeObjectRetain();
  char v18 = sub_10009E1A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000100E8((uint64_t)a1);
  uint64_t v19 = v24;
  swift_bridgeObjectRelease();
  uint64_t v20 = v27;
  swift_bridgeObjectRelease();
  uint64_t v21 = v30;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v25;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v19;
  *(unsigned char *)(a2 + 64) = v18 & 1;
  return result;
}

unint64_t sub_10002A2A0()
{
  unint64_t result = qword_1000D6B08;
  if (!qword_1000D6B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Organization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002A3C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Organization.CodingKeys()
{
  return &type metadata for Organization.CodingKeys;
}

unint64_t sub_10002A3FC()
{
  unint64_t result = qword_1000D6B18;
  if (!qword_1000D6B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B18);
  }
  return result;
}

unint64_t sub_10002A454()
{
  unint64_t result = qword_1000D6B20;
  if (!qword_1000D6B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B20);
  }
  return result;
}

unint64_t sub_10002A4AC()
{
  unint64_t result = qword_1000D6B28;
  if (!qword_1000D6B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B28);
  }
  return result;
}

uint64_t destroy for AXMMDMServer()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AXMMDMServer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AXMMDMServer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for AXMMDMServer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AXMMDMServer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AXMMDMServer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AXMMDMServer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMMDMServer()
{
  return &type metadata for AXMMDMServer;
}

uint64_t sub_10002A6FC()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002A750()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002A82C()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002A8C0()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002A914()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002A968()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002A9DC()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002AA30()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002AA84()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002AAEC()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002AB68()
{
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002ABBC(char a1)
{
  if (!a1) {
    return 0x52414C55474552;
  }
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return 0x444D5F44554F4C43;
}

uint64_t sub_10002AC1C(char a1)
{
  return *(void *)&aMdmServname_1[8 * a1];
}

uint64_t sub_10002AC3C()
{
  swift_bridgeObjectRetain();
  sub_10009DD20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10009DD20();
  swift_bridgeObjectRelease();
  sub_10009DD20();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002AD2C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000D308(&qword_1000D6B50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000FF9C(a1, a1[3]);
  sub_10002BBFC();
  sub_10009E320();
  v10[15] = 0;
  sub_10009E200();
  if (!v2)
  {
    v10[14] = 1;
    sub_10009E200();
    v10[13] = *(unsigned char *)(v3 + 32);
    v10[12] = 2;
    sub_10002BCA4();
    sub_10009E220();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_10002AECC()
{
  return sub_10009E300();
}

uint64_t sub_10002AFC8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D6B98);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_10002C1A0();
  sub_10009E320();
  v9[1] = a2;
  sub_10000D308(&qword_1000D6AB0);
  sub_100028818(&qword_1000D6AD8, (void (*)(void))sub_100028888);
  sub_10009E220();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10002B148(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10000A784(*a1, *a2);
}

Swift::Int sub_10002B154()
{
  return sub_1000290E4();
}

uint64_t sub_10002B15C()
{
  return sub_10002A82C();
}

Swift::Int sub_10002B164()
{
  return sub_1000296FC();
}

uint64_t sub_10002B16C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000CAC48;
  uint64_t result = sub_10002B914(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_10002B1A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002ABBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10002B1D0()
{
  return sub_10009DD90();
}

uint64_t sub_10002B230()
{
  return sub_10009DD80();
}

uint64_t sub_10002B280(char *a1, char *a2)
{
  return sub_10000A920(*a1, *a2);
}

Swift::Int sub_10002B28C()
{
  return sub_100029190();
}

uint64_t sub_10002B294()
{
  return sub_10002A914();
}

Swift::Int sub_10002B29C()
{
  return sub_10002962C();
}

uint64_t sub_10002B2A4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1000CACB0;
  uint64_t result = sub_10002B914(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_10002B2DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002AC1C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10002B308()
{
  return sub_10002AC1C(*v0);
}

uint64_t sub_10002B310@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  v4._rawValue = &off_1000CACB0;
  uint64_t result = sub_10002B914(a1, a2, v4);
  *a3 = result;
  return result;
}

void sub_10002B340(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10002B34C(uint64_t a1)
{
  unint64_t v2 = sub_10002BBFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002B388(uint64_t a1)
{
  unint64_t v2 = sub_10002BBFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10002B3C4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10002B95C(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10002B40C(void *a1)
{
  return sub_10002AD2C(a1);
}

Swift::Int sub_10002B42C()
{
  return sub_10009E300();
}

uint64_t sub_10002B52C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  char v8 = *(unsigned char *)(a2 + 32);
  return sub_10002B778((uint64_t)v5, (uint64_t)v7) & 1;
}

unint64_t sub_10002B57C()
{
  unint64_t result = qword_1000D6B30;
  if (!qword_1000D6B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B30);
  }
  return result;
}

uint64_t sub_10002B5E0@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  long long v3 = (void *)a1[1];
  v4._rawValue = &off_1000CAD18;
  v7._object = v3;
  Swift::Int v5 = sub_10009E140(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_10002B634@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002BFD8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002B660@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_1000CAD50;
  v8._object = a2;
  Swift::Int v6 = sub_10009E140(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_10002B6B8(uint64_t a1)
{
  unint64_t v2 = sub_10002C1A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002B6F4(uint64_t a1)
{
  unint64_t v2 = sub_10002C1A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10002B730@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10002BFF8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10002B75C(void *a1)
{
  return sub_10002AFC8(a1, *v1);
}

uint64_t sub_10002B778(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = 0, (sub_10009E260() & 1) != 0))
  {
    BOOL v6 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v6 || (char v5 = 0, (sub_10009E260() & 1) != 0))
    {
      unint64_t v7 = 0xE90000000000004DLL;
      unint64_t v8 = 0x444D5F44554F4C43;
      if (*(unsigned char *)(a1 + 32) == 1)
      {
        unint64_t v8 = 0xD000000000000013;
        unint64_t v7 = 0x80000001000A6190;
      }
      if (*(unsigned char *)(a1 + 32)) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0x52414C55474552;
      }
      if (*(unsigned char *)(a1 + 32)) {
        unint64_t v10 = v7;
      }
      else {
        unint64_t v10 = 0xE700000000000000;
      }
      int v11 = *(unsigned __int8 *)(a2 + 32);
      if (*(unsigned char *)(a2 + 32))
      {
        if (v11 == 1) {
          unint64_t v12 = 0xD000000000000013;
        }
        else {
          unint64_t v12 = 0x444D5F44554F4C43;
        }
        if (v11 == 1) {
          unint64_t v13 = 0x80000001000A6190;
        }
        else {
          unint64_t v13 = 0xE90000000000004DLL;
        }
        if (v9 != v12) {
          goto LABEL_31;
        }
      }
      else
      {
        unint64_t v13 = 0xE700000000000000;
        if (v9 != 0x52414C55474552) {
          goto LABEL_31;
        }
      }
      if (v10 == v13)
      {
        char v5 = 1;
LABEL_32:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v5 & 1;
      }
LABEL_31:
      char v5 = sub_10009E260();
      goto LABEL_32;
    }
  }
  return v5 & 1;
}

uint64_t sub_10002B8DC()
{
  return sub_10009DD20();
}

uint64_t sub_10002B8F4()
{
  return sub_10009DD20();
}

uint64_t sub_10002B914(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_10009E140(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

uint64_t sub_10002B95C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000D308(&qword_1000D6B38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_10002BBFC();
  sub_10009E310();
  if (v2) {
    return sub_1000100E8((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_10009E190();
  uint64_t v11 = v10;
  uint64_t v20 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10009E190();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  char v21 = 2;
  sub_10002BC50();
  swift_bridgeObjectRetain();
  uint64_t v19 = v14;
  sub_10009E1B0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v14) = v22;
  sub_1000100E8((uint64_t)a1);
  uint64_t v15 = v19;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v14;
  return result;
}

unint64_t sub_10002BBFC()
{
  unint64_t result = qword_1000D6B40;
  if (!qword_1000D6B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B40);
  }
  return result;
}

unint64_t sub_10002BC50()
{
  unint64_t result = qword_1000D6B48;
  if (!qword_1000D6B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B48);
  }
  return result;
}

unint64_t sub_10002BCA4()
{
  unint64_t result = qword_1000D6B58;
  if (!qword_1000D6B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B58);
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMMDMServerListResponse()
{
  return &type metadata for AXMMDMServerListResponse;
}

ValueMetadata *type metadata accessor for AXMMDMServer.CodingKeys()
{
  return &type metadata for AXMMDMServer.CodingKeys;
}

unsigned char *_s46AddDevicesToAutomatedDeviceEnrollmentExtension16AXMMDMServerTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002BDECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMMDMServerType()
{
  return &type metadata for AXMMDMServerType;
}

unint64_t sub_10002BE28()
{
  unint64_t result = qword_1000D6B60;
  if (!qword_1000D6B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B60);
  }
  return result;
}

unint64_t sub_10002BE80()
{
  unint64_t result = qword_1000D6B68;
  if (!qword_1000D6B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B68);
  }
  return result;
}

unint64_t sub_10002BED8()
{
  unint64_t result = qword_1000D6B70;
  if (!qword_1000D6B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B70);
  }
  return result;
}

unint64_t sub_10002BF30()
{
  unint64_t result = qword_1000D6B78;
  if (!qword_1000D6B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B78);
  }
  return result;
}

unint64_t sub_10002BF84()
{
  unint64_t result = qword_1000D6B80;
  if (!qword_1000D6B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B80);
  }
  return result;
}

uint64_t sub_10002BFD8()
{
  return 0x767265735F6D646DLL;
}

void *sub_10002BFF8(void *a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D6B88);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000FF9C(a1, a1[3]);
  sub_10002C1A0();
  sub_10009E310();
  if (v1)
  {
    sub_1000100E8((uint64_t)a1);
  }
  else
  {
    sub_10000D308(&qword_1000D6AB0);
    sub_100028818(&qword_1000D6AB8, (void (*)(void))sub_100028770);
    sub_10009E1B0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    sub_1000100E8((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_10002C1A0()
{
  unint64_t result = qword_1000D6B90;
  if (!qword_1000D6B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AXMMDMServerListResponse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10002C290);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMMDMServerListResponse.CodingKeys()
{
  return &type metadata for AXMMDMServerListResponse.CodingKeys;
}

unint64_t sub_10002C2CC()
{
  unint64_t result = qword_1000D6BA0;
  if (!qword_1000D6BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6BA0);
  }
  return result;
}

unint64_t sub_10002C324()
{
  unint64_t result = qword_1000D6BA8;
  if (!qword_1000D6BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6BA8);
  }
  return result;
}

unint64_t sub_10002C37C()
{
  unint64_t result = qword_1000D6BB0;
  if (!qword_1000D6BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6BB0);
  }
  return result;
}

uint64_t sub_10002C3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10009DE70();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_10009DE60();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_100010864(a1, &qword_1000D9350);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10009DE10();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

double sub_10002C560@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

uint64_t sub_10002C5F4()
{
  return sub_10002C61C();
}

uint64_t sub_10002C608()
{
  return sub_10002C61C();
}

uint64_t sub_10002C61C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

double sub_10002C688@<D0>(uint64_t a1@<X8>)
{
  return sub_10002C6B0(a1);
}

double sub_10002C69C@<D0>(uint64_t a1@<X8>)
{
  return sub_10002C6B0(a1);
}

double sub_10002C6B0@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10002C72C()
{
  return sub_10002C754();
}

uint64_t sub_10002C740()
{
  return sub_10002C754();
}

uint64_t sub_10002C754()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10002C7C0()
{
  return sub_10002C61C();
}

uint64_t sub_10002C7D4()
{
  return sub_10002C61C();
}

uint64_t sub_10002C7E8(char *a1)
{
  char v1 = *a1;
  swift_unownedRetainStrong();
  sub_10002C830(v1);

  return swift_release();
}

uint64_t sub_10002C830(char a1)
{
  if (a1 == 1)
  {
    uint64_t v2 = v1[25];
    uint64_t v3 = v1[26];
    sub_10000FF9C(v1 + 22, v2);
    (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF40();
  uint64_t v4 = v1[25];
  uint64_t v5 = v1[26];
  sub_10000FF9C(v1 + 22, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_10002C990(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  swift_unownedRetainStrong();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10000FDF0(v3, v2);
  return sub_10009CF40();
}

uint64_t sub_10002CA80()
{
  v0[2] = sub_10009DE40();
  v0[3] = sub_10009DE30();
  char v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10002CB2C;
  return sub_10002CC68();
}

uint64_t sub_10002CB2C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_10009DE10();
  return _swift_task_switch(sub_100035430, v1, v0);
}

uint64_t sub_10002CC68()
{
  v1[4] = v0;
  sub_10009DE40();
  v1[5] = sub_10009DE30();
  uint64_t v3 = sub_10009DE10();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_10002CD00, v3, v2);
}

uint64_t sub_10002CD00()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10002CE00;
  return v5(ObjectType, v1);
}

uint64_t sub_10002CE00(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 72) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[6];
    uint64_t v8 = v6[7];
    long long v9 = sub_10002CFB8;
  }
  else
  {
    v6[10] = a2;
    v6[11] = a1;
    uint64_t v7 = v6[6];
    uint64_t v8 = v6[7];
    long long v9 = sub_10002CF34;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_10002CF34()
{
  unint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  swift_release();
  sub_100031E2C(v1, v2);
  sub_100034C6C(v1, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10002CFB8()
{
  uint64_t v12 = v0;
  swift_release();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEB0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 72);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    *(void *)(v0 + 16) = v5;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v7 = sub_10009DCF0();
    *(void *)(v0 + 24) = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error fetching network info, defaulting to .shareWiFi: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 96) = 0;
  swift_retain();
  sub_10009CF40();
  swift_errorRelease();
  long long v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10002D228()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v2 - 8);
  BOOL v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v6 = v28;
  if (v28)
  {
    uint64_t v7 = v27;
    uint64_t v8 = v29;
    uint64_t v9 = v30;
    uint64_t v10 = v31;
    uint64_t v24 = v33;
    uint64_t v25 = v32;
    uint64_t v22 = v35;
    uint64_t v23 = v34;
    uint64_t v20 = v37;
    uint64_t v21 = v36;
    uint64_t v19 = v38;
    char v11 = v39 & 1;
    uint64_t v26 = v40;
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v27) = 1;
    swift_retain();
    sub_10009CF40();
    uint64_t v12 = sub_10009DE70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
    sub_10009DE40();
    swift_retain();
    uint64_t v13 = sub_10009DE30();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = &protocol witness table for MainActor;
    *(void *)(v14 + 32) = v1;
    *(void *)(v14 + 40) = v7;
    *(void *)(v14 + 48) = v6;
    *(void *)(v14 + 56) = v8;
    *(void *)(v14 + 64) = v9;
    *(void *)(v14 + 72) = v10;
    uint64_t v15 = v24;
    *(void *)(v14 + 80) = v25;
    *(void *)(v14 + 88) = v15;
    uint64_t v16 = v22;
    *(void *)(v14 + 96) = v23;
    *(void *)(v14 + 104) = v16;
    uint64_t v17 = v20;
    *(void *)(v14 + 112) = v21;
    *(void *)(v14 + 120) = v17;
    *(void *)(v14 + 128) = v19;
    *(unsigned char *)(v14 + 136) = v11;
    LODWORD(v17) = v27;
    *(_DWORD *)(v14 + 140) = *(_DWORD *)((char *)&v27 + 3);
    *(_DWORD *)(v14 + 137) = v17;
    *(void *)(v14 + 144) = v26;
    sub_100088B08((uint64_t)v4, (uint64_t)&unk_1000D70B8, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_10002D488(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = (long long *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v6 = v22;
  if (!*((void *)&v22 + 1))
  {
    long long v22 = *(_OWORD *)a1;
    long long v18 = *v3;
    sub_1000351AC((uint64_t)&v22);
    sub_1000351AC((uint64_t)&v18);
    uint64_t v10 = v15;
    uint64_t v9 = v16;
    uint64_t v11 = v4;
    sub_1000351D8(v2, v15);
    sub_1000351D8(v6, 0);
    uint64_t v12 = v2;
LABEL_6:
    *(void *)&long long v19 = v12;
    *((void *)&v19 + 1) = v10;
    *(void *)&long long v20 = v9;
    *((void *)&v20 + 1) = v11;
    char v21 = v5;
    return sub_10002D65C((uint64_t)&v19);
  }
  uint64_t v14 = v4;
  long long v7 = *(_OWORD *)a1;
  long long v17 = *v3;
  long long v18 = v7;
  sub_1000351AC((uint64_t)&v18);
  sub_1000351AC((uint64_t)&v17);
  sub_1000351AC((uint64_t)&v18);
  sub_1000351AC((uint64_t)&v17);
  char v8 = sub_10002B778(a1, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003521C((uint64_t)&v18);
  sub_10003521C((uint64_t)&v17);
  sub_10003521C((uint64_t)&v18);
  sub_10003521C((uint64_t)&v17);
  if ((v8 & 1) == 0)
  {
    uint64_t v12 = v2;
    uint64_t v10 = v15;
    uint64_t v9 = v16;
    uint64_t v11 = v14;
    goto LABEL_6;
  }
  char v21 = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  return sub_10002D65C((uint64_t)&v19);
}

uint64_t sub_10002D65C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10009CE60();
  sub_10000D690(v7, (uint64_t)qword_1000E3488);
  sub_1000353E4(a1, (void (*)(void, void, void, void, void))sub_100016884);
  sub_1000353E4(a1, (void (*)(void, void, void, void, void))sub_100016884);
  char v8 = sub_10009CE40();
  os_log_type_t v9 = sub_10009DEA0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    v17[0] = sub_10000DBA8(0xD000000000000023, 0x80000001000A7D20, &v18);
    sub_10009DFC0();
    *(_WORD *)(v10 + 12) = 2080;
    sub_100034F80(a1, (uint64_t)v17);
    sub_1000353E4(a1, (void (*)(void, void, void, void, void))sub_100016884);
    uint64_t v11 = sub_10009DCF0();
    v17[0] = sub_10000DBA8(v11, v12, &v18);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    sub_1000353E4(a1, (void (*)(void, void, void, void, void))sub_100034EE0);
    sub_1000353E4(a1, (void (*)(void, void, void, void, void))sub_100034EE0);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: persisting MDM Server: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000353E4(a1, (void (*)(void, void, void, void, void))sub_100034EE0);
    sub_1000353E4(a1, (void (*)(void, void, void, void, void))sub_100034EE0);
  }

  uint64_t v13 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  sub_10009DE40();
  sub_1000353E4(a1, (void (*)(void, void, void, void, void))sub_100016884);
  swift_retain();
  uint64_t v14 = sub_10009DE30();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v2;
  sub_100034F80(a1, (uint64_t)(v15 + 5));
  sub_100088B08((uint64_t)v6, (uint64_t)&unk_1000D70A0, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_10002D9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = sub_10009DE40();
  _OWORD v5[3] = sub_10009DE30();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10002CB2C;
  return sub_10002DAB0(a5);
}

uint64_t sub_10002DAB0(uint64_t a1)
{
  *(void *)(v2 + 272) = a1;
  *(void *)(v2 + 280) = v1;
  sub_100034F80(a1, v2 + 96);
  long long v3 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v2 + 288) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v2 + 304) = v3;
  *(unsigned char *)(v2 + 49) = *(unsigned char *)(v2 + 128);
  sub_10009DE40();
  *(void *)(v2 + 320) = sub_10009DE30();
  uint64_t v5 = sub_10009DE10();
  *(void *)(v2 + 328) = v5;
  *(void *)(v2 + 336) = v4;
  return _swift_task_switch(sub_10002DB60, v5, v4);
}

uint64_t sub_10002DB60()
{
  char v1 = *(unsigned char *)(v0 + 49);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  long long v10 = *(_OWORD *)(v0 + 288);
  uint64_t v4 = *(void **)(v0 + 280);
  uint64_t v5 = v4[13];
  uint64_t v6 = v4[14];
  sub_10000FF9C(v4 + 10, v5);
  *(_OWORD *)(v0 + 16) = v10;
  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v2;
  *(unsigned char *)(v0 + 48) = v1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 16) + **(int **)(v6 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10002DC9C;
  return v9(v0 + 16, v5, v6);
}

uint64_t sub_10002DC9C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 336);
  uint64_t v4 = *(void *)(v2 + 328);
  if (v0) {
    uint64_t v5 = sub_10002DFA4;
  }
  else {
    uint64_t v5 = sub_10002DDD8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10002DDD8()
{
  uint64_t v1 = *(void *)(v0 + 272);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100016580(v0 + 16, v0 + 216);
  sub_1000353E4(v1, (void (*)(void, void, void, void, void))sub_100016884);
  sub_1000353E4(v1, (void (*)(void, void, void, void, void))sub_100016884);
  swift_retain();
  sub_10009CF40();
  sub_100034F80(v1, v0 + 56);
  unint64_t v2 = *(void *)(v0 + 64);
  if (v2 >= 2)
  {
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 80);
    char v6 = *(unsigned char *)(v0 + 88);
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 176) = v3;
    *(void *)(v0 + 184) = v2;
    *(void *)(v0 + 192) = v4;
    *(void *)(v0 + 200) = v5;
    *(unsigned char *)(v0 + 208) = v6;
  }
  else
  {
    sub_1000353E4(*(void *)(v0 + 272), (void (*)(void, void, void, void, void))sub_100034EE0);
    swift_getKeyPath();
    swift_getKeyPath();
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    *(unsigned char *)(v0 + 168) = 0;
  }
  swift_retain();
  sub_10009CF40();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10002DFA4()
{
  unint64_t v12 = v0;
  swift_release();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEB0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[44];
  if (v4)
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)char v6 = 136446210;
    v0[32] = v5;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v7 = sub_10009DCF0();
    v0[33] = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to store mdm server info %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10002E1D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v2 - 8);
  BOOL v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10009CE60();
  sub_10000D690(v5, (uint64_t)qword_1000E3488);
  char v6 = sub_10009CE40();
  os_log_type_t v7 = sub_10009DEA0();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 136315138;
    uint64_t v13 = sub_10000DBA8(0xD00000000000001FLL, 0x80000001000A7D00, &v14);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: persisting network type to credential", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v9 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_10009DE40();
  swift_retain();
  uint64_t v10 = sub_10009DE30();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v1;
  sub_100088B08((uint64_t)v4, (uint64_t)&unk_1000D7090, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_10002E440()
{
  v0[2] = sub_10009DE40();
  v0[3] = sub_10009DE30();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10002E4F4;
  return sub_10002E690(0, 0);
}

uint64_t sub_10002E4F4()
{
  swift_task_dealloc();
  uint64_t v1 = sub_10009DE10();
  return _swift_task_switch(sub_10002E630, v1, v0);
}

uint64_t sub_10002E630()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002E690(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = sub_10009DE40();
  v3[8] = sub_10009DE30();
  uint64_t v5 = sub_10009DE10();
  v3[9] = v5;
  v3[10] = v4;
  return _swift_task_switch(sub_10002E730, v5, v4);
}

uint64_t sub_10002E730()
{
  uint64_t v1 = v0[6];
  v0[11] = *(void *)(v1 + 64);
  uint64_t v2 = *(void *)(v1 + 72);
  v0[12] = v2;
  uint64_t ObjectType = swift_getObjectType();
  v0[13] = ObjectType;
  char v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 16) + **(int **)(v2 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[14] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10002E840;
  return v6(ObjectType, v2);
}

uint64_t sub_10002E840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[15] = a1;
  v4[16] = a2;
  v4[17] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    return _swift_task_switch(sub_10002F0E8, v5, v6);
  }
  else
  {
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4[12] + 24)
                                                                     + **(int **)(v4[12] + 24));
    uint64_t v7 = (void *)swift_task_alloc();
    v4[18] = v7;
    *uint64_t v7 = v4;
    v7[1] = sub_10002EA14;
    uint64_t v9 = v4[12];
    uint64_t v8 = v4[13];
    uint64_t v10 = v4[5];
    uint64_t v11 = v4[4];
    return v13(v11, v10, v8, v9);
  }
}

uint64_t sub_10002EA14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  if (v0) {
    uint64_t v5 = sub_10002F310;
  }
  else {
    uint64_t v5 = sub_10002EB50;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10002EB50()
{
  v0[20] = sub_10009DE30();
  uint64_t v2 = sub_10009DE10();
  v0[21] = v2;
  v0[22] = v1;
  return _swift_task_switch(sub_10002EBDC, v2, v1);
}

uint64_t sub_10002EBDC()
{
  unint64_t v1 = v0[16];
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      uint64_t v3 = v0[6];
      v0[23] = *(void *)(v3 + 160);
      uint64_t v4 = *(void *)(v3 + 168);
      v0[24] = v4;
      v0[25] = swift_getObjectType();
      v0[26] = *(void *)(v4 + 32);
      v0[27] = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x5359000000000000;
      uint64_t v5 = sub_10009DE10();
      uint64_t v7 = v6;
      uint64_t v8 = sub_10002ECC8;
      uint64_t v9 = v5;
      uint64_t v10 = v7;
      goto LABEL_7;
    }
    swift_release();
  }
  else
  {
    uint64_t v2 = v0[15];
    swift_release();
    sub_100034C6C(v2, v1);
  }
  uint64_t v9 = v0[9];
  uint64_t v10 = v0[10];
  uint64_t v8 = sub_10002F06C;
LABEL_7:
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_10002ECC8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  (*(void (**)(void, void, void, void))(v0 + 208))(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 200), *(void *)(v0 + 192));
  *(void *)(v0 + 224) = v1;
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  if (v1) {
    uint64_t v4 = sub_10002EDD0;
  }
  else {
    uint64_t v4 = sub_10002ED5C;
  }
  return _swift_task_switch(v4, v2, v3);
}

uint64_t sub_10002ED5C()
{
  uint64_t v1 = v0[15];
  unint64_t v2 = v0[16];
  swift_release();
  sub_100034C6C(v1, v2);
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  return _swift_task_switch(sub_10002F06C, v3, v4);
}

uint64_t sub_10002EDD0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_10002EE34, v1, v2);
}

uint64_t sub_10002EE34()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[15];
  unint64_t v2 = v0[16];
  swift_release();
  sub_100034C6C(v1, v2);
  uint64_t v3 = v0[28];
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009CE60();
  sub_10000D690(v4, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_10009CE40();
  os_log_type_t v6 = sub_10009DEB0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v8 = sub_10009DCF0();
    v0[3] = sub_10000DBA8(v8, v9, &v12);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unable to store networking info as .credential: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10002F06C()
{
  unint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  swift_release();
  sub_100031E2C(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10002F0E8()
{
  uint64_t v11 = v0;
  swift_release();
  uint64_t v1 = v0[17];
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    v0[2] = v1;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v6 = sub_10009DCF0();
    v0[3] = sub_10000DBA8(v6, v7, &v10);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unable to store networking info as .credential: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10002F310()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[15];
  unint64_t v2 = v0[16];
  swift_release();
  sub_100034C6C(v1, v2);
  uint64_t v3 = v0[19];
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009CE60();
  sub_10000D690(v4, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_10009CE40();
  os_log_type_t v6 = sub_10009DEB0();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)unint64_t v7 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v8 = sub_10009DCF0();
    v0[3] = sub_10000DBA8(v8, v9, &v12);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unable to store networking info as .credential: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10002F548()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10009CE60();
  sub_10000D690(v5, (uint64_t)qword_1000E3488);
  os_log_type_t v6 = sub_10009CE40();
  os_log_type_t v7 = sub_10009DEA0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v13 = sub_10000DBA8(0xD00000000000001CLL, 0x80000001000A7CE0, &v14);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: persisting network type to not shared", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v9 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_10009DE40();
  swift_retain();
  uint64_t v10 = sub_10009DE30();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v1;
  sub_100088B08((uint64_t)v4, (uint64_t)&unk_1000D7078, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_10002F7B4()
{
  v0[2] = sub_10009DE40();
  v0[3] = sub_10009DE30();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10002CB2C;
  return sub_10002E690(0, 1);
}

uint64_t sub_10002F868()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10009CE60();
  sub_10000D690(v5, (uint64_t)qword_1000E3488);
  os_log_type_t v6 = sub_10009CE40();
  os_log_type_t v7 = sub_10009DEA0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v13 = sub_10000DBA8(0x2874754F6E676973, 0xE900000000000029, &v14);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: Handling sign out from settings", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v14) = 1;
  swift_retain();
  sub_10009CF40();
  uint64_t v9 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_10009DE40();
  swift_retain();
  uint64_t v10 = sub_10009DE30();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v1;
  sub_10002C3D0((uint64_t)v4, (uint64_t)&unk_1000D7058, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_10002FB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[99] = a4;
  v4[105] = sub_10009DE40();
  v4[111] = sub_10009DE30();
  uint64_t v6 = sub_10009DE10();
  v4[117] = v6;
  v4[123] = v5;
  return _swift_task_switch(sub_10002FBB8, v6, v5);
}

uint64_t sub_10002FBB8()
{
  uint64_t v1 = *(void **)(v0 + 792);
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_10000FF9C(v1 + 3, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 992) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10002FCBC;
  return v6(v2, v3);
}

uint64_t sub_10002FCBC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 984);
  uint64_t v3 = *(void *)(v1 + 936);
  return _swift_task_switch(sub_10002FDDC, v3, v2);
}

uint64_t sub_10002FDDC()
{
  swift_retain_n();
  sub_10000AF84(&qword_1000D9FB0);
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 16, v0 + 776, sub_10002FE9C, v0 + 800);
}

uint64_t sub_10002FE9C()
{
  v1[125] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 2, v1 + 97, sub_100030930, v1 + 106);
  }
  else
  {
    uint64_t v2 = v1[97];
    v1[126] = v2;
    unint64_t v3 = v1[98];
    v1[127] = v3;
    sub_100034C48(v2, v3);
    v1[128] = sub_10009DE30();
    uint64_t v5 = sub_10009DE10();
    v1[129] = v5;
    v1[130] = v4;
    return _swift_task_switch(sub_10002FF84, v5, v4);
  }
}

uint64_t sub_10002FF84()
{
  unint64_t v1 = v0[127];
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      uint64_t v3 = v0[99];
      v0[131] = *(void *)(v3 + 160);
      uint64_t v4 = *(void *)(v3 + 168);
      v0[132] = v4;
      v0[133] = swift_getObjectType();
      v0[134] = *(void *)(v4 + 32);
      v0[135] = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x5359000000000000;
      uint64_t v5 = sub_10009DE10();
      uint64_t v7 = v6;
      uint64_t v8 = sub_100030078;
      uint64_t v9 = v5;
      uint64_t v10 = v7;
      goto LABEL_7;
    }
    swift_release();
  }
  else
  {
    uint64_t v2 = v0[126];
    swift_release();
    sub_100034C6C(v2, v1);
  }
  uint64_t v10 = v0[123];
  uint64_t v9 = v0[117];
  uint64_t v8 = sub_100030314;
LABEL_7:
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_100030078()
{
  uint64_t v1 = *(void *)(v0 + 1000);
  (*(void (**)(void, void, void, void))(v0 + 1072))(*(void *)(v0 + 1008), *(void *)(v0 + 1016), *(void *)(v0 + 1064), *(void *)(v0 + 1056));
  *(void *)(v0 + 1088) = v1;
  uint64_t v2 = *(void *)(v0 + 1040);
  uint64_t v3 = *(void *)(v0 + 1032);
  if (v1) {
    uint64_t v4 = sub_100030198;
  }
  else {
    uint64_t v4 = sub_10003011C;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10003011C()
{
  unint64_t v1 = v0[127];
  uint64_t v2 = v0[126];
  swift_release();
  sub_100034C6C(v2, v1);
  uint64_t v3 = v0[123];
  uint64_t v4 = v0[117];
  return _swift_task_switch(sub_100030314, v4, v3);
}

uint64_t sub_100030198()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 984);
  uint64_t v2 = *(void *)(v0 + 936);
  return _swift_task_switch(sub_100030200, v2, v1);
}

uint64_t sub_100030200()
{
  sub_100034C6C(*(void *)(v0 + 1008), *(void *)(v0 + 1016));
  return _swift_asyncLet_finish(v0 + 16, v0 + 776, sub_100030284, v0 + 656);
}

uint64_t sub_100030284()
{
  return _swift_task_switch(sub_1000302A0, *(void *)(v0 + 936), *(void *)(v0 + 984));
}

uint64_t sub_1000302A0()
{
  swift_release();
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100030314()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 792) + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 24) + **(int **)(v1 + 24));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1096) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10003041C;
  return v5(0, 2, ObjectType, v1);
}

uint64_t sub_10003041C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_asyncLet_finish(v2 + 16, v2 + 776, sub_1000309C0, v2 + 736);
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 984);
    uint64_t v4 = *(void *)(v2 + 936);
    return _swift_task_switch(sub_10003055C, v4, v3);
  }
}

uint64_t sub_10003055C()
{
  uint64_t v1 = *(void **)(v0 + 792);
  uint64_t v2 = v1[13];
  uint64_t v3 = v1[14];
  sub_10000FF9C(v1 + 10, v2);
  *(void *)(v0 + 696) = 0;
  *(void *)(v0 + 704) = 2;
  *(_OWORD *)(v0 + 712) = 0u;
  *(unsigned char *)(v0 + 728) = 0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100030690;
  return v6(v0 + 696, v2, v3);
}

uint64_t sub_100030690()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_asyncLet_finish(v2 + 16, v2 + 776, sub_100030A50, v2 + 944);
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 984);
    uint64_t v4 = *(void *)(v2 + 936);
    return _swift_task_switch(sub_1000307D0, v4, v3);
  }
}

uint64_t sub_1000307D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 729) = 0;
  swift_retain();
  sub_10009CF40();
  return _swift_asyncLet_finish(v0 + 16, v0 + 776, sub_1000308A0, v0 + 896);
}

uint64_t sub_1000308A0()
{
  return _swift_task_switch(sub_1000308BC, *(void *)(v0 + 936), *(void *)(v0 + 984));
}

uint64_t sub_1000308BC()
{
  swift_release();
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100030930()
{
  return _swift_task_switch(sub_10003094C, *(void *)(v0 + 936), *(void *)(v0 + 984));
}

uint64_t sub_10003094C()
{
  swift_release();
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000309C0()
{
  return _swift_task_switch(sub_1000309DC, *(void *)(v0 + 936), *(void *)(v0 + 984));
}

uint64_t sub_1000309DC()
{
  swift_release();
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100030A50()
{
  return _swift_task_switch(sub_100030A6C, *(void *)(v0 + 936), *(void *)(v0 + 984));
}

uint64_t sub_100030A6C()
{
  swift_release();
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100030AE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100030B00, 0, 0);
}

uint64_t sub_100030B00()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100030C00;
  return v5(ObjectType, v1);
}

uint64_t sub_100030C00(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 40) = a2;
    *(void *)(v6 + 48) = a1;
    return _swift_task_switch(sub_100030D5C, 0, 0);
  }
}

uint64_t sub_100030D5C()
{
  *(int8x16_t *)*(void *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100030D84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  if ((_BYTE)v3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009CF30();
    swift_release();
    swift_release();
    if (v4) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    if (qword_1000D52C0 != -1) {
      swift_once();
    }
    int v1 = byte_1000E3628;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009CF30();
    swift_release();
    swift_release();
    if (v1 == 1) {
      unint64_t v2 = 0x204E414C57206F4ELL;
    }
    else {
      unint64_t v2 = 0xD000000000000010;
    }
    if (v4) {
      return v3;
    }
    else {
      return v2;
    }
  }
}

uint64_t sub_100030F3C()
{
  uint64_t v0 = sub_10009DC40();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10009CCC0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10009DC60();
  __chkstk_darwin(v2 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  if (!v4)
  {
    if (qword_1000D52C0 == -1)
    {
LABEL_5:
      sub_10009DC00();
      sub_10009CCB0();
      return sub_10009DCE0();
    }
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  if (v4 != 1)
  {
    if (qword_1000D52C0 == -1) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
  sub_10009DC30();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  sub_10009DC20(v5);
  v6._countAndFlagsBits = sub_100030D84();
  sub_10009DC10(v6);
  swift_bridgeObjectRelease();
  v7._object = (void *)0x80000001000A7B00;
  v7._countAndFlagsBits = 0xD000000000000020;
  sub_10009DC20(v7);
  sub_10009DC50();
  sub_10009CCB0();
  return sub_10009DCE0();
}

uint64_t sub_1000312D8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

void *sub_10003134C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if ((v5 & 0x2000000000000000) != 0) {
    uint64_t v0 = HIBYTE(v5) & 0xF;
  }
  else {
    uint64_t v0 = v4 & 0xFFFFFFFFFFFFLL;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  if (v0)
  {
    sub_10009CF30();
    swift_release();
    swift_release();
    if (v5)
    {
      uint64_t v1 = v6;
      swift_bridgeObjectRetain();
      sub_10000FD00(v4, v5);
    }
    else
    {
      uint64_t v1 = _swiftEmptyArrayStorage;
    }
    swift_retain();
    uint64_t v2 = sub_100033848((uint64_t)v1);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10009CF30();
    swift_release();
    swift_release();
    if (v5)
    {
      uint64_t v2 = (uint64_t)v6;
      swift_bridgeObjectRetain();
      sub_10000FD00(v4, v5);
    }
    else
    {
      return _swiftEmptyArrayStorage;
    }
  }
  return (void *)v2;
}

uint64_t sub_10003156C()
{
  swift_bridgeObjectRelease();
  sub_1000100E8(v0 + 24);
  swift_unknownObjectRelease();
  sub_1000100E8(v0 + 80);
  sub_1000100E8(v0 + 120);
  swift_unknownObjectRelease();
  sub_1000100E8(v0 + 176);
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__account;
  uint64_t v2 = sub_10000D308(&qword_1000D5828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__wifiNetworkStatus;
  uint64_t v4 = sub_10000D308(&qword_1000D7010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__networkType;
  uint64_t v6 = sub_10000D308(&qword_1000D7008);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__currentMDMServerInfo;
  uint64_t v8 = sub_10000D308(&qword_1000D9DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__mdmServerSelected;
  uint64_t v10 = sub_10000D308(&qword_1000D7000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__currentNetworkName;
  uint64_t v12 = sub_10000D308(&qword_1000D6FF8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__networkProfileName, v12);
  uint64_t v14 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__isSignOutInProgress;
  uint64_t v15 = sub_10000D308(&qword_1000DB540);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(v14, v15);
  v16(v0+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__isFetchingMDMServerInProgress, v15);
  uint64_t v17 = v0
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__serverSelectionSearchText;
  uint64_t v18 = sub_10000D308(&qword_1000D6FF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  return v0;
}

uint64_t sub_100031854()
{
  sub_10003156C();

  return swift_deallocClassInstance();
}

uint64_t sub_1000318AC()
{
  return type metadata accessor for SettingsViewModel();
}

uint64_t type metadata accessor for SettingsViewModel()
{
  uint64_t result = qword_1000D6C30;
  if (!qword_1000D6C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100031900()
{
  sub_10001B2DC(319, (unint64_t *)&qword_1000D5600, (uint64_t *)&unk_1000D5608);
  if (v0 <= 0x3F)
  {
    sub_100031BDC(319, &qword_1000D6C40);
    if (v1 <= 0x3F)
    {
      sub_100031BDC(319, &qword_1000D6C48);
      if (v2 <= 0x3F)
      {
        sub_10001B2DC(319, (unint64_t *)&qword_1000D5E80, &qword_1000D9E10);
        if (v3 <= 0x3F)
        {
          sub_10001B2DC(319, &qword_1000D6C50, &qword_1000D6C58);
          if (v4 <= 0x3F)
          {
            sub_10001B2DC(319, &qword_1000D6C60, (uint64_t *)&unk_1000D9FA0);
            if (v5 <= 0x3F)
            {
              sub_100031BDC(319, (unint64_t *)&qword_1000D6C68);
              if (v6 <= 0x3F)
              {
                sub_100031BDC(319, (unint64_t *)&unk_1000D6C70);
                if (v7 <= 0x3F) {
                  swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100031BDC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_10009CF50();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

ValueMetadata *type metadata accessor for SettingsViewModel.NetworkType()
{
  return &type metadata for SettingsViewModel.NetworkType;
}

unsigned char *_s46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModelC17WiFiNetworkStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100031D04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsViewModel.WiFiNetworkStatus()
{
  return &type metadata for SettingsViewModel.WiFiNetworkStatus;
}

unint64_t sub_100031D40()
{
  unint64_t result = qword_1000D6FD0;
  if (!qword_1000D6FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6FD0);
  }
  return result;
}

unint64_t sub_100031D98()
{
  unint64_t result = qword_1000D6FD8;
  if (!qword_1000D6FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6FD8);
  }
  return result;
}

uint64_t sub_100031DEC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SettingsViewModel();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

uint64_t sub_100031E2C(uint64_t a1, unint64_t a2)
{
  if (!a2 || a2 == 1 || a2 == 2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_100034C48(a1, a2);
    sub_10009CF40();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
  }
  return sub_10009CF40();
}

uint64_t sub_100031F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[70] = a5;
  v5[69] = a4;
  sub_10009DE40();
  v5[71] = sub_10009DE30();
  uint64_t v7 = sub_10009DE10();
  v5[72] = v7;
  v5[73] = v6;
  return _swift_task_switch(sub_100032018, v7, v6);
}

uint64_t sub_100032018()
{
  unint64_t v1 = *(void **)(v0 + 552);
  uint64_t v2 = v1[13];
  uint64_t v3 = v1[14];
  sub_10000FF9C(v1 + 10, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_100032134;
  return v6(v0 + 336, v2, v3);
}

uint64_t sub_100032134()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 600) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 584);
  uint64_t v4 = *(void *)(v2 + 576);
  if (v0) {
    uint64_t v5 = sub_100032A54;
  }
  else {
    uint64_t v5 = sub_100032270;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100032270()
{
  sub_100016580(v0 + 336, v0 + 176);
  if (*(void *)(v0 + 184) == 2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_OWORD *)(v0 + 496) = 0u;
    *(_OWORD *)(v0 + 512) = 0u;
    *(unsigned char *)(v0 + 528) = 0;
  }
  else
  {
    sub_100034F80(v0 + 176, v0 + 136);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_100016580(v0 + 336, v0 + 456);
    sub_1000353E4(v0 + 336, (void (*)(void, void, void, void, void))sub_100016874);
    sub_1000353E4(v0 + 336, (void (*)(void, void, void, void, void))sub_100016874);
    swift_retain();
    sub_10009CF40();
    sub_100034F80(v0 + 136, v0 + 96);
    unint64_t v1 = *(void *)(v0 + 104);
    if (v1 < 2)
    {
      sub_1000353E4(v0 + 336, (void (*)(void, void, void, void, void))sub_1000353D4);
      swift_getKeyPath();
      swift_getKeyPath();
      *(_OWORD *)(v0 + 416) = 0u;
      *(_OWORD *)(v0 + 432) = 0u;
      *(unsigned char *)(v0 + 448) = 0;
      swift_retain();
      goto LABEL_7;
    }
    uint64_t v2 = *(void *)(v0 + 96);
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = *(void *)(v0 + 120);
    char v5 = *(unsigned char *)(v0 + 128);
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 376) = v2;
    *(void *)(v0 + 384) = v1;
    *(void *)(v0 + 392) = v3;
    *(void *)(v0 + 400) = v4;
    *(unsigned char *)(v0 + 408) = v5;
  }
  swift_retain();
LABEL_7:
  sub_10009CF40();
  uint64_t v6 = *(void **)(v0 + 552);
  uint64_t v7 = v6[6];
  uint64_t v8 = v6[7];
  sub_10000FF9C(v6 + 3, v7);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v8 + 48) + **(int **)(v8 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10003254C;
  return v11(v7, v8);
}

uint64_t sub_10003254C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 616) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 584);
  uint64_t v4 = *(void *)(v2 + 576);
  if (v0) {
    char v5 = sub_100032CB8;
  }
  else {
    char v5 = sub_100032688;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100032688()
{
  sub_100016580(v0 + 336, v0 + 296);
  if (*(void *)(v0 + 304) == 2)
  {
LABEL_5:
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 49) = 0;
    swift_retain();
    sub_10009CF40();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  sub_100034F80(v0 + 296, v0 + 256);
  sub_100034F80(v0 + 256, v0 + 216);
  unint64_t v1 = *(void *)(v0 + 224);
  if (v1 <= 1)
  {
    sub_1000353E4(v0 + 336, (void (*)(void, void, void, void, void))sub_1000353D4);
    goto LABEL_5;
  }
  uint64_t v2 = *(void *)(v0 + 560);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  char v5 = *(unsigned char *)(v0 + 248);
  *(void *)(v0 + 16) = *(void *)(v0 + 216);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v4;
  *(unsigned char *)(v0 + 48) = v5;
  uint64_t v6 = *(void *)(v2 + 104);
  swift_bridgeObjectRetain();
  char v7 = sub_100032F3C((uint64_t *)(v0 + 16), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_5;
  }
  *(unsigned char *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 624) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100032884;
  return sub_10002DAB0(v0 + 56);
}

uint64_t sub_100032884()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 584);
  uint64_t v3 = *(void *)(v1 + 576);
  return _swift_task_switch(sub_1000329A4, v3, v2);
}

uint64_t sub_1000329A4()
{
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 49) = 0;
  swift_retain();
  sub_10009CF40();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100032A54()
{
  uint64_t v12 = v0;
  swift_release();
  uint64_t v1 = *(void *)(v0 + 600);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v11 = v6;
    *(void *)(v0 + 544) = v1;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v7 = sub_10009DCF0();
    *(void *)(v0 + 536) = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error fetching mdm server list: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 50) = 0;
  swift_retain();
  sub_10009CF40();
  swift_errorRelease();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100032CB8()
{
  uint64_t v12 = v0;
  swift_release();
  sub_1000353E4(v0 + 336, (void (*)(void, void, void, void, void))sub_1000353D4);
  uint64_t v1 = *(void *)(v0 + 616);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v11 = v6;
    *(void *)(v0 + 544) = v1;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v7 = sub_10009DCF0();
    *(void *)(v0 + 536) = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error fetching mdm server list: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 50) = 0;
  swift_retain();
  sub_10009CF40();
  swift_errorRelease();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100032F3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v7 = (unsigned __int8 *)(a2 + 64);
  do
  {
    uint64_t v9 = *((void *)v7 - 2);
    uint64_t v10 = *((void *)v7 - 1);
    int v11 = *v7;
    BOOL v12 = *((void *)v7 - 4) == v5 && *((void *)v7 - 3) == v6;
    if (!v12 && (sub_10009E260() & 1) == 0) {
      goto LABEL_4;
    }
    BOOL v13 = v9 == a1[2] && v10 == a1[3];
    if (!v13 && (sub_10009E260() & 1) == 0) {
      goto LABEL_4;
    }
    if (v11)
    {
      if (v11 == 1)
      {
        unint64_t v14 = 0x80000001000A6190;
        unint64_t v15 = 0xD000000000000013;
        int v16 = *((unsigned __int8 *)a1 + 32);
        if (!*((unsigned char *)a1 + 32)) {
          goto LABEL_24;
        }
      }
      else
      {
        unint64_t v15 = 0x444D5F44554F4C43;
        unint64_t v14 = 0xE90000000000004DLL;
        int v16 = *((unsigned __int8 *)a1 + 32);
        if (!*((unsigned char *)a1 + 32))
        {
LABEL_24:
          unint64_t v17 = 0xE700000000000000;
          if (v15 == 0x52414C55474552) {
            goto LABEL_27;
          }
          goto LABEL_3;
        }
      }
    }
    else
    {
      unint64_t v14 = 0xE700000000000000;
      unint64_t v15 = 0x52414C55474552;
      int v16 = *((unsigned __int8 *)a1 + 32);
      if (!*((unsigned char *)a1 + 32)) {
        goto LABEL_24;
      }
    }
    if (v16 == 1)
    {
      unint64_t v17 = 0x80000001000A6190;
      if (v15 == 0xD000000000000013) {
        goto LABEL_27;
      }
    }
    else
    {
      unint64_t v17 = 0xE90000000000004DLL;
      if (v15 == 0x444D5F44554F4C43)
      {
LABEL_27:
        if (v14 == v17)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_29:
          uint64_t v18 = 1;
          goto LABEL_32;
        }
      }
    }
LABEL_3:
    char v8 = sub_10009E260();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_29;
    }
LABEL_4:
    v7 += 40;
    --v2;
  }
  while (v2);
  uint64_t v18 = 0;
LABEL_32:
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_10003314C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000331CC()
{
  return sub_10009CF40();
}

double sub_100033250@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

uint64_t sub_1000332E8(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10000FDF0(v3, v2);
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_1000333E4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100033420(a1);
}

uint64_t sub_1000333F8()
{
  return sub_1000334B0();
}

uint64_t sub_10003340C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100033420(a1);
}

uint64_t sub_100033420@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003349C()
{
  return sub_1000334B0();
}

uint64_t sub_1000334B0()
{
  return sub_10009CF40();
}

double sub_100033520@<D0>(uint64_t a1@<X8>)
{
  return sub_100033570(a1);
}

uint64_t sub_100033534(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003361C(a1, a2, a3, a4, (uint64_t)&unk_1000A1778, (uint64_t)&unk_1000A17A0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100016874);
}

double sub_10003355C@<D0>(uint64_t a1@<X8>)
{
  return sub_100033570(a1);
}

double sub_100033570@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1000335F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003361C(a1, a2, a3, a4, (uint64_t)&unk_1000A17C0, (uint64_t)&unk_1000A17E8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100035168);
}

uint64_t sub_10003361C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v12 = *((unsigned __int8 *)a1 + 32);
  swift_getKeyPath();
  swift_getKeyPath();
  a7(v8, v9, v10, v11, v12);
  swift_retain();
  return sub_10009CF40();
}

double sub_1000336D4@<D0>(_OWORD *a1@<X8>)
{
  return sub_1000336E8(a1);
}

double sub_1000336E8@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100033764()
{
  return sub_100033778();
}

uint64_t sub_100033778()
{
  return sub_10009CF40();
}

uint64_t sub_1000337F8@<X0>(unsigned char *a1@<X8>)
{
  return sub_100033420(a1);
}

uint64_t sub_10003380C()
{
  return sub_1000334B0();
}

uint64_t sub_100033820@<X0>(unsigned char *a1@<X8>)
{
  return sub_100033420(a1);
}

uint64_t sub_100033834()
{
  return sub_1000334B0();
}

uint64_t sub_100033848(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 32;
  unint64_t v17 = v1 - 1;
  long long v4 = _swiftEmptyArrayStorage;
  unint64_t v22 = *(void *)(result + 16);
  uint64_t v18 = result + 32;
  do
  {
    long long v19 = v4;
    if (v2 <= v1) {
      unint64_t v5 = v1;
    }
    else {
      unint64_t v5 = v2;
    }
    unint64_t v23 = v5;
    for (uint64_t i = v3 + 40 * v2; ; i += 40)
    {
      if (v23 == v2)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = *(void *)(i + 8);
      uint64_t v21 = *(void *)i;
      uint64_t v8 = *(void *)(i + 16);
      uint64_t v9 = *(void *)(i + 24);
      unint64_t v10 = v2 + 1;
      char v20 = *(unsigned char *)(i + 32);
      sub_10009DD00();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10009CF30();
      swift_release();
      swift_release();
      sub_10009DD00();
      swift_bridgeObjectRelease();
      sub_10001E4B8();
      char v11 = sub_10009DFF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11) {
        break;
      }
      swift_bridgeObjectRelease();
      double result = swift_bridgeObjectRelease();
      ++v2;
      if (v22 == v10) {
        return (uint64_t)v19;
      }
    }
    unint64_t v24 = v2;
    long long v4 = v19;
    double result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      double result = sub_10000E2B4(0, v19[2] + 1, 1);
      long long v4 = v19;
    }
    char v12 = v20;
    unint64_t v14 = v4[2];
    unint64_t v13 = v4[3];
    unint64_t v15 = v14 + 1;
    if (v14 >= v13 >> 1)
    {
      double result = sub_10000E2B4(v13 > 1, v14 + 1, 1);
      unint64_t v15 = v14 + 1;
      char v12 = v20;
      long long v4 = v19;
    }
    v4[2] = v15;
    int v16 = &v4[5 * v14];
    v16[4] = v21;
    v16[5] = v7;
    v16[6] = v8;
    v16[7] = v9;
    *((unsigned char *)v16 + 64) = v12;
    unint64_t v1 = v22;
    uint64_t v3 = v18;
    ++v2;
  }
  while (v17 != v24);
  return (uint64_t)v4;
}

void *sub_100033AB0(void *a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t, uint64_t, uint64_t), uint64_t a7, void *a8)
{
  uint64_t v9 = v8;
  uint64_t v101 = a8;
  uint64_t v91 = a7;
  Swift::String v90 = a6;
  uint64_t v100 = (void *)a5;
  uint64_t v102 = a4;
  Swift::String v89 = a3;
  unint64_t v88 = a2;
  uint64_t v103 = a1;
  uint64_t v97 = sub_10000D308(&qword_1000D6FE0);
  uint64_t v98 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  long long v96 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000D308(&qword_1000D9E80);
  __chkstk_darwin(v11 - 8);
  uint64_t v92 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10000D308(&qword_1000D6FE8);
  uint64_t v95 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v93 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10000D308(&qword_1000D6FF0);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10000D308(&qword_1000DB540);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10000D308(&qword_1000D6FF8);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10000D308(&qword_1000D7000);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v76 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10000D308(&qword_1000D9DE0);
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10000D308(&qword_1000D7008);
  uint64_t v19 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000D308(&qword_1000D7010);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10000D308(&qword_1000D5828);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v9[2] = _swiftEmptyArrayStorage;
  long long v99 = v9 + 2;
  uint64_t v30 = (char *)v9 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__account;
  long long v110 = 0u;
  long long v111 = 0u;
  long long v108 = 0u;
  long long v109 = 0u;
  long long v106 = 0u;
  long long v107 = 0u;
  long long v105 = 0u;
  sub_10000D308((uint64_t *)&unk_1000D5608);
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v30, v29, v26);
  uint64_t v31 = (char *)v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__wifiNetworkStatus;
  LOBYTE(v105) = 0;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v31, v25, v22);
  uint64_t v32 = (char *)v9 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__networkType;
  LOBYTE(v105) = 0;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v32, v21, v72);
  uint64_t v33 = (char *)v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__currentMDMServerInfo;
  long long v105 = xmmword_1000A13B0;
  long long v106 = 0uLL;
  LOBYTE(v107) = 0;
  sub_10000D308(&qword_1000D9E10);
  uint64_t v34 = v73;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v33, v34, v75);
  uint64_t v35 = (char *)v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__mdmServerSelected;
  LOBYTE(v107) = 0;
  long long v105 = 0u;
  long long v106 = 0u;
  sub_10000D308(&qword_1000D6C58);
  uint64_t v36 = v76;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v35, v36, v78);
  uint64_t v37 = (char *)v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__currentNetworkName;
  long long v105 = 0uLL;
  sub_10000D308((uint64_t *)&unk_1000D9FA0);
  uint64_t v38 = v79;
  sub_10009CF00();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
  uint64_t v40 = v81;
  v39(v37, v38, v81);
  uint64_t v41 = (char *)v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__networkProfileName;
  long long v105 = 0uLL;
  sub_10009CF00();
  v39(v41, v38, v40);
  uint64_t v42 = (char *)v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__isSignOutInProgress;
  LOBYTE(v105) = 0;
  uint64_t v43 = v82;
  sub_10009CF00();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
  uint64_t v45 = v84;
  v44(v42, v43, v84);
  unsigned __int8 v46 = (char *)v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__isFetchingMDMServerInProgress;
  LOBYTE(v105) = 0;
  sub_10009CF00();
  v44(v46, v43, v45);
  int v47 = (char *)v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension17SettingsViewModel__serverSelectionSearchText;
  *(void *)&long long v105 = 0;
  *((void *)&v105 + 1) = 0xE000000000000000;
  char v48 = v85;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v47, v48, v87);
  sub_1000102FC((uint64_t)v103, (uint64_t)(v9 + 3));
  uint64_t v49 = v89;
  v9[8] = v88;
  v9[9] = v49;
  sub_1000102FC(v102, (uint64_t)(v9 + 10));
  char v50 = v100;
  sub_1000102FC((uint64_t)v100, (uint64_t)(v9 + 15));
  uint64_t v51 = v91;
  v9[20] = v90;
  v9[21] = v51;
  sub_1000102FC((uint64_t)v101, (uint64_t)(v9 + 22));
  uint64_t v52 = v50[3];
  uint64_t v53 = v50[4];
  sub_10000FF9C(v50, v52);
  uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  *(void *)&long long v105 = v54(v52, v53);
  sub_10001B664();
  id v104 = (id)sub_10009DF00();
  uint64_t v55 = sub_10009DEF0();
  uint64_t v56 = *(void *)(v55 - 8);
  Swift::String v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
  uint64_t v91 = v56 + 56;
  uint64_t v57 = (uint64_t)v92;
  v90(v92, 1, 1, v55);
  sub_10000D308(&qword_1000D7018);
  Swift::String v89 = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_100015700(&qword_1000D7020, &qword_1000D7018);
  unint64_t v88 = sub_100034944();
  uint64_t v58 = v93;
  sub_10009CF90();
  sub_100010864(v57, &qword_1000D9E80);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v9;
  sub_100015700(&qword_1000D7028, &qword_1000D6FE8);
  uint64_t v59 = v94;
  sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v59);
  swift_beginAccess();
  sub_10000D308((uint64_t *)&unk_1000D93E0);
  sub_100015700(&qword_1000D7030, (uint64_t *)&unk_1000D93E0);
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v61 = v103[3];
  uint64_t v60 = v103[4];
  sub_10000FF9C(v103, v61);
  *(void *)&long long v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 24))(v61, v60);
  id v104 = (id)sub_10009DF00();
  v90((char *)v57, 1, 1, v55);
  sub_10000D308(&qword_1000D7038);
  sub_100015700(&qword_1000D7040, &qword_1000D7038);
  uint64_t v62 = v96;
  sub_10009CF90();
  sub_100010864(v57, &qword_1000D9E80);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v9;
  sub_100015700(&qword_1000D7048, &qword_1000D6FE0);
  uint64_t v63 = v97;
  sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v62, v63);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v64 = v101;
  uint64_t v65 = v101[3];
  uint64_t v66 = v101[4];
  sub_10000FF9C(v101, v65);
  uint64_t v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 8))(v65, v66);
  uint64_t v69 = v68;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v105 = v67;
  *((void *)&v105 + 1) = v69;
  swift_retain();
  sub_10009CF40();
  sub_1000100E8(v102);
  sub_1000100E8((uint64_t)v64);
  sub_1000100E8((uint64_t)v100);
  sub_1000100E8((uint64_t)v103);
  return v9;
}

unint64_t sub_100034944()
{
  unint64_t result = qword_1000D9F00;
  if (!qword_1000D9F00)
  {
    sub_10001B664();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9F00);
  }
  return result;
}

uint64_t sub_10003499C()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000349D4(char *a1)
{
  return sub_10002C7E8(a1);
}

uint64_t sub_1000349DC(uint64_t *a1)
{
  return sub_10002C990(a1);
}

double sub_1000349E4@<D0>(_OWORD *a1@<X8>)
{
  return sub_1000336E8(a1);
}

uint64_t sub_100034A0C()
{
  return sub_100033778();
}

uint64_t sub_100034A3C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100033420(a1);
}

uint64_t sub_100034A64()
{
  return sub_1000334B0();
}

uint64_t sub_100034A94@<X0>(unsigned char *a1@<X8>)
{
  return sub_100033420(a1);
}

uint64_t sub_100034ABC()
{
  return sub_1000334B0();
}

uint64_t sub_100034AE8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100010914;
  return sub_10002FB18(a1, v4, v5, v6);
}

uint64_t sub_100034B9C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_10000CD64;
  return _swift_task_switch(sub_100030B00, 0, 0);
}

uint64_t sub_100034C48(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_100034C58(a1, a2);
  }
  return a1;
}

uint64_t sub_100034C58(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100034C6C(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_100034C7C(a1, a2);
  }
  return a1;
}

uint64_t sub_100034C7C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100034C94()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100010914;
  return sub_10002F7B4();
}

uint64_t sub_100034D48@<X0>(unsigned char *a1@<X8>)
{
  return sub_100033420(a1);
}

uint64_t sub_100034D70()
{
  return sub_1000334B0();
}

double sub_100034D98@<D0>(_OWORD *a1@<X8>)
{
  return sub_1000336E8(a1);
}

uint64_t sub_100034DC0()
{
  return sub_100033778();
}

uint64_t sub_100034DEC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100034E2C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000CD64;
  return sub_10002E440();
}

uint64_t sub_100034EE0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100034F28()
{
  swift_unknownObjectRelease();
  swift_release();
  if (*(void *)(v0 + 48) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_100034F80(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100034FDC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100010914;
  return sub_10002D9F4(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

double sub_1000350A0@<D0>(uint64_t a1@<X8>)
{
  return sub_100033570(a1);
}

uint64_t sub_1000350C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003361C(a1, a2, a3, a4, (uint64_t)&unk_1000A1778, (uint64_t)&unk_1000A17A0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100016874);
}

double sub_100035104@<D0>(uint64_t a1@<X8>)
{
  return sub_100033570(a1);
}

uint64_t sub_10003512C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003361C(a1, a2, a3, a4, (uint64_t)&unk_1000A17C0, (uint64_t)&unk_1000A17E8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100035168);
}

uint64_t sub_100035168(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000351AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000351D8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10003521C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100035248@<X0>(unsigned char *a1@<X8>)
{
  return sub_100033420(a1);
}

uint64_t sub_100035270()
{
  return sub_1000334B0();
}

uint64_t sub_100035298()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_100035310(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100010914;
  return sub_100031F78(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_1000353D4(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_100034EE0(a1, a2);
  }
  return a1;
}

uint64_t sub_1000353E4(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WiFiNetworkMonitorStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100035500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WiFiNetworkMonitorStatus()
{
  return &type metadata for WiFiNetworkMonitorStatus;
}

unint64_t sub_10003553C()
{
  unint64_t result = qword_1000D70D0;
  if (!qword_1000D70D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D70D0);
  }
  return result;
}

unint64_t sub_100035590(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D308(&qword_1000D7190);
  uint64_t v2 = (void *)sub_10009E100();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100035E30(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000356B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D308(&qword_1000D7198);
  uint64_t v2 = sub_10009E100();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100010720(v6, (uint64_t)&v13, &qword_1000D71A0);
    uint64_t v7 = v13;
    unint64_t result = sub_100035EA8(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_100010784(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000357E4(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D71B8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000D308((uint64_t *)&unk_1000D92D0);
  uint64_t v6 = sub_10009E100();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100010720(v12, (uint64_t)v5, &qword_1000D71B8);
    unint64_t result = sub_100036038((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_10009CCA0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000359D8()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for SystemKeychainBackedKeyValuePasswordStorage()
{
  return self;
}

uint64_t sub_100035A2C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_10000D308(&qword_1000D7188);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A06A0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassGenericPassword;
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = kSecReturnData;
  if (!kCFBooleanTrue) {
    __break(1u);
  }
  type metadata accessor for CFBoolean(0);
  *(void *)(inited + 80) = kCFBooleanTrue;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 112) = kSecAttrService;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 120) = a2;
  *(void *)(inited + 128) = a3;
  CFStringRef v10 = (id)kSecClass;
  CFStringRef v11 = (id)kSecClassGenericPassword;
  CFStringRef v12 = (id)kSecReturnData;
  CFStringRef v13 = (id)kSecAttrService;
  swift_bridgeObjectRetain();
  CFBooleanRef v14 = kCFBooleanTrue;
  sub_1000356B4(inited);
  CFTypeRef result = 0;
  sub_100036A04(&qword_1000D54D0, 255, type metadata accessor for CFString);
  CFDictionaryRef isa = sub_10009DBB0().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v16 = SecItemCopyMatching(isa, &result);

  CFTypeRef v17 = result;
  if (sub_100012894(v16))
  {
    swift_willThrow();
  }
  else if (v17 && (swift_unknownObjectRetain(), (swift_dynamicCast() & 1) != 0))
  {
    if (a1 == &type metadata for Data)
    {
      int v19 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a5, v19 ^ 1u, 1, a4);
    }
    else
    {
      sub_10009C970();
      swift_allocObject();
      sub_10009C960();
      sub_10009C950();
      if (v23)
      {
        swift_release();
        sub_10000EE7C(v24, v25);
      }
      else
      {
        sub_10000EE7C(v24, v25);
        swift_release();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a5, 0, 1, a4);
      }
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a5, 1, 1, a4);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_100035D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100036860(a1, a2, a3);
}

uint64_t sub_100035DA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_100035A2C(a1, a2, a3, a4, a5);
}

uint64_t sub_100035DC0(uint64_t a1, uint64_t a2)
{
  return sub_1000364F8(a1, a2);
}

uint64_t sub_100035DD8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100036A04(&qword_1000D7180, a2, (void (*)(uint64_t))type metadata accessor for SystemKeychainBackedKeyValuePasswordStorage);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100035E30(uint64_t a1, uint64_t a2)
{
  sub_10009E2D0();
  sub_10009DD20();
  Swift::Int v4 = sub_10009E300();

  return sub_100036110(a1, a2, v4);
}

unint64_t sub_100035EA8(uint64_t a1)
{
  sub_10009E2D0();
  type metadata accessor for CFString(0);
  sub_100036A04(&qword_1000D71A8, 255, type metadata accessor for CFString);
  sub_10009CDC0();
  Swift::Int v2 = sub_10009E300();

  return sub_1000361F4(a1, v2);
}

unint64_t sub_100035F60(uint64_t a1)
{
  sub_10009CC50();
  sub_100036A04(&qword_1000D71C0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v2 = sub_10009DBD0();
  return sub_100036354(a1, v2, (uint64_t (*)(void))&type metadata accessor for Date, &qword_1000D71C8, (void (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_100036038(uint64_t a1)
{
  sub_10009CCA0();
  sub_100036A04((unint64_t *)&qword_1000D71B0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_10009DBD0();
  return sub_100036354(a1, v2, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_1000D92C0, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_100036110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    CFStringRef v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_10009E260() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        CFStringRef v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_10009E260() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1000361F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_100036A04(&qword_1000D71A8, 255, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_10009CDB0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_10009CDB0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_100036354(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    CFTypeRef v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    char v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_100036A04(v23, 255, v24);
      char v19 = sub_10009DBF0();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_1000364F8(uint64_t a1, uint64_t a2)
{
  sub_10000D308(&qword_1000D7188);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A1900;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassGenericPassword;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = kSecAttrService;
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 80) = a1;
  *(void *)(inited + 88) = a2;
  CFStringRef v6 = (id)kSecClass;
  CFStringRef v7 = (id)kSecClassGenericPassword;
  CFStringRef v8 = (id)kSecAttrService;
  swift_bridgeObjectRetain();
  sub_1000356B4(inited);
  sub_100036A04(&qword_1000D54D0, 255, type metadata accessor for CFString);
  CFDictionaryRef isa = sub_10009DBB0().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v10 = SecItemDelete(isa);

  id v11 = sub_100012894(v10);
  uint64_t result = swift_errorRelease();
  if (v11)
  {
    uint64_t result = (uint64_t)sub_100012894(v10);
    if (result) {
      return swift_willThrow();
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100036674(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000D308(&qword_1000D7188);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10009F9B0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassGenericPassword;
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = kSecAttrAccessible;
  *(void *)(inited + 80) = kSecAttrAccessibleWhenUnlockedThisDeviceOnly;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = kSecAttrService;
  *(void *)(inited + 120) = a3;
  *(void *)(inited + 128) = a4;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 152) = kSecValueData;
  *(void *)(inited + 184) = &type metadata for Data;
  *(void *)(inited + 160) = a1;
  *(void *)(inited + 168) = a2;
  CFStringRef v9 = (id)kSecClass;
  CFStringRef v10 = (id)kSecClassGenericPassword;
  CFStringRef v11 = (id)kSecAttrAccessible;
  CFStringRef v12 = (id)kSecAttrAccessibleWhenUnlockedThisDeviceOnly;
  CFStringRef v13 = (id)kSecAttrService;
  swift_bridgeObjectRetain();
  CFStringRef v14 = (id)kSecValueData;
  sub_10000EE24(a1, a2);
  sub_1000356B4(inited);
  sub_100036A04(&qword_1000D54D0, 255, type metadata accessor for CFString);
  CFDictionaryRef isa = sub_10009DBB0().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v16 = SecItemAdd(isa, 0);

  id v17 = sub_100012894(v16);
  uint64_t result = swift_errorRelease();
  if (v17)
  {
    uint64_t result = (uint64_t)sub_100012894(v16);
    if (result) {
      return swift_willThrow();
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100036860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  if (swift_dynamicCast())
  {
    uint64_t v10 = v18;
    unint64_t v11 = v19;
    sub_100036674(v18, v19, a2, a3);
    uint64_t v12 = v10;
    unint64_t v13 = v11;
  }
  else
  {
    sub_10009C9A0();
    swift_allocObject();
    sub_10009C990();
    uint64_t v14 = sub_10009C980();
    unint64_t v16 = v15;
    uint64_t result = swift_release();
    if (v3) {
      return result;
    }
    sub_100036674(v14, v16, a2, a3);
    uint64_t v12 = v14;
    unint64_t v13 = v16;
  }
  return sub_10000EE7C(v12, v13);
}

uint64_t sub_100036A04(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceStatusPendingSectionView()
{
  return &type metadata for DeviceStatusPendingSectionView;
}

uint64_t sub_100036A5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100036A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v36 = a1;
  uint64_t v43 = sub_10000D308(&qword_1000D6620);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10000D308(&qword_1000D71D8) - 8;
  uint64_t v6 = __chkstk_darwin(v40);
  uint64_t v42 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v36 - v9;
  __chkstk_darwin(v8);
  uint64_t v38 = (uint64_t)&v36 - v11;
  uint64_t v12 = sub_10009CCC0();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_10009DC60();
  __chkstk_darwin(v13 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v44 = sub_10009DCE0();
  uint64_t v45 = v14;
  sub_10001E4B8();
  uint64_t v15 = sub_10009D750();
  uint64_t v17 = v16;
  uint64_t v37 = v18;
  char v20 = v19 & 1;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v44 = sub_10009DCE0();
  uint64_t v45 = v21;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v39;
  *(void *)(v22 + 16) = v36;
  *(void *)(v22 + 24) = v23;
  swift_retain();
  uint64_t v24 = v5;
  sub_10009D9A0();
  uint64_t v25 = sub_10009D8D0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = v41;
  uint64_t v28 = v24;
  uint64_t v29 = v24;
  uint64_t v30 = v43;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v10, v28, v43);
  uint64_t v31 = (uint64_t *)&v10[*(int *)(v40 + 44)];
  *uint64_t v31 = KeyPath;
  v31[1] = v25;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v30);
  uint64_t v32 = v38;
  sub_100036F90((uint64_t)v10, v38);
  uint64_t v33 = v42;
  sub_100036FF8(v32, v42);
  *(void *)a3 = v15;
  *(void *)(a3 + 8) = v17;
  *(unsigned char *)(a3 + 16) = v20;
  *(void *)(a3 + 24) = v37;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  uint64_t v34 = sub_10000D308(&qword_1000D71E0);
  sub_100036FF8(v33, a3 + *(int *)(v34 + 64));
  sub_10001F79C(v15, v17, v20);
  swift_bridgeObjectRetain();
  sub_100037060(v32);
  sub_100037060(v33);
  sub_10001F7AC(v15, v17, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100036E84(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    sub_10001AEC4();
    return swift_release();
  }
  else
  {
    type metadata accessor for DeviceStatusViewModel();
    sub_1000370C0();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_100036EEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  *(void *)a1 = sub_10009D3D0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v5 = sub_10000D308(&qword_1000D71D0);
  return sub_100036A78(v4, v3, a1 + *(int *)(v5 + 44));
}

uint64_t sub_100036F48()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100036F80()
{
  return sub_100036E84(*(void *)(v0 + 16));
}

uint64_t sub_100036F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D71D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100036FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D71D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037060(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D71D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000370C0()
{
  unint64_t result = qword_1000D64F0;
  if (!qword_1000D64F0)
  {
    type metadata accessor for DeviceStatusViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D64F0);
  }
  return result;
}

unint64_t sub_10003711C()
{
  unint64_t result = qword_1000D71E8;
  if (!qword_1000D71E8)
  {
    sub_10000AF84(&qword_1000D71F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D71E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatusWiFiSectionView()
{
  return &type metadata for NetworkStatusWiFiSectionView;
}

uint64_t sub_100037188()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000371A4(uint64_t a1)
{
  if (a1)
  {
    swift_retain();
    sub_100030F3C();
    swift_release();
    sub_10001E4B8();
    uint64_t v2 = sub_10009D750();
    __chkstk_darwin(v2);
    sub_10000D308(&qword_1000D71F8);
    sub_10003794C();
    return sub_10009DA20();
  }
  else
  {
    type metadata accessor for SettingsViewModel();
    sub_1000180CC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000372E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_10009D3D0();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_10000D308(&qword_1000D7208);
  return sub_100037340(a1, (uint64_t *)(a2 + *(int *)(v4 + 44)));
}

uint64_t sub_100037340@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v53 = sub_10000D308(&qword_1000D7210);
  __chkstk_darwin(v53);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10009D710();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10000D308(&qword_1000D7218);
  uint64_t v10 = __chkstk_darwin(v51);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v48 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v48 - v15;
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    if (v61 == 2)
    {
      if (qword_1000D5248 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
    }
    swift_release();
    uint64_t v52 = sub_10009D940();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    uint64_t v60 = a2;
    uint64_t v57 = (uint64_t *)v5;
    uint64_t v58 = v16;
    uint64_t v55 = v7;
    uint64_t v56 = v6;
    if (v61 == 2) {
      uint64_t v17 = sub_10009D8B0();
    }
    else {
      uint64_t v17 = sub_10009D910();
    }
    uint64_t v50 = v17;
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    unint64_t v18 = sub_100030D84();
    uint64_t v20 = v19;
    swift_release();
    unint64_t v61 = v18;
    uint64_t v62 = v20;
    sub_10001E4B8();
    uint64_t v21 = sub_10009D750();
    uint64_t v23 = v22;
    char v25 = v24;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    uint64_t v59 = v12;
    if (v61 == 2) {
      sub_10009D920();
    }
    else {
      sub_10009D930();
    }
    swift_release();
    char v26 = v25 & 1;
    uint64_t v27 = sub_10009D720();
    uint64_t v29 = v28;
    char v31 = v30;
    uint64_t v33 = v32;
    swift_release();
    char v34 = v31 & 1;
    sub_10001F7AC(v21, v23, v26);
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_getKeyPath();
    uint64_t v37 = v55;
    uint64_t v36 = v56;
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v9, enum case for Text.TruncationMode.tail(_:), v56);
    uint64_t v38 = swift_getKeyPath();
    uint64_t v39 = v57;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))((char *)v57 + *(int *)(v53 + 28), v9, v36);
    *uint64_t v39 = v38;
    uint64_t v40 = (uint64_t)v54;
    sub_100010720((uint64_t)v39, (uint64_t)&v54[*(int *)(v51 + 36)], &qword_1000D7210);
    *(void *)uint64_t v40 = v27;
    *(void *)(v40 + 8) = v29;
    *(unsigned char *)(v40 + 16) = v34;
    *(void *)(v40 + 24) = v33;
    *(void *)(v40 + 32) = v35;
    *(void *)(v40 + 40) = 1;
    *(unsigned char *)(v40 + 48) = 0;
    sub_10001F79C(v27, v29, v34);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100010864((uint64_t)v39, &qword_1000D7210);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v36);
    sub_10001F7AC(v27, v29, v34);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v41 = (uint64_t)v58;
    sub_1000379C8(v40, (uint64_t)v58);
    uint64_t v42 = (uint64_t)v59;
    sub_100010720(v41, (uint64_t)v59, &qword_1000D7218);
    uint64_t v43 = v60;
    uint64_t v45 = KeyPath;
    uint64_t v44 = v50;
    uint64_t *v60 = v52;
    v43[1] = v45;
    v43[2] = v44;
    uint64_t v46 = sub_10000D308(&qword_1000D7220);
    sub_100010720(v42, (uint64_t)v43 + *(int *)(v46 + 48), &qword_1000D7218);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100010864(v41, &qword_1000D7218);
    sub_100010864(v42, &qword_1000D7218);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for SettingsViewModel();
    sub_1000180CC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10003793C()
{
  return sub_1000371A4(*v0);
}

uint64_t sub_100037944@<X0>(uint64_t a1@<X8>)
{
  return sub_1000372E0(*(void *)(v1 + 16), a1);
}

unint64_t sub_10003794C()
{
  unint64_t result = qword_1000D7200;
  if (!qword_1000D7200)
  {
    sub_10000AF84(&qword_1000D71F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7200);
  }
  return result;
}

uint64_t sub_1000379C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D7218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100037A34()
{
  unint64_t result = qword_1000D7228;
  if (!qword_1000D7228)
  {
    sub_10000AF84(&qword_1000D7230);
    sub_10003794C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7228);
  }
  return result;
}

uint64_t type metadata accessor for FakeNetworkProfilePickerViewModelProviderFactory()
{
  return self;
}

uint64_t sub_100037AE0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension20FakeBluetoothMonitor__bluetoothStatus;
  uint64_t v2 = sub_10000D308(&qword_1000D73D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100037B84()
{
  return type metadata accessor for FakeBluetoothMonitor();
}

uint64_t type metadata accessor for FakeBluetoothMonitor()
{
  uint64_t result = qword_1000D7308;
  if (!qword_1000D7308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100037BD8()
{
  sub_100037C68();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100037C68()
{
  if (!qword_1000D7318)
  {
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D7318);
    }
  }
}

uint64_t sub_100037CC0()
{
  uint64_t v0 = sub_10000D308((uint64_t *)&unk_1000DA7C0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D73D0);
  sub_10009CF10();
  swift_endAccess();
  sub_100037DDC();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

unint64_t sub_100037DDC()
{
  unint64_t result = qword_1000DA7D0;
  if (!qword_1000DA7D0)
  {
    sub_10000AF84((uint64_t *)&unk_1000DA7C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA7D0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ToastView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ToastView()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ToastView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ToastView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToastView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToastView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToastView()
{
  return &type metadata for ToastView;
}

uint64_t sub_100037F7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100037F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v78 = a3;
  uint64_t v73 = sub_10000D308(&qword_1000D73D8);
  __chkstk_darwin(v73);
  uint64_t v77 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10009D9E0();
  __chkstk_darwin(v6 - 8);
  uint64_t v74 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10000D308(&qword_1000D73E0);
  __chkstk_darwin(v72);
  uint64_t v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10000D308(&qword_1000D73E8);
  __chkstk_darwin(v75);
  uint64_t v76 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v83 = a1;
  *((void *)&v83 + 1) = a2;
  sub_10001E4B8();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_10009D750();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_10009D6C0();
  uint64_t v16 = sub_10009D740();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_release();
  sub_10001F7AC(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_10009D6A0();
  uint64_t v70 = sub_10009D700();
  uint64_t v69 = v21;
  char v23 = v22;
  uint64_t v71 = v24;
  sub_10001F7AC(v16, v18, v20 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = sub_10009D900();
  uint64_t v26 = swift_getKeyPath();
  unsigned __int8 v27 = sub_10009D610();
  unsigned __int8 v28 = sub_10009D620();
  char v29 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v27) {
    char v29 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v28) {
    char v29 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  unsigned __int8 v38 = sub_10009D630();
  unsigned __int8 v39 = sub_10009D650();
  char v40 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v38) {
    char v40 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v39) {
    char v40 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  char v82 = v23 & 1;
  char v81 = 0;
  char v80 = 0;
  char v79 = 0;
  uint64_t v49 = self;
  id v50 = [v49 systemGray6Color];
  uint64_t v51 = sub_10009D8A0();
  char v52 = sub_10009D600();
  *(void *)&long long v83 = v70;
  *((void *)&v83 + 1) = v69;
  LOBYTE(v84) = v82;
  *((void *)&v84 + 1) = v71;
  *(void *)&long long v85 = KeyPath;
  *((void *)&v85 + 1) = 1;
  LOBYTE(v86) = v81;
  *((void *)&v86 + 1) = v26;
  *(void *)&long long v87 = v25;
  BYTE8(v87) = v29;
  *(void *)&long long v88 = v31;
  *((void *)&v88 + 1) = v33;
  *(void *)&long long v89 = v35;
  *((void *)&v89 + 1) = v37;
  LOBYTE(v90) = v80;
  BYTE8(v90) = v40;
  *(void *)&long long v91 = v42;
  *((void *)&v91 + 1) = v44;
  *(void *)&long long v92 = v46;
  *((void *)&v92 + 1) = v48;
  LOBYTE(v93) = v79;
  *((void *)&v93 + 1) = v51;
  char v94 = v52;
  uint64_t v53 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v54 = sub_10009D3F0();
  uint64_t v55 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v74, v53, v54);
  uint64_t v56 = v77;
  sub_100038638(v55, v77);
  *(_WORD *)(v56 + *(int *)(v73 + 36)) = 256;
  sub_100010720(v56, (uint64_t)&v9[*(int *)(v72 + 36)], &qword_1000D73D8);
  long long v57 = v92;
  *((_OWORD *)v9 + 8) = v91;
  *((_OWORD *)v9 + 9) = v57;
  *((_OWORD *)v9 + 10) = v93;
  v9[176] = v94;
  long long v58 = v88;
  *((_OWORD *)v9 + 4) = v87;
  *((_OWORD *)v9 + 5) = v58;
  long long v59 = v90;
  *((_OWORD *)v9 + 6) = v89;
  *((_OWORD *)v9 + 7) = v59;
  long long v60 = v84;
  *(_OWORD *)uint64_t v9 = v83;
  *((_OWORD *)v9 + 1) = v60;
  long long v61 = v86;
  *((_OWORD *)v9 + 2) = v85;
  *((_OWORD *)v9 + 3) = v61;
  sub_10003869C((uint64_t)&v83);
  sub_100010864(v56, &qword_1000D73D8);
  sub_100038714(v55);
  sub_100038770((uint64_t)&v83);
  id v62 = [v49 systemGray6Color];
  uint64_t v63 = sub_10009D8A0();
  uint64_t v64 = v76;
  sub_100010720((uint64_t)v9, v76, &qword_1000D73E0);
  uint64_t v65 = (uint64_t *)(v64 + *(int *)(v75 + 36));
  *uint64_t v65 = v63;
  v65[1] = 0x402E000000000000;
  v65[2] = 0;
  v65[3] = 0;
  sub_100010864((uint64_t)v9, &qword_1000D73E0);
  return sub_1000387E8(v64, v78);
}

uint64_t sub_100038620@<X0>(uint64_t a1@<X8>)
{
  return sub_100037F98(*v1, v1[1], a1);
}

uint64_t sub_100038638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009D9E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003869C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100038714(uint64_t a1)
{
  uint64_t v2 = sub_10009D9E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100038770(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000387E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D73E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100038850()
{
  return sub_100038A00(&qword_1000D73F0, &qword_1000D73E8, (void (*)(void))sub_100038894);
}

unint64_t sub_100038894()
{
  unint64_t result = qword_1000D73F8;
  if (!qword_1000D73F8)
  {
    sub_10000AF84(&qword_1000D73E0);
    sub_100038934();
    sub_100015700(&qword_1000D7460, &qword_1000D73D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D73F8);
  }
  return result;
}

unint64_t sub_100038934()
{
  unint64_t result = qword_1000D7400;
  if (!qword_1000D7400)
  {
    sub_10000AF84(&qword_1000D7408);
    sub_100038A00(&qword_1000D7410, &qword_1000D7418, (void (*)(void))sub_100038A7C);
    sub_100015700(&qword_1000D6668, &qword_1000D6670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7400);
  }
  return result;
}

uint64_t sub_100038A00(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100038A7C()
{
  return sub_100038A00(&qword_1000D7420, &qword_1000D7428, (void (*)(void))sub_100038AAC);
}

unint64_t sub_100038AAC()
{
  unint64_t result = qword_1000D7430;
  if (!qword_1000D7430)
  {
    sub_10000AF84(&qword_1000D7438);
    sub_100038B4C();
    sub_100015700(&qword_1000D6640, &qword_1000D6648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7430);
  }
  return result;
}

unint64_t sub_100038B4C()
{
  unint64_t result = qword_1000D7440;
  if (!qword_1000D7440)
  {
    sub_10000AF84(&qword_1000D7448);
    sub_100015700(&qword_1000D7450, &qword_1000D7458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7440);
  }
  return result;
}

uint64_t sub_100038BF0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

void *sub_100038C64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = a2;
  uint64_t v5 = sub_10000D308(&qword_1000D75A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000D308(&qword_1000DB540);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[4] = _swiftEmptyArrayStorage;
  uint64_t v13 = (char *)v3
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesExtensionContainerViewModel__isHostAppInfoLoaded;
  LOBYTE(v19) = 0;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  char v14 = (char *)v3
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesExtensionContainerViewModel_hostAppInfo;
  *char v14 = 0;
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = 0;
  uint64_t v15 = v18;
  v3[2] = a1;
  v3[3] = v15;
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_10000D308(&qword_1000D6178);
  sub_10009CF10();
  swift_endAccess();
  sub_100015700(&qword_1000D75A8, &qword_1000D75A0);
  uint64_t v16 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = v16;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v3;
  sub_10000D308(&qword_1000D75B0);
  sub_100015700(&qword_1000D75B8, &qword_1000D75B0);
  sub_10009CFA0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_10000D308((uint64_t *)&unk_1000D93E0);
  sub_100015700(&qword_1000D7030, (uint64_t *)&unk_1000D93E0);
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_100038FD0(char *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 2);
  if (v3 == 1)
  {
    swift_unownedRetainStrong();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_10009CF40();
  }
  else
  {
    uint64_t v5 = *((void *)a1 + 1);
    char v6 = *a1;
    swift_unownedRetainStrong();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009CF40();
    swift_unownedRetainStrong();
    uint64_t v7 = a2
       + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesExtensionContainerViewModel_hostAppInfo;
    *(unsigned char *)uint64_t v7 = v6 & 1;
    *(void *)(v7 + 8) = v5;
    *(void *)(v7 + 16) = v3;
    swift_bridgeObjectRetain();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000390D8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesExtensionContainerViewModel__isHostAppInfoLoaded;
  uint64_t v2 = sub_10000D308(&qword_1000DB540);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000391A0()
{
  return type metadata accessor for AddDevicesExtensionContainerViewModel();
}

uint64_t type metadata accessor for AddDevicesExtensionContainerViewModel()
{
  uint64_t result = qword_1000D7498;
  if (!qword_1000D7498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000391F4()
{
  sub_1000392A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000392A4()
{
  if (!qword_1000D6C68)
  {
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D6C68);
    }
  }
}

uint64_t sub_1000392FC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AddDevicesExtensionContainerViewModel();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

uint64_t sub_10003933C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000393C0()
{
  return sub_10009CF40();
}

uint64_t sub_100039438()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100039470(char *a1)
{
  return sub_100038FD0(a1, *(void *)(v1 + 16));
}

uint64_t sub_100039478()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000394EC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension18FakeNetworkMonitor__networkStatus;
  uint64_t v2 = sub_10000D308(&qword_1000D76D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100039590()
{
  return type metadata accessor for FakeNetworkMonitor();
}

uint64_t type metadata accessor for FakeNetworkMonitor()
{
  uint64_t result = qword_1000D75F0;
  if (!qword_1000D75F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000395E4()
{
  sub_100039674();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100039674()
{
  if (!qword_1000D7600)
  {
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D7600);
    }
  }
}

uint64_t sub_1000396CC()
{
  uint64_t v0 = sub_10000D308(&qword_1000D76C8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D76D0);
  sub_10009CF10();
  swift_endAccess();
  sub_100039A84();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1000397EC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003986C()
{
  return sub_10009CF40();
}

void sub_1000398E0()
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10009CE60();
  sub_10000D690(v0, (uint64_t)qword_1000E3488);
  oslog = sub_10009CE40();
  os_log_type_t v1 = sub_10009DEA0();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315138;
    sub_10000DBA8(0xD00000000000001CLL, 0x80000001000A8040, &v4);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "%s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

unint64_t sub_100039A84()
{
  unint64_t result = qword_1000D76D8;
  if (!qword_1000D76D8)
  {
    sub_10000AF84(&qword_1000D76C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D76D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMNonceRequestInfo()
{
  return &type metadata for AXMNonceRequestInfo;
}

uint64_t sub_100039AF8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D76E0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_100039E1C();
  sub_10009E320();
  v9[1] = a2;
  sub_10000D308(&qword_1000D76F0);
  sub_10003A084(&qword_1000D76F8, (void (*)(void))sub_100039E70);
  sub_10009E220();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100039C84@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  char v3 = (void *)a1[1];
  v4._rawValue = &off_1000CADF0;
  v7._object = v3;
  Swift::Int v5 = sub_10009E140(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_100039CD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100039EC4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100039D04@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_1000CAE28;
  v8._object = a2;
  Swift::Int v6 = sub_10009E140(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_100039D5C(uint64_t a1)
{
  unint64_t v2 = sub_100039E1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100039D98(uint64_t a1)
{
  unint64_t v2 = sub_100039E1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100039DD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100039EDC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100039E00(void *a1)
{
  return sub_100039AF8(a1, *v1);
}

unint64_t sub_100039E1C()
{
  unint64_t result = qword_1000D76E8;
  if (!qword_1000D76E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D76E8);
  }
  return result;
}

unint64_t sub_100039E70()
{
  unint64_t result = qword_1000D7700;
  if (!qword_1000D7700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7700);
  }
  return result;
}

uint64_t sub_100039EC4()
{
  return 0x73656369766564;
}

void *sub_100039EDC(void *a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D7708);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v7 = sub_10000FF9C(a1, a1[3]);
  sub_100039E1C();
  sub_10009E310();
  if (v1)
  {
    sub_1000100E8((uint64_t)a1);
  }
  else
  {
    sub_10000D308(&qword_1000D76F0);
    sub_10003A084(&qword_1000D7710, (void (*)(void))sub_10003A0F4);
    sub_10009E1B0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    Swift::String v7 = (void *)v9[1];
    sub_1000100E8((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_10003A084(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(&qword_1000D76F0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003A0F4()
{
  unint64_t result = qword_1000D7718;
  if (!qword_1000D7718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7718);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AXMNonceRequestInfo.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10003A1E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMNonceRequestInfo.CodingKeys()
{
  return &type metadata for AXMNonceRequestInfo.CodingKeys;
}

unint64_t sub_10003A220()
{
  unint64_t result = qword_1000D7720;
  if (!qword_1000D7720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7720);
  }
  return result;
}

unint64_t sub_10003A278()
{
  unint64_t result = qword_1000D7728;
  if (!qword_1000D7728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7728);
  }
  return result;
}

unint64_t sub_10003A2D0()
{
  unint64_t result = qword_1000D7730;
  if (!qword_1000D7730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7730);
  }
  return result;
}

void *sub_10003A324(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10009CCA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    Swift::String v8 = (int *)type metadata accessor for Device();
    uint64_t v9 = v8[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = v8[6];
    char v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *char v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v8[7];
    uint64_t v18 = (void *)((char *)a1 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = v8[8];
    char v22 = (void *)((char *)a1 + v21);
    char v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *char v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = *(int *)(a3 + 20);
    uint64_t v30 = (char *)a2 + v25;
    uint64_t v31 = (char *)a1 + v25;
    uint64_t v26 = sub_10009CC50();
    unsigned __int8 v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v31, v30, v26);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_10003A4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for Device();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_10009CC50();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_10003A5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Device();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v7[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v7[8];
  uint64_t v21 = (void *)(a1 + v20);
  char v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = *(int *)(a3 + 20);
  uint64_t v29 = a1 + v24;
  uint64_t v25 = a2 + v24;
  uint64_t v26 = sub_10009CC50();
  unsigned __int8 v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v29, v25, v26);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10003A73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Device();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10003A8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Device();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10003A9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Device();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10003AB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003AB24);
}

uint64_t sub_10003AB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Device();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_10009CC50();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 3) {
        return v14 - 2;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10003AC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003AC48);
}

uint64_t sub_10003AC48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Device();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10009CC50();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for EnrolledDeviceRecord()
{
  uint64_t result = qword_1000D7790;
  if (!qword_1000D7790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003ADA4()
{
  uint64_t result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10009CC50();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10003AE74(char a1)
{
  return *(void *)&aEnrolledfailed_2[8 * a1];
}

uint64_t sub_10003AE94(char a1)
{
  return *(void *)&aDevice_4[8 * a1];
}

uint64_t sub_10003AEB4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000D308(&qword_1000D77F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000FF9C(a1, a1[3]);
  sub_10003B790();
  sub_10009E320();
  v11[15] = 0;
  type metadata accessor for Device();
  sub_10003B900(&qword_1000D7800, (void (*)(uint64_t))type metadata accessor for Device);
  sub_10009E220();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for EnrolledDeviceRecord();
    v11[14] = 1;
    sub_10009CC50();
    sub_10003B900(&qword_1000D7808, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10009E220();
    v11[13] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_10003B948();
    sub_10009E220();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10003B0FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v26 = sub_10009CC50();
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Device();
  __chkstk_darwin(v6);
  uint64_t v27 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10000D308(&qword_1000D77D0);
  uint64_t v25 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EnrolledDeviceRecord();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v29 = a1;
  sub_10000FF9C(a1, v13);
  sub_10003B790();
  sub_10009E310();
  if (v2) {
    return sub_1000100E8((uint64_t)v29);
  }
  uint64_t v22 = v10;
  uint64_t v14 = (uint64_t)v12;
  uint64_t v16 = v25;
  uint64_t v15 = v26;
  char v33 = 0;
  sub_10003B900(&qword_1000D77E0, (void (*)(uint64_t))type metadata accessor for Device);
  sub_10009E1B0();
  uint64_t v17 = (uint64_t)v27;
  uint64_t v27 = (char *)v14;
  sub_10003B7E4(v17, v14);
  char v32 = 1;
  sub_10003B900(&qword_1000D77E8, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v18 = v5;
  sub_10009E1B0();
  uint64_t v19 = v22;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v27[*(int *)(v22 + 20)], v18, v15);
  char v30 = 2;
  sub_10003B848();
  sub_10009E1B0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v28);
  uint64_t v20 = (uint64_t)v27;
  v27[*(int *)(v19 + 24)] = v31;
  sub_10003B89C(v20, v23);
  sub_1000100E8((uint64_t)v29);
  return sub_10002564C(v20, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
}

uint64_t sub_10003B588(char *a1, char *a2)
{
  return sub_10000AADC(*a1, *a2);
}

Swift::Int sub_10003B594()
{
  return sub_1000291FC();
}

uint64_t sub_10003B59C()
{
  return sub_10002AA30();
}

Swift::Int sub_10003B5A4()
{
  return sub_1000294D4();
}

uint64_t sub_10003B5AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10003BC14(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_10003B5DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10003AE74(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10003B608()
{
  return sub_10009DD90();
}

uint64_t sub_10003B668()
{
  return sub_10009DD80();
}

uint64_t sub_10003B6B8()
{
  return sub_10003AE94(*v0);
}

uint64_t sub_10003B6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003BC60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10003B6E8(uint64_t a1)
{
  unint64_t v2 = sub_10003B790();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003B724(uint64_t a1)
{
  unint64_t v2 = sub_10003B790();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10003B760@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003B0FC(a1, a2);
}

uint64_t sub_10003B778(void *a1)
{
  return sub_10003AEB4(a1);
}

unint64_t sub_10003B790()
{
  unint64_t result = qword_1000D77D8;
  if (!qword_1000D77D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D77D8);
  }
  return result;
}

uint64_t sub_10003B7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10003B848()
{
  unint64_t result = qword_1000D77F0;
  if (!qword_1000D77F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D77F0);
  }
  return result;
}

uint64_t sub_10003B89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnrolledDeviceRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003B900(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003B948()
{
  unint64_t result = qword_1000D7810;
  if (!qword_1000D7810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7810);
  }
  return result;
}

ValueMetadata *type metadata accessor for EnrolledDeviceRecord.CodingKeys()
{
  return &type metadata for EnrolledDeviceRecord.CodingKeys;
}

unsigned char *_s46AddDevicesToAutomatedDeviceEnrollmentExtension15EnrollmentStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003BA7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnrollmentState()
{
  return &type metadata for EnrollmentState;
}

unint64_t sub_10003BAB8()
{
  unint64_t result = qword_1000D7818;
  if (!qword_1000D7818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7818);
  }
  return result;
}

unint64_t sub_10003BB10()
{
  unint64_t result = qword_1000D7820;
  if (!qword_1000D7820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7820);
  }
  return result;
}

unint64_t sub_10003BB68()
{
  unint64_t result = qword_1000D7828;
  if (!qword_1000D7828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7828);
  }
  return result;
}

unint64_t sub_10003BBC0()
{
  unint64_t result = qword_1000D7830;
  if (!qword_1000D7830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7830);
  }
  return result;
}

uint64_t sub_10003BC14(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000CAD88;
  v6._object = a2;
  unint64_t v4 = sub_10009E140(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_10003BC60(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656369766564 && a2 == 0xE600000000000000;
  if (v3 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C6C6F726E65 && a2 == 0xEC00000065746144 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D6C6C6F726E65 && a2 == 0xEF6574617453746ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_10009E260();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_10003BDC8()
{
  unint64_t result = qword_1000D7838;
  if (!qword_1000D7838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7838);
  }
  return result;
}

uint64_t sub_10003BE1C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10003BE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *char v6 = v4;
  v6[1] = sub_10000CD64;
  v6[6] = a4;
  return _swift_task_switch(sub_10003BF5C, a4, 0);
}

uint64_t sub_10003BF3C()
{
  *(void *)(v1 + 48) = v0;
  return _swift_task_switch(sub_10003BF5C, v0, 0);
}

uint64_t sub_10003BF5C()
{
  uint64_t v1 = v0[6];
  v0[7] = *(void *)(v1 + 112);
  uint64_t v2 = *(void *)(v1 + 120);
  v0[8] = v2;
  v0[9] = swift_getObjectType();
  if (qword_1000D5288 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_1000E35B8;
  v0[10] = qword_1000E35B0;
  v0[11] = v3;
  v0[12] = *(void *)(v2 + 24);
  v0[13] = (v2 + 24) & 0xFFFFFFFFFFFFLL | 0xA2EC000000000000;
  uint64_t v5 = sub_10009DE10();
  return _swift_task_switch(sub_10003C04C, v5, v4);
}

uint64_t sub_10003C04C()
{
  uint64_t v1 = (void (*)(ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))v0[12];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  unint64_t v6 = sub_10003CE68();
  unint64_t v7 = sub_10003CF2C();
  v1(&type metadata for NetworkInfo, v3, v2, &type metadata for NetworkInfo, v6, v7, v4, v5);
  v0[14] = 0;
  uint64_t v8 = v0[6];
  return _swift_task_switch(sub_10003C134, v8, 0);
}

uint64_t sub_10003C134()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  swift_getKeyPath();
  swift_getKeyPath();
  v0[4] = v1;
  v0[5] = v2;
  swift_retain();
  sub_10009CF40();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10003C1F0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003C208()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37KeyValueStoreBackedNetworkInfoStorage__networkInfo;
  uint64_t v2 = sub_10000D308(&qword_1000D7970);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10003C290()
{
  return type metadata accessor for KeyValueStoreBackedNetworkInfoStorage();
}

uint64_t type metadata accessor for KeyValueStoreBackedNetworkInfoStorage()
{
  uint64_t result = qword_1000D7870;
  if (!qword_1000D7870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003C2E4()
{
  sub_10003C388();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10003C388()
{
  if (!qword_1000D7888)
  {
    sub_10000AF84(&qword_1000D9FB0);
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D7888);
    }
  }
}

uint64_t sub_10003C3E4(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return _swift_task_switch(sub_10003C408, v2, 0);
}

uint64_t sub_10003C408()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  v0[11] = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  v0[12] = v4;
  v0[13] = swift_getObjectType();
  v0[2] = v3;
  v0[3] = v2;
  if (qword_1000D5288 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)algn_1000E35B8;
  v0[14] = qword_1000E35B0;
  v0[15] = v5;
  v0[16] = *(void *)(v4 + 16);
  v0[17] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0x30FA000000000000;
  uint64_t v7 = sub_10009DE10();
  return _swift_task_switch(sub_10003C508, v7, v6);
}

uint64_t sub_10003C508()
{
  uint64_t v1 = (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[16];
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = sub_10000D308(&qword_1000D9FB0);
  uint64_t v7 = sub_10003CEBC(&qword_1000D7988, (void (*)(void))sub_10003CE68);
  uint64_t v8 = sub_10003CEBC(&qword_1000D7998, (void (*)(void))sub_10003CF2C);
  v1(v0 + 2, v3, v2, v6, v7, v8, v4, v5);
  v0[18] = 0;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[19] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10003C6AC;
  uint64_t v10 = v0[10];
  v9[6] = v10;
  return _swift_task_switch(sub_10003BF5C, v10, 0);
}

uint64_t sub_10003C6AC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 80);
    return _swift_task_switch(sub_10003C7F0, v6, 0);
  }
}

uint64_t sub_10003C7F0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  swift_getKeyPath();
  swift_getKeyPath();
  v0[6] = v1;
  v0[7] = v2;
  swift_retain();
  sub_10009CF40();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10003C8FC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003C914()
{
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 40) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10003C9C0;
  v2[6] = v0;
  return _swift_task_switch(sub_10003BF5C, v0, 0);
}

uint64_t sub_10003C9C0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 32);
    return _swift_task_switch(sub_10003CB04, v6, 0);
  }
}

uint64_t sub_10003CB04()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_10003CBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100010914;
  v6[9] = a2;
  v6[10] = v2;
  v6[8] = a1;
  return _swift_task_switch(sub_10003C408, v2, 0);
}

uint64_t sub_10003CC74()
{
  uint64_t v0 = sub_10000D308(&qword_1000D7968);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D7970);
  sub_10009CF10();
  swift_endAccess();
  sub_10003CE0C();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

unint64_t sub_10003CD8C(uint64_t a1)
{
  unint64_t result = sub_10003CDB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10003CDB4()
{
  unint64_t result = qword_1000D7960;
  if (!qword_1000D7960)
  {
    type metadata accessor for KeyValueStoreBackedNetworkInfoStorage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7960);
  }
  return result;
}

unint64_t sub_10003CE0C()
{
  unint64_t result = qword_1000D7978;
  if (!qword_1000D7978)
  {
    sub_10000AF84(&qword_1000D7968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D7978);
  }
  return result;
}

unint64_t sub_10003CE68()
{
  unint64_t result = qword_1000D7990;
  if (!qword_1000D7990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7990);
  }
  return result;
}

uint64_t sub_10003CEBC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(&qword_1000D9FB0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003CF2C()
{
  unint64_t result = qword_1000D79A0;
  if (!qword_1000D79A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D79A0);
  }
  return result;
}

double sub_10003CF80@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10003D004(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100034C48(v1, v2);
  swift_retain();
  return sub_10009CF40();
}

id sub_10003D090()
{
  uint64_t v1 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension10BuddyProxy____lazy_storage___catTaskClient;
  unint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension10BuddyProxy____lazy_storage___catTaskClient);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension10BuddyProxy____lazy_storage___catTaskClient);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)CATTaskClient) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_10003D104(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension10BuddyProxy____lazy_storage___catTaskClient] = 0;
  *(void *)&v1[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension10BuddyProxy____lazy_storage___catOperationQueue] = 0;
  *(void *)&v1[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension10BuddyProxy_catSharingConnection] = a1;
  id v3 = objc_allocWithZone((Class)CATSharingServiceTransport);
  id v4 = v1;
  swift_unknownObjectRetain();
  id v5 = [v3 initWithConnection:a1];
  *(void *)&v4[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension10BuddyProxy_catSharingTransport] = v5;

  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for BuddyProxy();
  id v6 = (char *)objc_msgSendSuper2(&v11, "init");
  id v7 = sub_10003D090();
  [v7 setDelegate:v6];

  id v8 = sub_10003D090();
  id v9 = *(id *)&v6[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension10BuddyProxy_catSharingTransport];
  [v8 connectWithTransport:v9];

  swift_unknownObjectRelease();
  return v6;
}

id sub_10003D24C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BuddyProxy();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BuddyProxy()
{
  return self;
}

void sub_10003D3F0()
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10009CE60();
  sub_10000D690(v0, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  oslog = sub_10009CE40();
  os_log_type_t v1 = sub_10009DEB0();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315394;
    sub_10000DBA8(0xD000000000000020, 0x80000001000A81F0, &v6);
    sub_10009DFC0();
    *(_WORD *)(v2 + 12) = 2082;
    swift_errorRetain();
    sub_10000D308(&qword_1000D7A58);
    uint64_t v3 = sub_10009DCF0();
    sub_10000DBA8(v3, v4, &v6);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "%s: CAT task client interrupted with error: %{public}s", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_10003D62C(uint64_t a1, unint64_t a2, const char *a3)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10009CE60();
  sub_10000D690(v6, (uint64_t)qword_1000E3488);
  oslog = sub_10009CE40();
  os_log_type_t v7 = sub_10009DEA0();
  if (os_log_type_enabled(oslog, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v8 = 136315138;
    sub_10000DBA8(a1, a2, &v10);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, a3, v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

ValueMetadata *type metadata accessor for MDMServerSelectionView()
{
  return &type metadata for MDMServerSelectionView;
}

uint64_t sub_10003D7E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003D800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009D500();
  uint64_t v15 = *(void *)(v4 - 8);
  uint64_t v16 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D7A60);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  sub_10000D308(&qword_1000D7A68);
  uint64_t v11 = sub_10000AF84(&qword_1000D7A70);
  uint64_t v12 = sub_100015700(&qword_1000D7A78, &qword_1000D7A70);
  unint64_t v13 = sub_10001E4B8();
  uint64_t v19 = v11;
  uint64_t v20 = &type metadata for String;
  uint64_t v21 = v12;
  unint64_t v22 = v13;
  swift_getOpaqueTypeConformance2();
  sub_10009D1E0();
  type metadata accessor for SettingsViewModel();
  sub_1000180CC();
  sub_10009D250();
  swift_getKeyPath();
  sub_10009D270();
  swift_release();
  swift_release();
  sub_10009D4F0();
  sub_100015700(&qword_1000D7A80, &qword_1000D7A60);
  sub_10009D790();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10003DB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[1] = a3;
  v17[0] = sub_10009D3C0();
  uint64_t v5 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10009CCC0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_10009DC60();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10000D308(&qword_1000D7A70);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[4] = a1;
  void v17[5] = a2;
  sub_10000D308(&qword_1000D7A88);
  sub_10003E3D4();
  sub_10009D6F0();
  sub_10009DC00();
  sub_10009CCB0();
  _OWORD v17[7] = sub_10009DCE0();
  v17[8] = v14;
  uint64_t v15 = v17[0];
  (*(void (**)(char *, void, void))(v5 + 104))(v7, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v17[0]);
  sub_100015700(&qword_1000D7A78, &qword_1000D7A70);
  sub_10001E4B8();
  sub_10009D7E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10003DE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000D308(&qword_1000D7A88);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    uint64_t v10 = sub_10003134C();
    swift_release();
    v13[1] = v10;
    swift_getKeyPath();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    swift_retain();
    sub_10000D308(&qword_1000D6AB0);
    sub_10000D308(&qword_1000D7AA0);
    sub_100015700(&qword_1000D7AB8, &qword_1000D6AB0);
    sub_10003E54C();
    sub_10003E448();
    sub_10009D9F0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  }
  else
  {
    type metadata accessor for SettingsViewModel();
    sub_1000180CC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10003E01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10000D308(&qword_1000D7AB0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v12 = *(_OWORD *)(a1 + 16);
  v23[0] = *(_OWORD *)a1;
  v23[1] = v12;
  char v24 = *(unsigned char *)(a1 + 32);
  long long v25 = v23[0];
  long long v26 = v12;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  long long v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 48) = v14;
  *(unsigned char *)(v13 + 64) = *(unsigned char *)(a1 + 32);
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  unint64_t v22 = v23;
  swift_retain();
  sub_1000351AC((uint64_t)&v25);
  sub_1000351AC((uint64_t)&v26);
  sub_10003E600();
  sub_10009D990();
  uint64_t v15 = sub_10009D920();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v9 + 16))(a4, v11, v8);
  uint64_t v17 = (uint64_t *)(a4 + *(int *)(sub_10000D308(&qword_1000D7AA0) + 36));
  *uint64_t v17 = KeyPath;
  v17[1] = v15;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10003E1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    swift_retain();
    sub_10002D488(a3);
    return swift_release();
  }
  else
  {
    type metadata accessor for SettingsViewModel();
    sub_1000180CC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10003E268@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    swift_release();
    if (v10)
    {
      swift_bridgeObjectRetain();
      sub_1000351D8(v9, v10);
      if (v9 == *a2 && v10 == a2[1]) {
        char v5 = 1;
      }
      else {
        char v5 = sub_10009E260();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v5 = 0;
    }
    uint64_t v7 = a2[2];
    uint64_t v6 = a2[3];
    *(unsigned char *)a3 = v5 & 1;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = v6;
    return swift_bridgeObjectRetain();
  }
  else
  {
    type metadata accessor for SettingsViewModel();
    sub_1000180CC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10003E3B4()
{
  return sub_10003D800(*v0, v0[1]);
}

uint64_t sub_10003E3BC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003DB04(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10003E3CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003DE20(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_10003E3D4()
{
  unint64_t result = qword_1000D7A90;
  if (!qword_1000D7A90)
  {
    sub_10000AF84(&qword_1000D7A88);
    sub_10003E448();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7A90);
  }
  return result;
}

unint64_t sub_10003E448()
{
  unint64_t result = qword_1000D7A98;
  if (!qword_1000D7A98)
  {
    sub_10000AF84(&qword_1000D7AA0);
    sub_100015700(&qword_1000D7AA8, &qword_1000D7AB0);
    sub_100015700(&qword_1000D6640, &qword_1000D6648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7A98);
  }
  return result;
}

uint64_t sub_10003E50C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003E544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003E01C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_10003E54C()
{
  unint64_t result = qword_1000D7AC0;
  if (!qword_1000D7AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7AC0);
  }
  return result;
}

uint64_t sub_10003E5A0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_10003E5E8()
{
  return sub_10003E1F8(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t sub_10003E5F4@<X0>(uint64_t a1@<X8>)
{
  return sub_10003E268(*(void *)(v1 + 16), *(void **)(v1 + 32), a1);
}

unint64_t sub_10003E600()
{
  unint64_t result = qword_1000D7AC8;
  if (!qword_1000D7AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7AC8);
  }
  return result;
}

uint64_t sub_10003E664()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for FakeSettingsViewModelProviderFactory()
{
  return self;
}

uint64_t type metadata accessor for DMTBackedSharingDiscoveryPrimitivesProvider()
{
  return self;
}

double sub_10003E72C@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10003E7B0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension24FakeMDMServerInfoStorage__mdmServerInfo;
  uint64_t v2 = sub_10000D308(&qword_1000D9DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10003E854()
{
  return type metadata accessor for FakeMDMServerInfoStorage();
}

uint64_t type metadata accessor for FakeMDMServerInfoStorage()
{
  uint64_t result = qword_1000D7C50;
  if (!qword_1000D7C50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10003E8A8()
{
  sub_100015CF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10003E938(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v3;
  return _swift_task_switch(sub_10003E95C, 0, 0);
}

uint64_t sub_10003E95C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  char v2 = *(unsigned char *)(v0 + 48);
  long long v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 32) = v2;
  long long v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10003EA24(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v3;
  return _swift_task_switch(sub_10003EA48, 0, 0);
}

uint64_t sub_10003EA48()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100016580(v1, v0 + 16);
  swift_retain();
  sub_10001683C(v1);
  sub_10009CF40();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10003EB0C()
{
  uint64_t v0 = sub_10000D308(&qword_1000D5F50);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D9DE0);
  sub_10009CF10();
  swift_endAccess();
  sub_100016524();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

double sub_10003EC28@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10003ECB4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100016874(v1, v2);
  swift_retain();
  return sub_10009CF40();
}

void *sub_10003ED64(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DeviceRowViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_10009CCA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v6[6];
    uint64_t v13 = (void *)((char *)a1 + v12);
    long long v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
    uint64_t v16 = v6[8];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v6[9];
    uint64_t v21 = (void *)((char *)a1 + v20);
    unint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10003EEAC(uint64_t a1)
{
  uint64_t v2 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for DeviceRowViewModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003EF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for DeviceRowViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(unsigned char *)(a1 + v5[7]) = *(unsigned char *)(a2 + v5[7]);
  uint64_t v15 = v5[8];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v5[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10003F04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for DeviceRowViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[7]) = *(unsigned char *)(a2 + v5[7]);
  uint64_t v12 = v5[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v5[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003F180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for DeviceRowViewModel();
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(unsigned char *)(a1 + v5[7]) = *(unsigned char *)(a2 + v5[7]);
  *(_OWORD *)(a1 + v5[8]) = *(_OWORD *)(a2 + v5[8]);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_10003F228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for DeviceRowViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[7]) = *(unsigned char *)(a2 + v5[7]);
  uint64_t v16 = v5[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v5[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003F31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003F330);
}

uint64_t sub_10003F330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceRowViewModel();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10003F39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003F3B0);
}

uint64_t sub_10003F3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceRowViewModel();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DeviceRowView()
{
  uint64_t result = qword_1000D7D70;
  if (!qword_1000D7D70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003F46C()
{
  uint64_t result = type metadata accessor for DeviceRowViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10003F4F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003F514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_10000D308(&qword_1000D7DB0);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000D308(&qword_1000D7DB8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v55 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v47 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v47 - v12;
  *(void *)int v5 = sub_10009D400();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v14 = sub_10000D308(&qword_1000D7DC0);
  sub_10003F894(a1, (uint64_t)&v5[*(int *)(v14 + 44)]);
  unsigned __int8 v15 = sub_10009D650();
  char v16 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v15) {
    char v16 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_100010720((uint64_t)v5, (uint64_t)v11, &qword_1000D7DB0);
  uint64_t v25 = &v11[*(int *)(v6 + 36)];
  *uint64_t v25 = v16;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  sub_100010864((uint64_t)v5, &qword_1000D7DB0);
  sub_100040570((uint64_t)v11, (uint64_t)v13);
  uint64_t v49 = sub_10009D410();
  sub_100040054(a1, (uint64_t)v56);
  uint64_t v26 = (uint64_t)v13;
  id v50 = v13;
  uint64_t v53 = v56[1];
  uint64_t v54 = v56[0];
  int v52 = v57;
  uint64_t v28 = v58;
  uint64_t v27 = v59;
  uint64_t v29 = v60;
  uint64_t v30 = v61;
  uint64_t v31 = v62;
  uint64_t v32 = v63;
  uint64_t v33 = v64;
  uint64_t v48 = v65;
  uint64_t v34 = v66;
  uint64_t v35 = v55;
  sub_100010720(v26, v55, &qword_1000D7DB8);
  uint64_t v36 = v35;
  uint64_t v37 = v51;
  sub_100010720(v36, v51, &qword_1000D7DB8);
  uint64_t v38 = sub_10000D308(&qword_1000D7DC8);
  uint64_t v39 = v37 + *(int *)(v38 + 48);
  *(void *)uint64_t v39 = v49;
  *(void *)(v39 + 8) = 0x4008000000000000;
  *(unsigned char *)(v39 + 16) = 0;
  uint64_t v40 = v53;
  uint64_t v41 = v54;
  *(void *)(v39 + 24) = v54;
  *(void *)(v39 + 32) = v40;
  char v42 = v52;
  *(unsigned char *)(v39 + 40) = v52;
  *(void *)(v39 + 48) = v28;
  *(void *)(v39 + 56) = v27;
  uint64_t v43 = v27;
  *(void *)(v39 + 64) = v29;
  *(void *)(v39 + 72) = v30;
  *(void *)(v39 + 80) = v31;
  *(void *)(v39 + 88) = v32;
  uint64_t v44 = v48;
  *(void *)(v39 + 96) = v33;
  *(void *)(v39 + 104) = v44;
  *(void *)(v39 + 112) = v34;
  uint64_t v45 = v37 + *(int *)(v38 + 64);
  *(void *)uint64_t v45 = 0;
  *(unsigned char *)(v45 + 8) = 1;
  sub_10001F79C(v41, v40, v42);
  swift_bridgeObjectRetain();
  sub_1000405D8(v43, v29, v30, v31);
  sub_1000405D8(v32, v33, v44, v34);
  sub_100010864((uint64_t)v50, &qword_1000D7DB8);
  sub_10001F7AC(v54, v53, v52);
  swift_bridgeObjectRelease();
  sub_10004061C(v43, v29, v30, v31);
  sub_10004061C(v32, v33, v44, v34);
  return sub_100010864(v55, &qword_1000D7DB8);
}

uint64_t sub_10003F894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v43 = sub_10009D540();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000D308(&qword_1000D7DD8);
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10000D308(&qword_1000D7DE0);
  uint64_t v42 = *(void *)(v44 - 8);
  uint64_t v8 = __chkstk_darwin(v44);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v45 = sub_10000D308(&qword_1000D7DE8);
  __chkstk_darwin(v45);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000D308(&qword_1000D7DF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_10000D308(&qword_1000D7DF8);
  __chkstk_darwin(v46);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(a1 + *(int *)(type metadata accessor for DeviceRowViewModel() + 28)))
  {
    case 1:
      sub_10009D0D0();
      sub_10009D530();
      uint64_t v25 = sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
      uint64_t v38 = v5;
      uint64_t v26 = v25;
      unint64_t v39 = sub_10004075C();
      uint64_t v27 = v43;
      sub_10009D780();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v4, v27);
      uint64_t v28 = v38;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v38);
      uint64_t v29 = v42;
      uint64_t v30 = v10;
      uint64_t v31 = v44;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v12, v30, v44);
      (*(void (**)(void *, char *, uint64_t))(v29 + 16))(v17, v12, v31);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v48 = v28;
      *((void *)&v48 + 1) = v27;
      uint64_t v49 = v26;
      unint64_t v50 = v39;
      swift_getOpaqueTypeConformance2();
      sub_10009D4E0();
      sub_100010720((uint64_t)v19, (uint64_t)v14, &qword_1000D7DF8);
      swift_storeEnumTagMultiPayload();
      sub_10000D308(&qword_1000D7E00);
      sub_100040668();
      sub_1000407B4();
      sub_10009D4E0();
      sub_100010864((uint64_t)v19, &qword_1000D7DF8);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v12, v31);
    case 2:
    case 4:
      if (qword_1000D5218 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1000E3508;
      swift_retain();
      uint64_t v21 = sub_10009D8F0();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v51 = v20;
      uint64_t v52 = KeyPath;
      uint64_t v53 = v21;
      char v54 = 1;
      goto LABEL_12;
    case 3:
      if (qword_1000D5210 != -1) {
        swift_once();
      }
      uint64_t v33 = qword_1000E3500;
      swift_retain();
      uint64_t v34 = sub_10009D910();
      uint64_t v35 = swift_getKeyPath();
      uint64_t v51 = v33;
      uint64_t v52 = v35;
      uint64_t v53 = v34;
      char v54 = 0;
LABEL_12:
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10000D308(&qword_1000D6630);
      sub_100020434();
      sub_10009D4E0();
      uint64_t v36 = v49;
      char v37 = v50;
      *(_OWORD *)uint64_t v14 = v48;
      *((void *)v14 + 2) = v36;
      v14[24] = v37;
      swift_storeEnumTagMultiPayload();
      sub_10000D308(&qword_1000D7E00);
      sub_100040668();
      sub_1000407B4();
      sub_10009D4E0();
      swift_release();
      swift_release();
      return swift_release();
    default:
      if (qword_1000D5208 != -1) {
        swift_once();
      }
      *uint64_t v17 = qword_1000E34F8;
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
      unint64_t v24 = sub_10004075C();
      swift_retain_n();
      *(void *)&long long v48 = v5;
      *((void *)&v48 + 1) = v43;
      uint64_t v49 = v23;
      unint64_t v50 = v24;
      swift_getOpaqueTypeConformance2();
      sub_10009D4E0();
      sub_100010720((uint64_t)v19, (uint64_t)v14, &qword_1000D7DF8);
      swift_storeEnumTagMultiPayload();
      sub_10000D308(&qword_1000D7E00);
      sub_100040668();
      sub_1000407B4();
      sub_10009D4E0();
      sub_100010864((uint64_t)v19, &qword_1000D7DF8);
      return swift_release();
  }
}

uint64_t sub_100040054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000D308(&qword_1000D7DD0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100041594();
  unint64_t v87 = v7;
  unint64_t v8 = sub_10001E4B8();
  uint64_t v9 = sub_10009D750();
  uint64_t v11 = v10;
  int v83 = v12;
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for DeviceRowViewModel();
  uint64_t v16 = (uint64_t *)(a1 + *(int *)(v15 + 32));
  uint64_t v17 = v16[1];
  uint64_t v82 = v14;
  uint64_t v84 = v11;
  uint64_t v85 = v9;
  unint64_t v77 = v8;
  if (v17)
  {
    uint64_t v86 = *v16;
    unint64_t v87 = v17;
    uint64_t v74 = v15;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_10009D750();
    uint64_t v20 = v19;
    uint64_t v76 = v6;
    char v22 = v21 & 1;
    id v23 = [self secondaryLabelColor];
    sub_10009D8A0();
    uint64_t v24 = sub_10009D720();
    uint64_t v26 = v25;
    char v28 = v27;
    uint64_t v75 = a1;
    swift_release();
    sub_10001F7AC(v18, v20, v22);
    uint64_t v6 = v76;
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_10009D680();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
    sub_10009D6B0();
    sub_100010864((uint64_t)v6, &qword_1000D7DD0);
    uint64_t v30 = sub_10009D740();
    uint64_t v80 = v31;
    uint64_t v81 = v30;
    char v33 = v32;
    uint64_t v79 = v34;
    swift_release();
    uint64_t v78 = v33 & 1;
    sub_10001F7AC(v24, v26, v28 & 1);
    a1 = v75;
    swift_bridgeObjectRelease();
    uint64_t v15 = v74;
  }
  else
  {
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
  }
  uint64_t v35 = (uint64_t *)(a1 + *(int *)(v15 + 36));
  unint64_t v36 = v35[1];
  if (!v36) {
    goto LABEL_9;
  }
  uint64_t v37 = *v35;
  uint64_t v38 = HIBYTE(v36) & 0xF;
  if ((v36 & 0x2000000000000000) == 0) {
    uint64_t v38 = v37 & 0xFFFFFFFFFFFFLL;
  }
  if (v38)
  {
    uint64_t v86 = v37;
    unint64_t v87 = v36;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_10009D750();
    uint64_t v41 = v40;
    uint64_t v42 = (uint64_t)v6;
    char v44 = v43 & 1;
    id v45 = [self secondaryLabelColor];
    sub_10009D8A0();
    uint64_t v46 = sub_10009D720();
    unint64_t v77 = v47;
    char v49 = v48;
    swift_release();
    sub_10001F7AC(v39, v41, v44);
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_10009D680();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v42, 1, 1, v50);
    sub_10009D6B0();
    sub_100010864(v42, &qword_1000D7DD0);
    uint64_t v51 = v77;
    uint64_t v52 = sub_10009D740();
    uint64_t v54 = v53;
    char v56 = v55;
    uint64_t v58 = v57;
    swift_release();
    sub_10001F7AC(v46, v51, v49 & 1);
    swift_bridgeObjectRelease();
    uint64_t v59 = v56 & 1;
    uint64_t v60 = v58;
    uint64_t v61 = v54;
    uint64_t v62 = v52;
  }
  else
  {
LABEL_9:
    uint64_t v62 = 0;
    uint64_t v61 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
  }
  uint64_t v64 = v81;
  uint64_t v63 = v82;
  uint64_t v66 = v84;
  uint64_t v65 = v85;
  int v67 = v83 & 1;
  *(void *)a2 = v85;
  *(void *)(a2 + 8) = v66;
  *(unsigned char *)(a2 + 16) = v67;
  char v68 = v67;
  int v83 = v67;
  *(void *)(a2 + 24) = v63;
  *(void *)(a2 + 32) = v64;
  uint64_t v69 = (void *)a2;
  uint64_t v70 = v79;
  uint64_t v71 = v80;
  uint64_t v72 = v78;
  v69[5] = v80;
  v69[6] = v72;
  v69[7] = v70;
  v69[8] = v62;
  v69[9] = v61;
  v69[10] = v59;
  v69[11] = v60;
  sub_10001F79C(v65, v66, v68);
  swift_bridgeObjectRetain();
  sub_1000405D8(v64, v71, v72, v70);
  sub_1000405D8(v62, v61, v59, v60);
  sub_10004061C(v62, v61, v59, v60);
  sub_10004061C(v64, v71, v72, v70);
  sub_10001F7AC(v85, v66, v83);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100040524@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_10009D3D0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_10000D308(&qword_1000D7DA8);
  return sub_10003F514(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100040570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D7DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000405D8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001F79C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10004061C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001F7AC(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100040668()
{
  unint64_t result = qword_1000D7E08;
  if (!qword_1000D7E08)
  {
    sub_10000AF84(&qword_1000D7DF8);
    sub_10000AF84(&qword_1000D7DD8);
    sub_10009D540();
    sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
    sub_10004075C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E08);
  }
  return result;
}

unint64_t sub_10004075C()
{
  unint64_t result = qword_1000D7E18;
  if (!qword_1000D7E18)
  {
    sub_10009D540();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E18);
  }
  return result;
}

unint64_t sub_1000407B4()
{
  unint64_t result = qword_1000D7E20;
  if (!qword_1000D7E20)
  {
    sub_10000AF84(&qword_1000D7E00);
    sub_100020434();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E20);
  }
  return result;
}

uint64_t sub_100040828()
{
  return sub_100015700(&qword_1000D7E28, &qword_1000D7E30);
}

ValueMetadata *type metadata accessor for MDMServerTypeSectionFooterView()
{
  return &type metadata for MDMServerTypeSectionFooterView;
}

uint64_t sub_100040874()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100040890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    swift_release();
    if (*((void *)&v13 + 1) < 2uLL)
    {
      sub_10009DC00();
      sub_10009CCB0();
      *(void *)&long long v13 = sub_10009DCE0();
      *((void *)&v13 + 1) = v7;
      sub_10001E4B8();
      uint64_t v8 = sub_10009D750();
      uint64_t v10 = v9;
      char v12 = v11 & 1;
      sub_10001F79C(v8, v9, v11 & 1);
      swift_bridgeObjectRetain();
      sub_10009D4E0();
      sub_10000D308(&qword_1000D7E38);
      sub_100040C24();
      sub_10009D4E0();
      sub_10001F7AC(v8, v10, v12);
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      if (*((void *)&v13 + 1) != 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_10000D308(&qword_1000D7E38);
      sub_100040C24();
      uint64_t result = sub_10009D4E0();
    }
    *(_OWORD *)a2 = v13;
    *(_OWORD *)(a2 + 16) = v14;
    *(unsigned char *)(a2 + 32) = v15;
    *(unsigned char *)(a2 + 33) = v16;
  }
  else
  {
    type metadata accessor for SettingsViewModel();
    sub_1000180CC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_100040C14@<X0>(uint64_t a1@<X8>)
{
  return sub_100040890(*v1, a1);
}

unint64_t sub_100040C24()
{
  unint64_t result = qword_1000D7E40;
  if (!qword_1000D7E40)
  {
    sub_10000AF84(&qword_1000D7E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E40);
  }
  return result;
}

unint64_t sub_100040C94()
{
  unint64_t result = qword_1000D7E48;
  if (!qword_1000D7E48)
  {
    sub_10000AF84(&qword_1000D7E50);
    sub_100040C24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7E48);
  }
  return result;
}

void *sub_100040D10(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10009CCA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    char v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    long long v13 = (void *)((char *)a1 + v9);
    long long v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *long long v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[9];
    char v21 = (void *)((char *)a1 + v20);
    char v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *char v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100040E48(uint64_t a1)
{
  uint64_t v2 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100040EF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  long long v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  char v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100040FD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100041104(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1000411A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100041290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000412A4);
}

uint64_t sub_1000412A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100041374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100041388);
}

uint64_t sub_100041388(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10009CCA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for DeviceRowViewModel()
{
  uint64_t result = qword_1000D7EB0;
  if (!qword_1000D7EB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100041494()
{
  uint64_t result = sub_10009CCA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10004153C()
{
  unint64_t result = qword_1000D71B0;
  if (!qword_1000D71B0)
  {
    sub_10009CCA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D71B0);
  }
  return result;
}

uint64_t sub_100041594()
{
  uint64_t v1 = sub_10009CCC0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10009DC60();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for DeviceRowViewModel();
  uint64_t v4 = (uint64_t *)(v0 + *(int *)(v3 + 20));
  if (v4[1])
  {
    uint64_t v5 = *v4;
  }
  else
  {
    uint64_t v6 = (uint64_t *)(v0 + *(int *)(v3 + 24));
    unint64_t v7 = v6[1];
    if (!v7) {
      goto LABEL_8;
    }
    uint64_t v5 = *v6;
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
LABEL_8:
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v5 = sub_10009DCE0();
    }
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_100041708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10009CCA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

unsigned char *storeEnumTagSinglePayload for DeviceState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004183CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceState()
{
  return &type metadata for DeviceState;
}

unint64_t sub_100041878()
{
  unint64_t result = qword_1000D7EF8;
  if (!qword_1000D7EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D7EF8);
  }
  return result;
}

uint64_t sub_1000418CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10009CB50();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v11 = (char *)outSystemSoundID - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    sub_10009CAD0();
    outSystemSoundID[0] = 0;
    sub_10009CAF0(v12);
    CFURLRef v14 = v13;
    AudioServicesCreateSystemSoundID(v13, outSystemSoundID);

    AudioServicesPlaySystemSound(outSystemSoundID[0]);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v15 = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
    [v15 notificationOccurred:0];
  }
  sub_1000102FC(v4 + 16, (uint64_t)outSystemSoundID);
  uint64_t v16 = v20;
  uint64_t v17 = v21;
  sub_10000FF9C(outSystemSoundID, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 40))(a1, a2, v16, v17);
  return sub_1000100E8((uint64_t)outSystemSoundID);
}

uint64_t sub_100041A94()
{
  sub_1000100E8(v0 + 16);
  sub_1000100E8(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisualPinScannerViewModel()
{
  return self;
}

uint64_t sub_100041AF8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VisualPinScannerViewModel();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for InMemoryKeychainProvider()
{
  return self;
}

void destroy for OBBulletedListItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for OBBulletedListItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for OBBulletedListItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[4];
  uint64_t v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for OBBulletedListItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OBBulletedListItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for OBBulletedListItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OBBulletedListItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OBBulletedListItem()
{
  return &type metadata for OBBulletedListItem;
}

uint64_t sub_100041D80()
{
  sub_1000100E8(v0 + 16);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeviceStatusViewModelProvider()
{
  return self;
}

uint64_t sub_100041DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = a4;
  uint64_t v16 = a6;
  int v11 = sub_100013860((uint64_t *)&v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v11, a1, a4);
  type metadata accessor for DeviceStatusViewModelProvider();
  uint64_t v12 = swift_allocObject();
  sub_1000107E8(&v14, v12 + 16);
  *(void *)(v12 + 56) = a2;
  *(void *)(v12 + 64) = a7;
  return v12;
}

uint64_t sub_100041E84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();

  return swift_release();
}

uint64_t sub_100041EFC(uint64_t a1)
{
  uint64_t v3 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100042908(a1, (uint64_t)v8);
  swift_retain();
  sub_10009CF40();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v9 = type metadata accessor for ErrorInfo();
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9);
  sub_100042970((uint64_t)v6);
  if (v8 == 1)
  {
    *(void *)(v1 + 16) = 0;
    swift_errorRelease();
  }
  return sub_100042970(a1);
}

uint64_t sub_100042090(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for ErrorInfo();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000D308((uint64_t *)&unk_1000D9DD0);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  sub_10009DE40();
  v2[13] = sub_10009DE30();
  uint64_t v5 = sub_10009DE10();
  return _swift_task_switch(sub_1000421F4, v5, v4);
}

uint64_t sub_1000421F4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  swift_release();
  *(void *)(v2 + 16) = v1;
  swift_errorRetain();
  swift_errorRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v22 = v2;
  if (v3)
  {
    uint64_t v4 = v0[11];
    uint64_t v5 = v0[4];
    uint64_t v6 = v0[5];
    swift_errorRetain();
    sub_100060858(v4);
    uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v21(v4, 1, v5) == 1)
    {
      uint64_t v7 = *(void (**)(uint64_t))(v0[3]
                                          + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus_defaultErrorInfoProvider);
      uint64_t v8 = v0[12];
      if (v7)
      {
        uint64_t v9 = v0[6];
        v7(v3);
        sub_1000429D0(v9, v8);
      }
      else
      {
        sub_100060A40(v0[12]);
      }
      sub_100042970(v0[11]);
    }
    else
    {
      sub_1000429D0(v0[11], v0[12]);
    }
    uint64_t v15 = v0[12];
    uint64_t v16 = v0[9];
    uint64_t v17 = v0[10];
    uint64_t v18 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v0[5] + 56))(v15, 0, 1, v18);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_100042908(v15, v17);
    swift_retain();
    sub_10009CF40();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009CF30();
    swift_release();
    swift_release();
    LODWORD(v18) = v21(v16, 1, v18);
    sub_100042970(v16);
    if (v18 == 1)
    {
      *(void *)(v22 + 16) = 0;
      swift_errorRelease();
    }
    sub_100042970(v0[12]);
    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = v0[10];
    uint64_t v11 = v0[7];
    uint64_t v12 = v0[8];
    uint64_t v13 = v0[4];
    uint64_t v14 = v0[5];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_100042908(v12, v10);
    swift_retain();
    sub_10009CF40();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009CF30();
    swift_release();
    swift_release();
    LODWORD(v13) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13);
    sub_100042970(v11);
    if (v13 == 1)
    {
      *(void *)(v22 + 16) = 0;
      swift_errorRelease();
    }
    sub_100042970(v0[8]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1000425A0()
{
  swift_errorRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus__errorInfo;
  uint64_t v2 = sub_10000D308(&qword_1000D8268);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100042A34(*(void *)(v0
                          + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus_defaultErrorInfoProvider));

  return swift_deallocClassInstance();
}

uint64_t sub_100042660()
{
  return type metadata accessor for OperationStatus();
}

uint64_t type metadata accessor for OperationStatus()
{
  uint64_t result = qword_1000D8170;
  if (!qword_1000D8170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000426B4()
{
  sub_100042758();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100042758()
{
  if (!qword_1000D8188)
  {
    sub_10000AF84((uint64_t *)&unk_1000D9DD0);
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D8188);
    }
  }
}

uint64_t sub_1000427B4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for OperationStatus();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

uint64_t sub_1000427F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();

  return swift_release();
}

uint64_t sub_100042874(uint64_t a1)
{
  uint64_t v2 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100042908(a1, (uint64_t)v4);
  return sub_100041EFC((uint64_t)v4);
}

uint64_t sub_100042908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100042970(uint64_t a1)
{
  uint64_t v2 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000429D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ErrorInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100042A34(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

id sub_100042A44()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)CWFInterface) init];
    [v3 activate];
    uint64_t v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_100042AC0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcreteCurrentWiFiNetworkPrimitives()
{
  return self;
}

id sub_100042B1C()
{
  uint64_t v0 = sub_10009DCD0();
  __chkstk_darwin(v0 - 8);
  id v1 = sub_100042A44();
  id v2 = [v1 SSID];

  if (v2)
  {
    uint64_t v3 = sub_10009CBA0();
    unint64_t v5 = v4;

    sub_10009DCC0();
    uint64_t v6 = sub_10009DCA0();
    uint64_t v8 = v7;
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10009CE60();
    sub_10000D690(v9, (uint64_t)qword_1000E3488);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10009CE40();
    os_log_type_t v11 = sub_10009DEA0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136380675;
      uint64_t v22 = v6;
      uint64_t v23 = v8;
      swift_bridgeObjectRetain();
      sub_10000D308((uint64_t *)&unk_1000D9FA0);
      uint64_t v13 = sub_10009DCF0();
      uint64_t v22 = sub_10000DBA8(v13, v14, &v21);
      sub_10009DFC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Current ssid name: %{private}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    Class isa = sub_10009CB90().super.isa;
    int Password = CWFSecItemQueryPassword();

    uint64_t v17 = sub_10009CE40();
    os_log_type_t v18 = sub_10009DED0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 67240192;
      LODWORD(v21) = Password;
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Query WiFi password osstatus: %{public}d)", v19, 8u);
      swift_slowDealloc();
    }

    if (v22)
    {
      swift_unknownObjectRetain();
      id v2 = (id)sub_10009DC80();
      sub_10000EE7C(v3, v5);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_10000EE7C(v3, v5);
      id v2 = 0;
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

BOOL sub_100042EC8()
{
  id v0 = sub_100042A44();
  id v1 = [v0 currentKnownNetworkProfile];

  if (!v1) {
    return 0;
  }
  id v2 = [v1 nearbyShareableStatus];
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10009CE60();
  sub_10000D690(v3, (uint64_t)qword_1000E3488);
  unint64_t v4 = sub_10009CE40();
  os_log_type_t v5 = sub_10009DEA0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    type metadata accessor for CWFNearbyShareableStatus(0);
    uint64_t v7 = sub_10009DCF0();
    sub_10000DBA8(v7, v8, &v10);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Current network shareable status: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return (unint64_t)v2 < 2;
}

uint64_t sub_1000430A4()
{
  id v0 = sub_100042A44();
  id v1 = [v0 networkName];

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_10009DC80();

  return v2;
}

id sub_10004311C()
{
  return sub_100042B1C();
}

BOOL sub_100043140()
{
  return sub_100042EC8();
}

unsigned char *storeEnumTagSinglePayload for BluetoothStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100043234);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BluetoothStatus()
{
  return &type metadata for BluetoothStatus;
}

unint64_t sub_100043270()
{
  unint64_t result = qword_1000D8328;
  if (!qword_1000D8328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8328);
  }
  return result;
}

uint64_t sub_1000432C4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100043338(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EnrolledDeviceRecord();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003B89C(a1, (uint64_t)v5);
  swift_getKeyPath();
  swift_getKeyPath();
  unsigned int v6 = (void (*)(unsigned char *, void))sub_10009CF20();
  unint64_t v8 = v7;
  unint64_t v9 = *v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v9 = sub_10008D2D8(0, *(void *)(v9 + 16) + 1, 1, v9);
    *unint64_t v8 = v9;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    unint64_t v9 = sub_10008D2D8(v11 > 1, v12 + 1, 1, v9);
    *unint64_t v8 = v9;
  }
  *(void *)(v9 + 16) = v12 + 1;
  sub_1000442BC((uint64_t)v5, v9+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12);
  v6(v14, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_1000434F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v52 = a3;
  uint64_t v53 = a2;
  uint64_t v54 = a1;
  uint64_t v67 = sub_10009CD00();
  uint64_t v5 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v66 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10009CA40();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v14 = (char *)&v51 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = type metadata accessor for EnrolledDeviceRecord();
  uint64_t v64 = *(void *)(v17 - 8);
  uint64_t v65 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v69 = (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v74 = (uint64_t)&v51 - v20;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v51 = v4;
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v22 = v75;
  uint64_t v23 = _swiftEmptyArrayStorage;
  uint64_t v75 = _swiftEmptyArrayStorage;
  uint64_t v63 = v22[2];
  if (!v63)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v75 = v23;
    swift_retain();
    return sub_10009CF40();
  }
  unint64_t v24 = 0;
  unsigned int v60 = enum case for Calendar.Component.month(_:);
  unsigned int v61 = enum case for Calendar.Component.year(_:);
  unsigned int v59 = enum case for Calendar.Component.day(_:);
  uint64_t v58 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v73 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  char v68 = (void (**)(char *, uint64_t))(v8 + 8);
  long long v57 = xmmword_1000A06A0;
  char v55 = v22;
  char v56 = v11;
  uint64_t v62 = v14;
  while (v24 < v22[2])
  {
    uint64_t v25 = *(void *)(v64 + 72);
    unint64_t v71 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    unint64_t v72 = v24;
    uint64_t v70 = v25;
    sub_10003B89C((uint64_t)v22 + v71 + v25 * v24, v74);
    uint64_t v26 = v66;
    sub_10009CCE0();
    sub_10000D308(&qword_1000D6370);
    uint64_t v27 = sub_10009CCF0();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void *)(v28 + 72);
    unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = v57;
    unint64_t v32 = v31 + v30;
    char v33 = *(void (**)(unint64_t, void, uint64_t))(v28 + 104);
    v33(v32, v61, v27);
    v33(v32 + v29, v60, v27);
    v33(v32 + 2 * v29, v59, v27);
    sub_10008D704(v31);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_10009CCD0();
    swift_bridgeObjectRelease();
    uint64_t v34 = v26;
    uint64_t v35 = v62;
    (*v58)(v34, v67);
    uint64_t v36 = sub_10009CA20();
    LOBYTE(v32) = v37;
    uint64_t v38 = *v73;
    (*v73)(v35, v16, v7);
    if ((v32 & 1) != 0 || v36 != v54)
    {
      uint64_t v42 = *v68;
      (*v68)(v35, v7);
LABEL_12:
      uint64_t v22 = v55;
      char v43 = v56;
      v38(v56, v16, v7);
      goto LABEL_13;
    }
    uint64_t v39 = sub_10009CA30();
    char v41 = v40;
    uint64_t v42 = *v68;
    (*v68)(v35, v7);
    if (v41) {
      goto LABEL_12;
    }
    char v43 = v56;
    v38(v56, v16, v7);
    if (v39 != v53)
    {
      uint64_t v22 = v55;
LABEL_13:
      v42(v43, v7);
      v42(v16, v7);
      unint64_t v47 = v72;
LABEL_14:
      sub_1000442BC(v74, v69);
      char v48 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10000E310(0, v48[2] + 1, 1);
        char v48 = v75;
      }
      unint64_t v50 = v48[2];
      unint64_t v49 = v48[3];
      if (v50 >= v49 >> 1)
      {
        sub_10000E310(v49 > 1, v50 + 1, 1);
        char v48 = v75;
      }
      v48[2] = v50 + 1;
      uint64_t result = sub_1000442BC(v69, (uint64_t)v48 + v71 + v50 * v70);
      goto LABEL_19;
    }
    uint64_t v44 = sub_10009CA00();
    char v46 = v45;
    v42(v43, v7);
    v42(v16, v7);
    uint64_t v22 = v55;
    unint64_t v47 = v72;
    if ((v46 & 1) != 0 || v44 != v52) {
      goto LABEL_14;
    }
    uint64_t result = sub_100044320(v74);
LABEL_19:
    unint64_t v24 = v47 + 1;
    if (v63 == v24)
    {
      uint64_t v23 = v75;
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100043BFC()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension29FakeEnrollmentHistoryProvider__enrolledDeviceRecords;
  uint64_t v2 = sub_10000D308(&qword_1000D8488);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100043C7C()
{
  return type metadata accessor for FakeEnrollmentHistoryProvider();
}

uint64_t type metadata accessor for FakeEnrollmentHistoryProvider()
{
  uint64_t result = qword_1000D8360;
  if (!qword_1000D8360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100043CD0()
{
  sub_100043D6C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100043D6C()
{
  if (!qword_1000D8370)
  {
    sub_10000AF84((uint64_t *)&unk_1000D8378);
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D8370);
    }
  }
}

uint64_t sub_100043DC8(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return _swift_task_switch(sub_100043DE8, v1, 0);
}

uint64_t sub_100043DE8()
{
  swift_beginAccess();
  sub_10000D308(&qword_1000D8488);
  sub_10009CF10();
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100043E90(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_100043EB0, v1, 0);
}

uint64_t sub_100043EB0()
{
  sub_100043338(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100043F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100043F34, v3, 0);
}

uint64_t sub_100043F34()
{
  sub_1000434F4(v0[2], v0[3], v0[4]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100043F98()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100043FB8, v0, 0);
}

uint64_t sub_100043FB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100044068()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100044088, v0, 0);
}

uint64_t sub_100044088()
{
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  swift_retain();
  sub_10009CF40();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100044138(uint64_t a1)
{
  unint64_t result = sub_100044160();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100044160()
{
  unint64_t result = qword_1000D8480;
  if (!qword_1000D8480)
  {
    type metadata accessor for FakeEnrollmentHistoryProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8480);
  }
  return result;
}

uint64_t sub_1000441B8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10004423C()
{
  return sub_10009CF40();
}

uint64_t sub_1000442BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnrolledDeviceRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100044320(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EnrolledDeviceRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AddDevicesExtensionContainerViewModelProvider()
{
  return self;
}

id sub_1000443A0()
{
  uint64_t v1 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller____lazy_storage___catOperationQueue;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller____lazy_storage___catOperationQueue);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller____lazy_storage___catOperationQueue);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)CATSerialOperationQueue) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100044414()
{
  uint64_t v1 = v0;
  sub_10000FF9C(&v0[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider], *(void *)&v0[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider+ 24]);
  id v2 = sub_10003D090();
  [v2 invalidate];

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for AXMEnroller();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1000445C0()
{
  return type metadata accessor for AXMEnroller();
}

uint64_t type metadata accessor for AXMEnroller()
{
  uint64_t result = qword_1000D85A8;
  if (!qword_1000D85A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100044614(void *a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10009CE60();
  sub_10000D690(v6, (uint64_t)qword_1000E3488);
  uint64_t v7 = sub_10009CE40();
  os_log_type_t v8 = sub_10009DEA0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Fetch serial number operation finished", v9, 2u);
    swift_slowDealloc();
  }

  id v10 = [a1 error];
  if (v10)
  {
    id v69 = v10;
    unint64_t v11 = sub_10009CE40();
    os_log_type_t v12 = sub_10009DEB0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      v70[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      *(void *)&v77[0] = v69;
      id v14 = v69;
      sub_10000D308(&qword_1000D5858);
      uint64_t v15 = sub_10009DCF0();
      *(void *)&v77[0] = sub_10000DBA8(v15, v16, v70);
      sub_10009DFC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Fetch serial number operation finished with error: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v17 = v69;
    }
    return;
  }
  if ([a1 resultObject])
  {
    sub_10009E000();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v77, 0, 32);
  }
  sub_100010800((uint64_t)v77, (uint64_t)v70, &qword_1000D58B8);
  if (!v71)
  {
    sub_100016FBC((uint64_t)v70);
LABEL_19:
    id v44 = a1;
    char v45 = sub_10009CE40();
    os_log_type_t v46 = sub_10009DEB0();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = (uint8_t *)swift_slowAlloc();
      char v48 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v47 = 138412290;
      v70[0] = (uint64_t)v44;
      id v49 = v44;
      sub_10009DFC0();
      *char v48 = v44;

      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Unexpected resultObject from %@", v47, 0xCu);
      sub_10000D308(&qword_1000D5880);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  sub_100046A1C(0, &qword_1000D85D0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v64 = v1;
  id v18 = v76;
  id v19 = [v18 serialNumber];
  uint64_t v20 = sub_10009DC80();
  uint64_t v22 = v21;

  id v23 = [v18 deviceUDID];
  uint64_t v67 = sub_10009DC80();
  uint64_t v25 = v24;

  id v26 = [v18 modelIdentifier];
  uint64_t v66 = sub_10009DC80();
  uint64_t v28 = v27;

  id v29 = [v18 modelName];
  id v69 = (id)sub_10009DC80();
  uint64_t v31 = v30;

  id v65 = v18;
  v70[0] = sub_100046A1C(0, &qword_1000D85D8);
  sub_10000D308(&qword_1000D85E0);
  uint64_t v32 = sub_10009DCF0();
  unint64_t v34 = v33;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v68 = v28;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_10009CE40();
  os_log_type_t v36 = sub_10009DEA0();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v63 = v20;
    uint64_t v38 = v37;
    uint64_t v62 = swift_slowAlloc();
    *(void *)&v77[0] = v62;
    *(_DWORD *)uint64_t v38 = 136446466;
    swift_bridgeObjectRetain();
    v70[0] = sub_10000DBA8(v32, v34, (uint64_t *)v77);
    sub_10009DFC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 12) = 2082;
    v70[0] = v63;
    v70[1] = v22;
    v70[2] = v67;
    unint64_t v71 = v25;
    unint64_t v72 = (_UNKNOWN **)v66;
    uint64_t v73 = v68;
    id v74 = v69;
    uint64_t v75 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_10009DCF0();
    v70[0] = sub_10000DBA8(v39, v40, (uint64_t *)v77);
    sub_10009DFC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    os_log_type_t v41 = v36;
    uint64_t v42 = v25;
    swift_bridgeObjectRelease_n();
    uint64_t v43 = v22;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v41, "%{public}s finished with result: %{public}s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v20 = v63;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v42 = v25;
    swift_bridgeObjectRelease_n();
    uint64_t v43 = v22;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  unint64_t v71 = &type metadata for DMTResultBackedADEPrerequisites;
  unint64_t v72 = &off_1000CEEB8;
  unint64_t v50 = (void *)swift_allocObject();
  v70[0] = (uint64_t)v50;
  uint64_t v51 = v20;
  v50[2] = v20;
  v50[3] = v43;
  uint64_t v53 = v66;
  uint64_t v52 = v67;
  v50[4] = v67;
  v50[5] = v42;
  uint64_t v55 = v68;
  id v54 = v69;
  v50[6] = v53;
  v50[7] = v55;
  v50[8] = v54;
  v50[9] = v31;
  LOBYTE(v73) = 0;
  char v56 = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10009CEC0();
  uint64_t v57 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v5, 1, 1, v57);
  uint64_t v58 = (void *)swift_allocObject();
  v58[2] = 0;
  v58[3] = 0;
  v58[4] = v56;
  v58[5] = v51;
  v58[6] = v43;
  v58[7] = v52;
  v58[8] = v42;
  v58[9] = v53;
  id v59 = v69;
  v58[10] = v55;
  v58[11] = v59;
  v58[12] = v31;
  id v60 = v56;
  sub_100088B08((uint64_t)v5, (uint64_t)&unk_1000D85F0, (uint64_t)v58);
  swift_release();

  sub_100046864((uint64_t)v70);
}

uint64_t sub_100044F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100044F4C, 0, 0);
}

uint64_t sub_100044F4C()
{
  sub_100047A54(v0[3]);
  uint64_t v5 = (uint64_t (*)(_OWORD *, uint64_t))((char *)&dword_1000D85F8 + dword_1000D85F8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100044FFC;
  uint64_t v2 = v0[2];
  uint64_t v3 = (_OWORD *)v0[3];
  return v5(v3, v2);
}

uint64_t sub_100044FFC()
{
  uint64_t v1 = *(void *)(*v0 + 24);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_10001003C(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_100045174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[66] = v4;
  v5[65] = a4;
  v5[63] = a2;
  v5[64] = a3;
  v5[62] = a1;
  return _swift_task_switch(sub_1000451A0, 0, 0);
}

id sub_1000451A0()
{
  uint64_t v27 = v0;
  uint64_t v1 = (void *)(*(void *)(v0 + 528)
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_accountProvider);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10000FF9C(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_100010800(v0 + 240, v0 + 128, (uint64_t *)&unk_1000D5608);
  if (*(void *)(v0 + 136))
  {
    long long v4 = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 192);
    *(_OWORD *)(v0 + 96) = v4;
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 224);
    long long v5 = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 32) = v5;
    long long v6 = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 64) = v6;
    id result = [objc_allocWithZone((Class)DMTPerformAutomatedDeviceEnrollmentRequest) init];
    *(void *)(v0 + 536) = result;
    if (result)
    {
      os_log_type_t v8 = result;
      uint64_t v9 = *(void *)(v0 + 520);
      [result setAutomationBehavior:1];
      NSString v10 = sub_10009DC70();
      [v8 setNonce:v10];

      long long v11 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 400) = v11;
      *(unsigned char *)(v0 + 416) = *(unsigned char *)(v0 + 112);
      long long v12 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 368) = v12;
      sub_100047A54(v0 + 352);
      sub_1000468B8((uint64_t *)(v0 + 240));
      NSString v13 = sub_10009DC70();
      [v8 setOrganizationName:v13];

      uint64_t v14 = sub_100029C84();
      sub_10001003C(v0 + 352);
      [v8 setOrganizationType:v14];
      if (v9) {
        NSString v15 = sub_10009DC70();
      }
      else {
        NSString v15 = 0;
      }
      uint64_t v21 = *(void *)(v0 + 528);
      [v8 setMdmServerName:v15];

      uint64_t v22 = *(void *)(v21
                      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_networkInfoStore
                      + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v22 + 16) + **(int **)(v22 + 16));
      unint64_t v24 = (void *)swift_task_alloc();
      *(void *)(v0 + 544) = v24;
      *unint64_t v24 = v0;
      v24[1] = sub_1000455F0;
      return (id)v25(ObjectType, v22);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10009CE60();
    sub_10000D690(v16, (uint64_t)qword_1000E3488);
    id v17 = sub_10009CE40();
    os_log_type_t v18 = sub_10009DEB0();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)id v19 = 136315138;
      *(void *)(v0 + 488) = sub_10000DBA8(0xD000000000000029, 0x80000001000A89B0, &v26);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "We don't have an account in %s. Did the user sign out immediately after pairing a device?", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *(unsigned char *)(v0 + 418) = 3;
    sub_10009CEB0();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v20();
  }
  return result;
}

uint64_t sub_1000455F0(uint64_t a1, uint64_t a2)
{
  long long v4 = (void *)*v3;
  v4[69] = a1;
  v4[70] = a2;
  v4[71] = v2;
  swift_task_dealloc();
  if (v2) {
    long long v5 = sub_100045ED4;
  }
  else {
    long long v5 = sub_10004570C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10004570C()
{
  uint64_t v1 = *(void *)(v0 + 560);
  if (!v1)
  {
    sub_100034C6C(*(void *)(v0 + 552), 0);
LABEL_8:
    NSString v10 = *(void **)(v0 + 536);
    long long v11 = (void *)(*(void *)(v0 + 528)
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_currentNetworkPrimitives);
    uint64_t v12 = v11[3];
    uint64_t v13 = v11[4];
    sub_10000FF9C(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    uint64_t v14 = v11[3];
    uint64_t v15 = v11[4];
    sub_10000FF9C(v11, v14);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    [v10 setNetworkConfiguration:1];
    NSString v16 = sub_10009DC70();
    swift_bridgeObjectRelease();
    NSString v17 = sub_10009DC70();
    swift_bridgeObjectRelease();
    id v18 = [self credentialWithNetworkName:v16 credential:v17];

    [v10 setNetworkCredential:v18];
    goto LABEL_10;
  }
  if (v1 != 1)
  {
    if (v1 != 2)
    {
      uint64_t v2 = (void *)(*(void *)(v0 + 528)
                    + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_fileSystemStore);
      *(void *)(v0 + 576) = *v2;
      uint64_t v3 = v2[1];
      *(void *)(v0 + 584) = v3;
      *(void *)(v0 + 592) = swift_getObjectType();
      *(void *)(v0 + 600) = *(void *)(v3 + 24);
      *(void *)(v0 + 608) = (v3 + 24) & 0xFFFFFFFFFFFFLL | 0xA2EC000000000000;
      uint64_t v4 = sub_10009DE10();
      uint64_t v6 = v5;
      uint64_t v7 = sub_100045ADC;
      uint64_t v8 = v4;
      uint64_t v9 = v6;
      return _swift_task_switch(v7, v8, v9);
    }
    goto LABEL_8;
  }
  uint64_t v19 = *(void *)(v0 + 552);
  uint64_t v20 = *(void **)(v0 + 536);
  [v20 setNetworkConfiguration:3];
  NSString v21 = sub_10009DC70();
  NSString v22 = sub_10009DC70();
  id v18 = [self credentialWithNetworkName:v21 credential:v22];

  [v20 setNetworkCredential:v18];
  sub_100034C6C(v19, 1uLL);
LABEL_10:

  uint64_t v23 = *(void *)(v0 + 536);
  sub_10000FF9C((void *)(*(void *)(v0 + 528)+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider), *(void *)(*(void *)(v0 + 528)+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider+ 24));
  id v24 = sub_10003D090();
  id v25 = [v24 prepareTaskOperationForRequest:v23];

  if (!v25)
  {
    __break(1u);
    return _swift_task_switch(v7, v8, v9);
  }
  uint64_t v26 = *(void **)(v0 + 536);
  uint64_t v27 = *(void *)(v0 + 520);
  uint64_t v28 = *(void *)(v0 + 504);
  uint64_t v29 = *(void *)(v0 + 512);
  uint64_t v30 = *(void *)(v0 + 496);
  [v25 addTarget:*(void *)(v0 + 528) selector:"enrollmentOperationDidFinish:" forOperationEvents:6];
  id v31 = sub_1000443A0();
  [v31 addOperation:v25];

  *(void *)(v0 + 424) = v30;
  *(void *)(v0 + 432) = v28;
  *(void *)(v0 + 440) = v29;
  *(void *)(v0 + 448) = v27;
  *(unsigned char *)(v0 + 464) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10009CEC0();

  sub_100046864(v0 + 424);
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_100045ADC()
{
  uint64_t v1 = (void (*)(void *, uint64_t, uint64_t, void *, unint64_t, unint64_t, uint64_t, uint64_t))v0[75];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  uint64_t v4 = v0[71];
  uint64_t v5 = v0[70];
  uint64_t v6 = v0[69];
  unint64_t v7 = sub_10004690C();
  unint64_t v8 = sub_100046960();
  v1(&type metadata for Data, v6, v5, &type metadata for Data, v7, v8, v2, v3);
  v0[77] = v4;
  if (v4) {
    uint64_t v9 = sub_100046028;
  }
  else {
    uint64_t v9 = sub_100045BD8;
  }
  return _swift_task_switch(v9, 0, 0);
}

void sub_100045BD8()
{
  unint64_t v1 = *(void *)(v0 + 480);
  unint64_t v2 = *(void *)(v0 + 560);
  uint64_t v3 = *(void *)(v0 + 552);
  if (v1 >> 60 == 15)
  {
    sub_1000469B4();
    swift_allocError();
    *uint64_t v4 = 4;
    swift_willThrow();
    sub_100034C6C(v3, v2);
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10009CE60();
    sub_10000D690(v5, (uint64_t)qword_1000E3488);
    uint64_t v6 = sub_10009CE40();
    os_log_type_t v7 = sub_10009DEB0();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "We don't have any network info to share, we shouldn't have gotten this far", v8, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void **)(v0 + 536);

    *(unsigned char *)(v0 + 417) = 4;
    sub_10009CEB0();
    swift_errorRelease();
  }
  else
  {
    NSString v10 = *(void **)(v0 + 536);
    uint64_t v11 = *(void *)(v0 + 472);
    Class isa = sub_10009CB90().super.isa;
    [v10 setNetworkPayload:isa];

    [v10 setNetworkConfiguration:2];
    sub_100034C6C(v3, v2);
    sub_100046A08(v11, v1);
    uint64_t v13 = *(void *)(v0 + 536);
    sub_10000FF9C((void *)(*(void *)(v0 + 528)+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider), *(void *)(*(void *)(v0 + 528)+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider+ 24));
    id v14 = sub_10003D090();
    id v15 = [v14 prepareTaskOperationForRequest:v13];

    if (!v15)
    {
      __break(1u);
      return;
    }
    NSString v16 = *(void **)(v0 + 536);
    uint64_t v17 = *(void *)(v0 + 520);
    uint64_t v18 = *(void *)(v0 + 504);
    uint64_t v19 = *(void *)(v0 + 512);
    uint64_t v20 = *(void *)(v0 + 496);
    [v15 addTarget:*(void *)(v0 + 528) selector:"enrollmentOperationDidFinish:" forOperationEvents:6];
    id v21 = sub_1000443A0();
    [v21 addOperation:v15];

    *(void *)(v0 + 424) = v20;
    *(void *)(v0 + 432) = v18;
    *(void *)(v0 + 440) = v19;
    *(void *)(v0 + 448) = v17;
    *(unsigned char *)(v0 + 464) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10009CEC0();

    sub_100046864(v0 + 424);
  }
  NSString v22 = *(void (**)(void))(v0 + 8);
  v22();
}

uint64_t sub_100045ED4()
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  unint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEB0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "We don't have any network info to share, we shouldn't have gotten this far", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void **)(v0 + 536);

  *(unsigned char *)(v0 + 417) = 4;
  sub_10009CEB0();
  swift_errorRelease();

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100046028()
{
  sub_100034C6C(*(void *)(v0 + 552), *(void *)(v0 + 560));
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  unint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEB0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "We don't have any network info to share, we shouldn't have gotten this far", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void **)(v0 + 536);

  *(unsigned char *)(v0 + 417) = 4;
  sub_10009CEB0();
  swift_errorRelease();

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_100046188(void *a1)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  os_log_type_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Enrollment operation finished", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = [a1 error];
  if (v6)
  {
    id v13 = v6;
    os_log_type_t v7 = sub_10009CE40();
    os_log_type_t v8 = sub_10009DEB0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(void *)&v14[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      id v10 = v13;
      sub_10000D308(&qword_1000D5858);
      uint64_t v11 = sub_10009DCF0();
      sub_10000DBA8(v11, v12, (uint64_t *)v14);
      sub_10009DFC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Enrollment operation failed with error: %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    char v16 = 2;
    sub_10009CEC0();
    sub_100046864((uint64_t)v14);
    LOBYTE(v14[0]) = 5;
    sub_10009CEB0();
  }
}

uint64_t sub_1000464F4()
{
  uint64_t result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1000465B8()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)DMTFetchAutomatedDeviceEnrollmentPrerequisitesRequest) init];
  if (v2)
  {
    os_log_type_t v3 = v2;
    sub_10000FF9C((void *)(v0+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider), *(void *)(v0+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider+ 24));
    id v4 = sub_10003D090();
    id v5 = [v4 prepareTaskOperationForRequest:v3];

    if (v5)
    {
      uint64_t v9[4] = sub_100046754;
      v9[5] = 0;
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 1107296256;
      void v9[2] = sub_100026280;
      v9[3] = &unk_1000CCBB0;
      id v6 = _Block_copy(v9);
      id v7 = v5;
      sub_100046854((uint64_t)sub_100046754);
      swift_release();
      [v7 setCompletionBlock:v6];
      _Block_release(v6);

      [v7 addTarget:v1 selector:"fetchADEPrerequisitesOperationDidFinish:" forOperationEvents:6];
      id v8 = sub_1000443A0();
      [v8 addOperation:v7];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100046754()
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10009CE60();
  sub_10000D690(v0, (uint64_t)qword_1000E3488);
  oslog = sub_10009CE40();
  os_log_type_t v1 = sub_10009DEA0();
  if (os_log_type_enabled(oslog, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Serial number request completed", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10004683C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004684C()
{
  return swift_release();
}

uint64_t sub_100046854(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100046864(uint64_t a1)
{
  return a1;
}

uint64_t *sub_1000468B8(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10004690C()
{
  unint64_t result = qword_1000D85C0;
  if (!qword_1000D85C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D85C0);
  }
  return result;
}

unint64_t sub_100046960()
{
  unint64_t result = qword_1000DA4B0;
  if (!qword_1000DA4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA4B0);
  }
  return result;
}

unint64_t sub_1000469B4()
{
  unint64_t result = qword_1000D85C8;
  if (!qword_1000D85C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D85C8);
  }
  return result;
}

uint64_t sub_100046A08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000EE7C(a1, a2);
  }
  return a1;
}

uint64_t sub_100046A1C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100046A58()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100046AA8()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100046B08()
{
  uint64_t v2 = *(void *)(v0 + 32);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[2] = v2;
  v3[3] = v0 + 40;
  v3[1] = sub_10000CD64;
  return _swift_task_switch(sub_100044F4C, 0, 0);
}

uint64_t sub_100046BB8(_OWORD *a1, uint64_t a2)
{
  v2[37] = a2;
  v2[12] = &type metadata for DMTResultBackedADEPrerequisites;
  v2[13] = &off_1000CEEB8;
  id v4 = (_OWORD *)swift_allocObject();
  v2[9] = v4;
  long long v5 = a1[1];
  v4[1] = *a1;
  v4[2] = v5;
  long long v6 = a1[3];
  v4[3] = a1[2];
  v4[4] = v6;
  sub_100047A54((uint64_t)a1);
  return _swift_task_switch(sub_100046C64, 0, 0);
}

uint64_t sub_100046C64()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 296)
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_mdmServerInfoStore);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10000FF9C(v1, v2);
  long long v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v4;
  *id v4 = v0;
  v4[1] = sub_100046D88;
  return v6(v0 + 232, v2, v3);
}

uint64_t sub_100046D88()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000472B4;
  }
  else {
    uint64_t v2 = sub_100046E9C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100046E9C()
{
  uint64_t v1 = sub_10000FF9C((void *)(v0 + 72), *(void *)(v0 + 96));
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  *(void *)(v0 + 320) = v2;
  uint64_t v4 = sub_10000FF9C((void *)(v0 + 72), *(void *)(v0 + 96));
  uint64_t v6 = v4[2];
  uint64_t v5 = v4[3];
  *(void *)(v0 + 328) = v5;
  sub_100010800(v0 + 232, v0 + 192, &qword_1000D9E10);
  if (*(void *)(v0 + 200) == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    char v9 = 0;
  }
  else
  {
    sub_100034F80(v0 + 192, v0 + 152);
    sub_100034F80(v0 + 152, v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
    if (v8)
    {
      if (v8 == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100047AAC(v0 + 232);
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        char v9 = 1;
      }
      else
      {
        uint64_t v7 = *(void *)(v0 + 112);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100047AAC(v0 + 232);
        char v9 = 2;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100047AAC(v0 + 232);
      uint64_t v7 = 0;
      char v9 = 0;
    }
  }
  *(void *)(v0 + 336) = v8;
  *(void *)(v0 + 16) = v3;
  uint64_t v10 = *(void *)(v0 + 296);
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v6;
  *(void *)(v0 + 40) = v5;
  *(unsigned char *)(v0 + 48) = v9;
  *(void *)(v0 + 56) = v7;
  *(void *)(v0 + 64) = v8;
  uint64_t v11 = *(void *)(v10
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_accountProvider
                  + 24);
  uint64_t v12 = *(void *)(v10
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_accountProvider
                  + 32);
  sub_10000FF9C((void *)(v10 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_accountProvider), v11);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 40) + **(int **)(v12 + 40));
  id v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v13;
  *id v13 = v0;
  v13[1] = sub_1000470F8;
  return v15(v0 + 16, v11, v12);
}

uint64_t sub_1000470F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(void **)v5;
  uint64_t v11 = *(void **)v5;
  *(void *)(*(void *)v5 + 352) = v4;
  swift_task_dealloc();
  if (v4)
  {
    uint64_t v12 = sub_100047740;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10[45] = a4;
    v10[46] = a2;
    swift_bridgeObjectRelease();
    id v13 = (void *)swift_task_alloc();
    v10[47] = v13;
    *id v13 = v11;
    v13[1] = sub_1000475AC;
    v13[66] = v10[37];
    v13[65] = a4;
    v13[63] = a2;
    v13[64] = a3;
    v13[62] = a1;
    uint64_t v12 = sub_1000451A0;
  }
  return _swift_task_switch(v12, 0, 0);
}

uint64_t sub_1000472B4()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(void *)(v0 + 312);
  *(void *)(v0 + 272) = v1;
  swift_errorRetain();
  sub_10000D308(&qword_1000D5858);
  if (swift_dynamicCast())
  {
    int v2 = *(unsigned __int8 *)(v0 + 145);
    if (v2 == 6)
    {
      swift_errorRelease();
      *(unsigned char *)(v0 + 147) = 2;
      goto LABEL_12;
    }
    if (v2 == 7)
    {
      swift_errorRelease();
      *(unsigned char *)(v0 + 148) = 0;
LABEL_12:
      sub_10009CEB0();
      goto LABEL_13;
    }
  }
  swift_errorRelease();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10009CE60();
  sub_10000D690(v3, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_10009CE40();
  os_log_type_t v5 = sub_10009DEB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    *(void *)(v0 + 280) = v1;
    swift_errorRetain();
    uint64_t v7 = sub_10009DCF0();
    *(void *)(v0 + 288) = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch the nonce with error: '%s'", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  *(unsigned char *)(v0 + 146) = 2;
  sub_10009CEB0();
LABEL_13:
  swift_errorRelease();
  sub_1000100E8(v0 + 72);
  char v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1000475AC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000476E0, 0, 0);
}

uint64_t sub_1000476E0()
{
  sub_1000100E8(v0 + 72);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100047740()
{
  uint64_t v12 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 352);
  *(void *)(v0 + 272) = v1;
  swift_errorRetain();
  sub_10000D308(&qword_1000D5858);
  if (swift_dynamicCast())
  {
    int v2 = *(unsigned __int8 *)(v0 + 145);
    if (v2 == 6)
    {
      swift_errorRelease();
      *(unsigned char *)(v0 + 147) = 2;
      goto LABEL_12;
    }
    if (v2 == 7)
    {
      swift_errorRelease();
      *(unsigned char *)(v0 + 148) = 0;
LABEL_12:
      sub_10009CEB0();
      goto LABEL_13;
    }
  }
  swift_errorRelease();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10009CE60();
  sub_10000D690(v3, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_10009CE40();
  os_log_type_t v5 = sub_10009DEB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    *(void *)(v0 + 280) = v1;
    swift_errorRetain();
    uint64_t v7 = sub_10009DCF0();
    *(void *)(v0 + 288) = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch the nonce with error: '%s'", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  *(unsigned char *)(v0 + 146) = 2;
  sub_10009CEB0();
LABEL_13:
  swift_errorRelease();
  sub_1000100E8(v0 + 72);
  char v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100047A54(uint64_t a1)
{
  return a1;
}

uint64_t sub_100047AAC(uint64_t a1)
{
  return a1;
}

unint64_t destroy for NetworkInfo(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s46AddDevicesToAutomatedDeviceEnrollmentExtension11NetworkInfoOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for NetworkInfo(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NetworkInfo(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NetworkInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100047D04(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100047D1C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInfo()
{
  return &type metadata for NetworkInfo;
}

uint64_t sub_100047D4C(char a1)
{
  return *(void *)&aCredentipayloa_2[8 * a1];
}

uint64_t sub_100047D6C(char a1)
{
  if (a1) {
    return 0x4E64616F6C796170;
  }
  else {
    return 0x546B726F7774656ELL;
  }
}

uint64_t sub_100047DAC(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  if (!v3) {
    return !v4;
  }
  if (v3 == 1) {
    return v4 == 1;
  }
  if (v4 < 2) {
    return 0;
  }
  if (*a1 != *a2 || v3 != v4) {
    return sub_10009E260();
  }
  return 1;
}

uint64_t sub_100047E0C(char *a1, char *a2)
{
  return sub_10000AA54(*a1, *a2);
}

Swift::Int sub_100047E18()
{
  return sub_100029268();
}

uint64_t sub_100047E20()
{
  return sub_10002A9DC();
}

Swift::Int sub_100047E28()
{
  return sub_10002953C();
}

uint64_t sub_100047E30@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10004831C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100047E60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100047D4C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100047E8C()
{
  return sub_10009DD90();
}

uint64_t sub_100047EEC()
{
  return sub_10009DD80();
}

uint64_t sub_100047F3C(char *a1, char *a2)
{
  return sub_10000A9A8(*a1, *a2);
}

Swift::Int sub_100047F48()
{
  return sub_1000292D4();
}

uint64_t sub_100047F50()
{
  return sub_10002A968();
}

Swift::Int sub_100047F58()
{
  return sub_1000295A4();
}

uint64_t sub_100047F60@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1000CAEC8;
  v8._object = v3;
  Swift::Int v5 = sub_10009E140(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_100047FC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100047D6C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100047FEC()
{
  return sub_100047D6C(*v0);
}

uint64_t sub_100047FF4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_1000CAEC8;
  v9._object = a2;
  Swift::Int v6 = sub_10009E140(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void sub_100048058(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100048064(uint64_t a1)
{
  unint64_t v2 = sub_100048708();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000480A0(uint64_t a1)
{
  unint64_t v2 = sub_100048708();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000480EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000D308(&qword_1000D8620);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_100048708();
  sub_10009E320();
  if (!a3)
  {
    __int16 v12 = 0;
    sub_100048804();
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    char v14 = 2;
    char v13 = 0;
    sub_100048804();
LABEL_5:
    sub_10009E220();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  char v17 = 1;
  char v16 = 0;
  sub_100048804();
  sub_10009E220();
  if (!v3)
  {
    char v15 = 1;
    sub_10009E200();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000482D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100048368(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100048300(void *a1)
{
  return sub_1000480EC(a1, *v1, v1[1]);
}

uint64_t sub_10004831C(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000CAE60;
  v6._object = a2;
  unint64_t v4 = sub_10009E140(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_100048368(void *a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D8600);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_10000FF9C(a1, v7);
  sub_100048708();
  sub_10009E310();
  if (v1)
  {
    sub_1000100E8((uint64_t)a1);
  }
  else
  {
    char v16 = 0;
    sub_10004875C();
    sub_10009E1B0();
    uint64_t v7 = v17;
    if (v17)
    {
      if (v17 == 1)
      {
        char v15 = 1;
        uint64_t v7 = sub_10009E190();
        if (qword_1000D51D8 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_10009CE60();
        sub_10000D690(v9, (uint64_t)qword_1000E3488);
        uint64_t v10 = sub_10009CE40();
        os_log_type_t v11 = sub_10009DEA0();
        if (os_log_type_enabled(v10, v11))
        {
          __int16 v12 = (uint8_t *)swift_slowAlloc();
          os_log_t v14 = v10;
          *(_WORD *)__int16 v12 = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, v11, "Decoded network type is networkPayload)", v12, 2u);
          uint64_t v10 = v14;
          swift_slowDealloc();
        }
      }
      else
      {
        uint64_t v7 = 0;
      }
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1000100E8((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_100048708()
{
  unint64_t result = qword_1000D8608;
  if (!qword_1000D8608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8608);
  }
  return result;
}

unint64_t sub_10004875C()
{
  unint64_t result = qword_1000D8610;
  if (!qword_1000D8610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8610);
  }
  return result;
}

unint64_t sub_1000487B0()
{
  unint64_t result = qword_1000D8618;
  if (!qword_1000D8618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8618);
  }
  return result;
}

unint64_t sub_100048804()
{
  unint64_t result = qword_1000D8628;
  if (!qword_1000D8628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8628);
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInfo.NetworkInfoCodingError()
{
  return &type metadata for NetworkInfo.NetworkInfoCodingError;
}

unsigned char *storeEnumTagSinglePayload for NetworkInfo.NetworkType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100048934);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInfo.NetworkType()
{
  return &type metadata for NetworkInfo.NetworkType;
}

unsigned char *storeEnumTagSinglePayload for NetworkInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100048A38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkInfo.CodingKeys()
{
  return &type metadata for NetworkInfo.CodingKeys;
}

unint64_t sub_100048A74()
{
  unint64_t result = qword_1000D8630;
  if (!qword_1000D8630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8630);
  }
  return result;
}

unint64_t sub_100048ACC()
{
  unint64_t result = qword_1000D8638;
  if (!qword_1000D8638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8638);
  }
  return result;
}

unint64_t sub_100048B24()
{
  unint64_t result = qword_1000D8640;
  if (!qword_1000D8640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8640);
  }
  return result;
}

unint64_t sub_100048B7C()
{
  unint64_t result = qword_1000D8648;
  if (!qword_1000D8648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8648);
  }
  return result;
}

unint64_t sub_100048BD0()
{
  unint64_t result = qword_1000D8650;
  if (!qword_1000D8650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8650);
  }
  return result;
}

uint64_t sub_100048C24()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcreteVPScannerViewFinderMetricsProvider()
{
  return self;
}

uint64_t sub_100048C80()
{
  uint64_t result = sub_10009D940();
  qword_1000E34F8 = result;
  return result;
}

uint64_t sub_100048CC0()
{
  uint64_t result = sub_10009D940();
  qword_1000E3500 = result;
  return result;
}

uint64_t sub_100048CF8()
{
  uint64_t result = sub_10009D940();
  qword_1000E3508 = result;
  return result;
}

uint64_t sub_100048D30()
{
  uint64_t result = sub_10009D940();
  qword_1000E3510 = result;
  return result;
}

void sub_100048D68()
{
  qword_1000E3518 = 0x4039000000000000;
}

void sub_100048D78()
{
  qword_1000E3520 = 0x4041800000000000;
}

void sub_100048D8C()
{
  qword_1000E3528 = 0x4041800000000000;
}

void sub_100048DA0()
{
  qword_1000E3530 = 0x4039000000000000;
}

void sub_100048DB0()
{
  qword_1000E3538 = 1768319351;
  unk_1000E3540 = 0xE400000000000000;
}

void sub_100048DCC()
{
  qword_1000E3548 = 1918985575;
  unk_1000E3550 = 0xE400000000000000;
}

void sub_100048DE8()
{
  qword_1000E3558 = 0x6C75622E7473696CLL;
  unk_1000E3560 = 0xEB0000000074656CLL;
}

unint64_t destroy for MDMServerInfo(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MDMServerInfo(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MDMServerInfo(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  return a1;
}

uint64_t assignWithTake for MDMServerInfo(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MDMServerInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MDMServerInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_10004910C(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MDMServerInfo()
{
  return &type metadata for MDMServerInfo;
}

uint64_t sub_100049144(char a1)
{
  if (!a1) {
    return 0x6669636570736E75;
  }
  if (a1 == 1) {
    return 0xD000000000000014;
  }
  return 0x6369666963657073;
}

uint64_t sub_1000491A8(void *a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D8758);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  id v25 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000D308(&qword_1000D8760);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  __chkstk_darwin(v4);
  long long v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D8768);
  uint64_t v22 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000D308(&qword_1000D8770);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000FF9C(a1, a1[3]);
  sub_10004A300();
  sub_10009E320();
  sub_100034F80(v38, (uint64_t)&v33);
  uint64_t v14 = v34;
  if (v34 == 1)
  {
    LOBYTE(v28) = 1;
    sub_10004A3A8();
    sub_10009E1D0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (!v34)
  {
    LOBYTE(v28) = 0;
    sub_10004A3FC();
    sub_10009E1D0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v16 = v33;
  uint64_t v17 = v35;
  uint64_t v38 = v36;
  char v18 = v37;
  LOBYTE(v28) = 2;
  sub_10004A354();
  uint64_t v19 = v25;
  sub_10009E1D0();
  uint64_t v28 = v16;
  uint64_t v29 = v14;
  uint64_t v30 = v17;
  uint64_t v31 = v38;
  char v32 = v18;
  sub_100028888();
  uint64_t v20 = v27;
  sub_10009E220();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_100049594()
{
  return sub_100049144(*v0);
}

uint64_t sub_10004959C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100049B00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000495C4(uint64_t a1)
{
  unint64_t v2 = sub_10004A300();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100049600(uint64_t a1)
{
  unint64_t v2 = sub_10004A300();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10004963C()
{
  return 0;
}

uint64_t sub_100049648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_100049678(uint64_t a1)
{
  unint64_t v2 = sub_10004A3A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000496B4(uint64_t a1)
{
  unint64_t v2 = sub_10004A3A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000496F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100049C58(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100049720(uint64_t a1)
{
  unint64_t v2 = sub_10004A354();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10004975C(uint64_t a1)
{
  unint64_t v2 = sub_10004A354();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100049798(uint64_t a1)
{
  unint64_t v2 = sub_10004A3FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000497D4(uint64_t a1)
{
  unint64_t v2 = sub_10004A3FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100049810(uint64_t a1, uint64_t a2)
{
  sub_100034F80(a1, (uint64_t)v4);
  sub_100034F80(a2, (uint64_t)v5);
  return sub_1000498F4((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_10004985C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100049D04(a1, (uint64_t)v5);
  if (!v2) {
    return sub_100034F80((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_1000498A4(void *a1)
{
  sub_100034F80(v1, (uint64_t)v4);
  return sub_1000491A8(a1);
}

uint64_t sub_1000498F4(uint64_t a1, uint64_t a2)
{
  sub_100034F80(a1, (uint64_t)&v22);
  uint64_t v3 = v23;
  if (v23 == 1)
  {
    sub_100034F80(a2, (uint64_t)&v17);
    return v18 == 1;
  }
  if (!v23)
  {
    sub_100034F80(a2, (uint64_t)&v17);
    return !v18;
  }
  uint64_t v5 = v22;
  uint64_t v6 = v24;
  uint64_t v7 = v25;
  int v8 = v26;
  sub_100034F80(a2, (uint64_t)&v17);
  if (v18 >= 2)
  {
    if (uint64_t v9 = v19, v10 = v20, v11 = v21, v5 == v17) && v3 == v18 || (sub_10009E260())
    {
      if (v6 == v9 && v7 == v10 || (sub_10009E260() & 1) != 0)
      {
        unint64_t v12 = 0xD000000000000013;
        if (v8)
        {
          if (v8 == 1)
          {
            unint64_t v13 = 0x80000001000A6190;
            unint64_t v14 = 0xD000000000000013;
            if (v11) {
              goto LABEL_17;
            }
LABEL_22:
            unint64_t v15 = 0xE700000000000000;
            unint64_t v12 = 0x52414C55474552;
            goto LABEL_24;
          }
          unint64_t v13 = 0xE90000000000004DLL;
          unint64_t v14 = 0x444D5F44554F4C43;
          if (!v11) {
            goto LABEL_22;
          }
        }
        else
        {
          unint64_t v13 = 0xE700000000000000;
          unint64_t v14 = 0x52414C55474552;
          if (!v11) {
            goto LABEL_22;
          }
        }
LABEL_17:
        if (v11 == 1)
        {
          unint64_t v15 = 0x80000001000A6190;
        }
        else
        {
          unint64_t v15 = 0xE90000000000004DLL;
          unint64_t v12 = 0x444D5F44554F4C43;
        }
LABEL_24:
        if (v14 == v12 && v13 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
        char v16 = sub_10009E260();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (v16 & 1) != 0;
      }
    }
  }
  return 0;
}

uint64_t sub_100049B00(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569;
  if (v3 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001000A8B40 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369666963657073 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_10009E260();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100049C58(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65767265736D646DLL && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10009E260();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100049CE8()
{
  return 0x65767265736D646DLL;
}

uint64_t sub_100049D04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v34 = sub_10000D308(&qword_1000D8710);
  uint64_t v36 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10000D308(&qword_1000D8718);
  uint64_t v35 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000D308(&qword_1000D8720);
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000D308(&qword_1000D8728);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v39 = a1;
  sub_10000FF9C(a1, v13);
  sub_10004A300();
  uint64_t v14 = v45;
  sub_10009E310();
  if (!v14)
  {
    uint64_t v45 = v6;
    unint64_t v15 = v38;
    uint64_t v16 = sub_10009E1C0();
    if (*(void *)(v16 + 16) == 1)
    {
      if (*(unsigned char *)(v16 + 32))
      {
        if (*(unsigned char *)(v16 + 32) != 1)
        {
          uint64_t v45 = v10;
          LOBYTE(v40) = 2;
          sub_10004A354();
          sub_10009E150();
          uint64_t v27 = v37;
          sub_100028770();
          uint64_t v29 = v34;
          sub_10009E1B0();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v29);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v9);
          uint64_t v17 = v40;
          uint64_t v21 = v41;
          uint64_t v18 = v42;
          uint64_t v19 = v43;
          char v20 = v44;
          uint64_t v30 = (uint64_t)v39;
LABEL_10:
          uint64_t result = sub_1000100E8(v30);
          *(void *)uint64_t v27 = v17;
          *(void *)(v27 + 8) = v21;
          *(void *)(v27 + 16) = v18;
          *(void *)(v27 + 24) = v19;
          *(unsigned char *)(v27 + 32) = v20;
          return result;
        }
        LOBYTE(v40) = 1;
        sub_10004A3A8();
        sub_10009E150();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v33);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        char v20 = 0;
        uint64_t v21 = 1;
      }
      else
      {
        LOBYTE(v40) = 0;
        sub_10004A3FC();
        sub_10009E150();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v45);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        uint64_t v17 = 0;
        uint64_t v21 = 0;
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        char v20 = 0;
      }
      uint64_t v30 = (uint64_t)v39;
      uint64_t v27 = v37;
      goto LABEL_10;
    }
    uint64_t v22 = sub_10009E0A0();
    swift_allocError();
    uint64_t v23 = v12;
    uint64_t v24 = v9;
    unsigned __int8 v26 = v25;
    sub_10000D308(&qword_1000D8738);
    *unsigned __int8 v26 = &type metadata for MDMServerInfo;
    sub_10009E160();
    sub_10009E090();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v26, enum case for DecodingError.typeMismatch(_:), v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v24);
  }
  return sub_1000100E8((uint64_t)v39);
}

unint64_t sub_10004A300()
{
  unint64_t result = qword_1000D8730;
  if (!qword_1000D8730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8730);
  }
  return result;
}

unint64_t sub_10004A354()
{
  unint64_t result = qword_1000D8740;
  if (!qword_1000D8740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8740);
  }
  return result;
}

unint64_t sub_10004A3A8()
{
  unint64_t result = qword_1000D8748;
  if (!qword_1000D8748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8748);
  }
  return result;
}

unint64_t sub_10004A3FC()
{
  unint64_t result = qword_1000D8750;
  if (!qword_1000D8750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8750);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MDMServerInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004A51CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MDMServerInfo.CodingKeys()
{
  return &type metadata for MDMServerInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for MDMServerInfo.UnspecifiedCodingKeys()
{
  return &type metadata for MDMServerInfo.UnspecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for MDMServerInfo.DefaultForDeviceTypeCodingKeys()
{
  return &type metadata for MDMServerInfo.DefaultForDeviceTypeCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MDMServerInfo.SpecificCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10004A610);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MDMServerInfo.SpecificCodingKeys()
{
  return &type metadata for MDMServerInfo.SpecificCodingKeys;
}

unint64_t sub_10004A64C()
{
  unint64_t result = qword_1000D8778;
  if (!qword_1000D8778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8778);
  }
  return result;
}

unint64_t sub_10004A6A4()
{
  unint64_t result = qword_1000D8780;
  if (!qword_1000D8780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8780);
  }
  return result;
}

unint64_t sub_10004A6FC()
{
  unint64_t result = qword_1000D8788;
  if (!qword_1000D8788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8788);
  }
  return result;
}

unint64_t sub_10004A754()
{
  unint64_t result = qword_1000D8790;
  if (!qword_1000D8790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8790);
  }
  return result;
}

unint64_t sub_10004A7AC()
{
  unint64_t result = qword_1000D8798;
  if (!qword_1000D8798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8798);
  }
  return result;
}

unint64_t sub_10004A804()
{
  unint64_t result = qword_1000D87A0;
  if (!qword_1000D87A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D87A0);
  }
  return result;
}

unint64_t sub_10004A85C()
{
  unint64_t result = qword_1000D87A8;
  if (!qword_1000D87A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D87A8);
  }
  return result;
}

unint64_t sub_10004A8B4()
{
  unint64_t result = qword_1000D87B0;
  if (!qword_1000D87B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D87B0);
  }
  return result;
}

unint64_t sub_10004A90C()
{
  unint64_t result = qword_1000D87B8;
  if (!qword_1000D87B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D87B8);
  }
  return result;
}

unint64_t sub_10004A964()
{
  unint64_t result = qword_1000D87C0;
  if (!qword_1000D87C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D87C0);
  }
  return result;
}

uint64_t sub_10004A9BC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10004AA30()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_10009D000();
  swift_release();
  id v2 = [self defaultCenter];
  int v3 = v2;
  if (*(void *)(v1
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_didBecomeActiveNotificationObserver))
    objc_msgSend(v2, "removeObserver:");
  uint64_t v4 = *(void *)(v1
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_willResignActiveNotificationObserver);
  if (v4)
  {
    swift_unknownObjectRetain_n();
    [v3 removeObserver:v4];
    swift_unknownObjectRelease_n();
  }

  swift_release();
  uint64_t v5 = v1
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor__networkStatus;
  uint64_t v6 = sub_10000D308(&qword_1000D76D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_10004AB5C()
{
  sub_10004AA30();

  return swift_deallocClassInstance();
}

uint64_t sub_10004ABB4()
{
  return type metadata accessor for NWPathMonitorBackedWiFiNetworkStatusMonitor();
}

uint64_t type metadata accessor for NWPathMonitorBackedWiFiNetworkStatusMonitor()
{
  uint64_t result = qword_1000D8810;
  if (!qword_1000D8810) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004AC08()
{
  sub_100039674();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10004ACBC(uint64_t a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D76D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor__networkStatus;
  LOBYTE(aBlock) = 0;
  sub_10009CF00();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7, v6, v3);
  uint64_t v8 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_didBecomeActiveNotificationObserver;
  *(void *)(v1
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_didBecomeActiveNotificationObserver) = 0;
  uint64_t v9 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_willResignActiveNotificationObserver;
  *(void *)(v1
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_willResignActiveNotificationObserver) = 0;
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_isMonitoringWiFi) = 0;
  *(void *)(v1 + 16) = a1;
  uint64_t v10 = self;
  swift_retain();
  id v11 = [v10 defaultCenter];
  if (qword_1000D5200 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1000E34E8;
  uint64_t v13 = self;
  id v14 = [v13 mainQueue];
  unsigned __int8 v26 = sub_10004B978;
  uint64_t v27 = v1;
  aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_100069B40;
  uint64_t v25 = &unk_1000CD0B8;
  unint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v16 = [v11 addObserverForName:v12 object:0 queue:v14 usingBlock:v15];
  _Block_release(v15);

  *(void *)(v1 + v8) = v16;
  swift_unknownObjectRelease();
  if (qword_1000D51F8 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1000E34E0;
  id v18 = [v13 mainQueue];
  unsigned __int8 v26 = sub_10004B994;
  uint64_t v27 = v1;
  aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_100069B40;
  uint64_t v25 = &unk_1000CD0E0;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v20 = [v11 addObserverForName:v17 object:0 queue:v18 usingBlock:v19];

  swift_release();
  _Block_release(v19);

  *(void *)(v1 + v9) = v20;
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_10004B054()
{
  uint64_t v0 = sub_10009D020();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10009D030();
  int v4 = (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for NWPath.Status.satisfied(_:))
  {
    swift_unownedRetainStrong();
    swift_getKeyPath();
    swift_getKeyPath();
    v8[12] = 1;
  }
  else
  {
    int v5 = v4;
    if (v4 == enum case for NWPath.Status.unsatisfied(_:))
    {
      swift_unownedRetainStrong();
      swift_getKeyPath();
      swift_getKeyPath();
      v8[14] = 2;
    }
    else
    {
      int v7 = enum case for NWPath.Status.requiresConnection(_:);
      swift_unownedRetainStrong();
      swift_getKeyPath();
      swift_getKeyPath();
      if (v5 != v7)
      {
        v8[15] = 2;
        sub_10009CF40();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
      }
      v8[13] = 3;
    }
  }
  return sub_10009CF40();
}

void sub_10004B260()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009CFC0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10009CE60();
  sub_10000D690(v6, (uint64_t)qword_1000E3488);
  int v7 = sub_10009CE40();
  os_log_type_t v8 = sub_10009DEA0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received didBecomeActiveNotification - Start network monitoring", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_isMonitoringWiFi;
  if ((*(unsigned char *)(v1
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_isMonitoringWiFi) & 1) == 0)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for NWInterface.InterfaceType.wifi(_:), v2);
    sub_10009D010();
    swift_allocObject();
    *(void *)(v1 + 16) = sub_10009CFE0();
    swift_release();
    sub_10004B43C();
    *(unsigned char *)(v1 + v10) = 1;
  }
}

uint64_t sub_10004B43C()
{
  uint64_t v1 = sub_10009DB10();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B664();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchQoS.QoSClass.userInteractive(_:), v1);
  int v5 = (void *)sub_10009DF20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_retain();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v0;
  sub_100046854((uint64_t)sub_10004B874);
  sub_10009CFD0();
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_retain();
  sub_10009CFF0();

  return swift_release();
}

void sub_10004B5F0()
{
  uint64_t v1 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    int v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received willResignActiveNotification - Stop network monitoring", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_isMonitoringWiFi;
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension43NWPathMonitorBackedWiFiNetworkStatusMonitor_isMonitoringWiFi) == 1)
  {
    swift_retain();
    sub_10009D000();
    swift_release();
    *(unsigned char *)(v1 + v6) = 0;
  }
}

uint64_t sub_10004B6FC()
{
  uint64_t v0 = sub_10000D308(&qword_1000D76C8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D76D0);
  sub_10009CF10();
  swift_endAccess();
  sub_100039A84();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_10004B818()
{
  return sub_10004B43C();
}

uint64_t sub_10004B83C()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004B874()
{
  return sub_10004B054();
}

uint64_t sub_10004B87C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10004B900()
{
  return sub_10009CF40();
}

uint64_t sub_10004B97C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004B98C()
{
  return swift_release();
}

uint64_t sub_10004B9A0()
{
  sub_1000102FC(v0 + 56, (uint64_t)v20);
  sub_1000102FC(v0 + 16, (uint64_t)v18);
  uint64_t v1 = sub_100010138((uint64_t)v18, v19);
  __chkstk_darwin(v1);
  char v3 = (uint64_t *)((char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v4 + 16))(v3);
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for ConcreteVPScannerViewFinderMetricsProvider();
  v17[3] = v6;
  v17[4] = &off_1000CCE68;
  v17[0] = v5;
  type metadata accessor for VisualPinScannerViewModel();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_100010138((uint64_t)v17, v6);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  uint64_t v12 = *v10;
  uint64_t v15 = v6;
  id v16 = &off_1000CCE68;
  *(void *)&long long v14 = v12;
  sub_1000107E8(v20, v7 + 16);
  sub_1000107E8(&v14, v7 + 56);
  sub_1000100E8((uint64_t)v17);
  sub_1000100E8((uint64_t)v18);
  return v7;
}

uint64_t type metadata accessor for VisualPinScannerViewModelProvider()
{
  return self;
}

uint64_t *sub_10004BBA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    swift_retain();
    swift_retain();
    sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10009D120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    id v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
  }
  swift_retain();
  return a1;
}

uint64_t sub_10004BCF0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_10004BDB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  swift_retain();
  swift_retain();
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_10009D120();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  return a1;
}

void *sub_10004BEB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100010864((uint64_t)a1 + v6, (uint64_t *)&unk_1000DA200);
    sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_10009D120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10004BFFC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_10009D120();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_10004C0EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_100010864((uint64_t)a1 + v7, (uint64_t *)&unk_1000DA200);
    uint64_t v10 = sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_10009D120();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_10004C220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004C234);
}

uint64_t sub_10004C234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000D308(&qword_1000D6408);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10004C2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004C2FC);
}

uint64_t sub_10004C2FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10000D308(&qword_1000D6408);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SettingsView()
{
  uint64_t result = qword_1000D8A70;
  if (!qword_1000D8A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004C3F4()
{
  sub_10001C290();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10004C4A0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10004C4BC(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = type metadata accessor for SettingsView();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v24 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000D308(&qword_1000D8AB0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000D308(&qword_1000D8AB8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10000D308(&qword_1000D8AC0);
  __chkstk_darwin(v23);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v1;
  uint64_t v28 = v1;
  sub_10000D308(&qword_1000D8AC8);
  sub_100015700(&qword_1000D8AD0, &qword_1000D8AC8);
  sub_10009D190();
  NSString v13 = sub_10009DC70();
  id v14 = [self colorNamed:v13];

  if (v14)
  {
    uint64_t v15 = sub_10009D8A0();
    char v16 = sub_10009D600();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
    uint64_t v17 = &v10[*(int *)(v8 + 36)];
    *(void *)uint64_t v17 = v15;
    v17[8] = v16;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v18 = v25;
    sub_100052D98(v26, v25);
    unint64_t v19 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v20 = swift_allocObject();
    sub_100052E00(v18, v20 + v19);
    sub_100010720((uint64_t)v10, (uint64_t)v12, &qword_1000D8AB8);
    uint64_t v21 = (uint64_t (**)())&v12[*(int *)(v23 + 36)];
    *uint64_t v21 = sub_100052E64;
    v21[1] = (uint64_t (*)())v20;
    void v21[2] = 0;
    void v21[3] = 0;
    sub_100010864((uint64_t)v10, &qword_1000D8AB8);
    sub_100010800((uint64_t)v12, v27, &qword_1000D8AC0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10004C848@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = sub_10000D308(&qword_1000D8AE8);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000D308(&qword_1000D8AF0);
  uint64_t v6 = __chkstk_darwin(v54);
  char v56 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v60 = (uint64_t)&v45 - v8;
  uint64_t v61 = sub_10000D308(&qword_1000D8AF8);
  uint64_t v58 = *(void *)(v61 - 8);
  uint64_t v9 = __chkstk_darwin(v61);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  NSString v13 = (char *)&v45 - v12;
  uint64_t v14 = type metadata accessor for SettingsView();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14 - 8);
  sub_100052D98((uint64_t)a1, (uint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v55 = swift_allocObject();
  sub_100052E00((uint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v55 + v17);
  LOBYTE(v17) = sub_10009D620();
  int v18 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v17) {
    int v18 = sub_10009D640();
  }
  int v47 = v18;
  sub_10009D070();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = a1[1];
  *(void *)&long long v68 = *a1;
  *((void *)&v68 + 1) = v27;
  sub_10000D308(&qword_1000D64E8);
  sub_10009D960();
  sub_10009DA90();
  uint64_t v28 = sub_10009D0E0();
  uint64_t v53 = v62;
  int v52 = v63;
  uint64_t v51 = v64;
  int v50 = v65;
  uint64_t v49 = v66;
  uint64_t v48 = v67;
  __chkstk_darwin(v28);
  *(&v45 - 2) = (uint64_t)a1;
  sub_10000D308(&qword_1000D8B00);
  sub_100015700(&qword_1000D8B08, &qword_1000D8B00);
  uint64_t v29 = v13;
  os_log_type_t v46 = v13;
  uint64_t v30 = sub_10009D6E0();
  __chkstk_darwin(v30);
  *(&v45 - 2) = (uint64_t)a1;
  sub_10000D308(&qword_1000D8B10);
  sub_100053004();
  sub_10009D6E0();
  sub_10009DA90();
  sub_10009D0E0();
  uint64_t v31 = v57;
  uint64_t v32 = (uint64_t)v56;
  uint64_t v33 = v59;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, v5, v59);
  uint64_t v34 = (_OWORD *)(v32 + *(int *)(v54 + 36));
  long long v35 = v69;
  *uint64_t v34 = v68;
  v34[1] = v35;
  v34[2] = v70;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v33);
  uint64_t v36 = v60;
  sub_100010800(v32, v60, &qword_1000D8AF0);
  uint64_t v37 = v58;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v39 = v61;
  v38(v11, v29, v61);
  sub_100010720(v36, v32, &qword_1000D8AF0);
  uint64_t v40 = v55;
  *(void *)a2 = sub_100052F74;
  *(void *)(a2 + 8) = v40;
  *(unsigned char *)(a2 + 16) = v47;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v22;
  *(void *)(a2 + 40) = v24;
  *(void *)(a2 + 48) = v26;
  *(unsigned char *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = v53;
  *(unsigned char *)(a2 + 72) = v52;
  *(void *)(a2 + 80) = v51;
  *(unsigned char *)(a2 + 88) = v50;
  uint64_t v41 = v48;
  *(void *)(a2 + 96) = v49;
  *(void *)(a2 + 104) = v41;
  uint64_t v42 = sub_10000D308(&qword_1000D8B30);
  v38((char *)(a2 + *(int *)(v42 + 48)), v11, v39);
  sub_100010720(v32, a2 + *(int *)(v42 + 64), &qword_1000D8AF0);
  swift_retain_n();
  sub_100010864(v36, &qword_1000D8AF0);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v37 + 8);
  v43(v46, v39);
  swift_release();
  sub_100010864(v32, &qword_1000D8AF0);
  v43(v11, v39);
  return swift_release();
}

uint64_t sub_10004CEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v5 = type metadata accessor for SettingsView();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v35 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v36 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D8D00);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000D308(&qword_1000D8D08);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000D308(&qword_1000D8D10);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10000D308(&qword_1000D8D18);
  __chkstk_darwin(v34);
  unint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_10009D3D0();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v18 = (uint64_t)&v9[*(int *)(sub_10000D308(&qword_1000D8D20) + 44)];
  uint64_t v37 = a2;
  sub_10004D2B4(a2, a1, v18);
  LOBYTE(a2) = sub_10009D610();
  unsigned __int8 v19 = sub_10009D620();
  char v20 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != a2) {
    char v20 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v19) {
    char v20 = sub_10009D640();
  }
  sub_100010720((uint64_t)v9, (uint64_t)v12, &qword_1000D8D00);
  uint64_t v21 = &v12[*(int *)(v10 + 36)];
  *uint64_t v21 = v20;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  v21[40] = 1;
  sub_100010864((uint64_t)v9, &qword_1000D8D00);
  uint64_t v22 = sub_10009D8E0();
  char v23 = sub_10009D600();
  sub_100010720((uint64_t)v12, (uint64_t)v15, &qword_1000D8D08);
  uint64_t v24 = &v15[*(int *)(v13 + 36)];
  *(void *)uint64_t v24 = v22;
  v24[8] = v23;
  sub_100010864((uint64_t)v12, &qword_1000D8D08);
  uint64_t v25 = v36;
  sub_100052D98(v37, v36);
  unint64_t v26 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v27 = swift_allocObject();
  sub_100052E00(v25, v27 + v26);
  uint64_t v28 = sub_10009DA90();
  uint64_t v30 = v29;
  sub_100010720((uint64_t)v15, (uint64_t)v17, &qword_1000D8D10);
  uint64_t v31 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v17[*(int *)(v34 + 36)];
  *uint64_t v31 = sub_100053AB8;
  v31[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v27;
  v31[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v28;
  v31[3] = v30;
  sub_100010864((uint64_t)v15, &qword_1000D8D10);
  return sub_100010800((uint64_t)v17, v38, &qword_1000D8D18);
}

uint64_t sub_10004D2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v108 = a3;
  uint64_t v109 = a1;
  uint64_t v104 = sub_10000D308(&qword_1000D8D28);
  __chkstk_darwin(v104);
  long long v107 = (uint64_t *)((char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = sub_10009D540();
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  long long v89 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10000D308(&qword_1000D7DD8);
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v85 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10000D308(&qword_1000D7DE0);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  long long v91 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10000D308(&qword_1000D8D30);
  uint64_t v7 = __chkstk_darwin(v103);
  unint64_t v87 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v95 = (uint64_t)&v84 - v9;
  uint64_t v10 = sub_10000D308(&qword_1000D8D38);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v106 = (uint64_t)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v105 = (char *)&v84 - v13;
  uint64_t v14 = type metadata accessor for SettingsView();
  uint64_t v101 = *(char **)(v14 - 8);
  uint64_t v15 = *((void *)v101 + 8);
  __chkstk_darwin(v14 - 8);
  uint64_t v98 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10009CCC0();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10009DC60();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_10000D308(&qword_1000D6620);
  uint64_t v22 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v24 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10000D308(&qword_1000D8D40);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10000D308(&qword_1000D8D48);
  uint64_t v30 = v29 - 8;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v102 = (uint64_t)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v84 - v34;
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v84 - v36;
  long long v96 = v21;
  sub_10009DC00();
  uint64_t v97 = v18;
  sub_10009CCB0();
  *(void *)&long long v113 = sub_10009DCE0();
  *((void *)&v113 + 1) = v38;
  uint64_t v39 = v98;
  sub_100052D98(v109, v98);
  unint64_t v40 = (v101[80] + 16) & ~(unint64_t)v101[80];
  uint64_t v41 = swift_allocObject();
  sub_100052E00(v39, v41 + v40);
  sub_10001E4B8();
  sub_10009D9A0();
  LOBYTE(v15) = sub_10009D630();
  uint64_t v42 = v100;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v28, v24, v100);
  uint64_t v43 = &v28[*(int *)(v26 + 44)];
  *uint64_t v43 = v15;
  *(_OWORD *)(v43 + 8) = 0u;
  *(_OWORD *)(v43 + 24) = 0u;
  v43[40] = 1;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v42);
  sub_10009D130();
  sub_10009DAA0();
  sub_10009D0E0();
  sub_100010720((uint64_t)v28, (uint64_t)v35, &qword_1000D8D40);
  char v44 = &v35[*(int *)(v30 + 44)];
  long long v45 = v111;
  *(_OWORD *)char v44 = v110;
  *((_OWORD *)v44 + 1) = v45;
  *((_OWORD *)v44 + 2) = v112;
  sub_100010864((uint64_t)v28, &qword_1000D8D40);
  uint64_t v101 = v37;
  sub_100010800((uint64_t)v35, (uint64_t)v37, &qword_1000D8D48);
  sub_10009DC00();
  sub_10009CCB0();
  *(void *)&long long v113 = sub_10009DCE0();
  *((void *)&v113 + 1) = v46;
  uint64_t v47 = sub_10009D750();
  uint64_t v49 = v48;
  LOBYTE(v15) = v50 & 1;
  uint64_t v51 = sub_10009D730();
  uint64_t v53 = v52;
  char v55 = v54;
  uint64_t v100 = v56;
  sub_10001F7AC(v47, v49, v15);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v113 == 1)
  {
    uint64_t v57 = v85;
    sub_10009D0D0();
    uint64_t v58 = v89;
    sub_10009D530();
    sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
    sub_100053DF4((unint64_t *)&qword_1000D7E18, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    uint64_t v59 = v91;
    uint64_t v60 = v88;
    uint64_t v61 = v92;
    sub_10009D780();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v58, v61);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v57, v60);
    sub_10009D130();
    sub_10009DA90();
    sub_10009D0E0();
    uint64_t v62 = v93;
    uint64_t v63 = (uint64_t)v87;
    uint64_t v64 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v87, v59, v94);
    unsigned __int8 v65 = (_OWORD *)(v63 + *(int *)(v103 + 36));
    long long v66 = v114;
    *unsigned __int8 v65 = v113;
    v65[1] = v66;
    v65[2] = v115;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v64);
    uint64_t v67 = v95;
    sub_100010800(v63, v95, &qword_1000D8D30);
    sub_100010720(v67, (uint64_t)v107, &qword_1000D8D30);
    swift_storeEnumTagMultiPayload();
    sub_10000D308(&qword_1000D8D50);
    sub_100053FA4(&qword_1000D8D58, &qword_1000D8D30);
    sub_1000540BC();
    uint64_t v68 = (uint64_t)v105;
    sub_10009D4E0();
    sub_100010864(v67, &qword_1000D8D30);
  }
  else
  {
    sub_10009D130();
    sub_10009DA90();
    sub_10009D0E0();
    uint64_t v69 = v113;
    char v70 = BYTE8(v113);
    uint64_t v71 = v114;
    char v72 = BYTE8(v114);
    uint64_t v73 = v107;
    *long long v107 = 0;
    *((unsigned char *)v73 + 8) = 1;
    v73[2] = v69;
    *((unsigned char *)v73 + 24) = v70;
    v73[4] = v71;
    *((unsigned char *)v73 + 40) = v72;
    *((_OWORD *)v73 + 3) = v115;
    swift_storeEnumTagMultiPayload();
    sub_10000D308(&qword_1000D8D50);
    sub_100053FA4(&qword_1000D8D58, &qword_1000D8D30);
    sub_1000540BC();
    uint64_t v68 = (uint64_t)v105;
    sub_10009D4E0();
  }
  char v74 = v55 & 1;
  uint64_t v75 = (uint64_t)v101;
  uint64_t v76 = v102;
  sub_100010720((uint64_t)v101, v102, &qword_1000D8D48);
  uint64_t v77 = v106;
  sub_100010720(v68, v106, &qword_1000D8D38);
  uint64_t v78 = v108;
  sub_100010720(v76, v108, &qword_1000D8D48);
  uint64_t v79 = (int *)sub_10000D308(&qword_1000D8D68);
  uint64_t v80 = v78 + v79[12];
  *(void *)uint64_t v80 = 0;
  *(unsigned char *)(v80 + 8) = 1;
  uint64_t v81 = v78 + v79[16];
  *(void *)uint64_t v81 = v51;
  *(void *)(v81 + 8) = v53;
  *(unsigned char *)(v81 + 16) = v74;
  *(void *)(v81 + 24) = v100;
  uint64_t v82 = v78 + v79[20];
  *(void *)uint64_t v82 = 0;
  *(unsigned char *)(v82 + 8) = 1;
  sub_100010720(v77, v78 + v79[24], &qword_1000D8D38);
  sub_10001F79C(v51, v53, v74);
  swift_bridgeObjectRetain();
  sub_100010864(v68, &qword_1000D8D38);
  sub_100010864(v75, &qword_1000D8D48);
  sub_100010864(v77, &qword_1000D8D38);
  sub_10001F7AC(v51, v53, v74);
  swift_bridgeObjectRelease();
  return sub_100010864(v76, &qword_1000D8D48);
}

uint64_t sub_10004DFC0()
{
  uint64_t v0 = sub_10009D120();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingsView();
  sub_100072190((uint64_t)v3);
  sub_10009D110();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10004E0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v29 = a3;
  uint64_t v25 = sub_10009DB00();
  uint64_t v28 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10009DB30();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10009D140();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = type metadata accessor for SettingsView();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B664();
  uint64_t v24 = sub_10009DF00();
  sub_100052D98(v22, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + *(unsigned __int8 *)(v9 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100052E00((uint64_t)v14, v17 + v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_100053D10;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100026280;
  aBlock[3] = &unk_1000CD2E8;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  sub_10009DB20();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100053DF4((unint64_t *)&qword_1000D9F80, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000D308(&qword_1000D69F0);
  sub_100015700((unint64_t *)&qword_1000D9F90, &qword_1000D69F0);
  uint64_t v19 = v25;
  sub_10009E010();
  uint64_t v20 = (void *)v24;
  sub_10009DF10();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  uint64_t result = sub_10009D8E0();
  *uint64_t v29 = result;
  return result;
}

uint64_t sub_10004E4DC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  v98[0] = a1;
  uint64_t v101 = a2;
  uint64_t v3 = sub_10000D308(&qword_1000D8B70);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v119 = (uint64_t)v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v110 = (uint64_t)v98 - v6;
  uint64_t v118 = sub_10000D308(&qword_1000D8B78);
  uint64_t v111 = *(void *)(v118 - 8);
  uint64_t v7 = __chkstk_darwin(v118);
  v117 = (char *)v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v100 = (char *)v98 - v10;
  __chkstk_darwin(v9);
  long long v115 = (char *)v98 - v11;
  uint64_t v12 = sub_10000D308(&qword_1000D8B80);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v116 = (uint64_t)v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v114 = (uint64_t)v98 - v15;
  uint64_t v16 = sub_10000D308(&qword_1000D8B88);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v120 = v16;
  uint64_t v121 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v109 = (char *)v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v105 = (uint64_t)v98 - v21;
  __chkstk_darwin(v20);
  long long v113 = (char *)v98 - v22;
  uint64_t v23 = sub_10009CCC0();
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (void (*)(char *, char *, uint64_t))((char *)v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_10009DC60();
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10000D308(&qword_1000D8B90);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29);
  long long v107 = (char *)v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)v98 - v34;
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)v98 - v36;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v144 = sub_10009DCE0();
  unint64_t v145 = v38;
  unint64_t v39 = sub_10001E4B8();
  uint64_t v140 = sub_10009D750();
  uint64_t v141 = v40;
  char v142 = v41 & 1;
  uint64_t v143 = v42;
  uint64_t v123 = a1;
  sub_10000D308(&qword_1000D8B98);
  sub_1000531C0();
  sub_10009DA10();
  uint64_t v108 = v30;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v106 = v37;
  uint64_t v112 = v29;
  v43(v37, v35, v29);
  sub_10009DC00();
  sub_10009CCB0();
  v98[1] = v28;
  uint64_t v99 = v25;
  uint64_t v144 = sub_10009DCE0();
  unint64_t v145 = v44;
  v98[2] = v39;
  uint64_t v136 = sub_10009D750();
  uint64_t v137 = v45;
  char v138 = v46 & 1;
  uint64_t v139 = v47;
  type metadata accessor for SettingsViewModel();
  sub_100053DF4((unint64_t *)&qword_1000D6188, (void (*)(uint64_t))type metadata accessor for SettingsViewModel);
  uint64_t v48 = sub_10009D280();
  uint64_t v50 = v49;
  uint64_t v51 = v98[0];
  uint64_t v52 = *(void *)(v98[0] + 24);
  swift_retain();
  uint64_t v53 = sub_10009CE90();
  uint64_t v132 = v48;
  uint64_t v133 = v50;
  uint64_t v134 = v53;
  uint64_t v135 = v52;
  uint64_t v122 = v51;
  sub_10000D308(&qword_1000D8BB8);
  sub_10000D308(&qword_1000D8BC0);
  uint64_t v54 = v51;
  sub_100015700(&qword_1000D8BC8, &qword_1000D8BB8);
  sub_10005333C(&qword_1000D8BD0, &qword_1000D8BC0, (void (*)(void))sub_1000532A0);
  uint64_t v55 = v105;
  sub_10009DA20();
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 32))(v113, v55, v120);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v56 = 0;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  if (!(_BYTE)v144)
  {
    uint64_t v56 = sub_10009D280();
    uint64_t v57 = v60;
    uint64_t v59 = *(void *)(v54 + 24);
    swift_retain();
    uint64_t v58 = sub_10009CE90();
  }
  uint64_t v102 = v58;
  uint64_t v104 = v57;
  uint64_t v105 = v56;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v61 = swift_release();
  uint64_t v103 = v59;
  if (v144 == 1)
  {
    __chkstk_darwin(v61);
    sub_10000D308(&qword_1000D8C50);
    sub_100015700(&qword_1000D8C58, &qword_1000D8C50);
    uint64_t v62 = v114;
    sub_10009DA30();
    uint64_t v63 = sub_10000D308(&qword_1000D8BE0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  else
  {
    uint64_t v64 = sub_10000D308(&qword_1000D8BE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v114, 1, 1, v64);
  }
  uint64_t v65 = v110;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v144 = sub_10009DCE0();
  unint64_t v145 = v66;
  uint64_t v128 = sub_10009D750();
  uint64_t v129 = v67;
  char v130 = v68 & 1;
  uint64_t v131 = v69;
  uint64_t v70 = sub_10009D280();
  uint64_t v72 = v71;
  uint64_t v73 = *(void *)(v54 + 24);
  swift_retain();
  uint64_t v74 = sub_10009CE90();
  uint64_t v124 = v70;
  uint64_t v125 = v72;
  uint64_t v126 = v74;
  uint64_t v127 = v73;
  __chkstk_darwin(v74);
  sub_10000D308(&qword_1000D8BE8);
  sub_10000D308(&qword_1000D8BF0);
  sub_100015700(&qword_1000D8BF8, &qword_1000D8BE8);
  sub_10005333C(&qword_1000D8C00, &qword_1000D8BF0, (void (*)(void))sub_1000533E0);
  uint64_t v75 = v100;
  sub_10009DA20();
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v115, v75, v118);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v145 < 2)
  {
    sub_1000353D4(v144, v145);
LABEL_10:
    uint64_t v76 = sub_10000D308(&qword_1000D8C10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v65, 1, 1, v76);
    goto LABEL_11;
  }
  if (v145 == 2) {
    goto LABEL_10;
  }
  __chkstk_darwin(v144);
  sub_10000D308(&qword_1000D8C20);
  sub_1000534E4();
  sub_10009DA30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = sub_10000D308(&qword_1000D8C10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v65, 0, 1, v77);
LABEL_11:
  uint64_t v78 = v107;
  uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  v79(v107, v106, v112);
  uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
  uint64_t v80 = v109;
  v99(v109, v113, v120);
  sub_100010720(v114, v116, &qword_1000D8B80);
  uint64_t v81 = v111;
  uint64_t v100 = *(char **)(v111 + 16);
  ((void (*)(char *, char *, uint64_t))v100)(v117, v115, v118);
  sub_100010720(v65, v119, &qword_1000D8B70);
  uint64_t v82 = v101;
  v79(v101, v78, v112);
  int v83 = (int *)sub_10000D308(&qword_1000D8C18);
  uint64_t v84 = v80;
  uint64_t v85 = v120;
  v99(&v82[v83[12]], v84, v120);
  uint64_t v86 = &v82[v83[16]];
  uint64_t v87 = v104;
  uint64_t v88 = v105;
  *(void *)uint64_t v86 = v105;
  *((void *)v86 + 1) = v87;
  uint64_t v89 = v103;
  *((void *)v86 + 2) = v102;
  *((void *)v86 + 3) = v89;
  sub_100010720(v116, (uint64_t)&v82[v83[20]], &qword_1000D8B80);
  uint64_t v90 = v118;
  ((void (*)(char *, char *, uint64_t))v100)(&v82[v83[24]], v117, v118);
  sub_100010720(v119, (uint64_t)&v82[v83[28]], &qword_1000D8B70);
  uint64_t v91 = v88;
  uint64_t v92 = v102;
  sub_10005343C(v91, v87, v102);
  sub_100010864(v110, &qword_1000D8B70);
  uint64_t v93 = *(void (**)(char *, uint64_t))(v81 + 8);
  v93(v115, v90);
  sub_100010864(v114, &qword_1000D8B80);
  uint64_t v94 = *(void (**)(char *, uint64_t))(v121 + 8);
  v121 += 8;
  v94(v113, v85);
  uint64_t v95 = *(void (**)(char *, uint64_t))(v108 + 8);
  uint64_t v96 = v112;
  v95(v106, v112);
  sub_100010864(v119, &qword_1000D8B70);
  v93(v117, v90);
  sub_100010864(v116, &qword_1000D8B80);
  sub_10005348C(v105, v104, v92);
  v94(v109, v120);
  return ((uint64_t (*)(char *, uint64_t))v95)(v107, v96);
}

uint64_t sub_10004F380@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = sub_10009D410();
  sub_10004F514((uint64_t)v25);
  uint64_t v2 = v25[1];
  char v3 = v26;
  uint64_t v4 = v27;
  char v5 = v28;
  uint64_t v22 = v29;
  uint64_t v23 = v25[0];
  uint64_t v20 = v31;
  uint64_t v21 = v30;
  char v6 = v33;
  uint64_t v18 = v34;
  uint64_t v19 = v32;
  char v7 = v36;
  uint64_t v16 = v37;
  uint64_t v17 = v35;
  unsigned __int8 v8 = sub_10009D610();
  unsigned __int8 v9 = sub_10009D620();
  char v10 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v8) {
    char v10 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v9) {
    char v10 = sub_10009D640();
  }
  uint64_t result = sub_10009D070();
  LOBYTE(v25[0]) = 0;
  *(void *)a1 = v24;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v23;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v22;
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v20;
  *(void *)(a1 + 88) = v19;
  *(unsigned char *)(a1 + 96) = v6;
  *(void *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v17;
  *(unsigned char *)(a1 + 120) = v7;
  *(void *)(a1 + 128) = v16;
  *(unsigned char *)(a1 + 136) = v10;
  *(void *)(a1 + 144) = v12;
  *(void *)(a1 + 152) = v13;
  *(void *)(a1 + 160) = v14;
  *(void *)(a1 + 168) = v15;
  *(unsigned char *)(a1 + 176) = v25[0];
  return result;
}

uint64_t sub_10004F514@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v42)
  {
    uint64_t v1 = v43;
    uint64_t v2 = v44;
    swift_bridgeObjectRetain();
    sub_10000FD00(v40, v42);
  }
  else
  {
    uint64_t v1 = 0;
    uint64_t v2 = 0xE000000000000000;
  }
  uint64_t v41 = v1;
  sub_10001E4B8();
  uint64_t v3 = sub_10009D750();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_10009D6D0();
  uint64_t v8 = sub_10009D740();
  uint64_t v36 = v9;
  uint64_t v37 = v8;
  char v11 = v10;
  uint64_t v38 = v12;
  swift_release();
  sub_10001F7AC(v3, v5, v7);
  swift_bridgeObjectRelease();
  LOBYTE(v5) = sub_10009D620();
  char v13 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v5) {
    char v13 = sub_10009D640();
  }
  char v35 = v13;
  sub_10009D070();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_10000FD00(v41, v2);
  }
  uint64_t v22 = sub_10009D750();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  sub_10009D670();
  uint64_t v27 = sub_10009D740();
  uint64_t v29 = v28;
  char v31 = v30;
  uint64_t v33 = v32;
  swift_release();
  v31 &= 1u;
  sub_10001F7AC(v22, v24, v26);
  swift_bridgeObjectRelease();
  *(void *)a1 = v37;
  *(void *)(a1 + 8) = v36;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v38;
  *(unsigned char *)(a1 + 32) = v35;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v17;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v21;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v27;
  *(void *)(a1 + 88) = v29;
  *(unsigned char *)(a1 + 96) = v31;
  *(void *)(a1 + 104) = v33;
  sub_10001F79C(v37, v36, v11 & 1);
  swift_bridgeObjectRetain();
  sub_10001F79C(v27, v29, v31);
  swift_bridgeObjectRetain();
  sub_10001F7AC(v27, v29, v31);
  swift_bridgeObjectRelease();
  sub_10001F7AC(v37, v36, v11 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004F8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = type metadata accessor for SettingsView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  char v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10000D308(&qword_1000D7AB0);
  uint64_t v7 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10000D308(&qword_1000D7AA0) - 8;
  uint64_t v10 = __chkstk_darwin(v69);
  uint64_t v61 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v60 = (uint64_t)&v52 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v59 = (char *)&v52 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v58 = (char *)&v52 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v52 - v19;
  __chkstk_darwin(v18);
  uint64_t v67 = (uint64_t)&v52 - v21;
  uint64_t v53 = a1;
  sub_100052D98(a1, (uint64_t)v6);
  uint64_t v22 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = (v22 + 16) & ~v22;
  uint64_t v56 = v23;
  uint64_t v57 = v22 | 7;
  uint64_t v54 = v23 + v5;
  uint64_t v24 = swift_allocObject();
  sub_100052E00((uint64_t)v6, v24 + v23);
  uint64_t v72 = a1;
  unint64_t v55 = sub_10003E600();
  sub_10009D990();
  uint64_t v25 = sub_10009D920();
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v66 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v27 = v63;
  v66(v20, v9, v63);
  uint64_t v28 = (uint64_t *)&v20[*(int *)(v69 + 44)];
  char v68 = v20;
  *uint64_t v28 = KeyPath;
  v28[1] = v25;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v64 = v7 + 8;
  uint64_t v65 = v29;
  v29(v9, v27);
  sub_100010800((uint64_t)v20, v67, &qword_1000D7AA0);
  uint64_t v30 = v53;
  uint64_t v31 = (uint64_t)v6;
  sub_100052D98(v53, (uint64_t)v6);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v56;
  sub_100052E00(v31, v32 + v56);
  uint64_t v71 = v30;
  sub_10009D990();
  uint64_t v34 = sub_10009D920();
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = (uint64_t)v58;
  uint64_t v37 = v63;
  v66(v58, v9, v63);
  uint64_t v38 = (uint64_t *)(v36 + *(int *)(v69 + 44));
  *uint64_t v38 = v35;
  v38[1] = v34;
  v65(v9, v37);
  sub_100010800(v36, (uint64_t)v68, &qword_1000D7AA0);
  sub_100052D98(v30, v31);
  uint64_t v39 = swift_allocObject();
  sub_100052E00(v31, v39 + v33);
  uint64_t v70 = v30;
  sub_10009D990();
  uint64_t v40 = sub_10009D920();
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = (uint64_t)v59;
  v66(v59, v9, v37);
  uint64_t v43 = (uint64_t *)(v42 + *(int *)(v69 + 44));
  *uint64_t v43 = v41;
  v43[1] = v40;
  v65(v9, v37);
  sub_100010800(v42, v36, &qword_1000D7AA0);
  uint64_t v44 = v67;
  uint64_t v45 = v42;
  sub_100010720(v67, v42, &qword_1000D7AA0);
  uint64_t v46 = (uint64_t)v68;
  uint64_t v47 = v60;
  sub_100010720((uint64_t)v68, v60, &qword_1000D7AA0);
  uint64_t v48 = v61;
  sub_100010720(v36, v61, &qword_1000D7AA0);
  uint64_t v49 = v62;
  sub_100010720(v45, v62, &qword_1000D7AA0);
  uint64_t v50 = sub_10000D308(&qword_1000D8CF8);
  sub_100010720(v47, v49 + *(int *)(v50 + 48), &qword_1000D7AA0);
  sub_100010720(v48, v49 + *(int *)(v50 + 64), &qword_1000D7AA0);
  sub_100010864(v36, &qword_1000D7AA0);
  sub_100010864(v46, &qword_1000D7AA0);
  sub_100010864(v44, &qword_1000D7AA0);
  sub_100010864(v48, &qword_1000D7AA0);
  sub_100010864(v47, &qword_1000D7AA0);
  return sub_100010864(v45, &qword_1000D7AA0);
}

uint64_t sub_10004FF68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10009CCC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (qword_1000D52C0 != -1) {
    swift_once();
  }
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t result = sub_10009DCE0();
  *(unsigned char *)a1 = v6 == 0;
  *(void *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v5;
  return result;
}

uint64_t sub_100050148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10009CCC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t result = sub_10009DCE0();
  *(unsigned char *)a1 = v6 == 1;
  *(void *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v5;
  return result;
}

uint64_t sub_1000502C4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = swift_retain();
  a2(v3);

  return swift_release();
}

uint64_t sub_10005030C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10009CCC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t result = sub_10009DCE0();
  *(unsigned char *)a1 = v6 == 2;
  *(void *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v5;
  return result;
}

uint64_t sub_100050490()
{
  return sub_10009D990();
}

uint64_t sub_100050528@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v7)
  {
    *(void *)a1 = sub_10009D3D0();
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
    uint64_t v2 = sub_10000D308(&qword_1000D8C70);
    sub_10005066C(v6, v7, (uint64_t *)(a1 + *(int *)(v2 + 44)));
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_10000D308(&qword_1000D8C38);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 0, 1, v3);
  }
  else
  {
    uint64_t v5 = sub_10000D308(&qword_1000D8C38);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
}

uint64_t sub_10005066C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v39 = sub_10000D308(&qword_1000D7210) - 8;
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = sub_10009D710();
  uint64_t v6 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000D308(&qword_1000D7218);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v40 = (uint64_t)&v33 - v14;
  uint64_t v41 = sub_10009D940();
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  sub_10001E4B8();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_10009D750();
  uint64_t v35 = v15;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v6;
  uint64_t v21 = v37;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Text.TruncationMode.tail(_:), v37);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = v38;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v25 = v21;
  v24((char *)v38 + *(int *)(v39 + 36), v8, v21);
  *uint64_t v23 = v22;
  uint64_t v26 = (uint64_t)v23;
  sub_100010720((uint64_t)v23, (uint64_t)&v13[*(int *)(v10 + 44)], &qword_1000D7210);
  uint64_t v28 = v34;
  uint64_t v27 = v35;
  *(void *)uint64_t v13 = v34;
  *((void *)v13 + 1) = v17;
  v13[16] = v19;
  *((void *)v13 + 3) = v27;
  *((void *)v13 + 4) = KeyPath;
  *((void *)v13 + 5) = 1;
  v13[48] = 0;
  sub_10001F79C(v28, v17, v19);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100010864(v26, &qword_1000D7210);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v25);
  sub_10001F7AC(v28, v17, v19);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = v40;
  sub_100010800((uint64_t)v13, v40, &qword_1000D7218);
  sub_100010720(v29, (uint64_t)v13, &qword_1000D7218);
  uint64_t v30 = v42;
  *uint64_t v42 = v41;
  uint64_t v31 = sub_10000D308(&qword_1000D8C78);
  sub_100010720((uint64_t)v13, (uint64_t)v30 + *(int *)(v31 + 48), &qword_1000D7218);
  swift_retain();
  sub_100010864(v29, &qword_1000D7218);
  sub_100010864((uint64_t)v13, &qword_1000D7218);
  return swift_release();
}

uint64_t sub_1000509E0(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return sub_10009D6F0();
}

uint64_t sub_100050A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = sub_10000D308(&qword_1000D8CC8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v58 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v57 = (uint64_t *)((char *)&v47 - v6);
  uint64_t v7 = type metadata accessor for SettingsView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10000D308(&qword_1000D7AB0);
  uint64_t v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10000D308(&qword_1000D7AA0) - 8;
  uint64_t v14 = __chkstk_darwin(v51);
  uint64_t v56 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v55 = (char *)&v47 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v47 - v19;
  __chkstk_darwin(v18);
  uint64_t v60 = (uint64_t)&v47 - v21;
  uint64_t v47 = a1;
  sub_100052D98(a1, (uint64_t)v10);
  uint64_t v22 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = (v22 + 16) & ~v22;
  uint64_t v52 = v22 | 7;
  uint64_t v53 = v23 + v9;
  uint64_t v24 = swift_allocObject();
  sub_100052E00((uint64_t)v10, v24 + v23);
  uint64_t v62 = a1;
  unint64_t v50 = sub_10003E600();
  sub_10009D990();
  uint64_t v25 = sub_10009D920();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v27 = v54;
  v49(v20, v13, v54);
  uint64_t v28 = v51;
  uint64_t v29 = (uint64_t *)&v20[*(int *)(v51 + 44)];
  *uint64_t v29 = KeyPath;
  v29[1] = v25;
  uint64_t v48 = *(void (**)(char *, uint64_t))(v11 + 8);
  v48(v13, v27);
  sub_100010800((uint64_t)v20, v60, &qword_1000D7AA0);
  uint64_t v30 = v47;
  sub_100052D98(v47, (uint64_t)v10);
  uint64_t v31 = swift_allocObject();
  sub_100052E00((uint64_t)v10, v31 + v23);
  uint64_t v61 = v30;
  uint64_t v32 = v30;
  sub_10009D990();
  uint64_t v33 = sub_10009D920();
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = (uint64_t)v55;
  v49(v55, v13, v27);
  uint64_t v36 = (uint64_t *)(v35 + *(int *)(v28 + 44));
  *uint64_t v36 = v34;
  v36[1] = v33;
  v48(v13, v27);
  uint64_t v37 = v35;
  sub_100010800(v35, (uint64_t)v20, &qword_1000D7AA0);
  uint64_t v38 = sub_10009D3D0();
  uint64_t v39 = (uint64_t)v57;
  *uint64_t v57 = v38;
  *(void *)(v39 + 8) = 0;
  *(unsigned char *)(v39 + 16) = 1;
  uint64_t v40 = sub_10000D308(&qword_1000D8CD0);
  sub_1000513F4(v32, v39 + *(int *)(v40 + 44));
  uint64_t v41 = v60;
  sub_100010720(v60, v35, &qword_1000D7AA0);
  uint64_t v42 = v56;
  sub_100010720((uint64_t)v20, v56, &qword_1000D7AA0);
  uint64_t v43 = v58;
  sub_100010720(v39, v58, &qword_1000D8CC8);
  uint64_t v44 = v59;
  sub_100010720(v35, v59, &qword_1000D7AA0);
  uint64_t v45 = sub_10000D308(&qword_1000D8CD8);
  sub_100010720(v42, v44 + *(int *)(v45 + 48), &qword_1000D7AA0);
  sub_100010720(v43, v44 + *(int *)(v45 + 64), &qword_1000D8CC8);
  sub_100010864(v39, &qword_1000D8CC8);
  sub_100010864((uint64_t)v20, &qword_1000D7AA0);
  sub_100010864(v41, &qword_1000D7AA0);
  sub_100010864(v43, &qword_1000D8CC8);
  sub_100010864(v42, &qword_1000D7AA0);
  return sub_100010864(v37, &qword_1000D7AA0);
}

uint64_t sub_100050FE4()
{
  memset(v1, 0, sizeof(v1));
  char v2 = 0;
  swift_retain();
  sub_10002D65C((uint64_t)v1);

  return swift_release();
}

uint64_t sub_10005103C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10009CCC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v8 == 2)
  {
    sub_1000353D4(v7, 2uLL);
    sub_1000353D4(0, 0);
    BOOL v4 = 0;
  }
  else
  {
    BOOL v4 = v8 == 0;
    sub_1000353D4(v7, v8);
  }
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t result = sub_10009DCE0();
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v6;
  return result;
}

uint64_t sub_1000511E4()
{
  long long v1 = xmmword_1000A3690;
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  char v4 = 0;
  swift_retain();
  sub_10002D65C((uint64_t)&v1);

  return swift_release();
}

uint64_t sub_100051244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10009CCC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v8 == 2)
  {
    sub_1000353D4(v7, 2uLL);
    sub_1000353D4(0, 1uLL);
    BOOL v4 = 0;
  }
  else
  {
    BOOL v4 = v8 == 1;
    sub_1000353D4(v7, v8);
  }
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t result = sub_10009DCE0();
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v6;
  return result;
}

uint64_t sub_1000513F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v38 = sub_10000D308(&qword_1000D8C48);
  __chkstk_darwin(v38);
  BOOL v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10009D220();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000D308(&qword_1000D8C80);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10009CCC0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_10009DC60();
  __chkstk_darwin(v12 - 8);
  uint64_t v32 = sub_10000D308(&qword_1000D8CE0);
  __chkstk_darwin(v32);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v41 == 2)
  {
    BOOL v31 = 0;
  }
  else
  {
    BOOL v31 = v41 > 1;
    sub_1000353D4(v40, v41);
  }
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v30 = sub_10009DCE0();
  uint64_t v16 = v15;
  type metadata accessor for SettingsViewModel();
  sub_100053DF4((unint64_t *)&qword_1000D6188, (void (*)(uint64_t))type metadata accessor for SettingsViewModel);
  uint64_t v17 = sub_10009D280();
  unint64_t v19 = v18;
  uint64_t v20 = *(void *)(v33 + 24);
  swift_retain();
  uint64_t v21 = sub_10009CE90();
  uint64_t v40 = v17;
  unint64_t v41 = v19;
  uint64_t v42 = v21;
  uint64_t v43 = v20;
  uint64_t v44 = 0;
  sub_10009D210();
  sub_10000D308(&qword_1000D8C88);
  sub_100053834();
  sub_100053DF4(&qword_1000D8CB0, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v22 = v35;
  sub_10009D7A0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v22);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = sub_10009DA90();
  uint64_t v25 = v24;
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v4, v10, v37);
  uint64_t v28 = (uint64_t *)&v4[*(int *)(v38 + 36)];
  *uint64_t v28 = v23;
  v28[1] = v25;
  sub_100010720((uint64_t)v4, (uint64_t)&v14[*(int *)(v32 + 36)], &qword_1000D8C48);
  *uint64_t v14 = v31;
  *((void *)v14 + 1) = v30;
  *((void *)v14 + 2) = v16;
  swift_bridgeObjectRetain();
  sub_100010864((uint64_t)v4, &qword_1000D8C48);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
  swift_bridgeObjectRelease();
  return sub_100010800((uint64_t)v14, v39, &qword_1000D8CE0);
}

uint64_t sub_100051914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v5 = sub_10009D220();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10000D308(&qword_1000D8C80);
  uint64_t v8 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000D308(&qword_1000D8C38);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = sub_10009D3D0();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v14 = sub_10000D308(&qword_1000D8C70);
  sub_100051C8C(a1, (uint64_t *)&v13[*(int *)(v14 + 44)]);
  type metadata accessor for SettingsViewModel();
  sub_100053DF4((unint64_t *)&qword_1000D6188, (void (*)(uint64_t))type metadata accessor for SettingsViewModel);
  uint64_t v15 = sub_10009D280();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(a2 + 24);
  swift_retain();
  uint64_t v19 = sub_10009CE90();
  uint64_t v35 = v15;
  uint64_t v36 = v17;
  uint64_t v37 = v19;
  uint64_t v38 = v18;
  uint64_t v39 = 0;
  sub_10009D210();
  sub_10000D308(&qword_1000D8C88);
  sub_100053834();
  sub_100053DF4(&qword_1000D8CB0, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v20 = v32;
  sub_10009D7A0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v20);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v21 = sub_10009DA90();
  uint64_t v23 = v22;
  uint64_t v24 = sub_10000D308(&qword_1000D8C20);
  uint64_t v26 = v33;
  uint64_t v25 = v34;
  uint64_t v27 = v34 + *(int *)(v24 + 36);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v27, v10, v33);
  uint64_t v28 = (uint64_t *)(v27 + *(int *)(sub_10000D308(&qword_1000D8C48) + 36));
  *uint64_t v28 = v21;
  v28[1] = v23;
  sub_100010720((uint64_t)v13, v25, &qword_1000D8C38);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  return sub_100010864((uint64_t)v13, &qword_1000D8C38);
}

uint64_t sub_100051C8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v39 = sub_10000D308(&qword_1000D7210) - 8;
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t *)((char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = sub_10009D710();
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D7218);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v40 = (uint64_t)&v33 - v12;
  uint64_t v41 = sub_10009D940();
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v43 = v13;
  uint64_t v44 = v14;
  sub_10001E4B8();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_10009D750();
  uint64_t v35 = v15;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v4;
  uint64_t v21 = v37;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Text.TruncationMode.tail(_:), v37);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = v38;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v25 = v21;
  v24((char *)v38 + *(int *)(v39 + 36), v6, v21);
  *uint64_t v23 = v22;
  uint64_t v26 = (uint64_t)v23;
  sub_100010720((uint64_t)v23, (uint64_t)&v11[*(int *)(v8 + 44)], &qword_1000D7210);
  uint64_t v28 = v34;
  uint64_t v27 = v35;
  *(void *)uint64_t v11 = v34;
  *((void *)v11 + 1) = v17;
  unsigned char v11[16] = v19;
  *((void *)v11 + 3) = v27;
  *((void *)v11 + 4) = KeyPath;
  *((void *)v11 + 5) = 1;
  v11[48] = 0;
  sub_10001F79C(v28, v17, v19);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100010864(v26, &qword_1000D7210);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v25);
  sub_10001F7AC(v28, v17, v19);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = v40;
  sub_100010800((uint64_t)v11, v40, &qword_1000D7218);
  sub_100010720(v29, (uint64_t)v11, &qword_1000D7218);
  uint64_t v30 = v42;
  *uint64_t v42 = v41;
  uint64_t v31 = sub_10000D308(&qword_1000D8C78);
  sub_100010720((uint64_t)v11, (uint64_t)v30 + *(int *)(v31 + 48), &qword_1000D7218);
  swift_retain();
  sub_100010864(v29, &qword_1000D7218);
  sub_100010864((uint64_t)v11, &qword_1000D7218);
  return swift_release();
}

uint64_t sub_100052010()
{
  return sub_10009DA30();
}

uint64_t sub_1000520A4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a2();
  *(void *)(a6 + 8) = 0;
  *(unsigned char *)(a6 + 16) = a3;
  sub_10000D308(a4);
  return a5(a1);
}

uint64_t sub_100052110@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for SettingsView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v27 = sub_10000D308(&qword_1000D8B40);
  uint64_t v6 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000D308(&qword_1000D8B48);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  sub_100052D98(a1, (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100052E00((uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  uint64_t v29 = a1;
  sub_10000D308(&qword_1000D8B50);
  sub_100053FA4(&qword_1000D8B58, &qword_1000D8B50);
  sub_10009D990();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v16) = v30;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v16;
  uint64_t v20 = v27;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v8, v27);
  uint64_t v21 = (uint64_t *)&v13[*(int *)(v10 + 44)];
  *uint64_t v21 = KeyPath;
  v21[1] = (uint64_t)sub_1000531B0;
  void v21[2] = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  sub_100010800((uint64_t)v13, (uint64_t)v15, &qword_1000D8B48);
  sub_100010720((uint64_t)v15, (uint64_t)v13, &qword_1000D8B48);
  uint64_t v22 = v28;
  *uint64_t v28 = 0;
  *((unsigned char *)v22 + 8) = 1;
  uint64_t v23 = v22;
  uint64_t v24 = sub_10000D308(&qword_1000D8B60);
  sub_100010720((uint64_t)v13, (uint64_t)v23 + *(int *)(v24 + 48), &qword_1000D8B48);
  uint64_t v25 = (uint64_t)v23 + *(int *)(v24 + 64);
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  sub_100010864((uint64_t)v15, &qword_1000D8B48);
  return sub_100010864((uint64_t)v13, &qword_1000D8B48);
}

uint64_t sub_1000524DC()
{
  uint64_t v0 = sub_10009D120();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingsView();
  sub_100072190((uint64_t)v3);
  sub_10009D110();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_retain();
  sub_10002F868();
  return swift_release();
}

uint64_t sub_1000525D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_10009CCC0();
  __chkstk_darwin(v1 - 8);
  uint64_t v40 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  uint64_t v42 = sub_10000D308(&qword_1000D8B68);
  __chkstk_darwin(v42);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10009D540();
  uint64_t v39 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10000D308(&qword_1000D7DD8);
  uint64_t v38 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10000D308(&qword_1000D7DE0);
  uint64_t v10 = *(void *)(v44 - 8);
  uint64_t v11 = __chkstk_darwin(v44);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v46 == 1)
  {
    sub_10009D0D0();
    sub_10009D530();
    uint64_t v16 = sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
    uint64_t v17 = sub_100053DF4((unint64_t *)&qword_1000D7E18, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    uint64_t v18 = v41;
    uint64_t v19 = v43;
    sub_10009D780();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v19);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v18);
    uint64_t v20 = v44;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v44);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v15, v20);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = v18;
    uint64_t v47 = v19;
    uint64_t v48 = v16;
    uint64_t v49 = v17;
    swift_getOpaqueTypeConformance2();
    sub_10009D4E0();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v20);
  }
  else
  {
    sub_10009DC00();
    sub_10009CCB0();
    uint64_t v46 = sub_10009DCE0();
    uint64_t v47 = v22;
    sub_10001E4B8();
    uint64_t v23 = sub_10009D750();
    uint64_t v25 = v24;
    char v27 = v26 & 1;
    sub_10009D8C0();
    uint64_t v28 = sub_10009D720();
    uint64_t v30 = v29;
    char v32 = v31;
    uint64_t v34 = v33;
    swift_release();
    sub_10001F7AC(v23, v25, v27);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v5 = v28;
    *((void *)v5 + 1) = v30;
    v5[16] = v32 & 1;
    *((void *)v5 + 3) = v34;
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
    uint64_t v36 = sub_100053DF4((unint64_t *)&qword_1000D7E18, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    uint64_t v46 = v41;
    uint64_t v47 = v43;
    uint64_t v48 = v35;
    uint64_t v49 = v36;
    swift_getOpaqueTypeConformance2();
    return sub_10009D4E0();
  }
}

uint64_t sub_100052C14(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_10009DE40();
  swift_retain_n();
  uint64_t v7 = sub_10009DE30();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v5;
  sub_100088B08((uint64_t)v4, (uint64_t)&unk_1000D8AD8, (uint64_t)v8);
  swift_release();
  sub_10002D228();
  return swift_release();
}

uint64_t sub_100052D48@<X0>(uint64_t a1@<X8>)
{
  return sub_1000520A4(*(void *)(v1 + 16), (uint64_t (*)(void))&static HorizontalAlignment.center.getter, 0, &qword_1000D8AE0, (uint64_t (*)(uint64_t))sub_10004C848, a1);
}

uint64_t sub_100052D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100052E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100052E64()
{
  return sub_100053114(sub_100052C14);
}

uint64_t sub_100052E7C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100052EBC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000CD64;
  return sub_10002CA80();
}

uint64_t sub_100052F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SettingsView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10004CEF0(a1, v6, a2);
}

uint64_t sub_100052FF4@<X0>(char *a1@<X8>)
{
  return sub_10004E4DC(*(void *)(v1 + 16), a1);
}

uint64_t sub_100052FFC()
{
  return sub_100052010();
}

unint64_t sub_100053004()
{
  unint64_t result = qword_1000D8B18;
  if (!qword_1000D8B18)
  {
    sub_10000AF84(&qword_1000D8B10);
    sub_100015700(&qword_1000D8B20, &qword_1000D8B28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8B18);
  }
  return result;
}

uint64_t sub_1000530A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000520A4(*(void *)(v1 + 16), (uint64_t (*)(void))&static VerticalAlignment.center.getter, 1, &qword_1000D8B38, (uint64_t (*)(uint64_t))sub_100052110, a1);
}

uint64_t sub_1000530FC()
{
  return sub_100053114((uint64_t (*)(uint64_t))sub_1000524DC);
}

uint64_t sub_100053114(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SettingsView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100053188@<X0>(uint64_t a1@<X8>)
{
  return sub_1000525D8(a1);
}

uint64_t sub_1000531A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_1000531B0(unsigned char *a1)
{
  return sub_100020584(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_1000531B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10004F380(a1);
}

unint64_t sub_1000531C0()
{
  unint64_t result = qword_1000D8BA0;
  if (!qword_1000D8BA0)
  {
    sub_10000AF84(&qword_1000D8B98);
    sub_100015700(&qword_1000D8BA8, &qword_1000D8BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8BA0);
  }
  return result;
}

uint64_t sub_100053260()
{
  return sub_1000509E0(*(void *)(v0 + 16), &qword_1000D8CE8, &qword_1000D8CF0);
}

unint64_t sub_1000532A0()
{
  unint64_t result = qword_1000D8BD8;
  if (!qword_1000D8BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8BD8);
  }
  return result;
}

uint64_t sub_1000532FC()
{
  return sub_1000509E0(*(void *)(v0 + 16), &qword_1000D8CB8, &qword_1000D8CC0);
}

uint64_t sub_10005333C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(a2);
    a3();
    sub_100015700(&qword_1000D61A8, &qword_1000D61B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000533E0()
{
  unint64_t result = qword_1000D8C08;
  if (!qword_1000D8C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8C08);
  }
  return result;
}

uint64_t sub_10005343C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10005348C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000534DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100051914(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1000534E4()
{
  unint64_t result = qword_1000D8C28;
  if (!qword_1000D8C28)
  {
    sub_10000AF84(&qword_1000D8C20);
    sub_100015700(&qword_1000D8C30, &qword_1000D8C38);
    sub_100015700(&qword_1000D8C40, &qword_1000D8C48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8C28);
  }
  return result;
}

uint64_t sub_1000535A8()
{
  return sub_100050490();
}

uint64_t sub_1000535B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100050528(a1);
}

unint64_t sub_1000535B8()
{
  unint64_t result = qword_1000D8C68;
  if (!qword_1000D8C68)
  {
    sub_10000AF84(&qword_1000D8C60);
    sub_100015700(&qword_1000D8C30, &qword_1000D8C38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8C68);
  }
  return result;
}

uint64_t sub_100053658@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10009D380();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10005368C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10009D380();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000536C0()
{
  return sub_10009D390();
}

uint64_t sub_1000536F0()
{
  return sub_10009D390();
}

uint64_t sub_100053720()
{
  return sub_10009D2A0();
}

uint64_t sub_100053744()
{
  return sub_10009D2A0();
}

uint64_t sub_100053768(uint64_t a1)
{
  uint64_t v2 = sub_10009D710();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10009D2B0();
}

unint64_t sub_100053834()
{
  unint64_t result = qword_1000D8C90;
  if (!qword_1000D8C90)
  {
    sub_10000AF84(&qword_1000D8C88);
    sub_10005333C(&qword_1000D8C98, &qword_1000D8CA0, (void (*)(void))sub_1000538D4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8C90);
  }
  return result;
}

unint64_t sub_1000538D4()
{
  unint64_t result = qword_1000D8CA8;
  if (!qword_1000D8CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8CA8);
  }
  return result;
}

uint64_t sub_100053928@<X0>(uint64_t a1@<X8>)
{
  return sub_100050A6C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100053934()
{
  return sub_100053114((uint64_t (*)(uint64_t))sub_100050FE4);
}

uint64_t sub_10005394C@<X0>(uint64_t a1@<X8>)
{
  return sub_10005103C(a1);
}

uint64_t sub_100053960()
{
  return sub_100053114((uint64_t (*)(uint64_t))sub_1000511E4);
}

uint64_t sub_100053978@<X0>(uint64_t a1@<X8>)
{
  return sub_100051244(a1);
}

uint64_t sub_100053980@<X0>(uint64_t a1@<X8>)
{
  return sub_10004F8EC(*(void *)(v1 + 16), a1);
}

uint64_t sub_10005398C()
{
  return sub_1000539A4((void (*)(uint64_t))sub_10002E1D4);
}

uint64_t sub_1000539A4(void (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for SettingsView() - 8);
  return sub_1000502C4(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_100053A08@<X0>(uint64_t a1@<X8>)
{
  return sub_10004FF68(a1);
}

uint64_t sub_100053A14()
{
  uint64_t v1 = type metadata accessor for SettingsView();
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(v1 + 28)
                              + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))))();
}

uint64_t sub_100053A80@<X0>(uint64_t a1@<X8>)
{
  return sub_100050148(a1);
}

uint64_t sub_100053A8C()
{
  return sub_1000539A4((void (*)(uint64_t))sub_10002F548);
}

uint64_t sub_100053AA4@<X0>(uint64_t a1@<X8>)
{
  return sub_10005030C(a1);
}

uint64_t sub_100053AB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SettingsView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10004E0A4(a1, v6, a2);
}

uint64_t sub_100053B38()
{
  uint64_t v1 = type metadata accessor for SettingsView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v12 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_10009D140();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_release();
  swift_release();
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 24);
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = (v3 + v12 + v6) & ~v6;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);

  return _swift_deallocObject(v0, v10 + v7, v2 | v6 | 7);
}

uint64_t sub_100053D10()
{
  type metadata accessor for SettingsView();
  sub_10009D140();

  return sub_10001F5E8();
}

uint64_t sub_100053DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100053DEC()
{
  return swift_release();
}

uint64_t sub_100053DF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100053E40()
{
  uint64_t v1 = type metadata accessor for SettingsView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100053F84()
{
  return sub_100053114((uint64_t (*)(uint64_t))sub_10004DFC0);
}

uint64_t sub_100053FA4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(a2);
    sub_10000AF84(&qword_1000D7DD8);
    sub_10009D540();
    sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
    sub_100053DF4((unint64_t *)&qword_1000D7E18, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    swift_getOpaqueTypeConformance2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000540BC()
{
  unint64_t result = qword_1000D8D60;
  if (!qword_1000D8D60)
  {
    sub_10000AF84(&qword_1000D8D50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8D60);
  }
  return result;
}

unint64_t sub_100054134()
{
  unint64_t result = qword_1000D8D70;
  if (!qword_1000D8D70)
  {
    sub_10000AF84(&qword_1000D8AC0);
    sub_1000541B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8D70);
  }
  return result;
}

unint64_t sub_1000541B0()
{
  unint64_t result = qword_1000D8D78;
  if (!qword_1000D8D78)
  {
    sub_10000AF84(&qword_1000D8AB8);
    sub_100015700((unint64_t *)&unk_1000D8D80, &qword_1000D8AB0);
    sub_100015700(&qword_1000D6668, &qword_1000D6670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D8D78);
  }
  return result;
}

uint64_t sub_100054274()
{
  sub_10002564C(v0+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_device, (uint64_t (*)(void))type metadata accessor for Device);
  swift_release();
  sub_1000100E8(v0+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_enroller);

  return swift_deallocClassInstance();
}

uint64_t sub_10005430C()
{
  return type metadata accessor for DeviceTrackingInfo(0);
}

uint64_t type metadata accessor for DeviceTrackingInfo(uint64_t a1)
{
  return sub_1000550B4(a1, qword_1000D8DD0);
}

uint64_t sub_100054334()
{
  uint64_t result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000543D8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10005444C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000544C0()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_prerequisiteStatus);
}

uint64_t sub_1000544D0(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_10009DE40();
  swift_retain();
  uint64_t v6 = sub_10009DE30();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  _OWORD v7[3] = &protocol witness table for MainActor;
  v7[4] = a1;
  sub_100088B08((uint64_t)v4, (uint64_t)&unk_1000D93F8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1000545E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_10009DE40();
  *(void *)(v4 + 24) = sub_10009DE30();
  uint64_t v6 = sub_10009DE10();
  return _swift_task_switch(sub_100054680, v6, v5);
}

uint64_t sub_100054680()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_shouldProcessDevices) = 1;
  sub_10005AEB8();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000546F4(uint64_t *a1, uint64_t a2)
{
  return sub_100054754(a1, a2, (void (*)(uint64_t))sub_1000563B8);
}

uint64_t sub_10005470C(uint64_t *a1, uint64_t a2)
{
  return sub_100054754(a1, a2, (void (*)(uint64_t))sub_1000572FC);
}

uint64_t sub_100054724(uint64_t *a1, uint64_t a2)
{
  return sub_100054754(a1, a2, (void (*)(uint64_t))sub_100056F7C);
}

uint64_t sub_10005473C(uint64_t *a1, uint64_t a2)
{
  return sub_100054754(a1, a2, (void (*)(uint64_t))sub_100056F88);
}

uint64_t sub_100054754(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = *a1;
  swift_unownedRetainStrong();
  a3(v4);

  return swift_release();
}

void sub_1000547AC()
{
}

uint64_t sub_1000547D0()
{
  return sub_100055774();
}

uint64_t sub_1000547F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a6;
  sub_10000D308(&qword_1000D9E80);
  v6[7] = swift_task_alloc();
  uint64_t v8 = sub_10000D308(&qword_1000D93C0);
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  uint64_t v9 = sub_10000D308(&qword_1000D93C8);
  v6[11] = v9;
  v6[12] = *(void *)(v9 - 8);
  uint64_t v10 = swift_task_alloc();
  v6[13] = v10;
  v6[14] = sub_10009DE40();
  v6[15] = sub_10009DE30();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v12 = (void *)swift_task_alloc();
  v6[16] = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_100054A18;
  return v14(v10, ObjectType, a5);
}

uint64_t sub_100054A18()
{
  swift_task_dealloc();
  uint64_t v1 = sub_10009DE10();
  return _swift_task_switch(sub_100054B54, v1, v0);
}

uint64_t sub_100054B54()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v9 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 56);
  swift_release();
  sub_10001B664();
  *(void *)(v0 + 40) = sub_10009DF00();
  uint64_t v5 = sub_10009DEF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_100015700(&qword_1000D93D0, &qword_1000D93C8);
  sub_10005EA84((unint64_t *)&qword_1000D9F00, (void (*)(uint64_t))sub_10001B664);
  sub_10009CF90();
  sub_10001B6EC(v4);

  sub_100015700(&qword_1000D93D8, &qword_1000D93C0);
  swift_retain();
  sub_10009CFA0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v9);
  swift_beginAccess();
  sub_10000D308((uint64_t *)&unk_1000D93E0);
  sub_100015700(&qword_1000D7030, (uint64_t *)&unk_1000D93E0);
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100054E08()
{
  id v1 = [self defaultCenter];
  uint64_t v2 = v1;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_didBecomeActiveNotificationObserver))
    objc_msgSend(v1, "removeObserver:");
  uint64_t v3 = *(void *)(v0
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_willResignActiveNotificationObserver);
  if (v3)
  {
    swift_unknownObjectRetain_n();
    [v2 removeObserver:v3];
    swift_unknownObjectRelease_n();
  }

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1000100E8(v0 + 80);
  sub_1000100E8(v0 + 120);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider__assignmentStatus;
  uint64_t v5 = sub_10000D308((uint64_t *)&unk_1000D92F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider__enrollmentError;
  uint64_t v7 = sub_10000D308((uint64_t *)&unk_1000D9E90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v8 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_maxDelayTime;
  uint64_t v9 = sub_10009DB80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100055034()
{
  sub_100054E08();

  return swift_deallocClassInstance();
}

uint64_t sub_10005508C()
{
  return type metadata accessor for ConcreteDevicesProvider(0);
}

uint64_t type metadata accessor for ConcreteDevicesProvider(uint64_t a1)
{
  return sub_1000550B4(a1, qword_1000D8F38);
}

uint64_t sub_1000550B4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000550EC()
{
  sub_100015224();
  if (v0 <= 0x3F)
  {
    sub_1000151C8();
    if (v1 <= 0x3F)
    {
      sub_10009DB80();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100055270()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009CCA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10009CE60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10000D690(v6, (uint64_t)qword_1000E3488);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_retain_n();
  uint64_t v11 = sub_10009CE40();
  os_log_type_t v12 = sub_10009DEA0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = v3;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v14 = *(void **)(v0
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice);
    if (v14)
    {
      id v15 = [v14 identifier];
      sub_10009CC80();

      uint64_t v16 = sub_10009CC70();
      uint64_t v17 = v2;
      uint64_t v18 = v16;
      unint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v17);
    }
    else
    {
      unint64_t v20 = 0xE300000000000000;
      uint64_t v18 = 7104878;
    }
    uint64_t v23 = sub_10000DBA8(v18, v20, &v24);
    sub_10009DFC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Received didBecomeActiveNotification (currentTargetDevice = %{public}s)", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_isInBackground) = 0;
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_startDiscoveryOnActivation) == 1)
    sub_1000555DC();
}

void sub_1000555DC()
{
  uint64_t v1 = sub_10009DB80();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned __int8 *)(v0
                                        + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_prerequisiteStatus)
     - 5 <= 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v6[8] = 0;
    swift_retain();
    sub_10009CF40();
    *(unsigned char *)(v0
             + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_shouldProcessDevices) = 0;
    sub_10009DB40();
    uint64_t v5 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_maxDelayTime;
    swift_beginAccess();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v2 + 40))(v5, v4, v1);
    swift_endAccess();
    if ((*(unsigned char *)(v0
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_isInBackground) & 1) != 0)
    {
      *(unsigned char *)(v0
               + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_startDiscoveryOnActivation) = 1;
    }
    else
    {
      *(unsigned char *)(v0
               + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_isDiscoveringDevices) = 1;
      sub_1000905A0();
    }
  }
}

uint64_t sub_100055774()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009CCA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10009CE60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10000D690(v6, (uint64_t)qword_1000E3488);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_retain_n();
  uint64_t v11 = sub_10009CE40();
  os_log_type_t v12 = sub_10009DEA0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v23 = v3;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v26 = v24;
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v14 = *(void **)(v0
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice);
    if (v14)
    {
      id v15 = [v14 identifier];
      sub_10009CC80();

      uint64_t v16 = sub_10009CC70();
      uint64_t v17 = v2;
      uint64_t v18 = v16;
      unint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v17);
    }
    else
    {
      unint64_t v20 = 0xE300000000000000;
      uint64_t v18 = 7104878;
    }
    uint64_t v25 = sub_10000DBA8(v18, v20, &v26);
    sub_10009DFC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Received willResignActiveNotification (currentTargetDevice = %{public}s)", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {

    swift_release_n();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_isInBackground) = 1;
  if (!*(void *)(v1
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice))
  {
    if (*(unsigned char *)(v1
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_isDiscoveringDevices) == 1)
    {
      uint64_t result = sub_100055B24();
      char v22 = 1;
    }
    else
    {
      char v22 = 0;
    }
    *(unsigned char *)(v1
             + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_startDiscoveryOnActivation) = v22;
  }
  return result;
}

uint64_t sub_100055B24()
{
  uint64_t v1 = sub_10009DAF0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&ObjectType - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&ObjectType - v6;
  uint64_t v15 = sub_10009DB80();
  uint64_t v8 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v10 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  sub_10009DB40();
  uint64_t v11 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  v11(v7, enum case for DispatchTimeInterval.never(_:), v1);
  *(void *)uint64_t v5 = 0;
  v11(v5, enum case for DispatchTimeInterval.milliseconds(_:), v1);
  sub_10009DF90();
  swift_unknownObjectRelease();
  os_log_type_t v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v5, v1);
  v12(v7, v1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v15);
  sub_10009080C();
  *(void *)(v0
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_filteredNearbyDevices) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t result = sub_10005A7DC();
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_shouldProcessDevices) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_isDiscoveringDevices) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_startDiscoveryOnActivation) = 0;
  return result;
}

uint64_t sub_100055DA0()
{
  uint64_t v1 = sub_10009DAF0();
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v36 = (void *)((char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v34 - v4);
  uint64_t v6 = sub_10009DB80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)v34 - v11;
  uint64_t v40 = v0;
  uint64_t v13 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_maxDelayTime;
  swift_beginAccess();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v37(v12, v13, v6);
  sub_10009DB40();
  char v14 = sub_10009DB60();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
  if (v14)
  {
    sub_10009DB70();
    *uint64_t v5 = 5;
    uint64_t v35 = v7 + 8;
    uint64_t v17 = v6;
    uint64_t v18 = v15;
    uint64_t v19 = v38;
    uint64_t v20 = v39;
    (*(void (**)(void *, void, uint64_t))(v38 + 104))(v5, enum case for DispatchTimeInterval.seconds(_:), v39);
    sub_10009DB90();
    uint64_t v21 = v19;
    uint64_t v15 = v18;
    uint64_t v6 = v17;
    (*(void (**)(void *, uint64_t))(v21 + 8))(v5, v20);
    v15(v10, v17);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v13, v12, v17);
    uint64_t result = swift_endAccess();
  }
  if ((*(unsigned char *)(v40
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_shouldProcessDevices) & 1) == 0)
  {
    sub_10009DB70();
    v37(v10, v13, v6);
    char v22 = sub_10009DB50();
    v15(v10, v6);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
    if (v22)
    {
      if (qword_1000D51D8 != -1) {
        swift_once();
      }
      uint64_t v37 = (void (*)(char *, uint64_t, uint64_t))v15;
      uint64_t v23 = sub_10009CE60();
      sub_10000D690(v23, (uint64_t)qword_1000E3488);
      uint64_t v24 = sub_10009CE40();
      os_log_type_t v25 = sub_10009DEA0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        v41[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315138;
        uint64_t v35 = (uint64_t)(v26 + 4);
        v41[3] = sub_10000DBA8(0xD00000000000001FLL, 0x80000001000A9370, v41);
        sub_10009DFC0();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s: Restarting discovery delay timer", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v35 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_delayedProcessingTimer;
      v34[1] = *(void *)(v40
                         + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_delayedProcessingTimer);
      v34[2] = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10009DB70();
      *uint64_t v5 = 2;
      uint64_t v28 = v38;
      uint64_t v27 = v39;
      uint64_t v29 = *(void (**)(void *, void, uint64_t))(v38 + 104);
      v29(v5, enum case for DispatchTimeInterval.seconds(_:), v39);
      sub_10009DB90();
      v34[0] = *(void *)(v28 + 8);
      ((void (*)(void *, uint64_t))v34[0])(v5, v27);
      uint64_t v30 = v6;
      uint64_t v38 = v6;
      char v31 = (void (*)(char *, uint64_t))v37;
      ((void (*)(char *, uint64_t))v37)(v10, v30);
      v29(v5, enum case for DispatchTimeInterval.never(_:), v27);
      char v32 = v36;
      *uint64_t v36 = 100;
      v29(v32, enum case for DispatchTimeInterval.milliseconds(_:), v27);
      sub_10009DF90();
      swift_unknownObjectRelease();
      uint64_t v33 = (void (*)(void *, uint64_t))v34[0];
      ((void (*)(void *, uint64_t))v34[0])(v32, v27);
      v33(v5, v27);
      v31(v12, v38);
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10009DF60();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1000563B8(unint64_t a1)
{
  uint64_t v74 = type metadata accessor for Device();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v80 = (uint64_t)v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10009CCA0();
  uint64_t v77 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v72 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v89 = (char *)v70 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v87 = (char *)v70 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v70 - v10;
  if (qword_1000D51D8 != -1) {
LABEL_43:
  }
    swift_once();
  uint64_t v12 = sub_10009CE60();
  uint64_t v13 = sub_10000D690(v12, (uint64_t)qword_1000E3488);
  swift_bridgeObjectRetain_n();
  v70[1] = v13;
  char v14 = sub_10009CE40();
  os_log_type_t v15 = sub_10009DEA0();
  unint64_t v16 = a1 >> 62;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    v94[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v92 = sub_10000DBA8(0xD00000000000001ALL, 0x80000001000A9350, v94);
    sub_10009DFC0();
    *(_WORD *)(v17 + 12) = 2048;
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_10009E0D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v92 = v18;
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s: %ld nearby devices reported", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v97 = &_swiftEmptySetSingleton;
  unint64_t v95 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v96 = _swiftEmptyArrayStorage;
  if (v16)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_10009E0D0();
    if (v19) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
    {
LABEL_9:
      unint64_t v20 = a1 & 0xC000000000000001;
      uint64_t v75 = (uint64_t *)(v71
                      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_ignoredDeviceIdentifiers);
      swift_beginAccess();
      uint64_t v21 = 0;
      unint64_t v79 = a1 + 32;
      uint64_t v90 = (void (**)(char *, char *, uint64_t))(v77 + 16);
      char v22 = (void (**)(uint64_t, uint64_t))(v77 + 8);
      uint64_t v23 = &selRef_showPasswordField_;
      uint64_t v76 = (v77 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      unint64_t v82 = a1;
      uint64_t v83 = v19;
      uint64_t v88 = v11;
      unint64_t v81 = a1 & 0xC000000000000001;
      do
      {
        if (v20) {
          id v25 = (id)sub_10009E080();
        }
        else {
          id v25 = *(id *)(v79 + 8 * v21);
        }
        uint64_t v26 = v25;
        if (__OFADD__(v21++, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        if (([v25 v23[45]] & 1) == 0)
        {
          uint64_t v84 = v21;
          id v28 = [v26 identifier];
          sub_10009CC80();

          uint64_t v29 = v97;
          uint64_t v30 = v97[2];
          uint64_t v85 = v26;
          if (v30)
          {
            sub_10005EA84((unint64_t *)&qword_1000D71B0, (void (*)(uint64_t))&type metadata accessor for UUID);
            swift_bridgeObjectRetain();
            uint64_t v31 = sub_10009DBD0();
            uint64_t v32 = -1 << *((unsigned char *)v29 + 32);
            unint64_t v33 = v31 & ~v32;
            if ((*(void *)((char *)v29 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v33))
            {
              uint64_t v34 = ~v32;
              uint64_t v35 = *(void *)(v77 + 72);
              uint64_t v36 = *(void (**)(uint64_t, unint64_t, uint64_t))(v77 + 16);
              do
              {
                uint64_t v37 = (uint64_t)v89;
                v36((uint64_t)v89, v29[6] + v35 * v33, v3);
                sub_10005EA84(&qword_1000D92C0, (void (*)(uint64_t))&type metadata accessor for UUID);
                char v38 = sub_10009DBF0();
                (*v22)(v37, v3);
                if (v38) {
                  break;
                }
                unint64_t v33 = (v33 + 1) & v34;
              }
              while (((*(void *)((char *)v29 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v33) & 1) != 0);
            }
            else
            {
              char v38 = 0;
            }
            swift_bridgeObjectRelease();
            uint64_t v11 = v88;
            uint64_t v19 = v83;
            uint64_t v26 = v85;
          }
          else
          {
            char v38 = 0;
          }
          uint64_t v86 = *v90;
          v86(v87, v11, v3);
          if (v38)
          {
            uint64_t v24 = *v22;
            uint64_t v23 = &selRef_showPasswordField_;
          }
          else
          {
            uint64_t v39 = *v75;
            if (!*(void *)(*v75 + 16)) {
              goto LABEL_34;
            }
            sub_10005EA84((unint64_t *)&qword_1000D71B0, (void (*)(uint64_t))&type metadata accessor for UUID);
            swift_bridgeObjectRetain();
            uint64_t v40 = sub_10009DBD0();
            uint64_t v41 = -1 << *(unsigned char *)(v39 + 32);
            unint64_t v42 = v40 & ~v41;
            if (((*(void *)(v39 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
            {
LABEL_33:
              swift_bridgeObjectRelease();
              uint64_t v11 = v88;
              uint64_t v26 = v85;
LABEL_34:
              uint64_t v47 = *v22;
              (*v22)((uint64_t)v87, v3);
              uint64_t v48 = v72;
              uint64_t v49 = (void (*)(uint64_t, char *, uint64_t))v86;
              v86(v72, v11, v3);
              uint64_t v50 = (uint64_t)v89;
              sub_10005C61C((uint64_t)v89, v48);
              uint64_t v78 = (void (*)(char *, uint64_t))v47;
              v47(v50, v3);
              uint64_t v51 = v80;
              v49(v80, v11, v3);
              id v52 = [v26 modelIdentifier];
              uint64_t v53 = sub_10009DC80();
              uint64_t v55 = v54;

              uint64_t v56 = (int *)v74;
              uint64_t v57 = (void *)(v51 + *(int *)(v74 + 20));
              *uint64_t v57 = 0;
              v57[1] = 0;
              uint64_t v58 = (uint64_t *)(v51 + v56[6]);
              *uint64_t v58 = v53;
              v58[1] = v55;
              uint64_t v59 = (void *)(v51 + v56[7]);
              *uint64_t v59 = 0;
              v59[1] = 0;
              uint64_t v60 = (void *)(v51 + v56[8]);
              void *v60 = 0;
              v60[1] = 0;
              unint64_t v61 = (unint64_t)v96;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v61 = sub_10008D5C0(0, *(void *)(v61 + 16) + 1, 1, v61);
              }
              unint64_t v63 = *(void *)(v61 + 16);
              unint64_t v62 = *(void *)(v61 + 24);
              uint64_t v64 = v85;
              a1 = v82;
              uint64_t v19 = v83;
              if (v63 >= v62 >> 1) {
                unint64_t v61 = sub_10008D5C0(v62 > 1, v63 + 1, 1, v61);
              }
              *(void *)(v61 + 16) = v63 + 1;
              sub_10005E744(v80, v61+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v63, (uint64_t (*)(void))type metadata accessor for Device);
              uint64_t v96 = (void *)v61;
              id v65 = v64;
              sub_10009DDA0();
              if (*(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_10009DDF0();
              }
              sub_10009DE00();
              sub_10009DDE0();
              v78(v11, v3);
              unint64_t v20 = v81;
              uint64_t v21 = v84;
              uint64_t v26 = v85;
              uint64_t v23 = &selRef_showPasswordField_;
              goto LABEL_12;
            }
            uint64_t v43 = ~v41;
            uint64_t v44 = *(void *)(v77 + 72);
            while (1)
            {
              uint64_t v45 = (uint64_t)v89;
              v86(v89, (char *)(*(void *)(v39 + 48) + v44 * v42), v3);
              sub_10005EA84(&qword_1000D92C0, (void (*)(uint64_t))&type metadata accessor for UUID);
              char v46 = sub_10009DBF0();
              uint64_t v24 = *v22;
              (*v22)(v45, v3);
              if (v46) {
                break;
              }
              unint64_t v42 = (v42 + 1) & v43;
              if (((*(void *)(v39 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
                goto LABEL_33;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v11 = v88;
            uint64_t v19 = v83;
            uint64_t v23 = &selRef_showPasswordField_;
            uint64_t v26 = v85;
          }
          v24((uint64_t)v87, v3);
          v24((uint64_t)v11, v3);
          unint64_t v20 = v81;
          a1 = v82;
          uint64_t v21 = v84;
        }
LABEL_12:
      }
      while (v21 != v19);
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v66 = sub_10009CE40();
  os_log_type_t v67 = sub_10009DEA0();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 136315394;
    uint64_t v92 = sub_10000DBA8(0xD00000000000001ALL, 0x80000001000A9350, &v93);
    sub_10009DFC0();
    *(_WORD *)(v68 + 12) = 2048;
    swift_beginAccess();
    uint64_t v91 = v96[2];
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "%s: %ld nearby devices (unpaired and de-duplicated)", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  *(void *)(v71
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_filteredNearbyDevices) = v95;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10005A7DC();
  sub_10005AEB8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100056F7C(void *a1)
{
  return sub_100056F94(a1, "%{public}s: Has failed to pair");
}

uint64_t sub_100056F88(void *a1)
{
  return sub_100056F94(a1, "%{public}s: Was already paired");
}

uint64_t sub_100056F94(void *a1, const char *a2)
{
  id v28 = a2;
  uint64_t v3 = v2;
  uint64_t v5 = sub_10009CCA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v24 - v10;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10009CE60();
  sub_10000D690(v12, (uint64_t)qword_1000E3488);
  id v13 = a1;
  char v14 = sub_10009CE40();
  os_log_type_t v15 = sub_10009DEA0();
  unint64_t v16 = &selRef_showPasswordField_;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v30[0] = v25;
    uint64_t v26 = v9;
    *(_DWORD *)uint64_t v17 = 136446210;
    v24[1] = v17 + 4;
    id v18 = [v13 identifier];
    sub_10009CC80();

    sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = sub_10009E230();
    uint64_t v27 = v3;
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    uint64_t v29 = sub_10000DBA8(v19, v21, v30);
    uint64_t v9 = v26;
    sub_10009DFC0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v28, v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v16 = &selRef_showPasswordField_;
    swift_slowDealloc();
  }
  else
  {
  }
  id v22 = [v13 v16[42]];
  sub_10009CC80();

  swift_beginAccess();
  sub_10005C61C((uint64_t)v11, v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  swift_endAccess();
  return sub_10005B7DC();
}

uint64_t sub_1000572FC(char *a1)
{
  uint64_t v3 = sub_10000D308(&qword_1000D9E80);
  __chkstk_darwin(v3 - 8);
  uint64_t v119 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10000D308(&qword_1000D9380);
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v129 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = (int *)type metadata accessor for Device();
  uint64_t v118 = *((void *)v116 - 1);
  uint64_t v6 = __chkstk_darwin(v116);
  uint64_t v128 = (uint64_t)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v7;
  __chkstk_darwin(v6);
  uint64_t v130 = (uint64_t)&v114 - v8;
  uint64_t v9 = sub_10009CCA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v125 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  long long v115 = (char *)&v114 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v114 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v114 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v114 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v114 - v24;
  v117 = a1;
  id v26 = [a1 remoteDevice];
  id v27 = [v26 identifier];
  sub_10009CC80();

  uint64_t v28 = v10 + 16;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v29(v20, v25, v9);
  uint64_t v134 = v1;
  swift_beginAccess();
  sub_10005C61C((uint64_t)v23, v20);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v30 = v10 + 8;
  uint64_t v121 = v23;
  uint64_t v133 = v31;
  v31(v23, v9);
  swift_endAccess();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_10009CE60();
  unint64_t v33 = (char *)sub_10000D690(v32, (uint64_t)qword_1000E3488);
  uint64_t v131 = v28;
  v29(v17, v25, v9);
  uint64_t v124 = v33;
  uint64_t v34 = sub_10009CE40();
  os_log_type_t v35 = sub_10009DE90();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v37 = v29;
  uint64_t v127 = v30;
  uint64_t v126 = v25;
  id v132 = v26;
  if (v36)
  {
    char v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v139 = swift_slowAlloc();
    *(_DWORD *)char v38 = 136446210;
    sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v39 = sub_10009E230();
    v138[0] = (id)sub_10000DBA8(v39, v40, &v139);
    uint64_t v25 = v126;
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    v133(v17, v9);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%{public}s: Has a successful paired device connection", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v133(v17, v9);
  }

  uint64_t v41 = (id *)(v134
             + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_deviceTrackingInfoByIdentifier);
  swift_beginAccess();
  unint64_t v42 = v125;
  if (*((void *)*v41 + 2)
    && (swift_bridgeObjectRetain(), sub_100036038((uint64_t)v25), char v44 = v43, swift_bridgeObjectRelease(), (v44 & 1) != 0))
  {
    uint64_t v45 = v115;
    v37(v115, v25, v9);
    char v46 = sub_10009CE40();
    os_log_type_t v47 = sub_10009DE90();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136446210;
      sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v49 = sub_10009E230();
      v138[0] = (id)sub_10000DBA8(v49, v50, &v139);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      uint64_t v51 = (uint64_t (*)(char *, uint64_t))v133;
      v133(v45, v9);
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{public}s: We have already seen this paired device", v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return v51(v25, v9);
    }
    else
    {

      long long v113 = (uint64_t (*)(char *, uint64_t))v133;
      v133(v45, v9);
      return v113(v25, v9);
    }
  }
  else
  {
    uint64_t v114 = v41;
    long long v115 = (char *)v29;
    v29(v42, v25, v9);
    uint64_t v53 = sub_10009CE40();
    os_log_type_t v54 = sub_10009DE90();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136446210;
      sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v56 = sub_10009E230();
      v138[0] = (id)sub_10000DBA8(v56, v57, &v139);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      v133(v42, v9);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "%{public}s: New paired Device", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v133(v42, v9);
    }

    id v58 = v132;
    uint64_t v59 = v130;
    uint64_t v60 = v128;
    uint64_t v125 = (char *)v9;
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v139) = 2;
    swift_retain();
    sub_10009CF40();
    id v61 = [v58 identifier];
    sub_10009CC80();

    id v62 = [v58 modelIdentifier];
    uint64_t v63 = sub_10009DC80();
    uint64_t v65 = v64;

    unint64_t v66 = v116;
    os_log_type_t v67 = (void *)(v59 + v116[5]);
    *os_log_type_t v67 = 0;
    v67[1] = 0;
    uint64_t v68 = (uint64_t *)(v59 + v66[6]);
    *uint64_t v68 = v63;
    v68[1] = v65;
    uint64_t v69 = (void *)(v59 + v66[7]);
    *uint64_t v69 = 0;
    v69[1] = 0;
    uint64_t v70 = (void *)(v59 + v66[8]);
    uint64_t v71 = (objc_class *)type metadata accessor for BuddyProxy();
    *uint64_t v70 = 0;
    v70[1] = 0;
    id v72 = objc_allocWithZone(v71);
    uint64_t v73 = swift_unknownObjectRetain();
    uint64_t v74 = sub_10003D104(v73);
    sub_10005E55C(v59, v60, (uint64_t (*)(void))type metadata accessor for Device);
    uint64_t v75 = qword_1000D51D0;
    uint64_t v76 = v74;
    if (v75 != -1) {
      swift_once();
    }
    sub_1000102FC((uint64_t)qword_1000E3440, (uint64_t)&v139);
    uint64_t v77 = v134;
    uint64_t v78 = *(void *)(v134 + 64);
    v117 = *(char **)(v134 + 72);
    sub_1000102FC(v134 + 80, (uint64_t)v138);
    uint64_t v79 = *(void *)(v77 + 48);
    uint64_t v116 = *(int **)(v77 + 56);
    type metadata accessor for ConcreteCurrentWiFiNetworkPrimitives();
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = 0;
    uint64_t v136 = v71;
    uint64_t v137 = &off_1000CC7F0;
    v135[0] = v76;
    unint64_t v81 = (objc_class *)type metadata accessor for AXMEnroller();
    unint64_t v82 = (char *)objc_allocWithZone(v81);
    uint64_t v83 = sub_100010138((uint64_t)v135, (uint64_t)v136);
    __chkstk_darwin(v83);
    uint64_t v85 = (uint64_t *)((char *)&v114 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v86 + 16))(v85);
    uint64_t v87 = *v85;
    uint64_t v88 = v76;
    uint64_t v124 = v88;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v89 = v128;
    uint64_t v90 = (char *)sub_10005E8A8(v128, v87, (uint64_t)&v139, v78, (uint64_t)v117, (uint64_t)v138, v79, (uint64_t)v116, v80, v82);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1000100E8((uint64_t)v135);

    swift_release();
    uint64_t v91 = v130;
    sub_10005E55C(v130, v89, (uint64_t (*)(void))type metadata accessor for Device);
    type metadata accessor for DeviceTrackingInfo(0);
    uint64_t v92 = swift_allocObject();
    uint64_t v116 = (int *)v92;
    *(void *)(v92
              + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_enrollmentStatusSubscription) = 0;
    uint64_t v93 = (void *)(v92
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_enroller);
    v93[3] = v81;
    v93[4] = &off_1000CCB98;
    *uint64_t v93 = v90;
    sub_10005E744(v89, v92+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_device, (uint64_t (*)(void))type metadata accessor for Device);
    uint64_t v139 = *(void *)&v90[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_enrollmentStatusSubject];
    v117 = v90;
    sub_10000D308(&qword_1000D9388);
    sub_100015700(&qword_1000D9390, &qword_1000D9388);
    uint64_t v139 = sub_10009CF60();
    sub_10001B664();
    v138[0] = (id)sub_10009DF00();
    uint64_t v94 = sub_10009DEF0();
    uint64_t v95 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v119, 1, 1, v94);
    sub_10000D308(&qword_1000D9398);
    sub_100015700((unint64_t *)&unk_1000D93A0, &qword_1000D9398);
    sub_10005EA84((unint64_t *)&qword_1000D9F00, (void (*)(uint64_t))sub_10001B664);
    sub_10009CF90();
    sub_10001B6EC(v95);

    swift_release();
    sub_10005E55C(v91, v89, (uint64_t (*)(void))type metadata accessor for Device);
    swift_unownedRetainStrong();
    uint64_t v96 = swift_unownedRetain();
    swift_release();
    uint64_t v97 = *(unsigned __int8 *)(v118 + 80);
    uint64_t v98 = (v97 + 16) & ~v97;
    unint64_t v99 = (v120 + v98 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v100 = swift_allocObject();
    sub_10005E744(v89, v100 + v98, (uint64_t (*)(void))type metadata accessor for Device);
    *(void *)(v100 + v99) = v96;
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_release();
    sub_10005E55C(v91, v89, (uint64_t (*)(void))type metadata accessor for Device);
    uint64_t v101 = swift_allocObject();
    *(void *)(v101 + 16) = v96;
    sub_10005E744(v89, v101 + ((v97 + 24) & ~v97), (uint64_t (*)(void))type metadata accessor for Device);
    sub_100015700(&qword_1000D93B0, &qword_1000D9380);
    uint64_t v102 = v123;
    uint64_t v103 = v129;
    uint64_t v104 = sub_10009CF80();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v103, v102);
    uint64_t v105 = (uint64_t)v116;
    *(void *)((char *)v116
              + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_enrollmentStatusSubscription) = v104;
    swift_release();
    uint64_t v106 = (uint64_t)v121;
    long long v107 = v126;
    uint64_t v108 = v125;
    ((void (*)(char *, char *, char *))v115)(v121, v126, v125);
    uint64_t v109 = v114;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v138[0] = *v109;
    *uint64_t v109 = (id)0x8000000000000000;
    sub_10007BE90(v105, v106, isUniquelyReferenced_nonNull_native);
    *uint64_t v109 = v138[0];
    swift_bridgeObjectRelease();
    uint64_t v111 = (uint64_t (*)(char *, char *))v133;
    v133((char *)v106, (uint64_t)v108);
    swift_endAccess();
    sub_10005A7DC();
    uint64_t v112 = v117;
    sub_1000465B8();

    swift_release();
    sub_10002564C(v91, (uint64_t (*)(void))type metadata accessor for Device);
    return v111(v107, v108);
  }
}

void sub_100058474(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Device();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - v8;
  int v10 = *a1;
  if (v10 == 5)
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10009CE60();
    sub_10000D690(v11, (uint64_t)qword_1000E3488);
    sub_10005E55C(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Device);
    uint64_t v12 = sub_10009CE40();
    os_log_type_t v13 = sub_10009DEA0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446210;
      sub_10009CCA0();
      sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v15 = sub_10009E230();
      uint64_t v28 = sub_10000DBA8(v15, v16, &v29);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      sub_10002564C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Device);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "AXMEnroller finished for %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10002564C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Device);
    }
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10009CE60();
    sub_10000D690(v17, (uint64_t)qword_1000E3488);
    sub_10005E55C(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Device);
    uint64_t v18 = sub_10009CE40();
    os_log_type_t v19 = sub_10009DEB0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v27 = a2;
      uint64_t v21 = v20;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v29 = v26;
      *(_DWORD *)uint64_t v21 = 136446466;
      LOBYTE(v28) = v10;
      uint64_t v22 = sub_10009DCF0();
      uint64_t v28 = sub_10000DBA8(v22, v23, &v29);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      sub_10009CCA0();
      sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = sub_10009E230();
      uint64_t v28 = sub_10000DBA8(v24, v25, &v29);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      sub_10002564C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Device);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "AXMEnroller failed with error: %{public}s for device:  %{public}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v27;
      swift_slowDealloc();
    }
    else
    {
      sub_10002564C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Device);
    }

    swift_unownedRetainStrong();
    sub_1000589A0(a2);
    swift_release();
    swift_unownedRetainStrong();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v29) = v10;
    sub_10009CF40();
  }
}

void sub_1000589A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Device();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EnrolledDeviceRecord();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v31 + 64);
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v32[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32[-1] - v14;
  unint64_t v16 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_deviceTrackingInfoByIdentifier);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (*(void *)(*v16 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_100036038(a1);
    if (v19)
    {
      uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_10005D734(a1);
      swift_endAccess();
      swift_release();
      sub_10005A7DC();
      sub_10005B7DC();
      sub_10005E55C(v20+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_device, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Device);
      sub_10009CC40();
      v15[*(int *)(v10 + 24)] = 1;
      uint64_t v21 = sub_10009DE70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
      sub_10005E55C((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
      sub_10009DE40();
      swift_retain();
      uint64_t v22 = sub_10009DE30();
      unint64_t v23 = (*(unsigned __int8 *)(v31 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v24 = (void *)swift_allocObject();
      void v24[2] = v22;
      v24[3] = &protocol witness table for MainActor;
      v24[4] = v2;
      sub_10005E744((uint64_t)v13, (uint64_t)v24 + v23, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
      sub_100088B08((uint64_t)v9, (uint64_t)&unk_1000D9370, (uint64_t)v24);
      swift_release();
      swift_release();
      sub_10002564C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_10009CE60();
  sub_10000D690(v25, (uint64_t)qword_1000E3488);
  sub_10005E55C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Device);
  uint64_t v26 = sub_10009CE40();
  os_log_type_t v27 = sub_10009DEB0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446210;
    sub_10009CCA0();
    sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v29 = sub_10009E230();
    v32[3] = sub_10000DBA8(v29, v30, v32);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    sub_10002564C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Device);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "%{public}s Received enrollment failed for a device we are not tracking", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10002564C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Device);
  }
}

uint64_t sub_100058EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  _OWORD v5[3] = a5;
  sub_10009DE40();
  v5[4] = sub_10009DE30();
  uint64_t v7 = sub_10009DE10();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_100058F74, v7, v6);
}

uint64_t sub_100058F74()
{
  uint64_t v1 = *(void *)(v0[2] + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 24) + **(int **)(v1 + 24));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10005907C;
  uint64_t v4 = v0[3];
  return v6(v4, ObjectType, v1);
}

uint64_t sub_10005907C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10005919C, v3, v2);
}

uint64_t sub_10005919C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1000591FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Device();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v82 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = (char *)v82 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)v82 - v20;
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)v82 - v22;
  sub_10005E27C(a2, (uint64_t)&v89);
  if (v93)
  {
    if (v93 == 1)
    {
      uint64_t v24 = v3;
      uint64_t v25 = v90;
      uint64_t v26 = v91;
      os_log_type_t v27 = (uint64_t *)(v24
                      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_deviceTrackingInfoByIdentifier);
      swift_beginAccess();
      uint64_t v28 = *v27;
      if (*(void *)(v28 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v29 = sub_100036038(a1);
        if (v30)
        {
          uint64_t v31 = *(void *)(*(void *)(v28 + 56) + 8 * v29);
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v32 = (void *)(v31
                         + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_device
                         + *(int *)(v9 + 32));
          *uint64_t v32 = v25;
          v32[1] = v26;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10005A7DC();
          swift_release();
LABEL_26:
          if (qword_1000D51D8 != -1) {
            swift_once();
          }
          uint64_t v62 = sub_10009CE60();
          sub_10000D690(v62, (uint64_t)qword_1000E3488);
          sub_10005E55C(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Device);
          uint64_t v63 = sub_10009CE40();
          os_log_type_t v64 = sub_10009DEA0();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = (uint8_t *)swift_slowAlloc();
            v88[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v65 = 136446210;
            sub_10009CCA0();
            sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v66 = sub_10009E230();
            v87[0] = sub_10000DBA8(v66, v67, v88);
            sub_10009DFC0();
            swift_bridgeObjectRelease();
            sub_10002564C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Device);
            _os_log_impl((void *)&_mh_execute_header, v63, v64, "sent enrollment info for %{public}s", v65, 0xCu);
            swift_arrayDestroy();
LABEL_42:
            swift_slowDealloc();
            swift_slowDealloc();
LABEL_45:

            return;
          }
          uint64_t v68 = (uint64_t)v21;
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    if (!(v91 | v92 | (unint64_t)v89 | v90 | *((void *)&v89 + 1)))
    {
      if (qword_1000D51D8 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_10009CE60();
      uint64_t v56 = sub_10000D690(v55, (uint64_t)qword_1000E3488);
      sub_10005E55C(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Device);
      unint64_t v57 = sub_10009CE40();
      os_log_type_t v58 = sub_10009DEA0();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v85 = v3;
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        *(void *)&long long v94 = v83;
        uint64_t v84 = v56;
        *(_DWORD *)uint64_t v59 = 136446210;
        v82[1] = v59 + 4;
        sub_10009CCA0();
        sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v60 = sub_10009E230();
        v88[0] = sub_10000DBA8(v60, v61, (uint64_t *)&v94);
        sub_10009DFC0();
        uint64_t v3 = v85;
        swift_bridgeObjectRelease();
        sub_10002564C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Device);
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "%{public}s enrolled successfully", v59, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10002564C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Device);
      }

      uint64_t v69 = (uint64_t *)(v3
                      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_deviceTrackingInfoByIdentifier);
      swift_beginAccess();
      uint64_t v70 = *v69;
      if (*(void *)(*v69 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v71 = sub_100036038(a1);
        if (v72)
        {
          uint64_t v73 = *(void *)(*(void *)(v70 + 56) + 8 * v71);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_10005D734(a1);
          uint64_t v74 = v3;
          swift_endAccess();
          swift_release();
          sub_10005A7DC();
          sub_10005B7DC();
          uint64_t v75 = sub_10009DE70();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v8, 1, 1, v75);
          sub_10009DE40();
          swift_retain();
          swift_retain();
          uint64_t v76 = sub_10009DE30();
          uint64_t v77 = (void *)swift_allocObject();
          v77[2] = v76;
          _OWORD v77[3] = &protocol witness table for MainActor;
          v77[4] = v73;
          v77[5] = v74;
          sub_100088B08((uint64_t)v8, (uint64_t)&unk_1000D9360, (uint64_t)v77);
          swift_release();
          swift_release();
          return;
        }
        swift_bridgeObjectRelease();
      }
      sub_10005E55C(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Device);
      uint64_t v63 = sub_10009CE40();
      os_log_type_t v78 = sub_10009DEB0();
      if (os_log_type_enabled(v63, v78))
      {
        uint64_t v79 = (uint8_t *)swift_slowAlloc();
        v88[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v79 = 136446210;
        sub_10009CCA0();
        sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v80 = sub_10009E230();
        v87[0] = sub_10000DBA8(v80, v81, v88);
        sub_10009DFC0();
        swift_bridgeObjectRelease();
        sub_10002564C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Device);
        _os_log_impl((void *)&_mh_execute_header, v63, v78, "%{public}s Received enrolled status for a device we are not tracking", v79, 0xCu);
        swift_arrayDestroy();
        goto LABEL_42;
      }
      uint64_t v68 = (uint64_t)v15;
LABEL_44:
      sub_10002564C(v68, (uint64_t (*)(void))type metadata accessor for Device);
      goto LABEL_45;
    }
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_10009CE60();
    sub_10000D690(v42, (uint64_t)qword_1000E3488);
    sub_10005E55C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Device);
    char v43 = sub_10009CE40();
    os_log_type_t v44 = sub_10009DEA0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v94 = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136446210;
      sub_10009CCA0();
      sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v46 = sub_10009E230();
      v88[0] = sub_10000DBA8(v46, v47, (uint64_t *)&v94);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      sub_10002564C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Device);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "%{public}s disconnected", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10002564C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Device);
    }

    sub_10005B7DC();
  }
  else
  {
    sub_1000107E8(&v89, (uint64_t)v88);
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_10009CE60();
    sub_10000D690(v33, (uint64_t)qword_1000E3488);
    sub_10005E55C(a1, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Device);
    sub_1000102FC((uint64_t)v88, (uint64_t)&v94);
    uint64_t v34 = sub_10009CE40();
    os_log_type_t v35 = sub_10009DEA0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      v87[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136446466;
      sub_10009CCA0();
      sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v37 = sub_10009E230();
      uint64_t v86 = sub_10000DBA8(v37, v38, v87);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      sub_10002564C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Device);
      *(_WORD *)(v36 + 12) = 2082;
      uint64_t v39 = sub_10000FF9C(&v94, *((uint64_t *)&v95 + 1));
      uint64_t v40 = *v39;
      unint64_t v41 = v39[1];
      swift_bridgeObjectRetain();
      uint64_t v86 = sub_10000DBA8(v40, v41, v87);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      sub_1000100E8((uint64_t)&v94);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "%{public}s: Received serial number: %{public}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10002564C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Device);
      sub_1000100E8((uint64_t)&v94);
    }

    uint64_t v48 = (uint64_t *)(v3
                    + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_deviceTrackingInfoByIdentifier);
    swift_beginAccess();
    uint64_t v49 = *v48;
    if (*(void *)(*v48 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v50 = sub_100036038(a1);
      if (v51)
      {
        uint64_t v52 = *(void *)(*(void *)(v49 + 56) + 8 * v50);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v53 = v52
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_device;
        os_log_type_t v54 = (long long *)sub_10000FF9C(v88, v88[3]);
        long long v94 = *v54;
        long long v95 = v54[1];
        long long v96 = v54[2];
        long long v97 = v54[3];
        sub_10005E3E0(&v94, v53);
        sub_10005A7DC();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_1000100E8((uint64_t)v88);
  }
}

uint64_t sub_10005A064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  _OWORD v5[3] = a5;
  v5[4] = type metadata accessor for EnrolledDeviceRecord();
  v5[5] = swift_task_alloc();
  sub_10009DE40();
  v5[6] = sub_10009DE30();
  uint64_t v7 = sub_10009DE10();
  v5[7] = v7;
  v5[8] = v6;
  return _swift_task_switch(sub_10005A12C, v7, v6);
}

uint64_t sub_10005A12C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  sub_10005E55C(v0[2]+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_device, v2, (uint64_t (*)(void))type metadata accessor for Device);
  sub_10009CC40();
  *(unsigned char *)(v2 + *(int *)(v1 + 24)) = 0;
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 24) + **(int **)(v4 + 24));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10005A274;
  uint64_t v7 = v0[5];
  return v9(v7, ObjectType, v4);
}

uint64_t sub_10005A274()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10005A394, v3, v2);
}

uint64_t sub_10005A394()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  sub_10002564C(v1, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10005A418(uint64_t a1)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_10000DBA8(0xD000000000000020, 0x80000001000A9320, &v7);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s begin", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v7 = a1;
  return sub_10009CEE0();
}

void sub_10005A5AC()
{
  uint64_t v1 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  swift_retain_n();
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    sub_10000DBA8(0xD00000000000001DLL, 0x80000001000A9300, &v8);
    sub_10009DFC0();
    *(_WORD *)(v5 + 12) = 2082;
    sub_10000D308(&qword_1000D9348);
    uint64_t v6 = sub_10009DCF0();
    sub_10000DBA8(v6, v7, &v8);
    sub_10009DFC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s prerequisiteStatus = %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (*(unsigned char *)(v1
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_prerequisiteStatus) == 5)
    sub_1000555DC();
  else {
    sub_100055B24();
  }
}

uint64_t sub_10005A7DC()
{
  uint64_t v53 = type metadata accessor for Device();
  uint64_t v60 = *(void *)(v53 - 8);
  uint64_t v1 = __chkstk_darwin(v53);
  os_log_type_t v54 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v55 = (char *)&v51 - v4;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v51 - v5;
  uint64_t v7 = sub_10000D308(&qword_1000D9338);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v56 = v0;
  uint64_t v13 = (uint64_t *)(v0
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_deviceTrackingInfoByIdentifier);
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v15 = *(void *)(*v13 + 64);
  uint64_t v57 = *v13 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v58 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v59 = v14;
  int64_t v52 = v58 - 1;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v21 = &qword_1000D9340;
  if (!v18) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v23 = v22 | (v19 << 6);
LABEL_5:
  uint64_t v24 = v59;
  uint64_t v25 = *(void *)(v59 + 48);
  uint64_t v26 = sub_10009CCA0();
  (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v10, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v23, v26);
  uint64_t v27 = *(void *)(v24 + 56);
  uint64_t v28 = sub_10000D308(&qword_1000D9340);
  *(void *)&v10[*(int *)(v28 + 48)] = *(void *)(v27 + 8 * v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 0, 1, v28);
  swift_retain();
  while (1)
  {
    sub_10005E214((uint64_t)v10, (uint64_t)v12);
    uint64_t v33 = sub_10000D308(&qword_1000D9340);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v12, 1, v33) == 1) {
      break;
    }
    sub_10005E55C(*(void *)&v12[*(int *)(v33 + 48)]+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtensionP33_E97D702A2F457666140BF89B599D5DED18DeviceTrackingInfo_device, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Device);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = (void *)sub_10008D5C0(0, v20[2] + 1, 1, (unint64_t)v20);
    }
    unint64_t v35 = v20[2];
    unint64_t v34 = v20[3];
    if (v35 >= v34 >> 1) {
      uint64_t v20 = (void *)sub_10008D5C0(v34 > 1, v35 + 1, 1, (unint64_t)v20);
    }
    long long v20[2] = v35 + 1;
    sub_10005E744((uint64_t)v6, (uint64_t)v20+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v35, (uint64_t (*)(void))type metadata accessor for Device);
    swift_release();
    uint64_t v36 = sub_10009CCA0();
    (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v12, v36);
    if (v18) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v29 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v29 < v58)
    {
      unint64_t v30 = *(void *)(v57 + 8 * v29);
      if (v30) {
        goto LABEL_9;
      }
      int64_t v31 = v19 + 2;
      ++v19;
      if (v29 + 1 < v58)
      {
        unint64_t v30 = *(void *)(v57 + 8 * v31);
        if (v30) {
          goto LABEL_12;
        }
        int64_t v19 = v29 + 1;
        if (v29 + 2 < v58)
        {
          unint64_t v30 = *(void *)(v57 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_9;
          }
          int64_t v31 = v29 + 3;
          int64_t v19 = v29 + 2;
          if (v29 + 3 < v58)
          {
            unint64_t v30 = *(void *)(v57 + 8 * v31);
            if (!v30)
            {
              while (1)
              {
                int64_t v29 = v31 + 1;
                if (__OFADD__(v31, 1)) {
                  break;
                }
                if (v29 >= v58)
                {
                  int64_t v19 = v52;
                  goto LABEL_23;
                }
                unint64_t v30 = *(void *)(v57 + 8 * v29);
                ++v31;
                if (v30) {
                  goto LABEL_9;
                }
              }
LABEL_39:
              __break(1u);
LABEL_40:
              uint64_t v20 = (void *)sub_10008D5C0(0, v20[2] + 1, 1, (unint64_t)v20);
LABEL_34:
              unint64_t v49 = v20[2];
              unint64_t v48 = v20[3];
              if (v49 >= v48 >> 1) {
                uint64_t v20 = (void *)sub_10008D5C0(v48 > 1, v49 + 1, 1, (unint64_t)v20);
              }
              long long v20[2] = v49 + 1;
              sub_10005E744((uint64_t)v21, (uint64_t)v20+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v49, (uint64_t (*)(void))type metadata accessor for Device);

              sub_10002564C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Device);
              goto LABEL_37;
            }
LABEL_12:
            int64_t v29 = v31;
LABEL_9:
            unint64_t v18 = (v30 - 1) & v30;
            unint64_t v23 = __clz(__rbit64(v30)) + (v29 << 6);
            int64_t v19 = v29;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v32 = sub_10000D308(&qword_1000D9340);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v10, 1, 1, v32);
    unint64_t v18 = 0;
  }
  swift_release();
  if (!v20[2])
  {
    uint64_t v37 = *(void **)(v56
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice);
    if (v37)
    {
      unint64_t v18 = v37;
      id v38 = [(id)v18 identifier];
      uint64_t v10 = v55;
      sub_10009CC80();

      id v39 = [(id)v18 modelIdentifier];
      uint64_t v40 = sub_10009DC80();
      uint64_t v42 = v41;

      char v43 = (int *)v53;
      os_log_type_t v44 = &v10[*(int *)(v53 + 20)];
      *(void *)os_log_type_t v44 = 0;
      *((void *)v44 + 1) = 0;
      uint64_t v45 = (uint64_t *)&v10[v43[6]];
      *uint64_t v45 = v40;
      v45[1] = v42;
      uint64_t v46 = &v10[v43[7]];
      *(void *)uint64_t v46 = 0;
      *((void *)v46 + 1) = 0;
      unint64_t v47 = &v10[v43[8]];
      *(void *)unint64_t v47 = 0;
      *((void *)v47 + 1) = 0;
      uint64_t v21 = (uint64_t *)v54;
      sub_10005E55C((uint64_t)v10, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for Device);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_40;
      }
      goto LABEL_34;
    }
  }
LABEL_37:
  unint64_t v61 = v20;
  sub_10009CEE0();
  return swift_bridgeObjectRelease();
}

void sub_10005AEB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009CCA0();
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_shouldProcessDevices) & 1) != 0)
  {
    if (*(void *)(v0
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice))
    {
      if (qword_1000D51D8 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_10009CE60();
      sub_10000D690(v6, (uint64_t)qword_1000E3488);
      unint64_t v50 = sub_10009CE40();
      os_log_type_t v7 = sub_10009DEA0();
      if (os_log_type_enabled(v50, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        int64_t v52 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136315138;
        uint64_t v51 = sub_10000DBA8(0xD00000000000001BLL, 0x80000001000A92E0, (uint64_t *)&v52);
        sub_10009DFC0();
        _os_log_impl((void *)&_mh_execute_header, v50, v7, "%s Already processing a device, bailing out", v8, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v37 = v50;
      }
      return;
    }
    unint64_t v50 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice;
    uint64_t v48 = v3;
    uint64_t v13 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_filteredNearbyDevices;
    unint64_t v14 = *(void *)(v0
                    + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_filteredNearbyDevices);
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_10009E0D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10009CE60();
    uint64_t v49 = sub_10000D690(v16, (uint64_t)qword_1000E3488);
    uint64_t v17 = sub_10009CE40();
    os_log_type_t v18 = sub_10009DEA0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      unint64_t v47 = swift_slowAlloc();
      int64_t v52 = v47;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v51 = sub_10000DBA8(0xD00000000000001BLL, 0x80000001000A92E0, (uint64_t *)&v52);
      sub_10009DFC0();
      *(_WORD *)(v19 + 12) = 2048;
      uint64_t v51 = v15;
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s - %ld nearby devices", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v20 = *(void *)(v1 + v13);
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v21 = sub_10009E0D0();
      if (v21)
      {
LABEL_20:
        unint64_t v22 = v20 & 0xC000000000000001;
        uint64_t v46 = v2;
        if ((v20 & 0xC000000000000001) != 0)
        {
          unint64_t v23 = (objc_class *)sub_10009E080();
        }
        else
        {
          if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_50;
          }
          unint64_t v23 = (objc_class *)*(id *)(v20 + 32);
        }
        uint64_t v24 = v23;
        unint64_t v25 = v21 - 1;
        if (v21 == 1)
        {
LABEL_24:
          swift_bridgeObjectRelease_n();
          uint64_t v26 = *(Class *)((char *)&v50->isa + v1);
          *(Class *)((char *)&v50->isa + v1) = v24;
          uint64_t v27 = v24;

          sub_10005A7DC();
          uint64_t v28 = v27;
          int64_t v29 = sub_10009CE40();
          os_log_type_t v30 = sub_10009DEA0();
          if (os_log_type_enabled(v29, v30))
          {
            uint64_t v31 = swift_slowAlloc();
            unint64_t v50 = swift_slowAlloc();
            int64_t v52 = v50;
            *(_DWORD *)uint64_t v31 = 136315394;
            uint64_t v51 = sub_10000DBA8(0xD00000000000001BLL, 0x80000001000A92E0, (uint64_t *)&v52);
            sub_10009DFC0();
            *(_WORD *)(v31 + 12) = 2082;
            uint64_t v49 = v31 + 14;
            id v32 = [(objc_class *)v28 identifier];
            sub_10009CC80();

            sub_10005EA84((unint64_t *)&qword_1000D9330, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v33 = v46;
            uint64_t v34 = sub_10009E230();
            unint64_t v36 = v35;
            (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v33);
            uint64_t v51 = sub_10000DBA8(v34, v36, (uint64_t *)&v52);
            sub_10009DFC0();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s - begin pairing with %{public}s", (uint8_t *)v31, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          sub_100090B20(v28);
          swift_getKeyPath();
          swift_getKeyPath();
          LOBYTE(v52) = 1;
          swift_retain();
          sub_10009CF40();
          sub_100055B24();

          return;
        }
        if (v21 >= 2)
        {
          if (v22 || (unint64_t v38 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10), v38 >= 2) && v25 < v38)
          {
            uint64_t v39 = 0;
            do
            {
              if (v22) {
                id v40 = (id)sub_10009E080();
              }
              else {
                id v40 = *(id *)(v20 + 8 * v39 + 40);
              }
              uint64_t v41 = v40;
              id v42 = [(objc_class *)v24 RSSI];
              id v43 = [v41 RSSI];
              if ((uint64_t)v42 >= (uint64_t)v43) {
                os_log_type_t v44 = (objc_class *)v41;
              }
              else {
                os_log_type_t v44 = v24;
              }
              if ((uint64_t)v42 < (uint64_t)v43) {
                uint64_t v24 = (objc_class *)v41;
              }

              ++v39;
            }
            while (v25 != v39);
            goto LABEL_24;
          }
LABEL_51:
          __break(1u);
          return;
        }
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v21) {
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease_n();
    return;
  }
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10009CE60();
  sub_10000D690(v9, (uint64_t)qword_1000E3488);
  uint64_t v10 = sub_10009CE40();
  os_log_type_t v11 = sub_10009DEA0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    int64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v51 = sub_10000DBA8(0xD00000000000001BLL, 0x80000001000A92E0, (uint64_t *)&v52);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s Delaying processing while discovering initial devices", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100055DA0();
}

uint64_t sub_10005B7DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009DB00();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10009DB30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  uint64_t v23 = v7;
  __chkstk_darwin(v6);
  uint64_t v21 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10009CE60();
  sub_10000D690(v9, (uint64_t)qword_1000E3488);
  uint64_t v10 = sub_10009CE40();
  os_log_type_t v11 = sub_10009DEA0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    unint64_t v20 = v5;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v24 = (void *)sub_10000DBA8(0xD000000000000015, 0x80000001000A92C0, aBlock);
    uint64_t v5 = v20;
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v13 = *(void **)(v1
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice);
  *(void *)(v1
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice) = 0;

  sub_10005A7DC();
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock[0]) = 5;
  swift_retain();
  sub_10009CF40();
  sub_100055B24();
  sub_10001B664();
  unint64_t v14 = (void *)sub_10009DF00();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v1;
  aBlock[4] = (uint64_t)sub_10005E1BC;
  aBlock[5] = v15;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100026280;
  aBlock[3] = (uint64_t)&unk_1000CD3A8;
  uint64_t v16 = _Block_copy(aBlock);
  uint64_t v17 = v21;
  sub_10009DB20();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_10005EA84((unint64_t *)&qword_1000D9F80, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000D308(&qword_1000D69F0);
  sub_100015700((unint64_t *)&qword_1000D9F90, &qword_1000D69F0);
  sub_10009E010();
  sub_10009DF10();
  swift_unownedRelease();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v22);
  return swift_release();
}

void sub_10005BC84(uint64_t a1, unint64_t a2)
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009CE60();
  sub_10000D690(v4, (uint64_t)qword_1000E3488);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_10009CE40();
  os_log_type_t v6 = sub_10009DE90();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136380675;
    swift_bridgeObjectRetain();
    sub_10000DBA8(a1, a2, &v8);
    sub_10009DFC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Trying scanned pin: %{private}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1000913E4(a1, a2);
}

uint64_t sub_10005BE48()
{
  uint64_t v1 = sub_10009CCA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v20 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  os_log_type_t v11 = *(void **)(v0
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice);
  if (v11)
  {
    id v12 = v11;
    id v13 = [v12 identifier];
    sub_10009CC80();

    swift_beginAccess();
    sub_10005D734((uint64_t)v10);
    swift_endAccess();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v10, v1);
    swift_beginAccess();
    sub_10005C61C((uint64_t)v8, v5);
    unint64_t v14 = *(void (**)(char *, uint64_t))(v2 + 8);
    v14(v8, v1);
    swift_endAccess();
    sub_100091D3C();
    sub_10005B7DC();

    return ((uint64_t (*)(char *, uint64_t))v14)(v10, v1);
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10009CE60();
    sub_10000D690(v16, (uint64_t)qword_1000E3488);
    uint64_t v17 = sub_10009CE40();
    os_log_type_t v18 = sub_10009DE90();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "No device available to cancel", v19, 2u);
      swift_slowDealloc();
    }

    return sub_10005B7DC();
  }
}

uint64_t sub_10005C12C()
{
  return sub_10009CF60();
}

uint64_t sub_10005C1AC(uint64_t a1, uint64_t a2)
{
  return sub_10005C1F4(a1, a2, (uint64_t *)&unk_1000D9300, (uint64_t)&OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider__enrollmentError, (uint64_t *)&unk_1000D9E90, (unint64_t *)&unk_1000D9310);
}

uint64_t sub_10005C1D0(uint64_t a1, uint64_t a2)
{
  return sub_10005C1F4(a1, a2, &qword_1000D5E28, (uint64_t)&OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider__assignmentStatus, (uint64_t *)&unk_1000D92F0, &qword_1000D5E30);
}

uint64_t sub_10005C1F4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, unint64_t *a6)
{
  uint64_t v9 = sub_10000D308(a3);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(a5);
  sub_10009CF10();
  swift_endAccess();
  sub_100015700(a6, a3);
  uint64_t v13 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

uint64_t sub_10005C340()
{
  return sub_10009CF60();
}

void sub_10005C3C0(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_10005C3E4()
{
  return sub_10005BE48();
}

void sub_10005C408()
{
}

uint64_t sub_10005C42C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10005C4B0()
{
  return sub_10009CF40();
}

uint64_t sub_10005C528@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10005C5A8()
{
  return sub_10009CF40();
}

uint64_t sub_10005C61C(uint64_t a1, char *a2)
{
  char v3 = v2;
  uint64_t v6 = sub_10009CCA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10005EA84((unint64_t *)&qword_1000D71B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_10009DBD0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_10005EA84(&qword_1000D92C0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_10009DBF0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        char v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *char v3 = 0x8000000000000000;
    sub_10005CD3C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *char v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10005C940()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_10009CCA0();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10000D308(&qword_1000D92C8);
  uint64_t v5 = sub_10009E040();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    unint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_10005EA84((unint64_t *)&qword_1000D71B0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_10009DBD0();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

uint64_t sub_10005CD3C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_10009CCA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10005C940();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10005CFDC();
      goto LABEL_12;
    }
    sub_10005D280();
  }
  uint64_t v12 = *v3;
  sub_10005EA84((unint64_t *)&qword_1000D71B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = sub_10009DBD0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_10005EA84(&qword_1000D92C0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_10009DBF0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_10009E270();
  __break(1u);
  return result;
}

void *sub_10005CFDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009CCA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D308(&qword_1000D92C8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_10009E030();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10005D280()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009CCA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000D308(&qword_1000D92C8);
  uint64_t v7 = sub_10009E040();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_10005EA84((unint64_t *)&qword_1000D71B0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_10009DBD0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

double sub_10005D630@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100035E30(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10005DCFC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_100010784((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_10005D82C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_10005D734(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100036038(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10005DEE4();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_10009CCA0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_10005DA04(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_10005D82C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_10009E020();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10009E2D0();
        swift_bridgeObjectRetain();
        sub_10009DD20();
        Swift::Int v10 = sub_10009E300();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          int64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *int64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10005DA04(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009CCA0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_10009E020();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_10005EA84((unint64_t *)&qword_1000D71B0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = sub_10009DBD0();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_10005DCFC()
{
  uint64_t v1 = v0;
  sub_10000D308(&qword_1000D5888);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10009E0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10000FD90(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_100010784(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10005DEE4()
{
  uint64_t v1 = sub_10009CCA0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D308((uint64_t *)&unk_1000D92D0);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10009E0E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    unint64_t result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10005E184()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005E1BC()
{
  swift_unownedRetainStrong();
  sub_1000555DC();

  return swift_release();
}

uint64_t sub_10005E1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005E20C()
{
  return swift_release();
}

uint64_t sub_10005E214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D9338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005E27C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10005E2D8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10005E320(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_100010914;
  return sub_10005A064(a1, v4, v5, v7, v6);
}

uint64_t sub_10005E3E0(_OWORD *a1, uint64_t a2)
{
  uint64_t v22 = &type metadata for DMTResultBackedADEPrerequisites;
  unint64_t v23 = &off_1000CEEB8;
  uint64_t v4 = (_OWORD *)swift_allocObject();
  v21[0] = v4;
  long long v5 = a1[1];
  v4[1] = *a1;
  v4[2] = v5;
  long long v6 = a1[3];
  v4[3] = a1[2];
  v4[4] = v6;
  uint64_t v7 = sub_10000FF9C(v21, (uint64_t)&type metadata for DMTResultBackedADEPrerequisites);
  uint64_t v9 = v7[6];
  uint64_t v8 = v7[7];
  uint64_t v10 = (int *)type metadata accessor for Device();
  uint64_t v11 = (void *)(a2 + v10[5]);
  sub_100047A54((uint64_t)a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v11 = v9;
  v11[1] = v8;
  uint64_t v12 = sub_10000FF9C(v21, (uint64_t)v22);
  uint64_t v14 = v12[4];
  uint64_t v13 = v12[5];
  unint64_t v15 = (void *)(a2 + v10[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *unint64_t v15 = v14;
  v15[1] = v13;
  unint64_t v16 = sub_10000FF9C(v21, (uint64_t)v22);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  int64_t v19 = (void *)(a2 + v10[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *int64_t v19 = v18;
  v19[1] = v17;
  return sub_1000100E8((uint64_t)v21);
}

uint64_t sub_10005E50C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10005E55C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005E5C4()
{
  uint64_t v1 = (int *)(type metadata accessor for EnrolledDeviceRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for Device();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10005E744(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005E7AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for EnrolledDeviceRecord() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100010914;
  return sub_100058EDC(a1, v5, v6, v7, v8);
}

id sub_10005E8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  v26[3] = type metadata accessor for ConcreteCurrentWiFiNetworkPrimitives();
  uint64_t v26[4] = &off_1000CCAB0;
  v26[0] = a9;
  v25[3] = type metadata accessor for BuddyProxy();
  v25[4] = &off_1000CC7F0;
  v25[0] = a2;
  *(void *)&a10[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller____lazy_storage___catOperationQueue] = 0;
  uint64_t v17 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_enrollmentStatusSubject;
  sub_10000D308(&qword_1000D9388);
  swift_allocObject();
  uint64_t v18 = a10;
  *(void *)&a10[v17] = sub_10009CED0();
  sub_10005E55C(a1, (uint64_t)&v18[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_device], (uint64_t (*)(void))type metadata accessor for Device);
  sub_1000102FC((uint64_t)v25, (uint64_t)&v18[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_requestPerformingProvider]);
  sub_1000102FC(a3, (uint64_t)&v18[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_accountProvider]);
  int64_t v19 = &v18[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_networkInfoStore];
  *(void *)int64_t v19 = a4;
  *((void *)v19 + 1) = a5;
  sub_1000102FC(a6, (uint64_t)&v18[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_mdmServerInfoStore]);
  unint64_t v20 = &v18[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_fileSystemStore];
  *(void *)unint64_t v20 = a7;
  *((void *)v20 + 1) = a8;
  sub_1000102FC((uint64_t)v26, (uint64_t)&v18[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension11AXMEnroller_currentNetworkPrimitives]);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  v24.receiver = v18;
  v24.super_class = (Class)type metadata accessor for AXMEnroller();
  id v21 = objc_msgSendSuper2(&v24, "init");
  sub_1000100E8((uint64_t)v26);
  sub_1000100E8(a6);
  sub_1000100E8(a3);
  sub_1000100E8((uint64_t)v25);
  sub_10002564C(a1, (uint64_t (*)(void))type metadata accessor for Device);
  return v21;
}

uint64_t sub_10005EA84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005EACC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Device() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unownedRelease();

  return _swift_deallocObject(v0, v5, v4);
}

void sub_10005EC04(unsigned __int8 *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Device() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100058474(a1, v4);
}

uint64_t sub_10005ECA0()
{
  uint64_t v1 = *(void *)(type metadata accessor for Device() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unownedRelease();
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10005EDCC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Device() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  swift_unownedRetainStrong();
  sub_1000591FC(v4, a1);

  return swift_release();
}

uint64_t sub_10005EE60(uint64_t *a1)
{
  return sub_10005A418(*a1);
}

uint64_t sub_10005EE68()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10005EEA8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000CD64;
  return sub_1000545E8(a1, v4, v5, v6);
}

ValueMetadata *type metadata accessor for CircularButtonView()
{
  return &type metadata for CircularButtonView;
}

uint64_t sub_10005EF6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005EF88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v36 = sub_10000D308(&qword_1000D9400);
  __chkstk_darwin(v36);
  uint64_t v33 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10009DA60();
  uint64_t v38 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v37 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000D308(&qword_1000D7DD0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10000D308(&qword_1000D9408);
  __chkstk_darwin(v34);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_10009D940();
  if (qword_1000D5230 != -1) {
    swift_once();
  }
  if (qword_1000D5238 != -1) {
    swift_once();
  }
  sub_10009DA90();
  sub_10009D0E0();
  uint64_t v8 = v41;
  char v9 = v42;
  uint64_t v10 = v43;
  char v11 = v44;
  uint64_t v31 = v45;
  uint64_t v30 = v46;
  if (qword_1000D5228 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10009D680();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
  uint64_t v13 = sub_10009D6B0();
  uint64_t v32 = v13;
  sub_100010864((uint64_t)v5, &qword_1000D7DD0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = sub_10009D900();
  uint64_t v16 = swift_getKeyPath();
  char v17 = sub_10009D600();
  *(void *)&long long v47 = v35;
  *((void *)&v47 + 1) = v8;
  LOBYTE(v48) = v9;
  *((void *)&v48 + 1) = v10;
  LOBYTE(v49) = v11;
  *((void *)&v49 + 1) = v31;
  *(void *)&long long v50 = v30;
  *((void *)&v50 + 1) = KeyPath;
  *(void *)&long long v51 = v13;
  *((void *)&v51 + 1) = v16;
  *(void *)&long long v52 = v15;
  BYTE8(v52) = v17;
  long long v53 = 0u;
  long long v54 = 0u;
  char v55 = 1;
  uint64_t v18 = v37;
  sub_10009DA50();
  char v19 = sub_10009D600();
  uint64_t v20 = v38;
  uint64_t v21 = (uint64_t)v33;
  uint64_t v22 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v33, v18, v39);
  *(unsigned char *)(v21 + *(int *)(v36 + 36)) = v19;
  sub_100010720(v21, (uint64_t)&v7[*(int *)(v34 + 36)], &qword_1000D9400);
  long long v23 = v54;
  *((_OWORD *)v7 + 6) = v53;
  *((_OWORD *)v7 + 7) = v23;
  v7[128] = v55;
  long long v24 = v50;
  *((_OWORD *)v7 + 2) = v49;
  *((_OWORD *)v7 + 3) = v24;
  long long v25 = v52;
  *((_OWORD *)v7 + 4) = v51;
  *((_OWORD *)v7 + 5) = v25;
  long long v26 = v48;
  *(_OWORD *)uint64_t v7 = v47;
  *((_OWORD *)v7 + 1) = v26;
  sub_10005F4C8((uint64_t)&v47);
  sub_100010864(v21, &qword_1000D9400);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v22);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v27 = v40;
  sub_100010720((uint64_t)v7, v40, &qword_1000D9408);
  *(_WORD *)(v27 + *(int *)(sub_10000D308(&qword_1000D9410) + 36)) = 256;
  return sub_100010864((uint64_t)v7, &qword_1000D9408);
}

uint64_t sub_10005F4B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10005EF88(a1);
}

uint64_t sub_10005F4C8(uint64_t a1)
{
  return a1;
}

unint64_t sub_10005F530()
{
  unint64_t result = qword_1000D9418;
  if (!qword_1000D9418)
  {
    sub_10000AF84(&qword_1000D9410);
    sub_10005F5D0();
    sub_100015700(&qword_1000D9480, &qword_1000D9488);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9418);
  }
  return result;
}

unint64_t sub_10005F5D0()
{
  unint64_t result = qword_1000D9420;
  if (!qword_1000D9420)
  {
    sub_10000AF84(&qword_1000D9408);
    sub_10005F670();
    sub_100015700(&qword_1000D9478, &qword_1000D9400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9420);
  }
  return result;
}

unint64_t sub_10005F670()
{
  unint64_t result = qword_1000D9428;
  if (!qword_1000D9428)
  {
    sub_10000AF84(&qword_1000D9430);
    sub_10005F6EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9428);
  }
  return result;
}

unint64_t sub_10005F6EC()
{
  unint64_t result = qword_1000D9438;
  if (!qword_1000D9438)
  {
    sub_10000AF84(&qword_1000D9440);
    sub_10005F78C();
    sub_100015700(&qword_1000D6640, &qword_1000D6648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9438);
  }
  return result;
}

unint64_t sub_10005F78C()
{
  unint64_t result = qword_1000D9448;
  if (!qword_1000D9448)
  {
    sub_10000AF84(&qword_1000D9450);
    sub_10005F82C();
    sub_100015700(&qword_1000D9468, &qword_1000D9470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9448);
  }
  return result;
}

unint64_t sub_10005F82C()
{
  unint64_t result = qword_1000D9458;
  if (!qword_1000D9458)
  {
    sub_10000AF84(&qword_1000D9460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9458);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AssignmentStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005F96CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssignmentStatus()
{
  return &type metadata for AssignmentStatus;
}

unint64_t sub_10005F9A8()
{
  unint64_t result = qword_1000D9490;
  if (!qword_1000D9490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9490);
  }
  return result;
}

uint64_t type metadata accessor for FakeCameraViewModelProviderFactory()
{
  return self;
}

uint64_t sub_10005FA20()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10005FA94()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension45FakeDeviceDiscoveryPrerequisiteStatusProvider__prerequisiteStatus;
  uint64_t v2 = sub_10000D308(&qword_1000D9650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10005FB38()
{
  return type metadata accessor for FakeDeviceDiscoveryPrerequisiteStatusProvider();
}

uint64_t type metadata accessor for FakeDeviceDiscoveryPrerequisiteStatusProvider()
{
  uint64_t result = qword_1000D9580;
  if (!qword_1000D9580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005FB8C()
{
  sub_10005FC1C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10005FC1C()
{
  if (!qword_1000D9590)
  {
    sub_10000AF84(&qword_1000D9348);
    unint64_t v0 = sub_10009CF50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D9590);
    }
  }
}

uint64_t sub_10005FC78()
{
  uint64_t v0 = sub_10000D308(&qword_1000D9648);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D9650);
  sub_10009CF10();
  swift_endAccess();
  sub_10005FD94();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

unint64_t sub_10005FD94()
{
  unint64_t result = qword_1000D9658;
  if (!qword_1000D9658)
  {
    sub_10000AF84(&qword_1000D9648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9658);
  }
  return result;
}

uint64_t sub_10005FDF0@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10005FE74()
{
  return sub_10009CF40();
}

ValueMetadata *type metadata accessor for NetworkTypeSectionFooterView()
{
  return &type metadata for NetworkTypeSectionFooterView;
}

uint64_t sub_10005FEFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005FF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    swift_release();
    if (v8 == 2)
    {
      sub_10009DC00();
      sub_10009CCB0();
      *(void *)&long long v8 = sub_10009DCE0();
      *((void *)&v8 + 1) = v6;
      sub_10001E4B8();
      sub_10009D750();
    }
    uint64_t result = sub_10009D4E0();
    *(_OWORD *)a2 = v8;
    *(_OWORD *)(a2 + 16) = v9;
    *(unsigned char *)(a2 + 32) = v10;
  }
  else
  {
    type metadata accessor for SettingsViewModel();
    sub_1000180CC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_100060134@<X0>(uint64_t a1@<X8>)
{
  return sub_10005FF18(*v1, a1);
}

unint64_t sub_100060148()
{
  unint64_t result = qword_1000D9660;
  if (!qword_1000D9660)
  {
    sub_10000AF84(&qword_1000D9668);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9660);
  }
  return result;
}

uint64_t *sub_1000601BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10009CCA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    char v10 = (uint64_t *)((char *)a1 + v8);
    char v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000602AC(uint64_t a1)
{
  uint64_t v2 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100060334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000603D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10006049C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100060520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000605C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000605DC);
}

uint64_t sub_1000605DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CCA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000606A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000606B4);
}

uint64_t sub_1000606B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10009CCA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ErrorInfo()
{
  uint64_t result = qword_1000D96C8;
  if (!qword_1000D96C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000607C0()
{
  uint64_t result = sub_10009CCA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100060858(uint64_t a1@<X8>)
{
  id v11 = (id)sub_10009CA70();
  id v2 = [v11 domain];
  uint64_t v3 = sub_10009DC80();
  uint64_t v5 = v4;

  if (sub_10009DC80() == v3 && v6 == v5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v8 = sub_10009E260();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    sub_100060D64(v11, a1);
    goto LABEL_12;
  }
  if (v3 == 0xD000000000000011 && v5 == 0x80000001000A94F0 || (sub_10009E260() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_100061408(v11, a1);
    goto LABEL_12;
  }
  if (v3 == 0xD000000000000010 && v5 == 0x80000001000A9510)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    sub_100061894(v11, a1);
    goto LABEL_12;
  }
  char v9 = sub_10009E260();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_19;
  }
  uint64_t v10 = type metadata accessor for ErrorInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
LABEL_12:
}

uint64_t sub_100060A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10009CCC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v4 = sub_10009DCE0();
  uint64_t v6 = v5;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v7 = sub_10009DCE0();
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for ErrorInfo();
  id v11 = (uint64_t *)(a1 + *(int *)(v10 + 20));
  *id v11 = v4;
  v11[1] = v6;
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(v10 + 24));
  *uint64_t v12 = v7;
  v12[1] = v9;
  return sub_10009CC90();
}

uint64_t sub_100060BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v15 = type metadata accessor for ErrorInfo();
  uint64_t v16 = (void *)(a7 + *(int *)(v15 + 20));
  *uint64_t v16 = a6;
  v16[1] = a8;
  if (!*(void *)(a3 + 16) || (unint64_t v17 = sub_100035E30(a1, a2), (v18 & 1) == 0))
  {
    long long v25 = 0u;
    long long v26 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10000FD90(*(void *)(a3 + 56) + 32 * v17, (uint64_t)&v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v26 + 1))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    sub_100016FBC((uint64_t)&v25);
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    sub_10000D308(&qword_1000D9708);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10009EF80;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_100062214();
    *(void *)(v19 + 32) = v23;
    *(void *)(v19 + 40) = v24;
    a4 = sub_10009DCB0();
    a5 = v20;
  }
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v21 = (uint64_t *)(a7 + *(int *)(v15 + 24));
  *uint64_t v21 = a4;
  v21[1] = a5;
  return sub_10009CC90();
}

uint64_t sub_100060D64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  id v6 = [a1 userInfo];
  uint64_t v7 = sub_10009DBC0();

  switch((unint64_t)[a1 code])
  {
    case 'F':
    case 'G':
    case 'H':
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v8 = sub_10009DCE0();
      uint64_t v10 = v9;
      sub_10009DC00();
      sub_10009CCB0();
      sub_10009DCE0();
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v11 = sub_10009DCE0();
      sub_100060BD0(0xD00000000000002CLL, 0x80000001000A99B0, v7, v11, v12, v8, a2, v10);
      goto LABEL_7;
    case 'L':
    case 'M':
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v16 = sub_10009DCE0();
      uint64_t v18 = v17;
      sub_10009DC00();
      sub_10009CCB0();
      sub_10009DCE0();
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v19 = sub_10009DCE0();
      uint64_t v21 = v20;
      uint64_t v22 = sub_10009DC80();
      sub_100060BD0(v22, v23, v7, v19, v21, v16, a2, v18);
LABEL_7:
      uint64_t v24 = type metadata accessor for ErrorInfo();
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 0, 1, v24);
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for ErrorInfo();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t result = v14(a2, 1, 1, v13);
      break;
  }
  return result;
}

uint64_t sub_100061408@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  switch((unint64_t)[a1 code])
  {
    case 1uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v9 = sub_10009DCE0();
      uint64_t v11 = v10;
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v12 = sub_10009DCE0();
      uint64_t v14 = v13;
      uint64_t v15 = type metadata accessor for ErrorInfo();
      uint64_t v16 = (uint64_t *)(a2 + *(int *)(v15 + 20));
      *uint64_t v16 = v9;
      v16[1] = v11;
      uint64_t v17 = (uint64_t *)(a2 + *(int *)(v15 + 24));
      *uint64_t v17 = v12;
      v17[1] = v14;
      sub_10009CC90();
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
      break;
    default:
      uint64_t v6 = type metadata accessor for ErrorInfo();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
      uint64_t result = v7(a2, 1, 1, v6);
      break;
  }
  return result;
}

uint64_t sub_100061894@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = (char *)[a1 code];
  if ((unint64_t)(v6 - 1) < 2 || v6 == (char *)3)
  {
    sub_10009DC00();
    sub_10009CCB0();
    uint64_t v7 = sub_10009DCE0();
    uint64_t v9 = v8;
    sub_10009DC00();
    sub_10009CCB0();
    uint64_t v10 = sub_10009DCE0();
    uint64_t v12 = v11;
    uint64_t v13 = type metadata accessor for ErrorInfo();
    uint64_t v14 = (uint64_t *)(a2 + *(int *)(v13 + 20));
    *uint64_t v14 = v7;
    v14[1] = v9;
    uint64_t v15 = (uint64_t *)(a2 + *(int *)(v13 + 24));
    *uint64_t v15 = v10;
    v15[1] = v12;
    sub_10009CC90();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
  else
  {
    uint64_t v17 = type metadata accessor for ErrorInfo();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    return v18(a2, 1, 1, v17);
  }
}

uint64_t sub_100061B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v6 = sub_10009DCE0();
  uint64_t v8 = v7;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v9 = sub_10009DCE0();
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  if (a1)
  {
    uint64_t v11 = (void *)sub_10009CA70();
    id v12 = [v11 localizedDescription];
    uint64_t v13 = sub_10009DC80();
    uint64_t v15 = v14;

    v24._countAndFlagsBits = v13;
    v24._object = v15;
    sub_10009DD50(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 2570;
    v25._object = (void *)0xE200000000000000;
    sub_10009DD50(v25);

    swift_bridgeObjectRelease();
    uint64_t v16 = v22;
    uint64_t v17 = v23;
  }
  else
  {
    uint64_t v16 = v9;
    uint64_t v17 = v10;
  }
  uint64_t v18 = type metadata accessor for ErrorInfo();
  uint64_t v19 = (uint64_t *)(a2 + *(int *)(v18 + 20));
  *uint64_t v19 = v6;
  v19[1] = v8;
  uint64_t v20 = (uint64_t *)(a2 + *(int *)(v18 + 24));
  *uint64_t v20 = v16;
  v20[1] = v17;
  return sub_10009CC90();
}

uint64_t sub_100061DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v6 = sub_10009DCE0();
  uint64_t v8 = v7;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v9 = sub_10009DCE0();
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  if (a1)
  {
    uint64_t v11 = (void *)sub_10009CA70();
    id v12 = [v11 localizedDescription];
    uint64_t v13 = sub_10009DC80();
    uint64_t v15 = v14;

    v24._countAndFlagsBits = v13;
    v24._object = v15;
    sub_10009DD50(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 2570;
    v25._object = (void *)0xE200000000000000;
    sub_10009DD50(v25);

    swift_bridgeObjectRelease();
    uint64_t v16 = v22;
    uint64_t v17 = v23;
  }
  else
  {
    uint64_t v16 = v9;
    uint64_t v17 = v10;
  }
  uint64_t v18 = type metadata accessor for ErrorInfo();
  uint64_t v19 = (uint64_t *)(a2 + *(int *)(v18 + 20));
  *uint64_t v19 = v6;
  v19[1] = v8;
  uint64_t v20 = (uint64_t *)(a2 + *(int *)(v18 + 24));
  *uint64_t v20 = v16;
  v20[1] = v17;
  return sub_10009CC90();
}

uint64_t sub_100061FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v6 = sub_10009DCE0();
  uint64_t v8 = v7;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v9 = sub_10009DCE0();
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  if (a1)
  {
    uint64_t v11 = (void *)sub_10009CA70();
    id v12 = [v11 localizedDescription];
    uint64_t v13 = sub_10009DC80();
    uint64_t v15 = v14;

    v24._countAndFlagsBits = v13;
    v24._object = v15;
    sub_10009DD50(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 2570;
    v25._object = (void *)0xE200000000000000;
    sub_10009DD50(v25);

    swift_bridgeObjectRelease();
    uint64_t v16 = v22;
    uint64_t v17 = v23;
  }
  else
  {
    uint64_t v16 = v9;
    uint64_t v17 = v10;
  }
  uint64_t v18 = type metadata accessor for ErrorInfo();
  uint64_t v19 = (uint64_t *)(a2 + *(int *)(v18 + 20));
  *uint64_t v19 = v6;
  v19[1] = v8;
  uint64_t v20 = (uint64_t *)(a2 + *(int *)(v18 + 24));
  *uint64_t v20 = v16;
  v20[1] = v17;
  return sub_10009CC90();
}

unint64_t sub_100062214()
{
  unint64_t result = qword_1000D9710;
  if (!qword_1000D9710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9710);
  }
  return result;
}

uint64_t sub_100062268()
{
  return sub_10002C61C();
}

uint64_t sub_10006227C()
{
  return sub_10002C61C();
}

void *sub_100062290(void *a1, uint64_t a2)
{
  void (*v20)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38[14];
  char v39[8];
  uint64_t v40;

  uint64_t v3 = v2;
  uint64_t v6 = sub_10000D308(&qword_1000D9E80);
  __chkstk_darwin(v6 - 8);
  uint64_t v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10000D308(&qword_1000D98C0);
  uint64_t v31 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10000D308(&qword_1000D98C8);
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v33 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000D308(&qword_1000DB540);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[8] = 0;
  uint64_t v15 = (char *)v3
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15SignInViewModel__isSigninInProgress;
  v39[0] = 0;
  sub_10009CF00();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v16(v15, v14, v11);
  uint64_t v17 = (char *)v3 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15SignInViewModel__isSignedIn;
  v39[0] = 0;
  sub_10009CF00();
  v16(v17, v14, v11);
  sub_1000102FC((uint64_t)a1, (uint64_t)(v3 + 2));
  v3[7] = a2;
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  sub_10000FF9C(a1, v18);
  uint64_t v20 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 16);
  swift_retain();
  v20(v38, v18, v19);
  sub_100064C44((uint64_t)v38, (uint64_t)v39);
  uint64_t v21 = v40;
  if (v40) {
    sub_1000468B8(v38);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v37) = v21 != 0;
  swift_retain();
  sub_10009CF40();
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_10000FF9C(a1, v22);
  uint64_t v37 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
  sub_10000D308(&qword_1000D7038);
  sub_100015700(&qword_1000D7040, &qword_1000D7038);
  sub_10009CF70();
  swift_release();
  sub_10001B664();
  uint64_t v37 = (id)sub_10009DF00();
  Swift::String v24 = sub_10009DEF0();
  Swift::String v25 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v32, 1, 1, v24);
  sub_100015700(&qword_1000D98D0, &qword_1000D98C0);
  sub_100034944();
  long long v26 = v33;
  uint64_t v27 = v34;
  sub_10009CF90();
  sub_100010864(v25, &qword_1000D9E80);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v27);
  swift_getKeyPath();
  uint64_t v37 = v3;
  sub_100015700(&qword_1000D98D8, &qword_1000D98C8);
  uint64_t v28 = v36;
  uint64_t v29 = sub_10009CFB0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v28);
  v3[8] = v29;
  swift_release();
  sub_1000100E8((uint64_t)a1);
  return v3;
}

uint64_t sub_100062850@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(void *)(result + 8) != 0;
  return result;
}

uint64_t sub_100062864@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000628E4()
{
  return sub_10009CF40();
}

uint64_t sub_100062958(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  sub_10009DE40();
  v2[31] = sub_10009DE30();
  uint64_t v4 = sub_10009DE10();
  v2[32] = v4;
  v2[33] = v3;
  return _swift_task_switch(sub_1000629F0, v4, v3);
}

uint64_t sub_1000629F0()
{
  uint64_t v54 = v0;
  uint64_t v1 = v0 + 232;
  uint64_t v2 = *(void *)(v0 + 232);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 368) = 1;
  swift_retain();
  sub_10009CF40();
  uint64_t v3 = sub_10009DC80();
  if (*(void *)(v2 + 16) && (unint64_t v5 = sub_100035E30(v3, v4), (v6 & 1) != 0))
  {
    sub_10000FD90(*(void *)(*(void *)v1 + 56) + 32 * v5, v0 + 56);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 80))
  {
    sub_100010864(v0 + 56, &qword_1000D58B8);
    goto LABEL_13;
  }
  uint64_t v7 = (uint64_t *)(v0 + 216);
  sub_10000D308(&qword_1000D98B8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10009CE60();
    sub_10000D690(v18, (uint64_t)qword_1000E3488);
    uint64_t v19 = sub_10009CE40();
    os_log_type_t v20 = sub_10009DEB0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      *(void *)(v0 + 200) = sub_10000DBA8(0xD000000000000013, 0x80000001000AA430, &v53);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s called without IDMS Tokens", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_100063A1C;
    char v23 = 1;
    goto LABEL_49;
  }
  uint64_t v8 = *v7;
  if (!*(void *)(*v7 + 16) || (unint64_t v9 = sub_100035E30(0xD00000000000001ELL, 0x80000001000A6790), (v10 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_10009CE60();
    sub_10000D690(v24, (uint64_t)qword_1000E3488);
    Swift::String v25 = sub_10009CE40();
    os_log_type_t v26 = sub_10009DEB0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      *(void *)(v0 + 184) = sub_10000DBA8(0xD000000000000013, 0x80000001000AA430, &v53);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s Grand Slam token missing for Configurator service identifier", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1000638FC;
    char v23 = 2;
    goto LABEL_49;
  }
  uint64_t v11 = (uint64_t *)(*(void *)(v8 + 56) + 16 * v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)(v0 + 272) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_10009DC80();
  if (*(void *)(v2 + 16) && (unint64_t v16 = sub_100035E30(v14, v15), (v17 & 1) != 0))
  {
    sub_10000FD90(*(void *)(*(void *)v1 + 56) + 32 * v16, v0 + 120);
  }
  else
  {
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 144))
  {
    swift_bridgeObjectRelease();
    sub_100010864(v0 + 120, &qword_1000D58B8);
LABEL_31:
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_10009CE60();
    sub_10000D690(v34, (uint64_t)qword_1000E3488);
    uint64_t v35 = sub_10009CE40();
    os_log_type_t v36 = sub_10009DEB0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      *(void *)(v0 + 224) = sub_10000DBA8(0xD000000000000013, 0x80000001000AA430, &v53);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%s Username missing", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_1000637DC;
    char v23 = 3;
    goto LABEL_49;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  uint64_t v29 = *(void *)(v0 + 160);
  uint64_t v52 = *(void *)(v0 + 152);
  *(void *)(v0 + 280) = v29;
  uint64_t v30 = sub_10009DC80();
  if (*(void *)(v2 + 16) && (unint64_t v32 = sub_100035E30(v30, v31), (v33 & 1) != 0))
  {
    sub_10000FD90(*(void *)(*(void *)v1 + 56) + 32 * v32, v0 + 88);
  }
  else
  {
    *(_OWORD *)(v0 + 88) = 0u;
    *(_OWORD *)(v0 + 104) = 0u;
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 112))
  {
    if (swift_dynamicCast())
    {
      uint64_t v39 = *(void *)(v0 + 240);
      uint64_t v40 = *(void *)(v0 + 168);
      uint64_t v41 = *(void *)(v0 + 176);
      *(void *)(v0 + 288) = v41;
      sub_1000102FC(v39 + 16, v0 + 16);
      uint64_t v42 = *(void *)(v0 + 40);
      uint64_t v43 = *(void *)(v0 + 48);
      sub_10000FF9C((void *)(v0 + 16), v42);
      long long v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 + 8) + **(int **)(v43 + 8));
      char v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v44;
      *char v44 = v0;
      v44[1] = sub_10006346C;
      return v51(v52, v29, v40, v41, v13, v12, v42, v43);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100010864(v0 + 88, &qword_1000D58B8);
  }
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_10009CE60();
  sub_10000D690(v46, (uint64_t)qword_1000E3488);
  long long v47 = sub_10009CE40();
  os_log_type_t v48 = sub_10009DEB0();
  if (os_log_type_enabled(v47, v48))
  {
    long long v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)long long v49 = 136315138;
    *(void *)(v0 + 208) = sub_10000DBA8(0xD000000000000013, 0x80000001000AA430, &v53);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s AltDSID missing", v49, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  long long v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v50;
  *long long v50 = v0;
  v50[1] = sub_1000636BC;
  char v23 = 4;
LABEL_49:
  return sub_100064664(v23);
}

uint64_t sub_10006346C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 264);
  uint64_t v4 = *(void *)(v2 + 256);
  if (v0) {
    unint64_t v5 = sub_100063B9C;
  }
  else {
    unint64_t v5 = sub_100063604;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100063604()
{
  swift_release();
  sub_1000100E8(v0 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 370) = 0;
  swift_retain();
  sub_10009CF40();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000636BC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100064CB0, v3, v2);
}

uint64_t sub_1000637DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100064CB0, v3, v2);
}

uint64_t sub_1000638FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100064CB0, v3, v2);
}

uint64_t sub_100063A1C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100063B3C, v3, v2);
}

uint64_t sub_100063B3C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100063B9C()
{
  uint64_t v1 = v0[38];
  sub_1000100E8((uint64_t)(v0 + 2));
  v0[24] = v1;
  uint64_t v2 = (char *)v0 + 369;
  swift_errorRetain();
  sub_10000D308(&qword_1000D5858);
  if (!swift_dynamicCast())
  {
LABEL_5:
    swift_errorRelease();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[45] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100063FF4;
    char v4 = 0;
    goto LABEL_7;
  }
  if (*v2)
  {
    if (*v2 == 1)
    {
      swift_errorRelease();
      uint64_t v3 = (void *)swift_task_alloc();
      v0[43] = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_100063D4C;
      char v4 = 6;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  swift_errorRelease();
  char v6 = (void *)swift_task_alloc();
  v0[44] = v6;
  *char v6 = v0;
  v6[1] = sub_100063ED4;
  char v4 = 7;
LABEL_7:
  return sub_100064664(v4);
}

uint64_t sub_100063D4C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100063E6C, v3, v2);
}

uint64_t sub_100063E6C()
{
  swift_release();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100063ED4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100064CB4, v3, v2);
}

uint64_t sub_100063FF4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100064114, v3, v2);
}

uint64_t sub_100064114()
{
  swift_release();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100064180(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_10009DE40();
  v2[4] = sub_10009DE30();
  uint64_t v4 = sub_10009DE10();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100064218, v4, v3);
}

uint64_t sub_100064218()
{
  uint64_t v1 = (void *)sub_10009CA70();
  v0[7] = v1;
  id v2 = [v1 domain];
  uint64_t v3 = sub_10009DC80();
  uint64_t v5 = v4;

  if (v3 == sub_10009DC80() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_10009E260();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_10;
    }
  }
  if ([v1 code] == (id)-7006)
  {
    unint64_t v9 = (void *)swift_task_alloc();
    v0[8] = v9;
    *unint64_t v9 = v0;
    v9[1] = sub_1000643B8;
    char v10 = 5;
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v11 = (void *)swift_task_alloc();
  v0[9] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100064544;
  char v10 = 0;
LABEL_11:
  return sub_100064664(v10);
}

uint64_t sub_1000643B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_1000644D8, v3, v2);
}

uint64_t sub_1000644D8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100064544()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100064CAC, v3, v2);
}

uint64_t sub_100064664(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 65) = a1;
  sub_10009DE40();
  *(void *)(v2 + 24) = sub_10009DE30();
  uint64_t v4 = sub_10009DE10();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v3;
  return _swift_task_switch(sub_100064700, v4, v3);
}

uint64_t sub_100064700()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 65);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 64) = 0;
  swift_retain();
  sub_10009CF40();
  id v2 = objc_allocWithZone((Class)NSError);
  NSString v3 = sub_10009DC70();
  id v4 = [v2 initWithDomain:v3 code:v1 + 1 userInfo:0];
  *(void *)(v0 + 48) = v4;

  id v5 = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100064854;
  return sub_100042090((uint64_t)v4);
}

uint64_t sub_100064854()
{
  uint64_t v1 = *v0;
  id v2 = *(void **)(*v0 + 48);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_100064994, v4, v3);
}

uint64_t sub_100064994()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100064A00()
{
  sub_1000100E8(v0 + 16);
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15SignInViewModel__isSigninInProgress;
  uint64_t v2 = sub_10000D308(&qword_1000DB540);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15SignInViewModel__isSignedIn, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100064AEC()
{
  return type metadata accessor for SignInViewModel();
}

uint64_t type metadata accessor for SignInViewModel()
{
  uint64_t result = qword_1000D9750;
  if (!qword_1000D9750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100064B40()
{
  sub_1000392A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100064BF4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SignInViewModel();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

uint64_t sub_100064C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308((uint64_t *)&unk_1000D5608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100064CB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100064D2C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension22FakeNetworkInfoStorage__networkInfo;
  uint64_t v2 = sub_10000D308(&qword_1000D7970);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100064DAC()
{
  return type metadata accessor for FakeNetworkInfoStorage();
}

uint64_t type metadata accessor for FakeNetworkInfoStorage()
{
  uint64_t result = qword_1000D9910;
  if (!qword_1000D9910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100064E00()
{
  sub_10003C388();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100064E9C()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_100064EBC, v0, 0);
}

uint64_t sub_100064EBC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_100064F70(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return _swift_task_switch(sub_100064F94, v2, 0);
}

uint64_t sub_100064F94()
{
  unint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v2;
  v0[3] = v1;
  swift_retain();
  sub_100034C48(v2, v1);
  sub_10009CF40();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10006505C()
{
  uint64_t v0 = sub_10000D308(&qword_1000D7968);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D7970);
  sub_10009CF10();
  swift_endAccess();
  sub_10003CE0C();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

unint64_t sub_100065174(uint64_t a1)
{
  unint64_t result = sub_10006519C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10006519C()
{
  unint64_t result = qword_1000D99E0;
  if (!qword_1000D99E0)
  {
    type metadata accessor for FakeNetworkInfoStorage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D99E0);
  }
  return result;
}

double sub_1000651F4@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100065278(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100034C48(v1, v2);
  swift_retain();
  return sub_10009CF40();
}

uint64_t destroy for FileExporterView()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t _s46AddDevicesToAutomatedDeviceEnrollmentExtension16FileExporterViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FileExporterView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FileExporterView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileExporterView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileExporterView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileExporterView()
{
  return &type metadata for FileExporterView;
}

unint64_t sub_1000654CC()
{
  unint64_t result = qword_1000D99E8;
  if (!qword_1000D99E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D99E8);
  }
  return result;
}

id sub_100065520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_allocWithZone((Class)UIActivityViewController);
  swift_bridgeObjectRetain();
  Class isa = sub_10009DDB0().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithActivityItems:isa applicationActivities:0];

  char v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v13[4] = sub_1000658C0;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_100065670;
  v13[3] = &unk_1000CD730;
  uint64_t v11 = _Block_copy(v13);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v9 setCompletionWithItemsHandler:v11];
  _Block_release(v11);
  return v9;
}

uint64_t sub_100065670(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4) {
    uint64_t v9 = sub_10009DDC0();
  }
  else {
    uint64_t v9 = 0;
  }
  swift_retain();
  id v10 = a2;
  id v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_10006572C(uint64_t a1)
{
  return sub_100065520(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_10006573C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10006582C();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000657A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10006582C();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100065804()
{
}

unint64_t sub_10006582C()
{
  unint64_t result = qword_1000D99F0;
  if (!qword_1000D99F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D99F0);
  }
  return result;
}

uint64_t sub_100065880()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000658C0(uint64_t result, char a2)
{
  if (!result || (a2 & 1) != 0) {
    return (*(uint64_t (**)(void))(v2 + 24))();
  }
  return result;
}

uint64_t sub_1000658F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100065908()
{
  return swift_release();
}

uint64_t destroy for AddDevicesToADEExtensionViewConfiguration()
{
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t _s46AddDevicesToAutomatedDeviceEnrollmentExtension41AddDevicesToADEExtensionViewConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AddDevicesToADEExtensionViewConfiguration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AddDevicesToADEExtensionViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AddDevicesToADEExtensionViewConfiguration()
{
  return &type metadata for AddDevicesToADEExtensionViewConfiguration;
}

uint64_t sub_100065A50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100065A70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 24);
  type metadata accessor for AddDevicesExtensionContainerViewModel();
  swift_allocObject();
  uint64_t v4 = swift_unknownObjectRetain();
  sub_100038C64(v4, v3);
  sub_100065AF8();
  uint64_t result = sub_10009D1A0();
  *a1 = result;
  a1[1] = v6;
  return result;
}

unint64_t sub_100065AF8()
{
  unint64_t result = qword_1000D5990;
  if (!qword_1000D5990)
  {
    type metadata accessor for AddDevicesExtensionContainerViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D5990);
  }
  return result;
}

unint64_t sub_100065B54()
{
  unint64_t result = qword_1000D99F8;
  if (!qword_1000D99F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D99F8);
  }
  return result;
}

uint64_t type metadata accessor for FakeCurrentWiFiNetworkPrimitives()
{
  return self;
}

uint64_t sub_100065BD0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FakeCurrentWiFiNetworkPrimitivesWithLongWiFiName()
{
  return self;
}

uint64_t sub_100065C34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100065C68()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100065C9C()
{
  return *(unsigned __int8 *)(*(void *)v0 + 48);
}

uint64_t sub_100065CB4(uint64_t a1)
{
  uint64_t v2 = sub_10009D1D0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10009D2F0();
}

uint64_t sub_100065D7C@<X0>(void *a1@<X8>)
{
  type metadata accessor for ManualPinEntryView();
  sub_10000D308(&qword_1000D9D68);
  uint64_t result = sub_10009D960();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100065DF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_10009D120();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for ManualPinEntryView();
  __chkstk_darwin(v9);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v14 = (void *)(a4 + v9[7]);
  uint64_t v16 = v14[1];
  uint64_t v17 = v14[2];
  *(void *)&long long v36 = *v14;
  uint64_t v15 = v36;
  *((void *)&v36 + 1) = v16;
  uint64_t v37 = v17;
  uint64_t v40 = v13;
  uint64_t v41 = v12;
  swift_bridgeObjectRetain();
  sub_10000D308(&qword_1000D9D68);
  sub_10009D970();
  *(void *)&long long v36 = v15;
  *((void *)&v36 + 1) = v16;
  uint64_t v37 = v17;
  sub_10009D960();
  uint64_t v18 = sub_10009DD30();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a4 + v9[6]);
  sub_100069210(a4, (uint64_t)v11);
  if (v18 != v19) {
    return sub_100069700((uint64_t)v11);
  }
  os_log_type_t v20 = &v11[v9[9]];
  char v21 = *v20;
  uint64_t v22 = *((void *)v20 + 1);
  LOBYTE(v36) = v21;
  *((void *)&v36 + 1) = v22;
  sub_10000D308(&qword_1000DA1A0);
  sub_10009D960();
  uint64_t result = sub_100069700((uint64_t)v11);
  if ((v40 & 1) == 0)
  {
    uint64_t v24 = a4 + v9[9];
    char v25 = *(unsigned char *)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    LOBYTE(v36) = v25;
    *((void *)&v36 + 1) = v26;
    LOBYTE(v40) = 1;
    sub_10009D970();
    sub_100072190((uint64_t)v8);
    sub_10009D110();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v35);
    uint64_t v27 = *(void *)(a4 + v9[5]);
    if (v27)
    {
      uint64_t v28 = v14[2];
      long long v36 = *(_OWORD *)v14;
      uint64_t v37 = v28;
      swift_retain();
      sub_10009D960();
      uint64_t v29 = v40;
      uint64_t v30 = v41;
      sub_1000102FC(v27 + 16, (uint64_t)&v36);
      uint64_t v31 = v38;
      uint64_t v32 = v39;
      sub_10000FF9C(&v36, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 40))(v29, v30, v31, v32);
      sub_1000100E8((uint64_t)&v36);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      type metadata accessor for VisualPinScannerViewModel();
      sub_1000686DC();
      uint64_t result = sub_10009D260();
      __break(1u);
    }
  }
  return result;
}

double sub_1000660F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000D308(&qword_1000D7DD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ManualPinEntryView() + 28));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = v9[2];
  *(void *)&long long v53 = *v9;
  *((void *)&v53 + 1) = v11;
  *(void *)&long long v54 = v12;
  sub_10000D308(&qword_1000D9D68);
  sub_10009D960();
  uint64_t v13 = sub_10009DD30();
  swift_bridgeObjectRelease();
  if (v13 <= a1)
  {
    uint64_t v31 = sub_10009D940();
    sub_10009D690();
    uint64_t v32 = enum case for Font.Design.default(_:);
    uint64_t v33 = sub_10009D680();
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 104))(v8, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v8, 0, 1, v33);
    uint64_t v35 = sub_10009D6B0();
    sub_100010864((uint64_t)v8, &qword_1000D7DD0);
    uint64_t KeyPath = swift_getKeyPath();
    LOBYTE(v34) = sub_10009D610();
    unsigned __int8 v37 = sub_10009D620();
    unsigned __int8 v38 = sub_10009D640();
    sub_10009D640();
    if (sub_10009D640() != v34) {
      unsigned __int8 v38 = sub_10009D640();
    }
    sub_10009D640();
    if (sub_10009D640() != v37) {
      unsigned __int8 v38 = sub_10009D640();
    }
    uint64_t v46 = v31;
    uint64_t v47 = KeyPath;
    uint64_t v48 = v35;
    uint64_t v49 = v38;
    long long v50 = 0u;
    long long v51 = 0u;
    __int16 v52 = 257;
  }
  else
  {
    *(void *)&long long v53 = v10;
    *((void *)&v53 + 1) = v11;
    *(void *)&long long v54 = v12;
    sub_10009D960();
    *(void *)&long long v53 = v10;
    *((void *)&v53 + 1) = v11;
    *(void *)&long long v54 = v12;
    sub_10009D960();
    swift_bridgeObjectRelease();
    sub_10009DD40();
    swift_bridgeObjectRelease();
    *(void *)&long long v53 = v10;
    *((void *)&v53 + 1) = v11;
    *(void *)&long long v54 = v12;
    sub_10009D960();
    uint64_t v14 = sub_10009DD70();
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    *(void *)&long long v53 = v14;
    *((void *)&v53 + 1) = v16;
    sub_10001E4B8();
    uint64_t v17 = sub_10009D750();
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    uint64_t v22 = enum case for Font.Design.default(_:);
    uint64_t v23 = sub_10009D680();
    uint64_t v24 = *(void *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v8, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v8, 0, 1, v23);
    sub_10009D6B0();
    sub_100010864((uint64_t)v8, &qword_1000D7DD0);
    uint64_t v25 = sub_10009D740();
    uint64_t v27 = v26;
    LOBYTE(v24) = v28;
    uint64_t v30 = v29;
    swift_release();
    sub_10001F7AC(v17, v19, v21);
    swift_bridgeObjectRelease();
    uint64_t v46 = v25;
    uint64_t v47 = v27;
    uint64_t v48 = v24 & 1;
    uint64_t v49 = v30;
    long long v50 = 0u;
    long long v51 = 0u;
    __int16 v52 = 0;
  }
  sub_10000D308(&qword_1000D9D90);
  sub_1000699E4(&qword_1000D9D98, &qword_1000D9D90, (void (*)(void))sub_100069A64);
  sub_10009D4E0();
  double result = *(double *)&v53;
  long long v40 = v54;
  long long v41 = v55;
  long long v42 = v56;
  char v43 = v57;
  char v44 = v58;
  *(_OWORD *)a3 = v53;
  *(_OWORD *)(a3 + 16) = v40;
  *(_OWORD *)(a3 + 32) = v41;
  *(_OWORD *)(a3 + 48) = v42;
  *(unsigned char *)(a3 + 64) = v43;
  *(unsigned char *)(a3 + 65) = v44;
  return result;
}

uint64_t sub_100066598@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v93 = sub_10000D308(&qword_1000D9CE8);
  uint64_t v90 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  long long v89 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_10000D308(&qword_1000D9CF0);
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v92 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000D308(&qword_1000D9CF8);
  uint64_t v97 = *(void *)(v5 - 8);
  uint64_t v98 = v5;
  __chkstk_darwin(v5);
  long long v96 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10000D308(&qword_1000D9D00);
  uint64_t v7 = __chkstk_darwin(v91);
  uint64_t v100 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v99 = (uint64_t)&v81 - v9;
  uint64_t v87 = type metadata accessor for ManualPinEntryView();
  uint64_t v84 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = v10;
  uint64_t v86 = (uint64_t)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10009D1D0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000D308(&qword_1000D9D08);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000D308(&qword_1000D9D10);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  char v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10000D308(&qword_1000D9D18);
  __chkstk_darwin(v82);
  uint64_t v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000D308(&qword_1000D9D20);
  uint64_t v103 = *(void *)(v24 - 8);
  uint64_t v104 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v88 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v83 = (char *)&v81 - v28;
  __chkstk_darwin(v27);
  uint64_t v102 = (char *)&v81 - v29;
  *(void *)uint64_t v17 = sub_10009D3D0();
  *((void *)v17 + 1) = 0;
  unsigned char v17[16] = 1;
  uint64_t v30 = sub_10000D308(&qword_1000D9D28);
  uint64_t v31 = a1;
  sub_100067154(a1, (uint64_t)&v17[*(int *)(v30 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for LayoutDirection.leftToRight(_:), v11);
  uint64_t v33 = (uint64_t *)&v21[*(int *)(v19 + 44)];
  uint64_t v34 = sub_10000D308(&qword_1000D9D30);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)v33 + *(int *)(v34 + 28), v14, v11);
  *uint64_t v33 = KeyPath;
  sub_100010720((uint64_t)v17, (uint64_t)v21, &qword_1000D9D08);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_100010864((uint64_t)v17, &qword_1000D9D08);
  LOBYTE(v11) = sub_10009D610();
  unsigned __int8 v35 = sub_10009D620();
  char v36 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v11) {
    char v36 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v35) {
    char v36 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  sub_100010720((uint64_t)v21, (uint64_t)v23, &qword_1000D9D10);
  uint64_t v45 = &v23[*(int *)(v82 + 36)];
  *uint64_t v45 = v36;
  *((void *)v45 + 1) = v38;
  *((void *)v45 + 2) = v40;
  *((void *)v45 + 3) = v42;
  *((void *)v45 + 4) = v44;
  v45[40] = 0;
  sub_100010864((uint64_t)v21, &qword_1000D9D10);
  uint64_t v46 = v86;
  sub_100069210(v31, v86);
  uint64_t v47 = *(unsigned __int8 *)(v84 + 80);
  uint64_t v48 = swift_allocObject();
  sub_100069278(v46, v48 + ((v47 + 16) & ~v47));
  sub_1000699E4(&qword_1000D9D38, &qword_1000D9D18, (void (*)(void))sub_1000693EC);
  uint64_t v49 = v83;
  sub_10009D7C0();
  swift_release();
  sub_100010864((uint64_t)v23, &qword_1000D9D18);
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v49, v104);
  uint64_t v84 = sub_10009D3E0();
  uint64_t v83 = v50;
  uint64_t v82 = v51;
  sub_100069210(v31, v46);
  sub_10009DE40();
  uint64_t v52 = sub_10009DE30();
  uint64_t v53 = (v47 + 32) & ~v47;
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v52;
  *(void *)(v54 + 24) = &protocol witness table for MainActor;
  sub_100069278(v46, v54 + v53);
  sub_100069210(v31, v46);
  uint64_t v55 = sub_10009DE30();
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v55;
  *(void *)(v56 + 24) = &protocol witness table for MainActor;
  sub_100069278(v46, v56 + v53);
  sub_10009D9D0();
  char v57 = v89;
  sub_10009DAE0();
  uint64_t v58 = sub_100015700(&qword_1000D9D58, &qword_1000D9CE8);
  uint64_t v59 = v92;
  uint64_t v60 = v93;
  sub_10009D7B0();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v60);
  uint64_t v61 = v31 + *(int *)(v87 + 32);
  char v62 = *(unsigned char *)v61;
  uint64_t v63 = *(void *)(v61 + 8);
  LOBYTE(v61) = *(unsigned char *)(v61 + 16);
  char v105 = v62;
  uint64_t v106 = v63;
  char v107 = v61;
  sub_10000D308(&qword_1000D9CC0);
  sub_10009D090();
  *(void *)&long long v108 = v60;
  *((void *)&v108 + 1) = v58;
  swift_getOpaqueTypeConformance2();
  os_log_type_t v64 = v96;
  uint64_t v65 = v95;
  sub_10009D830();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v59, v65);
  sub_10009DA90();
  sub_10009D0E0();
  uint64_t v67 = v97;
  uint64_t v66 = v98;
  uint64_t v68 = (uint64_t)v100;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v100, v64, v98);
  uint64_t v69 = (_OWORD *)(v68 + *(int *)(v91 + 36));
  long long v70 = v109;
  *uint64_t v69 = v108;
  v69[1] = v70;
  v69[2] = v110;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
  uint64_t v71 = v99;
  sub_100010800(v68, v99, &qword_1000D9D00);
  uint64_t v73 = v102;
  uint64_t v72 = v103;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  uint64_t v75 = v88;
  uint64_t v76 = v104;
  v74(v88, v102, v104);
  sub_100010720(v71, v68, &qword_1000D9D00);
  uint64_t v77 = v101;
  v74(v101, v75, v76);
  uint64_t v78 = sub_10000D308(&qword_1000D9D60);
  sub_100010720(v68, (uint64_t)&v77[*(int *)(v78 + 48)], &qword_1000D9D00);
  sub_100010864(v71, &qword_1000D9D00);
  uint64_t v79 = *(void (**)(char *, uint64_t))(v72 + 8);
  v79(v73, v76);
  sub_100010864(v68, &qword_1000D9D00);
  return ((uint64_t (*)(char *, uint64_t))v79)(v75, v76);
}

uint64_t sub_100067154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ManualPinEntryView();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v4);
  uint64_t v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10000D308(&qword_1000D9D70);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v56 = a1;
  char v57 = &v42[-v18];
  uint64_t v19 = *(int *)(v5 + 32);
  uint64_t v20 = *(void *)(a1 + v19);
  if (v20 < -1)
  {
    __break(1u);
  }
  else
  {
    long long v50 = v17;
    uint64_t v51 = v16;
    uint64_t v52 = v15;
    uint64_t v53 = a2;
    uint64_t v60 = 0;
    uint64_t v61 = v20 / 2;
    uint64_t v55 = v19;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v21 = v56;
    sub_100069210(v56, (uint64_t)&v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)]);
    uint64_t v22 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v23 = (v22 + 16) & ~v22;
    uint64_t v48 = v22 | 7;
    uint64_t v49 = v23 + v7;
    uint64_t v24 = swift_allocObject();
    sub_100069278((uint64_t)&v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v24 + v23);
    uint64_t v25 = sub_10000D308(&qword_1000D6540);
    uint64_t v26 = sub_10000D308(&qword_1000D9D78);
    sub_10001F9A8();
    sub_100015700(&qword_1000D9D80, &qword_1000D9D78);
    uint64_t KeyPath = v25;
    uint64_t v47 = v26;
    sub_10009D9F0();
    sub_10009DA90();
    uint64_t result = sub_10009D0E0();
    uint64_t v27 = *(void *)(v21 + v55);
    if (v27 >= 0) {
      uint64_t v28 = *(void *)(v21 + v55);
    }
    else {
      uint64_t v28 = v27 + 1;
    }
    uint64_t v29 = v28 >> 1;
    if (v27 >= v29)
    {
      uint64_t v55 = v65;
      uint64_t v46 = v64;
      int v45 = v63;
      uint64_t v44 = v62;
      int v43 = v61;
      uint64_t v30 = v60;
      uint64_t v58 = v29;
      uint64_t v59 = v27;
      swift_getKeyPath();
      sub_100069210(v56, (uint64_t)v8);
      uint64_t v31 = swift_allocObject();
      sub_100069278((uint64_t)v8, v31 + v23);
      uint64_t v32 = v50;
      sub_10009D9F0();
      uint64_t v33 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v10 + 16);
      uint64_t v34 = v51;
      unsigned __int8 v35 = v57;
      v33((uint64_t)v51, v57, v9);
      char v36 = v52;
      v33((uint64_t)v52, v32, v9);
      uint64_t v37 = v53;
      v33(v53, v34, v9);
      uint64_t v38 = sub_10000D308(&qword_1000D9D88);
      uint64_t v39 = v37 + *(int *)(v38 + 48);
      *(void *)uint64_t v39 = 0;
      *(unsigned char *)(v39 + 8) = 1;
      *(void *)(v39 + 16) = v30;
      *(unsigned char *)(v39 + 24) = v43;
      *(void *)(v39 + 32) = v44;
      *(unsigned char *)(v39 + 40) = v45;
      uint64_t v40 = v55;
      *(void *)(v39 + 48) = v46;
      *(void *)(v39 + 56) = v40;
      v33(v37 + *(int *)(v38 + 64), v36, v9);
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v41((uint64_t)v32, v9);
      v41((uint64_t)v35, v9);
      v41((uint64_t)v36, v9);
      return ((uint64_t (*)(unsigned char *, uint64_t))v41)(v34, v9);
    }
  }
  __break(1u);
  return result;
}

__n128 sub_10006763C@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = sub_10009D400();
  sub_1000660F8(v5, a2, (uint64_t)v13);
  char v7 = v14;
  char v8 = v15;
  __n128 result = (__n128)v13[0];
  long long v10 = v13[1];
  long long v11 = v13[2];
  long long v12 = v13[3];
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  *(__n128 *)(a3 + 24) = result;
  *(_OWORD *)(a3 + 40) = v10;
  *(_OWORD *)(a3 + 56) = v11;
  *(_OWORD *)(a3 + 72) = v12;
  *(unsigned char *)(a3 + 88) = v7;
  *(unsigned char *)(a3 + 89) = v8;
  return result;
}

uint64_t sub_1000676C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v38 = sub_10009DF70();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  unsigned __int8 v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ManualPinEntryView();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v34 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000D308(&qword_1000D9C98);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000D308(&qword_1000D9CA0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  long long v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000D308(&qword_1000D9CA8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v8 = sub_10009D400();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 1;
  uint64_t v17 = sub_10000D308(&qword_1000D9CB0);
  sub_100067B38(v1, &v8[*(int *)(v17 + 44)]);
  char v18 = sub_10009D600();
  sub_100010720((uint64_t)v8, (uint64_t)v12, &qword_1000D9C98);
  uint64_t v19 = &v12[*(int *)(v10 + 44)];
  *uint64_t v19 = v18;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  v19[40] = 1;
  sub_100010864((uint64_t)v8, &qword_1000D9C98);
  sub_100069210(v1, (uint64_t)v5);
  unint64_t v20 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v21 = swift_allocObject();
  sub_100069278((uint64_t)v5, v21 + v20);
  sub_100010720((uint64_t)v12, (uint64_t)v16, &qword_1000D9CA0);
  uint64_t v22 = (uint64_t (**)())&v16[*(int *)(v14 + 44)];
  *uint64_t v22 = sub_1000692DC;
  v22[1] = (uint64_t (*)())v21;
  void v22[2] = 0;
  v22[3] = 0;
  sub_100010864((uint64_t)v12, &qword_1000D9CA0);
  sub_100069210(v1, (uint64_t)v5);
  uint64_t v23 = swift_allocObject();
  sub_100069278((uint64_t)v5, v23 + v20);
  id v24 = [self defaultCenter];
  if (qword_1000D51F8 != -1) {
    swift_once();
  }
  uint64_t v25 = v35;
  sub_10009DF80();

  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000692F8;
  *(void *)(v26 + 24) = v23;
  uint64_t v27 = v37;
  sub_100010720((uint64_t)v16, v37, &qword_1000D9CA8);
  uint64_t v28 = sub_10000D308(&qword_1000D9CB8);
  uint64_t v29 = v36;
  uint64_t v30 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v27 + *(int *)(v28 + 52), v25, v38);
  uint64_t v31 = (uint64_t (**)(uint64_t))(v27 + *(int *)(v28 + 56));
  *uint64_t v31 = sub_1000693AC;
  v31[1] = (uint64_t (*)(uint64_t))v26;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v30);
  return sub_100010864((uint64_t)v16, &qword_1000D9CA8);
}

uint64_t sub_100067B38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v78 = a2;
  uint64_t v2 = type metadata accessor for ManualPinEntryView();
  uint64_t v84 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v85 = v3;
  uint64_t v86 = &v72[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10000D308(&qword_1000D6620);
  uint64_t v95 = *(void *)(v4 - 8);
  uint64_t v96 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v94 = &v72[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v92 = &v72[-v7];
  uint64_t v8 = sub_10000D308(&qword_1000D9CC8);
  __chkstk_darwin(v8 - 8);
  uint64_t v75 = (uint64_t *)&v72[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v80 = sub_10000D308(&qword_1000D9CD0);
  uint64_t v10 = __chkstk_darwin(v80);
  uint64_t v93 = &v72[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v79 = &v72[-v13];
  __chkstk_darwin(v12);
  uint64_t v91 = &v72[-v14];
  uint64_t v15 = sub_10009CCC0();
  __chkstk_darwin(v15 - 8);
  uint64_t v74 = &v72[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_10009DC60();
  __chkstk_darwin(v17 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v99 = sub_10009DCE0();
  uint64_t v100 = v18;
  sub_10001E4B8();
  uint64_t v19 = sub_10009D750();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  uint64_t v24 = sub_10009D730();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_10001F7AC(v19, v21, v23);
  swift_bridgeObjectRelease();
  sub_10009D660();
  uint64_t v89 = sub_10009D740();
  uint64_t v90 = v29;
  uint64_t v97 = v30;
  char v32 = v31;
  uint64_t v33 = v75;
  swift_release();
  uint64_t v34 = v26;
  uint64_t v35 = v76;
  sub_10001F7AC(v24, v34, v28);
  swift_bridgeObjectRelease();
  int v77 = sub_10009D620();
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v99 = sub_10009DCE0();
  uint64_t v100 = v36;
  uint64_t v83 = sub_10009D750();
  uint64_t v82 = v37;
  char v39 = v38;
  uint64_t v88 = v40;
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v33 = sub_10009DA90();
  v33[1] = v41;
  uint64_t v42 = sub_10000D308(&qword_1000D9CD8);
  sub_100066598(v35, (char *)v33 + *(int *)(v42 + 44));
  LOBYTE(v24) = sub_10009D610();
  unsigned __int8 v43 = sub_10009D620();
  char v44 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v24) {
    char v44 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v43) {
    char v44 = sub_10009D640();
  }
  int v45 = v32 & 1;
  uint64_t v46 = v79;
  sub_100010720((uint64_t)v33, (uint64_t)v79, &qword_1000D9CC8);
  uint64_t v47 = &v46[*(int *)(v80 + 36)];
  *uint64_t v47 = v44;
  *(_OWORD *)(v47 + 8) = 0u;
  *(_OWORD *)(v47 + 24) = 0u;
  v47[40] = 1;
  sub_100010864((uint64_t)v33, &qword_1000D9CC8);
  uint64_t v48 = v91;
  sub_100010800((uint64_t)v46, (uint64_t)v91, &qword_1000D9CD0);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v99 = sub_10009DCE0();
  uint64_t v100 = v49;
  uint64_t v50 = v35;
  uint64_t v51 = v86;
  sub_100069210(v50, (uint64_t)v86);
  unint64_t v52 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  uint64_t v53 = swift_allocObject();
  sub_100069278((uint64_t)v51, v53 + v52);
  uint64_t v54 = v92;
  sub_10009D9A0();
  int v87 = v45;
  LOBYTE(v99) = v45;
  int v73 = v39 & 1;
  char v98 = v39 & 1;
  uint64_t v55 = v93;
  sub_100010720((uint64_t)v48, (uint64_t)v93, &qword_1000D9CD0);
  uint64_t v56 = v94;
  char v57 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v95 + 16);
  uint64_t v58 = v96;
  v57(v94, v54, v96);
  uint64_t v59 = v78;
  *uint64_t v78 = 0;
  *((unsigned char *)v59 + 8) = 1;
  uint64_t v60 = v97;
  v59[2] = v89;
  v59[3] = v60;
  *((unsigned char *)v59 + 32) = v45;
  v59[5] = v90;
  *((unsigned char *)v59 + 48) = v77;
  *(_OWORD *)(v59 + 7) = 0u;
  *(_OWORD *)(v59 + 9) = 0u;
  *((unsigned char *)v59 + 88) = 1;
  uint64_t v61 = v83;
  uint64_t v62 = v82;
  v59[12] = v83;
  v59[13] = v62;
  *((unsigned char *)v59 + 112) = v39 & 1;
  uint64_t v63 = KeyPath;
  v59[15] = v88;
  v59[16] = v63;
  *((unsigned char *)v59 + 136) = 1;
  uint64_t v64 = (int *)sub_10000D308(&qword_1000D9CE0);
  sub_100010720((uint64_t)v55, (uint64_t)v59 + v64[20], &qword_1000D9CD0);
  v57((unsigned char *)v59 + v64[24], v56, v58);
  uint64_t v65 = (char *)v59 + v64[28];
  *(void *)uint64_t v65 = 0;
  v65[8] = 1;
  uint64_t v66 = v89;
  uint64_t v67 = v97;
  LOBYTE(v59) = v87;
  sub_10001F79C(v89, v97, v87);
  swift_bridgeObjectRetain();
  LOBYTE(v64) = v73;
  sub_10001F79C(v61, v62, v73);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10001F79C(v66, v67, (char)v59);
  swift_bridgeObjectRetain();
  LOBYTE(v59) = (_BYTE)v64;
  sub_10001F79C(v61, v62, (char)v64);
  uint64_t v68 = *(void (**)(unsigned char *, uint64_t))(v95 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v69 = v96;
  v68(v92, v96);
  sub_100010864((uint64_t)v91, &qword_1000D9CD0);
  sub_10001F7AC(v61, v62, (char)v59);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v70 = v97;
  sub_10001F7AC(v66, v97, v87);
  swift_bridgeObjectRelease();
  v68(v94, v69);
  sub_100010864((uint64_t)v93, &qword_1000D9CD0);
  sub_10001F7AC(v61, v62, v98);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10001F7AC(v66, v70, v99);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100068428()
{
  return sub_10009D080();
}

uint64_t sub_10006849C()
{
  uint64_t v0 = sub_10009D120();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100072190((uint64_t)v3);
  sub_10009D110();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100068568@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_10000D308((uint64_t *)&unk_1000DA200);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (int *)type metadata accessor for ManualPinEntryView();
  uint64_t v3 = (uint64_t *)((char *)a1 + v2[5]);
  type metadata accessor for VisualPinScannerViewModel();
  sub_1000686DC();
  *uint64_t v3 = sub_10009D280();
  v3[1] = v4;
  *(uint64_t *)((char *)a1 + v2[6]) = 6;
  uint64_t v5 = (char *)a1 + v2[7];
  sub_10009D950();
  *(_OWORD *)uint64_t v5 = v11;
  *((void *)v5 + 2) = v12;
  uint64_t v6 = (char *)a1 + v2[8];
  *uint64_t v6 = sub_10009D0A0() & 1;
  *((void *)v6 + 1) = v7;
  v6[16] = v8 & 1;
  uint64_t v9 = (char *)a1 + v2[9];
  uint64_t result = sub_10009D950();
  *uint64_t v9 = v11;
  *((void *)v9 + 1) = *((void *)&v11 + 1);
  return result;
}

uint64_t type metadata accessor for ManualPinEntryView()
{
  uint64_t result = qword_1000D9C50;
  if (!qword_1000D9C50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000686DC()
{
  unint64_t result = qword_1000D9BF0;
  if (!qword_1000D9BF0)
  {
    type metadata accessor for VisualPinScannerViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9BF0);
  }
  return result;
}

uint64_t *sub_100068734(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10009D120();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    long long v11 = (uint64_t *)((char *)v4 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    *long long v11 = v13;
    v11[1] = v14;
    *(uint64_t *)((char *)v4 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    v17[2] = v18[2];
    uint64_t v20 = (char *)v4 + v16;
    uint64_t v21 = (char *)a2 + v16;
    *uint64_t v20 = *v21;
    *((void *)v20 + 1) = *((void *)v21 + 1);
    v20[16] = v21[16];
    uint64_t v22 = a3[9];
    char v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    *char v23 = *v24;
    *((void *)v23 + 1) = *((void *)v24 + 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000688E0(uint64_t a1)
{
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_1000689C0(void *a1, void *a2, int *a3)
{
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10009D120();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  *uint64_t v9 = v11;
  v9[1] = v12;
  *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  uint64_t v18 = (char *)a1 + v14;
  uint64_t v19 = (char *)a2 + v14;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  v18[16] = v19[16];
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *uint64_t v21 = *v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100068B20(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100010864((uint64_t)a1, (uint64_t *)&unk_1000DA200);
    sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10009D120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *(void *)((char *)a2 + v10);
  v11[1] = *(void *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = *((void *)v12 + 2);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *uint64_t v14 = *((unsigned char *)a2 + v13);
  *((void *)v14 + 1) = *(void *)((char *)a2 + v13 + 8);
  swift_retain();
  swift_release();
  v14[16] = v15[16];
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *uint64_t v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100068CDC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10009D120();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = a3[8];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  long long v13 = *(_OWORD *)v12;
  *((void *)v11 + 2) = *((void *)v12 + 2);
  *(_OWORD *)uint64_t v11 = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  return a1;
}

char *sub_100068DF8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100010864((uint64_t)a1, (uint64_t *)&unk_1000DA200);
    uint64_t v6 = sub_10000D308((uint64_t *)&unk_1000DA200);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10009D120();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_release();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  uint64_t v11 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v12 = &a1[v11];
  long long v13 = &a2[v11];
  uint64_t v14 = *(void *)&a2[v11];
  uint64_t v15 = *(void *)&a2[v11 + 8];
  *(void *)uint64_t v12 = v14;
  *((void *)v12 + 1) = v15;
  swift_bridgeObjectRelease();
  *((void *)v12 + 2) = *((void *)v13 + 2);
  swift_release();
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *uint64_t v17 = a2[v16];
  *((void *)v17 + 1) = *(void *)&a2[v16 + 8];
  swift_release();
  unsigned char v17[16] = v18[16];
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *uint64_t v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_release();
  return a1;
}

uint64_t sub_100068F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100068F9C);
}

uint64_t sub_100068F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000D308(&qword_1000D6408);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100069064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100069078);
}

uint64_t sub_100069078(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000D308(&qword_1000D6408);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  return result;
}

void sub_10006913C()
{
  sub_10001C290();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000691F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100069210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManualPinEntryView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100069278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManualPinEntryView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000692DC()
{
  return sub_100069310((uint64_t (*)(unint64_t))sub_100068428);
}

uint64_t sub_1000692F8()
{
  return sub_100069310((uint64_t (*)(unint64_t))sub_10006849C);
}

uint64_t sub_100069310(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for ManualPinEntryView() - 8);
  return a1(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_100069374()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000693AC(uint64_t a1)
{
  return sub_10009414C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000693C0()
{
  return sub_10009D2E0();
}

unint64_t sub_1000693EC()
{
  unint64_t result = qword_1000D9D40;
  if (!qword_1000D9D40)
  {
    sub_10000AF84(&qword_1000D9D10);
    sub_100015700(&qword_1000D9D48, &qword_1000D9D08);
    sub_100015700(&qword_1000D9D50, &qword_1000D9D30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9D40);
  }
  return result;
}

uint64_t sub_1000694B4@<X0>(void *a1@<X8>)
{
  type metadata accessor for ManualPinEntryView();

  return sub_100065D7C(a1);
}

uint64_t sub_10006952C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ManualPinEntryView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10006968C(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ManualPinEntryView() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100065DF0(a1, v4, v5, v6);
}

uint64_t sub_100069700(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ManualPinEntryView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100069768()
{
  uint64_t v1 = *(void *)(type metadata accessor for ManualPinEntryView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  sub_10000D308((uint64_t *)&unk_1000DA200);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_10009D120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

double sub_1000698C0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ManualPinEntryView() - 8);
  *(void *)&double result = sub_10006763C(a1, v2+ ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2).n128_u64[0];
  return result;
}

uint64_t sub_100069934@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009D320();
  *a1 = result;
  return result;
}

uint64_t sub_100069960@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10009D320();
  *a1 = result;
  return result;
}

uint64_t sub_10006998C()
{
  return sub_10009D330();
}

uint64_t sub_1000699B8()
{
  return sub_10009D330();
}

uint64_t sub_1000699E4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100069A64()
{
  unint64_t result = qword_1000D9DA0;
  if (!qword_1000D9DA0)
  {
    sub_10000AF84(&qword_1000D9DA8);
    sub_100015700(&qword_1000D9468, &qword_1000D9470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9DA0);
  }
  return result;
}

uint64_t sub_100069B04()
{
  return sub_100015700((unint64_t *)&unk_1000D9DB0, &qword_1000D9CB8);
}

uint64_t sub_100069B40(uint64_t a1)
{
  uint64_t v2 = sub_10009C9C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_10009C9B0();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100069C34()
{
  return sub_10009E010();
}

uint64_t sub_100069D10@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(a1 + *(int *)(v5 + 56));
  if (v8)
  {
    char v9 = *(unsigned char *)(v8
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesExtensionContainerViewModel_hostAppInfo);
    sub_100077A40(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    if (v9)
    {
      sub_10009D050();
      char v10 = v12[15] ^ 1;
    }
    else
    {
      char v10 = 0;
    }
    uint64_t result = sub_100078118((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    *a2 = v10 & 1;
  }
  else
  {
    type metadata accessor for AddDevicesExtensionContainerViewModel();
    sub_1000728A0(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_100069E70@<X0>(BOOL *a1@<X8>)
{
  type metadata accessor for AddDevicesToADEExtensionView();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = (v3 & 1) == 0;
  return result;
}

uint64_t sub_100069F14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v253 = *((void *)v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v254 = v3;
  uint64_t v255 = (uint64_t)&v234 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = sub_10000D308((uint64_t *)&unk_1000D9DC0);
  uint64_t v257 = *(void *)(v258 - 8);
  __chkstk_darwin(v258);
  v256 = (char *)&v234 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v273 = sub_10000D308(&qword_1000D8268);
  uint64_t v272 = *(void *)(v273 - 8);
  __chkstk_darwin(v273);
  v265 = (char *)&v234 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  uint64_t v6 = __chkstk_darwin(v271);
  uint64_t v264 = (uint64_t)&v234 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v263 = (char *)&v234 - v8;
  uint64_t v261 = sub_10009CFC0();
  v260 = *(uint64_t **)(v261 - 8);
  __chkstk_darwin(v261);
  v262 = (char *)&v234 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v10 - 8);
  v270 = (uint64_t *)((char *)&v234 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v267 = (void *)sub_10000D308(&qword_1000D9DE0);
  uint64_t v259 = *(v267 - 1);
  __chkstk_darwin(v267);
  long long v13 = (char *)&v234 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10009CB50();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v234 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = sub_10009D040();
  uint64_t v18 = (uint64_t *)((char *)a1 + v2[5]);
  *uint64_t v18 = swift_getKeyPath();
  sub_10000D308(&qword_1000D9DE8);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (char *)a1 + v2[6];
  LOBYTE(v284) = 0;
  sub_10009D950();
  uint64_t v20 = *((void *)&v288 + 1);
  *uint64_t v19 = v288;
  *((void *)v19 + 1) = v20;
  uint64_t v21 = (char *)a1 + v2[7];
  LOBYTE(v284) = 0;
  sub_10009D950();
  uint64_t v22 = *((void *)&v288 + 1);
  *uint64_t v21 = v288;
  *((void *)v21 + 1) = v22;
  char v23 = (char *)a1 + v2[8];
  LOBYTE(v284) = 0;
  sub_10009D950();
  uint64_t v24 = *((void *)&v288 + 1);
  *char v23 = v288;
  *((void *)v23 + 1) = v24;
  uint64_t v25 = (char *)a1 + v2[9];
  LOBYTE(v284) = 0;
  sub_10009D950();
  uint64_t v26 = *((void *)&v288 + 1);
  *uint64_t v25 = v288;
  *((void *)v25 + 1) = v26;
  char v27 = (long long *)((char *)a1 + v2[10]);
  long long v284 = 0uLL;
  uint64_t v285 = 0;
  sub_10000D308((uint64_t *)&unk_1000D9DF0);
  sub_10009D950();
  long long v28 = v289;
  *char v27 = v288;
  v27[1] = v28;
  id v266 = self;
  id v29 = [v266 defaultManager];
  id v30 = [v29 temporaryDirectory];

  sub_10009CB20();
  sub_10009CB10();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  char v31 = (uint64_t *)((char *)a1 + v2[12]);
  type metadata accessor for AddDevicesExtensionContainerViewModel();
  sub_1000728A0(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
  *char v31 = sub_10009D280();
  v31[1] = v32;
  uint64_t v252 = v2[13];
  *(uint64_t *)((char *)a1 + v252) = 0;
  uint64_t v33 = (_OWORD *)((char *)a1 + v2[14]);
  if (qword_1000D5270 != -1) {
    swift_once();
  }
  uint64_t v245 = (uint64_t)v33;
  *uint64_t v33 = xmmword_1000E3580;
  uint64_t v34 = (uint64_t)a1 + v2[15];
  uint64_t v35 = qword_1000D51D0;
  swift_unknownObjectRetain();
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v268 = v34;
  sub_1000102FC((uint64_t)qword_1000E3440, v34);
  uint64_t v36 = (uint64_t *)((char *)a1 + v2[16]);
  uint64_t v37 = self;
  id v38 = [v37 standardUserDefaults];
  type metadata accessor for UserDefaultsBackedKeyValueStorage();
  uint64_t v39 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v39 + 112) = v38;
  type metadata accessor for KeyValueStoreBackedNetworkInfoStorage();
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = sub_100072620(v39, v40);
  uint64_t v42 = sub_1000728A0(&qword_1000D9E00, (void (*)(uint64_t))type metadata accessor for KeyValueStoreBackedNetworkInfoStorage);
  *uint64_t v36 = v41;
  v36[1] = v42;
  v269 = v36;
  unsigned __int8 v43 = (uint64_t *)((char *)a1 + v2[17]);
  id v44 = [v37 standardUserDefaults];
  uint64_t v45 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v45 + 112) = v44;
  uint64_t v46 = sub_1000728A0(&qword_1000D9E08, (void (*)(uint64_t))type metadata accessor for UserDefaultsBackedKeyValueStorage);
  uint64_t v47 = type metadata accessor for KeyValueStoreBackedMDMServerInfoStorage();
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v48
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension39KeyValueStoreBackedMDMServerInfoStorage__mdmServerInfo;
  long long v288 = xmmword_1000A13B0;
  long long v289 = 0uLL;
  LOBYTE(v290) = 0;
  sub_10000D308(&qword_1000D9E10);
  sub_10009CF00();
  (*(void (**)(uint64_t, char *, void *))(v259 + 32))(v49, v13, v267);
  *(void *)(v48 + 16) = v45;
  *(void *)(v48 + 24) = v46;
  uint64_t v50 = sub_10009DE70();
  uint64_t v51 = v270;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v270, 1, 1, v50);
  unint64_t v52 = (void *)swift_allocObject();
  v52[2] = 0;
  v52[3] = 0;
  v52[4] = v48;
  swift_retain();
  sub_10002C3D0((uint64_t)v51, (uint64_t)&unk_1000D9E18, (uint64_t)v52);
  swift_release();
  v43[3] = v47;
  v43[4] = (uint64_t)&off_1000CB230;
  v267 = v43;
  *unsigned __int8 v43 = v48;
  uint64_t v53 = (uint64_t *)((char *)a1 + v2[18]);
  ((void (*)(char *, void, uint64_t))v260[13])(v262, enum case for NWInterface.InterfaceType.wifi(_:), v261);
  sub_10009D010();
  swift_allocObject();
  uint64_t v54 = sub_10009CFE0();
  uint64_t v55 = type metadata accessor for NWPathMonitorBackedWiFiNetworkStatusMonitor();
  swift_allocObject();
  uint64_t v56 = sub_10004ACBC(v54);
  v53[3] = v55;
  v53[4] = (uint64_t)&off_1000CD070;
  v270 = v53;
  *uint64_t v53 = v56;
  char v57 = (uint64_t *)((char *)a1 + v2[19]);
  uint64_t v58 = (objc_class *)type metadata accessor for CoreBluetoothBackedBluetoothStatusMonitor();
  id v59 = [objc_allocWithZone(v58) init];
  v57[3] = v58;
  v57[4] = &off_1000CDFF8;
  v244 = v57;
  *char v57 = v59;
  uint64_t v60 = (uint64_t *)((char *)a1 + v2[20]);
  uint64_t v61 = type metadata accessor for ConcreteVPScannerViewFinderMetricsProvider();
  uint64_t v62 = swift_allocObject();
  *(void *)&long long v288 = 0;
  BYTE8(v288) = 1;
  sub_10000D308(&qword_1000D9E20);
  swift_allocObject();
  *(void *)(v62 + 16) = sub_10009CEF0();
  uint64_t v247 = v61;
  v60[3] = v61;
  v60[4] = (uint64_t)&off_1000CCE68;
  uint64_t v259 = (uint64_t)v60;
  uint64_t *v60 = v62;
  v274 = v2;
  uint64_t v63 = v2[21];
  v275 = a1;
  uint64_t v64 = (uint64_t *)((char *)a1 + v63);
  uint64_t v65 = type metadata accessor for ConcreteCurrentWiFiNetworkPrimitives();
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = 0;
  v64[3] = v65;
  v64[4] = (uint64_t)&off_1000CCAB0;
  v260 = v64;
  *uint64_t v64 = v66;
  v251 = (uint64_t *)((char *)a1 + v2[33]);
  uint64_t v67 = type metadata accessor for OperationStatus();
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = 0;
  uint64_t v69 = v68 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus__errorInfo;
  uint64_t v70 = type metadata accessor for ErrorInfo();
  uint64_t v71 = *(void *)(v70 - 8);
  v262 = *(char **)(v71 + 56);
  uint64_t v261 = v71 + 56;
  uint64_t v72 = (uint64_t)v263;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v262)(v263, 1, 1, v70);
  uint64_t v73 = v264;
  sub_100010720(v72, v264, (uint64_t *)&unk_1000D9DD0);
  uint64_t v74 = v265;
  sub_10009CF00();
  sub_100010864(v72, (uint64_t *)&unk_1000D9DD0);
  uint64_t v76 = v272 + 32;
  uint64_t v75 = *(void (**)(uint64_t, char *, uint64_t))(v272 + 32);
  v75(v69, v74, v273);
  int v77 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v68
                                                                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus_defaultErrorInfoProvider);
  *int v77 = sub_100069F0C;
  v77[1] = 0;
  uint64_t v78 = sub_1000728A0(&qword_1000D9E28, (void (*)(uint64_t))type metadata accessor for OperationStatus);
  uint64_t v79 = sub_10009D1A0();
  uint64_t v80 = v251;
  void *v251 = v79;
  v80[1] = v81;
  v246 = (uint64_t *)((char *)v275 + v274[34]);
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 16) = 0;
  uint64_t v83 = v82 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus__errorInfo;
  uint64_t v249 = v70;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v262)(v72, 1, 1, v70);
  sub_100010720(v72, v73, (uint64_t *)&unk_1000D9DD0);
  sub_10009CF00();
  sub_100010864(v72, (uint64_t *)&unk_1000D9DD0);
  uint64_t v272 = v76;
  v250 = v75;
  v75(v83, v74, v273);
  uint64_t v84 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v82
                                                                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus_defaultErrorInfoProvider);
  *uint64_t v84 = sub_100069F10;
  v84[1] = 0;
  v251 = (void *)v67;
  uint64_t v248 = v78;
  uint64_t v85 = sub_10009D1A0();
  uint64_t v86 = v246;
  void *v246 = v85;
  v86[1] = v87;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v88 = sub_10009CE60();
  sub_10000D690(v88, (uint64_t)qword_1000E3488);
  uint64_t v89 = sub_10009CE40();
  os_log_type_t v90 = sub_10009DEA0();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v91 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v288 = swift_slowAlloc();
    *(_DWORD *)uint64_t v91 = 136315138;
    *(void *)&long long v284 = sub_10000DBA8(0x292874696E69, 0xE600000000000000, (uint64_t *)&v288);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v89, v90, "%s - Begin AddDevicesToADEExtensionView initialization", v91, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v92 = v270;
  uint64_t v93 = v269;
  uint64_t v94 = (uint64_t)v260;
  if (qword_1000D52A8 != -1) {
    swift_once();
  }
  sub_1000729A0(qword_1000E35F8, unk_1000E3600);
  if (qword_1000D52B0 != -1) {
    swift_once();
  }
  sub_1000729A0(qword_1000E3608, unk_1000E3610);
  id v95 = [v266 defaultManager];
  if (qword_1000D52A0 != -1) {
    swift_once();
  }
  uint64_t v96 = qword_1000E35E8;
  uint64_t v97 = unk_1000E35F0;
  v246 = (void *)type metadata accessor for FileManagerBackedEncryptedKeyValueStorage();
  char v98 = (void *)swift_allocObject();
  swift_bridgeObjectRetain();
  swift_defaultActor_initialize();
  uint64_t v99 = (char *)v98
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension41FileManagerBackedEncryptedKeyValueStorage____lazy_storage___documentsSubDirectoryURL;
  uint64_t v100 = sub_10000D308(&qword_1000D9E30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v99, 1, 1, v100);
  v98[14] = v95;
  v98[15] = v96;
  id v266 = v98;
  v98[16] = v97;
  sub_1000102FC(v268, (uint64_t)&v288);
  uint64_t v102 = (void *)*v93;
  uint64_t v101 = v93[1];
  sub_1000102FC((uint64_t)v92, (uint64_t)&v284);
  sub_1000102FC((uint64_t)v244, (uint64_t)&v281);
  sub_1000102FC(v94, (uint64_t)v278);
  uint64_t v103 = type metadata accessor for ConcreteDeviceDiscoveryPrerequisiteStatusProvider();
  swift_allocObject();
  swift_unknownObjectRetain();
  v244 = (void *)v101;
  uint64_t v104 = sub_10007FEA0(&v288, (uint64_t)v102, v101, &v284, &v281, (uint64_t)v278);
  swift_unknownObjectRelease();
  char v105 = v274;
  uint64_t v106 = (uint64_t *)((char *)v275 + v274[23]);
  void v106[3] = v103;
  v106[4] = (uint64_t)&off_1000CE008;
  *uint64_t v106 = v104;
  uint64_t v107 = *(void *)v245;
  uint64_t v108 = *(void *)(v245 + 8);
  uint64_t v109 = qword_1000D5268;
  swift_unknownObjectRetain();
  if (v109 != -1) {
    swift_once();
  }
  uint64_t v110 = qword_1000E3570;
  uint64_t v111 = *(void *)algn_1000E3578;
  sub_1000102FC((uint64_t)v267, (uint64_t)&v288);
  sub_1000102FC((uint64_t)v106, (uint64_t)&v284);
  uint64_t v112 = type metadata accessor for ConcreteDevicesProvider(0);
  long long v113 = (void *)swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v114 = v266;
  swift_retain();
  long long v115 = sub_100073274(v107, v108, v110, v111, v114, v102, (uint64_t)v244, (uint64_t)&v288, (uint64_t)&v284, v113);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v116 = (uint64_t *)((char *)v275 + v105[22]);
  v116[3] = v112;
  v116[4] = &off_1000CD338;
  *uint64_t v116 = v115;
  v244 = v116;
  uint64_t v245 = type metadata accessor for CameraViewModelProvider();
  sub_1000102FC((uint64_t)v116, (uint64_t)&v288);
  sub_1000102FC(v268, (uint64_t)&v284);
  sub_1000102FC((uint64_t)v267, (uint64_t)&v281);
  sub_1000102FC((uint64_t)v106, (uint64_t)v278);
  sub_1000102FC(v259, (uint64_t)v276);
  uint64_t v117 = *((void *)&v289 + 1);
  uint64_t v242 = v290;
  uint64_t v118 = sub_100010138((uint64_t)&v288, *((uint64_t *)&v289 + 1));
  v243 = &v234;
  __chkstk_darwin(v118);
  v240 = (uint64_t *)((char *)&v234 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void))(v120 + 16))();
  uint64_t v121 = v286;
  v239 = (_UNKNOWN **)v287;
  uint64_t v122 = sub_100010138((uint64_t)&v284, v286);
  v241 = &v234;
  __chkstk_darwin(v122);
  uint64_t v124 = (char *)&v234 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v125 + 16))(v124);
  uint64_t v126 = v282;
  v237 = v283;
  uint64_t v127 = sub_100010138((uint64_t)&v281, v282);
  v238 = &v234;
  __chkstk_darwin(v127);
  uint64_t v129 = (char *)&v234 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v130 + 16))(v129);
  uint64_t v131 = v279;
  uint64_t v235 = v280;
  uint64_t v132 = sub_100010138((uint64_t)v278, v279);
  v236 = &v234;
  __chkstk_darwin(v132);
  uint64_t v134 = (char *)&v234 - ((v133 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v135 + 16))(v134);
  uint64_t v136 = sub_100010138((uint64_t)v276, v277);
  __chkstk_darwin(v136);
  char v138 = (char *)&v234 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v139 + 16))(v138);
  uint64_t v232 = v121;
  uint64_t v140 = v247;
  uint64_t v141 = sub_100084B6C((uint64_t)v240, (uint64_t)v124, (uint64_t)v129, (uint64_t)v134, (uint64_t)v138, v245, v117, v126, v247, v232, v131, v242, (uint64_t)v237, (uint64_t)&off_1000CCE68, (uint64_t)v239, v235);
  sub_1000100E8((uint64_t)v276);
  sub_1000100E8((uint64_t)v278);
  sub_1000100E8((uint64_t)&v281);
  sub_1000100E8((uint64_t)&v284);
  sub_1000100E8((uint64_t)&v288);
  char v142 = v274;
  uint64_t v245 = v274[25];
  uint64_t v143 = v275;
  *(uint64_t *)((char *)v275 + v245) = (uint64_t)v141;
  sub_1000102FC(v259, (uint64_t)&v288);
  uint64_t v144 = (uint64_t)v244;
  sub_1000102FC((uint64_t)v244, (uint64_t)&v284);
  uint64_t v145 = sub_100010138((uint64_t)&v288, *((uint64_t *)&v289 + 1));
  __chkstk_darwin(v145);
  uint64_t v147 = (uint64_t *)((char *)&v234 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v148 + 16))(v147);
  uint64_t v149 = *v147;
  uint64_t v282 = v140;
  v283 = &off_1000CCE68;
  uint64_t v281 = v149;
  type metadata accessor for VisualPinScannerViewModelProvider();
  v150 = (void *)swift_allocObject();
  uint64_t v151 = sub_100010138((uint64_t)&v281, v140);
  __chkstk_darwin(v151);
  v153 = (uint64_t *)((char *)&v234 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v154 + 16))(v153);
  uint64_t v155 = *v153;
  v150[5] = v140;
  v150[6] = &off_1000CCE68;
  v150[2] = v155;
  sub_1000107E8(&v284, (uint64_t)(v150 + 7));
  sub_1000100E8((uint64_t)&v281);
  sub_1000100E8((uint64_t)&v288);
  *(uint64_t *)((char *)v143 + v142[24]) = (uint64_t)v150;
  v156 = v143;
  uint64_t v157 = type metadata accessor for DeviceStatusViewModelProvider();
  sub_1000102FC(v144, (uint64_t)&v288);
  uint64_t v158 = qword_1000E3570;
  uint64_t v159 = *(void *)algn_1000E3578;
  uint64_t v160 = *((void *)&v289 + 1);
  uint64_t v161 = v290;
  uint64_t v162 = sub_100010138((uint64_t)&v288, *((uint64_t *)&v289 + 1));
  __chkstk_darwin(v162);
  v164 = (char *)&v234 - ((v163 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v165 + 16))(v164);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v167 = sub_100041DE4((uint64_t)v164, v158, v157, v160, ObjectType, v161, v159);
  swift_unknownObjectRetain();
  sub_1000100E8((uint64_t)&v288);
  *(uint64_t *)((char *)v156 + v142[26]) = v167;
  uint64_t v168 = type metadata accessor for SignInViewModelProvider();
  uint64_t v169 = v268;
  sub_1000102FC(v268, (uint64_t)&v288);
  uint64_t v170 = *((void *)&v289 + 1);
  uint64_t v171 = v290;
  uint64_t v172 = sub_100010138((uint64_t)&v288, *((uint64_t *)&v289 + 1));
  __chkstk_darwin(v172);
  v174 = (char *)&v234 - ((v173 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v175 + 16))(v174);
  uint64_t v176 = sub_1000137D4((uint64_t)v174, v168, v170, v171);
  sub_1000100E8((uint64_t)&v288);
  uint64_t v259 = v142[27];
  *(uint64_t *)((char *)v156 + v259) = v176;
  uint64_t v247 = type metadata accessor for SettingsViewModelProvider();
  uint64_t v177 = v269[1];
  v244 = (void *)*v269;
  sub_1000102FC((uint64_t)v267, (uint64_t)&v288);
  sub_1000102FC((uint64_t)v270, (uint64_t)&v284);
  sub_1000102FC((uint64_t)v260, (uint64_t)&v281);
  sub_1000102FC(v169, (uint64_t)v278);
  v267 = (void *)swift_getObjectType();
  uint64_t v178 = *((void *)&v289 + 1);
  v243 = (uint64_t *)v290;
  uint64_t v179 = sub_100010138((uint64_t)&v288, *((uint64_t *)&v289 + 1));
  uint64_t v268 = (uint64_t)&v234;
  __chkstk_darwin(v179);
  uint64_t v242 = (uint64_t)&v234 - ((v180 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v181 + 16))();
  uint64_t v182 = v286;
  v241 = (uint64_t *)v287;
  uint64_t v183 = sub_100010138((uint64_t)&v284, v286);
  v260 = &v234;
  __chkstk_darwin(v183);
  v185 = (char *)&v234 - ((v184 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v186 + 16))(v185);
  uint64_t v187 = v282;
  v239 = v283;
  uint64_t v188 = sub_100010138((uint64_t)&v281, v282);
  v240 = &v234;
  __chkstk_darwin(v188);
  v190 = (char *)&v234 - ((v189 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v191 + 16))(v190);
  uint64_t v192 = v279;
  uint64_t v193 = v280;
  uint64_t v194 = sub_100010138((uint64_t)v278, v279);
  v238 = &v234;
  __chkstk_darwin(v194);
  v196 = (char *)&v234 - ((v195 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v197 + 16))(v196);
  uint64_t v198 = sub_1000728A0(&qword_1000D9E38, (void (*)(uint64_t))type metadata accessor for FileManagerBackedEncryptedKeyValueStorage);
  uint64_t v233 = v177;
  v199 = v246;
  uint64_t v231 = v178;
  uint64_t v200 = (uint64_t)v266;
  v201 = sub_100079488((uint64_t)v244, v242, (uint64_t)v185, (uint64_t)v266, (uint64_t)v190, (uint64_t)v196, v247, (uint64_t)v267, v182, v187, v231, (uint64_t)v246, v192, v233, (uint64_t)v241, (uint64_t)v239, (uint64_t)v243, v198, v193);
  swift_retain();
  swift_unknownObjectRetain();
  sub_1000100E8((uint64_t)v278);
  sub_1000100E8((uint64_t)&v281);
  sub_1000100E8((uint64_t)&v284);
  sub_1000100E8((uint64_t)&v288);
  v202 = v274;
  uint64_t v268 = v274[28];
  uint64_t v203 = (uint64_t)v275;
  *(uint64_t *)((char *)v275 + v268) = (uint64_t)v201;
  uint64_t v204 = type metadata accessor for NetworkProfilePickerViewModelProvider();
  uint64_t v205 = *v269;
  uint64_t v206 = v269[1];
  uint64_t v207 = swift_getObjectType();
  *(void *)(v203 + v202[29]) = sub_100094490(v205, v200, v204, v207, (uint64_t)v199, v206, v198);
  uint64_t v208 = swift_allocObject();
  *(void *)(v208 + 16) = 0;
  uint64_t v209 = v208 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus__errorInfo;
  uint64_t v210 = (uint64_t)v263;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v262)(v263, 1, 1, v249);
  sub_100010720(v210, v264, (uint64_t *)&unk_1000D9DD0);
  swift_retain();
  swift_unknownObjectRetain();
  v211 = v265;
  sub_10009CF00();
  sub_100010864(v210, (uint64_t *)&unk_1000D9DD0);
  v250(v209, v211, v273);
  v212 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v208
                                                                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15OperationStatus_defaultErrorInfoProvider);
  *v212 = sub_10006C2B4;
  v212[1] = 0;
  v213 = (uint64_t *)(v203 + v202[35]);
  swift_retain();
  uint64_t *v213 = sub_10009D1A0();
  v213[1] = v214;
  sub_1000102FC(*(void *)(v203 + v259) + 16, (uint64_t)&v288);
  type metadata accessor for SignInViewModel();
  swift_allocObject();
  swift_retain();
  sub_100062290(&v288, v208);
  v215 = (uint64_t *)(v203 + v202[32]);
  sub_1000728A0((unint64_t *)&unk_1000D9E40, (void (*)(uint64_t))type metadata accessor for SignInViewModel);
  uint64_t *v215 = sub_10009D1A0();
  v215[1] = v216;
  swift_retain();
  uint64_t v217 = sub_1000848EC();
  swift_release();
  *(void *)(v203 + v202[30]) = v217;
  swift_retain();
  v218 = sub_100079334();
  swift_release();
  *(void *)(v203 + v202[31]) = v218;
  swift_beginAccess();
  swift_retain();
  sub_10000D308(&qword_1000DB540);
  v219 = v256;
  sub_10009CF10();
  swift_endAccess();
  swift_release();
  uint64_t v220 = v255;
  sub_100077A40(v203, v255, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  unint64_t v221 = (*(unsigned __int8 *)(v253 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80);
  uint64_t v222 = swift_allocObject();
  sub_100074974(v220, v222 + v221);
  sub_100015700(&qword_1000D9E50, (uint64_t *)&unk_1000D9DC0);
  uint64_t v223 = v258;
  uint64_t v224 = sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v257 + 8))(v219, v223);
  uint64_t v225 = v252;
  swift_release();
  *(void *)(v203 + v225) = v224;
  v226 = (__CFString *)sub_10009DC70();
  v227 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(v227, 0, (CFNotificationCallback)sub_100070F30, v226, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  uint64_t v228 = v270[3];
  uint64_t v229 = v270[4];
  sub_10000FF9C(v270, v228);
  (*(void (**)(uint64_t, uint64_t))(v229 + 16))(v228, v229);
  swift_release();
  return swift_release();
}

unsigned char *sub_10006C2B8(unsigned char *result, uint64_t a2)
{
  if (*result == 1)
  {
    uint64_t v3 = type metadata accessor for AddDevicesToADEExtensionView();
    *(void *)(*(void *)(a2 + *(int *)(v3 + 56))
              + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_operationStatus) = *(void *)(a2 + *(int *)(v3 + 132) + 8);
    swift_retain();
    return (unsigned char *)swift_release();
  }
  return result;
}

uint64_t sub_10006C338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v92 = a1;
  uint64_t v2 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v95 = v2 - 8;
  __chkstk_darwin(v2 - 8);
  uint64_t v103 = v4;
  uint64_t v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = (void *)sub_10000D308(&qword_1000DA0D8);
  __chkstk_darwin(v93);
  uint64_t v7 = (ValueMetadata *)((char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v84 = sub_10000D308(&qword_1000DA0E0);
  uint64_t v85 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v94 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10000D308(&qword_1000DA0E8);
  uint64_t v87 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v96 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10000D308(&qword_1000DA0F0);
  uint64_t v89 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  char v98 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000D308(&qword_1000DA0F8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v90 = v11;
  uint64_t v91 = v12;
  __chkstk_darwin(v11);
  uint64_t v97 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7->Kind = sub_10009D400();
  v7->Description = 0;
  LOBYTE(v7[1].Kind) = 1;
  uint64_t v83 = v7;
  uint64_t v14 = sub_10000D308(&qword_1000DA100);
  sub_10006D03C(v1, (uint64_t)v7 + *(int *)(v14 + 44));
  uint64_t v99 = v1;
  uint64_t v102 = type metadata accessor for AddDevicesToADEExtensionView;
  sub_100077A40(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  uint64_t v78 = sub_10009DE40();
  uint64_t v15 = sub_10009DE30();
  uint64_t v104 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = (v104 + 32) & ~v104;
  uint64_t v101 = v104 | 7;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  *(void *)(v17 + 24) = &protocol witness table for MainActor;
  sub_100074974((uint64_t)v5, v17 + v16);
  sub_100077A40(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  uint64_t v18 = sub_10009DE30();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = &protocol witness table for MainActor;
  sub_100074974((uint64_t)v5, v19 + v16);
  sub_10009D9D0();
  uint64_t v79 = sub_10000D308(&qword_1000DA108);
  uint64_t v81 = (void *)sub_100015700(&qword_1000DA110, &qword_1000DA0D8);
  uint64_t v20 = sub_10000AF84(&qword_1000DA118);
  unint64_t v21 = sub_10007737C();
  uint64_t v107 = (void *)v20;
  uint64_t v108 = (ValueMetadata *)v21;
  uint64_t v80 = &opaque type descriptor for <<opaque return type of View.interactiveDismissDisabled(_:)>>;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = (uint64_t)v83;
  sub_10009D820();
  swift_release();
  swift_release();
  sub_100010864(v22, &qword_1000DA0D8);
  uint64_t v23 = v99;
  uint64_t v24 = v102;
  sub_100077A40(v99, (uint64_t)v5, (uint64_t (*)(void))v102);
  uint64_t v25 = sub_10009DE30();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(void *)(v26 + 24) = &protocol witness table for MainActor;
  sub_100074974((uint64_t)v5, v26 + v16);
  uint64_t v27 = sub_10009DE30();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v27;
  *(void *)(v28 + 24) = &protocol witness table for MainActor;
  sub_10009D9D0();
  LODWORD(v78) = v109;
  uint64_t v100 = v5;
  sub_100077A40(v23, (uint64_t)v5, (uint64_t (*)(void))v24);
  uint64_t v29 = (v104 + 16) & ~v104;
  v103 += v29;
  uint64_t v104 = v29;
  uint64_t v30 = v29;
  uint64_t v31 = swift_allocObject();
  sub_100074974((uint64_t)v5, v31 + v30);
  uint64_t v32 = sub_10000D308(&qword_1000DA130);
  uint64_t v107 = v93;
  uint64_t v108 = (ValueMetadata *)v79;
  unint64_t v109 = (unint64_t)v81;
  unint64_t v110 = OpaqueTypeConformance2;
  uint64_t v93 = &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  uint64_t v33 = sub_10000AF84(&qword_1000DA138);
  uint64_t v34 = sub_10000AF84(&qword_1000DA140);
  uint64_t v35 = type metadata accessor for ErrorInfo();
  uint64_t v83 = (ValueMetadata *)v35;
  unint64_t v36 = sub_10007750C();
  uint64_t OpaqueTypeConformance2 = sub_1000728A0(&qword_1000DA198, (void (*)(uint64_t))type metadata accessor for ErrorInfo);
  uint64_t v107 = (void *)v34;
  uint64_t v108 = (ValueMetadata *)v35;
  unint64_t v109 = v36;
  unint64_t v110 = OpaqueTypeConformance2;
  uint64_t v81 = &opaque type descriptor for <<opaque return type of View.alert<A>(item:content:)>>;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  uint64_t v107 = (void *)v33;
  uint64_t v108 = (ValueMetadata *)v37;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v84;
  uint64_t v40 = v94;
  sub_10009D820();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v40, v39);
  uint64_t v41 = v95;
  uint64_t v42 = v99;
  unsigned __int8 v43 = (char *)(v99 + *(int *)(v95 + 32));
  char v44 = *v43;
  uint64_t v45 = *((void *)v43 + 1);
  char v105 = v44;
  uint64_t v106 = v45;
  uint64_t v94 = (char *)sub_10000D308(&qword_1000DA1A0);
  sub_10009D980();
  uint64_t v80 = v107;
  LODWORD(v85) = v109;
  uint64_t v46 = v42;
  uint64_t v47 = (uint64_t)v100;
  uint64_t v48 = v102;
  sub_100077A40(v46, (uint64_t)v100, (uint64_t (*)(void))v102);
  uint64_t v49 = swift_allocObject();
  sub_100074974(v47, v49 + v104);
  uint64_t v78 = sub_10000D308(&qword_1000DA1A8);
  uint64_t v107 = (void *)v39;
  uint64_t v108 = (ValueMetadata *)v32;
  unint64_t v109 = v79;
  unint64_t v110 = v38;
  uint64_t v84 = swift_getOpaqueTypeConformance2();
  uint64_t v50 = sub_10000AF84(&qword_1000DA1B0);
  unint64_t v51 = sub_100077668();
  unint64_t v52 = sub_1000654CC();
  uint64_t v107 = (void *)v50;
  uint64_t v108 = &type metadata for FileExporterView;
  unint64_t v109 = v51;
  unint64_t v110 = v52;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v86;
  uint64_t v55 = v96;
  sub_10009D820();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v55, v54);
  uint64_t v56 = *(int *)(v41 + 40);
  uint64_t v57 = v99;
  uint64_t v58 = (char *)(v99 + v56);
  char v59 = *v58;
  uint64_t v60 = *((void *)v58 + 1);
  char v105 = v59;
  uint64_t v106 = v60;
  sub_10009D980();
  uint64_t v61 = (uint64_t)v100;
  sub_100077A40(v57, (uint64_t)v100, (uint64_t (*)(void))v48);
  uint64_t v62 = swift_allocObject();
  sub_100074974(v61, v62 + v104);
  uint64_t v107 = (void *)v54;
  uint64_t v108 = (ValueMetadata *)v78;
  unint64_t v109 = v84;
  unint64_t v110 = v53;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  unint64_t v64 = sub_1000777AC();
  uint64_t v65 = v88;
  uint64_t v66 = v98;
  sub_10009D820();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v66, v65);
  uint64_t v67 = v57 + *(int *)(v95 + 36);
  char v68 = *(unsigned char *)v67;
  uint64_t v69 = *(void *)(v67 + 8);
  char v105 = v68;
  uint64_t v106 = v69;
  sub_10009D980();
  uint64_t v70 = v57;
  uint64_t v71 = (uint64_t)v100;
  sub_100077A40(v70, (uint64_t)v100, (uint64_t (*)(void))v102);
  uint64_t v72 = swift_allocObject();
  sub_100074974(v71, v72 + v104);
  sub_10000D308(&qword_1000DA1E8);
  uint64_t v107 = (void *)v65;
  uint64_t v108 = &type metadata for NetworkProfilePickerView;
  unint64_t v109 = v63;
  unint64_t v110 = v64;
  swift_getOpaqueTypeConformance2();
  uint64_t v73 = type metadata accessor for SettingsView();
  uint64_t v74 = sub_1000728A0(&qword_1000DA1F0, (void (*)(uint64_t))type metadata accessor for SettingsView);
  uint64_t v107 = (void *)v73;
  uint64_t v108 = v83;
  unint64_t v109 = v74;
  unint64_t v110 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v75 = v90;
  uint64_t v76 = v97;
  sub_10009D820();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v76, v75);
}

uint64_t sub_10006D03C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v78 = sub_10000D308(&qword_1000DA270);
  __chkstk_darwin(v78);
  uint64_t v79 = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000D308(&qword_1000DA1F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v76 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10000D308(&qword_1000DA278);
  __chkstk_darwin(v68);
  uint64_t v72 = (void *)((char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10009D0B0();
  uint64_t v70 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  __chkstk_darwin(v7);
  uint64_t v69 = (char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v66 + 64);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v67 = (uint64_t)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v63 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v63 - v15;
  uint64_t v17 = sub_10000D308(&qword_1000DA280);
  __chkstk_darwin(v17);
  uint64_t v19 = (_OWORD *)((char *)v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_10000D308(&qword_1000DA288);
  uint64_t v75 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v73 = (char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v74 = (char *)v63 - v23;
  uint64_t v81 = v9;
  uint64_t v77 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  if (v95 == 1)
  {
    uint64_t v64 = v17;
    uint64_t v65 = v20;
    uint64_t v24 = v77;
    v63[1] = *(void *)(v77 + *(int *)(v81 + 120));
    sub_100077A40(v77, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    unint64_t v25 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    uint64_t v66 = swift_allocObject();
    sub_100074974((uint64_t)v16, v66 + v25);
    sub_100077A40(v24, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    v63[0] = swift_allocObject();
    sub_100074974((uint64_t)v14, v63[0] + v25);
    uint64_t v26 = v67;
    sub_100077A40(v24, v67, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    uint64_t v27 = swift_allocObject();
    sub_100074974(v26, v27 + v25);
    type metadata accessor for VisualPinScannerViewModel();
    uint64_t v28 = sub_1000728A0((unint64_t *)&qword_1000D9BF0, (void (*)(uint64_t))type metadata accessor for VisualPinScannerViewModel);
    swift_retain();
    uint64_t v67 = v28;
    uint64_t v29 = sub_10009D280();
    uint64_t v31 = v30;
    type metadata accessor for AddDevicesExtensionContainerViewModel();
    sub_1000728A0(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
    uint64_t v32 = sub_10009D280();
    *((void *)&v62 + 1) = sub_100078A10;
    *(void *)&long long v62 = v63[0];
    sub_10009AEBC(v29, v31, v32, v33, (uint64_t)sub_1000789F0, v66, (uint64_t)sub_100077958, (uint64_t)v106, v62, v27);
    uint64_t v34 = *(void *)(v24 + *(int *)(v81 + 48));
    if (v34)
    {
      swift_retain();
      uint64_t v35 = sub_10009CE90();
      long long v93 = v106[7];
      long long v94 = v106[8];
      long long v88 = v106[2];
      long long v89 = v106[3];
      long long v91 = v106[5];
      long long v92 = v106[6];
      long long v90 = v106[4];
      long long v86 = v106[0];
      long long v87 = v106[1];
      uint64_t v36 = sub_10004B9A0();
      uint64_t v37 = sub_10009CE90();
      long long v101 = v92;
      long long v102 = v93;
      long long v103 = v94;
      long long v97 = v88;
      long long v98 = v89;
      long long v99 = v90;
      long long v100 = v91;
      long long v95 = v86;
      long long v96 = v87;
      *(void *)&long long v104 = v35;
      *((void *)&v104 + 1) = v34;
      *(void *)&long long v105 = v37;
      *((void *)&v105 + 1) = v36;
      uint64_t v39 = v69;
      uint64_t v38 = v70;
      uint64_t v40 = v71;
      (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, enum case for ColorScheme.dark(_:), v71);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v42 = v72;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v72 + *(int *)(v68 + 28), v39, v40);
      *uint64_t v42 = KeyPath;
      uint64_t v43 = v64;
      sub_100010720((uint64_t)v42, (uint64_t)v19 + *(int *)(v64 + 36), &qword_1000DA278);
      long long v44 = v104;
      v19[8] = v103;
      v19[9] = v44;
      v19[10] = v105;
      long long v45 = v100;
      v19[4] = v99;
      v19[5] = v45;
      long long v46 = v102;
      v19[6] = v101;
      v19[7] = v46;
      long long v47 = v96;
      *uint64_t v19 = v95;
      v19[1] = v47;
      long long v48 = v98;
      v19[2] = v97;
      v19[3] = v48;
      sub_100078AF0((uint64_t)&v95);
      sub_100010864((uint64_t)v42, &qword_1000DA278);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      sub_100078BD0((uint64_t)&v95);
      type metadata accessor for OperationStatus();
      sub_1000728A0(&qword_1000D9E28, (void (*)(uint64_t))type metadata accessor for OperationStatus);
      sub_10009D1B0();
      swift_getKeyPath();
      uint64_t v49 = (uint64_t)v76;
      sub_10009D1C0();
      swift_release();
      uint64_t v50 = swift_release();
      __chkstk_darwin(v50);
      uint64_t v51 = type metadata accessor for ErrorInfo();
      unint64_t v52 = sub_100078790();
      uint64_t v53 = sub_1000728A0(&qword_1000DA198, (void (*)(uint64_t))type metadata accessor for ErrorInfo);
      uint64_t v54 = v73;
      sub_10009D800();
      sub_100010864(v49, &qword_1000DA1F8);
      sub_100010864((uint64_t)v19, &qword_1000DA280);
      uint64_t v56 = v74;
      uint64_t v55 = v75;
      uint64_t v57 = v65;
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v74, v54, v65);
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v79, v56, v57);
      swift_storeEnumTagMultiPayload();
      uint64_t v82 = v43;
      uint64_t v83 = v51;
      unint64_t v84 = v52;
      uint64_t v85 = v53;
      swift_getOpaqueTypeConformance2();
      sub_10009D4E0();
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v57);
    }
    else
    {
      uint64_t result = sub_10009D260();
      __break(1u);
    }
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = type metadata accessor for ErrorInfo();
    unint64_t v60 = sub_100078790();
    uint64_t v61 = sub_1000728A0(&qword_1000DA198, (void (*)(uint64_t))type metadata accessor for ErrorInfo);
    *(void *)&long long v95 = v17;
    *((void *)&v95 + 1) = v59;
    *(void *)&long long v96 = v60;
    *((void *)&v96 + 1) = v61;
    swift_getOpaqueTypeConformance2();
    return sub_10009D4E0();
  }
  return result;
}

uint64_t sub_10006DAB4()
{
  return sub_10009D970();
}

uint64_t sub_10006DB20()
{
  uint64_t v1 = sub_10000D308(&qword_1000D9E30);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_10009CB50();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v27 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = sub_10009D160();
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AddDevicesToADEExtensionView();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  if (v32 - 5 >= 2)
  {
    if (v32 == 2)
    {
      uint64_t v17 = *(void *)(v0 + *(int *)(v15 + 48));
      if (!v17)
      {
        type metadata accessor for AddDevicesExtensionContainerViewModel();
        sub_1000728A0(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
        uint64_t result = sub_10009D260();
        __break(1u);
        return result;
      }
      uint64_t v18 = v7;
      uint64_t v19 = v17
          + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesExtensionContainerViewModel_hostAppInfo;
      v20._object = *(void **)(v19 + 16);
      uint64_t v21 = v28;
      if (v20._object)
      {
        v20._countAndFlagsBits = *(void *)(v19 + 8);
        uint64_t v32 = 0x666572702D707041;
        unint64_t v33 = 0xEA00000000003A73;
        sub_10009DD50(v20);
        sub_10009CB40();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v18) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v11, v6, v18);
          sub_1000721C0(&qword_1000D9DE8, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, 0x414C52556E65704FLL, (uint64_t)v14);
          sub_10009D150();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
          return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v18);
        }
        sub_100010864((uint64_t)v6, &qword_1000D9E30);
      }
      sub_10009CB40();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v4, 1, v18) == 1)
      {
        return sub_100010864((uint64_t)v4, &qword_1000D9E30);
      }
      else
      {
        unint64_t v25 = v27;
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v27, v4, v18);
        sub_1000721C0(&qword_1000D9DE8, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, 0x414C52556E65704FLL, (uint64_t)v14);
        sub_10009D150();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
        return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v25, v18);
      }
    }
    else if (v32 == 1)
    {
      sub_1000721C0(&qword_1000D9DE8, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, 0x414C52556E65704FLL, (uint64_t)v14);
      if (qword_1000D5298 != -1) {
        swift_once();
      }
      sub_10000D690(v7, (uint64_t)qword_1000E35D0);
      sub_10009D150();
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v30);
    }
    else
    {
      uint64_t v22 = (char *)(v0 + *(int *)(v15 + 28));
      char v23 = *v22;
      unint64_t v24 = *((void *)v22 + 1);
      LOBYTE(v32) = v23;
      unint64_t v33 = v24;
      char v31 = 1;
      sub_10000D308(&qword_1000DA1A0);
      return sub_10009D970();
    }
  }
  return result;
}

uint64_t sub_10006E0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v4 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v37 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = sub_10009CCC0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10009DC60();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10000D308(&qword_1000DA268);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ErrorInfo();
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(v11 + 20));
  uint64_t v13 = v12[1];
  uint64_t v40 = *v12;
  uint64_t v41 = v13;
  sub_10001E4B8();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_10009D750();
  uint64_t v35 = v15;
  uint64_t v36 = v14;
  int v33 = v16;
  uint64_t v34 = v17;
  uint64_t v18 = (uint64_t *)(a1 + *(int *)(v11 + 24));
  uint64_t v19 = v18[1];
  uint64_t v40 = *v18;
  uint64_t v41 = v19;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_10009D750();
  v32[1] = v21;
  v32[2] = v20;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v40 = sub_10009DCE0();
  uint64_t v41 = v22;
  uint64_t v23 = sub_10009D750();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_100077A40(v38, (uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  unint64_t v28 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v29 = swift_allocObject();
  sub_100074974((uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
  sub_10009D880();
  sub_10001F7AC(v23, v25, v27);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_10009D890();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 0, 1, v30);
  return sub_10009D850();
}

uint64_t sub_10006E440(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + *(int *)(type metadata accessor for AddDevicesToADEExtensionView() + 88));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10000FF9C(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
}

uint64_t sub_10006E4A4()
{
  return sub_10009D7F0();
}

uint64_t sub_10006E514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_10000D308(&qword_1000DA1F8);
  __chkstk_darwin(v3 - 8);
  int v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000D308(&qword_1000DA138);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10000D308(&qword_1000DA130);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v34 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SignInViewModel();
  sub_1000728A0((unint64_t *)&unk_1000D9E40, (void (*)(uint64_t))type metadata accessor for SignInViewModel);
  uint64_t v8 = sub_10009D280();
  uint64_t v31 = v9;
  uint64_t v32 = v8;
  type metadata accessor for AddDevicesExtensionContainerViewModel();
  sub_1000728A0(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
  uint64_t v10 = sub_10009D280();
  uint64_t v12 = v11;
  uint64_t v13 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v14 = *(void *)(a1 + *(int *)(v13 + 128) + 8);
  uint64_t v15 = sub_10009CE90();
  uint64_t v16 = *(void *)(a1 + *(int *)(v13 + 48));
  if (v16)
  {
    uint64_t v17 = v15;
    swift_retain();
    swift_retain();
    uint64_t v18 = sub_10009CE90();
    uint64_t v19 = sub_10009D200();
    char v20 = sub_10009D600();
    uint64_t v41 = v32;
    uint64_t v42 = v31;
    unint64_t v43 = v10;
    uint64_t v44 = v12;
    uint64_t v45 = v17;
    uint64_t v46 = v14;
    uint64_t v47 = v18;
    uint64_t v48 = v16;
    uint64_t v49 = v19;
    char v50 = v20;
    type metadata accessor for OperationStatus();
    sub_1000728A0(&qword_1000D9E28, (void (*)(uint64_t))type metadata accessor for OperationStatus);
    sub_10009D1B0();
    swift_getKeyPath();
    uint64_t v21 = (uint64_t)v33;
    sub_10009D1C0();
    swift_release();
    swift_release();
    uint64_t v22 = sub_10000D308(&qword_1000DA140);
    uint64_t v23 = type metadata accessor for ErrorInfo();
    unint64_t v24 = sub_10007750C();
    uint64_t v25 = sub_1000728A0(&qword_1000DA198, (void (*)(uint64_t))type metadata accessor for ErrorInfo);
    char v26 = v36;
    sub_10009D800();
    sub_100010864(v21, &qword_1000DA1F8);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v41 = v22;
    uint64_t v42 = v23;
    unint64_t v43 = v24;
    uint64_t v44 = v25;
    swift_getOpaqueTypeConformance2();
    char v27 = v34;
    uint64_t v28 = v39;
    sub_10009D7F0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v28);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v40, v27, v37);
  }
  else
  {
    swift_retain();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10006EA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v24[3] = a2;
  uint64_t v3 = sub_10009CCC0();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_10009DC60();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10000D308(&qword_1000DA268);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ErrorInfo();
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(v8 + 20));
  uint64_t v10 = v9[1];
  uint64_t v25 = *v9;
  uint64_t v26 = v10;
  sub_10001E4B8();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_10009D750();
  v24[1] = v12;
  void v24[2] = v11;
  v24[0] = v13;
  uint64_t v14 = (uint64_t *)(a1 + *(int *)(v8 + 24));
  uint64_t v15 = v14[1];
  uint64_t v25 = *v14;
  uint64_t v26 = v15;
  swift_bridgeObjectRetain();
  sub_10009D750();
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v25 = sub_10009DCE0();
  uint64_t v26 = v16;
  uint64_t v17 = sub_10009D750();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_10009D880();
  sub_10001F7AC(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_10009D890();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 0, 1, v22);
  return sub_10009D850();
}

uint64_t sub_10006ECAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v4 = v3 - 8;
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v38 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = type metadata accessor for DeviceStatusView();
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = sub_10000D308(&qword_1000DA1B0);
  __chkstk_darwin(v41);
  uint64_t v40 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + *(int *)(v4 + 112));
  uint64_t v35 = a1;
  sub_1000102FC(v11 + 16, (uint64_t)v46);
  uint64_t v12 = *(void *)(v11 + 56);
  uint64_t v13 = *(void **)(v11 + 64);
  type metadata accessor for DeviceStatusViewModel();
  swift_allocObject();
  swift_unknownObjectRetain();
  unint64_t v43 = sub_1000183CC(v46, v12, v13);
  uint64_t v39 = type metadata accessor for AddDevicesToADEExtensionView;
  uint64_t v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100077A40(a1, v36, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  uint64_t v14 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v37 = v14 | 7;
  uint64_t v38 = v15 + v5;
  uint64_t v16 = swift_allocObject();
  sub_100074974((uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  sub_1000728A0((unint64_t *)&qword_1000D64F0, (void (*)(uint64_t))type metadata accessor for DeviceStatusViewModel);
  uint64_t v17 = sub_10009D280();
  uint64_t v19 = v18;
  uint64_t v44 = 0x4059000000000000;
  sub_10009D950();
  uint64_t v20 = v46[1];
  *uint64_t v9 = v46[0];
  v9[1] = v20;
  char v21 = (void *)((char *)v9 + v7[7]);
  *char v21 = swift_getKeyPath();
  sub_10000D308((uint64_t *)&unk_1000DA200);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (void *)((char *)v9 + v7[8]);
  *uint64_t v22 = v17;
  v22[1] = v19;
  uint64_t v23 = (uint64_t (**)())((char *)v9 + v7[9]);
  *uint64_t v23 = sub_1000779B4;
  v23[1] = (uint64_t (*)())v16;
  uint64_t v24 = sub_10009CE90();
  uint64_t v25 = v40;
  sub_100077A40((uint64_t)v9, v40, (uint64_t (*)(void))type metadata accessor for DeviceStatusView);
  uint64_t v26 = (uint64_t *)(v25 + *(int *)(v41 + 36));
  char v27 = v43;
  *uint64_t v26 = v24;
  v26[1] = (uint64_t)v27;
  swift_retain();
  sub_100078118((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceStatusView);
  uint64_t v28 = v35;
  uint64_t v29 = v35 + *(int *)(v4 + 44);
  char v30 = *(unsigned char *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  LOBYTE(v44) = v30;
  uint64_t v45 = v31;
  sub_10000D308(&qword_1000DA1A0);
  sub_10009D980();
  uint64_t v32 = v36;
  sub_100077A40(v28, v36, (uint64_t (*)(void))v39);
  uint64_t v33 = swift_allocObject();
  sub_100074974(v32, v33 + v15);
  sub_100077668();
  sub_1000654CC();
  sub_10009D820();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_100010864(v25, &qword_1000DA1B0);
}

uint64_t sub_10006F104(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_100077A40(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  sub_10009DE40();
  uint64_t v10 = sub_10009DE30();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  sub_100074974((uint64_t)v5, v12 + v11);
  sub_100088B08((uint64_t)v8, (uint64_t)&unk_1000DA258, v12);
  return swift_release();
}

uint64_t sub_10006F2C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v4);
  sub_10000D308(&qword_1000DA220);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10009EF80;
  uint64_t v9 = a1 + *(int *)(v5 + 52);
  uint64_t v10 = sub_10009CB50();
  *(void *)(v8 + 56) = v10;
  unint64_t v11 = sub_100013860((uint64_t *)(v8 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v11, v9, v10);
  sub_100077A40(a1, (uint64_t)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  uint64_t result = sub_100074974((uint64_t)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  *a2 = v8;
  a2[1] = (uint64_t)sub_100077B20;
  a2[2] = v13;
  return result;
}

void sub_10006F464()
{
  uint64_t v1 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v0 + *(int *)(v2 + 44);
  char v10 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  LOBYTE(v24[0]) = v10;
  *((void *)&v24[0] + 1) = v11;
  LOBYTE(v25) = 0;
  sub_10000D308(&qword_1000DA1A0);
  sub_10009D970();
  unint64_t v12 = (_OWORD *)(v0 + *(int *)(v2 + 48));
  long long v13 = v12[1];
  v24[0] = *v12;
  v24[1] = v13;
  sub_10000D308(&qword_1000DA228);
  sub_10009D960();
  if ((void)v26)
  {
    uint64_t v14 = v25;
    long long v23 = v26;
    uint64_t v15 = sub_10009DE70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
    sub_100077A40(v0, (uint64_t)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    sub_10009DE40();
    uint64_t v16 = sub_10009DE30();
    unint64_t v17 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = &protocol witness table for MainActor;
    *(void *)(v18 + 32) = v14;
    *(_OWORD *)(v18 + 40) = v23;
    sub_100074974((uint64_t)v5, v18 + v17);
    sub_100088B08((uint64_t)v8, (uint64_t)&unk_1000DA238, v18);
    swift_release();
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10009CE60();
    sub_10000D690(v19, (uint64_t)qword_1000E3488);
    uint64_t v20 = sub_10009CE40();
    os_log_type_t v21 = sub_10009DEA0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(void *)&v24[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v25 = sub_10000DBA8(0xD000000000000016, 0x80000001000AA7E0, (uint64_t *)v24);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s No device history document to remove", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10006F7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v5 = (int *)(v4 - 8);
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v21 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = a1 + v5[10];
  char v8 = *(unsigned char *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  char v22 = v8;
  uint64_t v23 = v9;
  sub_10000D308(&qword_1000DA1A0);
  sub_10009D980();
  uint64_t v10 = v24;
  uint64_t v11 = v25;
  char v12 = v26;
  uint64_t v13 = *(void *)(a1 + v5[31]);
  uint64_t v14 = *(void *)(a1 + v5[36] + 8);
  type metadata accessor for NetworkProfilePickerViewModel();
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(v13 + 32);
  v20[0] = *(_OWORD *)(v13 + 16);
  v20[1] = v16;
  *(_OWORD *)(v15 + 16) = v20[0];
  *(_OWORD *)(v15 + 32) = v16;
  *(void *)(v15 + 48) = v14;
  sub_100077A40(a1, (uint64_t)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  unint64_t v17 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v18 = swift_allocObject();
  sub_100074974((uint64_t)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = sub_100077958;
  *(void *)(a2 + 40) = v18;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return swift_retain();
}

uint64_t sub_10006F9BC()
{
  return sub_10009D970();
}

uint64_t sub_10006FA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v18[1] = a2;
  uint64_t v3 = sub_10000D308(&qword_1000DA1F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = type metadata accessor for SettingsView();
  __chkstk_darwin(v9);
  uint64_t v11 = (void *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100077A40(a1, (uint64_t)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  sub_100074974((uint64_t)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  *(void *)((char *)v11 + *(int *)(v9 + 24)) = swift_getKeyPath();
  sub_10000D308((uint64_t *)&unk_1000DA200);
  swift_storeEnumTagMultiPayload();
  void v18[5] = 0x4059000000000000;
  swift_retain();
  sub_10009D950();
  uint64_t v14 = v18[7];
  *uint64_t v11 = v18[6];
  v11[1] = v14;
  type metadata accessor for SettingsViewModel();
  sub_1000728A0((unint64_t *)&qword_1000D6188, (void (*)(uint64_t))type metadata accessor for SettingsViewModel);
  v11[2] = sub_10009D1A0();
  v11[3] = v15;
  long long v16 = (uint64_t (**)())((char *)v11 + *(int *)(v9 + 28));
  *long long v16 = sub_1000778A4;
  v16[1] = (uint64_t (*)())v13;
  type metadata accessor for OperationStatus();
  sub_1000728A0(&qword_1000D9E28, (void (*)(uint64_t))type metadata accessor for OperationStatus);
  sub_10009D1B0();
  swift_getKeyPath();
  sub_10009D1C0();
  swift_release();
  swift_release();
  v18[4] = a1;
  type metadata accessor for ErrorInfo();
  sub_1000728A0(&qword_1000DA1F0, (void (*)(uint64_t))type metadata accessor for SettingsView);
  sub_1000728A0(&qword_1000DA198, (void (*)(uint64_t))type metadata accessor for ErrorInfo);
  sub_10009D800();
  sub_100010864((uint64_t)v5, &qword_1000DA1F8);
  return sub_100078118((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SettingsView);
}

uint64_t sub_10006FE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v58 = a3;
  uint64_t v5 = type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v49 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10009CCC0();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10009DC60();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10009D890();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v57 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v59 = (char *)&v44 - v14;
  uint64_t v15 = type metadata accessor for ErrorInfo();
  long long v16 = (uint64_t *)(a1 + *(int *)(v15 + 20));
  uint64_t v17 = v16[1];
  uint64_t v60 = *v16;
  uint64_t v61 = v17;
  sub_10001E4B8();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10009D750();
  uint64_t v55 = v19;
  uint64_t v56 = v18;
  int v53 = v20;
  uint64_t v54 = v21;
  char v22 = (uint64_t *)(a1 + *(int *)(v15 + 24));
  uint64_t v23 = v22[1];
  uint64_t v60 = *v22;
  uint64_t v61 = v23;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_10009D750();
  uint64_t v51 = v25;
  uint64_t v52 = v24;
  int v47 = v26;
  uint64_t v50 = v27;
  sub_10009DC00();
  uint64_t v44 = v9;
  sub_10009CCB0();
  uint64_t v60 = sub_10009DCE0();
  uint64_t v61 = v28;
  uint64_t v29 = sub_10009D750();
  uint64_t v31 = v30;
  LOBYTE(v9) = v32 & 1;
  uint64_t v45 = type metadata accessor for AddDevicesToADEExtensionView;
  uint64_t v33 = v48;
  sub_100077A40(a2, v48, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  uint64_t v34 = *(unsigned __int8 *)(v49 + 80);
  uint64_t v35 = (v34 + 16) & ~v34;
  uint64_t v49 = v34 | 7;
  uint64_t v36 = swift_allocObject();
  sub_100074974(v33, v36 + v35);
  sub_10009D880();
  sub_10001F7AC(v29, v31, (char)v9);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v60 = sub_10009DCE0();
  uint64_t v61 = v37;
  uint64_t v38 = sub_10009D750();
  uint64_t v40 = v39;
  LOBYTE(v31) = v41 & 1;
  sub_100077A40(v46, v33, (uint64_t (*)(void))v45);
  uint64_t v42 = swift_allocObject();
  sub_100074974(v33, v42 + v35);
  sub_10009D870();
  sub_10001F7AC(v38, v40, v31);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10009D860();
}

uint64_t sub_1000702D0()
{
  return sub_10009D970();
}

uint64_t sub_100070340()
{
  uint64_t v1 = sub_10009CCA0();
  v0[13] = v1;
  v0[14] = *(void *)(v1 - 8);
  v0[15] = swift_task_alloc();
  sub_10009DE40();
  v0[16] = sub_10009DE30();
  uint64_t v3 = sub_10009DE10();
  v0[17] = v3;
  v0[18] = v2;
  return _swift_task_switch(sub_100070430, v3, v2);
}

uint64_t sub_100070430()
{
  if (qword_1000D51F0 != -1) {
    swift_once();
  }
  sub_1000102FC((uint64_t)&qword_1000E34B8, (uint64_t)(v0 + 2));
  type metadata accessor for KeychainBackedGrandSlamTokenStorage();
  uint64_t inited = swift_initStackObject();
  v0[19] = inited;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  sub_10000FF9C(v0 + 2, v2);
  *(void *)(inited + 16) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  *(void *)(inited + 24) = v4;
  sub_1000100E8((uint64_t)(v0 + 2));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[20] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10007056C;
  return sub_100086218();
}

uint64_t sub_10007056C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[21] = a1;
  v5[22] = a2;
  v5[23] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[18];
  uint64_t v7 = v4[17];
  if (v2) {
    uint64_t v8 = sub_100070DBC;
  }
  else {
    uint64_t v8 = sub_1000706B4;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_1000706B4()
{
  uint64_t v19 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  unint64_t v1 = v0[22];
  uint64_t v2 = sub_10009CE60();
  v0[24] = sub_10000D690(v2, (uint64_t)qword_1000E3488);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v6 = v0[21];
    uint64_t v5 = v0[22];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136380675;
    uint64_t v18 = v8;
    if (v5)
    {
      unint64_t v9 = v1;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v9 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    v0[12] = sub_10000DBA8(v6, v9, &v18);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Current grand slam token value: %{private}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = v0[14];
  uint64_t v10 = v0[15];
  uint64_t v12 = v0[13];
  sub_10009CC90();
  uint64_t v13 = sub_10009CC60();
  uint64_t v15 = v14;
  v0[25] = v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  long long v16 = (void *)swift_task_alloc();
  v0[26] = v16;
  *long long v16 = v0;
  v16[1] = sub_100070928;
  return sub_100086924(v13, v15);
}

uint64_t sub_100070928()
{
  uint64_t v2 = (void *)*v1;
  v2[27] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[17];
    uint64_t v4 = v2[18];
    return _swift_task_switch(sub_100070E34, v3, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)swift_task_alloc();
    v2[28] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_100070A98;
    return sub_100086218();
  }
}

uint64_t sub_100070A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[29] = a1;
  v5[30] = a2;
  v5[31] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[18];
  uint64_t v7 = v4[17];
  if (v2) {
    uint64_t v8 = sub_100070EB8;
  }
  else {
    uint64_t v8 = sub_100070BE0;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_100070BE0()
{
  uint64_t v12 = v0;
  unint64_t v1 = v0[30];
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEA0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = v0[29];
    uint64_t v4 = v0[30];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136380675;
    uint64_t v11 = v7;
    if (v4)
    {
      unint64_t v8 = v1;
    }
    else
    {
      uint64_t v5 = 0;
      unint64_t v8 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    v0[11] = sub_10000DBA8(v5, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Updated grand slam token value: %{private}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100070DBC()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100070E34()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100070EB8()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100070F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a4;
  v4[20] = type metadata accessor for AddDevicesToADEExtensionView();
  v4[21] = swift_task_alloc();
  uint64_t v5 = sub_10009CB50();
  v4[22] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[23] = v6;
  v4[24] = *(void *)(v6 + 64);
  v4[25] = swift_task_alloc();
  sub_10000D308(&qword_1000D9350);
  v4[26] = swift_task_alloc();
  sub_10009CCC0();
  v4[27] = swift_task_alloc();
  sub_10009DC60();
  v4[28] = swift_task_alloc();
  sub_10009DE40();
  v4[29] = sub_10009DE30();
  uint64_t v8 = sub_10009DE10();
  v4[30] = v8;
  v4[31] = v7;
  return _swift_task_switch(sub_1000710E8, v8, v7);
}

uint64_t sub_1000710E8()
{
  if (qword_1000D5268 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_1000E3578;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 40) + **(int **)(v1 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10007121C;
  return v5(ObjectType, v1);
}

uint64_t sub_10007121C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 248);
  uint64_t v4 = *(void *)(v2 + 240);
  return _swift_task_switch(sub_100071344, v4, v3);
}

uint64_t sub_100071344()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 152);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v4 = sub_10009DCE0();
  uint64_t v5 = (uint64_t *)(v3 + *(int *)(v2 + 40));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = v5[2];
  uint64_t v9 = v5[3];
  *(void *)(v0 + 16) = *v5;
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v8;
  *(void *)(v0 + 40) = v9;
  *(void *)(v0 + 104) = v4;
  *(void *)(v0 + 112) = v10;
  *(void *)(v0 + 120) = v1;
  sub_10000D308(&qword_1000DA228);
  sub_10009D970();
  *(void *)(v0 + 48) = v6;
  *(void *)(v0 + 56) = v7;
  *(void *)(v0 + 64) = v8;
  *(void *)(v0 + 72) = v9;
  sub_10009D960();
  *(void *)(v0 + 272) = *(void *)(v0 + 80);
  long long v11 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 280) = v11;
  if ((void)v11)
  {
    *(_DWORD *)(v0 + 296) = *(_DWORD *)(*(void *)(v0 + 160) + 44);
    return _swift_task_switch(sub_100071760, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v12 = (char *)(*(void *)(v0 + 152) + *(int *)(*(void *)(v0 + 160) + 36));
    char v13 = *v12;
    uint64_t v14 = *((void *)v12 + 1);
    *(unsigned char *)(v0 + 128) = v13;
    *(void *)(v0 + 136) = v14;
    *(unsigned char *)(v0 + 300) = 1;
    sub_10000D308(&qword_1000DA1A0);
    sub_10009D970();
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v17 = sub_10009CE60();
    sub_10000D690(v17, (uint64_t)qword_1000E3488);
    sub_100077A40(v16, v15, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    uint64_t v18 = sub_10009CE40();
    os_log_type_t v19 = sub_10009DED0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = *(void *)(v0 + 168);
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136446210;
      sub_1000728A0((unint64_t *)&qword_1000DB190, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v22 = sub_10009E230();
      *(void *)(v0 + 144) = sub_10000DBA8(v22, v23, &v26);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      sub_100078118(v20, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Document saved to %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100078118(*(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
}

uint64_t sub_100071760()
{
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 152) + *(int *)(v0 + 296);
  uint64_t v7 = sub_10002491C(*(void *)(v0 + 272), *(void *)(v0 + 280), *(void *)(v0 + 288));
  uint64_t v16 = v8;
  uint64_t v17 = v7;
  uint64_t v9 = sub_10009DE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v2, v5);
  uint64_t v12 = (uint64_t *)(v11 + ((v3 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v12 = v17;
  v12[1] = v16;
  sub_10002C3D0(v1, (uint64_t)&unk_1000DA260, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v0 + 240);
  uint64_t v14 = *(void *)(v0 + 248);
  return _swift_task_switch(sub_100071900, v13, v14);
}

uint64_t sub_100071900()
{
  uint64_t v16 = v0;
  swift_release();
  uint64_t v1 = (char *)(*(void *)(v0 + 152) + *(int *)(*(void *)(v0 + 160) + 36));
  char v2 = *v1;
  uint64_t v3 = *((void *)v1 + 1);
  *(unsigned char *)(v0 + 128) = v2;
  *(void *)(v0 + 136) = v3;
  *(unsigned char *)(v0 + 300) = 1;
  sub_10000D308(&qword_1000DA1A0);
  sub_10009D970();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = sub_10009CE60();
  sub_10000D690(v6, (uint64_t)qword_1000E3488);
  sub_100077A40(v5, v4, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  uint64_t v7 = sub_10009CE40();
  os_log_type_t v8 = sub_10009DED0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void *)(v0 + 168);
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)unint64_t v10 = 136446210;
    sub_1000728A0((unint64_t *)&qword_1000DB190, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v11 = sub_10009E230();
    *(void *)(v0 + 144) = sub_10000DBA8(v11, v12, &v15);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    sub_100078118(v9, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Document saved to %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100078118(*(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100071BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 80) = a7;
  uint64_t v8 = type metadata accessor for AddDevicesToADEExtensionView();
  *(void *)(v7 + 88) = v8;
  *(void *)(v7 + 96) = swift_task_alloc();
  uint64_t v9 = sub_10009CB50();
  *(void *)(v7 + 104) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v7 + 112) = v10;
  *(void *)(v7 + 120) = *(void *)(v10 + 64);
  *(void *)(v7 + 128) = swift_task_alloc();
  sub_10000D308(&qword_1000D9350);
  *(void *)(v7 + 136) = swift_task_alloc();
  *(void *)(v7 + 144) = sub_10009DE40();
  *(void *)(v7 + 152) = sub_10009DE30();
  *(_DWORD *)(v7 + 160) = *(_DWORD *)(v8 + 44);
  return _swift_task_switch(sub_100071D40, 0, 0);
}

uint64_t sub_100071D40()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 80) + *(int *)(v0 + 160);
  uint64_t v6 = sub_10009DE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 1, 1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  sub_10002C3D0(v1, (uint64_t)&unk_1000DA240, v8);
  swift_release();
  uint64_t v10 = sub_10009DE10();
  return _swift_task_switch(sub_100071EBC, v10, v9);
}

uint64_t sub_100071EBC()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 80);
  swift_release();
  uint64_t v3 = (_OWORD *)(v2 + *(int *)(v1 + 40));
  long long v4 = v3[1];
  *(_OWORD *)(v0 + 16) = *v3;
  *(_OWORD *)(v0 + 32) = v4;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 48) = 0;
  sub_10000D308(&qword_1000DA228);
  sub_10009D970();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = sub_10009CE60();
  sub_10000D690(v7, (uint64_t)qword_1000E3488);
  sub_100077A40(v6, v5, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  uint64_t v8 = sub_10009CE40();
  os_log_type_t v9 = sub_10009DED0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    sub_1000728A0((unint64_t *)&qword_1000DB190, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v12 = sub_10009E230();
    *(void *)(v0 + 72) = sub_10000DBA8(v12, v13, &v16);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    sub_100078118(v10, (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Document removed from %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100078118(*(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for AddDevicesToADEExtensionView);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100072190@<X0>(uint64_t a1@<X8>)
{
  return sub_1000721C0((uint64_t *)&unk_1000DA200, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, a1);
}

uint64_t sub_1000721C0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = v4;
  uint64_t v10 = sub_10009D3B0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000D308(a1);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010720(v8, (uint64_t)v16, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a4, v16, v17);
  }
  else
  {
    os_log_type_t v19 = sub_10009DEC0();
    uint64_t v20 = sub_10009D5F0();
    os_log_type_t v21 = v19;
    if (os_log_type_enabled(v20, v19))
    {
      v23[1] = a4;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      _OWORD v23[2] = sub_10000DBA8(a3, 0xED00006E6F697463, &v24);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10009D3A0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_10007247C()
{
  return sub_10009D340();
}

uint64_t type metadata accessor for AddDevicesToADEExtensionView()
{
  uint64_t result = qword_1000DA020;
  if (!qword_1000DA020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000724EC()
{
  return sub_10009D350();
}

uint64_t sub_100072510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100072550(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_100072550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  os_log_type_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100072620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000D7970);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000728A0(&qword_1000D9E08, (void (*)(uint64_t))type metadata accessor for UserDefaultsBackedKeyValueStorage);
  swift_defaultActor_initialize();
  uint64_t v12 = a2
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37KeyValueStoreBackedNetworkInfoStorage__networkInfo;
  long long v16 = xmmword_1000A13B0;
  long long v17 = xmmword_1000A13B0;
  sub_10000D308(&qword_1000D9FB0);
  sub_10009CF00();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v10, v7);
  *(void *)(a2 + 112) = a1;
  *(void *)(a2 + 120) = v11;
  swift_getKeyPath();
  swift_getKeyPath();
  long long v17 = v16;
  swift_retain();
  swift_retain();
  sub_10009CF40();
  uint64_t v13 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = 0;
  v14[3] = 0;
  void v14[4] = a2;
  swift_retain();
  sub_10002C3D0((uint64_t)v6, (uint64_t)&unk_1000D9FB8, (uint64_t)v14);
  swift_release();
  swift_release();
  return a2;
}

uint64_t sub_1000728A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000728EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100010914;
  return sub_1000157C8(a1, v4, v5, v6);
}

void sub_1000729A0(uint64_t a1, unint64_t a2)
{
  id v4 = [self mainBundle];
  NSString v5 = sub_10009DC70();
  NSString v6 = sub_10009DC70();
  id v7 = [v4 pathForResource:v5 ofType:v6];

  if (v7)
  {
    uint64_t v8 = sub_10009DC80();
    unint64_t v10 = v9;

    swift_bridgeObjectRetain();
    sub_10007EB08(v8, v10, v30);
    os_log_t oslog = (os_log_t)sub_10007E900();
    unint64_t v15 = v14;
    sub_100074ECC((uint64_t)v30, (uint64_t)v35);
    sub_10003521C((uint64_t)v35);
    sub_100074ECC((uint64_t)&v31, (uint64_t)v34);
    sub_10003521C((uint64_t)v34);
    sub_100074ECC((uint64_t)&v32, (uint64_t)v33);
    sub_10003521C((uint64_t)v33);
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10009CE60();
    sub_10000D690(v16, (uint64_t)qword_1000E3488);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    long long v17 = sub_10009CE40();
    os_log_type_t v18 = sub_10009DE90();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v26 = v15;
      uint64_t v19 = swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315650;
      sub_10000DBA8(0xD000000000000019, 0x80000001000AA750, v29);
      sub_10009DFC0();
      *(_WORD *)(v19 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_10000DBA8(a1, a2, v29);
      sub_10009DFC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 22) = 2082;
      swift_bridgeObjectRetain();
      sub_10000DBA8(v8, v10, v29);
      sub_10009DFC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s Reading contents of %{public}s.plist at %{public}s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v15 = v26;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_10009CE40();
    os_log_type_t v21 = sub_10009DED0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      sub_10000DBA8(0xD000000000000019, 0x80000001000AA750, v29);
      sub_10009DFC0();
      *(_WORD *)(v22 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_10000DBA8((uint64_t)oslog, v15, v29);
      sub_10009DFC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s: App version and build number: %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v23 = [self standardUserDefaults];
    NSString v24 = sub_10009DC70();
    swift_bridgeObjectRelease();
    if (qword_1000D5280 != -1) {
      swift_once();
    }
    NSString v25 = sub_10009DC70();
    [v23 setObject:v24 forKey:v25];
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10009CE60();
    sub_10000D690(v11, (uint64_t)qword_1000E3488);
    osloga = sub_10009CE40();
    os_log_type_t v12 = sub_10009DEA0();
    if (os_log_type_enabled(osloga, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      v30[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      v35[0] = sub_10000DBA8(0xD000000000000019, 0x80000001000AA750, v30);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, osloga, v12, "%s Unable to find the resourced path for version.plist", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void *sub_100073274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v109 = a8;
  uint64_t v110 = a7;
  long long v105 = a6;
  long long v102 = a5;
  uint64_t v107 = a3;
  uint64_t v108 = a4;
  uint64_t v90 = a2;
  uint64_t v114 = a1;
  uint64_t v117 = (void *)a9;
  uint64_t v10 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v10 - 8);
  long long v100 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10000D308(&qword_1000D9E68);
  uint64_t v99 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  long long v97 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10000D308(&qword_1000D9E70);
  uint64_t v116 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  long long v95 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_10000D308(&qword_1000D9E78);
  uint64_t v94 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  long long v92 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000D308(&qword_1000D9E80);
  __chkstk_darwin(v15 - 8);
  uint64_t v106 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10000D308(&qword_1000D9E88);
  uint64_t v104 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  long long v91 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v115 = (void *)sub_10009DB00();
  uint64_t v113 = *(v115 - 1);
  __chkstk_darwin(v115);
  long long v103 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10009DB30();
  uint64_t v111 = *(void *)(v19 - 8);
  unint64_t v112 = v19;
  __chkstk_darwin(v19);
  long long v89 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10009DF30();
  uint64_t v88 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v22 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10000D308((uint64_t *)&unk_1000D9E90);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10000D308((uint64_t *)&unk_1000D92F0);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v85 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000728A0(&qword_1000D9E38, (void (*)(uint64_t))type metadata accessor for FileManagerBackedEncryptedKeyValueStorage);
  a10[20] = _swiftEmptyArrayStorage;
  uint64_t v118 = a10 + 20;
  aBlock = _swiftEmptyArrayStorage;
  sub_10000D308((uint64_t *)&unk_1000D9EA0);
  swift_allocObject();
  a10[21] = sub_10009CEF0();
  aBlock = _swiftEmptyArrayStorage;
  sub_10000D308(&qword_1000D5E20);
  swift_allocObject();
  a10[22] = sub_10009CEF0();
  uint64_t v31 = (char *)a10
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider__assignmentStatus;
  LOBYTE(aBlock) = 0;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v30, v27);
  uint64_t v32 = (char *)a10
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider__enrollmentError;
  LOBYTE(aBlock) = 5;
  sub_10000D308(&qword_1000D9EB0);
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v32, v26, v23);
  uint64_t v33 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_deviceTrackingInfoByIdentifier;
  *(void *)((char *)a10 + v33) = sub_1000357E4((uint64_t)_swiftEmptyArrayStorage);
  *(void *)((char *)a10
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_ignoredDeviceIdentifiers) = &_swiftEmptySetSingleton;
  *((unsigned char *)a10
  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_isInBackground) = 0;
  sub_10009DB40();
  *((unsigned char *)a10
  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_shouldProcessDevices) = 0;
  *(void *)((char *)a10
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_filteredNearbyDevices) = _swiftEmptyArrayStorage;
  *(void *)((char *)a10
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_currentTargetDevice) = 0;
  *((unsigned char *)a10
  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_prerequisiteStatus) = 6;
  *(void *)((char *)a10
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_didBecomeActiveNotificationObserver) = 0;
  *(void *)((char *)a10
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_willResignActiveNotificationObserver) = 0;
  *((unsigned char *)a10
  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_isDiscoveringDevices) = 0;
  *((unsigned char *)a10
  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_startDiscoveryOnActivation) = 0;
  uint64_t v34 = v114;
  uint64_t v35 = v90;
  a10[2] = v114;
  a10[3] = v35;
  uint64_t v36 = v108;
  a10[4] = v107;
  a10[5] = v36;
  uint64_t v37 = v86;
  a10[6] = v102;
  a10[7] = v37;
  uint64_t v38 = v109;
  uint64_t v39 = v110;
  a10[8] = v105;
  a10[9] = v39;
  sub_1000102FC(v38, (uint64_t)(a10 + 10));
  sub_1000102FC((uint64_t)v117, (uint64_t)(a10 + 15));
  sub_100046A1C(0, &qword_1000D9EB8);
  aBlock = _swiftEmptyArrayStorage;
  sub_1000728A0(&qword_1000D9EC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  uint64_t v40 = v34;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_10000D308(&qword_1000D9EC8);
  sub_100015700((unint64_t *)&unk_1000D9ED0, &qword_1000D9EC8);
  uint64_t v41 = v87;
  sub_10009E010();
  uint64_t v42 = sub_100046A1C(0, (unint64_t *)&qword_1000D69E0);
  unint64_t v43 = (void *)sub_10009DF00();
  uint64_t v44 = sub_10009DF40();

  (*(void (**)(char *, uint64_t))(v88 + 8))(v22, v41);
  *(void *)((char *)a10
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_delayedProcessingTimer) = v44;
  swift_getObjectType();
  uint64_t v124 = sub_100074CE8;
  uint64_t v125 = a10;
  aBlock = _NSConcreteStackBlock;
  uint64_t v121 = 1107296256;
  uint64_t v122 = sub_100026280;
  uint64_t v123 = &unk_1000CD9F8;
  uint64_t v45 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v46 = v89;
  sub_10009DB20();
  int v47 = v103;
  sub_100069C34();
  sub_10009DF50();
  _Block_release(v45);
  swift_unknownObjectRelease();
  (*(void (**)(char *, void *))(v113 + 8))(v47, v115);
  (*(void (**)(char *, unint64_t))(v111 + 8))(v46, v112);
  swift_release();
  aBlock = *(void **)(v40
                      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_nearbyDevicesSubject);
  sub_10000D308(&qword_1000D9EE0);
  long long v105 = &protocol conformance descriptor for PassthroughSubject<A, B>;
  sub_100015700(&qword_1000D9EE8, &qword_1000D9EE0);
  aBlock = (void *)sub_10009CF60();
  uint64_t v110 = v42;
  id v119 = (id)sub_10009DF00();
  uint64_t v111 = sub_10009DEF0();
  uint64_t v48 = *(void *)(v111 - 8);
  uint64_t v113 = *(void *)(v48 + 56);
  uint64_t v49 = (char *)(v48 + 56);
  uint64_t v50 = (uint64_t)v106;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v113)(v106, 1, 1, v111);
  sub_10000D308(&qword_1000D9EF0);
  long long v102 = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_100015700(&qword_1000D9EF8, &qword_1000D9EF0);
  unint64_t v112 = sub_100034944();
  uint64_t v51 = v91;
  sub_10009CF90();
  sub_100010864(v50, &qword_1000D9E80);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a10;
  long long v115 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100015700(&qword_1000D9F08, &qword_1000D9E88);
  uint64_t v52 = v101;
  sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v51, v52);
  swift_beginAccess();
  uint64_t v101 = sub_10000D308((uint64_t *)&unk_1000D93E0);
  uint64_t v104 = sub_100015700(&qword_1000D7030, (uint64_t *)&unk_1000D93E0);
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  aBlock = *(void **)(v40
                      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_pairedDeviceConnectionSubject);
  sub_10000D308(&qword_1000D9F10);
  sub_100015700(&qword_1000D9F18, &qword_1000D9F10);
  aBlock = (void *)sub_10009CF60();
  id v119 = (id)sub_10009DF00();
  uint64_t v53 = v111;
  long long v103 = v49;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v113)(v50, 1, 1, v111);
  sub_10000D308(&qword_1000D9F20);
  sub_100015700(&qword_1000D9F28, &qword_1000D9F20);
  uint64_t v54 = v92;
  sub_10009CF90();
  sub_100010864(v50, &qword_1000D9E80);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a10;
  sub_100015700(&qword_1000D9F30, &qword_1000D9E78);
  uint64_t v55 = v93;
  sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v54, v55);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  aBlock = *(void **)(v114
                      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_failedDeviceConnectionSubject);
  uint64_t v94 = sub_10000D308(&qword_1000D9F38);
  sub_100015700(&qword_1000D9F40, &qword_1000D9F38);
  aBlock = (void *)sub_10009CF60();
  id v119 = (id)sub_10009DF00();
  uint64_t v56 = (uint64_t)v106;
  uint64_t v57 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v113;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v113)(v106, 1, 1, v53);
  long long v105 = (void *)sub_10000D308(&qword_1000D9F48);
  uint64_t v93 = sub_100015700(&qword_1000D9F50, &qword_1000D9F48);
  uint64_t v58 = v95;
  sub_10009CF90();
  uint64_t v59 = v56;
  sub_100010864(v56, &qword_1000D9E80);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a10;
  long long v92 = (char *)sub_100015700(&qword_1000D9F58, &qword_1000D9E70);
  uint64_t v60 = v96;
  sub_10009CFA0();
  swift_release();
  uint64_t v61 = *(char **)(v116 + 8);
  v116 += 8;
  long long v91 = v61;
  ((void (*)(char *, uint64_t))v61)(v58, v60);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  aBlock = *(void **)(v114
                      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_alreadyPairedDeviceConnectionSubject);
  aBlock = (void *)sub_10009CF60();
  id v119 = (id)sub_10009DF00();
  uint64_t v62 = v59;
  v57(v59, 1, 1, v111);
  uint64_t v63 = v117;
  sub_10009CF90();
  sub_100010864(v62, &qword_1000D9E80);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a10;
  sub_10009CFA0();
  swift_release();
  ((void (*)(char *, uint64_t))v91)(v58, v60);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v64 = v63[3];
  uint64_t v65 = v63[4];
  sub_10000FF9C(v63, v64);
  aBlock = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v64, v65);
  id v119 = (id)sub_10009DF00();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v113)(v62, 1, 1, v111);
  sub_10000D308(&qword_1000D9F60);
  sub_100015700(&qword_1000D9F68, &qword_1000D9F60);
  uint64_t v66 = v97;
  sub_10009CF90();
  sub_100010864(v62, &qword_1000D9E80);

  swift_release();
  swift_getKeyPath();
  aBlock = a10;
  sub_100015700(&qword_1000D9F70, &qword_1000D9E68);
  uint64_t v67 = v98;
  sub_10009CFB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v66, v67);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  id v68 = [self defaultCenter];
  if (qword_1000D5200 != -1) {
    swift_once();
  }
  uint64_t v69 = qword_1000E34E8;
  uint64_t v70 = self;
  id v71 = [v70 mainQueue];
  uint64_t v124 = sub_100074DAC;
  uint64_t v125 = a10;
  aBlock = _NSConcreteStackBlock;
  uint64_t v121 = 1107296256;
  uint64_t v122 = sub_100069B40;
  uint64_t v123 = &unk_1000CDAC0;
  uint64_t v72 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v73 = [v68 addObserverForName:v69 object:0 queue:v71 usingBlock:v72];
  _Block_release(v72);

  *(void *)((char *)a10
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_didBecomeActiveNotificationObserver) = v73;
  swift_unknownObjectRelease();
  if (qword_1000D51F8 != -1) {
    swift_once();
  }
  uint64_t v74 = qword_1000E34E0;
  id v75 = [v70 mainQueue];
  uint64_t v124 = sub_100074DB4;
  uint64_t v125 = a10;
  aBlock = _NSConcreteStackBlock;
  uint64_t v121 = 1107296256;
  uint64_t v122 = sub_100069B40;
  uint64_t v123 = &unk_1000CDAE8;
  uint64_t v76 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v77 = [v68 addObserverForName:v74 object:0 queue:v75 usingBlock:v76];
  _Block_release(v76);

  *(void *)((char *)a10
            + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_willResignActiveNotificationObserver) = v77;
  swift_unknownObjectRelease();
  uint64_t v78 = sub_10009DE70();
  uint64_t v79 = (uint64_t)v100;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v100, 1, 1, v78);
  sub_10009DE40();
  uint64_t v80 = v107;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v81 = sub_10009DE30();
  uint64_t v82 = (void *)swift_allocObject();
  void v82[2] = v81;
  v82[3] = &protocol witness table for MainActor;
  uint64_t v83 = v108;
  v82[4] = v80;
  v82[5] = v83;
  v82[6] = a10;
  sub_100088B08(v79, (uint64_t)&unk_1000D9F78, (uint64_t)v82);

  swift_release();
  sub_1000100E8(v109);
  sub_1000100E8((uint64_t)v117);
  return a10;
}

uint64_t sub_100074974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddDevicesToADEExtensionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *sub_1000749D8(unsigned char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AddDevicesToADEExtensionView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10006C2B8(a1, v4);
}

uint64_t sub_100074A48()
{
  uint64_t v0 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10009CE60();
  sub_10000D690(v3, (uint64_t)qword_1000E3488);
  uint64_t v4 = sub_10009CE40();
  os_log_type_t v5 = sub_10009DEA0();
  if (os_log_type_enabled(v4, v5))
  {
    NSString v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received reset grandslam token notification", v6, 2u);
    swift_slowDealloc();
  }

  uint64_t v7 = sub_10009DE70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_10009DE40();
  uint64_t v8 = sub_10009DE30();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  sub_10002C3D0((uint64_t)v2, (uint64_t)&unk_1000D9E60, v9);
  return swift_release();
}

uint64_t sub_100074C04()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100074C3C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000CD64;
  return sub_100070340();
}

uint64_t sub_100074CE8()
{
  return sub_1000544D0(v0);
}

uint64_t sub_100074CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100074D00()
{
  return swift_release();
}

uint64_t sub_100074D08()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100074D40(uint64_t *a1)
{
  return sub_1000546F4(a1, *(void *)(v1 + 16));
}

uint64_t sub_100074D48(uint64_t *a1)
{
  return sub_10005470C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100074D50(uint64_t *a1)
{
  return sub_100054724(a1, *(void *)(v1 + 16));
}

uint64_t sub_100074D58(uint64_t *a1)
{
  return sub_10005473C(a1, *(void *)(v1 + 16));
}

void *sub_100074D60@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_prerequisiteStatus);
  return result;
}

void sub_100074D78(unsigned char *a1, void *a2)
{
  *(unsigned char *)(*a2
           + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension23ConcreteDevicesProvider_prerequisiteStatus) = *a1;
  sub_10005A5AC();
}

void sub_100074DAC()
{
}

uint64_t sub_100074DB4()
{
  return sub_1000547D0();
}

uint64_t sub_100074DBC()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100074E04(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000CD64;
  return sub_1000547F4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100074ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308((uint64_t *)&unk_1000D9FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100074F40(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100010914;
  return sub_10003BE90(a1, v4, v5, v6);
}

uint64_t *sub_100074FF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_10000D308(&qword_1000D9DE8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_10009D160();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v7 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *uint64_t v14 = *v15;
    *((void *)v14 + 1) = *((void *)v15 + 1);
    uint64_t v16 = (char *)v7 + v13;
    uint64_t v17 = (char *)a2 + v13;
    *uint64_t v16 = *v17;
    *((void *)v16 + 1) = *((void *)v17 + 1);
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    uint64_t v20 = (char *)v7 + v18;
    uint64_t v21 = (char *)a2 + v18;
    *uint64_t v20 = *v21;
    *((void *)v20 + 1) = *((void *)v21 + 1);
    uint64_t v22 = (char *)v7 + v19;
    uint64_t v23 = (char *)a2 + v19;
    *uint64_t v22 = *v23;
    *((void *)v22 + 1) = *((void *)v23 + 1);
    uint64_t v24 = a3[10];
    uint64_t v25 = (uint64_t *)((char *)v7 + v24);
    unint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = *(uint64_t *)((char *)a2 + v24 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v27)
    {
      *uint64_t v25 = *v26;
      v25[1] = v27;
      void v25[2] = v26[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      void v25[2] = v26[2];
    }
    v25[3] = v26[3];
    uint64_t v28 = a3[11];
    uint64_t v29 = (char *)v7 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_10009CB50();
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_retain();
    v32(v29, v30, v31);
    uint64_t v33 = a3[12];
    uint64_t v34 = a3[13];
    uint64_t v35 = (uint64_t *)((char *)v7 + v33);
    uint64_t v36 = (uint64_t *)((char *)a2 + v33);
    uint64_t v37 = *v36;
    uint64_t v38 = v36[1];
    *uint64_t v35 = v37;
    v35[1] = v38;
    *(uint64_t *)((char *)v7 + v34) = *(uint64_t *)((char *)a2 + v34);
    uint64_t v39 = a3[15];
    *(_OWORD *)((char *)v7 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
    uint64_t v40 = (char *)v7 + v39;
    uint64_t v41 = (char *)a2 + v39;
    long long v42 = *(_OWORD *)((char *)a2 + v39 + 24);
    *(_OWORD *)((char *)v7 + v39 + 24) = v42;
    uint64_t v43 = v42;
    uint64_t v44 = **(void (***)(char *, char *, uint64_t))(v42 - 8);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    v44(v40, v41, v43);
    uint64_t v45 = a3[17];
    *(_OWORD *)((char *)v7 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
    uint64_t v46 = (char *)v7 + v45;
    int v47 = (char *)a2 + v45;
    long long v48 = *(_OWORD *)((char *)a2 + v45 + 24);
    *(_OWORD *)((char *)v7 + v45 + 24) = v48;
    uint64_t v49 = v48;
    uint64_t v50 = **(void (***)(char *, char *, uint64_t))(v48 - 8);
    swift_unknownObjectRetain();
    v50(v46, v47, v49);
    uint64_t v51 = a3[18];
    long long v52 = *(_OWORD *)((char *)a2 + v51 + 24);
    *(_OWORD *)((char *)v7 + v51 + 24) = v52;
    (**(void (***)(void))(v52 - 8))();
    uint64_t v53 = a3[19];
    long long v54 = *(_OWORD *)((char *)a2 + v53 + 24);
    *(_OWORD *)((char *)v7 + v53 + 24) = v54;
    (**(void (***)(void))(v54 - 8))();
    uint64_t v55 = a3[20];
    long long v56 = *(_OWORD *)((char *)a2 + v55 + 24);
    *(_OWORD *)((char *)v7 + v55 + 24) = v56;
    (**(void (***)(void))(v56 - 8))();
    uint64_t v57 = a3[21];
    long long v58 = *(_OWORD *)((char *)a2 + v57 + 24);
    *(_OWORD *)((char *)v7 + v57 + 24) = v58;
    (**(void (***)(void))(v58 - 8))();
    uint64_t v59 = a3[22];
    long long v60 = *(_OWORD *)((char *)a2 + v59 + 24);
    *(_OWORD *)((char *)v7 + v59 + 24) = v60;
    (**(void (***)(void))(v60 - 8))();
    uint64_t v61 = a3[23];
    long long v62 = *(_OWORD *)((char *)a2 + v61 + 24);
    *(_OWORD *)((char *)v7 + v61 + 24) = v62;
    (**(void (***)(void))(v62 - 8))();
    uint64_t v63 = a3[25];
    *(uint64_t *)((char *)v7 + a3[24]) = *(uint64_t *)((char *)a2 + a3[24]);
    *(uint64_t *)((char *)v7 + v63) = *(uint64_t *)((char *)a2 + v63);
    uint64_t v64 = a3[27];
    *(uint64_t *)((char *)v7 + a3[26]) = *(uint64_t *)((char *)a2 + a3[26]);
    *(uint64_t *)((char *)v7 + v64) = *(uint64_t *)((char *)a2 + v64);
    uint64_t v65 = a3[29];
    *(uint64_t *)((char *)v7 + a3[28]) = *(uint64_t *)((char *)a2 + a3[28]);
    *(uint64_t *)((char *)v7 + v65) = *(uint64_t *)((char *)a2 + v65);
    uint64_t v66 = a3[31];
    *(uint64_t *)((char *)v7 + a3[30]) = *(uint64_t *)((char *)a2 + a3[30]);
    *(uint64_t *)((char *)v7 + v66) = *(uint64_t *)((char *)a2 + v66);
    uint64_t v67 = a3[32];
    uint64_t v68 = a3[33];
    uint64_t v69 = (uint64_t *)((char *)v7 + v67);
    uint64_t v70 = (uint64_t *)((char *)a2 + v67);
    uint64_t v71 = v70[1];
    *uint64_t v69 = *v70;
    v69[1] = v71;
    uint64_t v72 = (uint64_t *)((char *)v7 + v68);
    id v73 = (uint64_t *)((char *)a2 + v68);
    uint64_t v74 = v73[1];
    *uint64_t v72 = *v73;
    v72[1] = v74;
    uint64_t v75 = a3[34];
    uint64_t v76 = a3[35];
    id v77 = (uint64_t *)((char *)v7 + v75);
    uint64_t v78 = (uint64_t *)((char *)a2 + v75);
    uint64_t v79 = v78[1];
    *id v77 = *v78;
    v77[1] = v79;
    uint64_t v80 = (uint64_t *)((char *)v7 + v76);
    uint64_t v81 = (uint64_t *)((char *)a2 + v76);
    uint64_t v82 = v81[1];
    *uint64_t v80 = *v81;
    v80[1] = v82;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_10007565C(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  sub_10000D308(&qword_1000D9DE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_10009D160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + a2[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v6 = a1 + a2[11];
  uint64_t v7 = sub_10009CB50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_1000100E8(a1 + a2[15]);
  swift_unknownObjectRelease();
  sub_1000100E8(a1 + a2[17]);
  sub_1000100E8(a1 + a2[18]);
  sub_1000100E8(a1 + a2[19]);
  sub_1000100E8(a1 + a2[20]);
  sub_1000100E8(a1 + a2[21]);
  sub_1000100E8(a1 + a2[22]);
  sub_1000100E8(a1 + a2[23]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_1000758DC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  swift_retain();
  sub_10000D308(&qword_1000D9DE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_10009D160();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *uint64_t v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  *uint64_t v14 = *v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  uint64_t v20 = (char *)a1 + v17;
  uint64_t v21 = (char *)a2 + v17;
  *uint64_t v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = *(void *)((char *)a2 + v22 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v25)
  {
    *uint64_t v23 = *v24;
    v23[1] = v25;
    _OWORD v23[2] = v24[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    _OWORD v23[2] = v24[2];
  }
  void v23[3] = v24[3];
  uint64_t v26 = a3[11];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_10009CB50();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_retain();
  v30(v27, v28, v29);
  uint64_t v31 = a3[12];
  uint64_t v32 = a3[13];
  uint64_t v33 = (void *)((char *)a1 + v31);
  uint64_t v34 = (void *)((char *)a2 + v31);
  uint64_t v35 = *v34;
  uint64_t v36 = v34[1];
  *uint64_t v33 = v35;
  v33[1] = v36;
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v37 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  long long v40 = *(_OWORD *)((char *)a2 + v37 + 24);
  *(_OWORD *)((char *)a1 + v37 + 24) = v40;
  uint64_t v41 = v40;
  long long v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v42(v38, v39, v41);
  uint64_t v43 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  long long v46 = *(_OWORD *)((char *)a2 + v43 + 24);
  *(_OWORD *)((char *)a1 + v43 + 24) = v46;
  uint64_t v47 = v46;
  long long v48 = **(void (***)(char *, char *, uint64_t))(v46 - 8);
  swift_unknownObjectRetain();
  v48(v44, v45, v47);
  uint64_t v49 = a3[18];
  long long v50 = *(_OWORD *)((char *)a2 + v49 + 24);
  *(_OWORD *)((char *)a1 + v49 + 24) = v50;
  (**(void (***)(void))(v50 - 8))();
  uint64_t v51 = a3[19];
  long long v52 = *(_OWORD *)((char *)a2 + v51 + 24);
  *(_OWORD *)((char *)a1 + v51 + 24) = v52;
  (**(void (***)(void))(v52 - 8))();
  uint64_t v53 = a3[20];
  long long v54 = *(_OWORD *)((char *)a2 + v53 + 24);
  *(_OWORD *)((char *)a1 + v53 + 24) = v54;
  (**(void (***)(void))(v54 - 8))();
  uint64_t v55 = a3[21];
  long long v56 = *(_OWORD *)((char *)a2 + v55 + 24);
  *(_OWORD *)((char *)a1 + v55 + 24) = v56;
  (**(void (***)(void))(v56 - 8))();
  uint64_t v57 = a3[22];
  long long v58 = *(_OWORD *)((char *)a2 + v57 + 24);
  *(_OWORD *)((char *)a1 + v57 + 24) = v58;
  (**(void (***)(void))(v58 - 8))();
  uint64_t v59 = a3[23];
  long long v60 = *(_OWORD *)((char *)a2 + v59 + 24);
  *(_OWORD *)((char *)a1 + v59 + 24) = v60;
  (**(void (***)(void))(v60 - 8))();
  uint64_t v61 = a3[25];
  *(void *)((char *)a1 + a3[24]) = *(void *)((char *)a2 + a3[24]);
  *(void *)((char *)a1 + v61) = *(void *)((char *)a2 + v61);
  uint64_t v62 = a3[27];
  *(void *)((char *)a1 + a3[26]) = *(void *)((char *)a2 + a3[26]);
  *(void *)((char *)a1 + v62) = *(void *)((char *)a2 + v62);
  uint64_t v63 = a3[29];
  *(void *)((char *)a1 + a3[28]) = *(void *)((char *)a2 + a3[28]);
  *(void *)((char *)a1 + v63) = *(void *)((char *)a2 + v63);
  uint64_t v64 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  *(void *)((char *)a1 + v64) = *(void *)((char *)a2 + v64);
  uint64_t v65 = a3[32];
  uint64_t v66 = a3[33];
  uint64_t v67 = (void *)((char *)a1 + v65);
  uint64_t v68 = (void *)((char *)a2 + v65);
  uint64_t v69 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v69;
  uint64_t v70 = (void *)((char *)a1 + v66);
  uint64_t v71 = (void *)((char *)a2 + v66);
  uint64_t v72 = v71[1];
  *uint64_t v70 = *v71;
  v70[1] = v72;
  uint64_t v73 = a3[34];
  uint64_t v74 = a3[35];
  uint64_t v75 = (void *)((char *)a1 + v73);
  uint64_t v76 = (void *)((char *)a2 + v73);
  uint64_t v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  uint64_t v78 = (void *)((char *)a1 + v74);
  uint64_t v79 = (void *)((char *)a2 + v74);
  uint64_t v80 = v79[1];
  *uint64_t v78 = *v79;
  v78[1] = v80;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100075EF8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100010864((uint64_t)a1 + v6, &qword_1000D9DE8);
    sub_10000D308(&qword_1000D9DE8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_10009D160();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *uint64_t v14 = *v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_retain();
  swift_release();
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *uint64_t v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_retain();
  swift_release();
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *uint64_t v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_retain();
  swift_release();
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = *(void *)((char *)a1 + v22 + 8);
  uint64_t v26 = *(void *)((char *)a2 + v22 + 8);
  if (v25)
  {
    if (v26)
    {
      *uint64_t v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      _OWORD v23[2] = v24[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100076458((uint64_t)v23);
      uint64_t v27 = v24[2];
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      _OWORD v23[2] = v27;
    }
  }
  else if (v26)
  {
    *uint64_t v23 = *v24;
    v23[1] = v24[1];
    _OWORD v23[2] = v24[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *(_OWORD *)v24;
    _OWORD v23[2] = v24[2];
    *(_OWORD *)uint64_t v23 = v28;
  }
  void v23[3] = v24[3];
  swift_retain();
  swift_release();
  uint64_t v29 = a3[11];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_10009CB50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = a3[12];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
  swift_retain();
  swift_release();
  *((void *)v34 + 1) = *((void *)v35 + 1);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_retain();
  swift_release();
  uint64_t v36 = a3[14];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v37[1] = v39;
  sub_1000764AC((void *)((char *)a1 + a3[15]), (void *)((char *)a2 + a3[15]));
  uint64_t v40 = a3[16];
  uint64_t v41 = (void *)((char *)a1 + v40);
  long long v42 = (void *)((char *)a2 + v40);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v41[1] = v43;
  sub_1000764AC((void *)((char *)a1 + a3[17]), (void *)((char *)a2 + a3[17]));
  sub_1000764AC((void *)((char *)a1 + a3[18]), (void *)((char *)a2 + a3[18]));
  sub_1000764AC((void *)((char *)a1 + a3[19]), (void *)((char *)a2 + a3[19]));
  sub_1000764AC((void *)((char *)a1 + a3[20]), (void *)((char *)a2 + a3[20]));
  sub_1000764AC((void *)((char *)a1 + a3[21]), (void *)((char *)a2 + a3[21]));
  sub_1000764AC((void *)((char *)a1 + a3[22]), (void *)((char *)a2 + a3[22]));
  sub_1000764AC((void *)((char *)a1 + a3[23]), (void *)((char *)a2 + a3[23]));
  *(void *)((char *)a1 + a3[24]) = *(void *)((char *)a2 + a3[24]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[26]) = *(void *)((char *)a2 + a3[26]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[27]) = *(void *)((char *)a2 + a3[27]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[28]) = *(void *)((char *)a2 + a3[28]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[29]) = *(void *)((char *)a2 + a3[29]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[31]) = *(void *)((char *)a2 + a3[31]);
  swift_retain();
  swift_release();
  uint64_t v44 = a3[32];
  uint64_t v45 = (void *)((char *)a1 + v44);
  long long v46 = (void *)((char *)a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_retain();
  swift_release();
  uint64_t v47 = a3[33];
  long long v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  *long long v48 = *v49;
  v48[1] = v49[1];
  swift_retain();
  swift_release();
  uint64_t v50 = a3[34];
  uint64_t v51 = (void *)((char *)a1 + v50);
  long long v52 = (void *)((char *)a2 + v50);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  swift_retain();
  swift_release();
  uint64_t v53 = a3[35];
  long long v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (void *)((char *)a2 + v53);
  void *v54 = *v55;
  v54[1] = v55[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100076458(uint64_t a1)
{
  return a1;
}

uint64_t *sub_1000764AC(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *sub_1000766DC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10000D308(&qword_1000D9DE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10009D160();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = a3[11];
  long long v15 = *(_OWORD *)((char *)a2 + v13);
  long long v16 = *(_OWORD *)((char *)a2 + v13 + 16);
  uint64_t v17 = (_OWORD *)((char *)a1 + v13);
  *uint64_t v17 = v15;
  v17[1] = v16;
  uint64_t v18 = (char *)a1 + v14;
  uint64_t v19 = (char *)a2 + v14;
  uint64_t v20 = sub_10009CB50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  uint64_t v22 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((void *)v23 + 4) = *((void *)v24 + 4);
  uint64_t v26 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  uint64_t v27 = (char *)a1 + v26;
  long long v28 = (char *)a2 + v26;
  long long v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((void *)v27 + 4) = *((void *)v28 + 4);
  uint64_t v30 = a3[18];
  uint64_t v31 = a3[19];
  uint64_t v32 = (char *)a1 + v30;
  uint64_t v33 = (char *)a2 + v30;
  long long v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
  *((void *)v32 + 4) = *((void *)v33 + 4);
  uint64_t v35 = (char *)a1 + v31;
  uint64_t v36 = (char *)a2 + v31;
  *((void *)v35 + 4) = *((void *)v36 + 4);
  long long v37 = *((_OWORD *)v36 + 1);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v37;
  uint64_t v38 = a3[20];
  uint64_t v39 = a3[21];
  uint64_t v40 = (char *)a1 + v38;
  uint64_t v41 = (char *)a2 + v38;
  long long v42 = *(_OWORD *)v41;
  long long v43 = *((_OWORD *)v41 + 1);
  *((void *)v40 + 4) = *((void *)v41 + 4);
  *(_OWORD *)uint64_t v40 = v42;
  *((_OWORD *)v40 + 1) = v43;
  uint64_t v44 = (char *)a1 + v39;
  uint64_t v45 = (char *)a2 + v39;
  *((void *)v44 + 4) = *((void *)v45 + 4);
  long long v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  uint64_t v47 = a3[22];
  uint64_t v48 = a3[23];
  uint64_t v49 = (char *)a1 + v47;
  uint64_t v50 = (char *)a2 + v47;
  *((void *)v49 + 4) = *((void *)v50 + 4);
  long long v51 = *((_OWORD *)v50 + 1);
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  *((_OWORD *)v49 + 1) = v51;
  long long v52 = (char *)a1 + v48;
  uint64_t v53 = (char *)a2 + v48;
  *((void *)v52 + 4) = *((void *)v53 + 4);
  long long v54 = *((_OWORD *)v53 + 1);
  *(_OWORD *)long long v52 = *(_OWORD *)v53;
  *((_OWORD *)v52 + 1) = v54;
  uint64_t v55 = a3[25];
  *(void *)((char *)a1 + a3[24]) = *(void *)((char *)a2 + a3[24]);
  *(void *)((char *)a1 + v55) = *(void *)((char *)a2 + v55);
  uint64_t v56 = a3[27];
  *(void *)((char *)a1 + a3[26]) = *(void *)((char *)a2 + a3[26]);
  *(void *)((char *)a1 + v56) = *(void *)((char *)a2 + v56);
  uint64_t v57 = a3[29];
  *(void *)((char *)a1 + a3[28]) = *(void *)((char *)a2 + a3[28]);
  *(void *)((char *)a1 + v57) = *(void *)((char *)a2 + v57);
  uint64_t v58 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  *(void *)((char *)a1 + v58) = *(void *)((char *)a2 + v58);
  uint64_t v59 = a3[33];
  *(_OWORD *)((char *)a1 + a3[32]) = *(_OWORD *)((char *)a2 + a3[32]);
  *(_OWORD *)((char *)a1 + v59) = *(_OWORD *)((char *)a2 + v59);
  uint64_t v60 = a3[35];
  *(_OWORD *)((char *)a1 + a3[34]) = *(_OWORD *)((char *)a2 + a3[34]);
  *(_OWORD *)((char *)a1 + v60) = *(_OWORD *)((char *)a2 + v60);
  return a1;
}

void *sub_1000769B0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100010864((uint64_t)a1 + v6, &qword_1000D9DE8);
    uint64_t v9 = sub_10000D308(&qword_1000D9DE8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10009D160();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *uint64_t v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_release();
  uint64_t v14 = a3[7];
  long long v15 = (char *)a1 + v14;
  long long v16 = (char *)a2 + v14;
  *long long v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_release();
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *uint64_t v21 = *v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_release();
  uint64_t v23 = a3[10];
  uint64_t v24 = (uint64_t)a1 + v23;
  long long v25 = (char *)a2 + v23;
  if (!*(void *)((char *)a1 + v23 + 8)) {
    goto LABEL_9;
  }
  uint64_t v26 = *((void *)v25 + 1);
  if (!v26)
  {
    sub_100076458(v24);
LABEL_9:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(void *)(v24 + 16) = *((void *)v25 + 2);
    goto LABEL_10;
  }
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 16) = *((void *)v25 + 2);
  swift_bridgeObjectRelease();
LABEL_10:
  *(void *)(v24 + 24) = *((void *)v25 + 3);
  swift_release();
  uint64_t v27 = a3[11];
  long long v28 = (char *)a1 + v27;
  long long v29 = (char *)a2 + v27;
  uint64_t v30 = sub_10009CB50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[12];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
  swift_release();
  *((void *)v32 + 1) = *((void *)v33 + 1);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_release();
  uint64_t v34 = a3[14];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  swift_unknownObjectRelease();
  v35[1] = v37;
  uint64_t v38 = a3[15];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  sub_1000100E8((uint64_t)a1 + v38);
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  *((void *)v39 + 4) = *((void *)v40 + 4);
  uint64_t v42 = a3[16];
  long long v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  uint64_t v45 = v44[1];
  *long long v43 = *v44;
  swift_unknownObjectRelease();
  v43[1] = v45;
  uint64_t v46 = a3[17];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  sub_1000100E8((uint64_t)a1 + v46);
  long long v49 = *((_OWORD *)v48 + 1);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *((_OWORD *)v47 + 1) = v49;
  *((void *)v47 + 4) = *((void *)v48 + 4);
  uint64_t v50 = a3[18];
  long long v51 = (char *)a1 + v50;
  long long v52 = (char *)a2 + v50;
  sub_1000100E8((uint64_t)a1 + v50);
  long long v53 = *((_OWORD *)v52 + 1);
  *(_OWORD *)long long v51 = *(_OWORD *)v52;
  *((_OWORD *)v51 + 1) = v53;
  *((void *)v51 + 4) = *((void *)v52 + 4);
  uint64_t v54 = a3[19];
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  sub_1000100E8((uint64_t)a1 + v54);
  long long v57 = *((_OWORD *)v56 + 1);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v57;
  *((void *)v55 + 4) = *((void *)v56 + 4);
  uint64_t v58 = a3[20];
  uint64_t v59 = (char *)a1 + v58;
  uint64_t v60 = (char *)a2 + v58;
  sub_1000100E8((uint64_t)a1 + v58);
  long long v61 = *((_OWORD *)v60 + 1);
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  *((_OWORD *)v59 + 1) = v61;
  *((void *)v59 + 4) = *((void *)v60 + 4);
  uint64_t v62 = a3[21];
  uint64_t v63 = (char *)a1 + v62;
  uint64_t v64 = (char *)a2 + v62;
  sub_1000100E8((uint64_t)a1 + v62);
  long long v65 = *((_OWORD *)v64 + 1);
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v65;
  *((void *)v63 + 4) = *((void *)v64 + 4);
  uint64_t v66 = a3[22];
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  sub_1000100E8((uint64_t)a1 + v66);
  long long v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *((void *)v67 + 4) = *((void *)v68 + 4);
  uint64_t v70 = a3[23];
  uint64_t v71 = (char *)a1 + v70;
  uint64_t v72 = (char *)a2 + v70;
  sub_1000100E8((uint64_t)a1 + v70);
  long long v73 = *((_OWORD *)v72 + 1);
  *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
  *((_OWORD *)v71 + 1) = v73;
  *((void *)v71 + 4) = *((void *)v72 + 4);
  *(void *)((char *)a1 + a3[24]) = *(void *)((char *)a2 + a3[24]);
  swift_release();
  *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
  swift_release();
  *(void *)((char *)a1 + a3[26]) = *(void *)((char *)a2 + a3[26]);
  swift_release();
  *(void *)((char *)a1 + a3[27]) = *(void *)((char *)a2 + a3[27]);
  swift_release();
  *(void *)((char *)a1 + a3[28]) = *(void *)((char *)a2 + a3[28]);
  swift_release();
  *(void *)((char *)a1 + a3[29]) = *(void *)((char *)a2 + a3[29]);
  swift_release();
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  swift_release();
  *(void *)((char *)a1 + a3[31]) = *(void *)((char *)a2 + a3[31]);
  swift_release();
  uint64_t v74 = a3[32];
  uint64_t v75 = (void *)((char *)a1 + v74);
  uint64_t v76 = (void *)((char *)a2 + v74);
  uint64_t v78 = *v76;
  uint64_t v77 = v76[1];
  *uint64_t v75 = v78;
  v75[1] = v77;
  swift_release();
  uint64_t v79 = a3[33];
  uint64_t v80 = (void *)((char *)a1 + v79);
  uint64_t v81 = (void *)((char *)a2 + v79);
  uint64_t v83 = *v81;
  uint64_t v82 = v81[1];
  *uint64_t v80 = v83;
  v80[1] = v82;
  swift_release();
  uint64_t v84 = a3[34];
  uint64_t v85 = (void *)((char *)a1 + v84);
  uint64_t v86 = (void *)((char *)a2 + v84);
  uint64_t v88 = *v86;
  uint64_t v87 = v86[1];
  *uint64_t v85 = v88;
  v85[1] = v87;
  swift_release();
  uint64_t v89 = a3[35];
  uint64_t v90 = (void *)((char *)a1 + v89);
  long long v91 = (void *)((char *)a2 + v89);
  uint64_t v93 = *v91;
  uint64_t v92 = v91[1];
  *uint64_t v90 = v93;
  v90[1] = v92;
  swift_release();
  return a1;
}

uint64_t sub_100076E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100076EAC);
}

uint64_t sub_100076EAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10000D308(&qword_1000D9FC0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10009CB50();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      long long v16 = (char *)a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100076FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100076FF0);
}

void *sub_100076FF0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_10000D308(&qword_1000D9FC0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10009CB50();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      long long v16 = (char *)v5 + *(int *)(a4 + 44);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100077120()
{
  sub_100077264();
  if (v0 <= 0x3F)
  {
    sub_10009CB50();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100077264()
{
  if (!qword_1000DA030)
  {
    sub_10009D160();
    unint64_t v0 = sub_10009D0C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000DA030);
    }
  }
}

uint64_t sub_1000772BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000772DC()
{
  return sub_100077468((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100069D10);
}

uint64_t sub_1000772F8()
{
  return sub_10009D060();
}

unint64_t sub_10007737C()
{
  unint64_t result = qword_1000DA120;
  if (!qword_1000DA120)
  {
    sub_10000AF84(&qword_1000DA118);
    sub_1000773F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA120);
  }
  return result;
}

unint64_t sub_1000773F8()
{
  unint64_t result = qword_1000DA128;
  if (!qword_1000DA128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA128);
  }
  return result;
}

uint64_t sub_100077450()
{
  return sub_100077468((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100069E70);
}

uint64_t sub_100077468(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AddDevicesToADEExtensionView() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4, v5);
}

uint64_t sub_1000774F4()
{
  return sub_10007781C((uint64_t (*)(uint64_t))sub_10006E514);
}

unint64_t sub_10007750C()
{
  unint64_t result = qword_1000DA148;
  if (!qword_1000DA148)
  {
    sub_10000AF84(&qword_1000DA140);
    sub_1000788F4(&qword_1000DA150, &qword_1000DA158, (void (*)(void))sub_1000775AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA148);
  }
  return result;
}

unint64_t sub_1000775AC()
{
  unint64_t result = qword_1000DA160;
  if (!qword_1000DA160)
  {
    sub_10000AF84(&qword_1000DA168);
    sub_100011B24();
    sub_100015700(&qword_1000DA178, &qword_1000DA180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA160);
  }
  return result;
}

uint64_t sub_100077650()
{
  return sub_10007781C((uint64_t (*)(uint64_t))sub_10006ECAC);
}

unint64_t sub_100077668()
{
  unint64_t result = qword_1000DA1B8;
  if (!qword_1000DA1B8)
  {
    sub_10000AF84(&qword_1000DA1B0);
    sub_1000728A0((unint64_t *)&unk_1000DA1C0, (void (*)(uint64_t))type metadata accessor for DeviceStatusView);
    sub_100015700(&qword_1000D6590, (uint64_t *)&unk_1000DA1D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA1B8);
  }
  return result;
}

uint64_t sub_10007773C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AddDevicesToADEExtensionView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10006F7F4(v4, a1);
}

unint64_t sub_1000777AC()
{
  unint64_t result = qword_1000DA1E0;
  if (!qword_1000DA1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA1E0);
  }
  return result;
}

uint64_t sub_100077804()
{
  return sub_10007781C((uint64_t (*)(uint64_t))sub_10006FA28);
}

uint64_t sub_10007781C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AddDevicesToADEExtensionView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1000778A4()
{
  return sub_1000778E4();
}

uint64_t sub_1000778AC()
{
  return sub_10009D340();
}

uint64_t sub_1000778D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006FE24(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1000778E4()
{
  return sub_1000702D0();
}

uint64_t sub_10007794C()
{
  return sub_1000778E4();
}

uint64_t sub_10007795C()
{
  return sub_10006F9BC();
}

uint64_t sub_1000779B4()
{
  return sub_1000779CC(sub_10006F104);
}

uint64_t sub_1000779CC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AddDevicesToADEExtensionView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100077A40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100077AAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AddDevicesToADEExtensionView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10006F2C4(v4, a1);
}

uint64_t sub_100077B20()
{
  return sub_100078A28((uint64_t (*)(void))sub_10006F464);
}

uint64_t sub_100077B38()
{
  uint64_t v1 = (int *)type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[5];
  sub_10000D308(&qword_1000D9DE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10009D160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v5 + v1[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v2 | 7;
  uint64_t v9 = v3 + v4;
  swift_release();
  uint64_t v10 = v5 + v1[11];
  uint64_t v11 = sub_10009CB50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_1000100E8(v5 + v1[15]);
  swift_unknownObjectRelease();
  sub_1000100E8(v5 + v1[17]);
  sub_1000100E8(v5 + v1[18]);
  sub_1000100E8(v5 + v1[19]);
  sub_1000100E8(v5 + v1[20]);
  sub_1000100E8(v5 + v1[21]);
  sub_1000100E8(v5 + v1[22]);
  sub_1000100E8(v5 + v1[23]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v9, v8);
}

uint64_t sub_100077E50(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AddDevicesToADEExtensionView() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100010914;
  return sub_100071BF0(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100077F60()
{
  uint64_t v1 = sub_10009CB50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007802C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10009CB50() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100010914;
  return sub_100025264(a1, v5, v6, v7);
}

uint64_t sub_100078118(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007817C()
{
  uint64_t v1 = (int *)type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[5];
  sub_10000D308(&qword_1000D9DE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10009D160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v5 + v1[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v2 | 7;
  uint64_t v9 = v3 + v4;
  swift_release();
  uint64_t v10 = v5 + v1[11];
  uint64_t v11 = sub_10009CB50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_1000100E8(v5 + v1[15]);
  swift_unknownObjectRelease();
  sub_1000100E8(v5 + v1[17]);
  sub_1000100E8(v5 + v1[18]);
  sub_1000100E8(v5 + v1[19]);
  sub_1000100E8(v5 + v1[20]);
  sub_1000100E8(v5 + v1[21]);
  sub_1000100E8(v5 + v1[22]);
  sub_1000100E8(v5 + v1[23]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v9, v8);
}

uint64_t sub_100078484(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AddDevicesToADEExtensionView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100010914;
  return sub_100070F34(a1, v5, v6, v7);
}

uint64_t sub_100078570()
{
  uint64_t v1 = sub_10009CB50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10007865C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10009CB50() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100010914;
  return sub_100025038(a1, v6, v7, v8, v10, v11);
}

unint64_t sub_100078790()
{
  unint64_t result = qword_1000DA290;
  if (!qword_1000DA290)
  {
    sub_10000AF84(&qword_1000DA280);
    sub_100078830();
    sub_100015700(&qword_1000DA2D0, &qword_1000DA278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA290);
  }
  return result;
}

unint64_t sub_100078830()
{
  unint64_t result = qword_1000DA298;
  if (!qword_1000DA298)
  {
    sub_10000AF84(&qword_1000DA2A0);
    sub_1000788F4(&qword_1000DA2A8, &qword_1000DA2B0, (void (*)(void))sub_100078998);
    sub_100015700(&qword_1000DA2C0, &qword_1000DA2C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA298);
  }
  return result;
}

uint64_t sub_1000788F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84(a2);
    a3();
    sub_100015700(&qword_1000DA188, &qword_1000DA190);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100078998()
{
  unint64_t result = qword_1000DA2B8;
  if (!qword_1000DA2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA2B8);
  }
  return result;
}

uint64_t sub_1000789F0()
{
  return sub_1000779CC((uint64_t (*)(uint64_t))sub_10006DAB4);
}

uint64_t sub_100078A10()
{
  return sub_100078A28(sub_10006DB20);
}

uint64_t sub_100078A28(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100078A8C()
{
  return sub_10009D290();
}

uint64_t sub_100078AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100072550(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100078AF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100078BD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100078CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006E0C0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100078CBC()
{
  uint64_t v1 = (int *)type metadata accessor for AddDevicesToADEExtensionView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[5];
  sub_10000D308(&qword_1000D9DE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10009D160();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v5 + v1[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v2 | 7;
  uint64_t v9 = v3 + v4;
  swift_release();
  uint64_t v10 = v5 + v1[11];
  uint64_t v11 = sub_10009CB50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_1000100E8(v5 + v1[15]);
  swift_unknownObjectRelease();
  sub_1000100E8(v5 + v1[17]);
  sub_1000100E8(v5 + v1[18]);
  sub_1000100E8(v5 + v1[19]);
  sub_1000100E8(v5 + v1[20]);
  sub_1000100E8(v5 + v1[21]);
  sub_1000100E8(v5 + v1[22]);
  sub_1000100E8(v5 + v1[23]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v9, v8);
}

uint64_t sub_100078FBC()
{
  return sub_1000779CC(sub_10006E440);
}

uint64_t sub_100078FDC()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100079334()
{
  sub_1000102FC((uint64_t)(v0 + 21), (uint64_t)v10);
  unint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  sub_1000102FC((uint64_t)(v0 + 4), (uint64_t)v9);
  sub_1000102FC((uint64_t)(v0 + 9), (uint64_t)v8);
  uint64_t v3 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v0[14];
  uint64_t v4 = v0[15];
  sub_1000102FC((uint64_t)(v0 + 16), (uint64_t)v7);
  type metadata accessor for SettingsViewModel();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v5 = sub_100033AB0(v10, v1, v2, (uint64_t)v9, (uint64_t)v8, v3, v4, v7);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_100079404()
{
  swift_unknownObjectRelease();
  sub_1000100E8(v0 + 32);
  sub_1000100E8(v0 + 72);
  swift_unknownObjectRelease();
  sub_1000100E8(v0 + 128);
  sub_1000100E8(v0 + 168);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SettingsViewModelProvider()
{
  return self;
}

void *sub_100079488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v41 = a11;
  uint64_t v42 = a17;
  uint64_t v22 = sub_100013860((uint64_t *)&v40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(v22, a2, a11);
  uint64_t v38 = a9;
  uint64_t v39 = a15;
  uint64_t v23 = sub_100013860((uint64_t *)&v37);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(v23, a3, a9);
  uint64_t v35 = a10;
  uint64_t v36 = a16;
  uint64_t v24 = sub_100013860((uint64_t *)&v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(v24, a5, a10);
  uint64_t v32 = a13;
  uint64_t v33 = a19;
  long long v25 = sub_100013860((uint64_t *)&v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(v25, a6, a13);
  type metadata accessor for SettingsViewModelProvider();
  uint64_t v26 = (void *)swift_allocObject();
  _OWORD v26[2] = a1;
  v26[3] = a14;
  sub_1000107E8(&v40, (uint64_t)(v26 + 4));
  sub_1000107E8(&v37, (uint64_t)(v26 + 9));
  v26[14] = a4;
  v26[15] = a18;
  sub_1000107E8(&v34, (uint64_t)(v26 + 16));
  sub_1000107E8(&v31, (uint64_t)(v26 + 21));
  return v26;
}

uint64_t sub_10007965C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = sub_10009DE40();
  _OWORD v5[3] = sub_10009DE30();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10002E4F4;
  return sub_100079718(a5);
}

uint64_t sub_100079718(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_10009CB50();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  sub_10009DE40();
  v2[8] = sub_10009DE30();
  uint64_t v4 = sub_10009DE10();
  v2[9] = v4;
  v2[10] = v5;
  return _swift_task_switch(sub_100079840, v4, v5);
}

uint64_t sub_100079840()
{
  uint64_t v1 = sub_10009CB60();
  v0[11] = v1;
  v0[12] = v2;
  uint64_t v3 = v1;
  unint64_t v4 = v2;
  sub_10007ACE8();
  sub_10000EE24(v3, v4);
  id v5 = sub_10007AD28();
  v0[13] = v5;
  sub_10000EE7C(v3, v4);
  uint64_t v6 = (void **)(v0 + 2);
  Class isa = (Class)[self macBuddyNetworkProfileValidators];
  if (!isa)
  {
    sub_10000D308((uint64_t *)&unk_1000DA4C0);
    sub_10009DDC0();
    Class isa = sub_10009DDB0().super.isa;
    swift_bridgeObjectRelease();
  }
  *uint64_t v6 = 0;
  unsigned int v8 = [v5 validateWithValidators:isa error:v0 + 2];

  uint64_t v9 = *v6;
  if (v8)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)(sub_10009CAC0() + 16);
    swift_bridgeObjectRelease();
    if (!v11) {
      __break(1u);
    }
    uint64_t v13 = v0[6];
    uint64_t v12 = v0[7];
    uint64_t v14 = v0[5];
    sub_10009CB00();
    uint64_t v15 = sub_10009CAE0();
    uint64_t v17 = v16;
    v0[14] = v16;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[15] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_100079B44;
    return sub_10007A054(v3, v4, v15, v17);
  }
  else
  {
    id v20 = v9;
    uint64_t v21 = sub_10009CA80();

    swift_willThrow();
    sub_10000EE7C(v3, v4);
    v0[17] = v21;
    uint64_t v22 = (void *)swift_task_alloc();
    v0[18] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_100079D78;
    return sub_10007A7C0(v21);
  }
}

uint64_t sub_100079B44()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  if (v0) {
    id v5 = sub_100079F6C;
  }
  else {
    id v5 = sub_100079CC4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100079CC4()
{
  unint64_t v1 = v0[12];
  uint64_t v2 = (void *)v0[13];
  uint64_t v3 = v0[11];
  swift_release();

  sub_10000EE7C(v3, v1);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100079D78()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_100079ECC, v3, v2);
}

uint64_t sub_100079ECC()
{
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100079F6C()
{
  unint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 88);

  sub_10000EE7C(v2, v1);
  uint64_t v3 = *(void *)(v0 + 128);
  *(void *)(v0 + 136) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100079D78;
  return sub_10007A7C0(v3);
}

uint64_t sub_10007A054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  sub_10009DE40();
  v5[9] = sub_10009DE30();
  uint64_t v7 = sub_10009DE10();
  v5[10] = v7;
  v5[11] = v6;
  return _swift_task_switch(sub_10007A0F4, v7, v6);
}

uint64_t sub_10007A0F4()
{
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  v0[12] = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  v0[13] = v4;
  v0[14] = swift_getObjectType();
  v0[2] = v3;
  v0[3] = v2;
  v0[15] = *(void *)(v4 + 16);
  v0[16] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0x30FA000000000000;
  uint64_t v6 = sub_10009DE10();
  return _swift_task_switch(sub_10007A1A4, v6, v5);
}

uint64_t sub_10007A1A4()
{
  uint64_t v1 = (void (*)(void *, uint64_t, uint64_t, void *, unint64_t, unint64_t, uint64_t, uint64_t))v0[15];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  unint64_t v6 = sub_10004690C();
  unint64_t v7 = sub_100046960();
  v1(v0 + 2, v5, v4, &type metadata for Data, v6, v7, v2, v3);
  v0[17] = 0;
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];
  return _swift_task_switch(sub_10007A288, v8, v9);
}

uint64_t sub_10007A288()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(void *)(v0[8] + 24);
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 24) + **(int **)(v2 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10007A3A0;
  uint64_t v5 = v0[6];
  return v7(v5, v1, ObjectType, v2);
}

uint64_t sub_10007A3A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_10007A75C;
  }
  else {
    uint64_t v5 = sub_10007A4DC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007A4DC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  void *v1 = v0;
  v1[1] = sub_10007A574;
  return sub_100042090(0);
}

uint64_t sub_10007A574()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_10007A694, v3, v2);
}

uint64_t sub_10007A694()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007A6F8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007A75C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007A7C0(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  sub_10009DE40();
  v2[5] = sub_10009DE30();
  uint64_t v4 = sub_10009DE10();
  v2[6] = v4;
  v2[7] = v3;
  return _swift_task_switch(sub_10007A858, v4, v3);
}

uint64_t sub_10007A858()
{
  uint64_t v15 = v0;
  uint64_t v1 = (void *)sub_10009CA70();
  v0[8] = v1;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  id v3 = v1;
  uint64_t v4 = sub_10009CE40();
  os_log_type_t v5 = sub_10009DEB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    id v7 = [v3 localizedDescription];
    uint64_t v8 = sub_10009DC80();
    unint64_t v10 = v9;

    v0[2] = sub_10000DBA8(v8, v10, &v14);
    sub_10009DFC0();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to validate profile: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = v0[3];
  uint64_t v12 = (void *)swift_task_alloc();
  v0[9] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10007AAB4;
  return sub_100042090(v11);
}

uint64_t sub_10007AAB4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10007ABD4, v3, v2);
}

uint64_t sub_10007ABD4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007AC40()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NetworkProfilePickerViewModel()
{
  return self;
}

uint64_t sub_10007ACAC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NetworkProfilePickerViewModel();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

unint64_t sub_10007ACE8()
{
  unint64_t result = qword_1000DA4B8;
  if (!qword_1000DA4B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000DA4B8);
  }
  return result;
}

id sub_10007AD28()
{
  Class isa = sub_10009CB90().super.isa;
  id v5 = 0;
  id v1 = [(id)swift_getObjCClassFromMetadata() configurationProfileWithData:isa error:&v5];

  if (v1)
  {
    id v2 = v5;
  }
  else
  {
    id v3 = v5;
    sub_10009CA80();

    swift_willThrow();
  }
  return v1;
}

uint64_t sub_10007ADF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_100010784((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *id v3 = 0x8000000000000000;
    sub_10007BD3C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *id v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100016FBC(a1);
    sub_10005D630(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_100016FBC((uint64_t)v9);
  }
}

uint64_t sub_10007AEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[3] = a4;
  uint64_t v8 = sub_100013860(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v8, a1, a4);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10007ADF4((uint64_t)v10, a2, a3);
  return swift_endAccess();
}

uint64_t sub_10007AF74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  swift_beginAccess();
  uint64_t v9 = *(void *)(v4 + 112);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_100035E30(a1, a2);
    if (v11)
    {
      sub_10000FD90(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v14);
    }
    else
    {
      long long v14 = 0u;
      long long v15 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  sub_10000D308(&qword_1000D58B8);
  int v12 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a4, v12 ^ 1u, 1, a3);
}

uint64_t sub_10007B094()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for InMemoryKeyValueCodableStorage()
{
  return self;
}

uint64_t sub_10007B0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007AEB4(a1, a2, a3, a4);
}

uint64_t sub_10007B108@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_10007AF74(a1, a2, a3, a4);
}

uint64_t sub_10007B120(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_10005D630(a1, a2, v5);
  sub_100016FBC((uint64_t)v5);
  return swift_endAccess();
}

uint64_t sub_10007B194(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10007C15C(&qword_1000DA5B8, a2, (void (*)(uint64_t))type metadata accessor for InMemoryKeyValueCodableStorage);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10007B1EC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10000D308(&qword_1000D5888);
  uint64_t v6 = sub_10009E0F0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              id v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_100010784(v24, v35);
      }
      else
      {
        sub_10000FD90((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_10009E2D0();
      sub_10009DD20();
      uint64_t result = sub_10009E300();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      long long v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *long long v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_100010784(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_10007B4EC(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = sub_10009CC50();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10000D308(&qword_1000DA5C0);
  int v46 = a2;
  uint64_t v10 = sub_10009E0F0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  long long v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          id v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_10007C15C(&qword_1000D71C0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_10009DBD0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  id v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v12;
  return result;
}

uint64_t sub_10007B914(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = sub_10009CCA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10000D308((uint64_t *)&unk_1000D92D0);
  int v46 = a2;
  uint64_t v10 = sub_10009E0F0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  long long v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          id v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_10007C15C((unint64_t *)&qword_1000D71B0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_10009DBD0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  id v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v12;
  return result;
}

_OWORD *sub_10007BD3C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100035E30(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10005DCFC();
      goto LABEL_7;
    }
    sub_10007B1EC(v15, a4 & 1);
    unint64_t v21 = sub_100035E30(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_10009E280();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_1000100E8((uint64_t)v19);
    return sub_100010784(a1, v19);
  }
LABEL_13:
  sub_10007C038(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_10007BE90(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_10009CCA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_100036038(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    int64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10005DEE4();
    goto LABEL_7;
  }
  sub_10007B914(v17, a3 & 1);
  unint64_t v23 = sub_100036038(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_10009E280();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  int64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10007C0A4(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_10007C038(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100010784(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_10007C0A4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_10009CCA0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_10007C15C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeView()
{
  return &type metadata for WelcomeView;
}

void sub_10007C1B8()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_10009DC70();
  [v0 setBool:1 forKey:v1];
}

uint64_t sub_10007C254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10007C344();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10007C2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10007C344();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10007C31C()
{
}

unint64_t sub_10007C344()
{
  unint64_t result = qword_1000DA5C8;
  if (!qword_1000DA5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA5C8);
  }
  return result;
}

id sub_10007C398()
{
  uint64_t v0 = sub_10009CCC0();
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009DC00();
  sub_10009CCB0();
  sub_10009DCE0();
  id v6 = objc_allocWithZone((Class)OBWelcomeController);
  NSString v7 = sub_10009DC70();
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithTitle:v7 detailText:0 icon:0];

  if (qword_1000D51E0 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1000E34A0;
  uint64_t v10 = *(void *)(qword_1000E34A0 + 16);
  if (v10)
  {
    v21[1] = v5;
    void v21[2] = v2;
    swift_bridgeObjectRetain();
    uint64_t v11 = (void **)(v9 + 64);
    do
    {
      BOOL v12 = *v11;
      v11 += 5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = v12;
      NSString v14 = sub_10009DC70();
      NSString v15 = sub_10009DC70();
      [v8 addBulletedListItemWithTitle:v14 description:v15 image:v13];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  sub_10007C730();
  BOOL v16 = (void *)sub_10009DFA0();
  id v17 = [self boldButton];
  sub_10009DC00();
  sub_10009CCB0();
  sub_10009DCE0();
  NSString v18 = sub_10009DC70();
  swift_bridgeObjectRelease();
  [v17 setTitle:v18 forState:0];

  [v17 addAction:v16 forControlEvents:64];
  id v19 = [v8 buttonTray];
  [v19 addButton:v17];

  return v8;
}

unint64_t sub_10007C730()
{
  unint64_t result = qword_1000DA5D0;
  if (!qword_1000DA5D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000DA5D0);
  }
  return result;
}

BOOL sub_10007C770(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_10007C788@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_10000D308(&qword_1000DA6F8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  id v8 = &v13[-v7];
  uint64_t v9 = v1
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension41FileManagerBackedEncryptedKeyValueStorage____lazy_storage___documentsSubDirectoryURL;
  swift_beginAccess();
  sub_100010720(v9, (uint64_t)v8, &qword_1000DA6F8);
  uint64_t v10 = sub_10000D308(&qword_1000D9E30);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return sub_10007DFE8((uint64_t)v8, (uint64_t)a1);
  }
  sub_100010864((uint64_t)v8, &qword_1000DA6F8);
  sub_10007C950(v1, a1);
  sub_100010720((uint64_t)a1, (uint64_t)v6, &qword_1000D9E30);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_10007DF80((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_10007C950@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10000D308(&qword_1000D9E30);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10009CB50();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [*(id *)(a1 + 112) URLsForDirectory:9 inDomains:1];
  uint64_t v12 = sub_10009DDC0();

  if (*(void *)(v12 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, v12 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    id v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v13(v6, 0, 1, v7);
  }
  else
  {
    id v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v13(v6, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010864((uint64_t)v6, &qword_1000D9E30);
    uint64_t v14 = 1;
  }
  else
  {
    NSString v15 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v15(v10, v6, v7);
    if (*(void *)(a1 + 128))
    {
      sub_10009CB10();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      v15(a2, v10, v7);
    }
    uint64_t v14 = 0;
  }
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v13)(a2, v14, 1, v7);
}

id sub_10007CBD0()
{
  uint64_t v1 = *(void **)(v0 + 112);
  sub_10009CAF0(__stack_chk_guard);
  uint64_t v3 = v2;
  id v6 = 0;
  LODWORD(v1) = [v1 createDirectoryAtURL:v2 withIntermediateDirectories:1 attributes:0 error:&v6];

  if (v1) {
    return v6;
  }
  id v5 = v6;
  sub_10009CA80();

  return (id)swift_willThrow();
}

id sub_10007CC9C()
{
  uint64_t v1 = *(void **)(v0 + 112);
  sub_10009CAF0(__stack_chk_guard);
  uint64_t v3 = v2;
  id v6 = 0;
  LODWORD(v1) = [v1 removeItemAtURL:v2 error:&v6];

  if (v1) {
    return v6;
  }
  id v5 = v6;
  sub_10009CA80();

  return (id)swift_willThrow();
}

uint64_t sub_10007CD60()
{
  swift_bridgeObjectRelease();
  sub_100010864(v0+ OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension41FileManagerBackedEncryptedKeyValueStorage____lazy_storage___documentsSubDirectoryURL, &qword_1000DA6F8);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10007CDB8()
{
  return type metadata accessor for FileManagerBackedEncryptedKeyValueStorage();
}

uint64_t type metadata accessor for FileManagerBackedEncryptedKeyValueStorage()
{
  uint64_t result = qword_1000DA608;
  if (!qword_1000DA608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007CE0C()
{
  sub_10007CEC0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10007CEC0()
{
  if (!qword_1000DA618)
  {
    sub_10000AF84(&qword_1000D9E30);
    unint64_t v0 = sub_10009DFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000DA618);
    }
  }
}

uint64_t sub_10007CF1C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v60 = a6;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v66 = a1;
  uint64_t v67 = a4;
  uint64_t v65 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v64 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000D308(&qword_1000D9E30);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v52 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v52 - v13;
  uint64_t v15 = sub_10009CB50();
  BOOL v16 = *(void **)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  long long v57 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  char v24 = (char *)&v52 - v23;
  __chkstk_darwin(v22);
  unint64_t v26 = (char *)&v52 - v25;
  uint64_t v61 = v6;
  sub_10007C788(v14);
  int64_t v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v16[6];
  if (v27(v14, 1, v15) == 1)
  {
    sub_100010864((uint64_t)v14, &qword_1000D9E30);
    sub_10007DEE4();
    swift_allocError();
    *uint64_t v28 = 0;
    return swift_willThrow();
  }
  uint64_t v54 = (uint64_t (*)(char *, uint64_t, uint64_t))v27;
  uint64_t v55 = v16 + 6;
  long long v52 = v21;
  uint64_t v30 = v15;
  long long v53 = (void (*)(char *, char *, uint64_t))v16[4];
  v53(v24, v14, v15);
  uint64_t v56 = v26;
  sub_10009CB10();
  uint64_t v31 = (void (*)(char *, uint64_t))v16[1];
  uint64_t v63 = v16 + 1;
  v31(v24, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v66, v67);
  if (swift_dynamicCast())
  {
    uint64_t v33 = v68;
    unint64_t v32 = v69;
    char v34 = v59;
    sub_10007C788(v59);
    int v35 = v54(v34, 1, v30);
    uint64_t v36 = v70;
    if (v35 == 1)
    {
      sub_100010864((uint64_t)v34, &qword_1000D9E30);
      sub_10007DEE4();
      swift_allocError();
      *uint64_t v37 = 0;
      swift_willThrow();
      uint64_t v38 = v56;
    }
    else
    {
      uint64_t v42 = v52;
      v53(v52, v34, v30);
      sub_10007CBD0();
      if (v36)
      {
        v31(v42, v30);
        uint64_t v38 = v56;
      }
      else
      {
        uint64_t v38 = v56;
        sub_10009CBB0();
        v31(v42, v30);
      }
    }
    v31(v38, v30);
    uint64_t v47 = v33;
    unint64_t v48 = v32;
  }
  else
  {
    sub_10009C9A0();
    swift_allocObject();
    sub_10009C990();
    uint64_t v39 = v70;
    uint64_t v40 = sub_10009C980();
    if (v39)
    {
      v31(v56, v15);
      return swift_release();
    }
    uint64_t v43 = v40;
    unint64_t v44 = v41;
    swift_release();
    uint64_t v45 = v58;
    sub_10007C788(v58);
    if (v54(v45, 1, v15) == 1)
    {
      sub_100010864((uint64_t)v45, &qword_1000D9E30);
      sub_10007DEE4();
      swift_allocError();
      *int v46 = 0;
      swift_willThrow();
      long long v51 = v56;
    }
    else
    {
      long long v49 = v57;
      v53(v57, v45, v15);
      sub_10007CBD0();
      uint64_t v50 = v56;
      sub_10009CBB0();
      v31(v49, v15);
      long long v51 = v50;
    }
    v31(v51, v15);
    uint64_t v47 = v43;
    unint64_t v48 = v44;
  }
  return sub_10000EE7C(v47, v48);
}

uint64_t sub_10007D560@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v51 = a4;
  uint64_t v47 = a3;
  unint64_t v48 = a1;
  uint64_t v52 = a2;
  uint64_t v4 = sub_10000D308(&qword_1000D9E30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10009CB50();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v47 - v13;
  __chkstk_darwin(v12);
  BOOL v16 = (char *)&v47 - v15;
  sub_10007C788(v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100010864((uint64_t)v6, &qword_1000D9E30);
    sub_10007DEE4();
    swift_allocError();
    *uint64_t v17 = 0;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
    sub_10009CB10();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v49 = v7;
    v19(v14, v7);
    uint64_t v20 = v50;
    uint64_t v21 = sub_10009CB60();
    uint64_t v23 = v16;
    if (v20)
    {
      uint64_t v50 = v19;
      if (qword_1000D51D8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_10009CE60();
      sub_10000D690(v24, (uint64_t)qword_1000E3488);
      uint64_t v25 = v16;
      uint64_t v26 = v49;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v25, v49);
      swift_errorRetain();
      swift_errorRetain();
      int64_t v27 = sub_10009CE40();
      os_log_type_t v28 = sub_10009DEB0();
      int v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v30 = swift_slowAlloc();
        unint64_t v48 = v23;
        uint64_t v31 = v30;
        v53[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136446466;
        sub_10007DF38((unint64_t *)&qword_1000DB190, (void (*)(uint64_t))&type metadata accessor for URL);
        LODWORD(v47) = v29;
        uint64_t v32 = sub_10009E230();
        uint64_t v54 = sub_10000DBA8(v32, v33, v53);
        sub_10009DFC0();
        swift_bridgeObjectRelease();
        char v34 = v11;
        int v35 = v50;
        v50(v34, v49);
        *(_WORD *)(v31 + 12) = 2082;
        uint64_t v54 = (uint64_t)v20;
        swift_errorRetain();
        sub_10000D308(&qword_1000D5858);
        uint64_t v36 = sub_10009DCF0();
        uint64_t v54 = sub_10000DBA8(v36, v37, v53);
        uint64_t v19 = v35;
        sub_10009DFC0();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v47, "Error reading data from: %{public}s: %{public}s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v23 = v48;
        uint64_t v26 = v49;
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        uint64_t v19 = v50;
        v50(v11, v26);
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v39 = 0;
      unint64_t v38 = 0xC000000000000000;
      uint64_t v41 = v51;
      uint64_t v40 = v52;
LABEL_12:
      sub_10000EE7C(v39, v38);
      v19((char *)v23, v26);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v41, 1, 1, v40);
    }
    else
    {
      unint64_t v38 = v22;
      uint64_t v39 = v21;
      uint64_t v41 = v51;
      uint64_t v40 = v52;
      uint64_t v26 = v49;
      switch(v22 >> 62)
      {
        case 1uLL:
          LODWORD(v42) = HIDWORD(v21) - v21;
          if (__OFSUB__(HIDWORD(v21), v21))
          {
            __break(1u);
LABEL_21:
            __break(1u);
            JUMPOUT(0x10007DC1CLL);
          }
          uint64_t v42 = (int)v42;
LABEL_16:
          if (v42 <= 0) {
            goto LABEL_12;
          }
          if (v48 == &type metadata for Data)
          {
            v19((char *)v23, v49);
            v53[0] = v39;
            v53[1] = v38;
            int v46 = swift_dynamicCast();
            uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v41, v46 ^ 1u, 1, v40);
          }
          else
          {
            uint64_t v50 = v19;
            sub_10009C970();
            swift_allocObject();
            sub_10009C960();
            sub_10009C950();
            v50((char *)v23, v26);
            sub_10000EE7C(v39, v38);
            swift_release();
            uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v41, 0, 1, v40);
          }
          break;
        case 2uLL:
          uint64_t v44 = *(void *)(v21 + 16);
          uint64_t v43 = *(void *)(v21 + 24);
          BOOL v45 = __OFSUB__(v43, v44);
          uint64_t v42 = v43 - v44;
          if (!v45) {
            goto LABEL_16;
          }
          goto LABEL_21;
        case 3uLL:
          goto LABEL_12;
        default:
          uint64_t v42 = BYTE6(v22);
          goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t sub_10007DC2C()
{
  uint64_t v0 = sub_10000D308(&qword_1000D9E30);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10009CB50();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10007C788(v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_100010864((uint64_t)v2, &qword_1000D9E30);
    sub_10007DEE4();
    swift_allocError();
    *uint64_t v10 = 0;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v2, v3);
    sub_10009CB10();
    uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
    v12(v7, v3);
    sub_10007CC9C();
    return ((uint64_t (*)(char *, uint64_t))v12)(v9, v3);
  }
}

uint64_t sub_10007DE44(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10007CF1C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10007DE5C@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return sub_10007D560(a1, a2, a3, a4);
}

uint64_t sub_10007DE74()
{
  return sub_10007DC2C();
}

uint64_t sub_10007DE8C(uint64_t a1)
{
  uint64_t result = sub_10007DF38(&qword_1000DA6E8, (void (*)(uint64_t))type metadata accessor for FileManagerBackedEncryptedKeyValueStorage);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10007DEE4()
{
  unint64_t result = qword_1000DA6F0;
  if (!qword_1000DA6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA6F0);
  }
  return result;
}

uint64_t sub_10007DF38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007DF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000DA6F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007DFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D9E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for FileManagerBackedEncryptedKeyValueStorage.FileManagerBackedEncryptedKeyValueStorageError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007E11CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileManagerBackedEncryptedKeyValueStorage.FileManagerBackedEncryptedKeyValueStorageError()
{
  return &type metadata for FileManagerBackedEncryptedKeyValueStorage.FileManagerBackedEncryptedKeyValueStorageError;
}

unint64_t sub_10007E158()
{
  unint64_t result = qword_1000DA700;
  if (!qword_1000DA700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DA700);
  }
  return result;
}

uint64_t sub_10007E1AC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

char *sub_10007E220()
{
  uint64_t v1 = sub_10000D308(&qword_1000D73D0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &v0[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension41CoreBluetoothBackedBluetoothStatusMonitor__bluetoothStatus];
  char v13 = 0;
  unsigned int v6 = v0;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  id v7 = [objc_allocWithZone((Class)CBCentralManager) init];
  *(void *)&v6[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension41CoreBluetoothBackedBluetoothStatusMonitor_monitor] = v7;

  uint64_t v8 = (objc_class *)type metadata accessor for CoreBluetoothBackedBluetoothStatusMonitor();
  v12.receiver = v6;
  v12.super_class = v8;
  uint64_t v9 = (char *)objc_msgSendSuper2(&v12, "init");
  [*(id *)&v9[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension41CoreBluetoothBackedBluetoothStatusMonitor_monitor] setDelegate:v9];
  return v9;
}

id sub_10007E39C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreBluetoothBackedBluetoothStatusMonitor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10007E458()
{
  return type metadata accessor for CoreBluetoothBackedBluetoothStatusMonitor();
}

uint64_t type metadata accessor for CoreBluetoothBackedBluetoothStatusMonitor()
{
  uint64_t result = qword_1000DA748;
  if (!qword_1000DA748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007E4AC()
{
  sub_100037C68();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10007E54C(void *a1)
{
  [a1 state];
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  return sub_10009CF40();
}

uint64_t sub_10007E6EC()
{
  uint64_t v0 = sub_10000D308((uint64_t *)&unk_1000DA7C0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D73D0);
  sub_10009CF10();
  swift_endAccess();
  sub_100037DDC();
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_10007E808@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10007E88C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_10009CF40();
}

uint64_t sub_10007E900()
{
  uint64_t v1 = 4144959;
  uint64_t v2 = sub_10009CCC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_10009DC40();
  __chkstk_darwin(v4 - 8);
  sub_10009DC30();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  sub_10009DC20(v9);
  if (v0[1])
  {
    uint64_t v5 = *v0;
    uint64_t v6 = (void *)v0[1];
  }
  else
  {
    uint64_t v6 = (void *)0xE300000000000000;
    uint64_t v5 = 4144959;
  }
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v5;
  v10._object = v6;
  sub_10009DC10(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 10272;
  v11._object = (void *)0xE200000000000000;
  sub_10009DC20(v11);
  if (v0[5])
  {
    uint64_t v1 = v0[4];
    id v7 = (void *)v0[5];
  }
  else
  {
    if (v0[3])
    {
      uint64_t v1 = v0[2];
      id v7 = (void *)v0[3];
    }
    else
    {
      id v7 = (void *)0xE300000000000000;
    }
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v1;
  v12._object = v7;
  sub_10009DC10(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  sub_10009DC20(v13);
  sub_10009DC50();
  sub_10009CCB0();
  return sub_10009DCE0();
}

void sub_10007EB08(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = [self defaultManager];
  NSString v7 = sub_10009DC70();
  id v8 = [v6 contentsAtPath:v7];

  if (v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_10009CBA0();
    unint64_t v11 = v10;

    Swift::String v12 = self;
    Class isa = sub_10009CB90().super.isa;
    *(void *)&long long v43 = 0;
    id v14 = [v12 propertyListWithData:isa options:0 format:0 error:&v43];

    if (!v14)
    {
      id v25 = (id)v43;
      sub_10009CA80();

      swift_willThrow();
      sub_10000EE7C(v9, v11);
      return;
    }
    id v15 = (id)v43;
    sub_10009E000();
    swift_unknownObjectRelease();
    sub_10000D308(&qword_1000DA7E0);
    if (swift_dynamicCast())
    {
      if (*(void *)(v41 + 16) && (unint64_t v16 = sub_100035E30(0xD00000000000001ALL, 0x80000001000AAC20), (v17 & 1) != 0))
      {
        sub_10000FD90(*(void *)(v41 + 56) + 32 * v16, (uint64_t)&v43);
        int v18 = swift_dynamicCast();
        if (v18) {
          uint64_t v19 = v41;
        }
        else {
          uint64_t v19 = 0;
        }
        if (v18) {
          uint64_t v20 = v42;
        }
        else {
          uint64_t v20 = 0;
        }
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v20 = 0;
      }
      if (qword_1000D52B8 == -1)
      {
        if (*(void *)(v41 + 16)) {
          goto LABEL_29;
        }
      }
      else
      {
        swift_once();
        if (*(void *)(v41 + 16))
        {
LABEL_29:
          uint64_t v33 = qword_1000E3620;
          uint64_t v34 = qword_1000E3618;
          swift_bridgeObjectRetain();
          unint64_t v35 = sub_100035E30(v34, v33);
          if (v36)
          {
            sub_10000FD90(*(void *)(v41 + 56) + 32 * v35, (uint64_t)&v43);
          }
          else
          {
            long long v43 = 0u;
            long long v44 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v44 + 1))
          {
            int v37 = swift_dynamicCast();
            if (v37) {
              uint64_t v31 = v41;
            }
            else {
              uint64_t v31 = 0;
            }
            if (v37) {
              uint64_t v32 = v42;
            }
            else {
              uint64_t v32 = 0;
            }
            if (!*(void *)(v41 + 16)) {
              goto LABEL_46;
            }
LABEL_44:
            unint64_t v38 = sub_100035E30(0xD000000000000013, 0x80000001000AAC40);
            if (v39)
            {
              sub_10000FD90(*(void *)(v41 + 56) + 32 * v38, (uint64_t)&v43);
              goto LABEL_47;
            }
LABEL_46:
            long long v43 = 0u;
            long long v44 = 0u;
LABEL_47:
            sub_10000EE7C(v9, v11);
            swift_bridgeObjectRelease();
            if (*((void *)&v44 + 1))
            {
              int v40 = swift_dynamicCast();
              uint64_t v29 = v41;
              uint64_t v30 = v42;
              if (!v40)
              {
                uint64_t v29 = 0;
                uint64_t v30 = 0;
              }
            }
            else
            {
              sub_100016FBC((uint64_t)&v43);
              uint64_t v29 = 0;
              uint64_t v30 = 0;
            }
            goto LABEL_25;
          }
LABEL_43:
          sub_100016FBC((uint64_t)&v43);
          uint64_t v31 = 0;
          uint64_t v32 = 0;
          if (!*(void *)(v41 + 16)) {
            goto LABEL_46;
          }
          goto LABEL_44;
        }
      }
      long long v43 = 0u;
      long long v44 = 0u;
      goto LABEL_43;
    }
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_10009CE60();
    sub_10000D690(v26, (uint64_t)qword_1000E3488);
    unint64_t v22 = sub_10009CE40();
    os_log_type_t v27 = sub_10009DEB0();
    if (os_log_type_enabled(v22, v27))
    {
      os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v43 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v28 = 136315138;
      sub_10000DBA8(0xD000000000000010, 0x80000001000AAC00, (uint64_t *)&v43);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v22, v27, "%s Unable to convert version.plist to satisfactory dictionary", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    sub_10000EE7C(v9, v11);
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10009CE60();
    sub_10000D690(v21, (uint64_t)qword_1000E3488);
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_10009CE40();
    os_log_type_t v23 = sub_10009DEB0();
    if (!os_log_type_enabled(v22, v23))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_24;
    }
    uint64_t v24 = swift_slowAlloc();
    *(void *)&long long v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315394;
    sub_10000DBA8(0xD000000000000010, 0x80000001000AAC00, (uint64_t *)&v43);
    sub_10009DFC0();
    *(_WORD *)(v24 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_10000DBA8(a1, a2, (uint64_t *)&v43);
    sub_10009DFC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s Unable to read contents of version plist at %{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

LABEL_24:
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
LABEL_25:
  *a3 = v19;
  a3[1] = v20;
  a3[2] = v31;
  a3[3] = v32;
  a3[4] = v29;
  a3[5] = v30;
}

uint64_t sub_10007F204()
{
  uint64_t v1 = *(void *)(v0 + 200);
  sub_100034C48(v1, *(void *)(v0 + 208));
  return v1;
}

uint64_t sub_10007F238(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 200);
  unint64_t v4 = *(void *)(v2 + 208);
  *(void *)(v2 + 200) = a1;
  *(void *)(v2 + 208) = a2;
  sub_100034C48(v3, v4);
  uint64_t result = sub_100034C6C(v3, v4);
  unint64_t v6 = *(void *)(v2 + 208);
  if (v4 == 2)
  {
    if (v6 == 2) {
      return result;
    }
  }
  else if (v6 != 2)
  {
    if (v4)
    {
      if (v4 == 1)
      {
        if (v6 == 1)
        {
          unint64_t v4 = 1;
          sub_100034C48(*(void *)(v2 + 200), 1uLL);
          goto LABEL_6;
        }
      }
      else if (v6 >= 2 && (v3 == *(void *)(v2 + 200) && v4 == v6 || (sub_10009E260() & 1) != 0))
      {
        goto LABEL_6;
      }
    }
    else if (!v6)
    {
      unint64_t v4 = 0;
      goto LABEL_6;
    }
  }
  sub_10007F84C();
LABEL_6:

  return sub_100034C6C(v3, v4);
}

uint64_t sub_10007F32C()
{
  return *(unsigned __int8 *)(v0 + 216);
}

uint64_t sub_10007F334()
{
  return *(unsigned __int8 *)(v0 + 217);
}

uint64_t sub_10007F33C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10007F3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  swift_unownedRetainStrong();
  *(unsigned char *)(a2 + 218) = v3 != 0;
  swift_release();
  swift_unownedRetainStrong();
  sub_10007F84C();

  return swift_release();
}

unsigned char *sub_10007F410@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10007F41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  sub_10000D308(&qword_1000D9E80);
  v6[11] = swift_task_alloc();
  uint64_t v8 = sub_10000D308(&qword_1000DAA18);
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_getObjectType();
  v6[16] = *(void *)(a5 + 32);
  v6[17] = (a5 + 32) & 0xFFFFFFFFFFFFLL | 0x947E000000000000;
  uint64_t v10 = sub_10009DE10();
  return _swift_task_switch(sub_10007F548, v10, v9);
}

uint64_t sub_10007F548()
{
  *(void *)(v0 + 144) = (*(uint64_t (**)(void, void))(v0 + 128))(*(void *)(v0 + 120), *(void *)(v0 + 72));
  return _swift_task_switch(sub_10007F5BC, 0, 0);
}

uint64_t sub_10007F5BC()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  *(void *)(v0 + 40) = *(void *)(v0 + 144);
  sub_10001B664();
  *(void *)(v0 + 48) = sub_10009DF00();
  uint64_t v5 = sub_10009DEF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  sub_10000D308(&qword_1000DAA20);
  sub_100015700(&qword_1000DAA28, &qword_1000DAA20);
  sub_100034944();
  sub_10009CF90();
  sub_10001B6EC(v3);

  swift_release();
  swift_getKeyPath();
  swift_unownedRetainStrong();
  *(void *)(v0 + 56) = v4;
  sub_100015700(&qword_1000DAA30, &qword_1000DAA18);
  sub_10009CFB0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v8);
  swift_unownedRetainStrong();
  swift_beginAccess();
  sub_10000D308((uint64_t *)&unk_1000D93E0);
  sub_100015700(&qword_1000D7030, (uint64_t *)&unk_1000D93E0);
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10007F84C()
{
  if ((*(unsigned char *)(v0 + 218) & 1) == 0) {
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + 217) == 1)
  {
    if ((*(void *)(v0 + 208) | 2) == 2 && *(unsigned char *)(v0 + 216) == 1)
    {
      uint64_t v1 = *(void *)(v0 + 176);
      uint64_t v2 = *(void *)(v0 + 184);
      sub_10000FF9C((void *)(v0 + 152), v1);
      (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
      swift_getKeyPath();
      swift_getKeyPath();
      goto LABEL_4;
    }
LABEL_9:
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return sub_10009CF40();
  }
  swift_getKeyPath();
  swift_getKeyPath();
LABEL_4:
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_10007FA54()
{
  sub_1000100E8(v0 + 16);
  swift_unknownObjectRelease();
  sub_1000100E8(v0 + 72);
  sub_1000100E8(v0 + 112);
  sub_1000100E8(v0 + 152);
  swift_bridgeObjectRelease();
  sub_100034C6C(*(void *)(v0 + 200), *(void *)(v0 + 208));
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension49ConcreteDeviceDiscoveryPrerequisiteStatusProvider__prerequisiteStatus;
  uint64_t v2 = sub_10000D308(&qword_1000D9650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10007FB30()
{
  return type metadata accessor for ConcreteDeviceDiscoveryPrerequisiteStatusProvider();
}

uint64_t type metadata accessor for ConcreteDeviceDiscoveryPrerequisiteStatusProvider()
{
  uint64_t result = qword_1000DA818;
  if (!qword_1000DA818) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007FB84()
{
  sub_10005FC1C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10007FC5C()
{
  uint64_t v0 = sub_10000D308(&qword_1000D9648);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_10000D308(&qword_1000D9650);
  sub_10009CF10();
  swift_endAccess();
  sub_100015700((unint64_t *)&qword_1000D9658, &qword_1000D9648);
  uint64_t v4 = sub_10009CF60();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_10007FDA4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10007FE28()
{
  return sub_10009CF40();
}

uint64_t sub_10007FEA0(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  void (*v34)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void v60[2];
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  void *v89;
  id v90;
  id v91;
  uint64_t v92[14];
  char v93[8];
  uint64_t v94;

  uint64_t v7 = v6;
  uint64_t v86 = a6;
  uint64_t v87 = a5;
  uint64_t v89 = a4;
  uint64_t v11 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v11 - 8);
  uint64_t v75 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000D308(&qword_1000DA9A8);
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v72 = v13;
  __chkstk_darwin(v13);
  unint64_t v69 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000D308(&qword_1000DA9B0);
  long long v73 = *(void *)(v15 - 8);
  uint64_t v74 = v15;
  __chkstk_darwin(v15);
  uint64_t v70 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000D308(&qword_1000DA9B8);
  uint64_t v64 = *(void *)(v17 - 8);
  uint64_t v65 = v17;
  __chkstk_darwin(v17);
  uint64_t v62 = (char *)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000D308(&qword_1000DA9C0);
  uint64_t v66 = *(void *)(v19 - 8);
  uint64_t v67 = v19;
  __chkstk_darwin(v19);
  uint64_t v63 = (char *)v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000D308(&qword_1000D9E80);
  __chkstk_darwin(v21 - 8);
  uint64_t v61 = (char *)v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10000D308(&qword_1000D6FE0);
  uint64_t v80 = *(void *)(v23 - 8);
  uint64_t v81 = v23;
  __chkstk_darwin(v23);
  id v25 = (char *)v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10000D308(&qword_1000D9650);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + 192) = _swiftEmptyArrayStorage;
  uint64_t v88 = v7 + 192;
  *(_OWORD *)(v7 + 200) = xmmword_1000A13B0;
  *(_WORD *)(v7 + 216) = 1028;
  *(unsigned char *)(v7 + 218) = 0;
  uint64_t v30 = v7
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension49ConcreteDeviceDiscoveryPrerequisiteStatusProvider__prerequisiteStatus;
  v93[0] = 6;
  sub_10000D308(&qword_1000D9348);
  sub_10009CF00();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v30, v29, v26);
  sub_1000102FC((uint64_t)a1, v7 + 16);
  *(void *)(v7 + 56) = a2;
  *(void *)(v7 + 64) = a3;
  uint64_t v77 = a3;
  sub_1000102FC((uint64_t)v89, v7 + 72);
  sub_1000102FC((uint64_t)v87, v7 + 112);
  sub_1000102FC(v86, v7 + 152);
  uint64_t v31 = a1[3];
  uint64_t v32 = a1[4];
  uint64_t v33 = a1;
  sub_10000FF9C(a1, v31);
  uint64_t v34 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 16);
  uint64_t v76 = a2;
  swift_unknownObjectRetain();
  v34(v92, v31, v32);
  sub_100064C44((uint64_t)v92, (uint64_t)v93);
  unint64_t v35 = v94;
  if (v94) {
    sub_1000468B8(v92);
  }
  *(unsigned char *)(v7 + 218) = v35 != 0;
  uint64_t v68 = v33;
  char v36 = v33[3];
  int v37 = v33[4];
  sub_10000FF9C(v33, v36);
  uint64_t v90 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
  uint64_t v78 = sub_10001B664();
  long long v91 = (id)sub_10009DF00();
  uint64_t v85 = sub_10009DEF0();
  unint64_t v38 = *(void *)(v85 - 8);
  uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v79 = v38 + 56;
  char v39 = (uint64_t)v61;
  v84(v61, 1, 1, v85);
  sub_10000D308(&qword_1000D7038);
  v60[1] = &protocol conformance descriptor for AnyPublisher<A, B>;
  sub_100015700(&qword_1000D7040, &qword_1000D7038);
  uint64_t v83 = sub_100034944();
  sub_10009CF90();
  sub_10001B6EC(v39);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v7;
  uint64_t v82 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100015700(&qword_1000D7048, &qword_1000D6FE0);
  int v40 = v81;
  sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v25, v40);
  swift_beginAccess();
  uint64_t v81 = sub_10000D308((uint64_t *)&unk_1000D93E0);
  uint64_t v80 = sub_100015700(&qword_1000D7030, (uint64_t *)&unk_1000D93E0);
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v41 = v89[3];
  uint64_t v42 = v89[4];
  sub_10000FF9C(v89, v41);
  uint64_t v90 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
  sub_10000D308(&qword_1000D7018);
  sub_10000D308(&qword_1000DA9C8);
  sub_100015700(&qword_1000D7020, &qword_1000D7018);
  long long v43 = v62;
  sub_10009CF70();
  swift_release();
  uint64_t v90 = (id)sub_10009DF00();
  v84((char *)v39, 1, 1, v85);
  sub_100015700(&qword_1000DA9D0, &qword_1000DA9B8);
  long long v44 = v63;
  BOOL v45 = v65;
  sub_10009CF90();
  sub_10001B6EC(v39);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v45);
  swift_getKeyPath();
  uint64_t v90 = (id)v7;
  sub_100015700(&qword_1000DA9D8, &qword_1000DA9C0);
  int v46 = v67;
  sub_10009CFB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v46);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v47 = v87;
  unint64_t v48 = v87[3];
  uint64_t v49 = v87[4];
  sub_10000FF9C(v87, v48);
  uint64_t v90 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v48, v49);
  sub_10000D308(&qword_1000DA9E0);
  sub_10000D308(&qword_1000DA9E8);
  sub_100015700(&qword_1000DA9F0, &qword_1000DA9E0);
  uint64_t v50 = v69;
  sub_10009CF70();
  swift_release();
  uint64_t v90 = (id)sub_10009DF00();
  v84((char *)v39, 1, 1, v85);
  sub_100015700(&qword_1000DA9F8, &qword_1000DA9A8);
  uint64_t v51 = v70;
  uint64_t v52 = v72;
  sub_10009CF90();
  sub_10001B6EC(v39);

  (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v52);
  swift_getKeyPath();
  uint64_t v90 = (id)v7;
  sub_100015700(&qword_1000DAA00, &qword_1000DA9B0);
  long long v53 = v74;
  sub_10009CFB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v53);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v54 = sub_10009DE70();
  uint64_t v55 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v75, 1, 1, v54);
  swift_unownedRetainStrong();
  uint64_t v56 = v76;
  swift_unknownObjectRetain();
  swift_unownedRetain();
  swift_release();
  long long v57 = (void *)swift_allocObject();
  v57[2] = 0;
  v57[3] = 0;
  uint64_t v58 = v77;
  v57[4] = v56;
  v57[5] = v58;
  v57[6] = v7;
  sub_100088B08(v55, (uint64_t)&unk_1000DAA10, (uint64_t)v57);
  swift_release();
  sub_1000100E8(v86);
  sub_1000100E8((uint64_t)v47);
  sub_1000100E8((uint64_t)v89);
  sub_1000100E8((uint64_t)v68);
  return v7;
}

uint64_t sub_100080AA8()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100080AE0(uint64_t a1)
{
  return sub_10007F3B0(a1, *(void *)(v1 + 16));
}

uint64_t sub_100080AE8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 216);
  return result;
}

unsigned __int8 *sub_100080AF8(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  int v3 = *(unsigned __int8 *)(*(void *)a2 + 216);
  *(unsigned char *)(*(void *)a2 + 216) = v2;
  if (v3 == 4)
  {
    if (v2 == 4) {
      return result;
    }
    return (unsigned __int8 *)sub_10007F84C();
  }
  if (v2 == 4 || v3 != v2) {
    return (unsigned __int8 *)sub_10007F84C();
  }
  return result;
}

uint64_t sub_100080B48@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*(void *)result + 217);
  return result;
}

unsigned __int8 *sub_100080B58(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  int v3 = *(unsigned __int8 *)(*(void *)a2 + 217);
  *(unsigned char *)(*(void *)a2 + 217) = v2;
  if (v3 == 4)
  {
    if (v2 == 4) {
      return result;
    }
    return (unsigned __int8 *)sub_10007F84C();
  }
  if (v2 == 4 || v3 != v2) {
    return (unsigned __int8 *)sub_10007F84C();
  }
  return result;
}

uint64_t sub_100080BA8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unownedRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100080BF0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000CD64;
  return sub_10007F41C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100080CB8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 200);
  unint64_t v4 = *(void *)(v2 + 208);
  *a2 = v3;
  a2[1] = v4;
  return sub_100034C48(v3, v4);
}

uint64_t sub_100080CC8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  sub_100034C48(*a1, v2);
  return sub_10007F238(v1, v2);
}

uint64_t destroy for AXMEnrollmentStatus(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)result + 2;
  }
  if (v1 == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!v1)
  {
    return sub_1000100E8(result);
  }
  return result;
}

uint64_t initializeWithCopy for AXMEnrollmentStatus(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 40) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(unsigned char *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for AXMEnrollmentStatus(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      sub_1000100E8(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(unsigned char *)(a1 + 40) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (v5)
    {
      long long v7 = *a2;
      long long v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

__n128 initializeWithTake for AXMEnrollmentStatus(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AXMEnrollmentStatus(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      sub_1000100E8(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AXMEnrollmentStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AXMEnrollmentStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000810D0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1000810EC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AXMEnrollmentStatus()
{
  return &type metadata for AXMEnrollmentStatus;
}

uint64_t getEnumTagSinglePayload for AXMEnrollmentError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000811D4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AXMEnrollmentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1000812BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1000812E4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1000812F8(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AXMEnrollmentError()
{
  return &type metadata for AXMEnrollmentError;
}

unsigned char *storeEnumTagSinglePayload for FetchNonceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000813E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchNonceError()
{
  return &type metadata for FetchNonceError;
}

unint64_t sub_100081420()
{
  unint64_t result = qword_1000DAA38;
  if (!qword_1000DAA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DAA38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MissingDiscoveryPrerequisite(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100081540);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MissingDiscoveryPrerequisite()
{
  return &type metadata for MissingDiscoveryPrerequisite;
}

unint64_t sub_10008157C()
{
  unint64_t result = qword_1000DAA40;
  if (!qword_1000DAA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DAA40);
  }
  return result;
}

uint64_t sub_1000815D0()
{
  return sub_100081670();
}

uint64_t sub_1000815E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10008165C()
{
  return sub_100081670();
}

uint64_t sub_100081670()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000816DC()
{
  return sub_100081810();
}

uint64_t sub_1000816F0()
{
  return sub_100081810();
}

uint64_t sub_100081704()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

double sub_100081778@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1000817FC()
{
  return sub_100081810();
}

uint64_t sub_100081810()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10008187C(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  swift_unownedRetainStrong();
  sub_1000818C4(v1);

  return swift_release();
}

uint64_t sub_1000818C4(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10009DB00();
  uint64_t v38 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10009DB30();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  int v37 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10009DB80();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v40 = (char *)&v31 - v10;
  uint64_t v11 = sub_10009CCC0();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_10009DC60();
  __chkstk_darwin(v12 - 8);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_10009CE60();
  sub_10000D690(v13, (uint64_t)qword_1000E3488);
  uint64_t v14 = sub_10009CE40();
  os_log_type_t v15 = sub_10009DE90();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = (void **)swift_slowAlloc();
    uint64_t v31 = v4;
    aBlock = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v41 = (void *)sub_10000DBA8(0xD00000000000002ALL, 0x80000001000AAFD0, (uint64_t *)&aBlock);
    sub_10009DFC0();
    *(_WORD *)(v16 + 12) = 2082;
    LOBYTE(v41) = a1;
    uint64_t v18 = sub_10009DCF0();
    uint64_t v41 = (void *)sub_10000DBA8(v18, v19, (uint64_t *)&aBlock);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s assignmentStatus updated to: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    uint64_t v4 = v31;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a1 == 1 || [self authorizationStatusForMediaType:AVMediaTypeVideo] != (id)3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = 1;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = 0;
  }
  swift_retain();
  sub_10009CF40();
  if (a1 > 1u)
  {
    sub_10009DAC0();
    uint64_t v23 = v32;
    sub_10009D170();
    swift_release();
    sub_10001B664();
    uint64_t v24 = (void *)sub_10009DF00();
    sub_10009DB70();
    sub_10009DBA0();
    uint64_t v25 = v35;
    uint64_t v34 = *(void *)(v34 + 8);
    ((void (*)(char *, uint64_t))v34)(v23, v35);
    int v46 = sub_100084544;
    uint64_t v47 = v2;
    aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    long long v44 = sub_100026280;
    BOOL v45 = &unk_1000CE2A8;
    uint64_t v26 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v27 = v37;
    sub_10009DB20();
    uint64_t v41 = _swiftEmptyArrayStorage;
    sub_1000276FC();
    sub_10000D308(&qword_1000D69F0);
    sub_100027754();
    uint64_t v28 = v33;
    sub_10009E010();
    uint64_t v29 = v40;
    sub_10009DEE0();
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v4);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v36);
    ((void (*)(char *, uint64_t))v34)(v29, v25);
    swift_release();
    uint64_t v21 = (void **)sub_1000837D8();
  }
  else
  {
    sub_10009DC00();
    sub_10009CCB0();
    uint64_t v21 = (void **)sub_10009DCE0();
  }
  uint64_t v22 = v20;
  swift_getKeyPath();
  swift_getKeyPath();
  aBlock = v21;
  uint64_t v43 = v22;
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_100082090(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_unownedRetainStrong();
  if ((v1 - 3) >= 3)
  {
    if (v1) {
      unsigned __int8 v2 = 1;
    }
    else {
      unsigned __int8 v2 = 2;
    }
    sub_100083CDC(v2);
  }

  return swift_release();
}

uint64_t sub_1000820F0(uint64_t result)
{
  if (*(void *)(result + 8))
  {
    swift_unownedRetainStrong();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    return sub_10009CF40();
  }
  return result;
}

uint64_t sub_10008217C(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  swift_unownedRetainStrong();
  sub_1000821D4(v1, v2);

  return swift_release();
}

void sub_1000821D4(uint64_t a1, char a2)
{
  if (a2)
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10009CE60();
    sub_10000D690(v8, (uint64_t)qword_1000E3488);
    os_log_t oslog = sub_10009CE40();
    os_log_type_t v9 = sub_10009DEB0();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v14 = sub_10000DBA8(0xD000000000000031, 0x80000001000AAE90, &v12);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "%s we didn't receive the view finder diameter!", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_10009CE60();
    sub_10000D690(v3, (uint64_t)qword_1000E3488);
    uint64_t v4 = sub_10009CE40();
    os_log_type_t v5 = sub_10009DEA0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315394;
      uint64_t v14 = sub_10000DBA8(0xD000000000000031, 0x80000001000AAE90, &v12);
      sub_10009DFC0();
      *(_WORD *)(v6 + 12) = 2048;
      uint64_t v14 = a1;
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s view finder diameter: %f", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    if (qword_1000D5240 != -1) {
      swift_once();
    }
    double v7 = *(double *)&a1 * 0.5 + *(double *)&qword_1000E3530;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v12 = *(void *)&v7;
    char v13 = 0;
    swift_retain();
    sub_10009CF40();
  }
}

void sub_100082588()
{
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10009CE60();
  sub_10000D690(v0, (uint64_t)qword_1000E3488);
  uint64_t v1 = sub_10009CE40();
  os_log_type_t v2 = sub_10009DEA0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_10000DBA8(0x4164694477656976, 0xEF29287261657070, aBlock);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v4 = self;
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)sub_100084668;
  aBlock[5] = v5;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100082C38;
  aBlock[3] = (uint64_t)&unk_1000CE2F8;
  uint64_t v6 = _Block_copy(aBlock);
  swift_release();
  [v4 requestAccessForMediaType:AVMediaTypeVideo completionHandler:v6];
  _Block_release(v6);
}

uint64_t sub_1000827DC(char a1)
{
  uint64_t v2 = sub_10009DB00();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10009DB30();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10009CE60();
  sub_10000D690(v9, (uint64_t)qword_1000E3488);
  uint64_t v10 = sub_10009CE40();
  os_log_type_t v11 = sub_10009DEA0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109120;
    LODWORD(aBlock[0]) = a1 & 1;
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Request access for video completion handler with value: %{BOOL}d", v12, 8u);
    swift_slowDealloc();
  }

  sub_10001B664();
  char v13 = (void *)sub_10009DF00();
  uint64_t v14 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(unsigned char *)(v15 + 24) = a1 & 1;
  aBlock[4] = sub_1000846A8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100026280;
  aBlock[3] = &unk_1000CE348;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_10009DB20();
  uint64_t v20 = _swiftEmptyArrayStorage;
  sub_1000276FC();
  sub_10000D308(&qword_1000D69F0);
  sub_100027754();
  sub_10009E010();
  sub_10009DF10();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_100082BA4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_10009CF40();
  }
  return result;
}

uint64_t sub_100082C38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_100082C8C()
{
  uint64_t v0 = sub_10009CCC0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10009DC60();
  __chkstk_darwin(v1 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t result = 0;
  switch(v3)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t result = sub_10009DCE0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100082ECC()
{
  uint64_t v0 = sub_10009CCC0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10009DC60();
  __chkstk_darwin(v1 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t result = 0;
  switch(v3)
  {
    case 1:
    case 2:
      goto LABEL_5;
    case 3:
      if (qword_1000D52C0 == -1) {
        goto LABEL_5;
      }
      goto LABEL_6;
    case 4:
      if (qword_1000D52C0 == -1) {
        goto LABEL_5;
      }
LABEL_6:
      swift_once();
LABEL_5:
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t result = sub_10009DCE0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100083220()
{
  sub_1000100E8(v0 + 16);
  sub_1000100E8(v0 + 56);
  sub_1000100E8(v0 + 96);
  sub_1000100E8(v0 + 136);
  sub_1000100E8(v0 + 176);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__organizationName;
  uint64_t v2 = sub_10000D308(&qword_1000D6FF0);
  char v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__statusMessageYOffset;
  uint64_t v5 = sub_10000D308(&qword_1000DAE10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  v3(v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__statusMessage, v2);
  uint64_t v6 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__showPairManuallyButton;
  uint64_t v7 = sub_10000D308(&qword_1000DB540);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__showPairedToastMessage, v7);
  uint64_t v9 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__prerequisiteStatus;
  uint64_t v10 = sub_10000D308(&qword_1000D9650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__mdmServerInfo;
  uint64_t v12 = sub_10000D308(&qword_1000D9DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  v8(v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__showEnrollmentErrorAlert, v7);
  sub_100042970(v0 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel_enrollmentErrorInfo);
  return v0;
}

uint64_t sub_100083454()
{
  sub_100083220();

  return swift_deallocClassInstance();
}

uint64_t sub_1000834AC()
{
  return type metadata accessor for CameraViewModel();
}

uint64_t type metadata accessor for CameraViewModel()
{
  uint64_t result = qword_1000DAAB0;
  if (!qword_1000DAAB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100083500()
{
  sub_100031BDC(319, (unint64_t *)&unk_1000D6C70);
  if (v0 <= 0x3F)
  {
    sub_10001B2DC(319, &qword_1000DAAC0, &qword_1000DAAC8);
    if (v1 <= 0x3F)
    {
      sub_100031BDC(319, (unint64_t *)&qword_1000D6C68);
      if (v2 <= 0x3F)
      {
        sub_10001B2DC(319, (unint64_t *)&qword_1000D9590, &qword_1000D9348);
        if (v3 <= 0x3F)
        {
          sub_10001B2DC(319, (unint64_t *)&qword_1000D5E80, &qword_1000D9E10);
          if (v4 <= 0x3F)
          {
            sub_100083740();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_100083740()
{
  if (!qword_1000DAAD0)
  {
    type metadata accessor for ErrorInfo();
    unint64_t v0 = sub_10009DFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000DAAD0);
    }
  }
}

uint64_t sub_100083798@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CameraViewModel();
  uint64_t result = sub_10009CEA0();
  *a1 = result;
  return result;
}

uint64_t sub_1000837D8()
{
  uint64_t v0 = sub_10009DC40();
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  __chkstk_darwin(v1);
  uint64_t v2 = sub_10009CCC0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10009DC60();
  __chkstk_darwin(v3 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  switch((unint64_t)v8._object)
  {
    case 0uLL:
      sub_1000353D4(v8._countAndFlagsBits, 0);
      goto LABEL_6;
    case 2uLL:
LABEL_6:
      sub_10009DC30();
      v10._uint64_t countAndFlagsBits = 0x7420676E69646441;
      v10._unint64_t object = (void *)0xEA0000000000206FLL;
      sub_10009DC20(v10);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10009CF30();
      swift_release();
      swift_release();
      sub_10009DC10(v8);
      swift_bridgeObjectRelease();
      v11._uint64_t countAndFlagsBits = 10911970;
      v11._unint64_t object = (void *)0xA300000000000000;
      sub_10009DC20(v11);
      sub_10009DC50();
      sub_10009CCB0();
      return sub_10009DCE0();
    case 1uLL:
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v4 = sub_10009DCE0();
      uint64_t countAndFlagsBits = v8._countAndFlagsBits;
      unint64_t object = 1;
      break;
    default:
      sub_10009DC30();
      v12._uint64_t countAndFlagsBits = 0x6E696E6769737341;
      v12._unint64_t object = (void *)0xED0000206F742067;
      sub_10009DC20(v12);
      sub_10009DC10(v9);
      v13._uint64_t countAndFlagsBits = 10911970;
      v13._unint64_t object = (void *)0xA300000000000000;
      sub_10009DC20(v13);
      sub_10009DC50();
      sub_10009CCB0();
      uint64_t v4 = sub_10009DCE0();
      unint64_t object = (unint64_t)v8._object;
      uint64_t countAndFlagsBits = v8._countAndFlagsBits;
      break;
  }
  sub_1000353D4(countAndFlagsBits, object);
  return v4;
}

uint64_t sub_100083B80()
{
  return sub_10009CF40();
}

uint64_t sub_100083BF4()
{
  sub_10009DAC0();
  sub_10009D170();

  return swift_release();
}

uint64_t sub_100083C6C()
{
  return sub_10009CF40();
}

void sub_100083CDC(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10009CCC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10009DC60();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  Swift::String v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  Swift::String v12 = (char *)&v29 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v29 - v13;
  id v15 = objc_allocWithZone((Class)NSError);
  NSString v16 = sub_10009DC70();
  id v17 = [v15 initWithDomain:v16 code:a1 + 1 userInfo:0];

  id v18 = v17;
  sub_100060858((uint64_t)v12);

  uint64_t v19 = type metadata accessor for ErrorInfo();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v19) == 1)
  {
    sub_10009DC00();
    sub_10009CCB0();
    uint64_t v21 = sub_10009DCE0();
    uint64_t v30 = v2;
    uint64_t v23 = v22;
    sub_10009DC00();
    sub_10009CCB0();
    uint64_t v24 = sub_10009DCE0();
    uint64_t v25 = (uint64_t *)&v14[*(int *)(v19 + 20)];
    *uint64_t v25 = v21;
    v25[1] = v23;
    uint64_t v2 = v30;
    uint64_t v26 = (uint64_t *)&v14[*(int *)(v19 + 24)];
    *uint64_t v26 = v24;
    v26[1] = v27;
    sub_10009CC90();
    sub_100042970((uint64_t)v12);
  }
  else
  {
    sub_1000429D0((uint64_t)v12, (uint64_t)v14);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
  sub_1000843B8((uint64_t)v14, (uint64_t)v9);
  uint64_t v28 = v2 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel_enrollmentErrorInfo;
  swift_beginAccess();
  sub_100084420((uint64_t)v9, v28);
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  char v31 = 1;
  swift_retain();
  sub_10009CF40();
}

uint64_t sub_100084094@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000842D0(a1);
}

uint64_t sub_1000840A8()
{
  return sub_1000334B0();
}

uint64_t sub_1000840BC@<X0>(void *a1@<X8>)
{
  return sub_100084204(a1);
}

uint64_t sub_1000840D0()
{
  return sub_100033778();
}

uint64_t sub_1000840E4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10008416C()
{
  return sub_10009CF40();
}

uint64_t sub_1000841F0@<X0>(void *a1@<X8>)
{
  return sub_100084204(a1);
}

uint64_t sub_100084204@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100084280()
{
  return sub_100033778();
}

uint64_t sub_100084294@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000842D0(a1);
}

uint64_t sub_1000842A8()
{
  return sub_1000334B0();
}

uint64_t sub_1000842BC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000842D0(a1);
}

uint64_t sub_1000842D0@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10008434C()
{
  return sub_1000334B0();
}

uint64_t sub_100084368@<X0>(void *a1@<X8>)
{
  return sub_100084204(a1);
}

uint64_t sub_100084390()
{
  return sub_100033778();
}

uint64_t sub_1000843B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100084420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100084488@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000842D0(a1);
}

uint64_t sub_1000844B0()
{
  return sub_1000334B0();
}

uint64_t sub_1000844D8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000842D0(a1);
}

uint64_t sub_100084500()
{
  return sub_1000334B0();
}

uint64_t sub_100084528()
{
  return sub_100083B80();
}

uint64_t sub_100084544()
{
  return sub_100083BF4();
}

uint64_t sub_10008454C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008455C()
{
  return swift_release();
}

uint64_t sub_100084564@<X0>(void *a1@<X8>)
{
  return sub_100084204(a1);
}

uint64_t sub_10008458C()
{
  return sub_100033778();
}

uint64_t sub_1000845BC()
{
  return sub_100083C6C();
}

uint64_t sub_1000845D8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000842D0(a1);
}

uint64_t sub_100084600()
{
  return sub_1000334B0();
}

uint64_t sub_100084630()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100084668(char a1)
{
  return sub_1000827DC(a1);
}

uint64_t sub_100084670()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000846A8()
{
  return sub_100082BA4();
}

uint64_t sub_1000846C4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100084744()
{
  return sub_10009CF40();
}

double sub_1000847B8@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_100084840(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100016874(v1, v2);
  swift_retain();
  return sub_10009CF40();
}

uint64_t sub_1000848EC()
{
  sub_1000102FC(v0 + 16, (uint64_t)v20);
  sub_1000102FC(v0 + 56, (uint64_t)v19);
  sub_1000102FC(v0 + 96, (uint64_t)v18);
  sub_1000102FC(v0 + 136, (uint64_t)v17);
  sub_1000102FC(v0 + 176, (uint64_t)v15);
  uint64_t v1 = sub_100010138((uint64_t)v15, v16);
  __chkstk_darwin(v1);
  long long v3 = (void *)((char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v4 + 16))(v3);
  uint64_t v5 = *v3;
  uint64_t v6 = type metadata accessor for ConcreteVPScannerViewFinderMetricsProvider();
  v14[3] = v6;
  void v14[4] = &off_1000CCE68;
  v14[0] = v5;
  type metadata accessor for CameraViewModel();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_100010138((uint64_t)v14, v6);
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  uint64_t v12 = sub_100084E44((uint64_t)v20, v19, v18, v17, *v10, v7);
  sub_1000100E8((uint64_t)v14);
  sub_1000100E8((uint64_t)v15);
  return v12;
}

uint64_t sub_100084AF0()
{
  sub_1000100E8(v0 + 16);
  sub_1000100E8(v0 + 56);
  sub_1000100E8(v0 + 96);
  sub_1000100E8(v0 + 136);
  sub_1000100E8(v0 + 176);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CameraViewModelProvider()
{
  return self;
}

void *sub_100084B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v35 = a5;
  uint64_t v33 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = a14;
  uint64_t v49 = a7;
  uint64_t v50 = a12;
  uint64_t v20 = sub_100013860((uint64_t *)&v48);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v20, a1, a7);
  uint64_t v46 = a10;
  uint64_t v47 = a15;
  uint64_t v21 = sub_100013860((uint64_t *)&v45);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(v21, a2, a10);
  uint64_t v43 = a8;
  uint64_t v44 = a13;
  uint64_t v22 = sub_100013860((uint64_t *)&v42);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(v22, v32, a8);
  uint64_t v40 = a11;
  uint64_t v41 = a16;
  uint64_t v23 = sub_100013860((uint64_t *)&v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(v23, v33, a11);
  uint64_t v37 = a9;
  uint64_t v38 = a14;
  uint64_t v24 = sub_100013860(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(v24, v35, a9);
  type metadata accessor for CameraViewModelProvider();
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = sub_100010138((uint64_t)v36, v37);
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t *)((char *)&v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v29 + 16))(v28);
  uint64_t v30 = *v28;
  v25[25] = type metadata accessor for ConcreteVPScannerViewFinderMetricsProvider();
  v25[26] = &off_1000CCE68;
  v25[22] = v30;
  sub_1000107E8(&v48, (uint64_t)(v25 + 2));
  sub_1000107E8(&v45, (uint64_t)(v25 + 7));
  sub_1000107E8(&v42, (uint64_t)(v25 + 12));
  sub_1000107E8(&v39, (uint64_t)(v25 + 17));
  sub_1000100E8((uint64_t)v36);
  return v25;
}

uint64_t sub_100084E44(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v99 = a4;
  long long v100 = a3;
  uint64_t v98 = a2;
  uint64_t v93 = (void *)a1;
  uint64_t v87 = sub_10000D308(&qword_1000DAEE0);
  uint64_t v88 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v86 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10000D308(&qword_1000D9E68);
  uint64_t v85 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v83 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10000D308(&qword_1000D6FE0);
  uint64_t v82 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v80 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10000D308(&qword_1000DAEE8);
  uint64_t v79 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000D308(&qword_1000D9E80);
  __chkstk_darwin(v12 - 8);
  uint64_t v92 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10000D308(&qword_1000DAEF0);
  uint64_t v101 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v76 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v102 = (void *)sub_10000D308(&qword_1000D9DE0);
  uint64_t v97 = *(v102 - 1);
  __chkstk_darwin(v102);
  long long v95 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10000D308(&qword_1000D9650);
  unint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10000D308(&qword_1000DB540);
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  id v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000D308(&qword_1000DAE10);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10000D308(&qword_1000D6FF0);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ConcreteVPScannerViewFinderMetricsProvider();
  uint64_t v110 = &off_1000CCE68;
  uint64_t v109 = v27;
  uint64_t v108 = a5;
  *(void *)(a6 + 216) = _swiftEmptyArrayStorage;
  uint64_t v96 = a6 + 216;
  *(void *)(a6 + 224) = 0;
  *(unsigned char *)(a6 + 232) = 0;
  uint64_t v28 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__organizationName;
  *(void *)&long long v104 = 0;
  *((void *)&v104 + 1) = 0xE000000000000000;
  sub_10009CF00();
  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v29(v28, v26, v23);
  uint64_t v30 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__statusMessageYOffset;
  *(void *)&long long v104 = 0;
  BYTE8(v104) = 1;
  sub_10000D308(&qword_1000DAAC8);
  sub_10009CF00();
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v30, v22, v19);
  uint64_t v31 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__statusMessage;
  *(void *)&long long v104 = 0;
  *((void *)&v104 + 1) = 0xE000000000000000;
  sub_10009CF00();
  v29(v31, v26, v23);
  uint64_t v32 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__showPairManuallyButton;
  LOBYTE(v104) = 0;
  sub_10009CF00();
  uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v74 + 32);
  uint64_t v34 = v75;
  v33(v32, v18, v75);
  uint64_t v35 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__showPairedToastMessage;
  LOBYTE(v104) = 0;
  sub_10009CF00();
  v33(v35, v18, v34);
  uint64_t v36 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__prerequisiteStatus;
  LOBYTE(v104) = 6;
  sub_10000D308(&qword_1000D9348);
  uint64_t v37 = v89;
  sub_10009CF00();
  (*(void (**)(uint64_t, char *, uint64_t))(v90 + 32))(v36, v37, v91);
  uint64_t v38 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__mdmServerInfo;
  long long v104 = xmmword_1000A13B0;
  uint64_t v105 = 0;
  uint64_t v106 = 0;
  char v107 = 0;
  sub_10000D308(&qword_1000D9E10);
  long long v39 = v95;
  sub_10009CF00();
  (*(void (**)(uint64_t, char *, void *))(v97 + 32))(v38, v39, v102);
  uint64_t v40 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel__showEnrollmentErrorAlert;
  LOBYTE(v104) = 0;
  sub_10009CF00();
  v33(v40, v18, v34);
  uint64_t v41 = a6 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel_enrollmentErrorInfo;
  uint64_t v42 = type metadata accessor for ErrorInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
  uint64_t v43 = v93;
  sub_1000102FC((uint64_t)v93, a6 + 16);
  sub_1000102FC((uint64_t)v98, a6 + 56);
  sub_1000102FC((uint64_t)v100, a6 + 96);
  sub_1000102FC((uint64_t)v99, a6 + 176);
  sub_1000102FC((uint64_t)&v108, a6 + 136);
  uint64_t v44 = v43[3];
  uint64_t v45 = v43[4];
  sub_10000FF9C(v43, v44);
  *(void *)&long long v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
  unint64_t v46 = sub_10001B664();
  id v103 = (id)sub_10009DF00();
  uint64_t v47 = sub_10009DEF0();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v89 = *(char **)(v48 + 56);
  uint64_t v97 = v48 + 56;
  uint64_t v49 = (uint64_t)v92;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v89)(v92, 1, 1, v47);
  sub_10000D308(&qword_1000DAEF8);
  long long v95 = (char *)&protocol conformance descriptor for AnyPublisher<A, B>;
  sub_100015700(&qword_1000DAF00, &qword_1000DAEF8);
  unint64_t v90 = sub_100034944();
  uint64_t v50 = v76;
  sub_10009CF90();
  sub_10001B6EC(v49);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a6;
  long long v102 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100015700(&qword_1000DAF08, &qword_1000DAEF0);
  uint64_t v51 = v94;
  sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v50, v51);
  swift_beginAccess();
  uint64_t v94 = sub_10000D308((uint64_t *)&unk_1000D93E0);
  uint64_t v101 = sub_100015700(&qword_1000D7030, (uint64_t *)&unk_1000D93E0);
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v52 = v43[3];
  uint64_t v53 = v43[4];
  sub_10000FF9C(v43, v52);
  *(void *)&long long v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
  uint64_t v75 = v46;
  id v103 = (id)sub_10009DF00();
  uint64_t v54 = v49;
  uint64_t v55 = v49;
  uint64_t v91 = v47;
  uint64_t v56 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v89;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v89)(v55, 1, 1, v47);
  sub_10000D308(&qword_1000DAF10);
  sub_100015700(&qword_1000DAF18, &qword_1000DAF10);
  long long v57 = v77;
  sub_10009CF90();
  sub_10001B6EC(v54);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a6;
  sub_100015700(&qword_1000DAF20, &qword_1000DAEE8);
  uint64_t v58 = v78;
  sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v57, v58);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v59 = v98[3];
  uint64_t v60 = v98[4];
  sub_10000FF9C(v98, v59);
  *(void *)&long long v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 24))(v59, v60);
  id v103 = (id)sub_10009DF00();
  v56(v54, 1, 1, v47);
  sub_10000D308(&qword_1000D7038);
  sub_100015700(&qword_1000D7040, &qword_1000D7038);
  uint64_t v61 = v80;
  sub_10009CF90();
  sub_10001B6EC(v54);

  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a6;
  sub_100015700(&qword_1000D7048, &qword_1000D6FE0);
  uint64_t v62 = v81;
  sub_10009CFA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v61, v62);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  *(void *)&long long v104 = *(void *)(*sub_10000FF9C(&v108, v109) + 16);
  sub_10000D308(&qword_1000D9E20);
  sub_100015700(&qword_1000DAF28, &qword_1000D9E20);
  *(void *)&long long v104 = sub_10009CF60();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = a6;
  sub_10000D308(&qword_1000DAF30);
  sub_100015700(&qword_1000DAF38, &qword_1000DAF30);
  sub_10009CFA0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v63 = v99[3];
  uint64_t v64 = v99[4];
  sub_10000FF9C(v99, v63);
  *(void *)&long long v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v63, v64);
  id v103 = (id)sub_10009DF00();
  uint64_t v65 = (uint64_t)v92;
  uint64_t v66 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v89;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v89)(v92, 1, 1, v91);
  sub_10000D308(&qword_1000D9F60);
  sub_100015700(&qword_1000D9F68, &qword_1000D9F60);
  uint64_t v67 = v83;
  sub_10009CF90();
  sub_10001B6EC(v65);

  swift_release();
  swift_getKeyPath();
  *(void *)&long long v104 = a6;
  sub_100015700(&qword_1000D9F70, &qword_1000D9E68);
  uint64_t v68 = v84;
  sub_10009CFB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v67, v68);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  uint64_t v69 = v100[3];
  uint64_t v70 = v100[4];
  sub_10000FF9C(v100, v69);
  *(void *)&long long v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 24))(v69, v70);
  id v103 = (id)sub_10009DF00();
  v66(v65, 1, 1, v91);
  sub_10000D308(&qword_1000DAF40);
  sub_100015700(&qword_1000DAF48, &qword_1000DAF40);
  uint64_t v71 = v86;
  sub_10009CF90();
  sub_10001B6EC(v65);

  swift_release();
  swift_getKeyPath();
  *(void *)&long long v104 = a6;
  sub_100015700(&qword_1000DAF50, &qword_1000DAEE0);
  uint64_t v72 = v87;
  sub_10009CFB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v71, v72);
  swift_beginAccess();
  sub_10009CE70();
  swift_endAccess();
  swift_release();
  sub_1000100E8((uint64_t)&v108);
  sub_1000100E8((uint64_t)v99);
  sub_1000100E8((uint64_t)v100);
  sub_1000100E8((uint64_t)v98);
  sub_1000100E8((uint64_t)v93);
  return a6;
}

uint64_t sub_1000861A4()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000861DC(unsigned __int8 *a1)
{
  return sub_10008187C(a1);
}

uint64_t sub_1000861E4(unsigned __int8 *a1)
{
  return sub_100082090(a1);
}

uint64_t sub_1000861EC(uint64_t result)
{
  return sub_1000820F0(result);
}

uint64_t sub_1000861F4(uint64_t a1)
{
  return sub_10008217C(a1);
}

uint64_t sub_100086218()
{
  *(void *)(v1 + 112) = v0;
  return _swift_task_switch(sub_1000862A8, 0, 0);
}

uint64_t sub_1000862A8()
{
  uint64_t v1 = v0[14];
  v0[15] = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[16] = v2;
  v0[17] = swift_getObjectType();
  v0[18] = *(void *)(v2 + 24);
  v0[19] = (v2 + 24) & 0xFFFFFFFFFFFFLL | 0xA2EC000000000000;
  uint64_t v4 = sub_10009DE10();
  return _swift_task_switch(sub_10008637C, v4, v3);
}

uint64_t sub_10008637C()
{
  uint64_t v1 = (void (*)(void *, unint64_t, unint64_t, void *, unint64_t, unint64_t, uint64_t, uint64_t))v0[18];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  unint64_t v4 = sub_10004690C();
  unint64_t v5 = sub_100046960();
  v1(&type metadata for Data, 0xD000000000000011, 0x80000001000A66A0, &type metadata for Data, v4, v5, v2, v3);
  v0[20] = 0;
  return _swift_task_switch(sub_100086494, 0, 0);
}

uint64_t sub_100086494()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = (_OWORD *)(v0 + 16);
  if (v1 >> 60 != 15)
  {
    switch(v1 >> 62)
    {
      case 1uLL:
        if (v2 >> 32 < (int)v2) {
          __break(1u);
        }
        uint64_t v6 = *(void *)(v0 + 160);
        sub_10000EE24(*(void *)(v0 + 16), *(void *)(v0 + 24));
        sub_10000EE24(v2, v1);
        swift_retain();
        uint64_t v4 = sub_10000E8EC((int)v2, v2 >> 32, v1 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10000EB58);
        uint64_t v5 = v7;
        uint64_t result = sub_100046A08(v2, v1);
        if (!v6) {
          goto LABEL_7;
        }
        return result;
      case 2uLL:
        uint64_t v9 = *(void *)(v0 + 160);
        uint64_t v10 = *(void *)(v2 + 16);
        uint64_t v11 = *(void *)(v2 + 24);
        sub_1000871B4(*(void *)(v0 + 16), *(void *)(v0 + 24));
        sub_1000871B4(v2, v1);
        swift_retain();
        swift_retain();
        uint64_t v4 = sub_10000E8EC(v10, v11, v1 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10000EB58);
        uint64_t v5 = v12;
        swift_release();
        uint64_t result = swift_release();
        if (!v9)
        {
LABEL_7:
          if (v5) {
            goto LABEL_16;
          }
          *(void *)(v0 + 96) = v2;
          *(void *)(v0 + 104) = v1;
          sub_10000EE24(v2, v1);
          sub_10000D308(&qword_1000D58A0);
          if (swift_dynamicCast())
          {
            sub_1000107E8((long long *)(v0 + 16), v0 + 56);
            sub_10000FF9C((void *)(v0 + 56), *(void *)(v0 + 80));
            if (sub_10009E130())
            {
              sub_10000FF9C((void *)(v0 + 56), *(void *)(v0 + 80));
              sub_10009E120();
              sub_100046A08(v2, v1);
              uint64_t v4 = *(void *)(v0 + 16);
              uint64_t v5 = *(void *)(v0 + 24);
              sub_1000100E8(v0 + 56);
              sub_100046A08(v2, v1);
              sub_100046A08(v2, v1);
              goto LABEL_17;
            }
            sub_1000100E8(v0 + 56);
          }
          else
          {
            *(void *)(v0 + 48) = 0;
            *uint64_t v3 = 0u;
            *(_OWORD *)(v0 + 32) = 0u;
            sub_1000871C8(v0 + 16);
          }
          uint64_t v13 = sub_10000E200(v2, v1);
          goto LABEL_15;
        }
        return result;
      case 3uLL:
        *(void *)(v0 + 22) = 0;
        *(void *)uint64_t v3 = 0;
        goto LABEL_14;
      default:
        *(void *)(v0 + 16) = v2;
        *(_WORD *)(v0 + 24) = v1;
        *(unsigned char *)(v0 + 26) = BYTE2(v1);
        *(unsigned char *)(v0 + 27) = BYTE3(v1);
        *(unsigned char *)(v0 + 28) = BYTE4(v1);
        *(unsigned char *)(v0 + 29) = BYTE5(v1);
LABEL_14:
        uint64_t v13 = sub_10009DD10();
LABEL_15:
        uint64_t v4 = v13;
        uint64_t v5 = v14;
LABEL_16:
        sub_100046A08(v2, v1);
        sub_100046A08(v2, v1);
        sub_10000EE7C(v2, v1);
        goto LABEL_17;
    }
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
LABEL_17:
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v15(v4, v5);
}

uint64_t sub_10008689C()
{
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100086924(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  uint64_t v4 = sub_10009DCD0();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_1000869E8, 0, 0);
}

uint64_t sub_1000869E8()
{
  if (v0[7])
  {
    uint64_t v2 = v0[10];
    uint64_t v1 = v0[11];
    uint64_t v3 = v0[9];
    sub_10009DCC0();
    uint64_t v4 = sub_10009DC90();
    unint64_t v6 = v5;
    v0[12] = v4;
    v0[13] = v5;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    if (v6 >> 60 == 15)
    {
      sub_100087160();
      swift_allocError();
      swift_willThrow();
      swift_task_dealloc();
      uint64_t v7 = (uint64_t (*)(void))v0[1];
      return v7();
    }
    uint64_t v17 = v0[8];
    v0[14] = *(void *)(v17 + 16);
    uint64_t v18 = *(void *)(v17 + 24);
    v0[15] = v18;
    v0[16] = swift_getObjectType();
    v0[17] = *(void *)(v18 + 32);
    v0[18] = (v18 + 32) & 0xFFFFFFFFFFFFLL | 0x5359000000000000;
    uint64_t v19 = sub_10009DE10();
    uint64_t v16 = v20;
    v0[19] = v19;
    v0[20] = v20;
    uint64_t v14 = sub_100086BB8;
    uint64_t v15 = v19;
  }
  else
  {
    uint64_t v9 = v0[8];
    v0[26] = *(void *)(v9 + 16);
    uint64_t v10 = *(void *)(v9 + 24);
    v0[27] = v10;
    v0[28] = swift_getObjectType();
    v0[29] = *(void *)(v10 + 32);
    v0[30] = (v10 + 32) & 0xFFFFFFFFFFFFLL | 0x5359000000000000;
    uint64_t v11 = sub_10009DE10();
    uint64_t v13 = v12;
    uint64_t v14 = sub_100086DE4;
    uint64_t v15 = v11;
    uint64_t v16 = v13;
  }
  return _swift_task_switch(v14, v15, v16);
}

uint64_t sub_100086BB8()
{
  (*(void (**)(unint64_t, unint64_t, void, void))(v0 + 136))(0xD000000000000011, 0x80000001000A66A0, *(void *)(v0 + 128), *(void *)(v0 + 120));
  *(void *)(v0 + 168) = 0;
  *(void *)(v0 + 176) = 0;
  uint64_t v1 = *(void *)(v0 + 120);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 96);
  *(void *)(v0 + 184) = *(void *)(v1 + 16);
  *(void *)(v0 + 192) = (v1 + 16) & 0xFFFFFFFFFFFFLL | 0x30FA000000000000;
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  return _swift_task_switch(sub_100086C88, v2, v3);
}

uint64_t sub_100086C88()
{
  uint64_t v1 = (void (*)(void *, unint64_t, unint64_t, void *, unint64_t, unint64_t, uint64_t, uint64_t))v0[23];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  unint64_t v5 = sub_10004690C();
  unint64_t v6 = sub_100046960();
  v1(v0 + 2, 0xD000000000000011, 0x80000001000A66A0, &type metadata for Data, v5, v6, v3, v4);
  v0[25] = v2;
  if (v2) {
    uint64_t v7 = sub_1000870D0;
  }
  else {
    uint64_t v7 = sub_100086D78;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100086D78()
{
  sub_100046A08(v0[12], v0[13]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100086DE4()
{
  (*(void (**)(unint64_t, unint64_t, void, void))(v0 + 232))(0xD000000000000011, 0x80000001000A66A0, *(void *)(v0 + 224), *(void *)(v0 + 216));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100086E88()
{
  uint64_t v14 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEB0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 168);
  if (v4)
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136446210;
    *(void *)(v0 + 32) = v5;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v7 = sub_10009DCF0();
    *(void *)(v0 + 40) = sub_10000DBA8(v7, v8, &v13);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to remove previous grandslam token before storing the new one, this is expected if no previous key is present: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  *(void *)(v0 + 176) = 0;
  uint64_t v9 = *(void *)(v0 + 120);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 96);
  *(void *)(v0 + 184) = *(void *)(v9 + 16);
  *(void *)(v0 + 192) = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0x30FA000000000000;
  uint64_t v10 = *(void *)(v0 + 152);
  uint64_t v11 = *(void *)(v0 + 160);
  return _swift_task_switch(sub_100086C88, v10, v11);
}

uint64_t sub_1000870D0()
{
  sub_100046A08(v0[12], v0[13]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t type metadata accessor for KeychainBackedGrandSlamTokenStorage()
{
  return self;
}

unint64_t sub_100087160()
{
  unint64_t result = qword_1000DB000;
  if (!qword_1000DB000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000DB000);
  }
  return result;
}

uint64_t sub_1000871B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000EE24(a1, a2);
  }
  return a1;
}

uint64_t sub_1000871C8(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000D58A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for KeychainBackedGrandSlamTokenStorage.KeychainBackedGrandSlamTokenStorageError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000872C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeychainBackedGrandSlamTokenStorage.KeychainBackedGrandSlamTokenStorageError()
{
  return &type metadata for KeychainBackedGrandSlamTokenStorage.KeychainBackedGrandSlamTokenStorageError;
}

unint64_t sub_100087300()
{
  unint64_t result = qword_1000DB010;
  if (!qword_1000DB010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB010);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AccountProviderError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AccountProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000874B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountProviderError()
{
  return &type metadata for AccountProviderError;
}

unint64_t sub_1000874EC()
{
  unint64_t result = qword_1000DB018;
  if (!qword_1000DB018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB018);
  }
  return result;
}

uint64_t destroy for PrerequisiteWarningView()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PrerequisiteWarningView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PrerequisiteWarningView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PrerequisiteWarningView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NonceInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NonceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrerequisiteWarningView()
{
  return &type metadata for PrerequisiteWarningView;
}

uint64_t sub_100087718()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100087734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v7 = sub_10009DA60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000D308(&qword_1000DB020);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000D308(&qword_1000DB028);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000D308(&qword_1000DB030);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = sub_10009D400();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v21 = sub_10000D308(&qword_1000DB038);
  sub_100087A4C(a1, a2, v30, v31, (uint64_t)&v13[*(int *)(v21 + 44)]);
  uint64_t v22 = sub_10009DA90();
  sub_100096CB8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, INFINITY, 0, v22, v23);
  sub_100010864((uint64_t)v13, &qword_1000DB020);
  LOBYTE(v13) = sub_10009D600();
  sub_100010720((uint64_t)v16, (uint64_t)v20, &qword_1000DB028);
  uint64_t v24 = &v20[*(int *)(v18 + 44)];
  *uint64_t v24 = (char)v13;
  *(_OWORD *)(v24 + 8) = 0u;
  *(_OWORD *)(v24 + 24) = 0u;
  v24[40] = 1;
  sub_100010864((uint64_t)v16, &qword_1000DB028);
  sub_10009DA40();
  LOBYTE(v13) = sub_10009D600();
  uint64_t v25 = sub_10000D308(&qword_1000DB040);
  uint64_t v26 = v32;
  uint64_t v27 = v32 + *(int *)(v25 + 36);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v27, v10, v7);
  *(unsigned char *)(v27 + *(int *)(sub_10000D308(&qword_1000D9400) + 36)) = (_BYTE)v13;
  sub_100010720((uint64_t)v20, v26, &qword_1000DB030);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_100010864((uint64_t)v20, &qword_1000DB030);
}

uint64_t sub_100087A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v81 = a3;
  uint64_t v82 = a4;
  uint64_t v80 = a1;
  uint64_t v7 = sub_10000D308(&qword_1000DB048);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v78 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v77 = (uint64_t)&v64 - v10;
  uint64_t v11 = sub_10000D308(&qword_1000DB050);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v79 = (uint64_t)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v83 = (uint64_t *)((char *)&v64 - v14);
  uint64_t v69 = a2;
  swift_retain();
  uint64_t v15 = sub_100082C8C();
  uint64_t v17 = v16;
  swift_release();
  uint64_t v84 = v15;
  uint64_t v85 = v17;
  unint64_t v70 = sub_10001E4B8();
  uint64_t v18 = sub_10009D750();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_10009D900();
  uint64_t v23 = sub_10009D720();
  uint64_t v25 = v24;
  char v27 = v26;
  swift_release();
  sub_10001F7AC(v18, v20, v22);
  swift_bridgeObjectRelease();
  sub_10009D660();
  uint64_t v28 = sub_10009D740();
  uint64_t v30 = v29;
  char v32 = v31;
  swift_release();
  sub_10001F7AC(v23, v25, v27 & 1);
  swift_bridgeObjectRelease();
  sub_10009D690();
  uint64_t v33 = sub_10009D700();
  uint64_t v74 = v34;
  uint64_t v75 = v33;
  uint64_t v76 = v35;
  int v73 = v36 & 1;
  sub_10001F7AC(v28, v30, v32 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v71 = sub_10009D620();
  uint64_t v37 = v69;
  swift_retain();
  uint64_t v38 = sub_100082ECC();
  uint64_t v40 = v39;
  swift_release();
  uint64_t v84 = v38;
  uint64_t v85 = v40;
  uint64_t v41 = sub_10009D750();
  uint64_t v43 = v42;
  LOBYTE(v23) = v44 & 1;
  sub_10009D900();
  uint64_t v68 = sub_10009D720();
  uint64_t v67 = v45;
  LOBYTE(v18) = v46;
  unint64_t v70 = v47;
  swift_release();
  LODWORD(v18) = v18 & 1;
  int v65 = v18;
  sub_10001F7AC(v41, v43, v23);
  swift_bridgeObjectRelease();
  int v66 = sub_10009D620();
  uint64_t v48 = sub_10009D3D0();
  uint64_t v49 = v83;
  *uint64_t v83 = v48;
  v49[1] = 0;
  *((unsigned char *)v49 + 16) = 1;
  uint64_t v50 = (char *)v49 + *(int *)(sub_10000D308(&qword_1000DB058) + 44);
  uint64_t v51 = v77;
  sub_100087F8C(v80, v37, v81, v82, v77);
  uint64_t v52 = v78;
  sub_100010720(v51, v78, &qword_1000DB048);
  *(void *)uint64_t v50 = 0;
  v50[8] = 1;
  uint64_t v53 = sub_10000D308(&qword_1000DB060);
  sub_100010720(v52, (uint64_t)&v50[*(int *)(v53 + 48)], &qword_1000DB048);
  uint64_t v54 = &v50[*(int *)(v53 + 64)];
  *(void *)uint64_t v54 = 0;
  v54[8] = 1;
  sub_100010864(v51, &qword_1000DB048);
  sub_100010864(v52, &qword_1000DB048);
  char v55 = v73;
  LOBYTE(v84) = v73;
  uint64_t v56 = v79;
  sub_100010720((uint64_t)v49, v79, &qword_1000DB050);
  uint64_t v58 = v74;
  uint64_t v57 = v75;
  *(void *)a5 = v75;
  *(void *)(a5 + 8) = v58;
  *(unsigned char *)(a5 + 16) = v55;
  LOBYTE(v53) = v55;
  uint64_t v59 = KeyPath;
  *(void *)(a5 + 24) = v76;
  *(void *)(a5 + 32) = v59;
  *(unsigned char *)(a5 + 40) = 1;
  *(unsigned char *)(a5 + 48) = v71;
  *(_OWORD *)(a5 + 56) = 0u;
  *(_OWORD *)(a5 + 72) = 0u;
  *(unsigned char *)(a5 + 88) = 1;
  uint64_t v60 = v68;
  uint64_t v61 = v67;
  *(void *)(a5 + 96) = v68;
  *(void *)(a5 + 104) = v61;
  *(unsigned char *)(a5 + 112) = v18;
  *(void *)(a5 + 120) = v70;
  *(unsigned char *)(a5 + 128) = v66;
  *(_OWORD *)(a5 + 136) = 0u;
  *(_OWORD *)(a5 + 152) = 0u;
  *(unsigned char *)(a5 + 168) = 1;
  uint64_t v62 = sub_10000D308(&qword_1000DB068);
  sub_100010720(v56, a5 + *(int *)(v62 + 64), &qword_1000DB050);
  sub_10001F79C(v57, v58, v53);
  swift_bridgeObjectRetain();
  swift_retain();
  LOBYTE(v53) = v65;
  sub_10001F79C(v60, v61, v65);
  swift_bridgeObjectRetain();
  sub_100010864((uint64_t)v83, &qword_1000DB050);
  sub_100010864(v56, &qword_1000DB050);
  sub_10001F7AC(v60, v61, v53);
  swift_bridgeObjectRelease();
  sub_10001F7AC(v57, v58, v84);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100087F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v72 = a3;
  uint64_t v83 = a5;
  uint64_t v81 = sub_10009D230();
  __chkstk_darwin(v81);
  uint64_t v82 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10009DA60();
  uint64_t v79 = *(void *)(v8 - 8);
  uint64_t v80 = v8;
  __chkstk_darwin(v8);
  uint64_t v78 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10009CCC0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10009DC60();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_10000D308(&qword_1000D6620);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10000D308(&qword_1000D8D40);
  __chkstk_darwin(v73);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10000D308(&qword_1000DB070);
  __chkstk_darwin(v74);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10000D308(&qword_1000DB078);
  __chkstk_darwin(v75);
  char v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10000D308(&qword_1000DB080);
  __chkstk_darwin(v76);
  uint64_t v77 = (uint64_t)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v84 = sub_10009DCE0();
  uint64_t v85 = v23;
  uint64_t v24 = (void *)swift_allocObject();
  _OWORD v24[2] = v71;
  v24[3] = a2;
  v24[4] = v72;
  v24[5] = a4;
  sub_10001E4B8();
  swift_retain();
  swift_retain();
  sub_10009D9A0();
  LOBYTE(a4) = sub_10009D610();
  unsigned __int8 v25 = sub_10009D620();
  char v26 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != a4) {
    char v26 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v25) {
    char v26 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v12);
  uint64_t v35 = &v17[*(int *)(v73 + 36)];
  *uint64_t v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unsigned __int8 v36 = sub_10009D630();
  unsigned __int8 v37 = sub_10009D650();
  char v38 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v36) {
    char v38 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v37) {
    char v38 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_100010720((uint64_t)v17, (uint64_t)v19, &qword_1000D8D40);
  unint64_t v47 = &v19[*(int *)(v74 + 36)];
  *unint64_t v47 = v38;
  *((void *)v47 + 1) = v40;
  *((void *)v47 + 2) = v42;
  *((void *)v47 + 3) = v44;
  *((void *)v47 + 4) = v46;
  v47[40] = 0;
  sub_100010864((uint64_t)v17, &qword_1000D8D40);
  uint64_t v48 = v78;
  sub_10009DA50();
  char v49 = sub_10009D600();
  uint64_t v50 = &v21[*(int *)(v75 + 36)];
  uint64_t v52 = v79;
  uint64_t v51 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v50, v48, v80);
  v50[*(int *)(sub_10000D308(&qword_1000D9400) + 36)] = v49;
  sub_100010720((uint64_t)v19, (uint64_t)v21, &qword_1000DB070);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v51);
  sub_100010864((uint64_t)v19, &qword_1000DB070);
  uint64_t v53 = sub_10009D900();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v55 = v77;
  sub_100010720((uint64_t)v21, v77, &qword_1000DB078);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(v76 + 36));
  uint64_t *v56 = KeyPath;
  v56[1] = v53;
  sub_100010864((uint64_t)v21, &qword_1000DB078);
  uint64_t v57 = v82;
  uint64_t v58 = &v82[*(int *)(v81 + 20)];
  uint64_t v59 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v60 = sub_10009D3F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 104))(v58, v59, v60);
  __asm { FMOV            V0.2D, #20.0 }
  *uint64_t v57 = _Q0;
  uint64_t v66 = sub_10000D308(&qword_1000DB048);
  uint64_t v67 = v83;
  uint64_t v68 = v83 + *(int *)(v66 + 36);
  sub_100088780((uint64_t)v57, v68);
  *(_WORD *)(v68 + *(int *)(sub_10000D308(&qword_1000DB088) + 36)) = 256;
  sub_100010720(v55, v67, &qword_1000DB080);
  sub_1000887E4((uint64_t)v57);
  return sub_100010864(v55, &qword_1000DB080);
}

uint64_t sub_1000886FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100087734(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_100088710()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100088750()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_100088780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009D230();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000887E4(uint64_t a1)
{
  uint64_t v2 = sub_10009D230();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100088844()
{
  unint64_t result = qword_1000DB090;
  if (!qword_1000DB090)
  {
    sub_10000AF84(&qword_1000DB040);
    sub_1000888E4();
    sub_100015700(&qword_1000D9478, &qword_1000D9400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB090);
  }
  return result;
}

unint64_t sub_1000888E4()
{
  unint64_t result = qword_1000DB098;
  if (!qword_1000DB098)
  {
    sub_10000AF84(&qword_1000DB030);
    sub_100088960();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB098);
  }
  return result;
}

unint64_t sub_100088960()
{
  unint64_t result = qword_1000DB0A0;
  if (!qword_1000DB0A0)
  {
    sub_10000AF84(&qword_1000DB028);
    sub_100015700(&qword_1000DB0A8, &qword_1000DB020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB0A0);
  }
  return result;
}

void *initializeWithCopy for NonceInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for NonceInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for NonceInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NonceInfo()
{
  return &type metadata for NonceInfo;
}

uint64_t sub_100088B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009DE70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_10009DE60();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100010864(a1, &qword_1000D9350);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10009DE10();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100088CB4()
{
  uint64_t v0 = sub_10000D308(&qword_1000DB168);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v15 - v4;
  sub_10000D308(&qword_1000DB170);
  uint64_t v6 = sub_10009CE10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000A1900;
  sub_10009CE20();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t result = v11(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v13 = v10 + v9;
    uint64_t v14 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
    v14(v13, v5, v6);
    sub_10009CE20();
    uint64_t result = v11(v3, 1, v6);
    if (result != 1)
    {
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v14)(v13 + v8, v3, v6);
      qword_1000DB0B0 = v10;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100088EBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10009CB50();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v34 = v10;
  uint64_t v35 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v12 = &v28[-v11];
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_10009CE60();
  sub_10000D690(v13, (uint64_t)qword_1000E3488);
  uint64_t v32 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v33 = a1;
  v32(v12, a1, v7);
  uint64_t v14 = sub_10009CE40();
  os_log_type_t v15 = sub_10009DEA0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v31 = v6;
    uint64_t v18 = v17;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v37 = v30;
    *(_DWORD *)uint64_t v18 = 136315394;
    int v29 = v16;
    uint64_t v36 = sub_10000DBA8(0xD00000000000001ALL, 0x80000001000AB6E0, &v37);
    sub_10009DFC0();
    *(_WORD *)(v18 + 12) = 2082;
    sub_10008A5C8();
    uint64_t v19 = sub_10009E230();
    uint64_t v36 = sub_10000DBA8(v19, v20, &v37);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v12, v7);
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v29, "%s at url: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v31;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v12, v7);
  }

  uint64_t v21 = sub_10009DE70();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
  uint64_t v37 = *(void *)v2;
  uint64_t v22 = v35;
  v32(v35, v33, v7);
  sub_10009DE40();
  sub_10008A388((uint64_t)&v37);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v23 = sub_10009DE30();
  unint64_t v24 = (*(unsigned __int8 *)(v8 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = &protocol witness table for MainActor;
  long long v26 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v25 + 32) = *(_OWORD *)v2;
  *(_OWORD *)(v25 + 48) = v26;
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v2 + 32);
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v8 + 32))(v25 + v24, v22, v7);
  sub_100088B08((uint64_t)v6, (uint64_t)&unk_1000DB188, v25);
  return swift_release();
}

id sub_10008941C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkProfilePickerView.Coordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NetworkProfilePickerView.Coordinator()
{
  return self;
}

uint64_t destroy for NetworkProfilePickerView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for NetworkProfilePickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NetworkProfilePickerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for NetworkProfilePickerView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NetworkProfilePickerView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkProfilePickerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkProfilePickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkProfilePickerView()
{
  return &type metadata for NetworkProfilePickerView;
}

uint64_t sub_100089774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a5;
  uint64_t v7 = sub_10009CB50();
  _OWORD v5[3] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[4] = v8;
  v5[5] = *(void *)(v8 + 64);
  v5[6] = swift_task_alloc();
  sub_10000D308(&qword_1000D9350);
  v5[7] = swift_task_alloc();
  v5[8] = sub_10009DE40();
  uint64_t v9 = sub_10009DE30();
  uint64_t v10 = *(void *)(a4 + 24);
  v5[9] = v9;
  v5[10] = v10;
  v5[11] = sub_10009DE30();
  uint64_t v12 = sub_10009DE10();
  return _swift_task_switch(sub_1000898C0, v12, v11);
}

uint64_t sub_1000898C0()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  swift_release();
  uint64_t v7 = sub_10009DE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v5, v6);
  swift_retain();
  uint64_t v8 = sub_10009DE30();
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = v8;
  *((void *)v10 + 3) = &protocol witness table for MainActor;
  *((void *)v10 + 4) = v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v10[v9], v3, v6);
  sub_100088B08(v2, (uint64_t)&unk_1000DB1A0, (uint64_t)v10);
  swift_release();
  uint64_t v12 = sub_10009DE10();
  return _swift_task_switch(sub_100089A60, v12, v11);
}

uint64_t sub_100089A60()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100089AD4()
{
  if (qword_1000D5260 != -1) {
    swift_once();
  }
  id v0 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  sub_10009CE10();
  swift_bridgeObjectRetain();
  Class isa = sub_10009DDB0().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [v0 initForOpeningContentTypes:isa asCopy:1];

  sub_10000D308(&qword_1000DB160);
  sub_10009D5E0();
  [v2 setDelegate:v4];

  return v2;
}

id sub_100089BC8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[1];
  char v4 = *((unsigned char *)v1 + 16);
  uint64_t v5 = v1[5];
  uint64_t v16 = *v1;
  uint64_t v17 = v3;
  char v18 = v4;
  swift_retain();
  swift_retain();
  long long v14 = *(_OWORD *)(v1 + 3);
  swift_retain();
  swift_retain();
  sub_10000D308(&qword_1000DB158);
  sub_10009D9C0();
  uint64_t v6 = v19;
  uint64_t v7 = v20;
  char v8 = v21;
  unint64_t v9 = (objc_class *)type metadata accessor for NetworkProfilePickerView.Coordinator();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = &v10[OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_parent];
  *(void *)uint64_t v11 = v16;
  *((void *)v11 + 1) = v3;
  unsigned char v11[16] = v4;
  *(_OWORD *)(v11 + 24) = v14;
  *((void *)v11 + 5) = v5;
  uint64_t v12 = &v10[OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_isPresented];
  *(void *)uint64_t v12 = v6;
  *((void *)v12 + 1) = v7;
  unsigned char v12[16] = v8;
  v15.receiver = v10;
  v15.super_class = v9;
  id result = objc_msgSendSuper2(&v15, "init");
  *a1 = result;
  return result;
}

uint64_t sub_100089CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100089DB8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100089D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100089DB8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100089D8C()
{
}

unint64_t sub_100089DB8()
{
  unint64_t result = qword_1000DB178;
  if (!qword_1000DB178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000DB178);
  }
  return result;
}

uint64_t sub_100089E0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000D308(&qword_1000D9E30);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10009CB50();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10009CE60();
  sub_10000D690(v11, (uint64_t)qword_1000E3488);
  uint64_t v12 = sub_10009CE40();
  os_log_type_t v13 = sub_10009DEA0();
  if (os_log_type_enabled(v12, v13))
  {
    long long v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Network profile document picker picked document", v14, 2u);
    swift_slowDealloc();
  }

  if (*(void *)(a1 + 16))
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v8 + 16))(v6, a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
      uint64_t v15 = v1
          + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_parent;
      long long v16 = *(_OWORD *)(v1
                      + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_parent
                      + 16);
      long long v31 = *(_OWORD *)(v1
                      + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_parent);
      long long v32 = v16;
      long long v33 = *(_OWORD *)(v1
                      + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_parent
                      + 32);
      uint64_t v34 = v31;
      sub_10008A388((uint64_t)&v34);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100088EBC((uint64_t)v10);
      sub_10008A3B4((uint64_t)&v34);
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v17 = *(void *)(v1
                      + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_isPresented
                      + 8);
      char v18 = *(unsigned char *)(v1
                     + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_isPresented
                     + 16);
      uint64_t v28 = *(void *)(v1
                      + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_isPresented);
      uint64_t v29 = v17;
      char v30 = v18;
      v27[7] = 0;
      sub_10000D308(&qword_1000DB158);
      sub_10009D9B0();
      uint64_t v19 = *(void (**)(uint64_t))(v15 + 32);
      goto LABEL_12;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_100010864((uint64_t)v6, &qword_1000D9E30);
  uint64_t v20 = sub_10009CE40();
  os_log_type_t v21 = sub_10009DEB0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Document picker didPickDocumentsAt called without a file url", v22, 2u);
    swift_slowDealloc();
  }

  uint64_t v23 = *(void *)(v2
                  + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_isPresented
                  + 8);
  char v24 = *(unsigned char *)(v2
                 + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_isPresented
                 + 16);
  *(void *)&long long v31 = *(void *)(v2
                              + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_isPresented);
  *((void *)&v31 + 1) = v23;
  LOBYTE(v32) = v24;
  LOBYTE(v28) = 0;
  sub_10000D308(&qword_1000DB158);
  sub_10009D9B0();
  uint64_t v19 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_parent
                                       + 32);
LABEL_12:
  uint64_t v25 = swift_retain();
  v19(v25);
  return swift_release();
}

uint64_t sub_10008A240()
{
  uint64_t v1 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Network profile document picker cancelled document", v5, 2u);
    swift_slowDealloc();
  }

  sub_10000D308(&qword_1000DB158);
  sub_10009D9B0();
  unint64_t v6 = *(void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtCV46AddDevicesToAutomatedDeviceEnrollmentExtension24NetworkProfilePickerView11Coordinator_parent
                                      + 32);
  uint64_t v7 = swift_retain();
  v6(v7);
  return swift_release();
}

uint64_t sub_10008A388(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008A3B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008A3E0()
{
  uint64_t v1 = sub_10009CB50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10008A4CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10009CB50() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + 32;
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000CD64;
  return sub_100089774(a1, v5, v6, v7, v8);
}

unint64_t sub_10008A5C8()
{
  unint64_t result = qword_1000DB190;
  if (!qword_1000DB190)
  {
    sub_10009CB50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB190);
  }
  return result;
}

uint64_t sub_10008A620()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008A658(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000CD64;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000DB510 + dword_1000DB510);
  return v6(a1, v4);
}

uint64_t sub_10008A710()
{
  uint64_t v1 = sub_10009CB50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10008A7E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10009CB50() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100010914;
  return sub_10007965C(a1, v5, v6, v7, v8);
}

uint64_t sub_10008A8E0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10008A954()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_10008A974, v0, 0);
}

uint64_t sub_10008A974()
{
  uint64_t v1 = v0[3];
  if (*(unsigned char *)(v1 + 128))
  {
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    v0[4] = *(void *)(v1 + 112);
    uint64_t v4 = *(void *)(v1 + 120);
    v0[5] = v4;
    v0[6] = swift_getObjectType();
    v0[7] = sub_10000D308((uint64_t *)&unk_1000D8378);
    v0[8] = *(void *)(v4 + 24);
    v0[9] = (v4 + 24) & 0xFFFFFFFFFFFFLL | 0xA2EC000000000000;
    uint64_t v6 = sub_10009DE10();
    return _swift_task_switch(sub_10008AA70, v6, v5);
  }
}

uint64_t sub_10008AA70()
{
  uint64_t v1 = (void (*)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[8];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = sub_10008DA1C(&qword_1000DB340, &qword_1000DB348);
  uint64_t v6 = sub_10008DA1C(&qword_1000DB350, &qword_1000DB358);
  v1(v2, 0xD000000000000011, 0x80000001000AB820, v2, v5, v6, v3, v4);
  v0[10] = 0;
  uint64_t v7 = v0[3];
  return _swift_task_switch(sub_10008ABD0, v7, 0);
}

uint64_t sub_10008ABD0()
{
  if (v0[2]) {
    uint64_t v1 = (void *)v0[2];
  }
  else {
    uint64_t v1 = _swiftEmptyArrayStorage;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v1;
  swift_retain();
  sub_10009CF40();
  *(unsigned char *)(v0[3] + 128) = 1;
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10008ACA0()
{
  uint64_t v12 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEB0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[10];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[2] = v5;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v7 = sub_10009DCF0();
    v0[2] = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Loading enrollment history failed with error: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  *(unsigned char *)(v0[3] + 128) = 1;
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10008AED0()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_10008AEF0, v0, 0);
}

uint64_t sub_10008AEF0()
{
  uint64_t v1 = v0[3];
  v0[4] = *(void *)(v1 + 112);
  uint64_t v2 = *(void *)(v1 + 120);
  v0[5] = v2;
  v0[6] = swift_getObjectType();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  v0[7] = *(void *)(v2 + 16);
  v0[8] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0x30FA000000000000;
  uint64_t v4 = sub_10009DE10();
  return _swift_task_switch(sub_10008AFFC, v4, v3);
}

uint64_t sub_10008AFFC()
{
  uint64_t v1 = (void (*)(void *, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v0[7];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = sub_10000D308((uint64_t *)&unk_1000D8378);
  uint64_t v5 = sub_10008DA1C(&qword_1000DB340, &qword_1000DB348);
  uint64_t v6 = sub_10008DA1C(&qword_1000DB350, &qword_1000DB358);
  v1(v0 + 2, 0xD000000000000011, 0x80000001000AB820, v4, v5, v6, v2, v3);
  v0[9] = 0;
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10008B1A8()
{
  uint64_t v12 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEB0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[9];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[2] = v5;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v7 = sub_10009DCF0();
    v0[2] = sub_10000DBA8(v7, v8, &v11);
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Writing enrollment history failed with error: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10008B3CC()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension33ConcreteEnrollmentHistoryProvider__enrolledDeviceRecords;
  uint64_t v2 = sub_10000D308(&qword_1000D8488);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10008B454()
{
  return type metadata accessor for ConcreteEnrollmentHistoryProvider();
}

uint64_t type metadata accessor for ConcreteEnrollmentHistoryProvider()
{
  uint64_t result = qword_1000DB1E0;
  if (!qword_1000DB1E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10008B4A8()
{
  sub_100043D6C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10008B558(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  v2[8] = *(void *)(type metadata accessor for EnrolledDeviceRecord() - 8);
  v2[9] = swift_task_alloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  v2[10] = v3;
  *os_log_type_t v3 = v2;
  v3[1] = sub_10008B65C;
  v3[3] = v1;
  return _swift_task_switch(sub_10008A974, v1, 0);
}

uint64_t sub_10008B65C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return _swift_task_switch(sub_10008B76C, v1, 0);
}

uint64_t sub_10008B76C()
{
  sub_10003B89C(v0[6], v0[9]);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v1 = (void (*)(uint64_t *, void))sub_10009CF20();
  uint64_t v3 = v2;
  unint64_t v4 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v4 = sub_10008D340(0, *(void *)(v4 + 16) + 1, 1, v4, &qword_1000D5850, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
    *uint64_t v3 = v4;
  }
  unint64_t v7 = *(void *)(v4 + 16);
  unint64_t v6 = *(void *)(v4 + 24);
  if (v7 >= v6 >> 1)
  {
    unint64_t v4 = sub_10008D340(v6 > 1, v7 + 1, 1, v4, &qword_1000D5850, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
    *uint64_t v3 = v4;
  }
  uint64_t v9 = v0[8];
  uint64_t v8 = v0[9];
  *(void *)(v4 + 16) = v7 + 1;
  sub_1000442BC(v8, v4+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v7);
  v1(v0 + 2, 0);
  swift_release();
  swift_release();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v10;
  *uint64_t v10 = v0;
  v10[1] = sub_10008B98C;
  uint64_t v11 = v0[7];
  v10[3] = v11;
  return _swift_task_switch(sub_10008AEF0, v11, 0);
}

uint64_t sub_10008B98C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10008BA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = sub_10009CD00();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v6 = sub_10009CA40();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for EnrolledDeviceRecord();
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v4[20] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_10008BC8C;
  v8[3] = v3;
  return _swift_task_switch(sub_10008A974, v3, 0);
}

uint64_t sub_10008BC8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return _swift_task_switch(sub_10008BD9C, v1, 0);
}

uint64_t sub_10008BD9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t v1 = swift_release();
  uint64_t v4 = v0[2];
  uint64_t v48 = *(void *)(v4 + 16);
  if (v48)
  {
    unint64_t v5 = 0;
    uint64_t v47 = v0[17];
    uint64_t v6 = v0[12];
    unsigned int v46 = enum case for Calendar.Component.year(_:);
    unsigned int v45 = enum case for Calendar.Component.month(_:);
    unsigned int v44 = enum case for Calendar.Component.day(_:);
    uint64_t v43 = (void (**)(uint64_t, uint64_t))(v0[9] + 8);
    uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    char v49 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v53 = _swiftEmptyArrayStorage;
    uint64_t v42 = v0[2];
    while (1)
    {
      if (v5 >= *(void *)(v4 + 16))
      {
        __break(1u);
        return _swift_task_switch(v1, v2, v3);
      }
      uint64_t v54 = v0[15];
      uint64_t v8 = v0[10];
      uint64_t v56 = v0[14];
      uint64_t v57 = v0[11];
      uint64_t v55 = v0[8];
      unint64_t v52 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      uint64_t v50 = v0[4];
      uint64_t v51 = *(void *)(v47 + 72);
      sub_10003B89C(v4 + v52 + v51 * v5, v0[19]);
      sub_10009CCE0();
      sub_10000D308(&qword_1000D6370);
      uint64_t v9 = sub_10009CCF0();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void *)(v10 + 72);
      uint64_t v12 = v7;
      unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1000A06A0;
      unint64_t v15 = v14 + v13;
      long long v16 = *(void (**)(unint64_t, void, uint64_t))(v10 + 104);
      v16(v15, v46, v9);
      v16(v15 + v11, v45, v9);
      v16(v15 + 2 * v11, v44, v9);
      sub_10008D704(v14);
      swift_setDeallocating();
      uint64_t v7 = v12;
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_10009CCD0();
      swift_bridgeObjectRelease();
      (*v43)(v8, v55);
      uint64_t v17 = sub_10009CA20();
      LOBYTE(v14) = v18;
      uint64_t v19 = *v12;
      (*v12)(v56, v54, v57);
      uint64_t v20 = v0[14];
      uint64_t v21 = v0[11];
      if ((v14 & 1) != 0 || v17 != v50) {
        break;
      }
      uint64_t v22 = sub_10009CA30();
      char v24 = v23;
      uint64_t v25 = *v49;
      (*v49)(v20, v21);
      if (v24) {
        goto LABEL_12;
      }
      uint64_t v26 = v0[5];
      v19(v0[13], v0[15], v0[11]);
      if (v22 != v26)
      {
        uint64_t v4 = v42;
LABEL_13:
        uint64_t v34 = v0[15];
        uint64_t v35 = v0[11];
        v25(v0[13], v35);
        v25(v34, v35);
LABEL_14:
        sub_1000442BC(v0[19], v0[18]);
        uint64_t v36 = v53;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10000E310(0, v53[2] + 1, 1);
          uint64_t v36 = _swiftEmptyArrayStorage;
        }
        unint64_t v38 = v36[2];
        unint64_t v37 = v36[3];
        if (v38 >= v37 >> 1)
        {
          sub_10000E310(v37 > 1, v38 + 1, 1);
          uint64_t v36 = _swiftEmptyArrayStorage;
        }
        uint64_t v39 = v0[18];
        v36[2] = v38 + 1;
        uint64_t v53 = v36;
        uint64_t v1 = sub_1000442BC(v39, (uint64_t)v36 + v52 + v38 * v51);
        goto LABEL_19;
      }
      uint64_t v27 = v0[15];
      uint64_t v28 = v0[13];
      uint64_t v29 = v0[11];
      uint64_t v30 = v0[6];
      uint64_t v31 = sub_10009CA00();
      char v33 = v32;
      v25(v28, v29);
      v25(v27, v29);
      uint64_t v4 = v42;
      if ((v33 & 1) != 0 || v31 != v30) {
        goto LABEL_14;
      }
      uint64_t v1 = sub_100044320(v0[19]);
LABEL_19:
      if (v48 == ++v5) {
        goto LABEL_23;
      }
    }
    uint64_t v25 = *v49;
    (*v49)(v0[14], v0[11]);
LABEL_12:
    uint64_t v4 = v42;
    v19(v0[13], v0[15], v0[11]);
    goto LABEL_13;
  }
  uint64_t v53 = _swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[3] = v53;
  swift_retain();
  sub_10009CF40();
  uint64_t v40 = (void *)swift_task_alloc();
  v0[21] = v40;
  *uint64_t v40 = v0;
  v40[1] = sub_10008C368;
  uint64_t v2 = v0[7];
  v40[3] = v2;
  uint64_t v1 = (uint64_t)sub_10008AEF0;
  uint64_t v3 = 0;
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10008C368()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10008C514(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v2[7] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10008C5C0;
  v3[3] = v1;
  return _swift_task_switch(sub_10008A974, v1, 0);
}

uint64_t sub_10008C5C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_10008C6D0, v1, 0);
}

uint64_t sub_10008C6D0()
{
  swift_beginAccess();
  sub_10000D308(&qword_1000D8488);
  sub_10009CF10();
  swift_endAccess();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008C778(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100010914;
  return sub_10008B558(a1);
}

uint64_t sub_10008C80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000CD64;
  return sub_10008BA9C(a1, a2, a3);
}

uint64_t sub_10008C8B8()
{
  *(void *)(v1 + 24) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10008C964;
  v2[3] = v0;
  return _swift_task_switch(sub_10008A974, v0, 0);
}

uint64_t sub_10008C964()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  return _swift_task_switch(sub_10008CA74, v1, 0);
}

uint64_t sub_10008CA74()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10008CB24()
{
  *(void *)(v1 + 48) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10008CBD0;
  v2[3] = v0;
  return _swift_task_switch(sub_10008A974, v0, 0);
}

uint64_t sub_10008CBD0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_10008CCE0, v1, 0);
}

uint64_t sub_10008CCE0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v1 = (void (*)(uint64_t, void))sub_10009CF20();
  *uint64_t v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v1(v0 + 16, 0);
  swift_release();
  swift_release();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10008CE08;
  uint64_t v4 = *(void *)(v0 + 48);
  v3[3] = v4;
  return _swift_task_switch(sub_10008AEF0, v4, 0);
}

uint64_t sub_10008CE08()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10008CEFC(uint64_t a1)
{
  uint64_t result = sub_10008DC0C(&qword_1000DB310, (void (*)(uint64_t))type metadata accessor for ConcreteEnrollmentHistoryProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10008CF54()
{
  uint64_t result = sub_10008CF78();
  qword_1000E3570 = result;
  *(void *)algn_1000E3578 = v1;
  return result;
}

uint64_t sub_10008CF78()
{
  uint64_t v0 = sub_10000D308(&qword_1000D8488);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);

  id v4 = [self defaultManager];
  type metadata accessor for FileManagerBackedEncryptedKeyValueStorage();
  uint64_t v5 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v6 = (char *)v5
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension41FileManagerBackedEncryptedKeyValueStorage____lazy_storage___documentsSubDirectoryURL;
  uint64_t v7 = sub_10000D308(&qword_1000D9E30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v5[14] = v4;
  uint64_t v8 = sub_10008DC0C(&qword_1000D9E38, (void (*)(uint64_t))type metadata accessor for FileManagerBackedEncryptedKeyValueStorage);
  type metadata accessor for ConcreteEnrollmentHistoryProvider();
  v5[15] = 0;
  v5[16] = 0;
  uint64_t v9 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v9 + 128) = 0;
  uint64_t v10 = v9
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension33ConcreteEnrollmentHistoryProvider__enrolledDeviceRecords;
  v12[1] = _swiftEmptyArrayStorage;
  sub_10000D308((uint64_t *)&unk_1000D8378);
  sub_10009CF00();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v10, v3, v0);
  *(void *)(v9 + 112) = v5;
  *(void *)(v9 + 120) = v8;
  sub_10008DC0C(&qword_1000DB368, (void (*)(uint64_t))type metadata accessor for ConcreteEnrollmentHistoryProvider);
  return v9;
}

uint64_t sub_10008D1D4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10008D258()
{
  return sub_10009CF40();
}

uint64_t sub_10008D2D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10008D340(a1, a2, a3, a4, &qword_1000D5850, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord, (uint64_t (*)(void))type metadata accessor for EnrolledDeviceRecord);
}

uint64_t sub_10008D30C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10008D340(a1, a2, a3, a4, (uint64_t *)&unk_1000DB370, (uint64_t (*)(void))type metadata accessor for DeviceStatusSectionViewModel, (uint64_t (*)(void))type metadata accessor for DeviceStatusSectionViewModel);
}

uint64_t sub_10008D340(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    char v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000D308(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  char v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_10009E0C0();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10008DAB0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_10008D5C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10008D340(a1, a2, a3, a4, &qword_1000DB360, (uint64_t (*)(void))type metadata accessor for Device, (uint64_t (*)(void))type metadata accessor for Device);
}

void *sub_10008D5F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000D308(&qword_1000D58C8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10008DC54(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10008D704(uint64_t a1)
{
  uint64_t v2 = sub_10009CCF0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10000D308(&qword_1000DB320);
    uint64_t v9 = sub_10009E050();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_10008DC0C(&qword_1000DB328, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_10009DBD0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_10008DC0C(&qword_1000DB330, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_10009DBF0();
          char v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10008DA1C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000AF84((uint64_t *)&unk_1000D8378);
    sub_10008DC0C(a2, (void (*)(uint64_t))type metadata accessor for EnrolledDeviceRecord);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008DAB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_10009E110();
  __break(1u);
  return result;
}

uint64_t sub_10008DC0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008DC54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10009E110();
  __break(1u);
  return result;
}

uint64_t sub_10008DD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100093E28(a1, (uint64_t)v8);
  uint64_t v9 = sub_10009DE70();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100012628((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_10009DE10();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_10009DE60();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

id sub_10008DF2C()
{
  uint64_t v1 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider____lazy_storage___delegationQueue;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider____lazy_storage___delegationQueue);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider____lazy_storage___delegationQueue);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)CATSerialOperationQueue) init];
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10008DFA0()
{
  uint64_t v1 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider__catSharingDeviceDiscovery;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider__catSharingDeviceDiscovery];
  if (v2) {
    goto LABEL_7;
  }
  id v3 = [objc_allocWithZone((Class)DMTSharingDiscoveryPrimitives) init];
  id v4 = sub_10008DF2C();
  id v5 = objc_allocWithZone((Class)CATSharingDeviceDiscovery);
  id v6 = v0;
  id v7 = [v5 initWithDiscoveryPrimitives:v3 delegate:v6 delegateOperationQueue:v4];

  uint64_t v8 = *(void **)&v0[v1];
  if (!v7)
  {
    if (v8)
    {
      [v8 invalidate];
      uint64_t v8 = *(void **)&v0[v1];
    }
  }
  *(void *)&v0[v1] = v7;

  uint64_t v9 = *(void **)&v0[v1];
  if (v9)
  {
    v9;

    uint64_t v2 = 0;
LABEL_7:
    id v10 = v2;
    return;
  }
  __break(1u);
}

uint64_t sub_10008E098()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  swift_release();
  return v1;
}

void sub_10008E10C(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_10009CCA0();
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(void **)&v2[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice];
  if (v10)
  {
    int v65 = v7;
    uint64_t v11 = qword_1000D51D8;
    id v12 = v10;
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10009CE60();
    uint64_t v14 = sub_10000D690(v13, (uint64_t)qword_1000E3488);
    id v15 = v12;
    uint64_t v16 = sub_10009CE40();
    os_log_type_t v17 = sub_10009DEA0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v64 = v6;
    if (v18)
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v61 = v14;
      uint64_t v20 = v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v62 = a1;
      uint64_t aBlock = v21;
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v72 = sub_10000DBA8(0xD000000000000041, 0x80000001000ABAA0, &aBlock);
      id v63 = a2;
      sub_10009DFC0();
      *(_WORD *)(v20 + 12) = 2082;
      v60[1] = v20 + 14;
      id v22 = [v15 identifier];
      sub_10009CC80();

      sub_100093CE0();
      uint64_t v23 = sub_10009E230();
      uint64_t v24 = v6;
      uint64_t v25 = v3;
      unint64_t v27 = v26;
      ((void (*)(char *, uint64_t))v65[1].isa)(v9, v24);
      uint64_t v72 = sub_10000DBA8(v23, v27, &aBlock);
      a2 = v63;
      sub_10009DFC0();

      id v3 = v25;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      a1 = v62;
      swift_slowDealloc();
      swift_slowDealloc();

      if (a2)
      {
LABEL_6:
        swift_unknownObjectRetain_n();
        BOOL v28 = sub_10009CE40();
        os_log_type_t v29 = sub_10009DEA0();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = swift_slowAlloc();
          id v63 = v15;
          uint64_t v31 = v30;
          uint64_t v62 = swift_slowAlloc();
          uint64_t aBlock = v62;
          *(_DWORD *)uint64_t v31 = 136315394;
          uint64_t v72 = sub_10000DBA8(0xD000000000000041, 0x80000001000ABAA0, &aBlock);
          sub_10009DFC0();
          *(_WORD *)(v31 + 12) = 2082;
          uint64_t v61 = v31 + 14;
          id v32 = [a2 remoteDevice];
          id v33 = [v32 identifier];

          sub_10009CC80();
          sub_100093CE0();
          uint64_t v34 = v64;
          uint64_t v35 = sub_10009E230();
          unint64_t v37 = v36;
          ((void (*)(char *, uint64_t))v65[1].isa)(v9, v34);
          uint64_t v72 = sub_10000DBA8(v35, v37, &aBlock);
          sub_10009DFC0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s Device was already paired: %{public}s", (uint8_t *)v31, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          id v15 = v63;
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        sub_10008F804(1);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {

      if (a2) {
        goto LABEL_6;
      }
    }
    uint64_t v41 = *(void **)&v3[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_devicePairingTerminal];
    if (!v41)
    {
      unsigned int v46 = sub_10009CE40();
      os_log_type_t v47 = sub_10009DED0();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136315138;
        uint64_t v72 = sub_10000DBA8(0xD000000000000041, 0x80000001000ABAA0, &aBlock);
        sub_10009DFC0();
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "%s called unexpectedly when we don't have a pairing terminal", v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }

      goto LABEL_34;
    }
    if ([(id)swift_unknownObjectRetain() isInvalidated])
    {
      uint64_t v42 = sub_10009CE40();
      os_log_type_t v43 = sub_10009DED0();
      if (os_log_type_enabled(v42, v43))
      {
        unsigned int v44 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)unsigned int v44 = 136315138;
        uint64_t v72 = sub_10000DBA8(0xD000000000000041, 0x80000001000ABAA0, &aBlock);
        sub_10009DFC0();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s Pairing terminal invalidated", v44, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_unknownObjectRelease();
        return;
      }

      goto LABEL_33;
    }
    if (a1)
    {
      char v49 = v3;
      uint64_t v50 = (void *)sub_10009CA70();
      if ([v50 code] == (id)704)
      {
        uint64_t v51 = sub_10009CE40();
        os_log_type_t v52 = sub_10009DEA0();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          uint64_t aBlock = swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 136315138;
          uint64_t v72 = sub_10000DBA8(0xD000000000000041, 0x80000001000ABAA0, &aBlock);
          sub_10009DFC0();
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s - calling -beginPairing:withCompletion:", v53, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = v49;
        uint64_t v70 = sub_1000940A8;
        uint64_t v71 = v54;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v67 = 1107296256;
        uint64_t v68 = sub_10008EC80;
        uint64_t v69 = &unk_1000CE930;
        uint64_t v55 = _Block_copy(&aBlock);
        id v56 = v49;
        swift_release();
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = v56;
        uint64_t v70 = sub_1000940E4;
        uint64_t v71 = v57;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v67 = 1107296256;
        uint64_t v68 = sub_10008ECD4;
        uint64_t v69 = &unk_1000CE980;
        uint64_t v58 = _Block_copy(&aBlock);
        id v59 = v56;
        swift_release();
        [v41 beginPairing:v55 withCompletion:v58];

        _Block_release(v58);
        _Block_release(v55);

        swift_unknownObjectRelease();
        return;
      }
    }
    sub_10008F804(0);
LABEL_33:
    swift_unknownObjectRelease();
LABEL_34:

    return;
  }
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_10009CE60();
  sub_10000D690(v38, (uint64_t)qword_1000E3488);
  int v65 = sub_10009CE40();
  os_log_type_t v39 = sub_10009DED0();
  if (os_log_type_enabled(v65, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v72 = sub_10000DBA8(0xD000000000000041, 0x80000001000ABAA0, &aBlock);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v65, v39, "%s called unexpectedly when we don't have a current device in pairing mode", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unsigned int v45 = v65;
  }
}

uint64_t sub_10008EC80(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10008ECD4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  swift_unknownObjectRetain();
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_10008ED58(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = v2;
  uint64_t v74 = a2;
  uint64_t v5 = sub_10009CCA0();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v68 - v10;
  __chkstk_darwin(v9);
  uint64_t v14 = (char *)v68 - v13;
  uint64_t v15 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice;
  uint64_t v16 = *(void **)(v2
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice);
  if (v16)
  {
    uint64_t v73 = v12;
    uint64_t v17 = qword_1000D51D8;
    id v18 = v16;
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10009CE60();
    uint64_t v20 = sub_10000D690(v19, (uint64_t)qword_1000E3488);
    uint64_t v75 = v18;
    os_log_t v72 = v20;
    uint64_t v21 = sub_10009CE40();
    os_log_type_t v22 = sub_10009DEA0();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      int v69 = v23;
      uint64_t v25 = v24;
      uint64_t v70 = swift_slowAlloc();
      uint64_t v77 = v70;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v76 = sub_10000DBA8(0xD00000000000003ELL, 0x80000001000ABA60, (uint64_t *)&v77);
      v68[2] = &v77;
      sub_10009DFC0();
      *(_WORD *)(v25 + 12) = 2082;
      v68[1] = v25 + 14;
      id v26 = [v75 identifier];
      sub_10009CC80();

      sub_100093CE0();
      uint64_t v27 = sub_10009E230();
      uint64_t v71 = (char *)v15;
      BOOL v28 = v8;
      os_log_type_t v29 = v11;
      uint64_t v30 = a1;
      uint64_t v31 = v3;
      unint64_t v33 = v32;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v5);
      uint64_t v76 = sub_10000DBA8(v27, v33, (uint64_t *)&v77);
      uint64_t v34 = v75;
      sub_10009DFC0();

      uint64_t v3 = v31;
      a1 = v30;
      uint64_t v11 = v29;
      uint64_t v8 = v28;
      uint64_t v15 = (uint64_t)v71;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v69, "%s %{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v38 = v75;
    }
    *(void *)(v3
              + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_devicePairingTerminal) = 0;
    swift_unknownObjectRelease();
    if (a1)
    {
      swift_errorRetain();
      os_log_type_t v39 = v75;
      swift_errorRetain();
      uint64_t v40 = v39;
      swift_errorRetain();
      uint64_t v41 = sub_10009CE40();
      os_log_type_t v42 = sub_10009DEB0();
      int v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        uint64_t v77 = v75;
        *(_DWORD *)uint64_t v44 = 136315650;
        uint64_t v76 = sub_10000DBA8(0xD00000000000003ELL, 0x80000001000ABA60, (uint64_t *)&v77);
        LODWORD(v74) = v43;
        sub_10009DFC0();
        *(_WORD *)(v44 + 12) = 2082;
        id v45 = [v40 identifier];
        sub_10009CC80();

        sub_100093CE0();
        uint64_t v46 = sub_10009E230();
        unint64_t v48 = v47;
        (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v5);
        uint64_t v76 = sub_10000DBA8(v46, v48, (uint64_t *)&v77);
        sub_10009DFC0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 22) = 2082;
        uint64_t v76 = a1;
        swift_errorRetain();
        sub_10000D308(&qword_1000D5858);
        uint64_t v49 = sub_10009DCF0();
        uint64_t v76 = sub_10000DBA8(v49, v50, (uint64_t *)&v77);
        sub_10009DFC0();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v74, "%s Failed to pair with device  %{public}s: %{public}s", (uint8_t *)v44, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }

      sub_10008F804(0);
      swift_errorRelease();
    }
    else if (v74)
    {
      id v51 = [(id)swift_unknownObjectRetain() remoteDevice];
      id v52 = [v51 identifier];

      sub_10009CC80();
      uint64_t v53 = *(void **)(v3 + v15);
      *(void *)(v3 + v15) = 0;

      uint64_t v54 = v73;
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
      uint64_t v71 = v11;
      v55(v8, v11, v5);
      id v56 = sub_10009CE40();
      os_log_type_t v57 = sub_10009DEA0();
      if (os_log_type_enabled(v56, v57))
      {
        os_log_t v72 = v56;
        uint64_t v58 = v5;
        id v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        *(_DWORD *)id v59 = 136446210;
        sub_100093CE0();
        uint64_t v60 = sub_10009E230();
        uint64_t v76 = sub_10000DBA8(v60, v61, (uint64_t *)&v77);
        sub_10009DFC0();
        swift_bridgeObjectRelease();
        uint64_t v62 = *(void (**)(char *, uint64_t))(v54 + 8);
        v62(v8, v58);
        os_log_t v63 = v72;
        _os_log_impl((void *)&_mh_execute_header, v72, v57, "Successfully paired with device %{public}s", v59, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v5 = v58;
        swift_slowDealloc();
      }
      else
      {
        uint64_t v62 = *(void (**)(char *, uint64_t))(v54 + 8);
        v62(v8, v5);
      }
      uint64_t v77 = v74;
      sub_10009CEC0();

      v62(v71, v5);
      swift_unknownObjectRelease();
    }
    else
    {
      int v65 = sub_10009CE40();
      os_log_type_t v66 = sub_10009DEB0();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        *(_DWORD *)uint64_t v67 = 136315138;
        uint64_t v76 = sub_10000DBA8(0xD00000000000003ELL, 0x80000001000ABA60, (uint64_t *)&v77);
        sub_10009DFC0();
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "%s No paired connection and no error!", v67, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_10008F804(0);
    }
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_10009CE60();
    sub_10000D690(v35, (uint64_t)qword_1000E3488);
    uint64_t v75 = sub_10009CE40();
    os_log_type_t v36 = sub_10009DED0();
    if (os_log_type_enabled(v75, v36))
    {
      unint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)unint64_t v37 = 136315138;
      uint64_t v76 = sub_10000DBA8(0xD00000000000003ELL, 0x80000001000ABA60, (uint64_t *)&v77);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v75, v36, "%s called unexpectedly when we don't have a current device in pairing mode", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v64 = v75;
    }
  }
}

void sub_10008F804(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10009CCA0();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(Class *)((char *)&v1->isa
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice);
  if (v9)
  {
    uint64_t v48 = v6;
    uint64_t v49 = v5;
    uint64_t v50 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice;
    uint64_t v10 = qword_1000D51D8;
    id v11 = v9;
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10009CE60();
    sub_10000D690(v12, (uint64_t)qword_1000E3488);
    id v13 = v11;
    uint64_t v14 = sub_10009CE40();
    os_log_type_t v15 = sub_10009DEA0();
    BOOL v16 = os_log_type_enabled(v14, v15);
    id v51 = v2;
    if (v16)
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      LODWORD(v47) = a1;
      void v46[2] = v18;
      uint64_t v53 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v52 = sub_10000DBA8(0xD000000000000025, 0x80000001000ABA30, &v53);
      sub_10009DFC0();
      *(_WORD *)(v17 + 12) = 2082;
      v46[1] = v17 + 14;
      id v19 = [v13 identifier];
      sub_10009CC80();

      sub_100093CE0();
      uint64_t v20 = v49;
      uint64_t v21 = sub_10009E230();
      unint64_t v23 = v22;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v20);
      uint64_t v52 = sub_10000DBA8(v21, v23, &v53);
      sub_10009DFC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      LOBYTE(a1) = v47;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v27 = v13;
    BOOL v28 = sub_10009CE40();
    os_log_type_t v29 = sub_10009DEA0();
    BOOL v30 = os_log_type_enabled(v28, v29);
    if (a1)
    {
      if (v30)
      {
        uint64_t v31 = swift_slowAlloc();
        uint64_t v53 = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315394;
        uint64_t v52 = sub_10000DBA8(0xD000000000000025, 0x80000001000ABA30, &v53);
        sub_10009DFC0();
        *(_WORD *)(v31 + 12) = 2082;
        uint64_t v47 = v31 + 14;
        id v32 = [v27 identifier];
        sub_10009CC80();

        sub_100093CE0();
        uint64_t v33 = v49;
        uint64_t v34 = sub_10009E230();
        unint64_t v36 = v35;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v33);
        uint64_t v52 = sub_10000DBA8(v34, v36, &v53);
        sub_10009DFC0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s - sending alreadyPairedDeviceConnection for %{public}s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v44 = v51;
    }
    else
    {
      if (v30)
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v53 = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 136315394;
        uint64_t v52 = sub_10000DBA8(0xD000000000000025, 0x80000001000ABA30, &v53);
        sub_10009DFC0();
        *(_WORD *)(v37 + 12) = 2082;
        uint64_t v47 = v37 + 14;
        id v38 = [v27 identifier];
        sub_10009CC80();

        sub_100093CE0();
        uint64_t v39 = v49;
        uint64_t v40 = sub_10009E230();
        unint64_t v42 = v41;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v39);
        uint64_t v52 = sub_10000DBA8(v40, v42, &v53);
        sub_10009DFC0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s - sending failedDeviceConnection for %{public}s", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v44 = v51;
    }
    uint64_t v53 = (uint64_t)v27;
    sub_10009CEC0();
    *(Class *)((char *)&v44->isa
             + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_devicePairingTerminal) = 0;
    swift_unknownObjectRelease();
    id v45 = *(Class *)((char *)&v44->isa + v50);
    *(Class *)((char *)&v44->isa + v50) = 0;
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_10009CE60();
    sub_10000D690(v24, (uint64_t)qword_1000E3488);
    id v51 = sub_10009CE40();
    os_log_type_t v25 = sub_10009DED0();
    if (os_log_type_enabled(v51, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)id v26 = 136315138;
      uint64_t v52 = sub_10000DBA8(0xD000000000000025, 0x80000001000ABA30, &v53);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v51, v25, "%s currentPairingDevice cannot be nil", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      int v43 = v51;
    }
  }
}

id sub_10009005C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TerminalBackedDevicesDiscoveryProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000901B8()
{
  return type metadata accessor for TerminalBackedDevicesDiscoveryProvider();
}

uint64_t type metadata accessor for TerminalBackedDevicesDiscoveryProvider()
{
  uint64_t result = qword_1000DB408;
  if (!qword_1000DB408) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10009020C()
{
  sub_1000392A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1000902CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100010914;
  return sub_100042090(a5);
}

void sub_1000905A0()
{
  unsigned __int8 v1 = v0;
  sub_10009080C();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    id v14 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_10000DBA8(0xD000000000000019, 0x80000001000A6CA0, (uint64_t *)&v14);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Starting device discovery", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10008DFA0();
  id v14 = v6;
  swift_getKeyPath();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100090A94;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = v1;
  uint64_t v10 = sub_10009CAB0();
  swift_release();
  swift_release();

  id v11 = *(void **)&v9[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_nearbyDeviceDiscoveryObservation];
  *(void *)&v9[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_nearbyDeviceDiscoveryObservation] = v10;

  sub_10008DFA0();
  id v13 = v12;
  [v12 activate];
}

void sub_10009080C()
{
  uint64_t v1 = v0;
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10009CE60();
  sub_10000D690(v2, (uint64_t)qword_1000E3488);
  uint64_t v3 = sub_10009CE40();
  os_log_type_t v4 = sub_10009DEA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_10000DBA8(0xD000000000000018, 0x80000001000ABA10, &v12);
    sub_10009DFC0();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Stopping device discovery", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v6 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_nearbyDeviceDiscoveryObservation;
  uint64_t v7 = *(void **)(v1
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_nearbyDeviceDiscoveryObservation);
  if (v7)
  {
    id v8 = v7;
    sub_10009CA50();

    uint64_t v7 = *(void **)(v1 + v6);
  }
  *(void *)(v1 + v6) = 0;

  uint64_t v9 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider__catSharingDeviceDiscovery;
  uint64_t v10 = *(void **)(v1
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider__catSharingDeviceDiscovery);
  if (v10)
  {
    [v10 invalidate];
    id v11 = *(void **)(v1 + v9);
  }
  else
  {
    id v11 = 0;
  }
  *(void *)(v1 + v9) = 0;
}

const char *sub_1000909E8()
{
  return "nearbyDevices";
}

void sub_1000909F4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 nearbyDevices];
  sub_100093CA0();
  uint64_t v4 = sub_10009DDC0();

  *a2 = v4;
}

uint64_t sub_100090A5C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100090A94()
{
}

uint64_t sub_100090ABC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100090AF4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_100090B20(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10009CCA0();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin(v4);
  uint64_t v54 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10009CE60();
  sub_10000D690(v6, (uint64_t)qword_1000E3488);
  id v7 = a1;
  id v8 = sub_10009CE40();
  os_log_type_t v9 = sub_10009DEA0();
  int v10 = v9;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    aBlock[0] = v53;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v58 = sub_10000DBA8(0xD000000000000015, 0x80000001000ABBC0, aBlock);
    int v52 = v10;
    sub_10009DFC0();
    *(_WORD *)(v11 + 12) = 2080;
    v51[1] = v11 + 14;
    id v12 = [v7 identifier];
    id v13 = v54;
    sub_10009CC80();

    sub_100093CE0();
    uint64_t v14 = v56;
    uint64_t v15 = sub_10009E230();
    unint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v14);
    uint64_t v58 = sub_10000DBA8(v15, v17, aBlock);
    sub_10009DFC0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, (os_log_type_t)v52, "%s: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice];
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = sub_10009CE40();
    os_log_type_t v21 = sub_10009DEB0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v58 = sub_10000DBA8(0xD000000000000015, 0x80000001000ABBC0, aBlock);
      sub_10009DFC0();
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t v53 = v22 + 14;
      id v23 = [v19 identifier];
      uint64_t v24 = v54;
      sub_10009CC80();

      sub_100093CE0();
      uint64_t v25 = v56;
      uint64_t v26 = sub_10009E230();
      unint64_t v28 = v27;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v25);
      uint64_t v58 = sub_10000DBA8(v26, v28, aBlock);
      sub_10009DFC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s Already attempting to pair with a device: %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    goto LABEL_14;
  }
  *(void *)&v2[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice] = v7;
  id v29 = v7;
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock[0]) = 0;
  BOOL v30 = v2;
  sub_10009CF40();
  sub_10008DFA0();
  id v32 = v31;
  id v33 = [v31 pairingTerminalForDevice:v29];

  uint64_t v34 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_devicePairingTerminal;
  *(void *)&v30[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_devicePairingTerminal] = v33;
  swift_unknownObjectRelease();
  unint64_t v35 = *(void **)&v30[v34];
  if (v35)
  {
    swift_unknownObjectRetain();
    unint64_t v36 = sub_10009CE40();
    os_log_type_t v37 = sub_10009DEA0();
    if (os_log_type_enabled(v36, v37))
    {
      id v38 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v38 = 136315138;
      uint64_t v58 = sub_10000DBA8(0xD000000000000015, 0x80000001000ABBC0, aBlock);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s - calling -verifyPairingAndFetchStableIdentifierWithCompletion:", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v30;
    aBlock[4] = (uint64_t)sub_100094108;
    aBlock[5] = v39;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10008ECD4;
    aBlock[3] = (uint64_t)&unk_1000CE9D0;
    uint64_t v40 = _Block_copy(aBlock);
    unint64_t v41 = v30;
    swift_release();
    [v35 verifyPairingAndFetchStableIdentifierWithCompletion:v40];
    _Block_release(v40);
    swift_unknownObjectRelease();
  }
  else
  {
    id v19 = v29;
    unint64_t v42 = sub_10009CE40();
    os_log_type_t v43 = sub_10009DEB0();
    if (!os_log_type_enabled(v42, v43))
    {

LABEL_14:
      return;
    }
    uint64_t v44 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v58 = sub_10000DBA8(0xD000000000000015, 0x80000001000ABBC0, aBlock);
    sub_10009DFC0();
    *(_WORD *)(v44 + 12) = 2082;
    uint64_t v53 = v44 + 14;
    id v45 = [v19 identifier];
    uint64_t v46 = v54;
    sub_10009CC80();

    sub_100093CE0();
    uint64_t v47 = v56;
    uint64_t v48 = sub_10009E230();
    unint64_t v50 = v49;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v46, v47);
    uint64_t v58 = sub_10000DBA8(v48, v50, aBlock);
    sub_10009DFC0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s catSharingDeviceDiscovery.pairingTerminal returned nil for %{public}s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

void sub_1000913E4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10009CCA0();
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(void **)(v2
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice);
  if (v10)
  {
    uint64_t v51 = a1;
    int v52 = v7;
    uint64_t v11 = qword_1000D51D8;
    id v12 = v10;
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10009CE60();
    uint64_t v14 = sub_10000D690(v13, (uint64_t)qword_1000E3488);
    id v15 = v12;
    unint64_t v16 = sub_10009CE40();
    os_log_type_t v17 = sub_10009DEA0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v50 = v6;
    if (v18)
    {
      uint64_t v19 = swift_slowAlloc();
      unint64_t v49 = a2;
      uint64_t v20 = v19;
      uint64_t v21 = swift_slowAlloc();
      v48[1] = v14;
      uint64_t v54 = v21;
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v53 = sub_10000DBA8(0xD000000000000013, 0x80000001000A6CE0, &v54);
      sub_10009DFC0();
      *(_WORD *)(v20 + 12) = 2082;
      id v22 = objc_msgSend(v15, "identifier", v20 + 14);
      sub_10009CC80();

      sub_100093CE0();
      uint64_t v23 = sub_10009E230();
      uint64_t v24 = v6;
      unint64_t v26 = v25;
      ((void (*)(char *, uint64_t))v52[1].isa)(v9, v24);
      uint64_t v53 = sub_10000DBA8(v23, v26, &v54);
      sub_10009DFC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v49;
      swift_slowDealloc();
    }
    else
    {
    }
    BOOL v30 = *(void **)(v3
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_devicePairingTerminal);
    if (v30)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_unknownObjectRetain();
      sub_10009CF30();
      swift_release();
      swift_release();
      if (v54)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v31 = sub_10009CE40();
        os_log_type_t v32 = sub_10009DEA0();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          *(_DWORD *)uint64_t v33 = 136315395;
          uint64_t v53 = sub_10000DBA8(0xD000000000000013, 0x80000001000A6CE0, &v54);
          sub_10009DFC0();
          *(_WORD *)(v33 + 12) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v53 = sub_10000DBA8(v51, a2, &v54);
          sub_10009DFC0();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s Trying scanned pin: %{private}s", (uint8_t *)v33, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        NSString v47 = sub_10009DC70();
        [v30 tryPIN:v47];

        swift_unknownObjectRelease();
      }
      else
      {
        os_log_type_t v43 = sub_10009CE40();
        os_log_type_t v44 = sub_10009DED0();
        if (os_log_type_enabled(v43, v44))
        {
          id v45 = (uint8_t *)swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          *(_DWORD *)id v45 = 136315138;
          uint64_t v53 = sub_10000DBA8(0xD000000000000013, 0x80000001000A6CE0, &v54);
          sub_10009DFC0();
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "%s Not ready to accept PIN yet", v45, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      id v34 = v15;
      unint64_t v35 = sub_10009CE40();
      uint64_t v36 = sub_10009DEB0();
      if (os_log_type_enabled(v35, (os_log_type_t)v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 136315394;
        uint64_t v53 = sub_10000DBA8(0xD000000000000013, 0x80000001000A6CE0, &v54);
        sub_10009DFC0();
        *(_WORD *)(v37 + 12) = 2082;
        uint64_t v51 = v37 + 14;
        id v38 = [v34 identifier];
        sub_10009CC80();

        sub_100093CE0();
        uint64_t v39 = v50;
        uint64_t v40 = sub_10009E230();
        unint64_t v42 = v41;
        ((void (*)(char *, uint64_t))v52[1].isa)(v9, v39);
        uint64_t v53 = sub_10000DBA8(v40, v42, &v54);
        sub_10009DFC0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v36, "%s The pairing terminal for %{public}s is nil", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10009CE60();
    sub_10000D690(v27, (uint64_t)qword_1000E3488);
    int v52 = sub_10009CE40();
    os_log_type_t v28 = sub_10009DEB0();
    if (os_log_type_enabled(v52, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)id v29 = 136315138;
      uint64_t v53 = sub_10000DBA8(0xD000000000000013, 0x80000001000A6CE0, &v54);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v52, v28, "%s Not currently pairing with a device", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v46 = v52;
    }
  }
}

void sub_100091D3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009CCA0();
  Class isa = v2[-1].isa;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10009CE60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v51 - v10;
  id v12 = *(void **)(v1
                 + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice);
  if (v12)
  {
    Class v60 = isa;
    unint64_t v61 = v2;
    id v59 = v9;
    uint64_t v13 = qword_1000D51D8;
    id v14 = v12;
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_10000D690(v6, (uint64_t)qword_1000E3488);
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v58(v11, v15, v6);
    id v16 = v14;
    os_log_type_t v17 = sub_10009CE40();
    os_log_type_t v18 = sub_10009DEA0();
    int v19 = v18;
    BOOL v20 = os_log_type_enabled(v17, v18);
    uint64_t v55 = v5;
    if (v20)
    {
      uint64_t v21 = swift_slowAlloc();
      int v53 = v19;
      uint64_t v22 = v21;
      uint64_t v54 = swift_slowAlloc();
      os_log_t v63 = (void (*)(void, void, void))v54;
      *(_DWORD *)uint64_t v22 = 136315394;
      os_log_t v52 = v17;
      uint64_t v62 = sub_10000DBA8(0x61506C65636E6163, 0xEF2928676E697269, (uint64_t *)&v63);
      uint64_t v57 = v6;
      v51[1] = &v63;
      sub_10009DFC0();
      *(_WORD *)(v22 + 12) = 2082;
      id v23 = objc_msgSend(v16, "identifier", v22 + 14);
      sub_10009CC80();

      sub_100093CE0();
      uint64_t v24 = v1;
      unint64_t v25 = v61;
      uint64_t v26 = sub_10009E230();
      uint64_t v56 = v7;
      unint64_t v28 = v27;
      id v29 = v25;
      uint64_t v1 = v24;
      (*((void (**)(char *, NSObject *))v60 + 1))(v5, v29);
      uint64_t v62 = sub_10000DBA8(v26, v28, (uint64_t *)&v63);
      uint64_t v6 = v57;
      sub_10009DFC0();

      BOOL v30 = v16;
      swift_bridgeObjectRelease();
      os_log_t v31 = v52;
      _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "%s %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v7 = v56;
    }
    else
    {

      BOOL v30 = v16;
    }
    id v34 = *(void (**)(char *, uint64_t))(v7 + 8);
    v34(v11, v6);
    sub_10008F804(0);
    unint64_t v35 = *(void **)(v1
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_devicePairingTerminal);
    if (v35)
    {
      [v35 invalidate];
    }
    else
    {
      uint64_t v36 = v59;
      v58(v59, v15, v6);
      id v37 = v30;
      id v38 = sub_10009CE40();
      os_log_type_t v39 = sub_10009DEB0();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v56 = v7;
        uint64_t v41 = v40;
        uint64_t v58 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        os_log_t v63 = (void (*)(void, void, void))v58;
        *(_DWORD *)uint64_t v41 = 136315394;
        uint64_t v62 = sub_10000DBA8(0x61506C65636E6163, 0xEF2928676E697269, (uint64_t *)&v63);
        uint64_t v57 = v6;
        sub_10009DFC0();
        *(_WORD *)(v41 + 12) = 2082;
        uint64_t v54 = v41 + 14;
        id v42 = [v37 identifier];
        os_log_type_t v43 = v55;
        sub_10009CC80();

        sub_100093CE0();
        os_log_type_t v44 = v61;
        uint64_t v45 = sub_10009E230();
        unint64_t v47 = v46;
        (*((void (**)(char *, NSObject *))v60 + 1))(v43, v44);
        uint64_t v62 = sub_10000DBA8(v45, v47, (uint64_t *)&v63);
        sub_10009DFC0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s The pairing terminal for %{public}s is nil", (uint8_t *)v41, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v48 = v57;
        unint64_t v49 = v59;
      }
      else
      {

        unint64_t v49 = v36;
        uint64_t v48 = v6;
      }
      v34(v49, v48);
    }
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    sub_10000D690(v6, (uint64_t)qword_1000E3488);
    unint64_t v61 = sub_10009CE40();
    os_log_type_t v32 = sub_10009DEB0();
    if (os_log_type_enabled(v61, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      os_log_t v63 = (void (*)(void, void, void))swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v62 = sub_10000DBA8(0x61506C65636E6163, 0xEF2928676E697269, (uint64_t *)&v63);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v61, v32, "%s Not currently pairing with a device", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v50 = v61;
    }
  }
}

uint64_t sub_10009250C()
{
  uint64_t v10 = type metadata accessor for DMTBackedSharingDiscoveryPrimitivesProvider();
  uint64_t v11 = &off_1000CC8D8;
  v9[0] = swift_allocObject();
  uint64_t v0 = (char *)objc_allocWithZone((Class)type metadata accessor for TerminalBackedDevicesDiscoveryProvider());
  uint64_t v1 = sub_100010138((uint64_t)v9, v10);
  __chkstk_darwin(v1);
  uint64_t v3 = (void *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v4 + 16))(v3);
  uint64_t v5 = *v3;
  swift_retain();
  id v6 = sub_10009290C(v5, v0);
  sub_1000100E8((uint64_t)v9);
  uint64_t result = swift_release();
  *(void *)&xmmword_1000E3580 = v6;
  *((void *)&xmmword_1000E3580 + 1) = &off_1000CE7A8;
  return result;
}

uint64_t sub_100092648@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009CF30();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000926C8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_10009CF40();
}

uint64_t sub_100092738(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100092814;
  return v6(a1);
}

uint64_t sub_100092814()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

id sub_10009290C(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000DB540);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[3] = type metadata accessor for DMTBackedSharingDiscoveryPrimitivesProvider();
  v19[4] = &off_1000CC8D8;
  v19[0] = a1;
  *(void *)&a2[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_operationStatus] = 0;
  *(void *)&a2[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider____lazy_storage___delegationQueue] = 0;
  *(void *)&a2[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_nearbyDeviceDiscoveryObservation] = 0;
  uint64_t v8 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_nearbyDevicesSubject;
  sub_10000D308(&qword_1000D9EE0);
  swift_allocObject();
  os_log_type_t v9 = a2;
  *(void *)&a2[v8] = sub_10009CED0();
  uint64_t v10 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_pairedDeviceConnectionSubject;
  sub_10000D308(&qword_1000D9F10);
  swift_allocObject();
  *(void *)&v9[v10] = sub_10009CED0();
  uint64_t v11 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_failedDeviceConnectionSubject;
  sub_10000D308(&qword_1000D9F38);
  swift_allocObject();
  *(void *)&v9[v11] = sub_10009CED0();
  uint64_t v12 = OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_alreadyPairedDeviceConnectionSubject;
  swift_allocObject();
  *(void *)&v9[v12] = sub_10009CED0();
  uint64_t v13 = &v9[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider__readyToAcceptPIN];
  char v18 = 0;
  sub_10009CF00();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v7, v4);
  *(void *)&v9[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider__catSharingDeviceDiscovery] = 0;
  *(void *)&v9[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice] = 0;
  *(void *)&v9[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_devicePairingTerminal] = 0;
  sub_1000102FC((uint64_t)v19, (uint64_t)&v9[OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_discoveryPrimitivesProvider]);

  id v14 = (objc_class *)type metadata accessor for TerminalBackedDevicesDiscoveryProvider();
  v17.receiver = v9;
  v17.super_class = v14;
  id v15 = objc_msgSendSuper2(&v17, "init");
  sub_1000100E8((uint64_t)v19);
  return v15;
}

void sub_100092B64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10009CCA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(Class *)((char *)&v0->isa
                + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_currentPairingDevice);
  if (v6)
  {
    uint64_t v7 = qword_1000D51D8;
    id v8 = v6;
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10009CE60();
    sub_10000D690(v9, (uint64_t)qword_1000E3488);
    id v10 = v8;
    uint64_t v11 = sub_10009CE40();
    os_log_type_t v12 = sub_10009DEA0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v26 = v1;
      uint64_t v14 = v13;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v28 = v25;
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v27 = sub_10000DBA8(0xD000000000000033, 0x80000001000ABB20, &v28);
      sub_10009DFC0();
      *(_WORD *)(v14 + 12) = 2082;
      v24[1] = v14 + 14;
      id v15 = [v10 identifier];
      sub_10009CC80();

      sub_100093CE0();
      uint64_t v16 = sub_10009E230();
      unint64_t v18 = v17;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v27 = sub_10000DBA8(v16, v18, &v28);
      sub_10009DFC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s Ready to accept PIN %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v1 = v26;
      swift_slowDealloc();
    }
    else
    {
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v28) = 1;
    uint64_t v22 = v1;
    sub_10009CF40();
  }
  else
  {
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10009CE60();
    sub_10000D690(v19, (uint64_t)qword_1000E3488);
    uint64_t v26 = sub_10009CE40();
    os_log_type_t v20 = sub_10009DED0();
    if (os_log_type_enabled(v26, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v27 = sub_10000DBA8(0xD000000000000033, 0x80000001000ABB20, &v28);
      sub_10009DFC0();
      _os_log_impl((void *)&_mh_execute_header, v26, v20, "%s called unexpectedly when we don't have a current device in pairing mode", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v23 = v26;
    }
  }
}

uint64_t sub_100093008(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000D308(&qword_1000D9350);
  uint64_t result = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    if (qword_1000D51D8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10009CE60();
    sub_10000D690(v8, (uint64_t)qword_1000E3488);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = sub_10009CE40();
    os_log_type_t v10 = sub_10009DEB0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v18 = a1;
      uint64_t v19 = v12;
      *(_DWORD *)uint64_t v11 = 136446210;
      swift_errorRetain();
      sub_10000D308(&qword_1000D5858);
      uint64_t v13 = sub_10009DCF0();
      uint64_t v18 = sub_10000DBA8(v13, v14, &v19);
      sub_10009DFC0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "CATSharingDeviceDiscovery activation failed with error: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v15 = *(void *)(v2
                    + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_operationStatus);
    if (v15)
    {
      swift_retain();
      sub_10009DE50();
      uint64_t v16 = sub_10009DE70();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 0, 1, v16);
      unint64_t v17 = (void *)swift_allocObject();
      v17[2] = 0;
      v17[3] = 0;
      v17[4] = v15;
      void v17[5] = a1;
      swift_errorRetain();
      swift_retain();
      sub_10008DD48((uint64_t)v7, (uint64_t)&unk_1000DB538, (uint64_t)v17);
      swift_release();
      swift_release();
      swift_errorRelease();
      return sub_100012628((uint64_t)v7);
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_100093310(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10009CCA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10009CE60();
  sub_10000D690(v8, (uint64_t)qword_1000E3488);
  id v9 = a1;
  os_log_type_t v10 = sub_10009CE40();
  os_log_type_t v11 = sub_10009DE90();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v20 = v2;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)uint64_t v12 = 136446210;
    v18[1] = v12 + 4;
    id v13 = [v9 identifier];
    sub_10009CC80();

    sub_100093CE0();
    uint64_t v14 = sub_10009E230();
    unint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v21 = sub_10000DBA8(v14, v16, &v22);
    sub_10009DFC0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "CATSharingDeviceDiscovery has lost device: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v22 = (uint64_t)v9;
  return sub_10009CEC0();
}

void sub_1000935B8(uint64_t a1, uint64_t (*a2)(void), const char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = v5;
  uint64_t v12 = sub_10000D308(&qword_1000D9350);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10009CE60();
  sub_10000D690(v15, (uint64_t)qword_1000E3488);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v16 = sub_10009CE40();
  os_log_type_t v17 = a2();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v28 = v10;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = a4;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = a1;
    uint64_t v31 = v20;
    *(_DWORD *)uint64_t v19 = 136446210;
    swift_errorRetain();
    sub_10000D308(&qword_1000D5858);
    uint64_t v21 = sub_10009DCF0();
    uint64_t v27 = v14;
    uint64_t v30 = sub_10000DBA8(v21, v22, &v31);
    uint64_t v10 = v28;
    sub_10009DFC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v14 = v27;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, a3, v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v23 = *(void *)(v10
                  + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension38TerminalBackedDevicesDiscoveryProvider_operationStatus);
  if (v23)
  {
    swift_retain();
    sub_10009DE50();
    uint64_t v24 = sub_10009DE70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 0, 1, v24);
    uint64_t v25 = (void *)swift_allocObject();
    void v25[2] = 0;
    v25[3] = 0;
    v25[4] = v23;
    void v25[5] = a1;
    swift_errorRetain();
    swift_retain();
    sub_10008DD48((uint64_t)v14, a5, (uint64_t)v25);
    swift_release();
    swift_release();
    sub_100012628((uint64_t)v14);
  }
}

void sub_1000938C0()
{
  sub_10000D308(&qword_1000DB4E0);
  sub_10009CA90();
  uint64_t v0 = v15;
  sub_10009CAA0();
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10009CE60();
  sub_10000D690(v1, (uint64_t)qword_1000E3488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_10009CE40();
  os_log_type_t v3 = sub_10009DEA0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    sub_10000D308(&qword_1000DB4F0);
    uint64_t v5 = sub_10009DCF0();
    sub_10000DBA8(v5, v6, &v15);
    sub_10009DFC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_10009DCF0();
    sub_10000DBA8(v7, v8, &v15);
    sub_10009DFC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "nearbyDevices changed from: %{public}s, to: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!v0) {
      return;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    if (!v15) {
      return;
    }
  }
  swift_bridgeObjectRetain_n();
  id v9 = sub_10009CE40();
  os_log_type_t v10 = sub_10009DEA0();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v11 = 136446210;
    sub_100093CA0();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10009DDD0();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_10000DBA8(v12, v14, &v15);
    sub_10009DFC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Publishing nearbyDevices to: %{public}s)", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = v0;
  sub_10009CEC0();
  swift_bridgeObjectRelease();
}

unint64_t sub_100093CA0()
{
  unint64_t result = qword_1000DB4E8;
  if (!qword_1000DB4E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000DB4E8);
  }
  return result;
}

unint64_t sub_100093CE0()
{
  unint64_t result = qword_1000D9330;
  if (!qword_1000D9330)
  {
    sub_10009CCA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D9330);
  }
  return result;
}

uint64_t sub_100093D44()
{
  uint64_t v2 = *(void *)(v0 + 40);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100010914;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100010914;
  return sub_100042090(v2);
}

uint64_t sub_100093E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000D9350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100093E94()
{
  uint64_t v2 = *(void *)(v0 + 40);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_10000CD64;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100010914;
  return sub_100042090(v2);
}

uint64_t sub_100093F7C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100093FC4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100010914;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100010914;
  return sub_100042090(v2);
}

void sub_1000940A8()
{
}

uint64_t sub_1000940CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000940DC()
{
  return swift_release();
}

void sub_1000940E4(uint64_t a1, NSObject *a2)
{
}

void sub_100094108(uint64_t a1, void *a2)
{
}

uint64_t sub_10009414C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100094174()
{
  qword_1000E3590 = 0x756F6363416D7861;
  *(void *)algn_1000E3598 = 0xEA0000000000746ELL;
}

void sub_10009419C()
{
  qword_1000E35A0 = 0x6973726556707061;
  *(void *)algn_1000E35A8 = 0xEA00000000006E6FLL;
}

void sub_1000941C4()
{
  qword_1000E35B0 = 0x7774654E69666977;
  *(void *)algn_1000E35B8 = 0xEF6F666E496B726FLL;
}

void sub_1000941F4()
{
  *(_WORD *)&algn_1000E35C8[6] = -4864;
}

uint64_t sub_100094224()
{
  uint64_t v0 = sub_10000D308(&qword_1000D9E30);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10009CB50();
  sub_10002409C(v3, qword_1000E35D0);
  uint64_t v4 = sub_10000D690(v3, (uint64_t)qword_1000E35D0);
  sub_10009CB40();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

void sub_100094354()
{
  qword_1000E35E8 = 0x73656C69666F7250;
  unk_1000E35F0 = 0xE800000000000000;
}

void sub_100094378()
{
  qword_1000E35F8 = 1868983881;
  unk_1000E3600 = 0xE400000000000000;
}

void sub_100094394()
{
  qword_1000E3608 = 0x6E6F6973726576;
  unk_1000E3610 = 0xE700000000000000;
}

void sub_1000943B8()
{
  qword_1000E3618 = 0x656C646E75424643;
  qword_1000E3620 = 0xEF6E6F6973726556;
}

void sub_1000943E8()
{
  NSString v0 = sub_10009DC70();
  char v1 = MGGetBoolAnswer();

  byte_1000E3628 = v1;
}

uint64_t sub_10009442C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NetworkProfilePickerViewModelProvider()
{
  return self;
}

void *sub_100094490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for NetworkProfilePickerViewModelProvider();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a6;
  result[4] = a2;
  result[5] = a7;
  return result;
}

uint64_t sub_1000944DC()
{
  type metadata accessor for AddDevicesToADEExtensionConfiguration();
  uint64_t v0 = swift_allocObject();
  type metadata accessor for ConcreteHostAppCommunicationProvider();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  sub_10000D308((uint64_t *)&unk_1000D6088);
  sub_10009CF00();
  swift_retain();
  sub_10000D308(&qword_1000DB6A0);
  sub_1000947B0();
  sub_10009CD80();
  *(void *)(v0 + 16) = v1;
  sub_1000948A4(&qword_1000D5AC8, 255, (void (*)(uint64_t))type metadata accessor for AddDevicesToADEExtensionConfiguration);
  sub_10009CE00();
  return swift_release();
}

uint64_t sub_100094630@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AddDevicesToAutomatedDeviceEnrollmentExtension();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_100094664()
{
  return sub_1000944DC();
}

int main(int argc, const char **argv, const char **envp)
{
  type metadata accessor for AddDevicesToAutomatedDeviceEnrollmentExtension();
  sub_1000948A4(&qword_1000DB5F8, v3, (void (*)(uint64_t))type metadata accessor for AddDevicesToAutomatedDeviceEnrollmentExtension);
  sub_1000948A4(&qword_1000D5AE0, 255, (void (*)(uint64_t))type metadata accessor for AddDevicesToADEExtensionConfiguration);
  sub_10009CDE0();
  return 0;
}

uint64_t type metadata accessor for AddDevicesToAutomatedDeviceEnrollmentExtension()
{
  return self;
}

uint64_t sub_100094770()
{
  return *(void *)(*(void *)(swift_getOpaqueTypeConformance2() + 8) + 8);
}

uint64_t sub_1000947A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100013108(v1, a1);
}

unint64_t sub_1000947B0()
{
  unint64_t result = qword_1000DB6A8;
  if (!qword_1000DB6A8)
  {
    sub_10000AF84(&qword_1000DB6A0);
    sub_1000948A4(&qword_1000DB6B0, 255, (void (*)(uint64_t))&type metadata accessor for _AnyViewConfiguration);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB6A8);
  }
  return result;
}

uint64_t sub_100094858()
{
  return sub_1000948A4(&qword_1000DB6B8, 255, (void (*)(uint64_t))type metadata accessor for AddDevicesToADEExtensionConfiguration);
}

uint64_t sub_1000948A4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PrerequisiteStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100094998);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 5;
  unsigned int v9 = v7 - 5;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for PrerequisiteStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100094A80);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_100094AA8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 5) {
    return v1 - 4;
  }
  else {
    return 0;
  }
}

unsigned char *sub_100094ABC(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrerequisiteStatus()
{
  return &type metadata for PrerequisiteStatus;
}

uint64_t *sub_100094ADC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unsigned int v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unsigned int v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 20);
    unsigned int v7 = (char *)a1 + v6;
    BOOL v8 = (char *)a2 + v6;
    uint64_t v9 = sub_10009CC50();
    os_log_type_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100094BC8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_10009CC50();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100094C40(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  unsigned int v7 = (char *)a2 + v5;
  uint64_t v8 = sub_10009CC50();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100094CD8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 20);
  unsigned int v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10009CC50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_100094D74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10009CC50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100094DF0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10009CC50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100094E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100094E98);
}

uint64_t sub_100094E98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10009CC50();
    os_log_type_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100094F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100094F68);
}

void *sub_100094F68(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_10009CC50();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    os_log_type_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DeviceStatusCompleteSectionView()
{
  uint64_t result = qword_1000DB718;
  if (!qword_1000DB718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009505C()
{
  uint64_t result = sub_10009CC50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000950F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100095110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v3 = type metadata accessor for DeviceStatusCompleteSectionView();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v57 = *(void *)(v58 + 64);
  __chkstk_darwin(v3);
  uint64_t v52 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10009CCC0();
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10009DC60();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10000D308(&qword_1000D6620);
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  __chkstk_darwin(v8);
  uint64_t v50 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10000D308(&qword_1000D71D8) - 8;
  uint64_t v10 = __chkstk_darwin(v53);
  uint64_t v54 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v49 = (char *)&v46 - v13;
  __chkstk_darwin(v12);
  uint64_t v51 = (uint64_t)&v46 - v14;
  uint64_t v15 = sub_10009CBF0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10009CC20();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009CC00();
  sub_10009CBD0();
  uint64_t v23 = sub_10009CC30();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v59 = v23;
  uint64_t v60 = v25;
  sub_10001E4B8();
  uint64_t v26 = sub_10009D750();
  uint64_t v28 = v27;
  uint64_t v47 = v29;
  LOBYTE(v18) = v30 & 1;
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v59 = sub_10009DCE0();
  uint64_t v60 = v31;
  uint64_t v32 = v52;
  sub_100095794(v46, v52);
  unint64_t v33 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v34 = swift_allocObject();
  sub_1000958EC(v32, v34 + v33);
  unint64_t v35 = v50;
  sub_10009D9A0();
  uint64_t v36 = sub_10009D8D0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = v55;
  uint64_t v38 = v56;
  uint64_t v40 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v49, v35, v56);
  uint64_t v41 = (uint64_t *)(v40 + *(int *)(v53 + 44));
  *uint64_t v41 = KeyPath;
  v41[1] = v36;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v35, v38);
  uint64_t v42 = v51;
  sub_100036F90(v40, v51);
  uint64_t v43 = v54;
  sub_100036FF8(v42, v54);
  *(void *)a2 = v26;
  *(void *)(a2 + 8) = v28;
  *(unsigned char *)(a2 + 16) = (_BYTE)v18;
  *(void *)(a2 + 24) = v47;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v44 = sub_10000D308(&qword_1000D71E0);
  sub_100036FF8(v43, a2 + *(int *)(v44 + 64));
  sub_10001F79C(v26, v28, (char)v18);
  swift_bridgeObjectRetain();
  sub_100037060(v42);
  sub_100037060(v43);
  sub_10001F7AC(v26, v28, (char)v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000956C0(void *a1)
{
  if (*a1)
  {
    uint64_t v1 = (uint64_t)a1 + *(int *)(type metadata accessor for DeviceStatusCompleteSectionView() + 20);
    swift_retain();
    sub_10001A2E0(v1);
    return swift_release();
  }
  else
  {
    type metadata accessor for DeviceStatusViewModel();
    sub_1000370C0();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_100095748@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_10009D3D0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_10000D308(&qword_1000D71D0);
  return sub_100095110(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100095794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceStatusCompleteSectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000957F8()
{
  uint64_t v1 = (int *)(type metadata accessor for DeviceStatusCompleteSectionView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000958EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceStatusCompleteSectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100095950()
{
  uint64_t v1 = *(void *)(type metadata accessor for DeviceStatusCompleteSectionView() - 8);
  uint64_t v2 = (void *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_1000956C0(v2);
}

uint64_t destroy for VisualPinScannerView(id *a1)
{
  return swift_release();
}

void *_s46AddDevicesToAutomatedDeviceEnrollmentExtension20VisualPinScannerViewVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for VisualPinScannerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for VisualPinScannerView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for VisualPinScannerView()
{
  return &type metadata for VisualPinScannerView;
}

uint64_t sub_100095AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_retain();
    sub_1000418CC(a1, a2, 1);
    return swift_release();
  }
  else
  {
    type metadata accessor for VisualPinScannerViewModel();
    sub_1000686DC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_100095B84(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = sub_10009DC80();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_100095BF0(uint64_t a1)
{
  uint64_t v2 = (void *)sub_100095DBC(a1, *(void **)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));

  return v2;
}

uint64_t sub_100095C30()
{
  return sub_10009D440();
}

uint64_t sub_100095C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100096100();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100095CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100096100();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100095D3C()
{
}

unint64_t sub_100095D68()
{
  unint64_t result = qword_1000DB750;
  if (!qword_1000DB750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB750);
  }
  return result;
}

uint64_t sub_100095DBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a2;
  _OWORD v7[3] = a3;
  v7[4] = a4;
  uint64_t v23 = sub_1000960DC;
  uint64_t v24 = v7;
  uint64_t v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_100095B84;
  unint64_t v22 = &unk_1000CEB58;
  uint64_t v8 = _Block_copy(&v19);
  swift_retain();
  id v9 = a2;
  swift_release();
  [v9 setScannedCodeHandler:v8];
  _Block_release(v8);
  [v9 setFillLayerBoundsWithVideo:1];
  [v9 start];
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10009CE60();
  sub_10000D690(v10, (uint64_t)qword_1000E3488);
  uint64_t v11 = v9;
  swift_retain();
  uint64_t v12 = sub_10009CE40();
  os_log_type_t v13 = sub_10009DEA0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    [v11 viewFinderDiameter];
    uint64_t v19 = v15;
    sub_10009DFC0();
    swift_release();

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "VisualPinScannerView view finder diameter: %f", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
    uint64_t v12 = v11;
  }

  if (a3)
  {
    swift_retain();
    [v11 viewFinderDiameter];
    uint64_t v17 = v16;
    sub_10000FF9C((void *)(a3 + 56), *(void *)(a3 + 80));
    uint64_t v19 = v17;
    LOBYTE(v20) = 0;
    swift_retain();
    sub_10009CEE0();
    swift_release();
    swift_release();
    return (uint64_t)v11;
  }
  else
  {
    type metadata accessor for VisualPinScannerViewModel();
    sub_1000686DC();
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10009609C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000960DC(uint64_t a1, uint64_t a2)
{
  return sub_100095AF8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000960E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000960F8()
{
  return swift_release();
}

unint64_t sub_100096100()
{
  unint64_t result = qword_1000DB758;
  if (!qword_1000DB758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB758);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AddDevicesExtensionContainerView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for AddDevicesExtensionContainerView()
{
  return swift_release();
}

void *assignWithCopy for AddDevicesExtensionContainerView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for AddDevicesExtensionContainerView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AddDevicesExtensionContainerView()
{
  return &type metadata for AddDevicesExtensionContainerView;
}

uint64_t sub_100096214()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100096230@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v41 = sub_10009D540();
  uint64_t v34 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10000D308(&qword_1000D7DD8);
  uint64_t v33 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  unint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10000D308(&qword_1000D7DE0);
  uint64_t v36 = *(void *)(v40 - 8);
  uint64_t v7 = __chkstk_darwin(v40);
  id v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v35 = (char *)&v33 - v10;
  uint64_t v37 = sub_10000D308(&qword_1000DB760);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AddDevicesToADEExtensionView();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = sub_10000D308(&qword_1000DB768);
  uint64_t v16 = __chkstk_darwin(v38);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v33 - v19;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  swift_release();
  if (v43 == 1)
  {
    sub_100069F14(v15);
    type metadata accessor for AddDevicesExtensionContainerViewModel();
    sub_10009694C(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
    swift_retain();
    uint64_t v21 = sub_10009CE90();
    sub_100096994((uint64_t)v15, (uint64_t)v18);
    unint64_t v22 = (uint64_t *)&v18[*(int *)(v38 + 36)];
    *unint64_t v22 = v21;
    v22[1] = a1;
    sub_1000969F8((uint64_t)v15);
    sub_100096A54((uint64_t)v18, (uint64_t)v20);
    sub_100096ABC((uint64_t)v20, (uint64_t)v12);
    swift_storeEnumTagMultiPayload();
    sub_10009687C();
    uint64_t v23 = sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
    uint64_t v24 = sub_10009694C((unint64_t *)&qword_1000D7E18, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    uint64_t v43 = v39;
    uint64_t v44 = v41;
    uint64_t v45 = v23;
    uint64_t v46 = v24;
    swift_getOpaqueTypeConformance2();
    sub_10009D4E0();
    return sub_100096B24((uint64_t)v20);
  }
  else
  {
    sub_10009D0D0();
    sub_10009D530();
    uint64_t v26 = sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
    uint64_t v27 = sub_10009694C((unint64_t *)&qword_1000D7E18, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    uint64_t v28 = v39;
    uint64_t v29 = v41;
    sub_10009D780();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v29);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v28);
    uint64_t v31 = v35;
    uint64_t v30 = v36;
    uint64_t v32 = v40;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v9, v40);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v12, v31, v32);
    swift_storeEnumTagMultiPayload();
    sub_10009687C();
    uint64_t v43 = v28;
    uint64_t v44 = v29;
    uint64_t v45 = v26;
    uint64_t v46 = v27;
    swift_getOpaqueTypeConformance2();
    sub_10009D4E0();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  }
}

uint64_t sub_10009686C@<X0>(uint64_t a1@<X8>)
{
  return sub_100096230(*(void *)(v1 + 8), a1);
}

unint64_t sub_10009687C()
{
  unint64_t result = qword_1000DB770;
  if (!qword_1000DB770)
  {
    sub_10000AF84(&qword_1000DB768);
    sub_10009694C(&qword_1000DB778, (void (*)(uint64_t))type metadata accessor for AddDevicesToADEExtensionView);
    sub_100015700(&qword_1000DA188, &qword_1000DA190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB770);
  }
  return result;
}

uint64_t sub_10009694C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100096994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddDevicesToADEExtensionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000969F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AddDevicesToADEExtensionView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100096A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000DB768);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100096ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D308(&qword_1000DB768);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100096B24(uint64_t a1)
{
  uint64_t v2 = sub_10000D308(&qword_1000DB768);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100096B88()
{
  unint64_t result = qword_1000DB780;
  if (!qword_1000DB780)
  {
    sub_10000AF84(&qword_1000DB788);
    sub_10009687C();
    sub_10000AF84(&qword_1000D7DD8);
    sub_10009D540();
    sub_100015700(&qword_1000D7E10, &qword_1000D7DD8);
    sub_10009694C((unint64_t *)&qword_1000D7E18, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB780);
  }
  return result;
}

double sub_100096CB8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100096D14(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000DB020, &qword_1000DB028).n128_u64[0];
  return result;
}

__n128 sub_100096D14@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10009DEC0();
    uint64_t v28 = (void *)sub_10009D5F0();
    sub_10009CE30();

    uint64_t v19 = a17;
  }
  sub_10009D240();
  sub_100010720(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(sub_10000D308(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  uint64_t v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_100096EE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v47 = a1;
  uint64_t v3 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000D308(&qword_1000DB798);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10000D308(&qword_1000DB7A0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000D308(&qword_1000DB7A8);
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v46 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000D308(&qword_1000DB7B0);
  uint64_t v42 = *(void *)(v15 - 8);
  uint64_t v43 = v15;
  __chkstk_darwin(v15);
  uint64_t v41 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = sub_10009DA70();
  v8[1] = v17;
  uint64_t v18 = sub_10000D308(&qword_1000DB7B8);
  sub_10009757C(v2, (uint64_t *)((char *)v8 + *(int *)(v18 + 44)));
  uint64_t v19 = (uint64_t (*)())swift_allocObject();
  long long v20 = *(_OWORD *)(v2 + 112);
  *((_OWORD *)v19 + 7) = *(_OWORD *)(v2 + 96);
  *((_OWORD *)v19 + 8) = v20;
  *((_OWORD *)v19 + 9) = *(_OWORD *)(v2 + 128);
  long long v21 = *(_OWORD *)(v2 + 48);
  *((_OWORD *)v19 + 3) = *(_OWORD *)(v2 + 32);
  *((_OWORD *)v19 + 4) = v21;
  long long v22 = *(_OWORD *)(v2 + 80);
  *((_OWORD *)v19 + 5) = *(_OWORD *)(v2 + 64);
  *((_OWORD *)v19 + 6) = v22;
  long long v23 = *(_OWORD *)(v2 + 16);
  *((_OWORD *)v19 + 1) = *(_OWORD *)v2;
  *((_OWORD *)v19 + 2) = v23;
  sub_100010720((uint64_t)v8, (uint64_t)v11, &qword_1000DB798);
  uint64_t v24 = (uint64_t (**)())&v11[*(int *)(v9 + 36)];
  *uint64_t v24 = sub_10009B4BC;
  v24[1] = v19;
  void v24[2] = 0;
  v24[3] = 0;
  sub_10009B4C4(v2);
  sub_100010864((uint64_t)v8, &qword_1000DB798);
  long long v54 = *(_OWORD *)(v2 + 96);
  sub_10000D308(&qword_1000DA1A0);
  sub_10009D980();
  uint64_t v25 = type metadata accessor for ManualPinEntryView();
  unint64_t v26 = sub_10009B56C();
  uint64_t v37 = sub_10009BA6C(&qword_1000DB7D0, (void (*)(uint64_t))type metadata accessor for ManualPinEntryView);
  unint64_t v38 = v26;
  uint64_t v39 = v25;
  uint64_t v44 = v14;
  uint64_t v40 = v9;
  sub_10009D820();
  swift_release();
  swift_release();
  sub_100010864((uint64_t)v11, &qword_1000DB7A0);
  uint64_t v27 = *(void *)(v2 + 8)
      + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel_enrollmentErrorInfo;
  swift_beginAccess();
  sub_100010720(v27, (uint64_t)v5, (uint64_t *)&unk_1000D9DD0);
  uint64_t v28 = type metadata accessor for ErrorInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v5, 1, v28))
  {
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  else
  {
    long long v31 = &v5[*(int *)(v28 + 20)];
    uint64_t v29 = *(void *)v31;
    unint64_t v30 = *((void *)v31 + 1);
    swift_bridgeObjectRetain();
  }
  sub_100010864((uint64_t)v5, (uint64_t *)&unk_1000D9DD0);
  uint64_t v52 = v29;
  unint64_t v53 = v30;
  type metadata accessor for CameraViewModel();
  sub_10009BA6C(&qword_1000DB790, (void (*)(uint64_t))type metadata accessor for CameraViewModel);
  sub_10009D1B0();
  swift_getKeyPath();
  sub_10009D1C0();
  swift_release();
  uint64_t v32 = swift_release();
  __chkstk_darwin(v32);
  sub_10000D308(&qword_1000D6620);
  uint64_t v48 = v40;
  uint64_t v49 = v39;
  unint64_t v50 = v38;
  uint64_t v51 = v37;
  swift_getOpaqueTypeConformance2();
  sub_10001E4B8();
  sub_100015700(&qword_1000DB7D8, &qword_1000D6620);
  uint64_t v33 = v46;
  __n128 v34 = v41;
  long long v35 = v44;
  sub_10009D810();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v33);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v47, v34, v43);
}

void sub_10009757C(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v3 = sub_10000D308(&qword_1000DB7E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v79 = (uint64_t *)((char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v94 = sub_10000D308(&qword_1000DB7E8);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v78 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000D308(&qword_1000DB7F0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v101 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v102 = (uint64_t)&v77 - v9;
  uint64_t v10 = sub_10000D308(&qword_1000DB7F8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10000D308(&qword_1000DB800);
  __chkstk_darwin(v84);
  uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000D308(&qword_1000DB808);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v100 = (uint64_t)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v85 = (uint64_t)&v77 - v19;
  __chkstk_darwin(v18);
  uint64_t v105 = (uint64_t)&v77 - v20;
  uint64_t v21 = sub_10009CCC0();
  __chkstk_darwin(v21 - 8);
  uint64_t v22 = sub_10009DC60();
  __chkstk_darwin(v22 - 8);
  id v91 = [objc_allocWithZone((Class)VPScannerView) init];
  type metadata accessor for VisualPinScannerViewModel();
  sub_10009BA6C((unint64_t *)&qword_1000D9BF0, (void (*)(uint64_t))type metadata accessor for VisualPinScannerViewModel);
  uint64_t v92 = sub_10009D280();
  uint64_t v90 = v23;
  uint64_t v89 = sub_10009D1F0();
  int v88 = sub_10009D600();
  long long v109 = *(_OWORD *)a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  sub_10009B61C((uint64_t)&v109);
  if (v107 - 5 >= 2)
  {
    uint64_t v24 = *(void *)(a1 + 88);
    uint64_t v106 = *(void *)(a1 + 80);
    sub_10009B700((uint64_t)&v109);
    type metadata accessor for CameraViewModel();
    sub_10009BA6C(&qword_1000DB790, (void (*)(uint64_t))type metadata accessor for CameraViewModel);
    uint64_t v99 = v24;
    swift_retain();
    uint64_t v104 = sub_10009D1A0();
    uint64_t v98 = v25;
    uint64_t v103 = sub_10009D1F0();
    int v97 = sub_10009D600();
  }
  else
  {
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    uint64_t v106 = 0;
    int v97 = 0;
  }
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v83 = sub_10009DCE0();
  uint64_t v87 = v26;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  sub_10009B61C((uint64_t)&v109);
  double v27 = 20.0;
  if ((v107 & 1) == 0)
  {
    long long v107 = *(_OWORD *)(a1 + 112);
    sub_10000D308(&qword_1000D64E8);
    sub_10009D960();
    double v27 = v108;
  }
  uint64_t v28 = (_OWORD *)swift_allocObject();
  long long v29 = *(_OWORD *)(a1 + 112);
  v28[7] = *(_OWORD *)(a1 + 96);
  v28[8] = v29;
  v28[9] = *(_OWORD *)(a1 + 128);
  long long v30 = *(_OWORD *)(a1 + 48);
  v28[3] = *(_OWORD *)(a1 + 32);
  v28[4] = v30;
  long long v31 = *(_OWORD *)(a1 + 80);
  v28[5] = *(_OWORD *)(a1 + 64);
  v28[6] = v31;
  long long v32 = *(_OWORD *)(a1 + 16);
  v28[1] = *(_OWORD *)a1;
  v28[2] = v32;
  uint64_t v86 = v28;
  sub_10009B4C4(a1);
  uint64_t v82 = sub_10009DA90();
  uint64_t v81 = v33;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  sub_10009B61C((uint64_t)&v109);
  if (v107)
  {
    long long v95 = 0;
    uint64_t v96 = 0;
  }
  else
  {
    __n128 v34 = (_OWORD *)swift_allocObject();
    long long v35 = *(_OWORD *)(a1 + 112);
    v34[7] = *(_OWORD *)(a1 + 96);
    v34[8] = v35;
    v34[9] = *(_OWORD *)(a1 + 128);
    long long v36 = *(_OWORD *)(a1 + 48);
    void v34[3] = *(_OWORD *)(a1 + 32);
    v34[4] = v36;
    long long v37 = *(_OWORD *)(a1 + 80);
    v34[5] = *(_OWORD *)(a1 + 64);
    v34[6] = v37;
    long long v38 = *(_OWORD *)(a1 + 16);
    v34[1] = *(_OWORD *)a1;
    void v34[2] = v38;
    uint64_t v96 = v34;
    sub_10009B4C4(a1);
    long long v95 = sub_10009B668;
  }
  *(void *)uint64_t v12 = sub_10009D400();
  *((void *)v12 + 1) = 0;
  unsigned char v12[16] = 1;
  uint64_t v39 = &v12[*(int *)(sub_10000D308(&qword_1000DB810) + 44)];
  *(void *)uint64_t v39 = sub_10009D3D0();
  *((void *)v39 + 1) = 0;
  v39[16] = 1;
  uint64_t v40 = sub_10000D308(&qword_1000DB818);
  sub_10009AC28(&v39[*(int *)(v40 + 44)]);
  LOBYTE(v39) = sub_10009D630();
  unsigned __int8 v41 = sub_10009D650();
  char v42 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v39) {
    char v42 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v41) {
    char v42 = sub_10009D640();
  }
  sub_100010720((uint64_t)v12, (uint64_t)v14, &qword_1000DB7F8);
  uint64_t v43 = &v14[*(int *)(v84 + 36)];
  *uint64_t v43 = v42;
  *(_OWORD *)(v43 + 8) = 0u;
  *(_OWORD *)(v43 + 24) = 0u;
  uint64_t v44 = 1;
  v43[40] = 1;
  sub_100010864((uint64_t)v12, &qword_1000DB7F8);
  uint64_t v45 = sub_10009DA80();
  uint64_t v46 = v85;
  sub_100096D14(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v85, 0.0, 1, INFINITY, 0, v45, v47, &qword_1000DB800, &qword_1000DB808);
  sub_100010864((uint64_t)v14, &qword_1000DB800);
  sub_100010800(v46, v105, &qword_1000DB808);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  sub_10009B61C((uint64_t)&v109);
  uint64_t v48 = v94;
  if (v107 == 5)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    sub_10009B61C((uint64_t)&v109);
    if ((BYTE8(v107) & 1) == 0)
    {
      double v49 = *(double *)&v107;
      uint64_t v50 = sub_10009D400();
      uint64_t v51 = (uint64_t)v79;
      *uint64_t v79 = v50;
      *(void *)(v51 + 8) = 0;
      *(unsigned char *)(v51 + 16) = 1;
      uint64_t v52 = sub_10000D308(&qword_1000DB828);
      sub_10009906C((long long *)a1, v51 + *(int *)(v52 + 44));
      long long v107 = *(_OWORD *)(a1 + 128);
      sub_10000D308(&qword_1000D64E8);
      sub_10009D960();
      double v53 = v49 + v108 * 0.5;
      uint64_t v54 = v78;
      sub_100010720(v51, v78, &qword_1000DB7E0);
      uint64_t v55 = v54 + *(int *)(v48 + 36);
      *(void *)uint64_t v55 = 0;
      *(double *)(v55 + 8) = v53;
      sub_100010864(v51, &qword_1000DB7E0);
      sub_100010800(v54, v102, &qword_1000DB7E8);
      uint64_t v44 = 0;
    }
  }
  uint64_t v56 = v102;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v102, v44, 1, v48);
  uint64_t v57 = v100;
  sub_100010720(v105, v100, &qword_1000DB808);
  uint64_t v58 = v101;
  sub_100010720(v56, v101, &qword_1000DB7F0);
  uint64_t v59 = v91;
  uint64_t v60 = v80;
  uint64_t v61 = v92;
  *uint64_t v80 = v91;
  v60[1] = v61;
  uint64_t v62 = v89;
  void v60[2] = v90;
  v60[3] = v62;
  *((unsigned char *)v60 + 32) = v88;
  uint64_t v64 = v103;
  uint64_t v63 = v104;
  uint64_t v65 = v98;
  v60[5] = v104;
  v60[6] = v65;
  uint64_t v66 = v99;
  v60[7] = v106;
  v60[8] = v66;
  v60[9] = v64;
  *((unsigned char *)v60 + 80) = v97;
  uint64_t v67 = v87;
  v60[11] = v83;
  v60[12] = v67;
  v60[13] = 0;
  *((double *)v60 + 14) = v27;
  uint64_t v68 = v86;
  v60[15] = sub_10009B65C;
  v60[16] = v68;
  uint64_t v69 = v81;
  v60[17] = v82;
  v60[18] = v69;
  uint64_t v70 = v96;
  v60[19] = v95;
  v60[20] = v70;
  uint64_t v71 = sub_10000D308(&qword_1000DB820);
  sub_100010720(v57, (uint64_t)v60 + *(int *)(v71 + 96), &qword_1000DB808);
  sub_100010720(v58, (uint64_t)v60 + *(int *)(v71 + 112), &qword_1000DB7F0);
  swift_retain();
  id v72 = v59;
  uint64_t v73 = v63;
  uint64_t v74 = v98;
  sub_10009B670(v73, v98);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v75 = v95;
  sub_100046854((uint64_t)v95);
  id v76 = v72;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100010864(v102, &qword_1000DB7F0);
  sub_100010864(v105, &qword_1000DB808);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  sub_100010864(v101, &qword_1000DB7F0);
  sub_100010864(v100, &qword_1000DB808);
  sub_100042A34((uint64_t)v75);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10009B6B4(v104, v74);
  swift_release();
}

uint64_t sub_1000981D8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  long long v29 = a3;
  uint64_t v5 = sub_10009DB00();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10009DB30();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10009D140();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B664();
  uint64_t v25 = sub_10009DF00();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  long long v17 = a2[7];
  *((_OWORD *)v16 + 7) = a2[6];
  *((_OWORD *)v16 + 8) = v17;
  *((_OWORD *)v16 + 9) = a2[8];
  long long v18 = a2[3];
  *((_OWORD *)v16 + 3) = a2[2];
  *((_OWORD *)v16 + 4) = v18;
  long long v19 = a2[5];
  *((_OWORD *)v16 + 5) = a2[4];
  *((_OWORD *)v16 + 6) = v19;
  long long v20 = a2[1];
  *((_OWORD *)v16 + 1) = *a2;
  *((_OWORD *)v16 + 2) = v20;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v16[v15], v14, v11);
  aBlock[4] = sub_10009BD8C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100026280;
  aBlock[3] = &unk_1000CEE08;
  uint64_t v21 = _Block_copy(aBlock);
  sub_10009B4C4((uint64_t)a2);
  swift_release();
  sub_10009DB20();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10009BA6C((unint64_t *)&qword_1000D9F80, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000D308(&qword_1000D69F0);
  sub_100015700((unint64_t *)&qword_1000D9F90, &qword_1000D69F0);
  sub_10009E010();
  uint64_t v22 = (void *)v25;
  sub_10009DF10();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
  uint64_t result = sub_10009D8E0();
  *long long v29 = result;
  return result;
}

uint64_t sub_1000985A8()
{
  return sub_10009D970();
}

uint64_t sub_100098610@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000D308(&qword_1000DB888);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_10009D3D0();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_10000D308(&qword_1000DB890);
  sub_100098714(a1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  LOBYTE(a1) = sub_10009D600();
  sub_100010720((uint64_t)v6, a2, &qword_1000DB888);
  uint64_t v8 = a2 + *(int *)(sub_10000D308(&qword_1000DB898) + 36);
  *(unsigned char *)uint64_t v8 = a1;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(unsigned char *)(v8 + 40) = 1;
  return sub_100010864((uint64_t)v6, &qword_1000DB888);
}

uint64_t sub_100098714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v69 = sub_10000D308(&qword_1000DB8A0);
  __chkstk_darwin(v69);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10009CCC0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10009DC60();
  __chkstk_darwin(v6 - 8);
  uint64_t v67 = sub_10000D308(&qword_1000D6620);
  uint64_t v7 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10000D308(&qword_1000D6628);
  __chkstk_darwin(v66);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10000D308(&qword_1000DB8A8);
  uint64_t v12 = __chkstk_darwin(v68);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v62 - v15;
  uint64_t v17 = sub_10000D308(&qword_1000DB8B0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = *(void *)(a1 + 32);
  if (v21)
  {
    uint64_t v72 = (uint64_t)&v62 - v19;
    uint64_t v70 = v20;
    if ((*(unsigned char *)(v21
                   + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension37AddDevicesExtensionContainerViewModel_hostAppInfo) & 1) != 0)
    {
      sub_10009D130();
      sub_10009DA90();
      sub_10009D0E0();
      uint64_t v22 = v73;
      char v23 = BYTE8(v73);
      uint64_t v24 = v74;
      char v25 = BYTE8(v74);
      *(void *)uint64_t v4 = 0;
      v4[8] = 1;
      *((void *)v4 + 2) = v22;
      v4[24] = v23;
      *((void *)v4 + 4) = v24;
      unsigned char v4[40] = v25;
      *((_OWORD *)v4 + 3) = v75;
      swift_storeEnumTagMultiPayload();
      sub_10000D308(&qword_1000D8D50);
      sub_10009BB38();
      sub_1000540BC();
      sub_10009D4E0();
    }
    else
    {
      sub_10009DC00();
      sub_10009CCB0();
      uint64_t v76 = sub_10009DCE0();
      uint64_t v77 = v26;
      uint64_t v27 = (_OWORD *)swift_allocObject();
      long long v28 = *(_OWORD *)(a1 + 112);
      v27[7] = *(_OWORD *)(a1 + 96);
      unsigned char v27[8] = v28;
      v27[9] = *(_OWORD *)(a1 + 128);
      long long v29 = *(_OWORD *)(a1 + 48);
      v27[3] = *(_OWORD *)(a1 + 32);
      v27[4] = v29;
      long long v30 = *(_OWORD *)(a1 + 80);
      v27[5] = *(_OWORD *)(a1 + 64);
      v27[6] = v30;
      long long v31 = *(_OWORD *)(a1 + 16);
      v27[1] = *(_OWORD *)a1;
      v27[2] = v31;
      sub_10009B4C4(a1);
      sub_10001E4B8();
      sub_10009D9A0();
      sub_10009D130();
      sub_10009DAA0();
      sub_10009D0E0();
      uint64_t v32 = v67;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v9, v67);
      uint64_t v33 = &v11[*(int *)(v66 + 36)];
      long long v34 = v74;
      *(_OWORD *)uint64_t v33 = v73;
      *((_OWORD *)v33 + 1) = v34;
      *((_OWORD *)v33 + 2) = v75;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
      uint64_t KeyPath = swift_getKeyPath();
      sub_100010720((uint64_t)v11, (uint64_t)v14, &qword_1000D6628);
      long long v36 = &v14[*(int *)(v68 + 36)];
      *(void *)long long v36 = KeyPath;
      *((void *)v36 + 1) = 1;
      v36[16] = 0;
      sub_100010864((uint64_t)v11, &qword_1000D6628);
      sub_100010800((uint64_t)v14, (uint64_t)v16, &qword_1000DB8A8);
      sub_100010720((uint64_t)v16, (uint64_t)v4, &qword_1000DB8A8);
      swift_storeEnumTagMultiPayload();
      sub_10000D308(&qword_1000D8D50);
      sub_10009BB38();
      sub_1000540BC();
      sub_10009D4E0();
      sub_100010864((uint64_t)v16, &qword_1000DB8A8);
    }
    long long v82 = *(_OWORD *)a1;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10009CF30();
    swift_release();
    swift_release();
    sub_10009B61C((uint64_t)&v82);
    sub_10001E4B8();
    uint64_t v37 = sub_10009D750();
    uint64_t v68 = v39;
    uint64_t v69 = v38;
    LODWORD(v67) = v40 & 1;
    uint64_t v66 = swift_getKeyPath();
    uint64_t v41 = sub_10009D900();
    uint64_t v42 = swift_getKeyPath();
    sub_10009D130();
    sub_10009DA90();
    sub_10009D0E0();
    uint64_t v43 = v76;
    int v65 = v77;
    uint64_t v64 = v78;
    int v63 = v79;
    uint64_t v44 = v81;
    uint64_t v62 = v80;
    uint64_t v45 = v72;
    uint64_t v46 = v70;
    sub_100010720(v72, v70, &qword_1000DB8B0);
    uint64_t v47 = v71;
    sub_100010720(v46, v71, &qword_1000DB8B0);
    uint64_t v48 = (int *)sub_10000D308(&qword_1000DB8C8);
    uint64_t v49 = v47 + v48[12];
    *(void *)uint64_t v49 = 0;
    *(unsigned char *)(v49 + 8) = 1;
    uint64_t v50 = v47 + v48[16];
    uint64_t v51 = v37;
    uint64_t v53 = v68;
    uint64_t v52 = v69;
    *(void *)uint64_t v50 = v37;
    *(void *)(v50 + 8) = v52;
    char v54 = v67;
    *(unsigned char *)(v50 + 16) = v67;
    uint64_t v55 = v66;
    *(void *)(v50 + 24) = v53;
    *(void *)(v50 + 32) = v55;
    *(void *)(v50 + 40) = 1;
    *(unsigned char *)(v50 + 48) = 0;
    *(void *)(v50 + 56) = v42;
    *(void *)(v50 + 64) = v41;
    uint64_t v56 = v47 + v48[20];
    *(void *)uint64_t v56 = 0;
    *(unsigned char *)(v56 + 8) = 1;
    uint64_t v57 = v47 + v48[24];
    *(void *)uint64_t v57 = 0;
    *(unsigned char *)(v57 + 8) = 1;
    *(void *)(v57 + 16) = v43;
    *(unsigned char *)(v57 + 24) = v65;
    *(void *)(v57 + 32) = v64;
    *(unsigned char *)(v57 + 40) = v63;
    *(void *)(v57 + 48) = v62;
    *(void *)(v57 + 56) = v44;
    uint64_t v58 = v51;
    uint64_t v59 = v52;
    char v60 = v54;
    sub_10001F79C(v51, v52, v54);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100010864(v45, &qword_1000DB8B0);
    sub_10001F7AC(v58, v59, v60);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_100010864(v46, &qword_1000DB8B0);
  }
  else
  {
    type metadata accessor for AddDevicesExtensionContainerViewModel();
    sub_10009BA6C(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
    uint64_t result = sub_10009D260();
    __break(1u);
  }
  return result;
}

id sub_100098FD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 16);
    return [v2 dismissAutomatedDeviceEnrollmentAdditionExtension];
  }
  else
  {
    type metadata accessor for AddDevicesExtensionContainerViewModel();
    sub_10009BA6C(&qword_1000D5990, (void (*)(uint64_t))type metadata accessor for AddDevicesExtensionContainerViewModel);
    id result = (id)sub_10009D260();
    __break(1u);
  }
  return result;
}

uint64_t sub_10009906C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000D308(&qword_1000DB830);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000D308(&qword_1000DB838);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v27 - v12;
  *(void *)uint64_t v6 = sub_10009D400();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v14 = sub_10000D308(&qword_1000DB840);
  sub_1000992A4(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  uint64_t v15 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))swift_allocObject();
  long long v16 = a1[7];
  *((_OWORD *)v15 + 7) = a1[6];
  *((_OWORD *)v15 + 8) = v16;
  *((_OWORD *)v15 + 9) = a1[8];
  long long v17 = a1[3];
  *((_OWORD *)v15 + 3) = a1[2];
  *((_OWORD *)v15 + 4) = v17;
  long long v18 = a1[5];
  *((_OWORD *)v15 + 5) = a1[4];
  *((_OWORD *)v15 + 6) = v18;
  long long v19 = a1[1];
  *((_OWORD *)v15 + 1) = *a1;
  *((_OWORD *)v15 + 2) = v19;
  sub_10009B4C4((uint64_t)a1);
  uint64_t v20 = sub_10009DA90();
  uint64_t v22 = v21;
  sub_100010720((uint64_t)v6, (uint64_t)v11, &qword_1000DB830);
  char v23 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v11[*(int *)(v8 + 44)];
  *char v23 = sub_10009B730;
  v23[1] = v15;
  _OWORD v23[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v20;
  void v23[3] = v22;
  sub_100010864((uint64_t)v6, &qword_1000DB830);
  sub_100010800((uint64_t)v11, (uint64_t)v13, &qword_1000DB838);
  sub_100010720((uint64_t)v13, (uint64_t)v11, &qword_1000DB838);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v24 = sub_10000D308(&qword_1000DB848);
  sub_100010720((uint64_t)v11, a2 + *(int *)(v24 + 48), &qword_1000DB838);
  uint64_t v25 = a2 + *(int *)(v24 + 64);
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  sub_100010864((uint64_t)v13, &qword_1000DB838);
  return sub_100010864((uint64_t)v11, &qword_1000DB838);
}

uint64_t sub_1000992A4@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000D308(&qword_1000DB048);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v44 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = sub_10000D308(&qword_1000DB050);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v45 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = sub_10000D308(&qword_1000DB850);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  long long v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v19 = (char *)&v37 - v18;
  uint64_t v46 = sub_10009D3D0();
  sub_100099860(a1, (uint64_t)v66);
  *(_OWORD *)&v67[71] = v66[4];
  *(_OWORD *)&v67[87] = v66[5];
  *(_OWORD *)&v67[103] = v66[6];
  *(_OWORD *)&v67[119] = v66[7];
  *(_OWORD *)&v67[7] = v66[0];
  *(_OWORD *)&v67[23] = v66[1];
  *(_OWORD *)&v67[39] = v66[2];
  char v68 = 1;
  *(_OWORD *)&v67[55] = v66[3];
  long long v65 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  sub_10009B61C((uint64_t)&v65);
  if (LOBYTE(v49[0]) == 1)
  {
    if (qword_1000D5240 != -1) {
      swift_once();
    }
    sub_10009DA90();
    sub_10009D0E0();
    uint64_t v43 = v59;
    int v42 = v60;
    uint64_t v41 = v61;
    int v40 = v62;
    uint64_t v38 = v64;
    uint64_t v39 = v63;
    *(void *)uint64_t v13 = sub_10009D3D0();
    *((void *)v13 + 1) = 0;
    v13[16] = 1;
    uint64_t v20 = &v13[*(int *)(sub_10000D308(&qword_1000DB058) + 44)];
    sub_100099AC0((uint64_t)v8);
    uint64_t v21 = v44;
    sub_100010720((uint64_t)v8, v44, &qword_1000DB048);
    *(void *)uint64_t v20 = 0;
    v20[8] = 1;
    uint64_t v22 = sub_10000D308(&qword_1000DB060);
    sub_100010720(v21, (uint64_t)&v20[*(int *)(v22 + 48)], &qword_1000DB048);
    char v23 = &v20[*(int *)(v22 + 64)];
    *(void *)char v23 = 0;
    v23[8] = 1;
    sub_100010864((uint64_t)v8, &qword_1000DB048);
    sub_100010864(v21, &qword_1000DB048);
    uint64_t v24 = v45;
    sub_100010720((uint64_t)v13, v45, &qword_1000DB050);
    *(void *)long long v17 = 0;
    v17[8] = 1;
    *((void *)v17 + 2) = v43;
    v17[24] = v42;
    *((void *)v17 + 4) = v41;
    v17[40] = v40;
    uint64_t v25 = v38;
    *((void *)v17 + 6) = v39;
    *((void *)v17 + 7) = v25;
    uint64_t v26 = sub_10000D308(&qword_1000DB868);
    sub_100010720(v24, (uint64_t)&v17[*(int *)(v26 + 48)], &qword_1000DB050);
    sub_100010864((uint64_t)v13, &qword_1000DB050);
    sub_100010864(v24, &qword_1000DB050);
    uint64_t v27 = sub_10000D308(&qword_1000DB858);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 0, 1, v27);
    sub_100010800((uint64_t)v17, (uint64_t)v19, &qword_1000DB850);
  }
  else
  {
    uint64_t v28 = sub_10000D308(&qword_1000DB858);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v19, 1, 1, v28);
  }
  sub_100010720((uint64_t)v19, (uint64_t)v17, &qword_1000DB850);
  *(_OWORD *)&v48[33] = *(_OWORD *)&v67[32];
  *(_OWORD *)&v48[17] = *(_OWORD *)&v67[16];
  *(_OWORD *)&v48[81] = *(_OWORD *)&v67[80];
  *(_OWORD *)&v48[97] = *(_OWORD *)&v67[96];
  *(_OWORD *)&v48[113] = *(_OWORD *)&v67[112];
  *(_OWORD *)&v48[49] = *(_OWORD *)&v67[48];
  uint64_t v29 = v46;
  long long v47 = (unint64_t)v46;
  v48[0] = 1;
  uint64_t v30 = *(void *)&v67[127];
  *(void *)&v48[128] = *(void *)&v67[127];
  *(_OWORD *)&v48[65] = *(_OWORD *)&v67[64];
  *(_OWORD *)&v48[1] = *(_OWORD *)v67;
  long long v31 = *(_OWORD *)&v48[96];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v48[80];
  *(_OWORD *)(a2 + 112) = v31;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v48[112];
  *(void *)(a2 + 144) = v30;
  long long v32 = *(_OWORD *)&v48[32];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v48[16];
  *(_OWORD *)(a2 + 48) = v32;
  long long v33 = *(_OWORD *)&v48[64];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v48[48];
  *(_OWORD *)(a2 + 80) = v33;
  long long v34 = *(_OWORD *)v48;
  *(_OWORD *)a2 = v47;
  *(_OWORD *)(a2 + 16) = v34;
  uint64_t v35 = sub_10000D308(&qword_1000DB860);
  sub_100010720((uint64_t)v17, a2 + *(int *)(v35 + 48), &qword_1000DB850);
  sub_10009B8CC((uint64_t)&v47);
  sub_100010864((uint64_t)v19, &qword_1000DB850);
  sub_100010864((uint64_t)v17, &qword_1000DB850);
  long long v56 = *(_OWORD *)&v67[80];
  long long v57 = *(_OWORD *)&v67[96];
  *(_OWORD *)uint64_t v58 = *(_OWORD *)&v67[112];
  long long v52 = *(_OWORD *)&v67[16];
  long long v53 = *(_OWORD *)&v67[32];
  long long v54 = *(_OWORD *)&v67[48];
  long long v55 = *(_OWORD *)&v67[64];
  v49[0] = v29;
  v49[1] = 0;
  char v50 = 1;
  *(void *)&v58[15] = *(void *)&v67[127];
  long long v51 = *(_OWORD *)v67;
  return sub_10009B93C((uint64_t)v49);
}

double sub_100099860@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v23 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  sub_10009B61C((uint64_t)&v23);
  sub_10001E4B8();
  uint64_t v3 = sub_10009D750();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_10009D900();
  uint64_t v20 = sub_10009D720();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_10001F7AC(v3, v5, v7);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  unsigned __int8 v15 = sub_10009D630();
  unsigned __int8 v16 = sub_10009D650();
  char v17 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v15) {
    char v17 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v16) {
    char v17 = sub_10009D640();
  }
  sub_10009D0F0();
  sub_10009DAD0();
  uint64_t v18 = sub_10009D100();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10009CF30();
  swift_release();
  swift_release();
  sub_10009B61C((uint64_t)&v23);
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = v11 & 1;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = v17;
  double result = 0.0;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(unsigned char *)(a2 + 96) = 1;
  *(void *)(a2 + 104) = v18;
  *(void *)(a2 + 112) = v21;
  *(void *)(a2 + 120) = v22;
  return result;
}

uint64_t sub_100099AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v78 = sub_10009D230();
  __chkstk_darwin(v78);
  unsigned __int8 v79 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10009DA60();
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  __chkstk_darwin(v3);
  long long v75 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10009CCC0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10009DC60();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10000D308(&qword_1000D6620);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10000D308(&qword_1000D8D40);
  __chkstk_darwin(v71);
  uint64_t v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10000D308(&qword_1000DB070);
  __chkstk_darwin(v72);
  uint64_t v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10000D308(&qword_1000DB078);
  __chkstk_darwin(v73);
  unsigned __int8 v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10000D308(&qword_1000DB080);
  __chkstk_darwin(v74);
  uint64_t v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009DC00();
  sub_10009CCB0();
  uint64_t v81 = sub_10009DCE0();
  uint64_t v82 = v19;
  uint64_t v20 = (_OWORD *)swift_allocObject();
  long long v21 = v1[7];
  v20[7] = v1[6];
  v20[8] = v21;
  v20[9] = v1[8];
  long long v22 = v1[3];
  v20[3] = v1[2];
  v20[4] = v22;
  long long v23 = v1[5];
  v20[5] = v1[4];
  v20[6] = v23;
  long long v24 = v1[1];
  v20[1] = *v1;
  _OWORD v20[2] = v24;
  sub_10009B4C4((uint64_t)v1);
  sub_10001E4B8();
  sub_10009D9A0();
  unsigned __int8 v25 = sub_10009D610();
  unsigned __int8 v26 = sub_10009D620();
  char v27 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v25) {
    char v27 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v26) {
    char v27 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v7);
  long long v36 = &v12[*(int *)(v71 + 36)];
  *long long v36 = v27;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  unsigned __int8 v37 = sub_10009D630();
  unsigned __int8 v38 = sub_10009D650();
  char v39 = sub_10009D640();
  sub_10009D640();
  if (sub_10009D640() != v37) {
    char v39 = sub_10009D640();
  }
  sub_10009D640();
  if (sub_10009D640() != v38) {
    char v39 = sub_10009D640();
  }
  sub_10009D070();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  sub_100010720((uint64_t)v12, (uint64_t)v14, &qword_1000D8D40);
  uint64_t v48 = &v14[*(int *)(v72 + 36)];
  *uint64_t v48 = v39;
  *((void *)v48 + 1) = v41;
  *((void *)v48 + 2) = v43;
  *((void *)v48 + 3) = v45;
  *((void *)v48 + 4) = v47;
  v48[40] = 0;
  sub_100010864((uint64_t)v12, &qword_1000D8D40);
  uint64_t v49 = v75;
  sub_10009DA50();
  char v50 = sub_10009D600();
  long long v51 = &v16[*(int *)(v73 + 36)];
  uint64_t v53 = v76;
  uint64_t v52 = v77;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v51, v49, v77);
  v51[*(int *)(sub_10000D308(&qword_1000D9400) + 36)] = v50;
  sub_100010720((uint64_t)v14, (uint64_t)v16, &qword_1000DB070);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v49, v52);
  sub_100010864((uint64_t)v14, &qword_1000DB070);
  uint64_t v54 = sub_10009D900();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100010720((uint64_t)v16, (uint64_t)v18, &qword_1000DB078);
  long long v56 = (uint64_t *)&v18[*(int *)(v74 + 36)];
  uint64_t *v56 = KeyPath;
  v56[1] = v54;
  sub_100010864((uint64_t)v16, &qword_1000DB078);
  long long v57 = v79;
  uint64_t v58 = &v79[*(int *)(v78 + 20)];
  uint64_t v59 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v60 = sub_10009D3F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 104))(v58, v59, v60);
  __asm { FMOV            V0.2D, #20.0 }
  *long long v57 = _Q0;
  uint64_t v66 = sub_10000D308(&qword_1000DB048);
  uint64_t v67 = v80;
  uint64_t v68 = v80 + *(int *)(v66 + 36);
  sub_100088780((uint64_t)v57, v68);
  *(_WORD *)(v68 + *(int *)(sub_10000D308(&qword_1000DB088) + 36)) = 256;
  sub_100010720((uint64_t)v18, v67, &qword_1000DB080);
  sub_1000887E4((uint64_t)v57);
  return sub_100010864((uint64_t)v18, &qword_1000DB080);
}

uint64_t sub_10009A234@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v5 = sub_10009DB00();
  uint64_t v30 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10009DB30();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10009D140();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B664();
  uint64_t v27 = sub_10009DF00();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, v11);
  uint64_t v18 = (_OWORD *)(v17 + v16);
  long long v19 = a2[7];
  v18[6] = a2[6];
  v18[7] = v19;
  void v18[8] = a2[8];
  long long v20 = a2[3];
  void v18[2] = a2[2];
  v18[3] = v20;
  long long v21 = a2[5];
  v18[4] = a2[4];
  void v18[5] = v21;
  long long v22 = a2[1];
  *uint64_t v18 = *a2;
  v18[1] = v22;
  aBlock[4] = sub_10009B820;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100026280;
  aBlock[3] = &unk_1000CED68;
  long long v23 = _Block_copy(aBlock);
  sub_10009B4C4((uint64_t)a2);
  swift_release();
  sub_10009DB20();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10009BA6C((unint64_t *)&qword_1000D9F80, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000D308(&qword_1000D69F0);
  sub_100015700((unint64_t *)&qword_1000D9F90, &qword_1000D69F0);
  sub_10009E010();
  long long v24 = (void *)v27;
  sub_10009DF10();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
  uint64_t result = sub_10009D8E0();
  *uint64_t v31 = result;
  return result;
}

uint64_t sub_10009A614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009D140();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D51D8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10009CE60();
  sub_10000D690(v8, (uint64_t)qword_1000E3488);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v9 = sub_10009CE40();
  os_log_type_t v10 = sub_10009DEA0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    v16[0] = a2;
    uint64_t v12 = v11;
    *(_DWORD *)uint64_t v11 = 134217984;
    sub_10009D130();
    *(void *)&long long v17 = v13;
    sub_10009DFC0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Status container dimensions: %f", v12, 0xCu);
    a2 = v16[0];
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  sub_10009D130();
  long long v17 = *(_OWORD *)(a2 + 128);
  v16[1] = v14;
  sub_10000D308(&qword_1000D64E8);
  return sub_10009D970();
}

uint64_t sub_10009A850(long long *a1)
{
  long long v2 = *a1;
  swift_retain();
  sub_100082588();
  return sub_10009B61C((uint64_t)&v2);
}

uint64_t sub_10009A898()
{
  uint64_t v0 = sub_10009CCC0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10009DC60();
  __chkstk_darwin(v1 - 8);
  sub_10009DC00();
  sub_10009CCB0();
  sub_10009DCE0();
  sub_10001E4B8();
  return sub_10009D9A0();
}

uint64_t sub_10009A9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000D308((uint64_t *)&unk_1000D9DD0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 8)
     + OBJC_IVAR____TtC46AddDevicesToAutomatedDeviceEnrollmentExtension15CameraViewModel_enrollmentErrorInfo;
  swift_beginAccess();
  sub_100010720(v7, (uint64_t)v6, (uint64_t *)&unk_1000D9DD0);
  uint64_t v8 = type metadata accessor for ErrorInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xE000000000000000;
  }
  else
  {
    uint64_t v11 = &v6[*(int *)(v8 + 24)];
    uint64_t v9 = *(void *)v11;
    unint64_t v10 = *((void *)v11 + 1);
    swift_bridgeObjectRetain();
  }
  sub_100010864((uint64_t)v6, (uint64_t *)&unk_1000D9DD0);
  v16[1] = v9;
  void v16[2] = v10;
  sub_10001E4B8();
  uint64_t result = sub_10009D750();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = v14 & 1;
  *(void *)(a2 + 24) = v15;
  return result;
}

uint64_t sub_10009AB20@<X0>(uint64_t a1@<X8>)
{
  return sub_100096EE4(a1);
}

uint64_t sub_10009AB74@<X0>(void *a1@<X8>)
{
  return sub_10009ABC4(&qword_1000D5250, &qword_1000E3548, &qword_1000E3550, a1);
}

uint64_t sub_10009AB9C@<X0>(void *a1@<X8>)
{
  return sub_10009ABC4(&qword_1000D5258, &qword_1000E3558, &qword_1000E3560, a1);
}

uint64_t sub_10009ABC4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = *a3;
  *a4 = *a2;
  a4[1] = v7;

  return swift_bridgeObjectRetain();
}

uint64_t sub_10009AC28@<X0>(char *a1@<X8>)
{
  long long v21 = a1;
  uint64_t v1 = sub_10000D308(&qword_1000DB870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v20 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - v12;
  sub_10009BA18();
  swift_retain();
  sub_10009D990();
  swift_retain();
  sub_10009D990();
  char v14 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v14(v8, v13, v1);
  v14(v5, v11, v1);
  uint64_t v15 = v21;
  v14(v21, v8, v1);
  uint64_t v16 = sub_10000D308(&qword_1000DB880);
  long long v17 = &v15[*(int *)(v16 + 48)];
  *(void *)long long v17 = 0;
  v17[8] = 1;
  v14(&v15[*(int *)(v16 + 64)], v5, v1);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  v18(v11, v1);
  v18(v13, v1);
  v18(v5, v1);
  return ((uint64_t (*)(char *, uint64_t))v18)(v8, v1);
}

double sub_10009AEBC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, uint64_t a10)
{
  type metadata accessor for CameraViewModel();
  sub_10009BA6C(&qword_1000DB790, (void (*)(uint64_t))type metadata accessor for CameraViewModel);
  uint64_t v14 = sub_10009D1A0();
  uint64_t v16 = v15;
  sub_10009D950();
  sub_10009D950();
  sub_10009D950();
  double result = v22;
  *(void *)a8 = v14;
  *(void *)(a8 + 8) = v16;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a2;
  *(void *)(a8 + 32) = a3;
  *(void *)(a8 + 40) = a4;
  *(void *)(a8 + 48) = a5;
  *(void *)(a8 + 56) = a6;
  *(void *)(a8 + 64) = a7;
  *(_OWORD *)(a8 + 72) = a9;
  *(void *)(a8 + 88) = a10;
  *(unsigned char *)(a8 + 96) = LOBYTE(v22);
  *(void *)(a8 + 104) = v23;
  *(double *)(a8 + 112) = v22;
  *(void *)(a8 + 120) = v23;
  *(double *)(a8 + 128) = v22;
  *(void *)(a8 + 136) = v23;
  return result;
}

uint64_t destroy for CameraView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CameraView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v6;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CameraView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for CameraView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for CameraView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraView()
{
  return &type metadata for CameraView;
}

uint64_t sub_10009B49C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009B4BC()
{
  return sub_10009A850((long long *)(v0 + 16));
}

uint64_t sub_10009B4C4(uint64_t a1)
{
  return a1;
}

unint64_t sub_10009B56C()
{
  unint64_t result = qword_1000DB7C0;
  if (!qword_1000DB7C0)
  {
    sub_10000AF84(&qword_1000DB7A0);
    sub_100015700(&qword_1000DB7C8, &qword_1000DB798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB7C0);
  }
  return result;
}

uint64_t sub_10009B614@<X0>(uint64_t a1@<X8>)
{
  return sub_10009A9C8(*(void *)(v1 + 16), a1);
}

uint64_t sub_10009B61C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B65C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000981D8(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_10009B668@<X0>(uint64_t a1@<X8>)
{
  return sub_100098610(v1 + 16, a1);
}

uint64_t sub_10009B670(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10009B6B4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10009B700(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B730@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10009A234(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_10009B738()
{
  uint64_t v1 = sub_10009D140();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 144;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10009B820()
{
  uint64_t v1 = *(void *)(sub_10009D140() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_10009A614(v0 + v2, v3);
}

uint64_t sub_10009B8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009B8BC()
{
  return swift_release();
}

uint64_t sub_10009B8CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B93C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10009B9B0()
{
  return sub_10009D970();
}

unint64_t sub_10009BA18()
{
  unint64_t result = qword_1000DB878;
  if (!qword_1000DB878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB878);
  }
  return result;
}

uint64_t sub_10009BA6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009BAB8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 160, 7);
}

id sub_10009BB30()
{
  return sub_100098FD0(v0 + 16);
}

unint64_t sub_10009BB38()
{
  unint64_t result = qword_1000DB8B8;
  if (!qword_1000DB8B8)
  {
    sub_10000AF84(&qword_1000DB8A8);
    sub_10009BBD8();
    sub_100015700(&qword_1000D7450, &qword_1000D7458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB8B8);
  }
  return result;
}

unint64_t sub_10009BBD8()
{
  unint64_t result = qword_1000DB8C0;
  if (!qword_1000DB8C0)
  {
    sub_10000AF84(&qword_1000D6628);
    sub_100015700(&qword_1000DB7D8, &qword_1000D6620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000DB8C0);
  }
  return result;
}

uint64_t sub_10009BC80()
{
  uint64_t v1 = sub_10009D140();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 160) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10009BD8C()
{
  sub_10009D140();

  return sub_1000985A8();
}

uint64_t sub_10009BDF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_10009BF48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10009CC50();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10009C018(uint64_t a1)
{
  uint64_t v2 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10009C08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10009C10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10009C198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10009C214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CC50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10009C298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009C2AC);
}

uint64_t sub_10009C2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10009CC50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10009C36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009C380);
}

uint64_t sub_10009C380(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10009CC50();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DeviceStatusSectionViewModel()
{
  uint64_t result = qword_1000DB928;
  if (!qword_1000DB928) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009C488()
{
  uint64_t result = sub_10009CC50();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10009C520()
{
  sub_10009E060(62);
  v10._uint64_t countAndFlagsBits = 0x754E6C6169726573;
  v10._unint64_t object = (void *)0xEE00203A7265626DLL;
  sub_10009DD50(v10);
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = v1;
  v11._unint64_t object = v2;
  sub_10009DD50(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x203A44494455202CLL;
  v12._unint64_t object = (void *)0xE800000000000000;
  sub_10009DD50(v12);
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = v3;
  v13._unint64_t object = v4;
  sub_10009DD50(v13);
  swift_bridgeObjectRelease();
  v14._unint64_t object = (void *)0x80000001000ABE10;
  v14._uint64_t countAndFlagsBits = 0xD000000000000013;
  sub_10009DD50(v14);
  uint64_t v5 = v0[4];
  uint64_t v6 = (void *)v0[5];
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v5;
  v15._unint64_t object = v6;
  sub_10009DD50(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 0x4E6C65646F6D202CLL;
  v16._unint64_t object = (void *)0xED0000203A656D61;
  sub_10009DD50(v16);
  uint64_t v8 = v0[6];
  uint64_t v7 = (void *)v0[7];
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = v8;
  v17._unint64_t object = v7;
  sub_10009DD50(v17);
  swift_bridgeObjectRelease();
  return 0;
}

void *initializeWithCopy for DMTResultBackedADEPrerequisites(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DMTResultBackedADEPrerequisites(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for DMTResultBackedADEPrerequisites(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for DMTResultBackedADEPrerequisites(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DMTResultBackedADEPrerequisites(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DMTResultBackedADEPrerequisites(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DMTResultBackedADEPrerequisites()
{
  return &type metadata for DMTResultBackedADEPrerequisites;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_10009C8F0()
{
  return URLRequest.httpMethod.setter();
}

uint64_t sub_10009C900()
{
  return URLRequest.allHTTPHeaderFields.getter();
}

uint64_t sub_10009C910()
{
  return static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10009C920()
{
  return URLRequest.httpBody.setter();
}

void sub_10009C930(Swift::String_optional _, Swift::String forHTTPHeaderField)
{
}

uint64_t sub_10009C940()
{
  return type metadata accessor for URLRequest();
}

uint64_t sub_10009C950()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_10009C960()
{
  return JSONDecoder.init()();
}

uint64_t sub_10009C970()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_10009C980()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_10009C990()
{
  return JSONEncoder.init()();
}

uint64_t sub_10009C9A0()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_10009C9B0()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10009C9C0()
{
  return type metadata accessor for Notification();
}

uint64_t sub_10009C9D0()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_10009C9E0()
{
  return __DataStorage._length.getter();
}

uint64_t sub_10009C9F0()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_10009CA00()
{
  return DateComponents.day.getter();
}

uint64_t sub_10009CA10()
{
  return DateComponents.date.getter();
}

uint64_t sub_10009CA20()
{
  return DateComponents.year.getter();
}

uint64_t sub_10009CA30()
{
  return DateComponents.month.getter();
}

uint64_t sub_10009CA40()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_10009CA50()
{
  return dispatch thunk of NSKeyValueObservation.invalidate()();
}

uint64_t sub_10009CA60()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t sub_10009CA70()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_10009CA80()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_10009CA90()
{
  return NSKeyValueObservedChange.newValue.getter();
}

uint64_t sub_10009CAA0()
{
  return NSKeyValueObservedChange.oldValue.getter();
}

uint64_t sub_10009CAB0()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t sub_10009CAC0()
{
  return URL.pathComponents.getter();
}

uint64_t sub_10009CAD0()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t sub_10009CAE0()
{
  return URL.lastPathComponent.getter();
}

void sub_10009CAF0(NSURL *retstr@<X8>)
{
}

uint64_t sub_10009CB00()
{
  return URL.deletingPathExtension()();
}

uint64_t sub_10009CB10()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_10009CB20()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10009CB30()
{
  return URL.path.getter();
}

uint64_t sub_10009CB40()
{
  return URL.init(string:)();
}

uint64_t sub_10009CB50()
{
  return type metadata accessor for URL();
}

uint64_t sub_10009CB60()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_10009CB70()
{
  return Data.description.getter();
}

uint64_t sub_10009CB80()
{
  return Data._copyContents(initializing:)();
}

NSData sub_10009CB90()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_10009CBA0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10009CBB0()
{
  return Data.write(to:options:)();
}

uint64_t sub_10009CBC0()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t sub_10009CBD0()
{
  return static Date.FormatStyle.TimeStyle.omitted.getter();
}

uint64_t sub_10009CBE0()
{
  return static Date.FormatStyle.TimeStyle.complete.getter();
}

uint64_t sub_10009CBF0()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t sub_10009CC00()
{
  return static Date.FormatStyle.DateStyle.abbreviated.getter();
}

uint64_t sub_10009CC10()
{
  return static Date.FormatStyle.DateStyle.numeric.getter();
}

uint64_t sub_10009CC20()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t sub_10009CC30()
{
  return Date.formatted(date:time:)();
}

uint64_t sub_10009CC40()
{
  return Date.init()();
}

uint64_t sub_10009CC50()
{
  return type metadata accessor for Date();
}

uint64_t sub_10009CC60()
{
  return UUID.uuidString.getter();
}

uint64_t sub_10009CC70()
{
  return UUID.description.getter();
}

uint64_t sub_10009CC80()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10009CC90()
{
  return UUID.init()();
}

uint64_t sub_10009CCA0()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10009CCB0()
{
  return static Locale.current.getter();
}

uint64_t sub_10009CCC0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_10009CCD0()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t sub_10009CCE0()
{
  return static Calendar.current.getter();
}

uint64_t sub_10009CCF0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_10009CD00()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_10009CD10()
{
  return static URLError.Code.badServerResponse.getter();
}

uint64_t sub_10009CD20()
{
  return URLError.Code.init(rawValue:)();
}

uint64_t sub_10009CD30()
{
  return type metadata accessor for URLError.Code();
}

uint64_t sub_10009CD40()
{
  return URLError._nsError.getter();
}

uint64_t sub_10009CD50()
{
  return type metadata accessor for URLError();
}

uint64_t sub_10009CD60()
{
  return _ViewConfiguration.role.getter();
}

uint64_t sub_10009CD70()
{
  return _ViewConfiguration.consume(initializationParameters:)();
}

uint64_t sub_10009CD80()
{
  return _ViewConfigurationGroup.init<A>(content:)();
}

uint64_t sub_10009CD90()
{
  return type metadata accessor for _ViewConfigurationGroup();
}

uint64_t sub_10009CDA0()
{
  return static _ViewConfigurationBuilder.buildBlock<A>(_:)();
}

uint64_t sub_10009CDB0()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_10009CDC0()
{
  return _CFObject.hash(into:)();
}

uint64_t sub_10009CDD0()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_10009CDE0()
{
  return static _AppExtension<>.main()();
}

uint64_t sub_10009CDF0()
{
  return _AppExtension.hostAuditToken.getter();
}

uint64_t sub_10009CE00()
{
  return static _SceneBuilder.buildBlock<A>(_:)();
}

uint64_t sub_10009CE10()
{
  return type metadata accessor for UTType();
}

uint64_t sub_10009CE20()
{
  return UTType.init(_:)();
}

uint64_t sub_10009CE30()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_10009CE40()
{
  return Logger.logObject.getter();
}

uint64_t sub_10009CE50()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10009CE60()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10009CE70()
{
  return AnyCancellable.store<A>(in:)();
}

void sub_10009CE80()
{
}

uint64_t sub_10009CE90()
{
  return static ObservableObject.environmentStore.getter();
}

uint64_t sub_10009CEA0()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_10009CEB0()
{
  return PassthroughSubject.send(completion:)();
}

uint64_t sub_10009CEC0()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_10009CED0()
{
  return PassthroughSubject.init()();
}

uint64_t sub_10009CEE0()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t sub_10009CEF0()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t sub_10009CF00()
{
  return Published.init(initialValue:)();
}

uint64_t sub_10009CF10()
{
  return Published.projectedValue.getter();
}

uint64_t sub_10009CF20()
{
  return static Published.subscript.modify();
}

uint64_t sub_10009CF30()
{
  return static Published.subscript.getter();
}

uint64_t sub_10009CF40()
{
  return static Published.subscript.setter();
}

uint64_t sub_10009CF50()
{
  return type metadata accessor for Published();
}

uint64_t sub_10009CF60()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_10009CF70()
{
  return Publisher.map<A>(_:)();
}

uint64_t sub_10009CF80()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t sub_10009CF90()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t sub_10009CFA0()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_10009CFB0()
{
  return Publisher<>.assign<A>(to:on:)();
}

uint64_t sub_10009CFC0()
{
  return type metadata accessor for NWInterface.InterfaceType();
}

uint64_t sub_10009CFD0()
{
  return NWPathMonitor.pathUpdateHandler.setter();
}

uint64_t sub_10009CFE0()
{
  return NWPathMonitor.init(requiredInterfaceType:)();
}

uint64_t sub_10009CFF0()
{
  return NWPathMonitor.start(queue:)();
}

void sub_10009D000()
{
}

uint64_t sub_10009D010()
{
  return type metadata accessor for NWPathMonitor();
}

uint64_t sub_10009D020()
{
  return type metadata accessor for NWPath.Status();
}

uint64_t sub_10009D030()
{
  return NWPath.status.getter();
}

uint64_t sub_10009D040()
{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

uint64_t sub_10009D050()
{
  return AppStorage.wrappedValue.getter();
}

uint64_t sub_10009D060()
{
  return AppStorage.wrappedValue.setter();
}

uint64_t sub_10009D070()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_10009D080()
{
  return FocusState.wrappedValue.setter();
}

uint64_t sub_10009D090()
{
  return FocusState.projectedValue.getter();
}

uint64_t sub_10009D0A0()
{
  return FocusState.init<>()();
}

uint64_t sub_10009D0B0()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_10009D0C0()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_10009D0D0()
{
  return ProgressView<>.init<>()();
}

uint64_t sub_10009D0E0()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_10009D0F0()
{
  return static AnyTransition.opacity.getter();
}

uint64_t sub_10009D100()
{
  return AnyTransition.animation(_:)();
}

void sub_10009D110()
{
}

uint64_t sub_10009D120()
{
  return type metadata accessor for DismissAction();
}

uint64_t sub_10009D130()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_10009D140()
{
  return type metadata accessor for GeometryProxy();
}

uint64_t sub_10009D150()
{
  return OpenURLAction.callAsFunction(_:)();
}

uint64_t sub_10009D160()
{
  return type metadata accessor for OpenURLAction();
}

uint64_t sub_10009D170()
{
  return withAnimation<A>(_:_:)();
}

uint64_t sub_10009D180()
{
  return NavigationLink.init(destination:label:)();
}

uint64_t sub_10009D190()
{
  return NavigationView.init(content:)();
}

uint64_t sub_10009D1A0()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t sub_10009D1B0()
{
  return ObservedObject.projectedValue.getter();
}

uint64_t sub_10009D1C0()
{
  return ObservedObject.Wrapper.subscript.getter();
}

uint64_t sub_10009D1D0()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t sub_10009D1E0()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_10009D1F0()
{
  return static SafeAreaRegions.all.getter();
}

uint64_t sub_10009D200()
{
  return static SafeAreaRegions.keyboard.getter();
}

uint64_t sub_10009D210()
{
  return PlainButtonStyle.init()();
}

uint64_t sub_10009D220()
{
  return type metadata accessor for PlainButtonStyle();
}

uint64_t sub_10009D230()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_10009D240()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_10009D250()
{
  return EnvironmentObject.projectedValue.getter();
}

uint64_t sub_10009D260()
{
  return EnvironmentObject.error()();
}

uint64_t sub_10009D270()
{
  return EnvironmentObject.Wrapper.subscript.getter();
}

uint64_t sub_10009D280()
{
  return EnvironmentObject.init()();
}

uint64_t sub_10009D290()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10009D2A0()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_10009D2B0()
{
  return EnvironmentValues.truncationMode.setter();
}

uint64_t sub_10009D2C0()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_10009D2D0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_10009D2E0()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10009D2F0()
{
  return EnvironmentValues.layoutDirection.setter();
}

uint64_t sub_10009D300()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_10009D310()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_10009D320()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_10009D330()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_10009D340()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_10009D350()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_10009D360()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t sub_10009D370()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_10009D380()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_10009D390()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_10009D3A0()
{
  return EnvironmentValues.init()();
}

uint64_t sub_10009D3B0()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_10009D3C0()
{
  return type metadata accessor for NavigationBarItem.TitleDisplayMode();
}

uint64_t sub_10009D3D0()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_10009D3E0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_10009D3F0()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_10009D400()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_10009D410()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_10009D420()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t sub_10009D430()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t sub_10009D440()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t sub_10009D460()
{
  return static UIViewRepresentable._layoutOptions(_:)();
}

uint64_t sub_10009D470()
{
  return UIViewRepresentable._identifiedViewTree(in:)();
}

uint64_t sub_10009D480()
{
  return UIViewRepresentable._overrideLayoutTraits(_:for:)();
}

uint64_t sub_10009D490()
{
  return UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)();
}

uint64_t sub_10009D4A0()
{
  return static UIViewRepresentable._modifyBridgedViewInputs(_:)();
}

uint64_t sub_10009D4B0()
{
  return UIViewRepresentable.body.getter();
}

uint64_t sub_10009D4D0()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t sub_10009D4E0()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10009D4F0()
{
  return static SearchFieldPlacement.automatic.getter();
}

uint64_t sub_10009D500()
{
  return type metadata accessor for SearchFieldPlacement();
}

uint64_t sub_10009D510()
{
  return InsetGroupedListStyle.init()();
}

uint64_t sub_10009D520()
{
  return type metadata accessor for InsetGroupedListStyle();
}

uint64_t sub_10009D530()
{
  return CircularProgressViewStyle.init()();
}

uint64_t sub_10009D540()
{
  return type metadata accessor for CircularProgressViewStyle();
}

uint64_t sub_10009D550()
{
  return UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)();
}

uint64_t sub_10009D560()
{
  return static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)();
}

uint64_t sub_10009D570()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t sub_10009D590()
{
  return static UIViewControllerRepresentable._layoutOptions(_:)();
}

uint64_t sub_10009D5A0()
{
  return UIViewControllerRepresentable._identifiedViewTree(in:)();
}

uint64_t sub_10009D5B0()
{
  return UIViewControllerRepresentable.body.getter();
}

uint64_t sub_10009D5D0()
{
  return UIViewControllerRepresentable<>.makeCoordinator()();
}

uint64_t sub_10009D5E0()
{
  return UIViewControllerRepresentableContext.coordinator.getter();
}

uint64_t sub_10009D5F0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_10009D600()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_10009D610()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_10009D620()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_10009D630()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_10009D640()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t sub_10009D650()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_10009D660()
{
  return static Font.largeTitle.getter();
}

uint64_t sub_10009D670()
{
  return static Font.subheadline.getter();
}

uint64_t sub_10009D680()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_10009D690()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_10009D6A0()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_10009D6B0()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_10009D6C0()
{
  return static Font.footnote.getter();
}

uint64_t sub_10009D6D0()
{
  return static Font.headline.getter();
}

uint64_t sub_10009D6E0()
{
  return Form.init(content:)();
}

uint64_t sub_10009D6F0()
{
  return List<>.init(content:)();
}

uint64_t sub_10009D700()
{
  return Text.fontWeight(_:)();
}

uint64_t sub_10009D710()
{
  return type metadata accessor for Text.TruncationMode();
}

uint64_t sub_10009D720()
{
  return Text.foregroundColor(_:)();
}

uint64_t sub_10009D730()
{
  return Text.bold()();
}

uint64_t sub_10009D740()
{
  return Text.font(_:)();
}

uint64_t sub_10009D750()
{
  return Text.init<A>(_:)();
}

uint64_t sub_10009D760()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_10009D770()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_10009D780()
{
  return View.progressViewStyle<A>(_:)();
}

uint64_t sub_10009D790()
{
  return View.searchable(text:placement:prompt:)();
}

uint64_t sub_10009D7A0()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t sub_10009D7B0()
{
  return View.keyboardType(_:)();
}

uint64_t sub_10009D7C0()
{
  return View.onTapGesture(count:perform:)();
}

uint64_t sub_10009D7D0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10009D7E0()
{
  return View.navigationBarTitle<A>(_:displayMode:)();
}

uint64_t sub_10009D7F0()
{
  return View.interactiveDismissDisabled(_:)();
}

uint64_t sub_10009D800()
{
  return View.alert<A>(item:content:)();
}

uint64_t sub_10009D810()
{
  return View.alert<A, B, C>(_:isPresented:actions:message:)();
}

uint64_t sub_10009D820()
{
  return View.sheet<A>(isPresented:onDismiss:content:)();
}

uint64_t sub_10009D830()
{
  return View.focused(_:)();
}

uint64_t sub_10009D840()
{
  return View.listStyle<A>(_:)();
}

uint64_t sub_10009D850()
{
  return Alert.init(title:message:dismissButton:)();
}

uint64_t sub_10009D860()
{
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t sub_10009D870()
{
  return static Alert.Button.destructive(_:action:)();
}

uint64_t sub_10009D880()
{
  return static Alert.Button.default(_:action:)();
}

uint64_t sub_10009D890()
{
  return type metadata accessor for Alert.Button();
}

uint64_t sub_10009D8A0()
{
  return Color.init(uiColor:)();
}

uint64_t sub_10009D8B0()
{
  return static Color.accentColor.getter();
}

uint64_t sub_10009D8C0()
{
  return static Color.red.getter();
}

uint64_t sub_10009D8D0()
{
  return static Color.blue.getter();
}

uint64_t sub_10009D8E0()
{
  return static Color.clear.getter();
}

uint64_t sub_10009D8F0()
{
  return static Color.green.getter();
}

uint64_t sub_10009D900()
{
  return static Color.white.getter();
}

uint64_t sub_10009D910()
{
  return static Color.yellow.getter();
}

uint64_t sub_10009D920()
{
  return static Color.primary.getter();
}

uint64_t sub_10009D930()
{
  return static Color.secondary.getter();
}

uint64_t sub_10009D940()
{
  return Image.init(systemName:)();
}

uint64_t sub_10009D950()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_10009D960()
{
  return State.wrappedValue.getter();
}

uint64_t sub_10009D970()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10009D980()
{
  return State.projectedValue.getter();
}

uint64_t sub_10009D990()
{
  return Button.init(action:label:)();
}

uint64_t sub_10009D9A0()
{
  return Button<>.init<A>(_:action:)();
}

uint64_t sub_10009D9B0()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_10009D9C0()
{
  return Binding.projectedValue.getter();
}

uint64_t sub_10009D9D0()
{
  return Binding.init(get:set:)();
}

uint64_t sub_10009D9E0()
{
  return type metadata accessor for Capsule();
}

uint64_t sub_10009D9F0()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10009DA00()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_10009DA10()
{
  return Section<>.init(header:content:)();
}

uint64_t sub_10009DA20()
{
  return Section<>.init(header:footer:content:)();
}

uint64_t sub_10009DA30()
{
  return Section<>.init(content:)();
}

uint64_t sub_10009DA40()
{
  return static Material.thick.getter();
}

uint64_t sub_10009DA50()
{
  return static Material.regular.getter();
}

uint64_t sub_10009DA60()
{
  return type metadata accessor for Material();
}

uint64_t sub_10009DA70()
{
  return static Alignment.top.getter();
}

uint64_t sub_10009DA80()
{
  return static Alignment.bottom.getter();
}

uint64_t sub_10009DA90()
{
  return static Alignment.center.getter();
}

uint64_t sub_10009DAA0()
{
  return static Alignment.leading.getter();
}

uint64_t sub_10009DAB0()
{
  return static Alignment.trailing.getter();
}

uint64_t sub_10009DAC0()
{
  return static Animation.default.getter();
}

uint64_t sub_10009DAD0()
{
  return static Animation.easeInOut(duration:)();
}

uint64_t sub_10009DAE0()
{
  return TextField<>.init(_:text:onEditingChanged:onCommit:)();
}

uint64_t sub_10009DAF0()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_10009DB00()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_10009DB10()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_10009DB20()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_10009DB30()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_10009DB40()
{
  return static DispatchTime.distantFuture.getter();
}

uint64_t sub_10009DB50()
{
  return static DispatchTime.< infix(_:_:)();
}

uint64_t sub_10009DB60()
{
  return static DispatchTime.== infix(_:_:)();
}

uint64_t sub_10009DB70()
{
  return static DispatchTime.now()();
}

uint64_t sub_10009DB80()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_10009DB90()
{
  return + infix(_:_:)();
}

uint64_t sub_10009DBA0()
{
  return + infix(_:_:)();
}

NSDictionary sub_10009DBB0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_10009DBC0()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10009DBD0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_10009DBE0()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10009DBF0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_10009DC00()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

void sub_10009DC10(Swift::String a1)
{
}

void sub_10009DC20(Swift::String a1)
{
}

uint64_t sub_10009DC30()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10009DC40()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t sub_10009DC50()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t sub_10009DC60()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_10009DC70()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10009DC80()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10009DC90()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_10009DCA0()
{
  return String.init(data:encoding:)();
}

uint64_t sub_10009DCB0()
{
  return String.init(format:_:)();
}

uint64_t sub_10009DCC0()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_10009DCD0()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_10009DCE0()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_10009DCF0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10009DD00()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_10009DD10()
{
  return static String._fromUTF8Repairing(_:)();
}

uint64_t sub_10009DD20()
{
  return String.hash(into:)();
}

uint64_t sub_10009DD30()
{
  return String.count.getter();
}

uint64_t sub_10009DD40()
{
  return String.index(_:offsetBy:)();
}

void sub_10009DD50(Swift::String a1)
{
}

Swift::Int sub_10009DD60()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10009DD70()
{
  return String.subscript.getter();
}

uint64_t sub_10009DD80()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10009DD90()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10009DDA0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_10009DDB0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10009DDC0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10009DDD0()
{
  return Array.description.getter();
}

uint64_t sub_10009DDE0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10009DDF0()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10009DE00()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10009DE10()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_10009DE20()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10009DE30()
{
  return static MainActor.shared.getter();
}

uint64_t sub_10009DE40()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_10009DE50()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t sub_10009DE60()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_10009DE70()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_10009DE90()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_10009DEA0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_10009DEB0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10009DEC0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_10009DED0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10009DEE0()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_10009DEF0()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t sub_10009DF00()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_10009DF10()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_10009DF20()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_10009DF30()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t sub_10009DF40()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t sub_10009DF50()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

void sub_10009DF60()
{
}

uint64_t sub_10009DF70()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t sub_10009DF80()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t sub_10009DF90()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t sub_10009DFA0()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_10009DFB0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_10009DFC0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10009DFD0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10009DFE0()
{
  return StringProtocol.write(to:atomically:encoding:)();
}

uint64_t sub_10009DFF0()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_10009E000()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10009E010()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10009E020()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_10009E030()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_10009E040()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_10009E050()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_10009E060(Swift::Int a1)
{
}

uint64_t sub_10009E070()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10009E080()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10009E090()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_10009E0A0()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_10009E0B0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10009E0C0()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10009E0D0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10009E0E0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_10009E0F0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_10009E100()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10009E110()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10009E120()
{
  return dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t sub_10009E130()
{
  return dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter();
}

Swift::Int sub_10009E140(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_10009E150()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10009E160()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_10009E170()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10009E180()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10009E190()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10009E1A0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10009E1B0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10009E1C0()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_10009E1D0()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10009E1E0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_10009E1F0()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10009E200()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10009E210()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10009E220()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10009E230()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10009E250()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_10009E260()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10009E270()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10009E280()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10009E290()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_10009E2A0()
{
  return Error._code.getter();
}

uint64_t sub_10009E2B0()
{
  return Error._domain.getter();
}

uint64_t sub_10009E2C0()
{
  return Error._userInfo.getter();
}

uint64_t sub_10009E2D0()
{
  return Hasher.init(_seed:)();
}

void sub_10009E2E0(Swift::UInt a1)
{
}

void sub_10009E2F0(Swift::UInt8 a1)
{
}

Swift::Int sub_10009E300()
{
  return Hasher._finalize()();
}

uint64_t sub_10009E310()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_10009E320()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

OSStatus AudioServicesCreateSystemSoundID(CFURLRef inFileURL, SystemSoundID *outSystemSoundID)
{
  return _AudioServicesCreateSystemSoundID(inFileURL, outSystemSoundID);
}

void AudioServicesPlaySystemSound(SystemSoundID inSystemSoundID)
{
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

uint64_t CWFSecItemQueryPassword()
{
  return _CWFSecItemQueryPassword();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

CFStringRef SecCopyErrorMessageString(OSStatus status, void *reserved)
{
  return _SecCopyErrorMessageString(status, reserved);
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return _SecItemAdd(attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return _SecItemDelete(query);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorInMain()
{
  return _swift_errorInMain();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unownedRelease()
{
  return _swift_unownedRelease();
}

uint64_t swift_unownedRetain()
{
  return _swift_unownedRetain();
}

uint64_t swift_unownedRetainStrong()
{
  return _swift_unownedRetainStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}