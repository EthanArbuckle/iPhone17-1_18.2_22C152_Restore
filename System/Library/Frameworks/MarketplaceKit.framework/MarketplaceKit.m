unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t objectdestroy_22Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x270FA0238](v1, v7, v6);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24460711C(uint64_t a1)
{
  return sub_244607178(a1, qword_26B0D0F68);
}

uint64_t static Logger.ald.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_244607214(&qword_26B0D0F80, (uint64_t)qword_26B0D0F68, a1);
}

uint64_t sub_244607158(uint64_t a1)
{
  return sub_244607178(a1, qword_26B0D0F88);
}

uint64_t sub_244607178(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24469CC68();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_24469CC58();
}

uint64_t static Logger.general.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_244607214(&qword_26B0D0F50, (uint64_t)qword_26B0D0F88, a1);
}

uint64_t sub_244607214@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24469CC68();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t initializeBufferWithCopyOfBuffer for InstallRequirements(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CodableAuditToken(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CodableAuditToken(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AppVersion(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppVersion(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

uint64_t sub_2446073C8()
{
  return sub_24469CA38();
}

uint64_t sub_244607414()
{
  return sub_24469CA28();
}

uint64_t sub_24460746C()
{
  return sub_24469D6C8();
}

uint64_t sub_2446074D4()
{
  swift_getWitnessTable();

  return sub_24469CA18();
}

uint64_t sub_244607540()
{
  return sub_2446075A8(&qword_268E9D500);
}

uint64_t sub_244607574()
{
  return sub_2446075A8(&qword_268E9D508);
}

uint64_t sub_2446075A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGColor(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void sub_244607664(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t AppVersion.appleItemID.getter()
{
  return *(void *)v0;
}

uint64_t AppVersion.appleVersionID.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t AppVersion.init(appleItemID:appleVersionID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t AppVersion.description.getter()
{
  uint64_t v1 = sub_24469D5A8();
  sub_24469CFE8();
  sub_24469D5A8();
  sub_24469CFE8();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL sub_244607758(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_244607770()
{
  return sub_24469D6C8();
}

uint64_t sub_2446077B8()
{
  return sub_24469D688();
}

uint64_t sub_2446077E4()
{
  return sub_24469D6C8();
}

uint64_t sub_244607828()
{
  if (*v0) {
    return 0x726556656C707061;
  }
  else {
    return 0x657449656C707061;
  }
}

uint64_t sub_244607878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244609E10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2446078A0()
{
  return 0;
}

void sub_2446078AC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2446078B8(uint64_t a1)
{
  unint64_t v2 = sub_244607AA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446078F4(uint64_t a1)
{
  unint64_t v2 = sub_244607AA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppVersion.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D570);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244607AA0();
  sub_24469D728();
  char v11 = 0;
  sub_24469D588();
  if (!v2)
  {
    char v10 = 1;
    sub_24469D588();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_244607AA0()
{
  unint64_t result = qword_268E9D578;
  if (!qword_268E9D578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D578);
  }
  return result;
}

uint64_t AppVersion.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D580);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244607AA0();
  sub_24469D708();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_24469D4B8();
    char v13 = 1;
    uint64_t v10 = sub_24469D4B8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_244607C90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppVersion.init(from:)(a1, a2);
}

uint64_t sub_244607CA8(void *a1)
{
  return AppVersion.encode(to:)(a1);
}

uint64_t AutomaticUpdate.appleItemID.getter()
{
  return *(void *)v0;
}

uint64_t AutomaticUpdate.alternativeDistributionPackage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AutomaticUpdate() + 20);
  uint64_t v4 = sub_24469C888();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AutomaticUpdate()
{
  uint64_t result = qword_268E9D5B8;
  if (!qword_268E9D5B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AutomaticUpdate.account.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AutomaticUpdate() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomaticUpdate.installVerificationToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AutomaticUpdate() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomaticUpdate.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AutomaticUpdate();
  return sub_24460BCA4(v1 + *(int *)(v3 + 32), a1, &qword_268E9D588);
}

uint64_t AutomaticUpdate.appShareURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AutomaticUpdate() + 32);

  return sub_244607E90(a1, v3);
}

uint64_t sub_244607E90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AutomaticUpdate.appShareURL.modify())()
{
  return nullsub_1;
}

uint64_t AutomaticUpdate.init(appleItemID:alternativeDistributionPackage:account:installVerificationToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  char v13 = (int *)type metadata accessor for AutomaticUpdate();
  uint64_t v14 = (uint64_t)&a7[v13[8]];
  uint64_t v15 = sub_24469C888();
  uint64_t v16 = *(void *)(v15 - 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v21(v14, 1, 1, v15);
  *(void *)a7 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&a7[v13[5]], a2, v15);
  v17 = &a7[v13[6]];
  *(void *)v17 = a3;
  *((void *)v17 + 1) = a4;
  v18 = &a7[v13[7]];
  *(void *)v18 = a5;
  *((void *)v18 + 1) = a6;
  sub_24460BD08(v14, &qword_268E9D588);

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21)(v14, 1, 1, v15);
}

unint64_t sub_244608098(char a1)
{
  unint64_t result = 0x657449656C707061;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 2:
      unint64_t result = 0x746E756F636361;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0x6572616853707061;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_244608164(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_244608178()
{
  return sub_244608098(*v0);
}

uint64_t sub_244608180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244609F40(a1, a2);
  *a3 = result;
  return result;
}

void sub_2446081A8(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2446081B4(uint64_t a1)
{
  unint64_t v2 = sub_244608470();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446081F0(uint64_t a1)
{
  unint64_t v2 = sub_244608470();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AutomaticUpdate.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D590);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244608470();
  sub_24469D728();
  char v13 = 0;
  sub_24469D588();
  if (!v1)
  {
    type metadata accessor for AutomaticUpdate();
    char v12 = 1;
    sub_24469C888();
    sub_2446089F8(&qword_268E9D5A0);
    sub_24469D568();
    char v11 = 2;
    sub_24469D548();
    char v10 = 3;
    sub_24469D548();
    char v9 = 4;
    sub_24469D528();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_244608470()
{
  unint64_t result = qword_268E9D598;
  if (!qword_268E9D598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D598);
  }
  return result;
}

uint64_t AutomaticUpdate.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24469C888();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D5A8);
  uint64_t v9 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388]();
  char v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AutomaticUpdate();
  uint64_t v39 = MEMORY[0x270FA5388]();
  char v13 = (void *)((char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (char *)v13 + *(int *)(v39 + 32);
  uint64_t v34 = v6;
  uint64_t v15 = *(void (**)(void))(v6 + 56);
  uint64_t v38 = (uint64_t)v14;
  uint64_t v36 = v5;
  v15();
  uint64_t v16 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_244608470();
  v17 = v40;
  sub_24469D708();
  if (v17)
  {
    uint64_t v18 = v38;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    return sub_24460BD08(v18, &qword_268E9D588);
  }
  else
  {
    v40 = v4;
    char v45 = 0;
    *char v13 = sub_24469D4B8();
    char v44 = 1;
    v19 = v8;
    uint64_t v20 = sub_2446089F8(&qword_268E9D5B0);
    uint64_t v21 = v36;
    sub_24469D498();
    uint64_t v22 = v39;
    v32[1] = v20;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)v13 + *(int *)(v39 + 20), v19, v21);
    char v43 = 2;
    uint64_t v23 = sub_24469D478();
    v24 = (uint64_t *)((char *)v13 + *(int *)(v22 + 24));
    uint64_t *v24 = v23;
    v24[1] = v25;
    char v42 = 3;
    uint64_t v26 = sub_24469D478();
    v27 = (uint64_t *)((char *)v13 + *(int *)(v22 + 28));
    uint64_t *v27 = v26;
    v27[1] = v28;
    char v41 = 4;
    uint64_t v29 = (uint64_t)v40;
    sub_24469D458();
    uint64_t v30 = v38;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v35);
    sub_244607E90(v29, v30);
    sub_244608A3C((uint64_t)v13, v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    return sub_244608AA0((uint64_t)v13);
  }
}

uint64_t sub_2446089F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24469C888();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244608A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomaticUpdate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244608AA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AutomaticUpdate();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244608AFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AutomaticUpdate.init(from:)(a1, a2);
}

uint64_t sub_244608B14(void *a1)
{
  return AutomaticUpdate.encode(to:)(a1);
}

id MarketplaceExtension.configuration.getter@<X0>(void *a1@<X8>)
{
  type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject();
  id result = sub_24460A250(v1);
  *a1 = result;
  return result;
}

uint64_t sub_244608B70(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26F9470A0);
  objc_msgSend(a1, sel_setExportedInterface_, v4);

  objc_msgSend(a1, sel_setExportedObject_, a2);
  objc_msgSend(a1, sel_resume);
  return 1;
}

uint64_t sub_244608C0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)((*MEMORY[0x263F8EED0] & *v4) + 0x58) + 16))(a1, a2, a3, *(void *)((*MEMORY[0x263F8EED0] & *v4) + 0x50));
  a4();

  return swift_bridgeObjectRelease();
}

uint64_t sub_244608CC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v7 = sub_24469C6F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = _Block_copy(a5);
  sub_24469C6E8();
  uint64_t v12 = sub_24469CF98();
  uint64_t v14 = v13;
  *(void *)(swift_allocObject() + 16) = v11;
  id v15 = a1;
  sub_244608C0C((uint64_t)v10, v12, v14, (void (*)(void))sub_24460BFD4);

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_244608E24(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_24469CEC8();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_244608E9C(uint64_t a1, uint64_t (*a2)(void))
{
  char v4 = (*(uint64_t (**)(uint64_t, void))(*(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x58) + 32))(a1, *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x50));
  return a2(v4 & 1);
}

uint64_t sub_244608F40(void *a1, int a2, void *a3, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v6;
  id v7 = a3;
  id v8 = a1;
  sub_244608E9C((uint64_t)v7, (uint64_t (*)(void))sub_24460BFBC);

  return swift_release();
}

uint64_t sub_244608FE0(uint64_t a1, void (*a2)(uint64_t, unint64_t))
{
  v8[0] = (*(uint64_t (**)(uint64_t, void))(*(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x58) + 24))(a1, *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x50));
  v8[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D738);
  sub_24460BE30();
  swift_getWitnessTable();
  uint64_t v4 = sub_24469CAC8();
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  a2(v4, v6);
  return sub_24460B97C(v4, v6);
}

uint64_t sub_244609140(void *a1, int a2, int a3, void *aBlock)
{
  unint64_t v5 = _Block_copy(aBlock);
  uint64_t v6 = sub_24469D018();
  *(void *)(swift_allocObject() + 16) = v5;
  id v7 = a1;
  sub_244608FE0(v6, (void (*)(uint64_t, unint64_t))sub_24460BF60);

  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_2446091F0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D708);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24469D0D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = v4;
  v12[7] = a3;
  v12[8] = a4;
  sub_24460BBA4(a1, a2);
  id v13 = v4;
  swift_retain();
  sub_2446925DC((uint64_t)v10, (uint64_t)&unk_268E9D718, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_244609324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v8[21] = *MEMORY[0x263F8EED0] & *a6;
  v8[22] = type metadata accessor for MarketplaceKitError();
  v8[23] = swift_task_alloc();
  v8[24] = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D720);
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244609448, 0, 0);
}

uint64_t sub_244609448()
{
  uint64_t v1 = v0[16];
  unint64_t v2 = v0[17];
  v0[6] = v0 + 4;
  v0[2] = v1;
  v0[3] = v2;
  v0[5] = v0 + 2;
  sub_24460BBA4(v1, v2);
  v0[7] = MEMORY[0x263F06F78];
  v0[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D728);
  v0[9] = sub_24460BBFC();
  v0[11] = sub_24460BC50();
  v0[10] = swift_getWitnessTable();
  sub_24469CAB8();
  uint64_t v3 = v0[21];
  sub_24460B97C(v0[2], v0[3]);
  uint64_t v4 = v0[4];
  v0[28] = v4;
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 88);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 40) + **(int **)(v5 + 40));
  id v7 = (void *)swift_task_alloc();
  v0[29] = v7;
  *id v7 = v0;
  v7[1] = sub_24460968C;
  return v9(v4, v6, v5);
}

uint64_t sub_24460968C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 240) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_2446099A0;
  }
  else
  {
    *(void *)(v4 + 248) = a1;
    uint64_t v5 = sub_2446097D0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_2446097D0()
{
  uint64_t v1 = (void *)v0[26];
  uint64_t v2 = v0[27];
  *uint64_t v1 = v0[31];
  swift_storeEnumTagMultiPayload();
  sub_24460BDC8((uint64_t)v1, v2);
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[25];
  sub_24460BCA4(v0[27], v5, &qword_268E9D720);
  v0[13] = v5;
  v0[14] = v4;
  v0[15] = swift_getWitnessTable();
  uint64_t v6 = sub_24469CAC8();
  if (v3)
  {
    sub_24460BD08(v0[25], &qword_268E9D720);
    return swift_unexpectedError();
  }
  else
  {
    uint64_t v9 = v6;
    unint64_t v10 = v7;
    uint64_t v11 = v0[27];
    uint64_t v12 = (void (*)(uint64_t, unint64_t))v0[19];
    sub_24460BD08(v0[25], &qword_268E9D720);
    v12(v9, v10);
    sub_24460B97C(v9, v10);
    sub_24460BD08(v11, &qword_268E9D720);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_2446099A0()
{
  uint64_t v1 = *(void **)(v0 + 240);
  *(void *)(v0 + 96) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1070);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 216);
  if (v3)
  {
    uint64_t v6 = *(void *)(v0 + 184);

    sub_24460BD64(v6, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {

    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 200);
  sub_24460BCA4(*(void *)(v0 + 216), v7, &qword_268E9D720);
  *(void *)(v0 + 104) = v7;
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 120) = swift_getWitnessTable();
  uint64_t v9 = sub_24469CAC8();
  unint64_t v11 = v10;
  uint64_t v12 = *(void *)(v0 + 216);
  id v13 = *(void (**)(uint64_t, unint64_t))(v0 + 152);
  sub_24460BD08(*(void *)(v0 + 200), &qword_268E9D720);
  v13(v9, v11);
  sub_24460B97C(v9, v11);
  sub_24460BD08(v12, &qword_268E9D720);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

void sub_244609BF8(void *a1, int a2, void *a3, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  id v7 = a3;
  id v12 = a1;
  uint64_t v8 = sub_24469C8B8();
  unint64_t v10 = v9;

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v6;
  sub_2446091F0(v8, v10, (uint64_t)sub_24460BF60, v11);
  swift_release();
  sub_24460B97C(v8, v10);
}

void sub_244609CD0()
{
}

id sub_244609D14()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_244609D88(char *a1)
{
  return (*(uint64_t (**)(char *))(*(void *)(*(void *)((*MEMORY[0x263F8EED0] & *(void *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(void *)((*MEMORY[0x263F8EED0] & *(void *)a1) + 0x60)]);
}

uint64_t sub_244609DF0(void *a1)
{
  sub_244608B70(a1, *v1);
  return 1;
}

uint64_t sub_244609E10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657449656C707061 && a2 == 0xEB0000000044496DLL;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726556656C707061 && a2 == 0xEE0044496E6F6973)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244609F40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657449656C707061 && a2 == 0xEB0000000044496DLL;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002446A9DB0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E756F636361 && a2 == 0xE700000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002446A9DD0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6572616853707061 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

id sub_24460A180(uint64_t a1)
{
  (*(void (**)(char *, uint64_t, void))(*(void *)(*(void *)((*MEMORY[0x263F8EED0] & *(void *)v1)
                                                                          + 0x50)
                                                              - 8)
                                                  + 16))(&v1[*(void *)((*MEMORY[0x263F8EED0] & *(void *)v1) + 0x60)], a1, *(void *)((*MEMORY[0x263F8EED0] & *(void *)v1) + 0x50));
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject();
  return objc_msgSendSuper2(&v3, sel_init);
}

id sub_24460A250(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject());
  return sub_24460A180(a1);
}

ValueMetadata *type metadata accessor for AppVersion()
{
  return &type metadata for AppVersion;
}

uint64_t *initializeBufferWithCopyOfBuffer for AutomaticUpdate(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    unint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24469C888();
    uint64_t v11 = *(void *)(v10 - 8);
    id v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (uint64_t *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v23, 1, v10))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v12(v22, v23, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t destroy for AutomaticUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24469C888();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

void *initializeWithCopy for AutomaticUpdate(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24469C888();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v22, 1, v9))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v11(v21, v22, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
  }
  return a1;
}

char *assignWithCopy for AutomaticUpdate(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24469C888();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (void *)((char *)a2 + v12);
  *(void *)uint64_t v13 = *v14;
  *((void *)v13 + 1) = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (void *)((char *)a2 + v15);
  *(void *)uint64_t v16 = *v17;
  *((void *)v16 + 1) = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v21(&a1[v18], 1, v9);
  int v22 = v21(v20, 1, v9);
  if (!v7)
  {
    if (!v22)
    {
      v11(v19, v20, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  return a1;
}

void *initializeWithTake for AutomaticUpdate(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24469C888();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v11(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for AutomaticUpdate(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24469C888();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v25(&a1[v22], 1, v9);
  int v26 = v25(v24, 1, v9);
  if (!v7)
  {
    if (!v26)
    {
      v11(v23, v24, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24460AC88);
}

uint64_t sub_24460AC88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[8];
    return v14(v16, a2, v15);
  }
}

uint64_t storeEnumTagSinglePayload for AutomaticUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24460ADD4);
}

uint64_t sub_24460ADD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_24469C888();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[8];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_24460AF0C()
{
  sub_24469C888();
  if (v0 <= 0x3F)
  {
    sub_24460AFF0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24460AFF0()
{
  if (!qword_268E9D5C8)
  {
    sub_24469C888();
    unint64_t v0 = sub_24469D208();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268E9D5C8);
    }
  }
}

uint64_t dispatch thunk of MarketplaceExtension.additionalHeaders(for:account:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of MarketplaceExtension.availableAppVersions(forAppleItemIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MarketplaceExtension.requestFailed(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MarketplaceExtension.automaticUpdates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24460B188;
  return v9(a1, a2, a3);
}

uint64_t sub_24460B188(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_24460B288()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24460B334()
{
  type metadata accessor for _MarketplaceExtensionConfiguration();

  return swift_getWitnessTable();
}

uint64_t type metadata accessor for _MarketplaceExtensionConfiguration()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24460B394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t getEnumTagSinglePayload for AutomaticUpdate.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AutomaticUpdate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24460B4F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_24460B520(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24460B528(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AutomaticUpdate.CodingKeys()
{
  return &type metadata for AutomaticUpdate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AppVersion.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppVersion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24460B69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24460B6C4(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AppVersion.CodingKeys()
{
  return &type metadata for AppVersion.CodingKeys;
}

unint64_t sub_24460B6E4()
{
  unint64_t result = qword_268E9D6D8;
  if (!qword_268E9D6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D6D8);
  }
  return result;
}

unint64_t sub_24460B73C()
{
  unint64_t result = qword_268E9D6E0;
  if (!qword_268E9D6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D6E0);
  }
  return result;
}

uint64_t sub_24460B790(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24460B7D0()
{
  unint64_t result = qword_268E9D6E8;
  if (!qword_268E9D6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D6E8);
  }
  return result;
}

unint64_t sub_24460B828()
{
  unint64_t result = qword_268E9D6F0;
  if (!qword_268E9D6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D6F0);
  }
  return result;
}

unint64_t sub_24460B880()
{
  unint64_t result = qword_268E9D6F8;
  if (!qword_268E9D6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D6F8);
  }
  return result;
}

unint64_t sub_24460B8D8()
{
  unint64_t result = qword_268E9D700;
  if (!qword_268E9D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D700);
  }
  return result;
}

uint64_t sub_24460B92C()
{
  swift_unknownObjectRelease();
  sub_24460B97C(*(void *)(v0 + 32), *(void *)(v0 + 40));

  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24460B97C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_24460B9D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  int v8 = (void *)v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_24460BAB0;
  return sub_244609324(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_24460BAB0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24460BBA4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

unint64_t sub_24460BBFC()
{
  unint64_t result = qword_26B0D10B0;
  if (!qword_26B0D10B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D10B0);
  }
  return result;
}

unint64_t sub_24460BC50()
{
  unint64_t result = qword_268E9D730;
  if (!qword_268E9D730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D730);
  }
  return result;
}

uint64_t sub_24460BCA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24460BD08(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24460BD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24460BDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24460BE30()
{
  unint64_t result = qword_268E9D740;
  if (!qword_268E9D740)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9D728);
    sub_24460BEA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D740);
  }
  return result;
}

unint64_t sub_24460BEA4()
{
  unint64_t result = qword_268E9D748;
  if (!qword_268E9D748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D748);
  }
  return result;
}

void sub_24460BEF8()
{
}

uint64_t sub_24460BF28()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24460BF64()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_24469C8A8();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_24460BFBC(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

void sub_24460BFD4(uint64_t a1)
{
  sub_244608E24(a1, *(void *)(v1 + 16));
}

uint64_t InstallRequirements.minimumSystemVersion.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallRequirements.minimumSystemVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*InstallRequirements.minimumSystemVersion.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.requiredDeviceCapabilities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InstallRequirements.requiredDeviceCapabilities.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*InstallRequirements.requiredDeviceCapabilities.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.ageRatingRank.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t InstallRequirements.ageRatingRank.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*InstallRequirements.ageRatingRank.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.expectedInstallSize.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t InstallRequirements.expectedInstallSize.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*InstallRequirements.expectedInstallSize.modify())()
{
  return nullsub_1;
}

double InstallRequirements.init()@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  return result;
}

Swift::Bool __swiftcall InstallRequirements.satisfiedByDevice()()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  long long v3 = *((_OWORD *)v0 + 1);
  char v4 = *((unsigned char *)v0 + 32);
  uint64_t v5 = v0[5];
  int v6 = *((unsigned __int8 *)v0 + 48);
  if (!v1)
  {
    int v7 = (void)v3 ? 0 : *((unsigned __int8 *)v0 + 32);
    if (v7 & v6) {
      return 1;
    }
  }
  if (qword_26B0D10D0 != -1)
  {
    long long v10 = *((_OWORD *)v0 + 1);
    swift_once();
    long long v3 = v10;
  }
  v11[0] = v2;
  v11[1] = v1;
  long long v12 = v3;
  char v13 = v4;
  uint64_t v14 = v5;
  char v15 = v6;
  uint64_t v16 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v9 = sub_24460C378(&v16, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_24460C29C, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9 == 2) {
    return 0;
  }
  else {
    return v9 & 1;
  }
}

void sub_24460C29C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_19;
  char v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_checkDeviceCabilityForADPInstallation_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t sub_24460C378(uint64_t **a1, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a3)
{
  v47 = a1;
  uint64_t v44 = a3;
  char v45 = a2;
  uint64_t v46 = *v3;
  uint64_t v4 = type metadata accessor for MarketplaceKitError();
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  int v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  uint64_t v11 = (char *)v40 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D7D0);
  MEMORY[0x270FA5388](v12, v13);
  char v15 = (unsigned __int8 *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D7D8);
  swift_allocObject();
  uint64_t v16 = sub_24469CAA8();
  uint64_t v17 = (void *)sub_24469CAD8();
  v54 = sub_24460EAB0;
  uint64_t v55 = v16;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v52 = 1107296256;
  *(void *)&long long v53 = sub_244619500;
  *((void *)&v53 + 1) = &block_descriptor_13;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v17, sel_synchronousRemoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);

  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)v57, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v24 = sub_24469CA78();
    sub_24460E87C(&qword_268E9D7A8, MEMORY[0x263F10748]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v31, *MEMORY[0x263F10740], v24);
    swift_willThrow();
    swift_release();
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    return v24;
  }
  uint64_t v20 = v46;
  char v42 = v8;
  uint64_t v43 = v12;
  char v41 = v11;
  v40[1] = v4;
  uint64_t v21 = p_aBlock;
  sub_24460EAD4();
  unint64_t v22 = sub_24460EB28();
  uint64_t v23 = *v47;
  uint64_t v24 = (*v47)[1];
  char v25 = *((unsigned char *)*v47 + 32);
  uint64_t v26 = (*v47)[5];
  char v27 = *((unsigned char *)*v47 + 48);
  uint64_t aBlock = **v47;
  uint64_t v52 = v24;
  long long v53 = *((_OWORD *)v23 + 1);
  LOBYTE(v54) = v25;
  uint64_t v55 = v26;
  char v56 = v27;
  p_uint64_t aBlock = &aBlock;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v49 = v22;
  v50 = &type metadata for InstallRequirements;
  uint64_t v28 = v48;
  uint64_t v29 = sub_24469CAC8();
  if (!v28)
  {
    uint64_t v33 = v29;
    unint64_t v34 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v16;
    *(void *)(v35 + 24) = v20;
    swift_retain();
    v45(v21, v33, v34, sub_24460EB7C, v35);
    swift_release();
    sub_24469CA88();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v24 = *v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      swift_release();
      sub_24460B97C(v33, v34);
      swift_unknownObjectRelease();
      return v24;
    }
    uint64_t v36 = (uint64_t)v41;
    sub_24460BD64((uint64_t)v15, (uint64_t)v41);
    uint64_t v24 = sub_24460E87C((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    uint64_t v37 = v36;
    uint64_t v38 = (uint64_t)v42;
    sub_24460BD64(v37, (uint64_t)v42);
    swift_allocError();
    sub_24460BD64(v38, v39);
    sub_24460B97C(v33, v34);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_24460C8EC@<X0>(uint64_t **a1@<X0>, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t)@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v48 = a4;
  unint64_t v49 = a2;
  uint64_t v50 = *v4;
  uint64_t v51 = a3;
  uint64_t v5 = type metadata accessor for MarketplaceKitError();
  uint64_t v7 = MEMORY[0x270FA5388](v5, v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v10);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_26B0D1260);
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1060);
  swift_allocObject();
  uint64_t v17 = sub_24469CAA8();
  uint64_t v18 = (void *)sub_24469CAD8();
  v60 = sub_24460E8C4;
  unint64_t v61 = v17;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v57 = 1107296256;
  v58 = sub_244619500;
  v59 = &block_descriptor_7;
  id v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v20 = objc_msgSend(v18, sel_synchronousRemoteObjectProxyWithErrorHandler_, v19);
  _Block_release(v19);

  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)v63, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v34 = sub_24469CA78();
    sub_24460E87C(&qword_268E9D7A8, MEMORY[0x263F10748]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v34 - 8) + 104))(v35, *MEMORY[0x263F10740], v34);
    swift_willThrow();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  }
  uint64_t v47 = v13;
  uint64_t v21 = v50;
  char v45 = v12;
  uint64_t v46 = v9;
  uint64_t v44 = v5;
  unint64_t v22 = p_aBlock;
  sub_24460E8E8();
  unint64_t v23 = sub_24460E93C();
  uint64_t v24 = (*v52)[1];
  char v25 = (void (*)(uint64_t, void *))(*v52)[2];
  uint64_t v26 = (void *)(*v52)[3];
  char v27 = (uint64_t (*)(void *))(*v52)[4];
  unint64_t v28 = (*v52)[5];
  char v29 = *((unsigned char *)*v52 + 48);
  uint64_t aBlock = **v52;
  uint64_t v57 = v24;
  v58 = v25;
  v59 = v26;
  v60 = v27;
  unint64_t v61 = v28;
  char v62 = v29;
  p_uint64_t aBlock = &aBlock;
  sub_24460E990(aBlock, v24, (uint64_t)v25, (uint64_t)v26, (uint64_t)v27, v28, v29);
  unint64_t v54 = v23;
  uint64_t v55 = &type metadata for FetchPrivateDataRequest;
  unint64_t v30 = v53;
  uint64_t v31 = sub_24469CAC8();
  if (v30)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    swift_unknownObjectRelease();
    swift_release();
    return sub_24460EA04(aBlock, v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v60, v61, v62);
  }
  uint64_t v36 = v31;
  unint64_t v37 = v32;
  sub_24460EA04(aBlock, v57, (uint64_t)v58, (uint64_t)v59, (uint64_t)v60, v61, v62);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v17;
  *(void *)(v38 + 24) = v21;
  swift_retain();
  v49(v22, v36, v37, sub_24460EA78, v38);
  swift_release();
  sub_24469CA88();
  unint64_t v53 = v37;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = (uint64_t)v45;
    sub_24460BD64((uint64_t)v16, (uint64_t)v45);
    sub_24460E87C((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    uint64_t v40 = (uint64_t)v46;
    sub_24460BD64(v39, (uint64_t)v46);
    swift_allocError();
    sub_24460BD64(v40, v41);
    sub_24460B97C(v36, v53);
    swift_release();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  }
  char v42 = v16[16];
  uint64_t v43 = v48;
  *uint64_t v48 = *(_OWORD *)v16;
  *((unsigned char *)v43 + 16) = v42;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  swift_release();
  sub_24460B97C(v36, v53);
  return swift_unknownObjectRelease();
}

unint64_t sub_24460CE6C(uint64_t **a1, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a3)
{
  uint64_t v51 = a1;
  uint64_t v48 = a2;
  uint64_t v49 = *v3;
  uint64_t v50 = a3;
  uint64_t v4 = type metadata accessor for MarketplaceKitError();
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D798);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (unsigned __int8 *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D7A0);
  swift_allocObject();
  uint64_t v16 = sub_24469CAA8();
  uint64_t v17 = (void *)sub_24469CAD8();
  v59 = sub_24460E58C;
  uint64_t v60 = v16;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v56 = 1107296256;
  uint64_t v57 = sub_244619500;
  v58 = &block_descriptor;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v19 = objc_msgSend(v17, sel_synchronousRemoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);

  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)v62, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if ((swift_dynamicCast() & 1) == 0)
  {
    unint64_t v22 = sub_24469CA78();
    sub_24460E87C(&qword_268E9D7A8, MEMORY[0x263F10748]);
    swift_allocError();
    (*(void (**)(uint64_t, void, unint64_t))(*(void *)(v22 - 8) + 104))(v32, *MEMORY[0x263F10740], v22);
    swift_willThrow();
    swift_release();
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    return v22;
  }
  uint64_t v47 = v12;
  uint64_t v20 = v49;
  uint64_t v44 = v11;
  uint64_t v45 = v4;
  uint64_t v46 = v8;
  uint64_t v21 = p_aBlock;
  sub_24460E60C();
  unint64_t v22 = sub_24460E660();
  unint64_t v23 = *v51;
  uint64_t v24 = (*v51)[1];
  char v25 = (void (*)(uint64_t, void *))(*v51)[2];
  uint64_t v26 = (void *)(*v51)[3];
  char v27 = (uint64_t (*)(void *))(*v51)[4];
  uint64_t v28 = (*v51)[5];
  uint64_t aBlock = **v51;
  uint64_t v56 = v24;
  uint64_t v57 = v25;
  v58 = v26;
  v59 = v27;
  uint64_t v60 = v28;
  char v61 = *((unsigned char *)v23 + 48);
  p_uint64_t aBlock = &aBlock;
  sub_24460E6B4(aBlock, v24, (uint64_t)v25, (uint64_t)v26, (uint64_t)v27, v28, v61);
  unint64_t v53 = v22;
  unint64_t v54 = &type metadata for SetPrivateDataRequest;
  uint64_t v29 = v52;
  uint64_t v30 = sub_24469CAC8();
  if (!v29)
  {
    uint64_t v34 = v30;
    unint64_t v35 = v31;
    sub_24460E754(aBlock, v56, (uint64_t)v57, (uint64_t)v58, (uint64_t)v59, v60, v61);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v16;
    *(void *)(v36 + 24) = v20;
    swift_retain();
    unint64_t v37 = v35;
    v48(v21, v34, v35, sub_24460E844, v36);
    swift_release();
    sub_24469CA88();
    unint64_t v38 = v35;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      unint64_t v22 = *v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
      swift_release();
      sub_24460B97C(v34, v37);
      swift_unknownObjectRelease();
      return v22;
    }
    uint64_t v39 = (uint64_t)v44;
    sub_24460BD64((uint64_t)v15, (uint64_t)v44);
    unint64_t v22 = sub_24460E87C((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    uint64_t v40 = v39;
    uint64_t v41 = (uint64_t)v46;
    sub_24460BD64(v40, (uint64_t)v46);
    swift_allocError();
    sub_24460BD64(v41, v42);
    sub_24460B97C(v34, v38);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  swift_unknownObjectRelease();
  swift_release();
  sub_24460E754(aBlock, v56, (uint64_t)v57, (uint64_t)v58, (uint64_t)v59, v60, v61);
  return v22;
}

unint64_t sub_24460D3E0(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0x6E69746152656761;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24460D48C()
{
  return sub_24460D3E0(*v0);
}

uint64_t sub_24460D494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24460E3BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_24460D4BC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24460D4C8(uint64_t a1)
{
  unint64_t v2 = sub_24460DAAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24460D504(uint64_t a1)
{
  unint64_t v2 = sub_24460DAAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InstallRequirements.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D750);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v8;
  int v17 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 40);
  v11[1] = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24460DAAC();
  sub_24469D728();
  char v21 = 0;
  uint64_t v9 = v15;
  sub_24469D4F8();
  if (!v9)
  {
    uint64_t v16 = v14;
    char v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D760);
    sub_24460DB00(&qword_268E9D768);
    sub_24469D528();
    char v19 = 2;
    sub_24469D518();
    char v18 = 3;
    sub_24469D538();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t InstallRequirements.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D770);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24460DAAC();
  sub_24469D708();
  if (!v2)
  {
    char v30 = 0;
    uint64_t v11 = sub_24469D428();
    uint64_t v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D760);
    char v29 = 1;
    sub_24460DB00(&qword_268E9D778);
    swift_bridgeObjectRetain();
    sub_24469D458();
    uint64_t v24 = v11;
    uint64_t v14 = v25;
    char v28 = 2;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_24469D448();
    int v26 = v16;
    uint64_t v23 = v15;
    char v27 = 3;
    uint64_t v17 = sub_24469D468();
    char v18 = v9;
    char v20 = v19;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
    *(void *)a2 = v24;
    *(void *)(a2 + 8) = v13;
    uint64_t v21 = v23;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v21;
    *(unsigned char *)(a2 + 32) = v26 & 1;
    *(void *)(a2 + 40) = v17;
    *(unsigned char *)(a2 + 48) = v20 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24460DA7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallRequirements.init(from:)(a1, a2);
}

uint64_t sub_24460DA94(void *a1)
{
  return InstallRequirements.encode(to:)(a1);
}

unint64_t sub_24460DAAC()
{
  unint64_t result = qword_268E9D758;
  if (!qword_268E9D758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D758);
  }
  return result;
}

uint64_t sub_24460DB00(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9D760);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for InstallRequirements()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InstallRequirements(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstallRequirements(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithTake for InstallRequirements(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallRequirements(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallRequirements(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallRequirements()
{
  return &type metadata for InstallRequirements;
}

uint64_t getEnumTagSinglePayload for InstallRequirements.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InstallRequirements.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24460DF14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallRequirements.CodingKeys()
{
  return &type metadata for InstallRequirements.CodingKeys;
}

unint64_t sub_24460DF50()
{
  unint64_t result = qword_268E9D780;
  if (!qword_268E9D780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D780);
  }
  return result;
}

unint64_t sub_24460DFA8()
{
  unint64_t result = qword_268E9D788;
  if (!qword_268E9D788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D788);
  }
  return result;
}

unint64_t sub_24460E000()
{
  unint64_t result = qword_268E9D790;
  if (!qword_268E9D790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D790);
  }
  return result;
}

uint64_t sub_24460E054(void *a1, uint64_t a2, uint64_t *a3)
{
  int v3 = a3;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x270FA5388]();
  BOOL v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24469CC68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469CC08();
  id v12 = a1;
  id v13 = a1;
  uint64_t v14 = sub_24469CC48();
  os_log_type_t v15 = sub_24469D198();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    char v28 = v3;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v27 = a2;
    char v19 = (void *)v18;
    uint64_t v26 = v9;
    *(_DWORD *)uint64_t v17 = 138543362;
    uint64_t v25 = v17 + 4;
    id v20 = a1;
    uint64_t v21 = v8;
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v30 = v22;
    uint64_t v9 = v26;
    sub_24469D218();
    void *v19 = v22;
    uint64_t v8 = v21;

    _os_log_impl(&dword_244604000, v14, v15, "Error fetching synchronous remote object proxy: %{public}@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D7C8);
    swift_arrayDestroy();
    MEMORY[0x245695AF0](v19, -1, -1);
    uint64_t v23 = v17;
    int v3 = v28;
    MEMORY[0x245695AF0](v23, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  type metadata accessor for MarketplaceKitError();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_24469CA98();
  return sub_24460BD08((uint64_t)v7, v3);
}

uint64_t sub_24460E30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6(a1, a2);
  sub_24469CA98();
  return sub_24460BD08((uint64_t)v11, a5);
}

uint64_t sub_24460E3BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000002446A9F30 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002446A9F50 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69746152656761 && a2 == 0xED00006B6E615267 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002446A9F70)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24460E58C(void *a1)
{
  return sub_24460E054(a1, v1, &qword_268E9D798);
}

uint64_t sub_24460E5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_24460E60C()
{
  unint64_t result = qword_268E9D7B0;
  if (!qword_268E9D7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D7B0);
  }
  return result;
}

unint64_t sub_24460E660()
{
  unint64_t result = qword_268E9D7B8;
  if (!qword_268E9D7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D7B8);
  }
  return result;
}

uint64_t sub_24460E6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 1:
    case 2:
    case 3:
    case 4:
      goto LABEL_4;
    case 5:
LABEL_3:
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24460E754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 1:
    case 2:
    case 3:
    case 4:
      goto LABEL_4;
    case 5:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24460E80C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24460E844(uint64_t a1, uint64_t a2)
{
  return sub_24460E30C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), &qword_268E9D798, (void (*)(uint64_t, uint64_t))sub_24461A0C8);
}

uint64_t sub_24460E87C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24460E8C4(void *a1)
{
  return sub_24460E054(a1, v1, qword_26B0D1260);
}

unint64_t sub_24460E8E8()
{
  unint64_t result = qword_26B0D1188;
  if (!qword_26B0D1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1188);
  }
  return result;
}

unint64_t sub_24460E93C()
{
  unint64_t result = qword_26B0D1180;
  if (!qword_26B0D1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1180);
  }
  return result;
}

uint64_t sub_24460E990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  if (a7) {
    int v7 = 4;
  }
  else {
    int v7 = 0;
  }
  switch((a6 >> 60) & 3 | v7)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 2uLL:
      uint64_t result = sub_24460BBA4(a5, a6 & 0xCFFFFFFFFFFFFFFFLL);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24460EA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  if (a7) {
    int v7 = 4;
  }
  else {
    int v7 = 0;
  }
  switch((a6 >> 60) & 3 | v7)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2uLL:
      uint64_t result = sub_24460B97C(a5, a6 & 0xCFFFFFFFFFFFFFFFLL);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24460EA78(uint64_t a1, uint64_t a2)
{
  return sub_24460E30C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), qword_26B0D1260, (void (*)(uint64_t, uint64_t))sub_244619BE0);
}

uint64_t sub_24460EAB0(void *a1)
{
  return sub_24460E054(a1, v1, &qword_268E9D7D0);
}

unint64_t sub_24460EAD4()
{
  unint64_t result = qword_268E9D7E0;
  if (!qword_268E9D7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D7E0);
  }
  return result;
}

unint64_t sub_24460EB28()
{
  unint64_t result = qword_268E9D7E8;
  if (!qword_268E9D7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D7E8);
  }
  return result;
}

uint64_t sub_24460EB7C(uint64_t a1, uint64_t a2)
{
  return sub_24460E30C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), &qword_268E9D7D0, (void (*)(uint64_t, uint64_t))sub_244619700);
}

ValueMetadata *type metadata accessor for MarketplaceSceneConnectionOptionDefinition()
{
  return &type metadata for MarketplaceSceneConnectionOptionDefinition;
}

uint64_t LocalizedStringsRequest.LocalizedString.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalizedStringsRequest.LocalizedString.replacementTokens.getter()
{
  return swift_bridgeObjectRetain();
}

MarketplaceKit::LocalizedStringsRequest::LocalizedString __swiftcall LocalizedStringsRequest.LocalizedString.init(key:replacementTokens:)(Swift::String key, Swift::OpaquePointer replacementTokens)
{
  *(Swift::String *)uint64_t v2 = key;
  *(Swift::OpaquePointer *)(v2 + 16) = replacementTokens;
  result.field2446B1110 = key;
  result.field2446B111C = replacementTokens;
  return result;
}

uint64_t sub_24460EC28()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 7955819;
  }
}

uint64_t sub_24460EC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24461DA78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24460EC88(uint64_t a1)
{
  unint64_t v2 = sub_24460EEC0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24460ECC4(uint64_t a1)
{
  unint64_t v2 = sub_24460EEC0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LocalizedStringsRequest.LocalizedString.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D7F0);
  uint64_t v11 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5);
  int v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24460EEC0();
  sub_24469D728();
  char v14 = 0;
  sub_24469D548();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D800);
    sub_24460F15C(&qword_268E9D808);
    sub_24469D568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

unint64_t sub_24460EEC0()
{
  unint64_t result = qword_268E9D7F8;
  if (!qword_268E9D7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D7F8);
  }
  return result;
}

uint64_t LocalizedStringsRequest.LocalizedString.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D810);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24460EEC0();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v10 = sub_24469D478();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D800);
  char v16 = 1;
  sub_24460F15C(&qword_268E9D818);
  swift_bridgeObjectRetain();
  sub_24469D498();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v13 = v15[1];
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24460F15C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9D800);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24460F1C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LocalizedStringsRequest.LocalizedString.init(from:)(a1, a2);
}

uint64_t sub_24460F1D8(void *a1)
{
  return LocalizedStringsRequest.LocalizedString.encode(to:)(a1);
}

uint64_t LocalizedStringsRequest.strings.getter()
{
  return swift_bridgeObjectRetain();
}

MarketplaceKit::LocalizedStringsRequest __swiftcall LocalizedStringsRequest.init(strings:)(MarketplaceKit::LocalizedStringsRequest strings)
{
  v1->field2446B10F4._rawValue = strings.field2446B10F4._rawValue;
  return strings;
}

uint64_t LocalizedStringsRequest.run()(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = v3;
  return MEMORY[0x270FA2498](sub_24460F224, 0, 0);
}

uint64_t sub_24460F224()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(void *)(v0 + 56) = 0x1000000000000000;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 96) = v0 + 16;
  sub_24460E990(v1, 0, 0, 0, 0, 0x1000000000000000uLL, 1);
  uint64_t v5 = (char *)&dword_268E9D828 + dword_268E9D828;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24460F388;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 72, v0 + 96, sub_244654F78, 0);
}

uint64_t sub_24460F388()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24460F6DC;
  }
  else
  {
    sub_24460EA04(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    uint64_t v3 = sub_24460F4B0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24460F4B0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  int v2 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 112);
  if (v2 == 8)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    **(void **)(v0 + 104) = v1;
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  unint64_t v4 = *(void *)(v0 + 80);
  int64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    unint64_t v19 = *(void *)(v0 + 80);
    char v20 = *(unsigned char *)(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v22 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24461CDF8(0, v5, 0);
    uint64_t v6 = v22;
    unint64_t v7 = *(void *)(v22 + 16);
    uint64_t v8 = 32 * v7 + 32;
    uint64_t v9 = (uint64_t *)(v3 + 40);
    do
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      int64_t v12 = v7 + 1;
      unint64_t v13 = *(void *)(v22 + 24);
      swift_bridgeObjectRetain_n();
      if (v7 >= v13 >> 1) {
        sub_24461CDF8(v13 > 1, v12, 1);
      }
      *(void *)(v22 + 16) = v12;
      char v14 = (void *)(v22 + v8);
      *char v14 = v10;
      v14[1] = v11;
      v8 += 32;
      v9 += 3;
      ++v7;
      v14[2] = v10;
      v14[3] = v11;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v1 = v21;
    LOBYTE(v2) = v20;
    unint64_t v4 = v19;
  }
  if (*(void *)(v6 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D830);
    uint64_t v15 = sub_24469D3D8();
  }
  else
  {
    uint64_t v15 = MEMORY[0x263F8EE80];
  }
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v23 = v15;
  sub_24461CAAC(v6, 1, (void (*)(uint64_t *__return_ptr, id *, void *))sub_24460F758);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    sub_24461CE18(v1, v4, v2);
    uint64_t v1 = v23;
    goto LABEL_17;
  }
  return swift_release();
}

uint64_t sub_24460F6DC()
{
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24460F758@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24460F778()
{
  return 1;
}

uint64_t sub_24460F784()
{
  return sub_24469D688();
}

uint64_t sub_24460F7B0()
{
  return 0x73676E69727473;
}

uint64_t sub_24460F7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73676E69727473 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_24460F860(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24460F86C(uint64_t a1)
{
  unint64_t v2 = sub_24461CE80();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24460F8A8(uint64_t a1)
{
  unint64_t v2 = sub_24461CE80();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LocalizedStringsRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D838);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  char v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24461CE80();
  sub_24469D728();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D848);
  sub_24461CF28(&qword_268E9D850, (void (*)(void))sub_24461CED4);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t LocalizedStringsRequest.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D860);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24461CE80();
  sub_24469D708();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D848);
    sub_24461CF28(&qword_268E9D868, (void (*)(void))sub_24461CF98);
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24460FC0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LocalizedStringsRequest.init(from:)(a1, a2);
}

uint64_t sub_24460FC24(void *a1)
{
  return LocalizedStringsRequest.encode(to:)(a1);
}

uint64_t sub_24460FC3C()
{
  return sub_24469D6C8();
}

uint64_t sub_24460FC80()
{
  return sub_24469D6C8();
}

unint64_t sub_24460FCC0()
{
  return 0xD000000000000010;
}

uint64_t sub_24460FCDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24461DB58(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24460FD08(uint64_t a1)
{
  unint64_t v2 = sub_24461CFEC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24460FD44(uint64_t a1)
{
  unint64_t v2 = sub_24461CFEC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LocalizedStringsResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D878);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24461CFEC();
  sub_24469D728();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D800);
  sub_24460F15C(&qword_268E9D808);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t LocalizedStringsResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D888);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24461CFEC();
  sub_24469D708();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D800);
    sub_24460F15C(&qword_268E9D818);
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_244610090@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return LocalizedStringsResponse.init(from:)(a1, a2);
}

uint64_t sub_2446100A8(void *a1)
{
  return LocalizedStringsResponse.encode(to:)(a1);
}

uint64_t sub_2446100C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v5[17] = *v4;
  return MEMORY[0x270FA2498](sub_244610110, 0, 0);
}

uint64_t sub_244610110()
{
  uint64_t v1 = *(uint64_t ***)(v0 + 104);
  sub_24460E8E8();
  unint64_t v2 = sub_24460E93C();
  uint64_t v3 = **v1;
  uint64_t v4 = (*v1)[1];
  uint64_t v5 = (*v1)[2];
  uint64_t v6 = (*v1)[3];
  uint64_t v7 = (*v1)[4];
  unint64_t v8 = (*v1)[5];
  char v9 = *((unsigned char *)*v1 + 48);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 72) = v0 + 16;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 40) = v6;
  *(void *)(v0 + 48) = v7;
  *(void *)(v0 + 56) = v8;
  *(unsigned char *)(v0 + 64) = v9;
  sub_24460E990(v3, v4, v5, v6, v7, v8, v9);
  *(void *)(v0 + 80) = &type metadata for FetchPrivateDataRequest;
  *(void *)(v0 + 88) = v2;
  uint64_t v10 = sub_24469CAC8();
  *(void *)(v0 + 144) = v10;
  *(void *)(v0 + 152) = v11;
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  uint64_t v14 = *(void *)(v0 + 136);
  long long v20 = *(_OWORD *)(v0 + 112);
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  uint64_t v15 = sub_24469CAD8();
  *(void *)(v0 + 160) = v15;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v0 + 168) = v16;
  *(void *)(v16 + 16) = v15;
  *(_OWORD *)(v16 + 24) = v20;
  *(void *)(v16 + 40) = v12;
  *(void *)(v16 + 48) = v13;
  *(void *)(v16 + 56) = v14;
  char v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v17;
  void *v17 = v0;
  v17[1] = sub_244610320;
  uint64_t v18 = *(void *)(v0 + 96);
  return MEMORY[0x270FA2360](v18, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461ED78, v16, &type metadata for FetchDataResponse);
}

uint64_t sub_244610320()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2446104A8;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244610444;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244610444()
{
  sub_24460B97C(v0[18], v0[19]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2446104A8()
{
  uint64_t v2 = *(void *)(v0 + 144);
  unint64_t v1 = *(void *)(v0 + 152);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24461052C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for ManifestValidationRequest();
  v4[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2446105EC, 0, 0);
}

uint64_t sub_2446105EC()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(uint64_t **)(v0 + 40);
  sub_24461EC38(&qword_268E9DB50, (void (*)(uint64_t))type metadata accessor for ManifestValidationRequest);
  uint64_t v4 = sub_24461EC38(&qword_268E9DB58, (void (*)(uint64_t))type metadata accessor for ManifestValidationRequest);
  sub_24461EC80(*v3, v1, (uint64_t (*)(void))type metadata accessor for ManifestValidationRequest);
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = sub_24469CAC8();
  *(void *)(v0 + 96) = v5;
  *(void *)(v0 + 104) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v0 + 72);
  long long v14 = *(_OWORD *)(v0 + 48);
  sub_24461ECE8(*(void *)(v0 + 88), (uint64_t (*)(void))type metadata accessor for ManifestValidationRequest);
  uint64_t v9 = sub_24469CAD8();
  *(void *)(v0 + 112) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 120) = v10;
  *(void *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v14;
  *(void *)(v10 + 40) = v5;
  *(void *)(v10 + 48) = v7;
  *(void *)(v10 + 56) = v8;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  *uint64_t v11 = v0;
  v11[1] = sub_244610864;
  return MEMORY[0x270FA2360](v0 + 144, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461ED48, v10, v12);
}

uint64_t sub_244610864()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24461EEEC;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_24461EEF0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244610988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v4[16] = *v3;
  return MEMORY[0x270FA2498](sub_2446109D4, 0, 0);
}

uint64_t sub_2446109D4()
{
  uint64_t v1 = *(uint64_t ***)(v0 + 96);
  sub_24460E60C();
  unint64_t v2 = sub_24460E660();
  uint64_t v3 = **v1;
  uint64_t v4 = (*v1)[1];
  uint64_t v5 = (*v1)[2];
  uint64_t v6 = (*v1)[3];
  uint64_t v7 = (*v1)[4];
  uint64_t v8 = (*v1)[5];
  char v9 = *((unsigned char *)*v1 + 48);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 72) = v0 + 16;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 40) = v6;
  *(void *)(v0 + 48) = v7;
  *(void *)(v0 + 56) = v8;
  *(unsigned char *)(v0 + 64) = v9;
  sub_24460E6B4(v3, v4, v5, v6, v7, v8, v9);
  *(void *)(v0 + 80) = &type metadata for SetPrivateDataRequest;
  *(void *)(v0 + 88) = v2;
  uint64_t v10 = sub_24469CAC8();
  *(void *)(v0 + 136) = v10;
  *(void *)(v0 + 144) = v11;
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  uint64_t v14 = *(void *)(v0 + 128);
  long long v20 = *(_OWORD *)(v0 + 104);
  sub_24460E754(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  uint64_t v15 = sub_24469CAD8();
  *(void *)(v0 + 152) = v15;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v0 + 160) = v16;
  *(void *)(v16 + 16) = v15;
  *(_OWORD *)(v16 + 24) = v20;
  *(void *)(v16 + 40) = v12;
  *(void *)(v16 + 48) = v13;
  *(void *)(v16 + 56) = v14;
  char v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  void *v17 = v0;
  v17[1] = sub_244610BFC;
  return MEMORY[0x270FA2360](v0 + 65, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461EC08, v16, v18);
}

uint64_t sub_244610BFC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244610D88;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244610D20;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244610D20()
{
  sub_24460B97C(*(void *)(v0 + 136), *(void *)(v0 + 144));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 65);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_244610D88()
{
  uint64_t v2 = *(void *)(v0 + 136);
  unint64_t v1 = *(void *)(v0 + 144);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_244610E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return MEMORY[0x270FA2498](sub_244610E58, 0, 0);
}

uint64_t sub_244610E58()
{
  unint64_t v1 = *(uint64_t ***)(v0 + 72);
  sub_24461EAD4();
  unint64_t v2 = sub_24461EB28();
  uint64_t v4 = **v1;
  uint64_t v3 = (*v1)[1];
  uint64_t v5 = (*v1)[2];
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 48) = v0 + 16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v0 + 56) = &type metadata for AvailableAppMetadataRequest;
  *(void *)(v0 + 64) = v2;
  uint64_t v6 = sub_24469CAC8();
  *(void *)(v0 + 112) = v6;
  *(void *)(v0 + 120) = v7;
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  uint64_t v10 = *(void *)(v0 + 104);
  long long v16 = *(_OWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_24469CAD8();
  *(void *)(v0 + 128) = v11;
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 136) = v12;
  *(void *)(v12 + 16) = v11;
  *(_OWORD *)(v12 + 24) = v16;
  *(void *)(v12 + 40) = v8;
  *(void *)(v12 + 48) = v9;
  *(void *)(v12 + 56) = v10;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D738);
  *uint64_t v13 = v0;
  v13[1] = sub_24461106C;
  return MEMORY[0x270FA2360](v0 + 40, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461EB7C, v12, v14);
}

uint64_t sub_24461106C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2446111F8;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244611190;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244611190()
{
  sub_24460B97C(v0[14], v0[15]);
  uint64_t v1 = v0[5];
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_2446111F8()
{
  uint64_t v2 = *(void *)(v0 + 112);
  unint64_t v1 = *(void *)(v0 + 120);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24461127C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  v4[5] = *v3;
  return MEMORY[0x270FA2498](sub_2446112C8, 0, 0);
}

uint64_t sub_2446112C8()
{
  uint64_t v1 = sub_24469CAC8();
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v0 + 40);
  long long v11 = *(_OWORD *)(v0 + 16);
  uint64_t v6 = sub_24469CAD8();
  *(void *)(v0 + 64) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 72) = v7;
  *(void *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v11;
  *(void *)(v7 + 40) = v3;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  void *v8 = v0;
  v8[1] = sub_24461146C;
  return MEMORY[0x270FA2360](v0 + 96, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461EAA4, v7, v9);
}

uint64_t sub_24461146C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2446115F8;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244611590;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244611590()
{
  sub_24460B97C(*(void *)(v0 + 48), *(void *)(v0 + 56));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 96);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2446115F8()
{
  uint64_t v2 = *(void *)(v0 + 48);
  unint64_t v1 = *(void *)(v0 + 56);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24461167C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = *v3;
  return MEMORY[0x270FA2498](sub_2446116C8, 0, 0);
}

uint64_t sub_2446116C8()
{
  unint64_t v1 = *(void ***)(v0 + 64);
  sub_24461E9CC();
  unint64_t v2 = sub_24461EA20();
  uint64_t v3 = (*v1)[1];
  char v4 = *((unsigned char *)*v1 + 16);
  *(void *)(v0 + 16) = **v1;
  *(void *)(v0 + 40) = v0 + 16;
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 32) = v4;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 48) = &type metadata for DiscoverRestoresRequest;
  *(void *)(v0 + 56) = v2;
  uint64_t v5 = sub_24469CAC8();
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 112) = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v0 + 96);
  long long v15 = *(_OWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_24469CAD8();
  *(void *)(v0 + 120) = v10;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  *(void *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v15;
  *(void *)(v11 + 40) = v7;
  *(void *)(v11 + 48) = v8;
  *(void *)(v11 + 56) = v9;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  *uint64_t v12 = v0;
  v12[1] = sub_2446118C8;
  return MEMORY[0x270FA2360](v0 + 33, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461EA74, v11, v13);
}

uint64_t sub_2446118C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24461EEE0;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_24461EF8C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2446119EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = *v3;
  return MEMORY[0x270FA2498](sub_244611A38, 0, 0);
}

uint64_t sub_244611A38()
{
  unint64_t v1 = *(void ***)(v0 + 56);
  sub_24461E8F4();
  unint64_t v2 = sub_24461E948();
  uint64_t v3 = (*v1)[1];
  *(void *)(v0 + 16) = **v1;
  *(void *)(v0 + 32) = v0 + 16;
  *(void *)(v0 + 24) = v3;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 40) = &type metadata for PrioritizeAppRequest;
  *(void *)(v0 + 48) = v2;
  uint64_t v4 = sub_24469CAC8();
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v5;
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  uint64_t v8 = *(void *)(v0 + 88);
  long long v14 = *(_OWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_24469CAD8();
  *(void *)(v0 + 112) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 120) = v10;
  *(void *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v14;
  *(void *)(v10 + 40) = v6;
  *(void *)(v10 + 48) = v7;
  *(void *)(v10 + 56) = v8;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  *uint64_t v11 = v0;
  v11[1] = sub_244611C30;
  return MEMORY[0x270FA2360](v0 + 144, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E99C, v10, v12);
}

uint64_t sub_244611C30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244611DBC;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244611D54;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244611D54()
{
  sub_24460B97C(*(void *)(v0 + 96), *(void *)(v0 + 104));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 144);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_244611DBC()
{
  uint64_t v2 = *(void *)(v0 + 96);
  unint64_t v1 = *(void *)(v0 + 104);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_244611E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[10] = *v3;
  return MEMORY[0x270FA2498](sub_244611E8C, 0, 0);
}

uint64_t sub_244611E8C()
{
  unint64_t v1 = *(void ***)(v0 + 48);
  sub_24461E81C();
  unint64_t v2 = sub_24461E870();
  *(void *)(v0 + 24) = **v1;
  *(void *)(v0 + 16) = v0 + 24;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 32) = &type metadata for PromoteAppsRequest;
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = sub_24469CAC8();
  *(void *)(v0 + 88) = v3;
  *(void *)(v0 + 96) = v4;
  uint64_t v5 = v3;
  uint64_t v6 = v4;
  uint64_t v7 = *(void *)(v0 + 80);
  long long v13 = *(_OWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_24469CAD8();
  *(void *)(v0 + 104) = v8;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 112) = v9;
  *(void *)(v9 + 16) = v8;
  *(_OWORD *)(v9 + 24) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  *uint64_t v10 = v0;
  v10[1] = sub_244612080;
  return MEMORY[0x270FA2360](v0 + 136, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E8C4, v9, v11);
}

uint64_t sub_244612080()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24461220C;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_2446121A4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2446121A4()
{
  sub_24460B97C(*(void *)(v0 + 88), *(void *)(v0 + 96));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 136);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_24461220C()
{
  uint64_t v2 = *(void *)(v0 + 88);
  unint64_t v1 = *(void *)(v0 + 96);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_244612290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return MEMORY[0x270FA2498](sub_2446122E0, 0, 0);
}

uint64_t sub_2446122E0()
{
  unint64_t v1 = *(void ***)(v0 + 72);
  sub_24461E6E8();
  unint64_t v2 = sub_24461E73C();
  uint64_t v3 = (*v1)[1];
  char v4 = *((unsigned char *)*v1 + 16);
  *(void *)(v0 + 16) = **v1;
  *(void *)(v0 + 40) = v0 + 16;
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 32) = v4;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 48) = &type metadata for UpdateMetadataRequest;
  *(void *)(v0 + 56) = v2;
  uint64_t v5 = sub_24469CAC8();
  *(void *)(v0 + 112) = v5;
  *(void *)(v0 + 120) = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v0 + 104);
  long long v16 = *(_OWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_24469CAD8();
  *(void *)(v0 + 128) = v10;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 136) = v11;
  *(void *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v16;
  *(void *)(v11 + 40) = v7;
  *(void *)(v11 + 48) = v8;
  *(void *)(v11 + 56) = v9;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DA90);
  *uint64_t v12 = v0;
  v12[1] = sub_2446124D0;
  uint64_t v14 = *(void *)(v0 + 64);
  return MEMORY[0x270FA2360](v14, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E790, v11, v13);
}

uint64_t sub_2446124D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24461EEE8;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_24461EED8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2446125F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  v4[17] = *v3;
  return MEMORY[0x270FA2498](sub_244612640, 0, 0);
}

uint64_t sub_244612640()
{
  unint64_t v1 = *(uint64_t ***)(v0 + 104);
  sub_24461E610();
  unint64_t v2 = sub_24461E664();
  uint64_t v3 = *v1;
  uint64_t v5 = **v1;
  uint64_t v4 = (*v1)[1];
  uint64_t v6 = (*v1)[2];
  uint64_t v7 = (*v1)[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  *(void *)(v0 + 16) = v5;
  *(void *)(v0 + 80) = v0 + 16;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v6;
  *(void *)(v0 + 40) = v7;
  *(void *)(v0 + 48) = v8;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 64) = v10;
  *(void *)(v0 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v0 + 88) = &type metadata for UpdateMetadata;
  *(void *)(v0 + 96) = v2;
  uint64_t v12 = sub_24469CAC8();
  *(void *)(v0 + 144) = v12;
  *(void *)(v0 + 152) = v13;
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  uint64_t v16 = *(void *)(v0 + 136);
  long long v22 = *(_OWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_24469CAD8();
  *(void *)(v0 + 160) = v17;
  uint64_t v18 = swift_task_alloc();
  *(void *)(v0 + 168) = v18;
  *(void *)(v18 + 16) = v17;
  *(_OWORD *)(v18 + 24) = v22;
  *(void *)(v18 + 40) = v14;
  *(void *)(v18 + 48) = v15;
  *(void *)(v18 + 56) = v16;
  unint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  void *v19 = v0;
  v19[1] = sub_2446128BC;
  return MEMORY[0x270FA2360](v0 + 192, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E6B8, v18, v20);
}

uint64_t sub_2446128BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2446104A8;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_2446129E0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2446129E0()
{
  sub_24460B97C(*(void *)(v0 + 144), *(void *)(v0 + 152));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 192);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_244612A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v5[14] = *v4;
  return MEMORY[0x270FA2498](sub_244612A98, 0, 0);
}

uint64_t sub_244612A98()
{
  uint64_t v1 = *(uint64_t ***)(v0 + 80);
  sub_24461E4B4();
  unint64_t v2 = sub_24461E508();
  uint64_t v3 = **v1;
  uint64_t v4 = (*v1)[1];
  uint64_t v5 = (*v1)[2];
  unsigned __int8 v6 = *((unsigned char *)*v1 + 24);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 48) = v0 + 16;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v5;
  *(unsigned char *)(v0 + 40) = v6;
  sub_24461E55C(v3, v4, v5, v6);
  *(void *)(v0 + 56) = &type metadata for PerformPrivateActionRequest;
  *(void *)(v0 + 64) = v2;
  uint64_t v7 = sub_24469CAC8();
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 128) = v8;
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  uint64_t v11 = *(void *)(v0 + 112);
  long long v17 = *(_OWORD *)(v0 + 88);
  sub_24461E57C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  uint64_t v12 = sub_24469CAD8();
  *(void *)(v0 + 136) = v12;
  uint64_t v13 = swift_task_alloc();
  *(void *)(v0 + 144) = v13;
  *(void *)(v13 + 16) = v12;
  *(_OWORD *)(v13 + 24) = v17;
  *(void *)(v13 + 40) = v9;
  *(void *)(v13 + 48) = v10;
  *(void *)(v13 + 56) = v11;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_244612C94;
  uint64_t v15 = *(void *)(v0 + 72);
  return MEMORY[0x270FA2360](v15, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E59C, v13, &type metadata for PerformPrivateActionResponse);
}

uint64_t sub_244612C94()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244612E1C;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244612DB8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244612DB8()
{
  sub_24460B97C(v0[15], v0[16]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_244612E1C()
{
  uint64_t v2 = *(void *)(v0 + 120);
  unint64_t v1 = *(void *)(v0 + 128);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_244612EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a1;
  v5[6] = a3;
  v5[9] = *v4;
  return MEMORY[0x270FA2498](sub_244612EEC, 0, 0);
}

uint64_t sub_244612EEC()
{
  sub_24461E380();
  *(void *)(v0 + 32) = sub_24461E3D4();
  *(void *)(v0 + 24) = &type metadata for FetchPublicDataRequest;
  uint64_t v1 = sub_24469CAC8();
  *(void *)(v0 + 80) = v1;
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v0 + 72);
  long long v11 = *(_OWORD *)(v0 + 48);
  uint64_t v6 = sub_24469CAD8();
  *(void *)(v0 + 96) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 104) = v7;
  *(void *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v11;
  *(void *)(v7 + 40) = v3;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v8;
  void *v8 = v0;
  v8[1] = sub_244613094;
  uint64_t v9 = *(void *)(v0 + 40);
  return MEMORY[0x270FA2360](v9, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E428, v7, &type metadata for FetchDataResponse);
}

uint64_t sub_244613094()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24461321C;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_2446131B8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2446131B8()
{
  sub_24460B97C(v0[10], v0[11]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24461321C()
{
  uint64_t v2 = *(void *)(v0 + 80);
  unint64_t v1 = *(void *)(v0 + 88);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2446132A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for SetPublicDataRequest(0);
  v4[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244613360, 0, 0);
}

uint64_t sub_244613360()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(uint64_t **)(v0 + 40);
  sub_24461EC38(&qword_268E9DA00, (void (*)(uint64_t))type metadata accessor for SetPublicDataRequest);
  uint64_t v4 = sub_24461EC38(&qword_268E9DA08, (void (*)(uint64_t))type metadata accessor for SetPublicDataRequest);
  sub_24461EC80(*v3, v1, type metadata accessor for SetPublicDataRequest);
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = sub_24469CAC8();
  *(void *)(v0 + 96) = v5;
  *(void *)(v0 + 104) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v0 + 72);
  long long v14 = *(_OWORD *)(v0 + 48);
  sub_24461ECE8(*(void *)(v0 + 88), type metadata accessor for SetPublicDataRequest);
  uint64_t v9 = sub_24469CAD8();
  *(void *)(v0 + 112) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 120) = v10;
  *(void *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v14;
  *(void *)(v10 + 40) = v5;
  *(void *)(v10 + 48) = v7;
  *(void *)(v10 + 56) = v8;
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  *long long v11 = v0;
  v11[1] = sub_2446135D8;
  return MEMORY[0x270FA2360](v0 + 144, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E350, v10, v12);
}

uint64_t sub_2446135D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244613774;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_2446136FC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2446136FC()
{
  sub_24460B97C(*(void *)(v0 + 96), *(void *)(v0 + 104));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 144);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_244613774()
{
  uint64_t v2 = *(void *)(v0 + 96);
  unint64_t v1 = *(void *)(v0 + 104);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_244613800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for AppInstallRequest();
  v4[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2446138C0, 0, 0);
}

uint64_t sub_2446138C0()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(uint64_t **)(v0 + 40);
  sub_24461EC38(&qword_268E9D9E8, (void (*)(uint64_t))type metadata accessor for AppInstallRequest);
  uint64_t v4 = sub_24461EC38(&qword_268E9D9F0, (void (*)(uint64_t))type metadata accessor for AppInstallRequest);
  sub_24461EC80(*v3, v1, (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = sub_24469CAC8();
  *(void *)(v0 + 96) = v5;
  *(void *)(v0 + 104) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v0 + 72);
  long long v14 = *(_OWORD *)(v0 + 48);
  sub_24461ECE8(*(void *)(v0 + 88), (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  uint64_t v9 = sub_24469CAD8();
  *(void *)(v0 + 112) = v9;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 120) = v10;
  *(void *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v14;
  *(void *)(v10 + 40) = v5;
  *(void *)(v10 + 48) = v7;
  *(void *)(v10 + 56) = v8;
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  *long long v11 = v0;
  v11[1] = sub_244610864;
  return MEMORY[0x270FA2360](v0 + 144, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E320, v10, v12);
}

uint64_t sub_244613B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return MEMORY[0x270FA2498](sub_244613B88, 0, 0);
}

uint64_t sub_244613B88()
{
  uint64_t v1 = *(void ***)(v0 + 72);
  sub_24461E118();
  unint64_t v2 = sub_24461E16C();
  uint64_t v3 = (*v1)[1];
  char v4 = *((unsigned char *)*v1 + 16);
  *(void *)(v0 + 16) = **v1;
  *(void *)(v0 + 40) = v0 + 16;
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 32) = v4;
  sub_24461E1C0();
  *(void *)(v0 + 48) = &type metadata for PerformActionRequest;
  *(void *)(v0 + 56) = v2;
  uint64_t v5 = sub_24469CAC8();
  *(void *)(v0 + 112) = v5;
  *(void *)(v0 + 120) = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v0 + 104);
  long long v15 = *(_OWORD *)(v0 + 80);
  sub_24461E1CC();
  uint64_t v10 = sub_24469CAD8();
  *(void *)(v0 + 128) = v10;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 136) = v11;
  *(void *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v15;
  *(void *)(v11 + 40) = v7;
  *(void *)(v11 + 48) = v8;
  *(void *)(v11 + 56) = v9;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_244613D78;
  uint64_t v13 = *(void *)(v0 + 64);
  return MEMORY[0x270FA2360](v13, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E1D8, v11, &type metadata for PerformActionResponse);
}

uint64_t sub_244613D78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2446111F8;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244613E9C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244613E9C()
{
  sub_24460B97C(v0[14], v0[15]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_244613F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[10] = *v3;
  return MEMORY[0x270FA2498](sub_244613F4C, 0, 0);
}

uint64_t sub_244613F4C()
{
  *(void *)(v0 + 24) = ***(void ***)(v0 + 48);
  *(void *)(v0 + 16) = v0 + 24;
  *(void *)(v0 + 32) = MEMORY[0x263F8E970];
  *(void *)(v0 + 40) = MEMORY[0x263F8E978];
  uint64_t v1 = sub_24469CAC8();
  *(void *)(v0 + 88) = v1;
  *(void *)(v0 + 96) = v2;
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v0 + 80);
  long long v11 = *(_OWORD *)(v0 + 56);
  uint64_t v6 = sub_24469CAD8();
  *(void *)(v0 + 104) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 112) = v7;
  *(void *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v11;
  *(void *)(v7 + 40) = v3;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  void *v8 = v0;
  v8[1] = sub_244614124;
  return MEMORY[0x270FA2360](v0 + 136, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461DBE0, v7, v9);
}

uint64_t sub_244614124()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24461EEDC;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_24461EF88;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244614248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = *v3;
  return MEMORY[0x270FA2498](sub_244614294, 0, 0);
}

uint64_t sub_244614294()
{
  uint64_t v1 = *(void ***)(v0 + 64);
  sub_24461E040();
  unint64_t v2 = sub_24461E094();
  uint64_t v3 = (*v1)[1];
  char v4 = *((unsigned char *)*v1 + 16);
  *(void *)(v0 + 16) = **v1;
  *(void *)(v0 + 40) = v0 + 16;
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 32) = v4;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 48) = &type metadata for PollForUpdatesRequest;
  *(void *)(v0 + 56) = v2;
  uint64_t v5 = sub_24469CAC8();
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 112) = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v0 + 96);
  long long v15 = *(_OWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_24469CAD8();
  *(void *)(v0 + 120) = v10;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  *(void *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v15;
  *(void *)(v11 + 40) = v7;
  *(void *)(v11 + 48) = v8;
  *(void *)(v11 + 56) = v9;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  *uint64_t v12 = v0;
  v12[1] = sub_244614494;
  return MEMORY[0x270FA2360](v0 + 33, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461E0E8, v11, v13);
}

uint64_t sub_244614494()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244614620;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_2446145B8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2446145B8()
{
  sub_24460B97C(*(void *)(v0 + 104), *(void *)(v0 + 112));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 33);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_244614620()
{
  uint64_t v2 = *(void *)(v0 + 104);
  unint64_t v1 = *(void *)(v0 + 112);

  sub_24460B97C(v2, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2446146A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return MEMORY[0x270FA2498](sub_2446146F4, 0, 0);
}

uint64_t sub_2446146F4()
{
  unint64_t v1 = *(uint64_t ***)(v0 + 72);
  sub_24461DE84();
  unint64_t v2 = sub_24461DED8();
  uint64_t v3 = **v1;
  uint64_t v4 = (*v1)[1];
  uint64_t v5 = (void *)(*v1)[2];
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 40) = v0 + 16;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v5;
  sub_24461DF2C(v3, v4);
  id v6 = v5;
  *(void *)(v0 + 48) = &type metadata for SecureButtonActionRequest;
  *(void *)(v0 + 56) = v2;
  uint64_t v7 = sub_24469CAC8();
  *(void *)(v0 + 112) = v7;
  *(void *)(v0 + 120) = v8;
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void **)(v0 + 32);
  long long v19 = *(_OWORD *)(v0 + 80);
  sub_24461DF3C(*(void *)(v0 + 16), *(void *)(v0 + 24));

  uint64_t v13 = sub_24469CAD8();
  *(void *)(v0 + 128) = v13;
  uint64_t v14 = swift_task_alloc();
  *(void *)(v0 + 136) = v14;
  *(void *)(v14 + 16) = v13;
  *(_OWORD *)(v14 + 24) = v19;
  *(void *)(v14 + 40) = v9;
  *(void *)(v14 + 48) = v10;
  *(void *)(v14 + 56) = v11;
  long long v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v15;
  uint64_t v16 = type metadata accessor for SecureButtonActionResponse(0);
  *long long v15 = v0;
  v15[1] = sub_244613D78;
  uint64_t v17 = *(void *)(v0 + 64);
  return MEMORY[0x270FA2360](v17, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461DF4C, v14, v16);
}

uint64_t sub_2446148F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = *v4;
  return MEMORY[0x270FA2498](sub_244614940, 0, 0);
}

uint64_t sub_244614940()
{
  unint64_t v1 = *(void ***)(v0 + 64);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D910);
  sub_24461DD94(&qword_268E9D918);
  uint64_t v3 = sub_24461DD94(&qword_268E9D920);
  uint64_t v4 = (*v1)[1];
  *(void *)(v0 + 16) = **v1;
  *(void *)(v0 + 32) = v0 + 16;
  *(void *)(v0 + 24) = v4;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v3;
  uint64_t v5 = sub_24469CAC8();
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 112) = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v0 + 96);
  long long v16 = *(_OWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_24469CAD8();
  *(void *)(v0 + 120) = v10;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  *(void *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v16;
  *(void *)(v11 + 40) = v7;
  *(void *)(v11 + 48) = v8;
  *(void *)(v11 + 56) = v9;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D928);
  *uint64_t v12 = v0;
  v12[1] = sub_244614B78;
  uint64_t v14 = *(void *)(v0 + 56);
  return MEMORY[0x270FA2360](v14, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461DDF8, v11, v13);
}

uint64_t sub_244614B78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244614620;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244614C9C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244614C9C()
{
  sub_24460B97C(v0[13], v0[14]);
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_244614D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  return MEMORY[0x270FA2498](sub_244614D4C, 0, 0);
}

uint64_t sub_244614D4C()
{
  *(unsigned char *)(v0 + 129) = ***(unsigned char ***)(v0 + 40);
  *(void *)(v0 + 16) = v0 + 129;
  *(void *)(v0 + 24) = MEMORY[0x263F8D4F8];
  *(void *)(v0 + 32) = MEMORY[0x263F8D500];
  uint64_t v1 = sub_24469CAC8();
  *(void *)(v0 + 80) = v1;
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v0 + 72);
  long long v11 = *(_OWORD *)(v0 + 48);
  uint64_t v6 = sub_24469CAD8();
  *(void *)(v0 + 96) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 104) = v7;
  *(void *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v11;
  *(void *)(v7 + 40) = v3;
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E0);
  void *v8 = v0;
  v8[1] = sub_244614F24;
  return MEMORY[0x270FA2360](v0 + 128, 0, 0, 0xD000000000000021, 0x80000002446AA020, sub_24461DC6C, v7, v9);
}

uint64_t sub_244614F24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24461321C;
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = sub_244615048;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244615048()
{
  sub_24460B97C(*(void *)(v0 + 80), *(void *)(v0 + 88));
  uint64_t v1 = *(unsigned __int8 *)(v0 + 128);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2446150B0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1058);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461E44C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_229;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461E478, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2446153F8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_218;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244615740(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_207;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244615A88(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB20);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461EBA0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_196;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461EBCC, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244615DD0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_185;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244616118(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_174;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244616460(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_163;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2446167A8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_152;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244616AF0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DA98);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461E7B4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_141;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461E7E0, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244616E38(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_130;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244617180(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, unint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DA40);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461E5C0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_119;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461E5EC, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2446174C8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1058);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461E44C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_108;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461E478, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244617810(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_97;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244617B58(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_86;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244617EA0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, unint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D9B8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461E1FC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_75;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461E228, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_2446181E8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_0;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244618530(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DC04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_64;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244618878(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D968);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DF70;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_53;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DF9C, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244618BC0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D930);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DE1C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_42;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DE48, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244618F08(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = a1;
  uint64_t v25 = v14;
  v14(v13, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_24461DCA8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244619500;
  aBlock[3] = &block_descriptor_31;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  id v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_24469D238();
  swift_unknownObjectRelease();
  sub_24460E5B0((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1198);
  if (swift_dynamicCast())
  {
    uint64_t v20 = v32;
    v25(v13, v31, v9);
    uint64_t v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    uint64_t v22 = v27;
    *(void *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    v30(v20, v22, v28, sub_24461DC30, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33[0] = v23;
    sub_24469D078();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_244619250(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_24469CC68();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469CC08();
  id v10 = a1;
  id v11 = a1;
  uint64_t v12 = sub_24469CC48();
  os_log_type_t v13 = sub_24469D198();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v24 = v5;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v6;
    unint64_t v15 = (uint8_t *)v14;
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v15 = 138543362;
    id v16 = a1;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v25 = v17;
    uint64_t v5 = v24;
    sub_24469D218();
    uint64_t v18 = v22;
    *uint64_t v22 = v17;

    _os_log_impl(&dword_244604000, v12, v13, "Error fetching remote object proxy: %{public}@", v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D7C8);
    swift_arrayDestroy();
    MEMORY[0x245695AF0](v18, -1, -1);
    id v19 = v15;
    uint64_t v6 = v23;
    MEMORY[0x245695AF0](v19, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  type metadata accessor for MarketplaceKitError();
  sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
  uint64_t v20 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v20;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_24469D078();
}

void sub_244619500(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_244619568(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, unint64_t *a7, uint64_t *a8)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x270FA5388](v14 - 8, v15);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24461AF70(a1, a2, a5, a6, a7, (uint64_t)v17);
  sub_24461C524((uint64_t)v17, a5, a8);
  return sub_24460BD08((uint64_t)v17, a5);
}

uint64_t sub_24461963C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t), void (*a7)(char *))
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x270FA5388](v12 - 8, v13);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6(a1, a2);
  a7(v15);
  return sub_24460BD08((uint64_t)v15, a5);
}

uint64_t sub_244619700@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = sub_24469CC68();
  v22[0] = *(void *)(v5 - 8);
  v22[1] = v5;
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D7D0);
  MEMORY[0x270FA5388](v23, v9);
  id v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB70);
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v19 = (char *)v22 - v18;
  uint64_t v29 = a1;
  unint64_t v30 = a2;
  uint64_t v31 = &v29;
  uint64_t v32 = (char *)v22 - v18;
  sub_24460BBA4(a1, a2);
  uint64_t v27 = v12;
  uint64_t v28 = MEMORY[0x263F06F78];
  unint64_t v26 = sub_24460BBFC();
  uint64_t v25 = sub_24461EE24(&qword_268E9DB78, &qword_268E9DB70);
  sub_24469CAB8();
  sub_24460B97C(v29, v30);
  sub_24460BCA4((uint64_t)v19, (uint64_t)v16, &qword_268E9DB70);
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_24461DFD8((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
  }
  else {
    *id v11 = *v16;
  }
  uint64_t v20 = v24;
  swift_storeEnumTagMultiPayload();
  sub_24461EE74((uint64_t)v11, v20, &qword_268E9D7D0);
  return sub_24460BD08((uint64_t)v19, &qword_268E9DB70);
}

uint64_t sub_244619BE0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_24469CC68();
  v23[0] = *(void *)(v5 - 8);
  v23[1] = v5;
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_26B0D1260);
  MEMORY[0x270FA5388](v24, v9);
  id v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D10C0);
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v19 = (char *)v23 - v18;
  uint64_t v30 = a1;
  unint64_t v31 = a2;
  uint64_t v32 = &v30;
  uint64_t v33 = (char *)v23 - v18;
  sub_24460BBA4(a1, a2);
  uint64_t v28 = v12;
  uint64_t v29 = MEMORY[0x263F06F78];
  unint64_t v27 = sub_24460BBFC();
  uint64_t v26 = sub_24461EE24(&qword_26B0D10B8, &qword_26B0D10C0);
  sub_24469CAB8();
  sub_24460B97C(v30, v31);
  sub_24460BCA4((uint64_t)v19, (uint64_t)v16, &qword_26B0D10C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    char v20 = v16[16];
    *(_OWORD *)id v11 = *(_OWORD *)v16;
    v11[16] = v20;
  }
  uint64_t v21 = v25;
  swift_storeEnumTagMultiPayload();
  sub_24461EE74((uint64_t)v11, v21, qword_26B0D1260);
  return sub_24460BD08((uint64_t)v19, &qword_26B0D10C0);
}

uint64_t sub_24461A0C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = sub_24469CC68();
  v22[0] = *(void *)(v5 - 8);
  v22[1] = v5;
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D798);
  MEMORY[0x270FA5388](v23, v9);
  id v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8F0);
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v19 = (char *)v22 - v18;
  uint64_t v29 = a1;
  unint64_t v30 = a2;
  unint64_t v31 = &v29;
  uint64_t v32 = (char *)v22 - v18;
  sub_24460BBA4(a1, a2);
  uint64_t v27 = v12;
  uint64_t v28 = MEMORY[0x263F06F78];
  unint64_t v26 = sub_24460BBFC();
  uint64_t v25 = sub_24461EE24(&qword_268E9D8F8, &qword_268E9D8F0);
  sub_24469CAB8();
  sub_24460B97C(v29, v30);
  sub_24460BCA4((uint64_t)v19, (uint64_t)v16, &qword_268E9D8F0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_24461DFD8((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
  }
  else {
    *id v11 = *v16;
  }
  uint64_t v20 = v24;
  swift_storeEnumTagMultiPayload();
  sub_24461EE74((uint64_t)v11, v20, &qword_268E9D798);
  return sub_24460BD08((uint64_t)v19, &qword_268E9D8F0);
}

uint64_t sub_24461A5A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = sub_24469CC68();
  v22[0] = *(void *)(v5 - 8);
  v22[1] = v5;
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB28);
  MEMORY[0x270FA5388](v23, v9);
  id v11 = (void *)((char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB30);
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = (void *)((char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v19 = (char *)v22 - v18;
  uint64_t v29 = a1;
  unint64_t v30 = a2;
  unint64_t v31 = &v29;
  uint64_t v32 = (char *)v22 - v18;
  sub_24460BBA4(a1, a2);
  uint64_t v27 = v12;
  uint64_t v28 = MEMORY[0x263F06F78];
  unint64_t v26 = sub_24460BBFC();
  uint64_t v25 = sub_24461EE24(&qword_268E9DB38, &qword_268E9DB30);
  sub_24469CAB8();
  sub_24460B97C(v29, v30);
  sub_24460BCA4((uint64_t)v19, (uint64_t)v16, &qword_268E9DB30);
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_24461DFD8((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
  }
  else {
    *id v11 = *v16;
  }
  uint64_t v20 = v24;
  swift_storeEnumTagMultiPayload();
  sub_24461EE74((uint64_t)v11, v20, &qword_268E9DB28);
  return sub_24460BD08((uint64_t)v19, &qword_268E9DB30);
}

uint64_t sub_24461AA88@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = sub_24469CC68();
  v24[0] = *(void *)(v5 - 8);
  v24[1] = v5;
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DAA0);
  MEMORY[0x270FA5388](v25, v9);
  id v11 = (_OWORD *)((char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DAA8);
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = (_OWORD *)((char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v19 = (char *)v24 - v18;
  uint64_t v31 = a1;
  unint64_t v32 = a2;
  uint64_t v33 = &v31;
  uint64_t v34 = (char *)v24 - v18;
  sub_24460BBA4(a1, a2);
  uint64_t v29 = v12;
  uint64_t v30 = MEMORY[0x263F06F78];
  unint64_t v28 = sub_24460BBFC();
  uint64_t v27 = sub_24461EE24(&qword_268E9DAB0, &qword_268E9DAA8);
  sub_24469CAB8();
  sub_24460B97C(v31, v32);
  sub_24460BCA4((uint64_t)v19, (uint64_t)v16, &qword_268E9DAA8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    long long v20 = v16[1];
    *id v11 = *v16;
    v11[1] = v20;
    long long v21 = v16[3];
    void v11[2] = v16[2];
    v11[3] = v21;
  }
  uint64_t v22 = v26;
  swift_storeEnumTagMultiPayload();
  sub_24461EE74((uint64_t)v11, v22, &qword_268E9DAA0);
  return sub_24460BD08((uint64_t)v19, &qword_268E9DAA8);
}

uint64_t sub_24461AF70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a6;
  uint64_t v11 = sub_24469CC68();
  v30[1] = *(void *)(v11 - 8);
  v30[2] = v11;
  MEMORY[0x270FA5388](v11, v12);
  v30[0] = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v31 = a3;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x270FA5388](v32, v16);
  uint64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v21 = MEMORY[0x270FA5388](v19, v20);
  uint64_t v23 = (char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v24);
  uint64_t v26 = (char *)v30 - v25;
  uint64_t v38 = a1;
  unint64_t v39 = a2;
  uint64_t v40 = &v38;
  uint64_t v41 = (char *)v30 - v25;
  sub_24460BBA4(a1, a2);
  uint64_t v36 = v19;
  uint64_t v37 = MEMORY[0x263F06F78];
  unint64_t v35 = sub_24460BBFC();
  uint64_t v34 = sub_24461EE24(a5, a4);
  sub_24469CAB8();
  uint64_t v27 = v31;
  sub_24460B97C(v38, v39);
  sub_24460BCA4((uint64_t)v26, (uint64_t)v23, a4);
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_24461DFD8((uint64_t)v23, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
  }
  uint64_t v28 = v33;
  swift_storeEnumTagMultiPayload();
  sub_24461EE74((uint64_t)v18, v28, v27);
  return sub_24460BD08((uint64_t)v26, a4);
}

uint64_t sub_24461B44C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_24469CC68();
  void v24[2] = *(void *)(v5 - 8);
  v24[3] = v5;
  MEMORY[0x270FA5388](v5, v6);
  v24[4] = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D970);
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D978);
  uint64_t v16 = MEMORY[0x270FA5388](v14, v15);
  uint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v19);
  uint64_t v21 = (char *)v24 - v20;
  uint64_t v30 = a1;
  unint64_t v31 = a2;
  uint64_t v32 = &v30;
  uint64_t v33 = (char *)v24 - v20;
  sub_24460BBA4(a1, a2);
  uint64_t v28 = v14;
  uint64_t v29 = MEMORY[0x263F06F78];
  unint64_t v27 = sub_24460BBFC();
  uint64_t v26 = sub_24461EE24(&qword_268E9D980, &qword_268E9D978);
  sub_24469CAB8();
  sub_24460B97C(v30, v31);
  sub_24460BCA4((uint64_t)v21, (uint64_t)v18, &qword_268E9D978);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v22 = (uint64_t (*)(void))type metadata accessor for MarketplaceKitError;
  }
  else {
    uint64_t v22 = type metadata accessor for SecureButtonActionResponse;
  }
  sub_24461DFD8((uint64_t)v18, (uint64_t)v13, v22);
  swift_storeEnumTagMultiPayload();
  sub_24461EE74((uint64_t)v13, v25, &qword_268E9D970);
  return sub_24460BD08((uint64_t)v21, &qword_268E9D978);
}

uint64_t sub_24461B934@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_24469CC68();
  v23[0] = *(void *)(v5 - 8);
  v23[1] = v5;
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D938);
  MEMORY[0x270FA5388](v24, v9);
  uint64_t v11 = (_OWORD *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D940);
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = (_OWORD *)((char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v19 = (char *)v23 - v18;
  uint64_t v30 = a1;
  unint64_t v31 = a2;
  uint64_t v32 = &v30;
  uint64_t v33 = (char *)v23 - v18;
  sub_24460BBA4(a1, a2);
  uint64_t v28 = v12;
  uint64_t v29 = MEMORY[0x263F06F78];
  unint64_t v27 = sub_24460BBFC();
  uint64_t v26 = sub_24461EE24(&qword_268E9D948, &qword_268E9D940);
  sub_24469CAB8();
  sub_24460B97C(v30, v31);
  sub_24460BCA4((uint64_t)v19, (uint64_t)v16, &qword_268E9D940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    long long v20 = v16[1];
    *uint64_t v11 = *v16;
    v11[1] = v20;
  }
  uint64_t v21 = v25;
  swift_storeEnumTagMultiPayload();
  sub_24461EE74((uint64_t)v11, v21, &qword_268E9D938);
  return sub_24460BD08((uint64_t)v19, &qword_268E9D940);
}

uint64_t sub_24461BE14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B0D1260);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24460BCA4(a1, (uint64_t)v9, qword_26B0D1260);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v10 = swift_allocError();
    sub_24461DFD8((uint64_t)v5, v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    *(void *)&long long v14 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1058);
    return sub_24469D078();
  }
  else
  {
    char v13 = v9[16];
    long long v14 = *(_OWORD *)v9;
    char v15 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1058);
    return sub_24469D088();
  }
}

uint64_t sub_24461BFDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D798);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24460BCA4(a1, (uint64_t)v9, &qword_268E9D798);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v10 = swift_allocError();
    sub_24461DFD8((uint64_t)v5, v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    uint64_t v14 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
    return sub_24469D078();
  }
  else
  {
    v13[7] = *v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D8E8);
    return sub_24469D088();
  }
}

uint64_t sub_24461C19C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB28);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24460BCA4(a1, (uint64_t)v9, &qword_268E9DB28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v10 = swift_allocError();
    sub_24461DFD8((uint64_t)v5, v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    uint64_t v14 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB20);
    return sub_24469D078();
  }
  else
  {
    uint64_t v14 = *v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB20);
    return sub_24469D088();
  }
}

uint64_t sub_24461C35C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DAA0);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (_OWORD *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24460BCA4(a1, (uint64_t)v9, &qword_268E9DAA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v10 = swift_allocError();
    sub_24461DFD8((uint64_t)v5, v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    *(void *)&v15[0] = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DA98);
    return sub_24469D078();
  }
  else
  {
    long long v13 = v9[1];
    v15[0] = *v9;
    v15[1] = v13;
    long long v14 = v9[3];
    void v15[2] = v9[2];
    v15[3] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DA98);
    return sub_24469D088();
  }
}

uint64_t sub_24461C524(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x270FA5388](v10, v11);
  long long v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24460BCA4(a1, (uint64_t)v13, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v14 = swift_allocError();
    sub_24461DFD8((uint64_t)v9, v15, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    v17[1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    return sub_24469D078();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    return sub_24469D088();
  }
}

uint64_t sub_24461C6D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SecureButtonActionResponse(0);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D970);
  MEMORY[0x270FA5388](v10, v11);
  long long v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24460BCA4(a1, (uint64_t)v13, &qword_268E9D970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v13, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v14 = swift_allocError();
    sub_24461DFD8((uint64_t)v5, v15, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    v17[1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D968);
    return sub_24469D078();
  }
  else
  {
    sub_24461DFD8((uint64_t)v13, (uint64_t)v9, type metadata accessor for SecureButtonActionResponse);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D968);
    return sub_24469D088();
  }
}

uint64_t sub_24461C8EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D938);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (_OWORD *)((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24460BCA4(a1, (uint64_t)v9, &qword_268E9D938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24461DFD8((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    sub_24461EC38((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v10 = swift_allocError();
    sub_24461DFD8((uint64_t)v5, v11, (uint64_t (*)(void))type metadata accessor for MarketplaceKitError);
    *(void *)&v14[0] = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D930);
    return sub_24469D078();
  }
  else
  {
    long long v13 = v9[1];
    v14[0] = *v9;
    v14[1] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D930);
    return sub_24469D088();
  }
}

void sub_24461CAAC(uint64_t a1, char a2, void (*a3)(uint64_t *__return_ptr, id *, void *))
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return;
  }
  id v35 = v4;
  uint64_t v7 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  while (1)
  {
    uint64_t v36 = v5;
    uint64_t v14 = *(v7 - 2);
    uint64_t v16 = *(v7 - 1);
    uint64_t v17 = *v7;
    uint64_t v41 = *(v7 - 3);
    uint64_t v15 = v41;
    uint64_t v42 = v14;
    v40[0] = v16;
    v40[1] = v17;
    uint64_t v18 = *(void **)v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_24467F0B4(v15, v14);
    uint64_t v21 = v18[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_24469D608();
      __break(1u);
      goto LABEL_24;
    }
    char v24 = v19;
    if (v18[3] < v23) {
      break;
    }
    if (a2)
    {
      if (v19) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_24464EB3C();
      if (v24) {
        goto LABEL_13;
      }
    }
LABEL_3:
    uint64_t v8 = *(void **)v43;
    v8[(v20 >> 6) + 8] |= 1 << v20;
    uint64_t v9 = (uint64_t *)(v8[6] + 16 * v20);
    *uint64_t v9 = v15;
    v9[1] = v14;
    uint64_t v10 = (void *)(v8[7] + 16 * v20);
    *uint64_t v10 = v16;
    v10[1] = v17;
    uint64_t v11 = v8[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_22;
    }
    void v8[2] = v13;
LABEL_5:
    v7 += 4;
    a2 = 1;
    --v5;
    if (v36 == 1)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_24464F050(v23, a2 & 1);
  unint64_t v25 = sub_24467F0B4(v15, v14);
  if ((v24 & 1) != (v26 & 1)) {
    goto LABEL_23;
  }
  unint64_t v20 = v25;
  if ((v24 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  unint64_t v27 = *(void **)v43;
  uint64_t v28 = *(void *)(*(void *)v43 + 56) + 16 * v20;
  uint64_t v29 = *(void **)(v28 + 8);
  v37[0] = *(id *)v28;
  v37[1] = v29;
  swift_bridgeObjectRetain();
  a3(&v38, v37, v40);
  if (!v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = (void *)(v27[7] + 16 * v20);
    uint64_t v31 = v38;
    unint64_t v32 = v39;
    swift_bridgeObjectRelease();
    *uint64_t v30 = v31;
    v30[1] = v32;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v37[0] = v35;
  id v33 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1070);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  uint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  sub_24469D318();
  sub_24469CFE8();
  sub_24469D378();
  sub_24469CFE8();
  sub_24469D398();
  __break(1u);
}

uint64_t sub_24461CDF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24461D780(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24461CE18(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
    case 7:
    case 8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
      uint64_t result = sub_24460B97C(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24461CE80()
{
  unint64_t result = qword_268E9D840;
  if (!qword_268E9D840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D840);
  }
  return result;
}

unint64_t sub_24461CED4()
{
  unint64_t result = qword_268E9D858;
  if (!qword_268E9D858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D858);
  }
  return result;
}

uint64_t sub_24461CF28(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9D848);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24461CF98()
{
  unint64_t result = qword_268E9D870;
  if (!qword_268E9D870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D870);
  }
  return result;
}

unint64_t sub_24461CFEC()
{
  unint64_t result = qword_268E9D880;
  if (!qword_268E9D880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D880);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest()
{
  return &type metadata for LocalizedStringsRequest;
}

void *sub_24461D054(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocalizedStringsRequest.LocalizedString(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizedStringsRequest.LocalizedString(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedStringsRequest.LocalizedString(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedStringsRequest.LocalizedString(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.LocalizedString()
{
  return &type metadata for LocalizedStringsRequest.LocalizedString;
}

ValueMetadata *type metadata accessor for LocalizedStringsResponse()
{
  return &type metadata for LocalizedStringsResponse;
}

uint64_t sub_24461D208()
{
  return 0;
}

ValueMetadata *type metadata accessor for LocalizedStringsResponse.CodingKeys()
{
  return &type metadata for LocalizedStringsResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AppLibrary.UninstallError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s14MarketplaceKit24LocalizedStringsResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24461D30CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.CodingKeys()
{
  return &type metadata for LocalizedStringsRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocalizedStringsRequest.LocalizedString.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24461D410);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.LocalizedString.CodingKeys()
{
  return &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys;
}

unint64_t sub_24461D44C()
{
  unint64_t result = qword_268E9D890;
  if (!qword_268E9D890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D890);
  }
  return result;
}

unint64_t sub_24461D4A4()
{
  unint64_t result = qword_268E9D898;
  if (!qword_268E9D898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D898);
  }
  return result;
}

unint64_t sub_24461D4FC()
{
  unint64_t result = qword_268E9D8A0;
  if (!qword_268E9D8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D8A0);
  }
  return result;
}

unint64_t sub_24461D554()
{
  unint64_t result = qword_268E9D8A8;
  if (!qword_268E9D8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D8A8);
  }
  return result;
}

unint64_t sub_24461D5AC()
{
  unint64_t result = qword_268E9D8B0;
  if (!qword_268E9D8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D8B0);
  }
  return result;
}

unint64_t sub_24461D604()
{
  unint64_t result = qword_268E9D8B8;
  if (!qword_268E9D8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D8B8);
  }
  return result;
}

unint64_t sub_24461D65C()
{
  unint64_t result = qword_268E9D8C0;
  if (!qword_268E9D8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D8C0);
  }
  return result;
}

unint64_t sub_24461D6B4()
{
  unint64_t result = qword_268E9D8C8;
  if (!qword_268E9D8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D8C8);
  }
  return result;
}

unint64_t sub_24461D70C()
{
  unint64_t result = qword_268E9D8D0;
  if (!qword_268E9D8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D8D0);
  }
  return result;
}

uint64_t sub_24461D760(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24461D90C(a1, a2, a3, *v3);
  *int v3 = (char *)result;
  return result;
}

uint64_t sub_24461D780(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB60);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB68);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24469D3E8();
  __break(1u);
  return result;
}

uint64_t sub_24461D90C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D9D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24469D3E8();
  __break(1u);
  return result;
}

uint64_t sub_24461DA78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002446A9FE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24461DB58(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000002446AA000)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24461DBE0(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2446181E8);
}

uint64_t sub_24461DBF8()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461DC04(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_268E9D8E8, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_244619250);
}

uint64_t sub_24461DC24()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

uint64_t sub_24461DC30(uint64_t a1, uint64_t a2)
{
  return sub_24461DCD4(a1, a2, &qword_268E9D8E8, &qword_268E9D798, (void (*)(uint64_t, uint64_t))sub_24461A0C8, (void (*)(char *))sub_24461BFDC);
}

uint64_t sub_24461DC6C(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244618F08);
}

uint64_t sub_24461DC84(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_24461DC9C()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461DCA8(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_268E9D8E8, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_24461EF94);
}

uint64_t sub_24461DCC8()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

uint64_t sub_24461DCD4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(uint64_t, uint64_t), void (*a6)(char *))
{
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_24461963C(a1, a2, v6 + v13, *(void *)(v6 + ((*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8)), a4, a5, a6);
}

uint64_t sub_24461DD94(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9D910);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24461DDF8(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244618BC0);
}

uint64_t sub_24461DE10()
{
  return objectdestroyTm(&qword_268E9D930);
}

uint64_t sub_24461DE1C(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_268E9D930, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_24461EF94);
}

uint64_t sub_24461DE3C()
{
  return objectdestroy_22Tm(&qword_268E9D930);
}

uint64_t sub_24461DE48(uint64_t a1, uint64_t a2)
{
  return sub_24461DCD4(a1, a2, &qword_268E9D930, &qword_268E9D938, (void (*)(uint64_t, uint64_t))sub_24461B934, (void (*)(char *))sub_24461C8EC);
}

unint64_t sub_24461DE84()
{
  unint64_t result = qword_268E9D958;
  if (!qword_268E9D958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D958);
  }
  return result;
}

unint64_t sub_24461DED8()
{
  unint64_t result = qword_268E9D960;
  if (!qword_268E9D960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D960);
  }
  return result;
}

uint64_t sub_24461DF2C(uint64_t result, uint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    return sub_24460BBA4(result, a2 & 0xCFFFFFFFFFFFFFFFLL);
  }
  return result;
}

uint64_t sub_24461DF3C(uint64_t result, uint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    return sub_24460B97C(result, a2 & 0xCFFFFFFFFFFFFFFFLL);
  }
  return result;
}

uint64_t sub_24461DF4C(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244618878);
}

uint64_t sub_24461DF64()
{
  return objectdestroyTm(&qword_268E9D968);
}

uint64_t sub_24461DF70(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_268E9D968, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_244619250);
}

uint64_t sub_24461DF90()
{
  return objectdestroy_22Tm(&qword_268E9D968);
}

uint64_t sub_24461DF9C(uint64_t a1, uint64_t a2)
{
  return sub_24461DCD4(a1, a2, &qword_268E9D968, &qword_268E9D970, (void (*)(uint64_t, uint64_t))sub_24461B44C, (void (*)(char *))sub_24461C6D0);
}

uint64_t sub_24461DFD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24461E040()
{
  unint64_t result = qword_268E9D990;
  if (!qword_268E9D990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D990);
  }
  return result;
}

unint64_t sub_24461E094()
{
  unint64_t result = qword_268E9D998;
  if (!qword_268E9D998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D998);
  }
  return result;
}

uint64_t sub_24461E0E8(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244618530);
}

uint64_t sub_24461E100()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461E10C()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

unint64_t sub_24461E118()
{
  unint64_t result = qword_268E9D9A8;
  if (!qword_268E9D9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D9A8);
  }
  return result;
}

unint64_t sub_24461E16C()
{
  unint64_t result = qword_268E9D9B0;
  if (!qword_268E9D9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D9B0);
  }
  return result;
}

uint64_t sub_24461E1C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24461E1CC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24461E1D8(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244617EA0);
}

uint64_t sub_24461E1F0()
{
  return objectdestroyTm(&qword_268E9D9B8);
}

uint64_t sub_24461E1FC(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_268E9D9B8, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_244619250);
}

uint64_t sub_24461E21C()
{
  return objectdestroy_22Tm(&qword_268E9D9B8);
}

uint64_t sub_24461E228(uint64_t a1, unint64_t a2)
{
  return sub_24461E24C(a1, a2, &qword_268E9D9B8, &qword_268E9D9C0, &qword_268E9D9C8, &qword_268E9D9D0);
}

uint64_t sub_24461E24C(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, unint64_t *a6)
{
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  return sub_244619568(a1, a2, v6 + v14, *(void *)(v6 + ((*(void *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8)), a4, a5, a6, a3);
}

uint64_t sub_24461E320(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244617B58);
}

uint64_t sub_24461E338()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461E344()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

uint64_t sub_24461E350(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244617810);
}

uint64_t sub_24461E368()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461E374()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

unint64_t sub_24461E380()
{
  unint64_t result = qword_268E9DA18;
  if (!qword_268E9DA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DA18);
  }
  return result;
}

unint64_t sub_24461E3D4()
{
  unint64_t result = qword_268E9DA20;
  if (!qword_268E9DA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DA20);
  }
  return result;
}

uint64_t sub_24461E428(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2446174C8);
}

uint64_t sub_24461E440()
{
  return objectdestroyTm(&qword_26B0D1058);
}

uint64_t sub_24461E44C(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_26B0D1058, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_244619250);
}

uint64_t sub_24461E46C()
{
  return objectdestroy_22Tm(&qword_26B0D1058);
}

uint64_t sub_24461E478(uint64_t a1, uint64_t a2)
{
  return sub_24461DCD4(a1, a2, &qword_26B0D1058, qword_26B0D1260, (void (*)(uint64_t, uint64_t))sub_244619BE0, (void (*)(char *))sub_24461BE14);
}

unint64_t sub_24461E4B4()
{
  unint64_t result = qword_268E9DA30;
  if (!qword_268E9DA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DA30);
  }
  return result;
}

unint64_t sub_24461E508()
{
  unint64_t result = qword_268E9DA38;
  if (!qword_268E9DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DA38);
  }
  return result;
}

uint64_t sub_24461E55C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24461E57C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24461E59C(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244617180);
}

uint64_t sub_24461E5B4()
{
  return objectdestroyTm(&qword_268E9DA40);
}

uint64_t sub_24461E5C0(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_268E9DA40, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_244619250);
}

uint64_t sub_24461E5E0()
{
  return objectdestroy_22Tm(&qword_268E9DA40);
}

uint64_t sub_24461E5EC(uint64_t a1, unint64_t a2)
{
  return sub_24461E24C(a1, a2, &qword_268E9DA40, &qword_268E9DA48, &qword_268E9DA50, &qword_268E9DA58);
}

unint64_t sub_24461E610()
{
  unint64_t result = qword_268E9DA68;
  if (!qword_268E9DA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DA68);
  }
  return result;
}

unint64_t sub_24461E664()
{
  unint64_t result = qword_268E9DA70;
  if (!qword_268E9DA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DA70);
  }
  return result;
}

uint64_t sub_24461E6B8(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244616E38);
}

uint64_t sub_24461E6D0()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461E6DC()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

unint64_t sub_24461E6E8()
{
  unint64_t result = qword_268E9DA80;
  if (!qword_268E9DA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DA80);
  }
  return result;
}

unint64_t sub_24461E73C()
{
  unint64_t result = qword_268E9DA88;
  if (!qword_268E9DA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DA88);
  }
  return result;
}

uint64_t sub_24461E790(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244616AF0);
}

uint64_t sub_24461E7A8()
{
  return objectdestroyTm(&qword_268E9DA98);
}

uint64_t sub_24461E7B4(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_268E9DA98, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_244619250);
}

uint64_t sub_24461E7D4()
{
  return objectdestroy_22Tm(&qword_268E9DA98);
}

uint64_t sub_24461E7E0(uint64_t a1, uint64_t a2)
{
  return sub_24461DCD4(a1, a2, &qword_268E9DA98, &qword_268E9DAA0, (void (*)(uint64_t, uint64_t))sub_24461AA88, (void (*)(char *))sub_24461C35C);
}

unint64_t sub_24461E81C()
{
  unint64_t result = qword_268E9DAC0;
  if (!qword_268E9DAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DAC0);
  }
  return result;
}

unint64_t sub_24461E870()
{
  unint64_t result = qword_268E9DAC8;
  if (!qword_268E9DAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DAC8);
  }
  return result;
}

uint64_t sub_24461E8C4(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2446167A8);
}

uint64_t sub_24461E8DC()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461E8E8()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

unint64_t sub_24461E8F4()
{
  unint64_t result = qword_268E9DAD8;
  if (!qword_268E9DAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DAD8);
  }
  return result;
}

unint64_t sub_24461E948()
{
  unint64_t result = qword_268E9DAE0;
  if (!qword_268E9DAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DAE0);
  }
  return result;
}

uint64_t sub_24461E99C(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244616460);
}

uint64_t sub_24461E9B4()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461E9C0()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

unint64_t sub_24461E9CC()
{
  unint64_t result = qword_268E9DAF0;
  if (!qword_268E9DAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DAF0);
  }
  return result;
}

unint64_t sub_24461EA20()
{
  unint64_t result = qword_268E9DAF8;
  if (!qword_268E9DAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DAF8);
  }
  return result;
}

uint64_t sub_24461EA74(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244616118);
}

uint64_t sub_24461EA8C()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461EA98()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

uint64_t sub_24461EAA4(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244615DD0);
}

uint64_t sub_24461EABC()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461EAC8()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

unint64_t sub_24461EAD4()
{
  unint64_t result = qword_268E9DB10;
  if (!qword_268E9DB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DB10);
  }
  return result;
}

unint64_t sub_24461EB28()
{
  unint64_t result = qword_268E9DB18;
  if (!qword_268E9DB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DB18);
  }
  return result;
}

uint64_t sub_24461EB7C(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244615A88);
}

uint64_t sub_24461EB94()
{
  return objectdestroyTm(&qword_268E9DB20);
}

uint64_t sub_24461EBA0(uint64_t a1)
{
  return sub_24461ED9C(a1, &qword_268E9DB20, (uint64_t (*)(uint64_t, unint64_t, uint64_t *))sub_244619250);
}

uint64_t sub_24461EBC0()
{
  return objectdestroy_22Tm(&qword_268E9DB20);
}

uint64_t sub_24461EBCC(uint64_t a1, uint64_t a2)
{
  return sub_24461DCD4(a1, a2, &qword_268E9DB20, &qword_268E9DB28, (void (*)(uint64_t, uint64_t))sub_24461A5A8, (void (*)(char *))sub_24461C19C);
}

uint64_t sub_24461EC08(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_244615740);
}

uint64_t sub_24461EC20()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461EC2C()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

uint64_t sub_24461EC38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24461EC80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24461ECE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24461ED48(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2446153F8);
}

uint64_t sub_24461ED60()
{
  return objectdestroyTm(&qword_268E9D8E8);
}

uint64_t sub_24461ED6C()
{
  return objectdestroy_22Tm(&qword_268E9D8E8);
}

uint64_t sub_24461ED78(uint64_t a1)
{
  return sub_24461DC84(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2446150B0);
}

uint64_t sub_24461ED90()
{
  return objectdestroyTm(&qword_26B0D1058);
}

uint64_t sub_24461ED9C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, uint64_t *))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return a3(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2);
}

uint64_t sub_24461EE18()
{
  return objectdestroy_22Tm(&qword_26B0D1058);
}

uint64_t sub_24461EE24(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24461EE74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24461EF98(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24461F04C()
{
  return sub_24461EF98(*v0);
}

uint64_t sub_24461F054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244627B48(a1, a2);
  *a3 = result;
  return result;
}

void sub_24461F07C(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24461F088(uint64_t a1)
{
  unint64_t v2 = sub_244620170();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24461F0C4(uint64_t a1)
{
  unint64_t v2 = sub_244620170();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24461F100()
{
  if (*v0) {
    return 0x7562697274736964;
  }
  else {
    return 0x746E756F636361;
  }
}

uint64_t sub_24461F148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244627D84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24461F170(uint64_t a1)
{
  unint64_t v2 = sub_244620434();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24461F1AC(uint64_t a1)
{
  unint64_t v2 = sub_244620434();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24461F1E8()
{
  uint64_t v1 = 0x496E6F6973726576;
  if (*v0 != 1) {
    uint64_t v1 = 0x7562697274736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x44496D657469;
  }
}

uint64_t sub_24461F250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244627E9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24461F278(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24461F284(uint64_t a1)
{
  unint64_t v2 = sub_2446204DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24461F2C0(uint64_t a1)
{
  unint64_t v2 = sub_2446204DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24461F2FC()
{
  if (*v0) {
    return 0x7562697274736964;
  }
  else {
    return 0x7972657571;
  }
}

uint64_t sub_24461F340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24462801C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24461F368(uint64_t a1)
{
  unint64_t v2 = sub_244620488();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24461F3A4(uint64_t a1)
{
  unint64_t v2 = sub_244620488();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24461F3E0()
{
  return 0x747865746E6F63;
}

uint64_t sub_24461F3FC(uint64_t a1)
{
  unint64_t v2 = sub_2446203E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24461F438(uint64_t a1)
{
  unint64_t v2 = sub_2446203E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24461F474(uint64_t a1)
{
  unint64_t v2 = sub_244620228();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24461F4B0(uint64_t a1)
{
  unint64_t v2 = sub_244620228();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24461F4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24461F584(uint64_t a1)
{
  unint64_t v2 = sub_2446202E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24461F5C0(uint64_t a1)
{
  unint64_t v2 = sub_2446202E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LaunchAngelXPCRequest.RequestType.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB80);
  uint64_t v72 = *(void *)(v2 - 8);
  uint64_t v73 = v2;
  MEMORY[0x270FA5388](v2, v3);
  v71 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for LicenseResolutionContext();
  MEMORY[0x270FA5388](v68, v5);
  uint64_t v70 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB88);
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69, v7);
  v66 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for OAuthAuthorizationContext();
  MEMORY[0x270FA5388](v63, v9);
  uint64_t v65 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB90);
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64, v11);
  v59 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for InstallSheetContext(0);
  MEMORY[0x270FA5388](v54, v13);
  uint64_t v58 = (uint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DB98);
  uint64_t v60 = *(void *)(v15 - 8);
  uint64_t v61 = v15;
  MEMORY[0x270FA5388](v15, v16);
  uint64_t v57 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DBA0);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56, v18);
  unint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DBA8);
  uint64_t v53 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21, v22);
  char v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  MEMORY[0x270FA5388](v25, v26);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DBB0);
  uint64_t v75 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78, v29);
  uint64_t v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244620170();
  v77 = v31;
  sub_24469D728();
  sub_2446201C4(v76, (uint64_t)v28);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v85 = 1;
      sub_244620488();
      uint64_t v37 = v77;
      uint64_t v36 = v78;
      sub_24469D4E8();
      char v84 = 0;
      uint64_t v38 = v56;
      uint64_t v39 = v74;
      sub_24469D548();
      swift_bridgeObjectRelease();
      if (!v39)
      {
        char v83 = 1;
        sub_24469D548();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v37, v36);
    case 2u:
      char v88 = 2;
      sub_244620434();
      uint64_t v40 = v57;
      uint64_t v37 = v77;
      uint64_t v36 = v78;
      sub_24469D4E8();
      char v87 = 0;
      uint64_t v41 = v61;
      uint64_t v42 = v74;
      sub_24469D548();
      swift_bridgeObjectRelease();
      if (!v42)
      {
        char v86 = 1;
        sub_24469D548();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v41);
      return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v37, v36);
    case 3u:
      uint64_t v43 = v58;
      sub_24462027C((uint64_t)v28, v58, type metadata accessor for InstallSheetContext);
      char v89 = 3;
      sub_2446203E0();
      uint64_t v44 = v59;
      uint64_t v46 = v77;
      uint64_t v45 = v78;
      sub_24469D4E8();
      sub_244620338(&qword_268E9DBE8, (void (*)(uint64_t))type metadata accessor for InstallSheetContext);
      uint64_t v47 = v64;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v47);
      uint64_t v48 = type metadata accessor for InstallSheetContext;
      goto LABEL_11;
    case 4u:
      uint64_t v43 = v65;
      sub_24462027C((uint64_t)v28, v65, (uint64_t (*)(void))type metadata accessor for OAuthAuthorizationContext);
      char v90 = 4;
      sub_2446202E4();
      uint64_t v49 = v66;
      uint64_t v46 = v77;
      uint64_t v45 = v78;
      sub_24469D4E8();
      sub_244620338(&qword_268E9DBD8, (void (*)(uint64_t))type metadata accessor for OAuthAuthorizationContext);
      uint64_t v50 = v69;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v50);
      uint64_t v48 = (uint64_t (*)(void))type metadata accessor for OAuthAuthorizationContext;
      goto LABEL_11;
    case 5u:
      uint64_t v43 = v70;
      sub_24462027C((uint64_t)v28, v70, (uint64_t (*)(void))type metadata accessor for LicenseResolutionContext);
      char v91 = 5;
      sub_244620228();
      uint64_t v51 = v71;
      uint64_t v46 = v77;
      uint64_t v45 = v78;
      sub_24469D4E8();
      sub_244620338(&qword_268E9DBC8, (void (*)(uint64_t))type metadata accessor for LicenseResolutionContext);
      uint64_t v52 = v73;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v52);
      uint64_t v48 = (uint64_t (*)(void))type metadata accessor for LicenseResolutionContext;
LABEL_11:
      sub_244620380(v43, v48);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v46, v45);
      break;
    default:
      uint64_t v76 = *((void *)v28 + 1);
      char v82 = 0;
      sub_2446204DC();
      unint64_t v32 = v77;
      uint64_t v33 = v78;
      sub_24469D4E8();
      char v81 = 0;
      uint64_t v34 = v74;
      sub_24469D588();
      if (v34)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v21);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v32, v33);
      }
      else
      {
        char v80 = 1;
        sub_24469D538();
        char v79 = 2;
        sub_24469D548();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v21);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v77, v78);
      }
      break;
  }
  return result;
}

uint64_t type metadata accessor for LaunchAngelXPCRequest.RequestType(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9DD20);
}

unint64_t sub_244620170()
{
  unint64_t result = qword_268E9DBB8;
  if (!qword_268E9DBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DBB8);
  }
  return result;
}

uint64_t sub_2446201C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_244620228()
{
  unint64_t result = qword_268E9DBC0;
  if (!qword_268E9DBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DBC0);
  }
  return result;
}

uint64_t sub_24462027C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2446202E4()
{
  unint64_t result = qword_268E9DBD0;
  if (!qword_268E9DBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DBD0);
  }
  return result;
}

uint64_t sub_244620338(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244620380(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2446203E0()
{
  unint64_t result = qword_268E9DBE0;
  if (!qword_268E9DBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DBE0);
  }
  return result;
}

unint64_t sub_244620434()
{
  unint64_t result = qword_268E9DBF0;
  if (!qword_268E9DBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DBF0);
  }
  return result;
}

unint64_t sub_244620488()
{
  unint64_t result = qword_268E9DBF8;
  if (!qword_268E9DBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DBF8);
  }
  return result;
}

unint64_t sub_2446204DC()
{
  unint64_t result = qword_268E9DC00;
  if (!qword_268E9DC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DC00);
  }
  return result;
}

uint64_t LaunchAngelXPCRequest.RequestType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v133 = a2;
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC08);
  uint64_t v124 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131, v3);
  v141 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC10);
  uint64_t v123 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132, v5);
  v140 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC18);
  uint64_t v122 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130, v7);
  v135 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC20);
  uint64_t v121 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129, v9);
  v138 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC28);
  uint64_t v119 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127, v11);
  v134 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC30);
  uint64_t v120 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128, v13);
  v137 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC38);
  uint64_t v136 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143, v15);
  uint64_t v17 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  uint64_t v19 = MEMORY[0x270FA5388](v142, v18);
  v126 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19, v21);
  v125 = (char *)&v114 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22, v24);
  uint64_t v27 = (char *)&v114 - v26;
  uint64_t v29 = MEMORY[0x270FA5388](v25, v28);
  uint64_t v31 = (char *)&v114 - v30;
  uint64_t v33 = MEMORY[0x270FA5388](v29, v32);
  id v35 = (char *)&v114 - v34;
  uint64_t v37 = MEMORY[0x270FA5388](v33, v36);
  uint64_t v39 = (char *)&v114 - v38;
  MEMORY[0x270FA5388](v37, v40);
  uint64_t v42 = (char *)&v114 - v41;
  uint64_t v43 = a1[3];
  v144 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v43);
  sub_244620170();
  v139 = v17;
  uint64_t v44 = v145;
  sub_24469D708();
  uint64_t v145 = v44;
  if (v44) {
    goto LABEL_23;
  }
  v115 = (uint64_t *)v35;
  v117 = (uint64_t *)v27;
  v116 = (uint64_t *)v31;
  v114 = (uint64_t *)v39;
  uint64_t v45 = v137;
  uint64_t v46 = v138;
  uint64_t v47 = v140;
  uint64_t v48 = v141;
  v118 = v42;
  uint64_t v49 = v143;
  uint64_t v50 = v139;
  uint64_t v51 = sub_24469D4C8();
  uint64_t v52 = (char *)v51;
  uint64_t v53 = v49;
  if (*(void *)(v51 + 16) != 1)
  {
    uint64_t v61 = sub_24469D358();
    uint64_t v62 = swift_allocError();
    uint64_t v64 = v63;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *uint64_t v64 = v142;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v61 - 8) + 104))(v64, *MEMORY[0x263F8DCB0], v61);
    uint64_t v145 = v62;
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v136 + 8))(v50, v53);
LABEL_23:
    uint64_t v91 = (uint64_t)v144;
    return __swift_destroy_boxed_opaque_existential_1(v91);
  }
  uint64_t v54 = v50;
  switch(*(unsigned char *)(v51 + 32))
  {
    case 1:
      char v152 = 1;
      sub_244620488();
      uint64_t v65 = v134;
      uint64_t v56 = v49;
      uint64_t v66 = v145;
      sub_24469D408();
      uint64_t v145 = v66;
      if (v66) {
        goto LABEL_16;
      }
      char v151 = 0;
      uint64_t v67 = v127;
      uint64_t v68 = sub_24469D478();
      uint64_t v145 = 0;
      uint64_t v93 = v68;
      uint64_t v95 = v94;
      v141 = v52;
      char v150 = 1;
      uint64_t v96 = sub_24469D478();
      v97 = (void (**)(char *, uint64_t))(v136 + 8);
      uint64_t v145 = 0;
      uint64_t v103 = v96;
      uint64_t v105 = v104;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v65, v67);
      swift_bridgeObjectRelease();
      (*v97)(v50, v143);
      v109 = v115;
      uint64_t *v115 = v93;
      v109[1] = v95;
      v109[2] = v103;
      v109[3] = v105;
      goto LABEL_27;
    case 2:
      char v155 = 2;
      sub_244620434();
      uint64_t v69 = v145;
      sub_24469D408();
      uint64_t v145 = v69;
      if (v69) {
        goto LABEL_18;
      }
      char v154 = 0;
      uint64_t v70 = v129;
      uint64_t v71 = sub_24469D478();
      uint64_t v145 = 0;
      uint64_t v98 = v71;
      uint64_t v100 = v99;
      char v153 = 1;
      uint64_t v101 = sub_24469D478();
      v102 = (void (**)(char *, uint64_t))(v136 + 8);
      uint64_t v145 = 0;
      uint64_t v107 = v106;
      v108 = *(void (**)(char *, uint64_t))(v121 + 8);
      v141 = (char *)v101;
      v108(v46, v70);
      swift_bridgeObjectRelease();
      (*v102)(v50, v143);
      v109 = v116;
      uint64_t *v116 = v98;
      v109[1] = v100;
      v109[2] = (uint64_t)v141;
      v109[3] = v107;
      goto LABEL_27;
    case 3:
      char v156 = 3;
      sub_2446203E0();
      uint64_t v72 = v135;
      uint64_t v56 = v49;
      uint64_t v73 = v145;
      sub_24469D408();
      uint64_t v145 = v73;
      if (v73) {
        goto LABEL_16;
      }
      type metadata accessor for InstallSheetContext(0);
      sub_244620338(&qword_268E9DC58, (void (*)(uint64_t))type metadata accessor for InstallSheetContext);
      v109 = v117;
      uint64_t v74 = v130;
      uint64_t v75 = v145;
      sub_24469D498();
      uint64_t v76 = v136;
      uint64_t v145 = v75;
      v77 = &v159;
      if (v75) {
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v122 + 8))(v72, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v54, v53);
      goto LABEL_27;
    case 4:
      char v157 = 4;
      sub_2446202E4();
      uint64_t v72 = v47;
      uint64_t v56 = v49;
      uint64_t v78 = v145;
      sub_24469D408();
      uint64_t v145 = v78;
      if (v78) {
        goto LABEL_16;
      }
      type metadata accessor for OAuthAuthorizationContext();
      sub_244620338(&qword_268E9DC50, (void (*)(uint64_t))type metadata accessor for OAuthAuthorizationContext);
      v109 = (uint64_t *)v125;
      uint64_t v74 = v132;
      uint64_t v80 = v145;
      sub_24469D498();
      uint64_t v76 = v136;
      uint64_t v145 = v80;
      v77 = &v160;
      if (v80)
      {
LABEL_20:
        (*(void (**)(char *, uint64_t))(*(v77 - 32) + 8))(v72, v74);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v54, v56);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v123 + 8))(v47, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v54, v53);
      goto LABEL_27;
    case 5:
      char v158 = 5;
      sub_244620228();
      uint64_t v79 = v145;
      sub_24469D408();
      uint64_t v145 = v79;
      if (v79)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v136 + 8))(v50, v49);
        goto LABEL_23;
      }
      type metadata accessor for LicenseResolutionContext();
      sub_244620338(&qword_268E9DC48, (void (*)(uint64_t))type metadata accessor for LicenseResolutionContext);
      v109 = (uint64_t *)v126;
      uint64_t v81 = v131;
      uint64_t v82 = v145;
      sub_24469D498();
      uint64_t v83 = v136;
      uint64_t v145 = v82;
      if (v82)
      {
        (*(void (**)(char *, uint64_t))(v124 + 8))(v48, v81);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v53);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v124 + 8))(v48, v81);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v53);
      goto LABEL_27;
    default:
      char v149 = 0;
      sub_2446204DC();
      uint64_t v55 = v45;
      uint64_t v56 = v49;
      uint64_t v57 = v145;
      sub_24469D408();
      uint64_t v145 = v57;
      if (v57)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v136 + 8))(v54, v56);
        goto LABEL_23;
      }
      char v148 = 0;
      uint64_t v58 = v128;
      uint64_t v59 = sub_24469D4B8();
      uint64_t v60 = v136;
      uint64_t v145 = 0;
      uint64_t v84 = v59;
      char v147 = 1;
      char v85 = v55;
      uint64_t v86 = sub_24469D468();
      uint64_t v145 = 0;
      uint64_t v87 = v86;
      char v89 = v88;
      char v146 = 2;
      v140 = (char *)sub_24469D478();
      v141 = v90;
      uint64_t v145 = 0;
      (*(void (**)(char *, uint64_t))(v120 + 8))(v85, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v54, v56);
      v109 = v114;
      uint64_t *v114 = v84;
      v109[1] = v87;
      *((unsigned char *)v109 + 16) = v89 & 1;
      v110 = v141;
      v109[3] = (uint64_t)v140;
      v109[4] = (uint64_t)v110;
LABEL_27:
      swift_storeEnumTagMultiPayload();
      uint64_t v111 = (uint64_t)v144;
      uint64_t v112 = v133;
      uint64_t v113 = (uint64_t)v118;
      sub_24462027C((uint64_t)v109, (uint64_t)v118, type metadata accessor for LaunchAngelXPCRequest.RequestType);
      sub_24462027C(v113, v112, type metadata accessor for LaunchAngelXPCRequest.RequestType);
      uint64_t v91 = v111;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v91);
}

uint64_t sub_2446214C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCRequest.RequestType.init(from:)(a1, a2);
}

uint64_t sub_2446214D8(void *a1)
{
  return LaunchAngelXPCRequest.RequestType.encode(to:)(a1);
}

uint64_t LaunchAngelXPCRequest.requestType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2446201C4(v1, a1);
}

uint64_t LaunchAngelXPCRequest.init(requestType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24462027C(a1, a2, type metadata accessor for LaunchAngelXPCRequest.RequestType);
}

uint64_t sub_24462152C()
{
  return 0x5474736575716572;
}

uint64_t sub_24462154C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2446215FC(uint64_t a1)
{
  unint64_t v2 = sub_2446217E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244621638(uint64_t a1)
{
  unint64_t v2 = sub_2446217E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LaunchAngelXPCRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446217E8();
  sub_24469D728();
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  sub_244620338(&qword_268E9DC70, (void (*)(uint64_t))type metadata accessor for LaunchAngelXPCRequest.RequestType);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_2446217E8()
{
  unint64_t result = qword_268E9DC68;
  if (!qword_268E9DC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DC68);
  }
  return result;
}

uint64_t LaunchAngelXPCRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC78);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LaunchAngelXPCRequest(0);
  MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446217E8();
  sub_24469D708();
  if (!v2)
  {
    sub_244620338(&qword_268E9DC80, (void (*)(uint64_t))type metadata accessor for LaunchAngelXPCRequest.RequestType);
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_24462027C(v18, (uint64_t)v14, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    sub_24462027C((uint64_t)v14, v16, type metadata accessor for LaunchAngelXPCRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for LaunchAngelXPCRequest(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9DD10);
}

uint64_t sub_244621AC4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_244621AFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCRequest.init(from:)(a1, a2);
}

uint64_t sub_244621B14(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446217E8();
  sub_24469D728();
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  sub_244620338(&qword_268E9DC70, (void (*)(uint64_t))type metadata accessor for LaunchAngelXPCRequest.RequestType);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_244621C88()
{
  unint64_t v1 = 0xD000000000000018;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6465726F6E6769;
  }
}

uint64_t sub_244621CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24462812C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244621D18(uint64_t a1)
{
  unint64_t v2 = sub_2446224FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244621D54(uint64_t a1)
{
  unint64_t v2 = sub_2446224FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244621D90()
{
  return 0;
}

uint64_t sub_244621D9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_244621DCC(uint64_t a1)
{
  unint64_t v2 = sub_2446225F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244621E08(uint64_t a1)
{
  unint64_t v2 = sub_2446225F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244621E44()
{
  return 0x656D7269666E6F63;
}

uint64_t sub_244621E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656D7269666E6F63 && a2 == 0xE900000000000064)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_244621F04(uint64_t a1)
{
  unint64_t v2 = sub_2446225A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244621F40(uint64_t a1)
{
  unint64_t v2 = sub_2446225A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244621F7C()
{
  return 0x65736E6F70736572;
}

uint64_t sub_244621F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24462202C(uint64_t a1)
{
  unint64_t v2 = sub_244622550();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244622068(uint64_t a1)
{
  unint64_t v2 = sub_244622550();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LaunchAngelXPCResponse.ResponseType.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC88);
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC90);
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC98);
  uint64_t v28 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DCA0);
  uint64_t v34 = *(void *)(v15 - 8);
  uint64_t v35 = v15;
  MEMORY[0x270FA5388](v15, v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v2;
  int v20 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446224FC();
  sub_24469D728();
  if (v20)
  {
    if (v20 == 1)
    {
      char v39 = 2;
      sub_244622550();
      uint64_t v21 = v31;
      uint64_t v22 = v35;
      sub_24469D4E8();
      uint64_t v36 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D800);
      sub_24460F15C(&qword_268E9D808);
      uint64_t v23 = v33;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v22);
    }
    else
    {
      char v37 = 0;
      sub_2446225F8();
      uint64_t v27 = v35;
      sub_24469D4E8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v27);
    }
  }
  else
  {
    char v38 = 1;
    sub_2446225A4();
    uint64_t v25 = v35;
    sub_24469D4E8();
    uint64_t v26 = v30;
    sub_24469D558();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v18, v25);
  }
}

unint64_t sub_2446224FC()
{
  unint64_t result = qword_268E9DCA8;
  if (!qword_268E9DCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DCA8);
  }
  return result;
}

unint64_t sub_244622550()
{
  unint64_t result = qword_268E9DCB0;
  if (!qword_268E9DCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DCB0);
  }
  return result;
}

unint64_t sub_2446225A4()
{
  unint64_t result = qword_268E9DCB8;
  if (!qword_268E9DCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DCB8);
  }
  return result;
}

unint64_t sub_2446225F8()
{
  unint64_t result = qword_268E9DCC0;
  if (!qword_268E9DCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DCC0);
  }
  return result;
}

uint64_t LaunchAngelXPCResponse.ResponseType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DCC8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v46 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DCD0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  uint64_t v41 = v8;
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DCD8);
  uint64_t v45 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DCE0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  int v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  uint64_t v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_2446224FC();
  uint64_t v22 = v48;
  sub_24469D708();
  if (v22) {
    goto LABEL_9;
  }
  uint64_t v39 = v12;
  uint64_t v24 = v45;
  uint64_t v23 = v46;
  uint64_t v48 = v17;
  uint64_t v25 = sub_24469D4C8();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v32 = sub_24469D358();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *uint64_t v34 = &type metadata for LaunchAngelXPCResponse.ResponseType;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v16);
LABEL_9:
    uint64_t v28 = (uint64_t)v47;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  if (*(unsigned char *)(v25 + 32))
  {
    if (*(unsigned char *)(v25 + 32) == 1)
    {
      char v51 = 1;
      sub_2446225A4();
      sub_24469D408();
      uint64_t v26 = v40;
      char v27 = sub_24469D488();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v16);
      uint64_t v28 = (uint64_t)v47;
      char v29 = 0;
      uint64_t v30 = v27 & 1;
      uint64_t v31 = v44;
    }
    else
    {
      char v52 = 2;
      sub_244622550();
      sub_24469D408();
      uint64_t v31 = v44;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D800);
      sub_24460F15C(&qword_268E9D818);
      uint64_t v36 = v42;
      sub_24469D498();
      uint64_t v37 = v48;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v16);
      uint64_t v30 = v49;
      char v29 = 1;
      uint64_t v28 = (uint64_t)v47;
    }
  }
  else
  {
    char v50 = 0;
    sub_2446225F8();
    sub_24469D408();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v16);
    uint64_t v30 = 0;
    char v29 = 2;
    uint64_t v28 = (uint64_t)v47;
    uint64_t v31 = v44;
  }
  *(void *)uint64_t v31 = v30;
  *(unsigned char *)(v31 + 8) = v29;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_244622C7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCResponse.ResponseType.init(from:)(a1, a2);
}

uint64_t sub_244622C94(void *a1)
{
  return LaunchAngelXPCResponse.ResponseType.encode(to:)(a1);
}

uint64_t LaunchAngelXPCResponse.responseType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  *(void *)a1 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_244622CC0(v2, v3);
}

uint64_t sub_244622CC0(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t LaunchAngelXPCResponse.init(responseType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)a2 = *(void *)result;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_244622CE8()
{
  return 0x65736E6F70736572;
}

uint64_t sub_244622D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000065707954)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_244622DB8(uint64_t a1)
{
  unint64_t v2 = sub_244622F84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244622DF4(uint64_t a1)
{
  unint64_t v2 = sub_244622F84();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LaunchAngelXPCResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DCE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  char v9 = *((unsigned char *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244622F84();
  sub_24469D728();
  uint64_t v11 = v8;
  char v12 = v9;
  sub_244622FD8();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_244622F84()
{
  unint64_t result = qword_268E9DCF0;
  if (!qword_268E9DCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DCF0);
  }
  return result;
}

unint64_t sub_244622FD8()
{
  unint64_t result = qword_268E9DCF8;
  if (!qword_268E9DCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DCF8);
  }
  return result;
}

uint64_t LaunchAngelXPCResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DD00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244622F84();
  sub_24469D708();
  if (!v2)
  {
    sub_2446231A0();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v10 = v13;
    *(void *)a2 = v12;
    *(unsigned char *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2446231A0()
{
  unint64_t result = qword_268E9DD08;
  if (!qword_268E9DD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD08);
  }
  return result;
}

uint64_t sub_2446231F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCResponse.init(from:)(a1, a2);
}

uint64_t sub_24462320C(void *a1)
{
  return LaunchAngelXPCResponse.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for LaunchAngelXPCRequest(void *a1, void *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for LaunchAngelXPCRequest.RequestType(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (void *)(v7 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = a2[2];
        uint64_t v10 = a2[3];
        a1[2] = v9;
        a1[3] = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = a2[3];
        a1[2] = a2[2];
        a1[3] = v12;
        uint64_t v13 = a2[5];
        a1[4] = a2[4];
        a1[5] = v13;
        uint64_t v14 = (int *)type metadata accessor for InstallSheetContext(0);
        uint64_t v15 = v14[7];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = type metadata accessor for InstallSheetContext.Source(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *uint64_t v16 = *v17;
            uint64_t v19 = *((void *)v17 + 2);
            *((void *)v16 + 1) = *((void *)v17 + 1);
            *((void *)v16 + 2) = v19;
            int v20 = v17 + 24;
            unint64_t v21 = *((void *)v17 + 4);
            swift_bridgeObjectRetain();
            if (v21 >> 60 == 15)
            {
              *(_OWORD *)(v16 + 24) = *v20;
            }
            else
            {
              uint64_t v44 = *(void *)v20;
              sub_24460BBA4(v44, v21);
              *((void *)v16 + 3) = v44;
              *((void *)v16 + 4) = v21;
            }
            goto LABEL_17;
          case 1u:
          case 2u:
            uint64_t v34 = *((void *)v17 + 1);
            *(void *)uint64_t v16 = *(void *)v17;
            *((void *)v16 + 1) = v34;
            uint64_t v35 = *((void *)v17 + 2);
            uint64_t v36 = *((void *)v17 + 3);
            *((void *)v16 + 2) = v35;
            *((void *)v16 + 3) = v36;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_17;
          case 3u:
            uint64_t v37 = *((void *)v17 + 1);
            *(void *)uint64_t v16 = *(void *)v17;
            *((void *)v16 + 1) = v37;
            uint64_t v38 = *((void *)v17 + 3);
            *((void *)v16 + 2) = *((void *)v17 + 2);
            *((void *)v16 + 3) = v38;
            uint64_t v39 = *((void *)v17 + 5);
            *((void *)v16 + 4) = *((void *)v17 + 4);
            *((void *)v16 + 5) = v39;
            uint64_t v40 = *((void *)v17 + 7);
            *((void *)v16 + 6) = *((void *)v17 + 6);
            *((void *)v16 + 7) = v40;
            uint64_t v41 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
            __dst = &v16[v41];
            uint64_t v56 = &v17[v41];
            uint64_t v42 = sub_24469C888();
            uint64_t v55 = *(void *)(v42 - 8);
            uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v57(v56, 1, v42))
            {
              uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
              memcpy(__dst, v56, *(void *)(*(void *)(v43 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v55 + 16))(__dst, v56, v42);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v42);
            }
LABEL_17:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
            break;
        }
        *((unsigned char *)a1 + v14[8]) = *((unsigned char *)a2 + v14[8]);
        uint64_t v45 = v14[9];
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        unint64_t v48 = *((void *)v47 + 1);
        if (v48 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
        }
        else
        {
          uint64_t v49 = *(void *)v47;
          sub_24460BBA4(*(void *)v47, *((void *)v47 + 1));
          *(void *)uint64_t v46 = v49;
          *((void *)v46 + 1) = v48;
        }
        uint64_t v50 = v14[10];
        char v51 = (void *)((char *)a1 + v50);
        char v52 = (void *)((char *)a2 + v50);
        uint64_t v53 = v52[1];
        *char v51 = *v52;
        v51[1] = v53;
        *((unsigned char *)a1 + v14[11]) = *((unsigned char *)a2 + v14[11]);
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        uint64_t v23 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_24469C888();
        char v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        break;
      case 5u:
        uint64_t v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        uint64_t v29 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = sub_24469C888();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        v33(v30, v31, v32);
        break;
      default:
        uint64_t v5 = a2[1];
        *a1 = *a2;
        a1[1] = v5;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v6 = a2[4];
        a1[3] = a2[3];
        a1[4] = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LaunchAngelXPCRequest(uint64_t a1)
{
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_16;
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for InstallSheetContext(0);
      uint64_t v4 = a1 + *(int *)(v3 + 28);
      type metadata accessor for InstallSheetContext.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          unint64_t v9 = *(void *)(v4 + 32);
          if (v9 >> 60 != 15) {
            sub_24460B97C(*(void *)(v4 + 24), v9);
          }
          break;
        case 1u:
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = v4 + *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
          uint64_t v11 = sub_24469C888();
          uint64_t v12 = *(void *)(v11 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
          }
          break;
        default:
          break;
      }
      uint64_t v13 = (uint64_t *)(a1 + *(int *)(v3 + 36));
      unint64_t v14 = v13[1];
      if (v14 >> 60 != 15) {
        sub_24460B97C(*v13, v14);
      }
LABEL_16:
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for OAuthAuthorizationContext();
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for LicenseResolutionContext();
LABEL_7:
      uint64_t v6 = a1 + *(int *)(v5 + 20);
      uint64_t v7 = sub_24469C888();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      uint64_t result = v8(v6, v7);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for LaunchAngelXPCRequest(void *a1, void *a2)
{
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      uint64_t v5 = a2[2];
      uint64_t v6 = a2[3];
      a1[2] = v5;
      a1[3] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 3u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      uint64_t v12 = (int *)type metadata accessor for InstallSheetContext(0);
      uint64_t v13 = v12[7];
      unint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = type metadata accessor for InstallSheetContext.Source(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *unint64_t v14 = *v15;
          uint64_t v17 = *((void *)v15 + 2);
          *((void *)v14 + 1) = *((void *)v15 + 1);
          *((void *)v14 + 2) = v17;
          uint64_t v18 = v15 + 24;
          unint64_t v19 = *((void *)v15 + 4);
          swift_bridgeObjectRetain();
          if (v19 >> 60 == 15)
          {
            *(_OWORD *)(v14 + 24) = *v18;
          }
          else
          {
            uint64_t v37 = *(void *)v18;
            sub_24460BBA4(v37, v19);
            *((void *)v14 + 3) = v37;
            *((void *)v14 + 4) = v19;
          }
          goto LABEL_16;
        case 1u:
        case 2u:
          uint64_t v28 = *((void *)v15 + 1);
          *(void *)unint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v28;
          uint64_t v29 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_16;
        case 3u:
          uint64_t v30 = *((void *)v15 + 1);
          *(void *)unint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v30;
          uint64_t v31 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v31;
          uint64_t v32 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v32;
          uint64_t v33 = *((void *)v15 + 7);
          *((void *)v14 + 6) = *((void *)v15 + 6);
          *((void *)v14 + 7) = v33;
          uint64_t v34 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
          __dst = &v14[v34];
          uint64_t v49 = &v15[v34];
          uint64_t v35 = sub_24469C888();
          uint64_t v48 = *(void *)(v35 - 8);
          uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v50(v49, 1, v35))
          {
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
            memcpy(__dst, v49, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v48 + 16))(__dst, v49, v35);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v35);
          }
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
          break;
      }
      *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
      uint64_t v38 = v12[9];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      unint64_t v41 = *((void *)v40 + 1);
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      }
      else
      {
        uint64_t v42 = *(void *)v40;
        sub_24460BBA4(*(void *)v40, *((void *)v40 + 1));
        *(void *)uint64_t v39 = v42;
        *((void *)v39 + 1) = v41;
      }
      uint64_t v43 = v12[10];
      uint64_t v44 = (void *)((char *)a1 + v43);
      uint64_t v45 = (void *)((char *)a2 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      *((unsigned char *)a1 + v12[11]) = *((unsigned char *)a2 + v12[11]);
      goto LABEL_21;
    case 4u:
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      uint64_t v21 = type metadata accessor for OAuthAuthorizationContext();
      goto LABEL_9;
    case 5u:
      uint64_t v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      uint64_t v21 = type metadata accessor for LicenseResolutionContext();
LABEL_9:
      uint64_t v23 = *(int *)(v21 + 20);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_24469C888();
      char v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
      break;
    default:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v8 = a2[4];
      a1[3] = a2[3];
      a1[4] = v8;
LABEL_21:
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for LaunchAngelXPCRequest(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_244620380((uint64_t)a1, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v5 = (int *)type metadata accessor for InstallSheetContext(0);
        uint64_t v6 = v5[7];
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = type metadata accessor for InstallSheetContext.Source(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *uint64_t v7 = *v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            uint64_t v10 = v8 + 24;
            unint64_t v11 = *((void *)v8 + 4);
            swift_bridgeObjectRetain();
            if (v11 >> 60 == 15)
            {
              *(_OWORD *)(v7 + 24) = *v10;
            }
            else
            {
              uint64_t v21 = *(void *)v10;
              sub_24460BBA4(v21, v11);
              *((void *)v7 + 3) = v21;
              *((void *)v7 + 4) = v11;
            }
            goto LABEL_17;
          case 1u:
          case 2u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_17;
          case 3u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            uint64_t v18 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
            __dst = &v7[v18];
            uint64_t v32 = &v8[v18];
            uint64_t v19 = sub_24469C888();
            uint64_t v31 = *(void *)(v19 - 8);
            uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v33(v32, 1, v19))
            {
              uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
              memcpy(__dst, v32, *(void *)(*(void *)(v20 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v32, v19);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v19);
            }
LABEL_17:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
            break;
        }
        *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
        uint64_t v22 = v5[9];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        unint64_t v25 = *((void *)v24 + 1);
        if (v25 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        }
        else
        {
          uint64_t v26 = *(void *)v24;
          sub_24460BBA4(*(void *)v24, *((void *)v24 + 1));
          *(void *)uint64_t v23 = v26;
          *((void *)v23 + 1) = v25;
        }
        uint64_t v27 = v5[10];
        uint64_t v28 = (void *)((char *)a1 + v27);
        uint64_t v29 = (void *)((char *)a2 + v27);
        *uint64_t v28 = *v29;
        v28[1] = v29[1];
        *((unsigned char *)a1 + v5[11]) = *((unsigned char *)a2 + v5[11]);
        goto LABEL_22;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v12 = type metadata accessor for OAuthAuthorizationContext();
        goto LABEL_10;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v12 = type metadata accessor for LicenseResolutionContext();
LABEL_10:
        uint64_t v13 = *(int *)(v12 + 20);
        unint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_24469C888();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        break;
      default:
        *a1 = *a2;
        uint64_t v4 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v4;
        a1[3] = a2[3];
        a1[4] = a2[4];
LABEL_22:
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for LaunchAngelXPCRequest(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      *a1 = *a2;
      uint64_t v20 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_24469C888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4:
      *a1 = *a2;
      uint64_t v24 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
      unint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_24469C888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      goto LABEL_14;
    case 3:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      uint64_t v7 = (int *)type metadata accessor for InstallSheetContext(0);
      uint64_t v8 = v7[7];
      uint64_t v9 = (_OWORD *)((char *)a1 + v8);
      uint64_t v10 = (_OWORD *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for InstallSheetContext.Source(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        long long v12 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v12;
        long long v13 = v10[3];
        void v9[2] = v10[2];
        v9[3] = v13;
        uint64_t v14 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        uint64_t v15 = (char *)v9 + v14;
        uint64_t v16 = (char *)v10 + v14;
        uint64_t v17 = sub_24469C888();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
      *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
      *((unsigned char *)a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
      goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for LaunchAngelXPCRequest(_OWORD *a1, _OWORD *a2)
{
  if (a1 == a2) {
    return a1;
  }
  sub_244620380((uint64_t)a1, type metadata accessor for LaunchAngelXPCRequest.RequestType);
  uint64_t v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      *a1 = *a2;
      uint64_t v20 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_24469C888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4:
      *a1 = *a2;
      uint64_t v24 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
      unint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_24469C888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      goto LABEL_15;
    case 3:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      uint64_t v7 = (int *)type metadata accessor for InstallSheetContext(0);
      uint64_t v8 = v7[7];
      uint64_t v9 = (_OWORD *)((char *)a1 + v8);
      uint64_t v10 = (_OWORD *)((char *)a2 + v8);
      uint64_t v11 = type metadata accessor for InstallSheetContext.Source(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        long long v12 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v12;
        long long v13 = v10[3];
        void v9[2] = v10[2];
        v9[3] = v13;
        uint64_t v14 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        uint64_t v15 = (char *)v9 + v14;
        uint64_t v16 = (char *)v10 + v14;
        uint64_t v17 = sub_24469C888();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
      *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
      *((unsigned char *)a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
      goto LABEL_15;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchAngelXPCRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_244624B08);
}

uint64_t sub_244624B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LaunchAngelXPCRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_244624B88);
}

uint64_t sub_244624B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_244624BF8()
{
  uint64_t result = type metadata accessor for LaunchAngelXPCRequest.RequestType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for LaunchAngelXPCRequest.RequestType(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        uint64_t v10 = a2[2];
        uint64_t v11 = a2[3];
        a1[2] = v10;
        a1[3] = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        uint64_t v13 = a2[3];
        a1[2] = a2[2];
        a1[3] = v13;
        uint64_t v14 = a2[5];
        a1[4] = a2[4];
        a1[5] = v14;
        uint64_t v15 = (int *)type metadata accessor for InstallSheetContext(0);
        uint64_t v16 = v15[7];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for InstallSheetContext.Source(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            char *v17 = *v18;
            uint64_t v20 = *((void *)v18 + 2);
            *((void *)v17 + 1) = *((void *)v18 + 1);
            *((void *)v17 + 2) = v20;
            uint64_t v21 = v18 + 24;
            unint64_t v22 = *((void *)v18 + 4);
            swift_bridgeObjectRetain();
            if (v22 >> 60 == 15)
            {
              *(_OWORD *)(v17 + 24) = *v21;
            }
            else
            {
              uint64_t v45 = *(void *)v21;
              sub_24460BBA4(v45, v22);
              *((void *)v17 + 3) = v45;
              *((void *)v17 + 4) = v22;
            }
            goto LABEL_17;
          case 1u:
          case 2u:
            uint64_t v35 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v35;
            uint64_t v36 = *((void *)v18 + 2);
            uint64_t v37 = *((void *)v18 + 3);
            *((void *)v17 + 2) = v36;
            *((void *)v17 + 3) = v37;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_17;
          case 3u:
            uint64_t v38 = *((void *)v18 + 1);
            *(void *)uint64_t v17 = *(void *)v18;
            *((void *)v17 + 1) = v38;
            uint64_t v39 = *((void *)v18 + 3);
            *((void *)v17 + 2) = *((void *)v18 + 2);
            *((void *)v17 + 3) = v39;
            uint64_t v40 = *((void *)v18 + 5);
            *((void *)v17 + 4) = *((void *)v18 + 4);
            *((void *)v17 + 5) = v40;
            uint64_t v41 = *((void *)v18 + 7);
            *((void *)v17 + 6) = *((void *)v18 + 6);
            *((void *)v17 + 7) = v41;
            uint64_t v42 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
            __dst = &v17[v42];
            uint64_t v57 = &v18[v42];
            uint64_t v43 = sub_24469C888();
            uint64_t v56 = *(void *)(v43 - 8);
            uint64_t v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v58(v57, 1, v43))
            {
              uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
              memcpy(__dst, v57, *(void *)(*(void *)(v44 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v56 + 16))(__dst, v57, v43);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v43);
            }
LABEL_17:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
            break;
        }
        *((unsigned char *)a1 + v15[8]) = *((unsigned char *)a2 + v15[8]);
        uint64_t v46 = v15[9];
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        unint64_t v49 = *((void *)v48 + 1);
        if (v49 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
        }
        else
        {
          uint64_t v50 = *(void *)v48;
          sub_24460BBA4(*(void *)v48, *((void *)v48 + 1));
          *(void *)uint64_t v47 = v50;
          *((void *)v47 + 1) = v49;
        }
        uint64_t v51 = v15[10];
        char v52 = (void *)((char *)a1 + v51);
        uint64_t v53 = (void *)((char *)a2 + v51);
        uint64_t v54 = v53[1];
        *char v52 = *v53;
        v52[1] = v54;
        *((unsigned char *)a1 + v15[11]) = *((unsigned char *)a2 + v15[11]);
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        uint64_t v24 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
        unint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_24469C888();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        break;
      case 5u:
        uint64_t v29 = a2[1];
        *a1 = *a2;
        a1[1] = v29;
        uint64_t v30 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = sub_24469C888();
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v7 = a2[4];
        a1[3] = a2[3];
        a1[4] = v7;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LaunchAngelXPCRequest.RequestType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_16;
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for InstallSheetContext(0);
      uint64_t v4 = a1 + *(int *)(v3 + 28);
      type metadata accessor for InstallSheetContext.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          unint64_t v9 = *(void *)(v4 + 32);
          if (v9 >> 60 != 15) {
            sub_24460B97C(*(void *)(v4 + 24), v9);
          }
          break;
        case 1u:
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = v4 + *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
          uint64_t v11 = sub_24469C888();
          uint64_t v12 = *(void *)(v11 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
          }
          break;
        default:
          break;
      }
      uint64_t v13 = (uint64_t *)(a1 + *(int *)(v3 + 36));
      unint64_t v14 = v13[1];
      if (v14 >> 60 != 15) {
        sub_24460B97C(*v13, v14);
      }
LABEL_16:
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for OAuthAuthorizationContext();
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for LicenseResolutionContext();
LABEL_7:
      uint64_t v6 = a1 + *(int *)(v5 + 20);
      uint64_t v7 = sub_24469C888();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      uint64_t result = v8(v6, v7);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for LaunchAngelXPCRequest.RequestType(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      uint64_t v5 = a2[2];
      uint64_t v6 = a2[3];
      a1[2] = v5;
      a1[3] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 3u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      uint64_t v12 = (int *)type metadata accessor for InstallSheetContext(0);
      uint64_t v13 = v12[7];
      unint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = type metadata accessor for InstallSheetContext.Source(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *unint64_t v14 = *v15;
          uint64_t v17 = *((void *)v15 + 2);
          *((void *)v14 + 1) = *((void *)v15 + 1);
          *((void *)v14 + 2) = v17;
          uint64_t v18 = v15 + 24;
          unint64_t v19 = *((void *)v15 + 4);
          swift_bridgeObjectRetain();
          if (v19 >> 60 == 15)
          {
            *(_OWORD *)(v14 + 24) = *v18;
          }
          else
          {
            uint64_t v37 = *(void *)v18;
            sub_24460BBA4(v37, v19);
            *((void *)v14 + 3) = v37;
            *((void *)v14 + 4) = v19;
          }
          goto LABEL_16;
        case 1u:
        case 2u:
          uint64_t v28 = *((void *)v15 + 1);
          *(void *)unint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v28;
          uint64_t v29 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_16;
        case 3u:
          uint64_t v30 = *((void *)v15 + 1);
          *(void *)unint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v30;
          uint64_t v31 = *((void *)v15 + 3);
          *((void *)v14 + 2) = *((void *)v15 + 2);
          *((void *)v14 + 3) = v31;
          uint64_t v32 = *((void *)v15 + 5);
          *((void *)v14 + 4) = *((void *)v15 + 4);
          *((void *)v14 + 5) = v32;
          uint64_t v33 = *((void *)v15 + 7);
          *((void *)v14 + 6) = *((void *)v15 + 6);
          *((void *)v14 + 7) = v33;
          uint64_t v34 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
          __dst = &v14[v34];
          unint64_t v49 = &v15[v34];
          uint64_t v35 = sub_24469C888();
          uint64_t v48 = *(void *)(v35 - 8);
          uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v50(v49, 1, v35))
          {
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
            memcpy(__dst, v49, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v48 + 16))(__dst, v49, v35);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v35);
          }
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
          break;
      }
      *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
      uint64_t v38 = v12[9];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      unint64_t v41 = *((void *)v40 + 1);
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      }
      else
      {
        uint64_t v42 = *(void *)v40;
        sub_24460BBA4(*(void *)v40, *((void *)v40 + 1));
        *(void *)uint64_t v39 = v42;
        *((void *)v39 + 1) = v41;
      }
      uint64_t v43 = v12[10];
      uint64_t v44 = (void *)((char *)a1 + v43);
      uint64_t v45 = (void *)((char *)a2 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      *((unsigned char *)a1 + v12[11]) = *((unsigned char *)a2 + v12[11]);
      goto LABEL_21;
    case 4u:
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      uint64_t v21 = type metadata accessor for OAuthAuthorizationContext();
      goto LABEL_9;
    case 5u:
      uint64_t v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      uint64_t v21 = type metadata accessor for LicenseResolutionContext();
LABEL_9:
      uint64_t v23 = *(int *)(v21 + 20);
      uint64_t v24 = (char *)a1 + v23;
      unint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_24469C888();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
      break;
    default:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v8 = a2[4];
      a1[3] = a2[3];
      a1[4] = v8;
LABEL_21:
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for LaunchAngelXPCRequest.RequestType(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_244620380((uint64_t)a1, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        goto LABEL_22;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v5 = (int *)type metadata accessor for InstallSheetContext(0);
        uint64_t v6 = v5[7];
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = type metadata accessor for InstallSheetContext.Source(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *uint64_t v7 = *v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            uint64_t v10 = v8 + 24;
            unint64_t v11 = *((void *)v8 + 4);
            swift_bridgeObjectRetain();
            if (v11 >> 60 == 15)
            {
              *(_OWORD *)(v7 + 24) = *v10;
            }
            else
            {
              uint64_t v21 = *(void *)v10;
              sub_24460BBA4(v21, v11);
              *((void *)v7 + 3) = v21;
              *((void *)v7 + 4) = v11;
            }
            goto LABEL_17;
          case 1u:
          case 2u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_17;
          case 3u:
            *(void *)uint64_t v7 = *(void *)v8;
            *((void *)v7 + 1) = *((void *)v8 + 1);
            *((void *)v7 + 2) = *((void *)v8 + 2);
            *((void *)v7 + 3) = *((void *)v8 + 3);
            *((void *)v7 + 4) = *((void *)v8 + 4);
            *((void *)v7 + 5) = *((void *)v8 + 5);
            *((void *)v7 + 6) = *((void *)v8 + 6);
            *((void *)v7 + 7) = *((void *)v8 + 7);
            uint64_t v18 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
            __dst = &v7[v18];
            uint64_t v32 = &v8[v18];
            uint64_t v19 = sub_24469C888();
            uint64_t v31 = *(void *)(v19 - 8);
            uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v33(v32, 1, v19))
            {
              uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
              memcpy(__dst, v32, *(void *)(*(void *)(v20 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v32, v19);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v19);
            }
LABEL_17:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
            break;
        }
        *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
        uint64_t v22 = v5[9];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        unint64_t v25 = *((void *)v24 + 1);
        if (v25 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        }
        else
        {
          uint64_t v26 = *(void *)v24;
          sub_24460BBA4(*(void *)v24, *((void *)v24 + 1));
          *(void *)uint64_t v23 = v26;
          *((void *)v23 + 1) = v25;
        }
        uint64_t v27 = v5[10];
        uint64_t v28 = (void *)((char *)a1 + v27);
        uint64_t v29 = (void *)((char *)a2 + v27);
        *uint64_t v28 = *v29;
        v28[1] = v29[1];
        *((unsigned char *)a1 + v5[11]) = *((unsigned char *)a2 + v5[11]);
        goto LABEL_22;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v12 = type metadata accessor for OAuthAuthorizationContext();
        goto LABEL_10;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v12 = type metadata accessor for LicenseResolutionContext();
LABEL_10:
        uint64_t v13 = *(int *)(v12 + 20);
        unint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_24469C888();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        break;
      default:
        *a1 = *a2;
        uint64_t v4 = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[1] = v4;
        a1[3] = a2[3];
        a1[4] = a2[4];
LABEL_22:
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for LaunchAngelXPCRequest.RequestType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      *a1 = *a2;
      uint64_t v21 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_24469C888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4:
      *a1 = *a2;
      uint64_t v25 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_24469C888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_14;
    case 3:
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      uint64_t v8 = (int *)type metadata accessor for InstallSheetContext(0);
      uint64_t v9 = v8[7];
      uint64_t v10 = (_OWORD *)((char *)a1 + v9);
      unint64_t v11 = (_OWORD *)((char *)a2 + v9);
      uint64_t v12 = type metadata accessor for InstallSheetContext.Source(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        long long v13 = v11[1];
        *uint64_t v10 = *v11;
        v10[1] = v13;
        long long v14 = v11[3];
        void v10[2] = v11[2];
        v10[3] = v14;
        uint64_t v15 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        uint64_t v16 = (char *)v10 + v15;
        uint64_t v17 = (char *)v11 + v15;
        uint64_t v18 = sub_24469C888();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
      *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
      *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
      *((unsigned char *)a1 + v8[11]) = *((unsigned char *)a2 + v8[11]);
      goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for LaunchAngelXPCRequest.RequestType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_244620380((uint64_t)a1, type metadata accessor for LaunchAngelXPCRequest.RequestType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      *a1 = *a2;
      uint64_t v21 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_24469C888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4:
      *a1 = *a2;
      uint64_t v25 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_24469C888();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_15;
    case 3:
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      uint64_t v8 = (int *)type metadata accessor for InstallSheetContext(0);
      uint64_t v9 = v8[7];
      uint64_t v10 = (_OWORD *)((char *)a1 + v9);
      unint64_t v11 = (_OWORD *)((char *)a2 + v9);
      uint64_t v12 = type metadata accessor for InstallSheetContext.Source(0);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        long long v13 = v11[1];
        *uint64_t v10 = *v11;
        v10[1] = v13;
        long long v14 = v11[3];
        void v10[2] = v11[2];
        v10[3] = v14;
        uint64_t v15 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        uint64_t v16 = (char *)v10 + v15;
        uint64_t v17 = (char *)v11 + v15;
        uint64_t v18 = sub_24469C888();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
      *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
      *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
      *((unsigned char *)a1 + v8[11]) = *((unsigned char *)a2 + v8[11]);
      goto LABEL_15;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.Source(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_244626570()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_244626580()
{
  uint64_t result = type metadata accessor for InstallSheetContext(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for OAuthAuthorizationContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for LicenseResolutionContext();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_244626698(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse()
{
  return &type metadata for LaunchAngelXPCResponse;
}

uint64_t initializeBufferWithCopyOfBuffer for LaunchAngelXPCResponse.ResponseType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_244622CC0(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for LaunchAngelXPCResponse.ResponseType(uint64_t a1)
{
  return sub_244626698(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t _s14MarketplaceKit22LaunchAngelXPCResponseV12ResponseTypeOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_244622CC0(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_244626698(v5, v6);
  return a1;
}

uint64_t assignWithTake for LaunchAngelXPCResponse.ResponseType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_244626698(v4, v5);
  return a1;
}

uint64_t _s14MarketplaceKit22LaunchAngelXPCResponseV12ResponseTypeOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit22LaunchAngelXPCResponseV12ResponseTypeOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_244626854(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24462686C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.CodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.CodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.CodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LaunchAngelXPCRequest.RequestType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LaunchAngelXPCRequest.RequestType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244626A5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.CodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ApprovedDeveloper.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14MarketplaceKit22LaunchAngelXPCResponseV12ResponseTypeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244626BF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys;
}

unsigned char *_s14MarketplaceKit21LaunchAngelXPCRequestV11RequestTypeO30DisplaySearchResultsCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244626D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys;
}

unsigned char *_s14MarketplaceKit22LaunchAngelXPCResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x244626E00);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys;
}

unint64_t sub_244626E3C()
{
  unint64_t result = qword_268E9DD30;
  if (!qword_268E9DD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD30);
  }
  return result;
}

unint64_t sub_244626E94()
{
  unint64_t result = qword_268E9DD38;
  if (!qword_268E9DD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD38);
  }
  return result;
}

unint64_t sub_244626EEC()
{
  unint64_t result = qword_268E9DD40;
  if (!qword_268E9DD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD40);
  }
  return result;
}

unint64_t sub_244626F44()
{
  unint64_t result = qword_268E9DD48;
  if (!qword_268E9DD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD48);
  }
  return result;
}

unint64_t sub_244626F9C()
{
  unint64_t result = qword_268E9DD50;
  if (!qword_268E9DD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD50);
  }
  return result;
}

unint64_t sub_244626FF4()
{
  unint64_t result = qword_268E9DD58;
  if (!qword_268E9DD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD58);
  }
  return result;
}

unint64_t sub_24462704C()
{
  unint64_t result = qword_268E9DD60;
  if (!qword_268E9DD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD60);
  }
  return result;
}

unint64_t sub_2446270A4()
{
  unint64_t result = qword_268E9DD68;
  if (!qword_268E9DD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD68);
  }
  return result;
}

unint64_t sub_2446270FC()
{
  unint64_t result = qword_268E9DD70;
  if (!qword_268E9DD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD70);
  }
  return result;
}

unint64_t sub_244627154()
{
  unint64_t result = qword_268E9DD78;
  if (!qword_268E9DD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD78);
  }
  return result;
}

unint64_t sub_2446271AC()
{
  unint64_t result = qword_268E9DD80;
  if (!qword_268E9DD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD80);
  }
  return result;
}

unint64_t sub_244627204()
{
  unint64_t result = qword_268E9DD88;
  if (!qword_268E9DD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD88);
  }
  return result;
}

unint64_t sub_24462725C()
{
  unint64_t result = qword_268E9DD90;
  if (!qword_268E9DD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD90);
  }
  return result;
}

unint64_t sub_2446272B4()
{
  unint64_t result = qword_268E9DD98;
  if (!qword_268E9DD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DD98);
  }
  return result;
}

unint64_t sub_24462730C()
{
  unint64_t result = qword_268E9DDA0;
  if (!qword_268E9DDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDA0);
  }
  return result;
}

unint64_t sub_244627364()
{
  unint64_t result = qword_268E9DDA8;
  if (!qword_268E9DDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDA8);
  }
  return result;
}

unint64_t sub_2446273BC()
{
  unint64_t result = qword_268E9DDB0;
  if (!qword_268E9DDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDB0);
  }
  return result;
}

unint64_t sub_244627414()
{
  unint64_t result = qword_268E9DDB8;
  if (!qword_268E9DDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDB8);
  }
  return result;
}

unint64_t sub_24462746C()
{
  unint64_t result = qword_268E9DDC0;
  if (!qword_268E9DDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDC0);
  }
  return result;
}

unint64_t sub_2446274C4()
{
  unint64_t result = qword_268E9DDC8;
  if (!qword_268E9DDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDC8);
  }
  return result;
}

unint64_t sub_24462751C()
{
  unint64_t result = qword_268E9DDD0;
  if (!qword_268E9DDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDD0);
  }
  return result;
}

unint64_t sub_244627574()
{
  unint64_t result = qword_268E9DDD8;
  if (!qword_268E9DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDD8);
  }
  return result;
}

unint64_t sub_2446275CC()
{
  unint64_t result = qword_268E9DDE0;
  if (!qword_268E9DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDE0);
  }
  return result;
}

unint64_t sub_244627624()
{
  unint64_t result = qword_268E9DDE8;
  if (!qword_268E9DDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDE8);
  }
  return result;
}

unint64_t sub_24462767C()
{
  unint64_t result = qword_268E9DDF0;
  if (!qword_268E9DDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDF0);
  }
  return result;
}

unint64_t sub_2446276D4()
{
  unint64_t result = qword_268E9DDF8;
  if (!qword_268E9DDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DDF8);
  }
  return result;
}

unint64_t sub_24462772C()
{
  unint64_t result = qword_268E9DE00;
  if (!qword_268E9DE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE00);
  }
  return result;
}

unint64_t sub_244627784()
{
  unint64_t result = qword_268E9DE08;
  if (!qword_268E9DE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE08);
  }
  return result;
}

unint64_t sub_2446277DC()
{
  unint64_t result = qword_268E9DE10;
  if (!qword_268E9DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE10);
  }
  return result;
}

unint64_t sub_244627834()
{
  unint64_t result = qword_268E9DE18;
  if (!qword_268E9DE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE18);
  }
  return result;
}

unint64_t sub_24462788C()
{
  unint64_t result = qword_268E9DE20;
  if (!qword_268E9DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE20);
  }
  return result;
}

unint64_t sub_2446278E4()
{
  unint64_t result = qword_268E9DE28;
  if (!qword_268E9DE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE28);
  }
  return result;
}

unint64_t sub_24462793C()
{
  unint64_t result = qword_268E9DE30;
  if (!qword_268E9DE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE30);
  }
  return result;
}

unint64_t sub_244627994()
{
  unint64_t result = qword_268E9DE38;
  if (!qword_268E9DE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE38);
  }
  return result;
}

unint64_t sub_2446279EC()
{
  unint64_t result = qword_268E9DE40;
  if (!qword_268E9DE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE40);
  }
  return result;
}

unint64_t sub_244627A44()
{
  unint64_t result = qword_268E9DE48;
  if (!qword_268E9DE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE48);
  }
  return result;
}

unint64_t sub_244627A9C()
{
  unint64_t result = qword_268E9DE50;
  if (!qword_268E9DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE50);
  }
  return result;
}

unint64_t sub_244627AF4()
{
  unint64_t result = qword_268E9DE58;
  if (!qword_268E9DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DE58);
  }
  return result;
}

uint64_t sub_244627B48(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000002446AA120 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002446AA140 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002446AA160 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002446AA180 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002446AA1A0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002446AA1C0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_244627D84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244627E9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973726576 && a2 == 0xE900000000000044 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24462801C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24462812C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465726F6E6769 && a2 == 0xE700000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002446AA1E0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002446AA1A0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t MarketplaceKitURIScheme.getter()
{
  return 0x6C7074656B72616DLL;
}

unint64_t sub_2446282C4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D830);
  BOOL v2 = (void *)sub_24469D3D8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24467F0B4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t OAuthAuthorizationRequest.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_244628B28(v1, a1, (uint64_t (*)(void))type metadata accessor for OAuthAuthorizationContext);
}

uint64_t OAuthAuthorizationRequest.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_244628424(a1, a2);
}

uint64_t sub_244628424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OAuthAuthorizationRequest.run()()
{
  v1[5] = v0;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v1[6] = swift_task_alloc();
  type metadata accessor for OAuthAuthorizationRequest();
  v1[7] = swift_task_alloc();
  uint64_t v2 = sub_24469CC68();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2446285A0, 0, 0);
}

uint64_t sub_2446285A0()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[7];
  sub_24469CC18();
  sub_244628B28(v1, v2, (uint64_t (*)(void))type metadata accessor for OAuthAuthorizationRequest);
  uint64_t v3 = sub_24469CC48();
  os_log_type_t v4 = sub_24469D1A8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v16 = v0[9];
    uint64_t v5 = (uint64_t *)v0[7];
    uint64_t v17 = v0[8];
    uint64_t v18 = v0[10];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v19 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v9 = *v5;
    unint64_t v8 = v5[1];
    swift_bridgeObjectRetain();
    v0[4] = sub_244628BF0(v9, v8, &v19);
    sub_24469D218();
    swift_bridgeObjectRelease();
    sub_244628B90((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for OAuthAuthorizationRequest);
    _os_log_impl(&dword_244604000, v3, v4, "[%s] Requesting OAuth Authorization using Launch Angel...", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245695AF0](v7, -1, -1);
    MEMORY[0x245695AF0](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v11 = v0[9];
    uint64_t v10 = v0[10];
    uint64_t v12 = v0[8];
    sub_244628B90(v0[7], (uint64_t (*)(void))type metadata accessor for OAuthAuthorizationRequest);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  sub_244628B28(v0[5], v0[6], (uint64_t (*)(void))type metadata accessor for OAuthAuthorizationContext);
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[11] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_24462885C;
  uint64_t v14 = v0[6];
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v14);
}

uint64_t sub_24462885C()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_244628A3C;
  }
  else {
    uint64_t v2 = sub_244628970;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244628970()
{
  unint64_t v1 = *(void *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 24);
  if (v2 != 1)
  {
    sub_244626698(*(void *)(v0 + 16), v2);
    unint64_t v1 = sub_2446282C4(MEMORY[0x263F8EE78]);
  }
  sub_244628B90(*(void *)(v0 + 48), type metadata accessor for LaunchAngelXPCRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v3(v1);
}

uint64_t sub_244628A3C()
{
  sub_244628B90(*(void *)(v0 + 48), type metadata accessor for LaunchAngelXPCRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for OAuthAuthorizationRequest()
{
  uint64_t result = qword_268E9DE68;
  if (!qword_268E9DE68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_244628B28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_244628B90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_244628BF0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_244628CC4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24460E5B0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24460E5B0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_244628CC4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24469D228();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_244628E80(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24469D368();
  if (!v8)
  {
    sub_24469D388();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24469D3E8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_244628E80(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_244628F18(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2446290F8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2446290F8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_244628F18(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_244629090(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24469D328();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24469D388();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24469CFF8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24469D3E8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24469D388();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_244629090(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DE80);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2446290F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DE80);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24469D3E8();
  __break(1u);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OAuthAuthorizationRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for OAuthAuthorizationContext();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(v4 + 20);
    int64_t v8 = (char *)a1 + v7;
    int64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24469C888();
    size_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for OAuthAuthorizationRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  uint64_t v3 = sub_24469C888();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *initializeWithCopy for OAuthAuthorizationRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24469C888();
  int64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for OAuthAuthorizationRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for OAuthAuthorizationRequest(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for OAuthAuthorizationRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for OAuthAuthorizationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_244629628);
}

uint64_t sub_244629628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OAuthAuthorizationContext();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizationRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2446296A8);
}

uint64_t sub_2446296A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OAuthAuthorizationContext();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_244629718()
{
  uint64_t result = type metadata accessor for OAuthAuthorizationContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2446297A4(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DE78);
  uint64_t v3 = (void *)sub_24469D3D8();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_24467F12C(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_24467F12C(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_2446298A4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2446298B4()
{
  return sub_24469D688();
}

uint64_t sub_2446298DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2446299D0()
{
  return sub_24469D6C8();
}

uint64_t sub_244629A18(char a1)
{
  if (a1) {
    return 0x6572756C696166;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_244629A48(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

BOOL sub_244629AB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2446298A4(*a1, *a2);
}

uint64_t sub_244629AD0()
{
  return sub_2446299D0();
}

uint64_t sub_244629AE4()
{
  return sub_2446298B4();
}

uint64_t sub_244629AF8()
{
  return sub_24469D6C8();
}

uint64_t sub_244629B44()
{
  return sub_244629A18(*v0);
}

uint64_t sub_244629B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2446298DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244629B8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24462DFC8();
  *a1 = result;
  return result;
}

uint64_t sub_244629BC0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_244629C14(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_244629C68()
{
  return 12383;
}

uint64_t sub_244629C78@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_244629D70(a1, (uint64_t (*)(void, void, void))sub_24460F778, a2);
}

uint64_t sub_244629C90(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_244629CE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_244629D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244629A48(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_244629D70@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_244629DAC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_244629E00(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t MarketplaceKitServiceResult.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v48 = type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_24469D598();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  MEMORY[0x270FA5388](v6, v7);
  unint64_t v49 = (char *)v38 - v8;
  uint64_t v45 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v45, v9);
  uint64_t v47 = (uint64_t)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v41 = v11;
  v38[1] = v12;
  uint64_t v13 = sub_24469D598();
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v44 = v13;
  uint64_t v15 = MEMORY[0x270FA5388](v13, v14);
  uint64_t v40 = (char *)v38 - v16;
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v15, v17);
  uint64_t v39 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v18, v21);
  uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v5;
  uint64_t v53 = v4;
  type metadata accessor for MarketplaceKitServiceResult.CodingKeys();
  swift_getWitnessTable();
  uint64_t v24 = sub_24469D598();
  uint64_t v54 = *(void *)(v24 - 8);
  uint64_t v55 = v24;
  MEMORY[0x270FA5388](v24, v25);
  uint64_t v27 = (char *)v38 - v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24469D728();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v56, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = v47;
    sub_24460BD64((uint64_t)v23, v47);
    char v58 = 1;
    uint64_t v29 = v49;
    uint64_t v30 = v55;
    sub_24469D4E8();
    sub_24462ADF4(&qword_268E9DE88);
    uint64_t v31 = v51;
    sub_24469D568();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v31);
    sub_24462A418(v28);
  }
  else
  {
    uint64_t v32 = v42;
    uint64_t v33 = v39;
    uint64_t v34 = v53;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v23, v53);
    char v57 = 0;
    uint64_t v35 = v40;
    uint64_t v30 = v55;
    sub_24469D4E8();
    uint64_t v36 = v44;
    sub_24469D568();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v27, v30);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24462A418(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MarketplaceKitServiceResult.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v56 = a4;
  uint64_t v7 = type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v67 = v7;
  uint64_t v60 = sub_24469D4D8();
  uint64_t v62 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60, v8);
  uint64_t v68 = (char *)&v52 - v9;
  uint64_t v10 = type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys();
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = v10;
  uint64_t v57 = sub_24469D4D8();
  uint64_t v61 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57, v11);
  uint64_t v65 = (char *)&v52 - v12;
  type metadata accessor for MarketplaceKitServiceResult.CodingKeys();
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v72 = sub_24469D4D8();
  uint64_t v69 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72, v13);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v70 = type metadata accessor for MarketplaceKitServiceResult();
  uint64_t v55 = *(void *)(v70 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v70, v16);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v17, v20);
  uint64_t v23 = (char *)&v52 - v22;
  MEMORY[0x270FA5388](v21, v24);
  uint64_t v26 = (char *)&v52 - v25;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v71 = v15;
  uint64_t v27 = v78;
  sub_24469D708();
  uint64_t v28 = (uint64_t)a1;
  if (!v27)
  {
    uint64_t v54 = v23;
    uint64_t v73 = (uint64_t)v19;
    uint64_t v53 = v26;
    uint64_t v30 = v70;
    uint64_t v29 = v71;
    uint64_t v78 = v28;
    uint64_t v31 = v72;
    *(void *)&long long v74 = sub_24469D4C8();
    sub_24469D058();
    swift_getWitnessTable();
    *(void *)&long long v76 = sub_24469D258();
    *((void *)&v76 + 1) = v32;
    *(void *)&long long v77 = v33;
    *((void *)&v77 + 1) = v34;
    sub_24469D248();
    swift_getWitnessTable();
    sub_24469D158();
    char v35 = v74;
    if (v74 == 2 || (long long v52 = v76, v74 = v76, v75 = v77, (sub_24469D168() & 1) == 0))
    {
      uint64_t v40 = sub_24469D358();
      swift_allocError();
      uint64_t v41 = v29;
      uint64_t v43 = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
      *uint64_t v43 = v30;
      sub_24469D418();
      sub_24469D348();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v40 - 8) + 104))(v43, *MEMORY[0x263F8DCB0], v40);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v31);
    }
    else
    {
      if (v35)
      {
        LOBYTE(v74) = 1;
        uint64_t v45 = v68;
        sub_24469D408();
        uint64_t v46 = v29;
        type metadata accessor for MarketplaceKitError();
        sub_24462ADF4(&qword_268E9DE90);
        uint64_t v47 = v73;
        uint64_t v48 = v60;
        sub_24469D498();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v48);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v31);
        uint64_t v49 = v30;
        swift_storeEnumTagMultiPayload();
        uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
        uint64_t v51 = v53;
        v50(v53, v47, v30);
      }
      else
      {
        LOBYTE(v74) = 0;
        uint64_t v36 = v65;
        sub_24469D408();
        uint64_t v37 = v54;
        uint64_t v38 = v57;
        sub_24469D498();
        uint64_t v39 = v69;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v38);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v31);
        uint64_t v49 = v30;
        swift_storeEnumTagMultiPayload();
        uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
        uint64_t v51 = v53;
        v50(v53, (uint64_t)v37, v30);
      }
      v50(v56, (uint64_t)v51, v49);
    }
    uint64_t v28 = v78;
  }
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24462ACC4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  return MarketplaceKitServiceResult.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_24462ACE8(void *a1, uint64_t a2)
{
  return MarketplaceKitServiceResult.encode(to:)(a1, a2);
}

uint64_t Result.init<>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for MarketplaceKitServiceResult();
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_24460BD64(a1, a3);
  }
  else {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
  }
  type metadata accessor for MarketplaceKitError();
  sub_24462ADF4((unint64_t *)&qword_268E9D7C0);
  sub_24469D6E8();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24462ADF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MarketplaceKitError();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24462AE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_24462AE40()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MarketplaceKitError();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24462AF08(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) <= 0x10uLL) {
    uint64_t v10 = 16;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  if (v10 > 3) {
    goto LABEL_8;
  }
  unsigned int v11 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  uint64_t v12 = 2;
  if (v11 > 0xFFFC) {
    uint64_t v12 = 4;
  }
  if (v11 <= 0xFC) {
LABEL_8:
  }
    uint64_t v12 = 1;
  unint64_t v13 = v12 + v10;
  if (v13 <= v7) {
    unint64_t v13 = v7;
  }
  unint64_t v14 = v13 + 1;
  int v15 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80);
  if (v14 > 0x18 || (v15 & 0x1000F8) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v17 + (((v15 & 0xF8 | 7u) + 16) & ~(unint64_t)(v15 & 0xF8 | 7u)));
    swift_retain();
    return a1;
  }
  if (v10 <= 3)
  {
    unsigned int v21 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    if (v21 > 0xFFFC)
    {
      unint64_t v24 = v10 + 4;
      if (v10 + 4 <= v7) {
        unint64_t v24 = v7;
      }
      unsigned int v19 = a2[v24];
      if (v19 < 2)
      {
        if (v19 != 1) {
          goto LABEL_74;
        }
        uint64_t v20 = &a2[v10];
        goto LABEL_64;
      }
    }
    else
    {
      if (v21 <= 0xFC)
      {
        if (v10 + 1 > v7) {
          unint64_t v22 = v10 + 1;
        }
        else {
          unint64_t v22 = v7;
        }
        unsigned int v19 = a2[v22];
        if (v19 > 1) {
          goto LABEL_29;
        }
        if (v19 != 1) {
          goto LABEL_74;
        }
        uint64_t v20 = &a2[v10];
LABEL_60:
        unsigned int v30 = ((1 << (8 * v10)) + 17) >> (8 * v10);
        if (v30 <= 0xFFFC)
        {
          if (v30 <= 0xFC) {
            goto LABEL_62;
          }
LABEL_68:
          unsigned int v31 = *(unsigned __int16 *)v20;
          unsigned int v32 = v31 - 3;
          if (v31 < 3) {
            goto LABEL_88;
          }
LABEL_69:
          if (v10 <= 3) {
            uint64_t v33 = v10;
          }
          else {
            uint64_t v33 = 4;
          }
          switch(v33)
          {
            case 1:
              int v34 = *a2;
              goto LABEL_85;
            case 2:
              int v34 = *(unsigned __int16 *)a2;
              goto LABEL_85;
            case 3:
              int v34 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_85;
            case 4:
              int v34 = *(_DWORD *)a2;
LABEL_85:
              if (v10 < 4) {
                v34 |= v32 << (8 * v10);
              }
              unsigned int v31 = v34 + 3;
              break;
            default:
              break;
          }
LABEL_88:
          if (v31 != 2)
          {
            if (v31 != 1)
            {
              if (v31)
              {
                if (v10 > 3) {
                  goto LABEL_108;
                }
                unsigned int v42 = ((1 << (8 * v10)) + 17) >> (8 * v10);
                uint64_t v43 = 2;
                if (v42 > 0xFFFC) {
                  uint64_t v43 = 4;
                }
                if (v42 <= 0xFC) {
LABEL_108:
                }
                  uint64_t v43 = 1;
                memcpy(a1, a2, v43 + v10);
                if (v10 > 3) {
                  goto LABEL_113;
                }
                goto LABEL_110;
              }
              *a1 = *(void *)a2;
              swift_bridgeObjectRetain();
              if (v10 > 3) {
                goto LABEL_92;
              }
              unsigned int v38 = ((1 << (8 * v10)) + 17) >> (8 * v10);
              if (v38 > 0xFFFC)
              {
                *(_DWORD *)((char *)a1 + v10) = 0;
              }
              else
              {
                if (v38 <= 0xFC)
                {
LABEL_92:
                  *((unsigned char *)a1 + v10) = 0;
                  if (v10 > 3)
                  {
LABEL_113:
                    uint64_t v45 = 1;
LABEL_124:
                    unint64_t v46 = v45 + v10;
                    if (v46 <= v7) {
                      unint64_t v46 = v7;
                    }
                    *((unsigned char *)a1 + v46) = 1;
                    return a1;
                  }
LABEL_110:
                  unsigned int v44 = ((1 << (8 * v10)) + 17) >> (8 * v10);
                  uint64_t v45 = 2;
                  if (v44 > 0xFFFC) {
                    uint64_t v45 = 4;
                  }
                  if (v44 > 0xFC) {
                    goto LABEL_124;
                  }
                  goto LABEL_113;
                }
                *(_WORD *)((char *)a1 + v10) = 0;
              }
LABEL_122:
              BOOL v26 = v38 > 0xFFFC;
              uint64_t v45 = 2;
              if (v26) {
                uint64_t v45 = 4;
              }
              goto LABEL_124;
            }
            uint64_t v40 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v40;
            swift_bridgeObjectRetain();
            if (v10 > 3) {
              goto LABEL_101;
            }
            int v41 = 1;
            unsigned int v38 = ((1 << (8 * v10)) + 17) >> (8 * v10);
            if (v38 <= 0xFFFC)
            {
              if (v38 <= 0xFC)
              {
LABEL_101:
                char v39 = 1;
LABEL_102:
                *((unsigned char *)a1 + v10) = v39;
                if (v10 > 3) {
                  goto LABEL_113;
                }
                goto LABEL_110;
              }
LABEL_121:
              *(_WORD *)((char *)a1 + v10) = v41;
              goto LABEL_122;
            }
LABEL_118:
            *(_DWORD *)((char *)a1 + v10) = v41;
            goto LABEL_122;
          }
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v8);
          if (v10 <= 3)
          {
            unsigned int v38 = ((1 << (8 * v10)) + 17) >> (8 * v10);
            if (v38 > 0xFFFC)
            {
              int v41 = 2;
              goto LABEL_118;
            }
            if (v38 > 0xFC)
            {
              LOWORD(v41) = 2;
              goto LABEL_121;
            }
          }
          char v39 = 2;
          goto LABEL_102;
        }
LABEL_64:
        unsigned int v31 = *(_DWORD *)v20;
        unsigned int v32 = v31 - 3;
        if (v31 < 3) {
          goto LABEL_88;
        }
        goto LABEL_69;
      }
      unint64_t v25 = v10 + 2;
      if (v10 + 2 <= v7) {
        unint64_t v25 = v7;
      }
      unsigned int v19 = a2[v25];
      if (v19 <= 1)
      {
        if (v19 != 1) {
          goto LABEL_74;
        }
        uint64_t v20 = &a2[v10];
        goto LABEL_68;
      }
    }
    BOOL v26 = v21 > 0xFFFC;
    uint64_t v23 = 2;
    if (v26) {
      uint64_t v23 = 4;
    }
    goto LABEL_40;
  }
  if (v10 + 1 > v7) {
    unint64_t v18 = v10 + 1;
  }
  else {
    unint64_t v18 = v7;
  }
  unsigned int v19 = a2[v18];
  if (v19 > 1)
  {
LABEL_29:
    uint64_t v23 = 1;
LABEL_40:
    unint64_t v27 = v23 + v10;
    if (v27 <= v7) {
      LODWORD(v27) = v7;
    }
    if (v27 <= 3) {
      uint64_t v28 = v27;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *a2;
        if (v27 < 4) {
          goto LABEL_49;
        }
        goto LABEL_55;
      case 2:
        int v29 = *(unsigned __int16 *)a2;
        if (v27 < 4) {
          goto LABEL_49;
        }
        goto LABEL_55;
      case 3:
        int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v27 < 4) {
          goto LABEL_49;
        }
        goto LABEL_55;
      case 4:
        int v29 = *(_DWORD *)a2;
        if (v27 < 4)
        {
LABEL_49:
          unsigned int v19 = (v29 | ((v19 - 2) << (8 * v27))) + 2;
LABEL_50:
          if (v19 != 1) {
            goto LABEL_74;
          }
        }
        else
        {
LABEL_55:
          if (v29 != -1) {
            goto LABEL_74;
          }
        }
        uint64_t v20 = &a2[v10];
        if (v10 <= 3) {
          goto LABEL_60;
        }
        break;
      default:
        goto LABEL_50;
    }
LABEL_62:
    unsigned int v31 = *v20;
    unsigned int v32 = v31 - 3;
    if (v31 < 3) {
      goto LABEL_88;
    }
    goto LABEL_69;
  }
  if (v19 == 1)
  {
    uint64_t v20 = &a2[v10];
    goto LABEL_62;
  }
LABEL_74:
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (v10 > 3) {
    goto LABEL_78;
  }
  unsigned int v35 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  uint64_t v36 = 2;
  if (v35 > 0xFFFC) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFC) {
LABEL_78:
  }
    uint64_t v36 = 1;
  unint64_t v37 = v36 + v10;
  if (v37 <= v7) {
    unint64_t v37 = v7;
  }
  *((unsigned char *)a1 + v37) = 0;
  return a1;
}

uint64_t sub_24462B52C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v28 = *(void *)(v3 - 8);
  unint64_t v4 = *(void *)(v28 + 64);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
  unint64_t v6 = *(void *)(*(void *)(result - 8) + 64);
  if (v6 <= 0x10) {
    unint64_t v6 = 16;
  }
  if (v6 > 3)
  {
    if (v6 + 1 > v4) {
      unint64_t v7 = v6 + 1;
    }
    else {
      unint64_t v7 = v4;
    }
    unsigned int v8 = a1[v7];
    if (v8 <= 1)
    {
      if (v8 == 1)
      {
        uint64_t v12 = &a1[v6];
        goto LABEL_45;
      }
      goto LABEL_57;
    }
    goto LABEL_8;
  }
  unsigned int v10 = ((1 << (8 * v6)) + 17) >> (8 * v6);
  if (v10 > 0xFFFC)
  {
    unint64_t v13 = v6 + 4;
    if (v6 + 4 <= v4) {
      unint64_t v13 = v4;
    }
    unsigned int v8 = a1[v13];
    if (v8 < 2)
    {
      if (v8 == 1)
      {
        uint64_t v12 = &a1[v6];
        goto LABEL_47;
      }
      goto LABEL_57;
    }
    goto LABEL_27;
  }
  if (v10 > 0xFC)
  {
    unint64_t v14 = v6 + 2;
    if (v6 + 2 <= v4) {
      unint64_t v14 = v4;
    }
    unsigned int v8 = a1[v14];
    if (v8 <= 1)
    {
      if (v8 == 1)
      {
        uint64_t v12 = &a1[v6];
        goto LABEL_51;
      }
      goto LABEL_57;
    }
LABEL_27:
    BOOL v15 = v10 > 0xFFFC;
    uint64_t v9 = 2;
    if (v15) {
      uint64_t v9 = 4;
    }
LABEL_29:
    unint64_t v16 = v9 + v6;
    if (v16 <= v4) {
      LODWORD(v16) = v4;
    }
    if (v16 <= 3) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a1;
        goto LABEL_39;
      case 2:
        int v18 = *(unsigned __int16 *)a1;
        goto LABEL_39;
      case 3:
        int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_39;
      case 4:
        int v18 = *(_DWORD *)a1;
LABEL_39:
        unsigned int v8 = (v18 | ((v8 - 2) << (8 * v16))) + 2;
        unsigned int v19 = v18 + 2;
        if (v16 >= 4) {
          unsigned int v8 = v19;
        }
        break;
      default:
        break;
    }
    if (v8 == 1)
    {
      uint64_t v12 = &a1[v6];
      if (v6 > 3) {
        goto LABEL_45;
      }
LABEL_43:
      unsigned int v20 = ((1 << (8 * v6)) + 17) >> (8 * v6);
      if (v20 <= 0xFFFC)
      {
        if (v20 <= 0xFC)
        {
LABEL_45:
          unsigned int v21 = *v12;
          unsigned int v22 = v21 - 3;
          if (v21 < 3) {
            goto LABEL_65;
          }
          goto LABEL_52;
        }
LABEL_51:
        unsigned int v21 = *(unsigned __int16 *)v12;
        unsigned int v22 = v21 - 3;
        if (v21 < 3) {
          goto LABEL_65;
        }
        goto LABEL_52;
      }
LABEL_47:
      unsigned int v21 = *(_DWORD *)v12;
      unsigned int v22 = v21 - 3;
      if (v21 < 3)
      {
LABEL_65:
        if (v21 == 2)
        {
          unint64_t v27 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(result - 8) + 8);
          return v27(a1, result);
        }
        else if (v21 <= 1)
        {
          return swift_bridgeObjectRelease();
        }
        return result;
      }
LABEL_52:
      if (v6 <= 3) {
        uint64_t v23 = v6;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a1;
          goto LABEL_63;
        case 2:
          int v24 = *(unsigned __int16 *)a1;
          goto LABEL_63;
        case 3:
          int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_63;
        case 4:
          int v24 = *(_DWORD *)a1;
LABEL_63:
          int v26 = (v24 | (v22 << (8 * v6))) + 3;
          unsigned int v21 = v24 + 3;
          if (v6 < 4) {
            unsigned int v21 = v26;
          }
          break;
        default:
          goto LABEL_65;
      }
      goto LABEL_65;
    }
    goto LABEL_57;
  }
  if (v6 + 1 > v4) {
    unint64_t v11 = v6 + 1;
  }
  else {
    unint64_t v11 = v4;
  }
  unsigned int v8 = a1[v11];
  if (v8 > 1)
  {
LABEL_8:
    uint64_t v9 = 1;
    goto LABEL_29;
  }
  if (v8 == 1)
  {
    uint64_t v12 = &a1[v6];
    goto LABEL_43;
  }
LABEL_57:
  unint64_t v25 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v28 + 8);

  return v25(a1, v3);
}

void *sub_24462B90C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
  if (*(void *)(*(void *)(v8 - 8) + 64) <= 0x10uLL) {
    uint64_t v9 = 16;
  }
  else {
    uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  if (v9 > 3)
  {
    if (v9 + 1 > v7) {
      unint64_t v10 = v9 + 1;
    }
    else {
      unint64_t v10 = v7;
    }
    unsigned int v11 = a2[v10];
    if (v11 <= 1)
    {
      if (v11 == 1)
      {
        uint64_t v12 = &a2[v9];
        goto LABEL_47;
      }
LABEL_60:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      if (v9 > 3) {
        goto LABEL_65;
      }
      unsigned int v28 = ((1 << (8 * v9)) + 17) >> (8 * v9);
      uint64_t v29 = 2;
      if (v28 > 0xFFFC) {
        uint64_t v29 = 4;
      }
      if (v28 <= 0xFC)
      {
LABEL_65:
        char v30 = 0;
        uint64_t v29 = 1;
      }
      else
      {
        char v30 = 0;
      }
      goto LABEL_110;
    }
LABEL_17:
    uint64_t v15 = 1;
    goto LABEL_28;
  }
  unsigned int v13 = ((1 << (8 * v9)) + 17) >> (8 * v9);
  if (v13 > 0xFFFC)
  {
    unint64_t v16 = v9 + 4;
    if (v9 + 4 <= v7) {
      unint64_t v16 = v7;
    }
    unsigned int v11 = a2[v16];
    if (v11 < 2)
    {
      if (v11 != 1) {
        goto LABEL_60;
      }
      uint64_t v12 = &a2[v9];
LABEL_49:
      unsigned int v24 = *(_DWORD *)v12;
      unsigned int v25 = v24 - 3;
      if (v24 < 3) {
        goto LABEL_73;
      }
      goto LABEL_54;
    }
  }
  else
  {
    if (v13 <= 0xFC)
    {
      if (v9 + 1 > v7) {
        unint64_t v14 = v9 + 1;
      }
      else {
        unint64_t v14 = v7;
      }
      unsigned int v11 = a2[v14];
      if (v11 <= 1)
      {
        if (v11 != 1) {
          goto LABEL_60;
        }
        uint64_t v12 = &a2[v9];
        goto LABEL_45;
      }
      goto LABEL_17;
    }
    unint64_t v17 = v9 + 2;
    if (v9 + 2 <= v7) {
      unint64_t v17 = v7;
    }
    unsigned int v11 = a2[v17];
    if (v11 <= 1)
    {
      if (v11 != 1) {
        goto LABEL_60;
      }
      uint64_t v12 = &a2[v9];
      goto LABEL_53;
    }
  }
  BOOL v18 = v13 > 0xFFFC;
  uint64_t v15 = 2;
  if (v18) {
    uint64_t v15 = 4;
  }
LABEL_28:
  unint64_t v19 = v15 + v9;
  if (v19 <= v7) {
    LODWORD(v19) = v7;
  }
  if (v19 <= 3) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 4;
  }
  switch(v20)
  {
    case 1:
      int v21 = *a2;
      goto LABEL_38;
    case 2:
      int v21 = *(unsigned __int16 *)a2;
      goto LABEL_38;
    case 3:
      int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_38;
    case 4:
      int v21 = *(_DWORD *)a2;
LABEL_38:
      unsigned int v11 = (v21 | ((v11 - 2) << (8 * v19))) + 2;
      unsigned int v22 = v21 + 2;
      if (v19 >= 4) {
        unsigned int v11 = v22;
      }
      break;
    default:
      break;
  }
  if (v11 != 1) {
    goto LABEL_60;
  }
  uint64_t v12 = &a2[v9];
  if (v9 > 3)
  {
LABEL_47:
    unsigned int v24 = *v12;
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_73;
    }
    goto LABEL_54;
  }
LABEL_45:
  unsigned int v23 = ((1 << (8 * v9)) + 17) >> (8 * v9);
  if (v23 > 0xFFFC) {
    goto LABEL_49;
  }
  if (v23 <= 0xFC) {
    goto LABEL_47;
  }
LABEL_53:
  unsigned int v24 = *(unsigned __int16 *)v12;
  unsigned int v25 = v24 - 3;
  if (v24 < 3) {
    goto LABEL_73;
  }
LABEL_54:
  if (v9 <= 3) {
    uint64_t v26 = v9;
  }
  else {
    uint64_t v26 = 4;
  }
  switch(v26)
  {
    case 1:
      int v27 = *a2;
      if (v9 < 4) {
        goto LABEL_71;
      }
      goto LABEL_72;
    case 2:
      int v27 = *(unsigned __int16 *)a2;
      if (v9 >= 4) {
        goto LABEL_72;
      }
      goto LABEL_71;
    case 3:
      int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v9 >= 4) {
        goto LABEL_72;
      }
      goto LABEL_71;
    case 4:
      int v27 = *(_DWORD *)a2;
      if (v9 < 4) {
LABEL_71:
      }
        v27 |= v25 << (8 * v9);
LABEL_72:
      unsigned int v24 = v27 + 3;
      break;
    default:
      break;
  }
LABEL_73:
  switch(v24)
  {
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      if (v9 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v9)) + 17) >> (8 * v9);
        if (v31 > 0xFFFC)
        {
          int v34 = 2;
          goto LABEL_103;
        }
        if (v31 > 0xFC)
        {
          LOWORD(v34) = 2;
          goto LABEL_106;
        }
      }
      char v32 = 2;
      goto LABEL_87;
    case 1u:
      uint64_t v33 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v33;
      swift_bridgeObjectRetain();
      if (v9 > 3)
      {
LABEL_86:
        char v32 = 1;
LABEL_87:
        *((unsigned char *)a1 + v9) = v32;
        if (v9 > 3) {
          goto LABEL_98;
        }
        goto LABEL_95;
      }
      int v34 = 1;
      unsigned int v31 = ((1 << (8 * v9)) + 17) >> (8 * v9);
      if (v31 <= 0xFFFC)
      {
        if (v31 <= 0xFC) {
          goto LABEL_86;
        }
LABEL_106:
        *(_WORD *)((char *)a1 + v9) = v34;
        goto LABEL_107;
      }
LABEL_103:
      *(_DWORD *)((char *)a1 + v9) = v34;
      goto LABEL_107;
    case 0u:
      *a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      if (v9 > 3) {
        goto LABEL_77;
      }
      unsigned int v31 = ((1 << (8 * v9)) + 17) >> (8 * v9);
      if (v31 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v9) = 0;
      }
      else
      {
        if (v31 <= 0xFC)
        {
LABEL_77:
          *((unsigned char *)a1 + v9) = 0;
          if (v9 > 3)
          {
LABEL_98:
            uint64_t v29 = 1;
LABEL_109:
            char v30 = 1;
            goto LABEL_110;
          }
          goto LABEL_95;
        }
        *(_WORD *)((char *)a1 + v9) = 0;
      }
LABEL_107:
      uint64_t v29 = 4;
      if (v31 <= 0xFFFC) {
        uint64_t v29 = 2;
      }
      goto LABEL_109;
  }
  if (v9 > 3) {
    goto LABEL_93;
  }
  unsigned int v35 = ((1 << (8 * v9)) + 17) >> (8 * v9);
  uint64_t v36 = 2;
  if (v35 > 0xFFFC) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFC) {
LABEL_93:
  }
    uint64_t v36 = 1;
  memcpy(a1, a2, v36 + v9);
  if (v9 > 3) {
    goto LABEL_98;
  }
LABEL_95:
  char v30 = 1;
  unsigned int v37 = ((1 << (8 * v9)) + 17) >> (8 * v9);
  uint64_t v29 = 2;
  if (v37 > 0xFFFC) {
    uint64_t v29 = 4;
  }
  if (v37 <= 0xFC) {
    goto LABEL_98;
  }
LABEL_110:
  unint64_t v38 = v29 + v9;
  if (v38 <= v7) {
    unint64_t v38 = v7;
  }
  *((unsigned char *)a1 + v38) = v30;
  return a1;
}

unsigned __int8 *sub_24462BE94(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) <= 0x10uLL) {
    uint64_t v10 = 16;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  char v11 = 8 * v10;
  if (v10 > 3)
  {
    if (v10 + 1 > v7) {
      unint64_t v12 = v10 + 1;
    }
    else {
      unint64_t v12 = v7;
    }
    unsigned int v13 = a1[v12];
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
        unint64_t v14 = &a1[v10];
        goto LABEL_51;
      }
LABEL_63:
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_74;
    }
    goto LABEL_18;
  }
  unsigned int v15 = ((1 << v11) + 17) >> v11;
  if (v15 > 0xFFFC)
  {
    unint64_t v18 = v10 + 4;
    if (v10 + 4 <= v7) {
      unint64_t v18 = v7;
    }
    unsigned int v13 = a1[v18];
    if (v13 < 2)
    {
      if (v13 != 1) {
        goto LABEL_63;
      }
      unint64_t v14 = &a1[v10];
      goto LABEL_53;
    }
LABEL_27:
    BOOL v20 = v15 > 0xFFFC;
    uint64_t v17 = 2;
    if (v20) {
      uint64_t v17 = 4;
    }
    goto LABEL_29;
  }
  if (v15 > 0xFC)
  {
    unint64_t v19 = v10 + 2;
    if (v10 + 2 <= v7) {
      unint64_t v19 = v7;
    }
    unsigned int v13 = a1[v19];
    if (v13 <= 1)
    {
      if (v13 != 1) {
        goto LABEL_63;
      }
      unint64_t v14 = &a1[v10];
      goto LABEL_57;
    }
    goto LABEL_27;
  }
  if (v10 + 1 > v7) {
    unint64_t v16 = v10 + 1;
  }
  else {
    unint64_t v16 = v7;
  }
  unsigned int v13 = a1[v16];
  if (v13 > 1)
  {
LABEL_18:
    uint64_t v17 = 1;
LABEL_29:
    unint64_t v21 = v17 + v10;
    if (v21 <= v7) {
      LODWORD(v21) = v7;
    }
    if (v21 <= 3) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *a1;
        if (v21 < 4) {
          goto LABEL_38;
        }
        goto LABEL_44;
      case 2:
        int v23 = *(unsigned __int16 *)a1;
        if (v21 < 4) {
          goto LABEL_38;
        }
        goto LABEL_44;
      case 3:
        int v23 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v21 < 4) {
          goto LABEL_38;
        }
        goto LABEL_44;
      case 4:
        int v23 = *(_DWORD *)a1;
        if (v21 < 4)
        {
LABEL_38:
          unsigned int v13 = (v23 | ((v13 - 2) << (8 * v21))) + 2;
LABEL_39:
          if (v13 != 1) {
            goto LABEL_63;
          }
        }
        else
        {
LABEL_44:
          if (v23 != -1) {
            goto LABEL_63;
          }
        }
        unint64_t v14 = &a1[v10];
        if (v10 <= 3) {
          goto LABEL_49;
        }
        break;
      default:
        goto LABEL_39;
    }
LABEL_51:
    unsigned int v25 = *v14;
    unsigned int v26 = v25 - 3;
    if (v25 < 3) {
      goto LABEL_70;
    }
    goto LABEL_58;
  }
  if (v13 != 1) {
    goto LABEL_63;
  }
  unint64_t v14 = &a1[v10];
LABEL_49:
  unsigned int v24 = ((1 << v11) + 17) >> v11;
  if (v24 > 0xFFFC)
  {
LABEL_53:
    unsigned int v25 = *(_DWORD *)v14;
    unsigned int v26 = v25 - 3;
    if (v25 < 3) {
      goto LABEL_70;
    }
    goto LABEL_58;
  }
  if (v24 <= 0xFC) {
    goto LABEL_51;
  }
LABEL_57:
  unsigned int v25 = *(unsigned __int16 *)v14;
  unsigned int v26 = v25 - 3;
  if (v25 < 3) {
    goto LABEL_70;
  }
LABEL_58:
  if (v10 <= 3) {
    uint64_t v27 = v10;
  }
  else {
    uint64_t v27 = 4;
  }
  switch(v27)
  {
    case 1:
      int v28 = *a1;
      goto LABEL_67;
    case 2:
      int v28 = *(unsigned __int16 *)a1;
      goto LABEL_67;
    case 3:
      int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      goto LABEL_67;
    case 4:
      int v28 = *(_DWORD *)a1;
LABEL_67:
      if (v10 < 4) {
        v28 |= v26 << v11;
      }
      unsigned int v25 = v28 + 3;
      break;
    default:
      break;
  }
LABEL_70:
  if (v25 == 2)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(a1, v8);
LABEL_74:
    if (v10 <= 3) {
      goto LABEL_82;
    }
LABEL_75:
    if (v10 + 1 > v7) {
      unint64_t v29 = v10 + 1;
    }
    else {
      unint64_t v29 = v7;
    }
    unsigned int v30 = a2[v29];
    if (v30 > 1) {
      goto LABEL_88;
    }
    if (v30 == 1)
    {
      unsigned int v31 = &a2[v10];
      goto LABEL_121;
    }
    goto LABEL_133;
  }
  if (v25 > 1) {
    goto LABEL_74;
  }
  swift_bridgeObjectRelease();
  if (v10 > 3) {
    goto LABEL_75;
  }
LABEL_82:
  unsigned int v32 = ((1 << v11) + 17) >> v11;
  if (v32 > 0xFFFC)
  {
    unint64_t v35 = v10 + 4;
    if (v10 + 4 <= v7) {
      unint64_t v35 = v7;
    }
    unsigned int v30 = a2[v35];
    if (v30 >= 2) {
      goto LABEL_97;
    }
    if (v30 == 1)
    {
      unsigned int v31 = &a2[v10];
      goto LABEL_123;
    }
    goto LABEL_133;
  }
  if (v32 > 0xFC)
  {
    unint64_t v36 = v10 + 2;
    if (v10 + 2 <= v7) {
      unint64_t v36 = v7;
    }
    unsigned int v30 = a2[v36];
    if (v30 > 1)
    {
LABEL_97:
      BOOL v20 = v32 > 0xFFFC;
      uint64_t v34 = 2;
      if (v20) {
        uint64_t v34 = 4;
      }
      goto LABEL_99;
    }
    if (v30 == 1)
    {
      unsigned int v31 = &a2[v10];
      goto LABEL_127;
    }
LABEL_133:
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    if (v10 > 3) {
      goto LABEL_138;
    }
    unsigned int v45 = ((1 << v11) + 17) >> v11;
    uint64_t v46 = 2;
    if (v45 > 0xFFFC) {
      uint64_t v46 = 4;
    }
    if (v45 <= 0xFC)
    {
LABEL_138:
      char v47 = 0;
      uint64_t v46 = 1;
    }
    else
    {
      char v47 = 0;
    }
    goto LABEL_182;
  }
  if (v10 + 1 > v7) {
    unint64_t v33 = v10 + 1;
  }
  else {
    unint64_t v33 = v7;
  }
  unsigned int v30 = a2[v33];
  if (v30 > 1)
  {
LABEL_88:
    uint64_t v34 = 1;
LABEL_99:
    unint64_t v37 = v34 + v10;
    if (v37 <= v7) {
      LODWORD(v37) = v7;
    }
    if (v37 <= 3) {
      uint64_t v38 = v37;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *a2;
        if (v37 < 4) {
          goto LABEL_108;
        }
        goto LABEL_114;
      case 2:
        int v39 = *(unsigned __int16 *)a2;
        if (v37 < 4) {
          goto LABEL_108;
        }
        goto LABEL_114;
      case 3:
        int v39 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v37 < 4) {
          goto LABEL_108;
        }
        goto LABEL_114;
      case 4:
        int v39 = *(_DWORD *)a2;
        if (v37 < 4)
        {
LABEL_108:
          unsigned int v30 = (v39 | ((v30 - 2) << (8 * v37))) + 2;
LABEL_109:
          if (v30 != 1) {
            goto LABEL_133;
          }
        }
        else
        {
LABEL_114:
          if (v39 != -1) {
            goto LABEL_133;
          }
        }
        unsigned int v31 = &a2[v10];
        if (v10 <= 3) {
          goto LABEL_119;
        }
        break;
      default:
        goto LABEL_109;
    }
LABEL_121:
    unsigned int v41 = *v31;
    unsigned int v42 = v41 - 3;
    if (v41 < 3) {
      goto LABEL_145;
    }
    goto LABEL_128;
  }
  if (v30 != 1) {
    goto LABEL_133;
  }
  unsigned int v31 = &a2[v10];
LABEL_119:
  unsigned int v40 = ((1 << v11) + 17) >> v11;
  if (v40 > 0xFFFC)
  {
LABEL_123:
    unsigned int v41 = *(_DWORD *)v31;
    unsigned int v42 = v41 - 3;
    if (v41 < 3) {
      goto LABEL_145;
    }
    goto LABEL_128;
  }
  if (v40 <= 0xFC) {
    goto LABEL_121;
  }
LABEL_127:
  unsigned int v41 = *(unsigned __int16 *)v31;
  unsigned int v42 = v41 - 3;
  if (v41 < 3) {
    goto LABEL_145;
  }
LABEL_128:
  if (v10 <= 3) {
    uint64_t v43 = v10;
  }
  else {
    uint64_t v43 = 4;
  }
  switch(v43)
  {
    case 1:
      int v44 = *a2;
      goto LABEL_142;
    case 2:
      int v44 = *(unsigned __int16 *)a2;
      goto LABEL_142;
    case 3:
      int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_142;
    case 4:
      int v44 = *(_DWORD *)a2;
LABEL_142:
      if (v10 < 4) {
        v44 |= v42 << v11;
      }
      unsigned int v41 = v44 + 3;
      break;
    default:
      break;
  }
LABEL_145:
  if (v41 == 2)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v8);
    if (v10 <= 3)
    {
      unsigned int v48 = ((1 << v11) + 17) >> v11;
      if (v48 > 0xFFFC)
      {
        int v50 = 2;
        goto LABEL_175;
      }
      if (v48 > 0xFC)
      {
        LOWORD(v50) = 2;
        goto LABEL_178;
      }
    }
    char v49 = 2;
    goto LABEL_159;
  }
  if (v41 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    if (v10 > 3)
    {
LABEL_158:
      char v49 = 1;
LABEL_159:
      a1[v10] = v49;
      if (v10 > 3) {
        goto LABEL_170;
      }
LABEL_167:
      char v47 = 1;
      unsigned int v53 = ((1 << v11) + 17) >> v11;
      uint64_t v46 = 2;
      if (v53 > 0xFFFC) {
        uint64_t v46 = 4;
      }
      if (v53 > 0xFC) {
        goto LABEL_182;
      }
      goto LABEL_170;
    }
    int v50 = 1;
    unsigned int v48 = ((1 << v11) + 17) >> v11;
    if (v48 <= 0xFFFC)
    {
      if (v48 <= 0xFC) {
        goto LABEL_158;
      }
LABEL_178:
      *(_WORD *)&a1[v10] = v50;
LABEL_179:
      uint64_t v46 = 4;
      if (v48 <= 0xFFFC) {
        uint64_t v46 = 2;
      }
      goto LABEL_181;
    }
LABEL_175:
    *(_DWORD *)&a1[v10] = v50;
    goto LABEL_179;
  }
  if (v41)
  {
    if (v10 > 3) {
      goto LABEL_165;
    }
    unsigned int v51 = ((1 << v11) + 17) >> v11;
    uint64_t v52 = 2;
    if (v51 > 0xFFFC) {
      uint64_t v52 = 4;
    }
    if (v51 <= 0xFC) {
LABEL_165:
    }
      uint64_t v52 = 1;
    memcpy(a1, a2, v52 + v10);
    if (v10 > 3) {
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  if (v10 > 3) {
    goto LABEL_149;
  }
  unsigned int v48 = ((1 << v11) + 17) >> v11;
  if (v48 > 0xFFFC)
  {
    *(_DWORD *)&a1[v10] = 0;
    goto LABEL_179;
  }
  if (v48 > 0xFC)
  {
    *(_WORD *)&a1[v10] = 0;
    goto LABEL_179;
  }
LABEL_149:
  a1[v10] = 0;
  if (v10 <= 3) {
    goto LABEL_167;
  }
LABEL_170:
  uint64_t v46 = 1;
LABEL_181:
  char v47 = 1;
LABEL_182:
  unint64_t v54 = v46 + v10;
  if (v54 <= v7) {
    unint64_t v54 = v7;
  }
  a1[v54] = v47;
  return a1;
}

_OWORD *sub_24462C6E8(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
  if (*(void *)(*(void *)(v8 - 8) + 64) <= 0x10uLL) {
    uint64_t v9 = 16;
  }
  else {
    uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  if (v9 > 3)
  {
    if (v9 + 1 > v7) {
      unint64_t v10 = v9 + 1;
    }
    else {
      unint64_t v10 = v7;
    }
    unsigned int v11 = a2[v10];
    if (v11 <= 1)
    {
      if (v11 == 1)
      {
        unint64_t v12 = &a2[v9];
        goto LABEL_47;
      }
LABEL_60:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      if (v9 > 3) {
        goto LABEL_65;
      }
      unsigned int v28 = ((1 << (8 * v9)) + 17) >> (8 * v9);
      uint64_t v29 = 2;
      if (v28 > 0xFFFC) {
        uint64_t v29 = 4;
      }
      if (v28 <= 0xFC)
      {
LABEL_65:
        char v30 = 0;
        uint64_t v29 = 1;
      }
      else
      {
        char v30 = 0;
      }
      goto LABEL_110;
    }
LABEL_17:
    uint64_t v15 = 1;
    goto LABEL_28;
  }
  unsigned int v13 = ((1 << (8 * v9)) + 17) >> (8 * v9);
  if (v13 > 0xFFFC)
  {
    unint64_t v16 = v9 + 4;
    if (v9 + 4 <= v7) {
      unint64_t v16 = v7;
    }
    unsigned int v11 = a2[v16];
    if (v11 < 2)
    {
      if (v11 != 1) {
        goto LABEL_60;
      }
      unint64_t v12 = &a2[v9];
LABEL_49:
      unsigned int v24 = *(_DWORD *)v12;
      unsigned int v25 = v24 - 3;
      if (v24 < 3) {
        goto LABEL_73;
      }
      goto LABEL_54;
    }
  }
  else
  {
    if (v13 <= 0xFC)
    {
      if (v9 + 1 > v7) {
        unint64_t v14 = v9 + 1;
      }
      else {
        unint64_t v14 = v7;
      }
      unsigned int v11 = a2[v14];
      if (v11 <= 1)
      {
        if (v11 != 1) {
          goto LABEL_60;
        }
        unint64_t v12 = &a2[v9];
        goto LABEL_45;
      }
      goto LABEL_17;
    }
    unint64_t v17 = v9 + 2;
    if (v9 + 2 <= v7) {
      unint64_t v17 = v7;
    }
    unsigned int v11 = a2[v17];
    if (v11 <= 1)
    {
      if (v11 != 1) {
        goto LABEL_60;
      }
      unint64_t v12 = &a2[v9];
      goto LABEL_53;
    }
  }
  BOOL v18 = v13 > 0xFFFC;
  uint64_t v15 = 2;
  if (v18) {
    uint64_t v15 = 4;
  }
LABEL_28:
  unint64_t v19 = v15 + v9;
  if (v19 <= v7) {
    LODWORD(v19) = v7;
  }
  if (v19 <= 3) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = 4;
  }
  switch(v20)
  {
    case 1:
      int v21 = *a2;
      goto LABEL_38;
    case 2:
      int v21 = *(unsigned __int16 *)a2;
      goto LABEL_38;
    case 3:
      int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_38;
    case 4:
      int v21 = *(_DWORD *)a2;
LABEL_38:
      unsigned int v11 = (v21 | ((v11 - 2) << (8 * v19))) + 2;
      unsigned int v22 = v21 + 2;
      if (v19 >= 4) {
        unsigned int v11 = v22;
      }
      break;
    default:
      break;
  }
  if (v11 != 1) {
    goto LABEL_60;
  }
  unint64_t v12 = &a2[v9];
  if (v9 > 3)
  {
LABEL_47:
    unsigned int v24 = *v12;
    unsigned int v25 = v24 - 3;
    if (v24 < 3) {
      goto LABEL_73;
    }
    goto LABEL_54;
  }
LABEL_45:
  unsigned int v23 = ((1 << (8 * v9)) + 17) >> (8 * v9);
  if (v23 > 0xFFFC) {
    goto LABEL_49;
  }
  if (v23 <= 0xFC) {
    goto LABEL_47;
  }
LABEL_53:
  unsigned int v24 = *(unsigned __int16 *)v12;
  unsigned int v25 = v24 - 3;
  if (v24 < 3) {
    goto LABEL_73;
  }
LABEL_54:
  if (v9 <= 3) {
    uint64_t v26 = v9;
  }
  else {
    uint64_t v26 = 4;
  }
  switch(v26)
  {
    case 1:
      int v27 = *a2;
      if (v9 < 4) {
        goto LABEL_71;
      }
      goto LABEL_72;
    case 2:
      int v27 = *(unsigned __int16 *)a2;
      if (v9 >= 4) {
        goto LABEL_72;
      }
      goto LABEL_71;
    case 3:
      int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v9 >= 4) {
        goto LABEL_72;
      }
      goto LABEL_71;
    case 4:
      int v27 = *(_DWORD *)a2;
      if (v9 < 4) {
LABEL_71:
      }
        v27 |= v25 << (8 * v9);
LABEL_72:
      unsigned int v24 = v27 + 3;
      break;
    default:
      break;
  }
LABEL_73:
  switch(v24)
  {
    case 2u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      if (v9 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v9)) + 17) >> (8 * v9);
        if (v31 > 0xFFFC)
        {
          int v33 = 2;
          goto LABEL_103;
        }
        if (v31 > 0xFC)
        {
          LOWORD(v33) = 2;
          goto LABEL_106;
        }
      }
      char v32 = 2;
      goto LABEL_87;
    case 1u:
      *a1 = *(_OWORD *)a2;
      if (v9 > 3)
      {
LABEL_86:
        char v32 = 1;
LABEL_87:
        *((unsigned char *)a1 + v9) = v32;
        if (v9 > 3) {
          goto LABEL_98;
        }
        goto LABEL_95;
      }
      int v33 = 1;
      unsigned int v31 = ((1 << (8 * v9)) + 17) >> (8 * v9);
      if (v31 <= 0xFFFC)
      {
        if (v31 <= 0xFC) {
          goto LABEL_86;
        }
LABEL_106:
        *(_WORD *)((char *)a1 + v9) = v33;
        goto LABEL_107;
      }
LABEL_103:
      *(_DWORD *)((char *)a1 + v9) = v33;
      goto LABEL_107;
    case 0u:
      *(void *)a1 = *(void *)a2;
      if (v9 > 3) {
        goto LABEL_77;
      }
      unsigned int v31 = ((1 << (8 * v9)) + 17) >> (8 * v9);
      if (v31 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v9) = 0;
      }
      else
      {
        if (v31 <= 0xFC)
        {
LABEL_77:
          *((unsigned char *)a1 + v9) = 0;
          if (v9 > 3)
          {
LABEL_98:
            uint64_t v29 = 1;
LABEL_109:
            char v30 = 1;
            goto LABEL_110;
          }
          goto LABEL_95;
        }
        *(_WORD *)((char *)a1 + v9) = 0;
      }
LABEL_107:
      uint64_t v29 = 4;
      if (v31 <= 0xFFFC) {
        uint64_t v29 = 2;
      }
      goto LABEL_109;
  }
  if (v9 > 3) {
    goto LABEL_93;
  }
  unsigned int v34 = ((1 << (8 * v9)) + 17) >> (8 * v9);
  uint64_t v35 = 2;
  if (v34 > 0xFFFC) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFC) {
LABEL_93:
  }
    uint64_t v35 = 1;
  memcpy(a1, a2, v35 + v9);
  if (v9 > 3) {
    goto LABEL_98;
  }
LABEL_95:
  char v30 = 1;
  unsigned int v36 = ((1 << (8 * v9)) + 17) >> (8 * v9);
  uint64_t v29 = 2;
  if (v36 > 0xFFFC) {
    uint64_t v29 = 4;
  }
  if (v36 <= 0xFC) {
    goto LABEL_98;
  }
LABEL_110:
  unint64_t v37 = v29 + v9;
  if (v37 <= v7) {
    unint64_t v37 = v7;
  }
  *((unsigned char *)a1 + v37) = v30;
  return a1;
}

unsigned __int8 *sub_24462CC68(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) <= 0x10uLL) {
    uint64_t v10 = 16;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  char v11 = 8 * v10;
  if (v10 > 3)
  {
    if (v10 + 1 > v7) {
      unint64_t v12 = v10 + 1;
    }
    else {
      unint64_t v12 = v7;
    }
    unsigned int v13 = a1[v12];
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
        unint64_t v14 = &a1[v10];
        goto LABEL_51;
      }
LABEL_63:
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_74;
    }
    goto LABEL_18;
  }
  unsigned int v15 = ((1 << v11) + 17) >> v11;
  if (v15 > 0xFFFC)
  {
    unint64_t v18 = v10 + 4;
    if (v10 + 4 <= v7) {
      unint64_t v18 = v7;
    }
    unsigned int v13 = a1[v18];
    if (v13 < 2)
    {
      if (v13 != 1) {
        goto LABEL_63;
      }
      unint64_t v14 = &a1[v10];
      goto LABEL_53;
    }
LABEL_27:
    BOOL v20 = v15 > 0xFFFC;
    uint64_t v17 = 2;
    if (v20) {
      uint64_t v17 = 4;
    }
    goto LABEL_29;
  }
  if (v15 > 0xFC)
  {
    unint64_t v19 = v10 + 2;
    if (v10 + 2 <= v7) {
      unint64_t v19 = v7;
    }
    unsigned int v13 = a1[v19];
    if (v13 <= 1)
    {
      if (v13 != 1) {
        goto LABEL_63;
      }
      unint64_t v14 = &a1[v10];
      goto LABEL_57;
    }
    goto LABEL_27;
  }
  if (v10 + 1 > v7) {
    unint64_t v16 = v10 + 1;
  }
  else {
    unint64_t v16 = v7;
  }
  unsigned int v13 = a1[v16];
  if (v13 > 1)
  {
LABEL_18:
    uint64_t v17 = 1;
LABEL_29:
    unint64_t v21 = v17 + v10;
    if (v21 <= v7) {
      LODWORD(v21) = v7;
    }
    if (v21 <= 3) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *a1;
        if (v21 < 4) {
          goto LABEL_38;
        }
        goto LABEL_44;
      case 2:
        int v23 = *(unsigned __int16 *)a1;
        if (v21 < 4) {
          goto LABEL_38;
        }
        goto LABEL_44;
      case 3:
        int v23 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v21 < 4) {
          goto LABEL_38;
        }
        goto LABEL_44;
      case 4:
        int v23 = *(_DWORD *)a1;
        if (v21 < 4)
        {
LABEL_38:
          unsigned int v13 = (v23 | ((v13 - 2) << (8 * v21))) + 2;
LABEL_39:
          if (v13 != 1) {
            goto LABEL_63;
          }
        }
        else
        {
LABEL_44:
          if (v23 != -1) {
            goto LABEL_63;
          }
        }
        unint64_t v14 = &a1[v10];
        if (v10 <= 3) {
          goto LABEL_49;
        }
        break;
      default:
        goto LABEL_39;
    }
LABEL_51:
    unsigned int v25 = *v14;
    unsigned int v26 = v25 - 3;
    if (v25 < 3) {
      goto LABEL_70;
    }
    goto LABEL_58;
  }
  if (v13 != 1) {
    goto LABEL_63;
  }
  unint64_t v14 = &a1[v10];
LABEL_49:
  unsigned int v24 = ((1 << v11) + 17) >> v11;
  if (v24 > 0xFFFC)
  {
LABEL_53:
    unsigned int v25 = *(_DWORD *)v14;
    unsigned int v26 = v25 - 3;
    if (v25 < 3) {
      goto LABEL_70;
    }
    goto LABEL_58;
  }
  if (v24 <= 0xFC) {
    goto LABEL_51;
  }
LABEL_57:
  unsigned int v25 = *(unsigned __int16 *)v14;
  unsigned int v26 = v25 - 3;
  if (v25 < 3) {
    goto LABEL_70;
  }
LABEL_58:
  if (v10 <= 3) {
    uint64_t v27 = v10;
  }
  else {
    uint64_t v27 = 4;
  }
  switch(v27)
  {
    case 1:
      int v28 = *a1;
      goto LABEL_67;
    case 2:
      int v28 = *(unsigned __int16 *)a1;
      goto LABEL_67;
    case 3:
      int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      goto LABEL_67;
    case 4:
      int v28 = *(_DWORD *)a1;
LABEL_67:
      if (v10 < 4) {
        v28 |= v26 << v11;
      }
      unsigned int v25 = v28 + 3;
      break;
    default:
      break;
  }
LABEL_70:
  if (v25 == 2)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(a1, v8);
LABEL_74:
    if (v10 <= 3) {
      goto LABEL_82;
    }
LABEL_75:
    if (v10 + 1 > v7) {
      unint64_t v29 = v10 + 1;
    }
    else {
      unint64_t v29 = v7;
    }
    unsigned int v30 = a2[v29];
    if (v30 > 1) {
      goto LABEL_88;
    }
    if (v30 == 1)
    {
      unsigned int v31 = &a2[v10];
      goto LABEL_121;
    }
    goto LABEL_133;
  }
  if (v25 > 1) {
    goto LABEL_74;
  }
  swift_bridgeObjectRelease();
  if (v10 > 3) {
    goto LABEL_75;
  }
LABEL_82:
  unsigned int v32 = ((1 << v11) + 17) >> v11;
  if (v32 > 0xFFFC)
  {
    unint64_t v35 = v10 + 4;
    if (v10 + 4 <= v7) {
      unint64_t v35 = v7;
    }
    unsigned int v30 = a2[v35];
    if (v30 >= 2) {
      goto LABEL_97;
    }
    if (v30 == 1)
    {
      unsigned int v31 = &a2[v10];
      goto LABEL_123;
    }
    goto LABEL_133;
  }
  if (v32 > 0xFC)
  {
    unint64_t v36 = v10 + 2;
    if (v10 + 2 <= v7) {
      unint64_t v36 = v7;
    }
    unsigned int v30 = a2[v36];
    if (v30 > 1)
    {
LABEL_97:
      BOOL v20 = v32 > 0xFFFC;
      uint64_t v34 = 2;
      if (v20) {
        uint64_t v34 = 4;
      }
      goto LABEL_99;
    }
    if (v30 == 1)
    {
      unsigned int v31 = &a2[v10];
      goto LABEL_127;
    }
LABEL_133:
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    if (v10 > 3) {
      goto LABEL_138;
    }
    unsigned int v45 = ((1 << v11) + 17) >> v11;
    uint64_t v46 = 2;
    if (v45 > 0xFFFC) {
      uint64_t v46 = 4;
    }
    if (v45 <= 0xFC)
    {
LABEL_138:
      char v47 = 0;
      uint64_t v46 = 1;
    }
    else
    {
      char v47 = 0;
    }
    goto LABEL_182;
  }
  if (v10 + 1 > v7) {
    unint64_t v33 = v10 + 1;
  }
  else {
    unint64_t v33 = v7;
  }
  unsigned int v30 = a2[v33];
  if (v30 > 1)
  {
LABEL_88:
    uint64_t v34 = 1;
LABEL_99:
    unint64_t v37 = v34 + v10;
    if (v37 <= v7) {
      LODWORD(v37) = v7;
    }
    if (v37 <= 3) {
      uint64_t v38 = v37;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *a2;
        if (v37 < 4) {
          goto LABEL_108;
        }
        goto LABEL_114;
      case 2:
        int v39 = *(unsigned __int16 *)a2;
        if (v37 < 4) {
          goto LABEL_108;
        }
        goto LABEL_114;
      case 3:
        int v39 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v37 < 4) {
          goto LABEL_108;
        }
        goto LABEL_114;
      case 4:
        int v39 = *(_DWORD *)a2;
        if (v37 < 4)
        {
LABEL_108:
          unsigned int v30 = (v39 | ((v30 - 2) << (8 * v37))) + 2;
LABEL_109:
          if (v30 != 1) {
            goto LABEL_133;
          }
        }
        else
        {
LABEL_114:
          if (v39 != -1) {
            goto LABEL_133;
          }
        }
        unsigned int v31 = &a2[v10];
        if (v10 <= 3) {
          goto LABEL_119;
        }
        break;
      default:
        goto LABEL_109;
    }
LABEL_121:
    unsigned int v41 = *v31;
    unsigned int v42 = v41 - 3;
    if (v41 < 3) {
      goto LABEL_145;
    }
    goto LABEL_128;
  }
  if (v30 != 1) {
    goto LABEL_133;
  }
  unsigned int v31 = &a2[v10];
LABEL_119:
  unsigned int v40 = ((1 << v11) + 17) >> v11;
  if (v40 > 0xFFFC)
  {
LABEL_123:
    unsigned int v41 = *(_DWORD *)v31;
    unsigned int v42 = v41 - 3;
    if (v41 < 3) {
      goto LABEL_145;
    }
    goto LABEL_128;
  }
  if (v40 <= 0xFC) {
    goto LABEL_121;
  }
LABEL_127:
  unsigned int v41 = *(unsigned __int16 *)v31;
  unsigned int v42 = v41 - 3;
  if (v41 < 3) {
    goto LABEL_145;
  }
LABEL_128:
  if (v10 <= 3) {
    uint64_t v43 = v10;
  }
  else {
    uint64_t v43 = 4;
  }
  switch(v43)
  {
    case 1:
      int v44 = *a2;
      goto LABEL_142;
    case 2:
      int v44 = *(unsigned __int16 *)a2;
      goto LABEL_142;
    case 3:
      int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_142;
    case 4:
      int v44 = *(_DWORD *)a2;
LABEL_142:
      if (v10 < 4) {
        v44 |= v42 << v11;
      }
      unsigned int v41 = v44 + 3;
      break;
    default:
      break;
  }
LABEL_145:
  if (v41 == 2)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(a1, a2, v8);
    if (v10 <= 3)
    {
      unsigned int v48 = ((1 << v11) + 17) >> v11;
      if (v48 > 0xFFFC)
      {
        int v50 = 2;
        goto LABEL_175;
      }
      if (v48 > 0xFC)
      {
        LOWORD(v50) = 2;
        goto LABEL_178;
      }
    }
    char v49 = 2;
    goto LABEL_159;
  }
  if (v41 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (v10 > 3)
    {
LABEL_158:
      char v49 = 1;
LABEL_159:
      a1[v10] = v49;
      if (v10 > 3) {
        goto LABEL_170;
      }
LABEL_167:
      char v47 = 1;
      unsigned int v53 = ((1 << v11) + 17) >> v11;
      uint64_t v46 = 2;
      if (v53 > 0xFFFC) {
        uint64_t v46 = 4;
      }
      if (v53 > 0xFC) {
        goto LABEL_182;
      }
      goto LABEL_170;
    }
    int v50 = 1;
    unsigned int v48 = ((1 << v11) + 17) >> v11;
    if (v48 <= 0xFFFC)
    {
      if (v48 <= 0xFC) {
        goto LABEL_158;
      }
LABEL_178:
      *(_WORD *)&a1[v10] = v50;
LABEL_179:
      uint64_t v46 = 4;
      if (v48 <= 0xFFFC) {
        uint64_t v46 = 2;
      }
      goto LABEL_181;
    }
LABEL_175:
    *(_DWORD *)&a1[v10] = v50;
    goto LABEL_179;
  }
  if (v41)
  {
    if (v10 > 3) {
      goto LABEL_165;
    }
    unsigned int v51 = ((1 << v11) + 17) >> v11;
    uint64_t v52 = 2;
    if (v51 > 0xFFFC) {
      uint64_t v52 = 4;
    }
    if (v51 <= 0xFC) {
LABEL_165:
    }
      uint64_t v52 = 1;
    memcpy(a1, a2, v52 + v10);
    if (v10 > 3) {
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  *(void *)a1 = *(void *)a2;
  if (v10 > 3) {
    goto LABEL_149;
  }
  unsigned int v48 = ((1 << v11) + 17) >> v11;
  if (v48 > 0xFFFC)
  {
    *(_DWORD *)&a1[v10] = 0;
    goto LABEL_179;
  }
  if (v48 > 0xFC)
  {
    *(_WORD *)&a1[v10] = 0;
    goto LABEL_179;
  }
LABEL_149:
  a1[v10] = 0;
  if (v10 <= 3) {
    goto LABEL_167;
  }
LABEL_170:
  uint64_t v46 = 1;
LABEL_181:
  char v47 = 1;
LABEL_182:
  unint64_t v54 = v46 + v10;
  if (v54 <= v7) {
    unint64_t v54 = v7;
  }
  a1[v54] = v47;
  return a1;
}

uint64_t sub_24462D4AC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v6 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310) - 8) + 64);
  if (v6 <= 0x10) {
    unint64_t v6 = 16;
  }
  if (v6 > 3) {
    goto LABEL_7;
  }
  unsigned int v7 = ((1 << (8 * v6)) + 17) >> (8 * v6);
  uint64_t v8 = 2;
  if (v7 > 0xFFFC) {
    uint64_t v8 = 4;
  }
  if (v7 <= 0xFC) {
LABEL_7:
  }
    uint64_t v8 = 1;
  unint64_t v9 = v8 + v6;
  if (v9 <= v5) {
    unint64_t v9 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_29;
  }
  unint64_t v10 = v9 + 1;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((a2 + ~(-1 << v11) - 254) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v14 < 2)
    {
LABEL_29:
      if (v6 > 3) {
        goto LABEL_33;
      }
      unsigned int v16 = ((1 << (8 * v6)) + 17) >> (8 * v6);
      uint64_t v17 = 2;
      if (v16 > 0xFFFC) {
        uint64_t v17 = 4;
      }
      if (v16 <= 0xFC) {
LABEL_33:
      }
        uint64_t v17 = 1;
      unint64_t v18 = v17 + v6;
      if (v18 <= v5) {
        unint64_t v18 = v5;
      }
      unsigned int v19 = *((unsigned __int8 *)a1 + v18);
      if (v19 >= 2) {
        return (v19 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_29;
  }
LABEL_21:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + 255;
}

void sub_24462D6B8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v8 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310) - 8) + 64);
  if (v8 <= 0x10) {
    unint64_t v8 = 16;
  }
  if (v8 > 3) {
    goto LABEL_7;
  }
  unsigned int v9 = ((1 << (8 * v8)) + 17) >> (8 * v8);
  uint64_t v10 = 2;
  if (v9 > 0xFFFC) {
    uint64_t v10 = 4;
  }
  if (v9 <= 0xFC) {
LABEL_7:
  }
    uint64_t v10 = 1;
  unint64_t v11 = v10 + v8;
  if (v11 <= v7) {
    unint64_t v11 = v7;
  }
  size_t v12 = v11 + 1;
  if (a3 < 0xFF)
  {
    int v13 = 0;
  }
  else if (v12 <= 3)
  {
    unsigned int v16 = ((a3 + ~(-1 << (8 * v12)) - 254) >> (8 * v12)) + 1;
    if (HIWORD(v16))
    {
      int v13 = 4;
    }
    else if (v16 >= 0x100)
    {
      int v13 = 2;
    }
    else
    {
      int v13 = v16 > 1;
    }
  }
  else
  {
    int v13 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v14 = a2 - 255;
    if (v12 < 4)
    {
      int v15 = (v14 >> (8 * v12)) + 1;
      if (v12)
      {
        int v17 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v12] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v12] = v15;
        break;
      case 3:
LABEL_48:
        __break(1u);
        JUMPOUT(0x24462D938);
      case 4:
        *(_DWORD *)&a1[v12] = v15;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v13)
    {
      case 1:
        a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      case 2:
        *(_WORD *)&a1[v12] = 0;
        goto LABEL_29;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_30;
      default:
LABEL_29:
        if (a2)
        {
LABEL_30:
          if (v8 > 3) {
            goto LABEL_34;
          }
          unsigned int v18 = ((1 << (8 * v8)) + 17) >> (8 * v8);
          uint64_t v19 = 2;
          if (v18 > 0xFFFC) {
            uint64_t v19 = 4;
          }
          if (v18 <= 0xFC) {
LABEL_34:
          }
            uint64_t v19 = 1;
          unint64_t v20 = v19 + v8;
          if (v20 <= v7) {
            unint64_t v20 = v7;
          }
          a1[v20] = -(char)a2;
        }
        break;
    }
  }
}

uint64_t sub_24462D960(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unint64_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310) - 8) + 64);
  if (v4 <= 0x10) {
    unint64_t v4 = 16;
  }
  if (v4 > 3) {
    goto LABEL_4;
  }
  unsigned int v8 = ((1 << (8 * v4)) + 17) >> (8 * v4);
  if (v8 > 0xFFFC)
  {
    unint64_t v10 = v4 + 4;
    if (v4 + 4 <= v3) {
      unint64_t v10 = v3;
    }
    uint64_t result = a1[v10];
    if (result >= 2) {
      goto LABEL_18;
    }
  }
  else
  {
    if (v8 <= 0xFC)
    {
LABEL_4:
      if (v4 + 1 > v3) {
        unint64_t v5 = v4 + 1;
      }
      else {
        unint64_t v5 = v3;
      }
      uint64_t result = a1[v5];
      if (result <= 1) {
        return result;
      }
      uint64_t v7 = 1;
      goto LABEL_20;
    }
    unint64_t v9 = v4 + 2;
    if (v4 + 2 <= v3) {
      unint64_t v9 = v3;
    }
    uint64_t result = a1[v9];
    if (result > 1)
    {
LABEL_18:
      BOOL v11 = v8 > 0xFFFC;
      uint64_t v7 = 2;
      if (v11) {
        uint64_t v7 = 4;
      }
LABEL_20:
      unint64_t v12 = v7 + v4;
      if (v12 <= v3) {
        LODWORD(v12) = v3;
      }
      if (v12 <= 3) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_30;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_30;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_30;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_30:
          unsigned int v15 = (v14 | ((result - 2) << (8 * v12))) + 2;
          unsigned int v16 = v14 + 2;
          if (v12 >= 4) {
            uint64_t result = v16;
          }
          else {
            uint64_t result = v15;
          }
          break;
        default:
          return result;
      }
    }
  }
  return result;
}

void sub_24462DAEC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v6 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310) - 8) + 64);
  if (v6 <= 0x10) {
    unint64_t v6 = 16;
  }
  if (a2 <= 1)
  {
    if (v6 > 3) {
      goto LABEL_8;
    }
    unsigned int v7 = ((1 << (8 * v6)) + 17) >> (8 * v6);
    uint64_t v8 = 2;
    if (v7 > 0xFFFC) {
      uint64_t v8 = 4;
    }
    if (v7 <= 0xFC) {
LABEL_8:
    }
      uint64_t v8 = 1;
    unint64_t v9 = v8 + v6;
    if (v9 <= v5) {
      unint64_t v9 = v5;
    }
    a1[v9] = a2;
    return;
  }
  char v10 = 8 * v6;
  if (v6 > 3) {
    goto LABEL_16;
  }
  unsigned int v11 = ((1 << v10) + 17) >> v10;
  uint64_t v12 = 2;
  if (v11 > 0xFFFC) {
    uint64_t v12 = 4;
  }
  if (v11 <= 0xFC) {
LABEL_16:
  }
    uint64_t v12 = 1;
  unint64_t v13 = v12 + v6;
  if (v13 <= v5) {
    LODWORD(v13) = v5;
  }
  BOOL v14 = v13 > 3;
  char v15 = 8 * v13;
  int v16 = (a2 - 2) & ~(-1 << v15);
  unsigned int v17 = ((a2 - 2) >> v15) + 2;
  if (v14)
  {
    LOBYTE(v17) = 2;
    int v18 = a2 - 2;
  }
  else
  {
    int v18 = v16;
  }
  if (v6 < 4)
  {
    unsigned int v20 = ((1 << v10) + 17) >> v10;
    uint64_t v21 = 4;
    if (v20 >= 0xFFFD) {
      uint64_t v22 = 4;
    }
    else {
      uint64_t v22 = 2;
    }
    if (v20 < 0xFD) {
      uint64_t v22 = 1;
    }
    unint64_t v23 = v22 + v6;
    if (v23 <= v5) {
      unint64_t v23 = v5;
    }
    a1[v23] = v17;
    if (v20 <= 0xFFFC) {
      uint64_t v21 = 2;
    }
    if (v20 > 0xFC) {
      goto LABEL_38;
    }
  }
  else
  {
    if (v6 + 1 > v5) {
      unint64_t v19 = v6 + 1;
    }
    else {
      unint64_t v19 = v5;
    }
    a1[v19] = v17;
  }
  uint64_t v21 = 1;
LABEL_38:
  size_t v24 = v21 + v6;
  if (v24 <= v5) {
    size_t v25 = v5;
  }
  else {
    size_t v25 = v24;
  }
  if (v25 >= 4) {
    int v26 = 4;
  }
  else {
    int v26 = v25;
  }
  bzero(a1, v25);
  switch(v26)
  {
    case 2:
      *(_WORD *)a1 = v18;
      break;
    case 3:
      *(_WORD *)a1 = v18;
      a1[2] = BYTE2(v18);
      break;
    case 4:
      *(_DWORD *)a1 = v18;
      break;
    default:
      *a1 = v18;
      break;
  }
}

unsigned char *sub_24462DD10(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24462DDDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24462DE08(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24462DEA4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24462DECC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DEE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DF04()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DF20()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DF3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DF58()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DF74()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DF90()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DFAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24462DFC8()
{
  return 2;
}

uint64_t InstallConfirmationRequest.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24462DFDC(v1, a1);
}

uint64_t sub_24462DFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InstallSheetContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t InstallConfirmationRequest.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24462E048(a1, a2);
}

uint64_t sub_24462E048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InstallSheetContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t InstallConfirmationRequest.run()()
{
  *(void *)(v1 + 32) = v0;
  type metadata accessor for LaunchAngelXPCRequest(0);
  *(void *)(v1 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24462E13C, 0, 0);
}

uint64_t sub_24462E13C()
{
  sub_24462DFDC(v0[4], v0[5]);
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24462E200;
  uint64_t v2 = v0[5];
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v2);
}

uint64_t sub_24462E200()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24462E3B4;
  }
  else {
    uint64_t v2 = sub_24462E314;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24462E314()
{
  sub_24462F1B8(*(void *)(v0 + 40), type metadata accessor for LaunchAngelXPCRequest);
  if (*(unsigned char *)(v0 + 24))
  {
    sub_244626698(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
    uint64_t v1 = 0;
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 16) & 1;
  }
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_24462E3B4()
{
  sub_24462F1B8(*(void *)(v0 + 40), type metadata accessor for LaunchAngelXPCRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

void *initializeBufferWithCopyOfBuffer for InstallConfirmationRequest(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for InstallSheetContext(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unsigned int v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = *(int *)(v4 + 28);
    unsigned int v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for InstallSheetContext.Source(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *unsigned int v11 = *v12;
        uint64_t v14 = *((void *)v12 + 2);
        *((void *)v11 + 1) = *((void *)v12 + 1);
        *((void *)v11 + 2) = v14;
        char v15 = v12 + 24;
        unint64_t v16 = *((void *)v12 + 4);
        swift_bridgeObjectRetain();
        if (v16 >> 60 == 15)
        {
          *(_OWORD *)(v11 + 24) = *v15;
        }
        else
        {
          uint64_t v28 = *(void *)v15;
          sub_24460BBA4(v28, v16);
          *((void *)v11 + 3) = v28;
          *((void *)v11 + 4) = v16;
        }
        goto LABEL_12;
      case 1u:
      case 2u:
        uint64_t v18 = *((void *)v12 + 1);
        *(void *)unsigned int v11 = *(void *)v12;
        *((void *)v11 + 1) = v18;
        uint64_t v19 = *((void *)v12 + 2);
        uint64_t v20 = *((void *)v12 + 3);
        *((void *)v11 + 2) = v19;
        *((void *)v11 + 3) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 3u:
        uint64_t v21 = *((void *)v12 + 1);
        *(void *)unsigned int v11 = *(void *)v12;
        *((void *)v11 + 1) = v21;
        uint64_t v22 = *((void *)v12 + 3);
        *((void *)v11 + 2) = *((void *)v12 + 2);
        *((void *)v11 + 3) = v22;
        uint64_t v23 = *((void *)v12 + 5);
        *((void *)v11 + 4) = *((void *)v12 + 4);
        *((void *)v11 + 5) = v23;
        uint64_t v24 = *((void *)v12 + 7);
        *((void *)v11 + 6) = *((void *)v12 + 6);
        *((void *)v11 + 7) = v24;
        uint64_t v25 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        __dst = &v11[v25];
        unsigned int v41 = &v12[v25];
        uint64_t v26 = sub_24469C888();
        uint64_t v39 = *(void *)(v26 - 8);
        unsigned int v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v40(v41, 1, v26))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(__dst, v41, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v41, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v26);
        }
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        break;
    }
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    uint64_t v29 = v6[9];
    unsigned int v30 = (char *)a1 + v29;
    unsigned int v31 = (char *)a2 + v29;
    unint64_t v32 = *((void *)v31 + 1);
    if (v32 >> 60 == 15)
    {
      *(_OWORD *)unsigned int v30 = *(_OWORD *)v31;
    }
    else
    {
      uint64_t v33 = *(void *)v31;
      sub_24460BBA4(*(void *)v31, *((void *)v31 + 1));
      *(void *)unsigned int v30 = v33;
      *((void *)v30 + 1) = v32;
    }
    uint64_t v34 = v6[10];
    unint64_t v35 = (void *)((char *)a1 + v34);
    unint64_t v36 = (void *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *unint64_t v35 = *v36;
    v35[1] = v37;
    *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for InstallConfirmationRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for InstallSheetContext(0);
  uint64_t v3 = a1 + *(int *)(v2 + 28);
  type metadata accessor for InstallSheetContext.Source(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      unint64_t v4 = *(void *)(v3 + 32);
      if (v4 >> 60 != 15) {
        sub_24460B97C(*(void *)(v3 + 24), v4);
      }
      break;
    case 1u:
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v3 + *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      uint64_t v6 = sub_24469C888();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      break;
    default:
      break;
  }
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(v2 + 36));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_24460B97C(*v8, v9);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InstallConfirmationRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = (int *)type metadata accessor for InstallSheetContext(0);
  uint64_t v8 = v7[7];
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for InstallSheetContext.Source(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *unint64_t v9 = *v10;
      uint64_t v12 = *((void *)v10 + 2);
      *((void *)v9 + 1) = *((void *)v10 + 1);
      *((void *)v9 + 2) = v12;
      uint64_t v13 = v10 + 24;
      unint64_t v14 = *((void *)v10 + 4);
      swift_bridgeObjectRetain();
      if (v14 >> 60 == 15)
      {
        *(_OWORD *)(v9 + 24) = *v13;
      }
      else
      {
        uint64_t v25 = *(void *)v13;
        sub_24460BBA4(v25, v14);
        *((void *)v9 + 3) = v25;
        *((void *)v9 + 4) = v14;
      }
      goto LABEL_10;
    case 1u:
    case 2u:
      uint64_t v15 = *((void *)v10 + 1);
      *(void *)unint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v15;
      uint64_t v16 = *((void *)v10 + 2);
      uint64_t v17 = *((void *)v10 + 3);
      *((void *)v9 + 2) = v16;
      *((void *)v9 + 3) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 3u:
      uint64_t v18 = *((void *)v10 + 1);
      *(void *)unint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v18;
      uint64_t v19 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v19;
      uint64_t v20 = *((void *)v10 + 5);
      *((void *)v9 + 4) = *((void *)v10 + 4);
      *((void *)v9 + 5) = v20;
      uint64_t v21 = *((void *)v10 + 7);
      *((void *)v9 + 6) = *((void *)v10 + 6);
      *((void *)v9 + 7) = v21;
      uint64_t v22 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      __dst = &v9[v22];
      uint64_t v38 = &v10[v22];
      uint64_t v23 = sub_24469C888();
      uint64_t v36 = *(void *)(v23 - 8);
      uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v37(v38, 1, v23))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
        memcpy(__dst, v38, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v38, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v23);
      }
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  uint64_t v26 = v7[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  unint64_t v29 = *((void *)v28 + 1);
  if (v29 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  else
  {
    uint64_t v30 = *(void *)v28;
    sub_24460BBA4(*(void *)v28, *((void *)v28 + 1));
    *(void *)uint64_t v27 = v30;
    *((void *)v27 + 1) = v29;
  }
  uint64_t v31 = v7[10];
  unint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = v33[1];
  *unint64_t v32 = *v33;
  v32[1] = v34;
  *((unsigned char *)a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InstallConfirmationRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for InstallSheetContext(0);
  uint64_t v5 = (int *)v4;
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(v4 + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_24462F1B8((uint64_t)a1 + v6, type metadata accessor for InstallSheetContext.Source);
    uint64_t v9 = type metadata accessor for InstallSheetContext.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v7 = *v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        uint64_t v10 = v8 + 24;
        unint64_t v11 = *((void *)v8 + 4);
        swift_bridgeObjectRetain();
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)(v7 + 24) = *v10;
        }
        else
        {
          uint64_t v15 = *(void *)v10;
          sub_24460BBA4(v15, v11);
          *((void *)v7 + 3) = v15;
          *((void *)v7 + 4) = v11;
        }
        goto LABEL_11;
      case 1u:
      case 2u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        uint64_t v12 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        __dst = &v7[v12];
        uint64_t v31 = &v8[v12];
        uint64_t v13 = sub_24469C888();
        uint64_t v28 = *(void *)(v13 - 8);
        uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30(v31, 1, v13))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(__dst, v31, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v31, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v13);
        }
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
  uint64_t v16 = v5[9];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  unint64_t v19 = *(void *)((char *)a2 + v16 + 8);
  if (*(void *)((char *)a1 + v16 + 8) >> 60 != 15)
  {
    if (v19 >> 60 != 15)
    {
      uint64_t v21 = *v18;
      sub_24460BBA4(v21, v19);
      uint64_t v22 = *v17;
      unint64_t v23 = v17[1];
      uint64_t *v17 = v21;
      v17[1] = v19;
      sub_24460B97C(v22, v23);
      goto LABEL_19;
    }
    sub_24462F218((uint64_t)v17);
    goto LABEL_17;
  }
  if (v19 >> 60 == 15)
  {
LABEL_17:
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    goto LABEL_19;
  }
  uint64_t v20 = *v18;
  sub_24460BBA4(v20, v19);
  uint64_t *v17 = v20;
  v17[1] = v19;
LABEL_19:
  uint64_t v24 = v5[10];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v5[11]) = *((unsigned char *)a2 + v5[11]);
  return a1;
}

uint64_t sub_24462F1B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24462F218(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for InstallConfirmationRequest(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = (int *)type metadata accessor for InstallSheetContext(0);
  uint64_t v6 = v5[7];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for InstallSheetContext.Source(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    long long v10 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v10;
    long long v11 = v8[3];
    v7[2] = v8[2];
    v7[3] = v11;
    uint64_t v12 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = sub_24469C888();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
  *(_OWORD *)((char *)a1 + v5[9]) = *(_OWORD *)((char *)a2 + v5[9]);
  *(_OWORD *)((char *)a1 + v5[10]) = *(_OWORD *)((char *)a2 + v5[10]);
  *((unsigned char *)a1 + v5[11]) = *((unsigned char *)a2 + v5[11]);
  return a1;
}

void *assignWithTake for InstallConfirmationRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for InstallSheetContext(0);
  uint64_t v8 = (int *)v7;
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(v7 + 28);
    long long v10 = (_OWORD *)((char *)a1 + v9);
    long long v11 = (_OWORD *)((char *)a2 + v9);
    sub_24462F1B8((uint64_t)a1 + v9, type metadata accessor for InstallSheetContext.Source);
    uint64_t v12 = type metadata accessor for InstallSheetContext.Source(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      long long v13 = v11[1];
      *long long v10 = *v11;
      v10[1] = v13;
      long long v14 = v11[3];
      void v10[2] = v11[2];
      v10[3] = v14;
      uint64_t v15 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      uint64_t v16 = (char *)v10 + v15;
      uint64_t v17 = (char *)v11 + v15;
      uint64_t v18 = sub_24469C888();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
  uint64_t v21 = v8[9];
  uint64_t v22 = (void *)((char *)a1 + v21);
  unint64_t v23 = (void *)((char *)a2 + v21);
  unint64_t v24 = *(void *)((char *)a1 + v21 + 8);
  if (v24 >> 60 != 15)
  {
    unint64_t v25 = v23[1];
    if (v25 >> 60 != 15)
    {
      uint64_t v26 = *v22;
      *uint64_t v22 = *v23;
      v22[1] = v25;
      sub_24460B97C(v26, v24);
      goto LABEL_13;
    }
    sub_24462F218((uint64_t)v22);
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
LABEL_13:
  uint64_t v27 = v8[10];
  uint64_t v28 = (void *)((char *)a1 + v27);
  unint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v8[11]) = *((unsigned char *)a2 + v8[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallConfirmationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24462F6E0);
}

uint64_t sub_24462F6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InstallSheetContext(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for InstallConfirmationRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24462F760);
}

uint64_t sub_24462F760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InstallSheetContext(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for InstallConfirmationRequest()
{
  uint64_t result = qword_268E9DEA0;
  if (!qword_268E9DEA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24462F81C()
{
  uint64_t result = type metadata accessor for InstallSheetContext(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ManifestValidationRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24469C888();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ManifestValidationRequest.primaryProductVariant.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManifestValidationRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ManifestValidationRequest()
{
  uint64_t result = qword_268E9DED0;
  if (!qword_268E9DED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ManifestValidationRequest.compatibleProductVariants.getter()
{
  type metadata accessor for ManifestValidationRequest();

  return swift_bridgeObjectRetain();
}

uint64_t ManifestValidationRequest.osVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ManifestValidationRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

int *ManifestValidationRequest.init(url:primaryProductVariant:compatibleProductVariants:osVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_24469C888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a7, a1, v14);
  uint64_t result = (int *)type metadata accessor for ManifestValidationRequest();
  uint64_t v16 = (void *)(a7 + result[5]);
  *uint64_t v16 = a2;
  v16[1] = a3;
  *(void *)(a7 + result[6]) = a4;
  uint64_t v17 = (void *)(a7 + result[7]);
  void *v17 = a5;
  v17[1] = a6;
  return result;
}

uint64_t ManifestValidationRequest.run()()
{
  v1[3] = v0;
  type metadata accessor for ManifestValidationRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24462FB64, 0, 0);
}

uint64_t sub_24462FB64()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_24463080C(v0[3], v1);
  sub_244630920(&qword_268E9DB50, (void (*)(uint64_t))type metadata accessor for ManifestValidationRequest);
  sub_244630920(&qword_268E9DB58, (void (*)(uint64_t))type metadata accessor for ManifestValidationRequest);
  sub_24463080C(v1, v2);
  v0[2] = v2;
  uint64_t v5 = (char *)&dword_268E9DB48 + dword_268E9DB48;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24462FCE4;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 2, sub_24462FEF8, 0);
}

uint64_t sub_24462FCE4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24462FE78;
  }
  else
  {
    sub_244630870(*(void *)(v2 + 32));
    uint64_t v3 = sub_24462FE00;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24462FE00()
{
  sub_244630870(*(void *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24462FE78()
{
  uint64_t v1 = v0[5];
  sub_244630870(v0[4]);
  sub_244630870(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void sub_24462FEF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_1;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_runManifestValidation_reply_, v8, v9);
  _Block_release(v9);
}

unint64_t sub_24462FFD4()
{
  unint64_t result = 7107189;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24463006C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2446312AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244630094(uint64_t a1)
{
  unint64_t v2 = sub_2446308CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446300D0(uint64_t a1)
{
  unint64_t v2 = sub_2446308CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ManifestValidationRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DEB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446308CC();
  sub_24469D728();
  char v15 = 0;
  sub_24469C888();
  sub_244630920(&qword_268E9D5A0, MEMORY[0x263F06EA8]);
  sub_24469D568();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for ManifestValidationRequest();
    char v14 = 1;
    sub_24469D4F8();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
    sub_244630968(&qword_26B0D0FA0);
    sub_24469D528();
    v12[14] = 3;
    sub_24469D4F8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t ManifestValidationRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_24469C888();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v30 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DEC8);
  uint64_t v28 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for ManifestValidationRequest();
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446308CC();
  unint64_t v32 = v9;
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v26 = a1;
  uint64_t v14 = (uint64_t)v13;
  uint64_t v15 = v29;
  char v37 = 0;
  sub_244630920(&qword_268E9D5B0, MEMORY[0x263F06EA8]);
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  sub_24469D498();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v16, v4);
  char v36 = 1;
  uint64_t v18 = sub_24469D428();
  uint64_t v19 = (uint64_t *)(v14 + v10[5]);
  uint64_t *v19 = v18;
  v19[1] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
  char v35 = 2;
  sub_244630968(&qword_26B0D1068);
  sub_24469D458();
  *(void *)(v14 + v10[6]) = v33;
  char v34 = 3;
  uint64_t v21 = sub_24469D428();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v17);
  unint64_t v24 = (uint64_t *)(v14 + v10[7]);
  uint64_t *v24 = v21;
  v24[1] = v23;
  sub_24463080C(v14, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_244630870(v14);
}

uint64_t sub_2446307DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ManifestValidationRequest.init(from:)(a1, a2);
}

uint64_t sub_2446307F4(void *a1)
{
  return ManifestValidationRequest.encode(to:)(a1);
}

uint64_t sub_24463080C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManifestValidationRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244630870(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ManifestValidationRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2446308CC()
{
  unint64_t result = qword_268E9DEC0;
  if (!qword_268E9DEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DEC0);
  }
  return result;
}

uint64_t sub_244630920(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244630968(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0D1080);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ManifestValidationRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24469C888();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ManifestValidationRequest(uint64_t a1)
{
  uint64_t v2 = sub_24469C888();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManifestValidationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_244630E5C);
}

uint64_t sub_244630E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ManifestValidationRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_244630F40);
}

uint64_t sub_244630F40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24469C888();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_244631000()
{
  uint64_t result = sub_24469C888();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ManifestValidationRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24463116CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManifestValidationRequest.CodingKeys()
{
  return &type metadata for ManifestValidationRequest.CodingKeys;
}

unint64_t sub_2446311A8()
{
  unint64_t result = qword_268E9DEE0;
  if (!qword_268E9DEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DEE0);
  }
  return result;
}

unint64_t sub_244631200()
{
  unint64_t result = qword_268E9DEE8;
  if (!qword_268E9DEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DEE8);
  }
  return result;
}

unint64_t sub_244631258()
{
  unint64_t result = qword_268E9DEF0;
  if (!qword_268E9DEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DEF0);
  }
  return result;
}

uint64_t sub_2446312AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002446AA3E0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002446AA400 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t ApprovedDeveloper.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApprovedDeveloper.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApprovedDeveloper.supportURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall ApprovedDeveloper.init(name:identifier:supportURL:)(MarketplaceKit::ApprovedDeveloper *__return_ptr retstr, Swift::String name, Swift::String identifier, Swift::String_optional supportURL)
{
  retstr->field2446B15AC = name;
  retstr->field2446B15B8 = identifier;
  retstr->field2446B15C4 = supportURL;
}

uint64_t sub_2446314F8()
{
  uint64_t v1 = 0x696669746E656469;
  if (*v0 != 1) {
    uint64_t v1 = 0x5574726F70707573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_244631554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244632460(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24463157C(uint64_t a1)
{
  unint64_t v2 = sub_2446317A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446315B8(uint64_t a1)
{
  unint64_t v2 = sub_2446317A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ApprovedDeveloper.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DEF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  uint64_t v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446317A8();
  sub_24469D728();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_24469D548();
  if (!v10)
  {
    char v14 = 1;
    sub_24469D548();
    char v13 = 2;
    sub_24469D4F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_2446317A8()
{
  unint64_t result = qword_268E9DF00;
  if (!qword_268E9DF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DF00);
  }
  return result;
}

uint64_t ApprovedDeveloper.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446317A8();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_24469D478();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24469D478();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_24469D428();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244631A8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ApprovedDeveloper.init(from:)(a1, a2);
}

uint64_t sub_244631AA4(void *a1)
{
  return ApprovedDeveloper.encode(to:)(a1);
}

uint64_t static AppDistributor.allApprovedDevelopers()()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  long long v5 = 0u;
  long long v6 = 0u;
  uint64_t v7 = 0;
  unint64_t v8 = 0x2000000000000000;
  char v9 = 1;
  uint64_t v10 = &v5;
  sub_24460C8EC((uint64_t **)&v10, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_244654F8C, 0, &v11);
  sub_24460EA04(v5, *((uint64_t *)&v5 + 1), v6, *((uint64_t *)&v6 + 1), v7, v8, v9);
  uint64_t v0 = v11;
  char v1 = v12;
  if (v12)
  {
    unint64_t v2 = *((void *)&v11 + 1);
    type metadata accessor for MarketplaceKitError();
    sub_244631FC0();
    uint64_t v3 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_24461CE18(v0, v2, v1);

    return MEMORY[0x263F8EE78];
  }
  return v0;
}

uint64_t static AppDistributor.revokeDeveloperApproval(_:removeInstalledApps:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  sub_24460E60C();
  sub_24460E660();
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  uint64_t v10 = a3 & 1;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  char v14 = 3;
  uint64_t v15 = &v8;
  sub_24460E6B4(a1, a2, v10, 0, 0, 0, 3);
  sub_24460CE6C(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_244631D44, 0);
  sub_24460E754(v8, v9, v10, v11, v12, v13, v14);
  return sub_24460E754(a1, a2, a3 & 1, 0, 0, 0, 3);
}

void sub_244631D44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_2;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setPrivateDataRequest_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t static AppDistributor.isDeveloperApproved(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  long long v12 = 0u;
  long long v13 = 0u;
  char v14 = 0;
  uint64_t v15 = &v10;
  sub_24460E990(a1, a2, 0, 0, 0, 0, 0);
  sub_24460C8EC(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_244654F8C, 0, &v16);
  sub_24460EA04(v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14);
  long long v5 = v16;
  char v6 = v17;
  if (v17 == 1)
  {
    uint64_t v7 = v16 & 1;
    sub_24461CE18(v16, *((unint64_t *)&v16 + 1), 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_244631FC0();
    uint64_t v8 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_24461CE18(v5, *((unint64_t *)&v5 + 1), v6);
    swift_bridgeObjectRelease();

    return 0;
  }
  return v7;
}

unint64_t sub_244631FC0()
{
  unint64_t result = qword_268E9D7C0;
  if (!qword_268E9D7C0)
  {
    type metadata accessor for MarketplaceKitError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9D7C0);
  }
  return result;
}

uint64_t destroy for ApprovedDeveloper()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ApprovedDeveloper(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ApprovedDeveloper(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for ApprovedDeveloper(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApprovedDeveloper(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApprovedDeveloper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApprovedDeveloper()
{
  return &type metadata for ApprovedDeveloper;
}

unsigned char *storeEnumTagSinglePayload for ApprovedDeveloper.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244632320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApprovedDeveloper.CodingKeys()
{
  return &type metadata for ApprovedDeveloper.CodingKeys;
}

unint64_t sub_24463235C()
{
  unint64_t result = qword_268E9DF10;
  if (!qword_268E9DF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DF10);
  }
  return result;
}

unint64_t sub_2446323B4()
{
  unint64_t result = qword_268E9DF18;
  if (!qword_268E9DF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DF18);
  }
  return result;
}

unint64_t sub_24463240C()
{
  unint64_t result = qword_268E9DF20;
  if (!qword_268E9DF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DF20);
  }
  return result;
}

uint64_t sub_244632460(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5574726F70707573 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t static PrivateNotifications.priorityOrAllowedDevelopersChangedNotificationName.getter()
{
  return 0xD000000000000044;
}

uint64_t sub_2446325DC()
{
  uint64_t result = sub_244635578();
  qword_26B0D1190 = result;
  return result;
}

void sub_2446325FC(uint64_t a1, os_unfair_lock_s *a2)
{
  BOOL v2 = a2 + 4;
  int v3 = a2 + 8;
  os_unfair_lock_lock(a2 + 8);
  sub_2446326C4(v2);
  os_unfair_lock_unlock(v3);
  id v4 = objc_msgSend(self, sel_defaultCenter);
  id v5 = (id)sub_24469CF78();
  objc_msgSend(v4, sel_postNotificationName_object_, v5, 0);
}

uint64_t sub_2446326C4(void *a1)
{
  swift_bridgeObjectRelease();
  *a1 = 0;
  uint64_t result = swift_bridgeObjectRelease();
  a1[1] = 0;
  return result;
}

uint64_t static AppDistributor.AppDistributorsOrTrustedDevelopersChangedNotification.getter()
{
  return sub_24469CF78();
}

uint64_t sub_244632720@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_244632740@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t static AppDistributor.distributorPriorityList.getter()
{
  return MEMORY[0x270FA2498](sub_24463277C, 0, 0);
}

uint64_t sub_24463277C()
{
  uint64_t v8 = v0;
  if (qword_26B0D10A8 != -1) {
    swift_once();
  }
  char v1 = (void *)(qword_26B0D1190 + 16);
  BOOL v2 = (os_unfair_lock_s *)(qword_26B0D1190 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26B0D1190 + 32));
  sub_244632720(v1, &v7);
  os_unfair_lock_unlock(v2);
  if (v7)
  {
    int v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    if (qword_26B0D10D0 != -1) {
      swift_once();
    }
    *(void *)(v0 + 16) = 1;
    *(void *)(v0 + 56) = 0x2000000000000000;
    *(unsigned char *)(v0 + 64) = 1;
    *(void *)(v0 + 96) = v0 + 16;
    char v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268E9D828 + dword_268E9D828);
    *(_OWORD *)(v0 + 24) = 0u;
    *(_OWORD *)(v0 + 40) = 0u;
    id v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v5;
    *id v5 = v0;
    v5[1] = sub_244632968;
    return v6(v0 + 72, v0 + 96, (uint64_t)sub_244654F78, 0);
  }
}

uint64_t sub_244632968()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int v3 = sub_244632C50;
  }
  else
  {
    sub_24460EA04(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    int v3 = sub_244632A90;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

void sub_244632A90()
{
  char v1 = *(void **)(v0 + 72);
  unint64_t v2 = *(void *)(v0 + 80);
  int v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 3)
  {
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = qword_26B0D1190;
    *(void *)(swift_task_alloc() + 16) = v1;
    char v6 = (void *)(v5 + 16);
    uint64_t v7 = (os_unfair_lock_s *)(v5 + 32);
    sub_244635510((uint64_t)v1, v2, 3);
    sub_244635510((uint64_t)v1, v2, 3);
    sub_244635510((uint64_t)v1, v2, 3);
    os_unfair_lock_lock(v7);
    sub_2446354F8(v6);
    if (v4)
    {
      os_unfair_lock_unlock(v7);
      return;
    }
    os_unfair_lock_unlock(v7);
    sub_24461CE18((uint64_t)v1, v2, 3);
    sub_24461CE18((uint64_t)v1, v2, 3);
    sub_24461CE18((uint64_t)v1, v2, 3);
    swift_task_dealloc();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_244631FC0();
    uint64_t v8 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_24461CE18((uint64_t)v1, v2, v3);

    char v1 = &unk_26F93B3F8;
  }
  uint64_t v9 = *(void (**)(void *))(v0 + 8);
  v9(v1);
}

uint64_t sub_244632C50()
{
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  char v1 = *(uint64_t (**)(void *))(v0 + 8);
  return v1(&unk_26F93B3F8);
}

uint64_t static AppDistributor.setDistributorPriorityList(_:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_268E9DF38 + dword_268E9DF38);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24460BAB0;
  return v5(a1);
}

void sub_244632D74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void static AppDistributor.synchronousAllApprovedDevelopers.getter()
{
  if (qword_26B0D10A8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26B0D1190 + 16;
  uint64_t v1 = (os_unfair_lock_s *)(qword_26B0D1190 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26B0D1190 + 32));
  sub_244632740(v0, &v10);
  os_unfair_lock_unlock(v1);
  if (!(void)v10)
  {
    if (qword_26B0D10D0 != -1) {
      swift_once();
    }
    long long v10 = 0u;
    long long v11 = 0u;
    uint64_t v12 = 0;
    unint64_t v13 = 0x2000000000000000;
    char v14 = 1;
    uint64_t v15 = &v10;
    sub_24460C8EC((uint64_t **)&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_244654F8C, 0, &v16);
    uint64_t v2 = sub_24460EA04(v10, *((uint64_t *)&v10 + 1), v11, *((uint64_t *)&v11 + 1), v12, v13, v14);
    long long v4 = v16;
    char v5 = v17;
    if (v17)
    {
      type metadata accessor for MarketplaceKitError();
      sub_244631FC0();
      uint64_t v6 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_24461CE18(v4, *((unint64_t *)&v4 + 1), v5);
    }
    else
    {
      MEMORY[0x270FA5388](v2, v3);
      uint64_t v8 = (uint64_t)&v7[4];
      uint64_t v9 = v7 + 8;
      sub_244635510(v4, *((unint64_t *)&v4 + 1), 0);
      sub_244635510(v4, *((unint64_t *)&v4 + 1), 0);
      sub_244635510(v4, *((unint64_t *)&v4 + 1), 0);
      os_unfair_lock_lock(v9);
      sub_244635DB8(v8);
      os_unfair_lock_unlock(v9);
      sub_24461CE18(v4, *((unint64_t *)&v4 + 1), 0);
      sub_24461CE18(v4, *((unint64_t *)&v4 + 1), 0);
      sub_24461CE18(v4, *((unint64_t *)&v4 + 1), 0);
    }
  }
}

uint64_t static AppDistributor.setShouldShowInstallConfirmations(for:shouldShow:)(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 65) = a3;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = a2;
  return MEMORY[0x270FA2498](sub_24463303C, 0, 0);
}

uint64_t sub_24463303C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 65);
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 16) = *(void *)(v0 + 72);
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 64) = 4;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2446330F8;
  return SetPrivateDataRequest.run()();
}

uint64_t sub_2446330F8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    return MEMORY[0x270FA2498](sub_244633238, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_244633238()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static AppDistributor.synchronousSetShouldShowInstallConfirmations(for:shouldShow:)()
{
  swift_bridgeObjectRetain();
  SetPrivateDataRequest.runSynchronously()();
  if (v0) {

  }
  return swift_bridgeObjectRelease();
}

uint64_t static AppDistributor.synchronousShouldShowInstallConfirmations(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  unint64_t v15 = 0x3000000000000000;
  char v16 = 0;
  char v17 = &v10;
  sub_24460E990(a1, a2, 0, 0, 0, 0x3000000000000000uLL, 0);
  sub_24460C8EC(&v17, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_244654F8C, 0, &v18);
  sub_24460EA04(v10, v11, v12, v13, v14, v15, v16);
  long long v5 = v18;
  char v6 = v19;
  if (v19 == 5)
  {
    uint64_t v7 = v18 & 1;
    sub_24461CE18(v18, *((unint64_t *)&v18 + 1), 5);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_244631FC0();
    uint64_t v8 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_24461CE18(v5, *((unint64_t *)&v5 + 1), v6);
    swift_bridgeObjectRelease();

    return 1;
  }
  return v7;
}

uint64_t static AppDistributor.shouldShowInstallConfirmations(for:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return MEMORY[0x270FA2498](sub_2446334D4, 0, 0);
}

uint64_t sub_2446334D4()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 104);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0x3000000000000000;
  *(unsigned char *)(v0 + 64) = 0;
  *(void *)(v0 + 96) = v0 + 16;
  sub_24460E990(v3, v1, 0, 0, 0, 0x3000000000000000uLL, 0);
  char v6 = (char *)&dword_268E9D828 + dword_268E9D828;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_244633630;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v6)(v0 + 72, v0 + 96, sub_244654F78, 0);
}

uint64_t sub_244633630()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244633868;
  }
  else
  {
    sub_24460EA04(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    uint64_t v3 = sub_244633758;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244633758()
{
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = *(void *)(v0 + 80);
  int v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 5)
  {
    uint64_t v4 = *(void *)(v0 + 72) & 1;
    sub_24461CE18(*(void *)(v0 + 72), *(void *)(v0 + 80), 5);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_244631FC0();
    uint64_t v5 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_24461CE18(v1, v2, v3);
    swift_bridgeObjectRelease();

    uint64_t v4 = 1;
  }
  char v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v4);
}

uint64_t sub_244633868()
{
  uint64_t v1 = *(void **)(v0 + 128);
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_bridgeObjectRelease();

  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

uint64_t static AppDistributor.shouldShowAppInstallationSettings()()
{
  return MEMORY[0x270FA2498](sub_24463390C, 0, 0);
}

uint64_t sub_24463390C()
{
  if (qword_26B0D10A8 != -1) {
    swift_once();
  }
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = 2;
  *(void *)(v0 + 56) = 0x2000000000000000;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 96) = v0 + 16;
  int v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268E9D828 + dword_268E9D828);
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_244633A74;
  return v3(v0 + 72, v0 + 96, (uint64_t)sub_244654F78, 0);
}

uint64_t sub_244633A74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int v3 = sub_244633C90;
  }
  else
  {
    sub_24460EA04(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    int v3 = sub_244633B9C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244633B9C()
{
  uint64_t v2 = *(void *)(v0 + 72);
  unint64_t v1 = *(void *)(v0 + 80);
  int v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 6)
  {
    uint64_t v4 = *(void *)(v0 + 72) & 1;
    sub_24461CE18(*(void *)(v0 + 72), *(void *)(v0 + 80), 6);
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_244631FC0();
    uint64_t v5 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_24461CE18(v2, v1, v3);

    uint64_t v4 = 0;
  }
  char v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v4);
}

uint64_t sub_244633C90()
{
  unint64_t v1 = *(void **)(v0 + 112);
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t AvailableAppMetadataRequest.distributorID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvailableAppMetadataRequest.ids.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AvailableAppMetadataRequest.init(distributorID:ids:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_244633D50()
{
  if (*v0) {
    return 7562345;
  }
  else {
    return 0x7562697274736964;
  }
}

uint64_t sub_244633D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244635EBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244633DB8(uint64_t a1)
{
  unint64_t v2 = sub_244635E04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244633DF4(uint64_t a1)
{
  unint64_t v2 = sub_244635E04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AvailableAppMetadataRequest.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF58);
  uint64_t v11 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244635E04();
  sub_24469D728();
  char v14 = 0;
  sub_24469D548();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF68);
    sub_244635E58(&qword_268E9DF70);
    sub_24469D568();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

uint64_t AvailableAppMetadataRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244635E04();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v10 = sub_24469D478();
  uint64_t v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF68);
  char v16 = 1;
  sub_244635E58(&qword_268E9DF80);
  swift_bridgeObjectRetain();
  sub_24469D498();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v13 = v15[1];
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244634238@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AvailableAppMetadataRequest.init(from:)(a1, a2);
}

uint64_t sub_244634250(void *a1)
{
  return AvailableAppMetadataRequest.encode(to:)(a1);
}

uint64_t static AppDistributor.availableApp(for:distributor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_24463428C, 0, 0);
}

uint64_t sub_24463428C()
{
  uint64_t v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF90);
  uint64_t v2 = swift_allocObject();
  v0[6] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_2446A04B0;
  *(void *)(v2 + 32) = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E9DF98 + dword_268E9DF98);
  int v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *int v3 = v0;
  v3[1] = sub_24463436C;
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  return v7(v2, v4, v5);
}

uint64_t sub_24463436C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24463448C, 0, 0);
}

uint64_t sub_24463448C()
{
  uint64_t v1 = v0[8];
  if (v1)
  {
    uint64_t v2 = v0[2];
    if (*(void *)(v1 + 16))
    {
      *(_OWORD *)uint64_t v2 = *(_OWORD *)(v1 + 32);
      *(unsigned char *)(v2 + 16) = 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      *(void *)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      *(unsigned char *)(v2 + 16) = 1;
    }
  }
  else
  {
    uint64_t v3 = v0[2];
    *(void *)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    *(unsigned char *)(v3 + 16) = 1;
  }
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t static AppDistributor.availableApps(for:distributor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E9DF98 + dword_268E9DF98);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2446345F0;
  return v9(a1, a2, a3);
}

uint64_t sub_2446345F0(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

void sub_2446346EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t static AppDistributor.requestProductPage(_:itemID:versionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 25) = a5;
  *(void *)(v5 + 48) = a3;
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  *(void *)(v5 + 64) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244634798, 0, 0);
}

uint64_t sub_244634798()
{
  uint64_t v1 = *(void *)(v0 + 64);
  char v2 = *(unsigned char *)(v0 + 25);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 48);
  *(unsigned char *)(v1 + 16) = v2 & 1;
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 32) = v4;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_244634884;
  uint64_t v6 = *(void *)(v0 + 64);
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)(v0 + 16, v6);
}

uint64_t sub_244634884()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244636810;
  }
  else
  {
    sub_244626698(*(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
    uint64_t v3 = sub_2446367E8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t static AppDistributor.requestSearchPage(_:searchString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v4[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244634A38, 0, 0);
}

uint64_t sub_244634A38()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = (void *)v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[4];
  *uint64_t v1 = v0[6];
  v1[1] = v2;
  v1[2] = v4;
  v1[3] = v3;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_244634B20;
  uint64_t v6 = v0[8];
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v6);
}

uint64_t sub_244634B20()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244634CB0;
  }
  else
  {
    sub_244626698(*(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
    uint64_t v3 = sub_244634C40;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244634C40()
{
  sub_2446362E8(*(void *)(v0 + 64));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244634CB0()
{
  sub_2446362E8(*(void *)(v0 + 64));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static AppDistributor.requestAuthorization(_:account:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v4[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244634DB4, 0, 0);
}

uint64_t sub_244634DB4()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = (void *)v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[4];
  *uint64_t v1 = v0[6];
  v1[1] = v2;
  v1[2] = v4;
  v1[3] = v3;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_244634884;
  uint64_t v6 = v0[8];
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v6);
}

uint64_t static AppDistributor.handleEmergencyReset()()
{
  return MEMORY[0x270FA2498](sub_244634EB8, 0, 0);
}

uint64_t sub_244634EB8()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E9DB00 + dword_268E9DB00);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_244634FB0;
  return v3(v0 + 16, (uint64_t)sub_2446350DC, 0);
}

uint64_t sub_244634FB0()
{
  *(void *)(*(void *)v1 + 24) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2446350C4;
  }
  else {
    uint64_t v2 = sub_2446350AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2446350AC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2446350C4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2446350DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v7[4] = a4;
  v7[5] = a5;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_2446826EC;
  v7[3] = &block_descriptor_26;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleEmergencyResetRequestWithReply_, v6);
  _Block_release(v6);
}

uint64_t static AppDistributor.addAllowedDeveloper(_:name:supportURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  sub_24460E60C();
  sub_24460E660();
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  char v20 = 0;
  uint64_t v21 = &v14;
  sub_24460E6B4(a1, a2, a3, a4, a5, a6, 0);
  sub_24460CE6C(&v21, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_2446352DC, 0);
  sub_24460E754(v14, v15, v16, v17, v18, v19, v20);
  return sub_24460E754(a1, a2, a3, a4, a5, a6, 0);
}

void sub_2446352DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t static AppDistributor.addConditionallyAllowedDeveloper(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  sub_24460E60C();
  sub_24460E660();
  uint64_t v6 = a1;
  uint64_t v7 = a2;
  long long v8 = 0u;
  long long v9 = 0u;
  char v10 = 1;
  uint64_t v11 = &v6;
  sub_24460E6B4(a1, a2, 0, 0, 0, 0, 1);
  sub_24460CE6C(&v11, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_24463540C, 0);
  sub_24460E754(v6, v7, v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), v10);
  return sub_24460E754(a1, a2, 0, 0, 0, 0, 1);
}

void sub_24463540C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_244635420(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  uint64_t v12 = (void *)sub_24469C8A8();
  v14[4] = a4;
  v14[5] = a5;
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_2446826EC;
  v14[3] = a6;
  uint64_t v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a7, v12, v13);
  _Block_release(v13);
}

uint64_t sub_2446354F8(void *a1)
{
  return sub_244636570(a1);
}

uint64_t sub_244635510(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
    case 7:
    case 8:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 4:
      uint64_t result = sub_24460BBA4(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_244635578()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24469CE98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D10A0);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(_DWORD *)(v5 + 32) = 0;
  int out_token = -1;
  sub_2446365BC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x263F8F080], v0);
  swift_retain();
  uint64_t v6 = sub_24469D1E8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  aBlock[4] = sub_2446365FC;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244647560;
  aBlock[3] = &block_descriptor_40;
  uint64_t v7 = _Block_copy(aBlock);
  swift_release();
  notify_register_dispatch("com.apple.managedappdistributiond.priorityOrAllowedDevelopersChanged", &out_token, v6, v7);
  _Block_release(v7);

  return v5;
}

uint64_t sub_244635770(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return MEMORY[0x270FA2498](sub_244635790, 0, 0);
}

uint64_t sub_244635790()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  sub_24460E60C();
  sub_24460E660();
  *(void *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 2;
  *(void *)(v0 + 72) = v0 + 16;
  sub_24460E6B4(v1, 0, 0, 0, 0, 0, 2);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E9DB40 + dword_268E9DB40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2446358E8;
  return v5(v0 + 72, (uint64_t)sub_244632D74, 0);
}

uint64_t sub_2446358E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244635A8C;
  }
  else
  {
    sub_24460E754(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    uint64_t v3 = sub_244635A10;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244635A10()
{
  sub_24460E754(*(void *)(v0 + 80), 0, 0, 0, 0, 0, 2);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244635A8C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_24460E754(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_24460E754(v1, 0, 0, 0, 0, 0, 2);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void _s14MarketplaceKit14AppDistributorO011synchronousD12PriorityListSaySSGvgZ_0()
{
  if (qword_26B0D10A8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)(qword_26B0D1190 + 16);
  uint64_t v1 = (os_unfair_lock_s *)(qword_26B0D1190 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_26B0D1190 + 32));
  sub_244632720(v0, &v10);
  os_unfair_lock_unlock(v1);
  if (!v10)
  {
    if (qword_26B0D10D0 != -1) {
      swift_once();
    }
    uint64_t v10 = 1;
    long long v11 = 0u;
    long long v12 = 0u;
    unint64_t v13 = 0x2000000000000000;
    char v14 = 1;
    uint64_t v15 = &v10;
    sub_24460C8EC(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_244654F8C, 0, &v16);
    uint64_t v2 = sub_24460EA04(v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, v14);
    long long v4 = v16;
    char v5 = v17;
    if (v17 == 3)
    {
      MEMORY[0x270FA5388](v2, v3);
      uint64_t v7 = (void *)(v6 + 16);
      long long v8 = (os_unfair_lock_s *)(v6 + 32);
      sub_244635510(v4, *((unint64_t *)&v4 + 1), 3);
      sub_244635510(v4, *((unint64_t *)&v4 + 1), 3);
      sub_244635510(v4, *((unint64_t *)&v4 + 1), 3);
      os_unfair_lock_lock(v8);
      sub_2446354F8(v7);
      os_unfair_lock_unlock(v8);
      sub_24461CE18(v4, *((unint64_t *)&v4 + 1), 3);
      sub_24461CE18(v4, *((unint64_t *)&v4 + 1), 3);
      sub_24461CE18(v4, *((unint64_t *)&v4 + 1), 3);
    }
    else
    {
      type metadata accessor for MarketplaceKitError();
      sub_244631FC0();
      long long v9 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_24461CE18(v4, *((unint64_t *)&v4 + 1), v5);
    }
  }
}

uint64_t sub_244635DB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v3;
  return result;
}

unint64_t sub_244635E04()
{
  unint64_t result = qword_268E9DF60;
  if (!qword_268E9DF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DF60);
  }
  return result;
}

uint64_t sub_244635E58(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9DF68);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244635EBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7562697274736964 && a2 == 0xED00004449726F74;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7562345 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244635FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return MEMORY[0x270FA2498](sub_244635FE8, 0, 0);
}

uint64_t sub_244635FE8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1)
  {
    swift_once();
    uint64_t v1 = v0[8];
    uint64_t v2 = v0[6];
  }
  v0[2] = v0[7];
  v0[5] = v0 + 2;
  v0[3] = v1;
  v0[4] = v2;
  char v6 = (char *)&dword_268E9DB08 + dword_268E9DB08;
  long long v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *long long v4 = v0;
  v4[1] = sub_244636120;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v6)(v0 + 5, sub_2446346EC, 0);
}

uint64_t sub_244636120(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    return MEMORY[0x270FA2498](sub_24463627C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_24463627C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_2446362E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LaunchAngelXPCRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for PrivateNotifications()
{
  return &type metadata for PrivateNotifications;
}

ValueMetadata *type metadata accessor for AvailableAppMetadataRequest()
{
  return &type metadata for AvailableAppMetadataRequest;
}

unsigned char *storeEnumTagSinglePayload for AvailableAppMetadataRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244636430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AvailableAppMetadataRequest.CodingKeys()
{
  return &type metadata for AvailableAppMetadataRequest.CodingKeys;
}

unint64_t sub_24463646C()
{
  unint64_t result = qword_268E9DFC8;
  if (!qword_268E9DFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DFC8);
  }
  return result;
}

unint64_t sub_2446364C4()
{
  unint64_t result = qword_268E9DFD0;
  if (!qword_268E9DFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DFD0);
  }
  return result;
}

unint64_t sub_24463651C()
{
  unint64_t result = qword_268E9DFD8;
  if (!qword_268E9DFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DFD8);
  }
  return result;
}

uint64_t sub_244636570(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

unint64_t sub_2446365BC()
{
  unint64_t result = qword_26B0D11A8;
  if (!qword_26B0D11A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0D11A8);
  }
  return result;
}

void sub_2446365FC(uint64_t a1)
{
  sub_2446325FC(a1, v1);
}

ValueMetadata *type metadata accessor for _AppDistributionNotificationRelay()
{
  return &type metadata for _AppDistributionNotificationRelay;
}

uint64_t destroy for _AppDistributionNotificationRelay.Cache()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14MarketplaceKit33_AppDistributionNotificationRelayV5CacheVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for _AppDistributionNotificationRelay.Cache(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for _AppDistributionNotificationRelay.Cache(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppDistributionNotificationRelay.Cache(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _AppDistributionNotificationRelay.Cache(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _AppDistributionNotificationRelay.Cache()
{
  return &type metadata for _AppDistributionNotificationRelay.Cache;
}

uint64_t LicenseResolutionContext.logKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LicenseResolutionContext.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  uint64_t v4 = sub_24469C888();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for LicenseResolutionContext()
{
  uint64_t result = qword_268E9DFF8;
  if (!qword_268E9DFF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LicenseResolutionContext.init(logKey:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a3, v6);
}

uint64_t sub_244636988()
{
  if (*v0) {
    return 7107189;
  }
  else {
    return 0x79654B676F6CLL;
  }
}

uint64_t sub_2446369B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2446377EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2446369E0(uint64_t a1)
{
  unint64_t v2 = sub_244636BFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244636A1C(uint64_t a1)
{
  unint64_t v2 = sub_244636BFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LicenseResolutionContext.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DFE0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244636BFC();
  sub_24469D728();
  v9[15] = 0;
  sub_24469D548();
  if (!v1)
  {
    type metadata accessor for LicenseResolutionContext();
    v9[14] = 1;
    sub_24469C888();
    sub_2446089F8(&qword_268E9D5A0);
    sub_24469D568();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_244636BFC()
{
  unint64_t result = qword_268E9DFE8;
  if (!qword_268E9DFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9DFE8);
  }
  return result;
}

uint64_t LicenseResolutionContext.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = sub_24469C888();
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DFF0);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v7);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LicenseResolutionContext();
  MEMORY[0x270FA5388](v10, v11);
  unint64_t v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244636BFC();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = v10;
  uint64_t v15 = v22;
  uint64_t v14 = v23;
  char v26 = 0;
  uint64_t v16 = v24;
  *unint64_t v13 = sub_24469D478();
  v13[1] = v17;
  char v25 = 1;
  sub_2446089F8(&qword_268E9D5B0);
  sub_24469D498();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v13 + *(int *)(v19 + 20), v6, v14);
  sub_244636F3C((uint64_t)v13, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_244636FA0((uint64_t)v13);
}

uint64_t sub_244636F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LicenseResolutionContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244636FA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LicenseResolutionContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244636FFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LicenseResolutionContext.init(from:)(a1, a2);
}

uint64_t sub_244637014(void *a1)
{
  return LicenseResolutionContext.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for OAuthAuthorizationContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24469C888();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for OAuthAuthorizationContext(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24469C888();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for OAuthAuthorizationContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24469C888();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for OAuthAuthorizationContext(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for OAuthAuthorizationContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for OAuthAuthorizationContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LicenseResolutionContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2446373DC);
}

uint64_t sub_2446373DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24469C888();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LicenseResolutionContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2446374A0);
}

uint64_t sub_2446374A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24469C888();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_244637548()
{
  uint64_t result = sub_24469C888();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LicenseResolutionContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2446376ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LicenseResolutionContext.CodingKeys()
{
  return &type metadata for LicenseResolutionContext.CodingKeys;
}

unint64_t sub_2446376E8()
{
  unint64_t result = qword_268E9E008;
  if (!qword_268E9E008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E008);
  }
  return result;
}

unint64_t sub_244637740()
{
  unint64_t result = qword_268E9E010;
  if (!qword_268E9E010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E010);
  }
  return result;
}

unint64_t sub_244637798()
{
  unint64_t result = qword_268E9E018;
  if (!qword_268E9E018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E018);
  }
  return result;
}

uint64_t sub_2446377EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static Restores.discover()()
{
  return MEMORY[0x270FA2498](sub_2446378E4, 0, 0);
}

uint64_t sub_2446378E4()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  sub_24461E9CC();
  sub_24461EA20();
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 40) = v0 + 16;
  *(unsigned char *)(v0 + 32) = 2;
  int v3 = (char *)&dword_268E9DAE8 + dword_268E9DAE8;
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_244637A00;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v3)(v0 + 40, sub_244637B2C, 0);
}

uint64_t sub_244637A00()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    BOOL v2 = sub_24463A214;
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v2 = sub_24463A1F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

MarketplaceKit::DiscoverRestoresRequest __swiftcall DiscoverRestoresRequest.init()()
{
  *(void *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 0;
  *(unsigned char *)(v0 + 16) = 2;
  return result;
}

void sub_244637B2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t static Restores.discover(for:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_244637B60, 0, 0);
}

uint64_t sub_244637B60()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_24461E9CC();
  sub_24461EA20();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 40) = v0 + 16;
  *(unsigned char *)(v0 + 32) = 2;
  uint64_t v5 = (char *)&dword_268E9DAE8 + dword_268E9DAE8;
  swift_bridgeObjectRetain();
  int v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *int v3 = v0;
  v3[1] = sub_244637C9C;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 40, sub_244637E9C, 0);
}

uint64_t sub_244637C9C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244637E1C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_244637DB8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244637DB8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244637E1C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

MarketplaceKit::DiscoverRestoresRequest __swiftcall DiscoverRestoresRequest.init(accountID:)(Swift::String_optional accountID)
{
  *(Swift::String_optional *)uint64_t v1 = accountID;
  *(unsigned char *)(v1 + 16) = 2;
  result.field2446B1718 = accountID;
  return result;
}

void sub_244637E9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t static Restores.discoverAndPrompt()()
{
  return MEMORY[0x270FA2498](sub_244637ECC, 0, 0);
}

uint64_t sub_244637ECC()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  sub_24461E9CC();
  sub_24461EA20();
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 40) = v0 + 16;
  *(unsigned char *)(v0 + 32) = 1;
  uint64_t v3 = (char *)&dword_268E9DAE8 + dword_268E9DAE8;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_244637FE8;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v3)(v0 + 40, sub_2446381E4, 0);
}

uint64_t sub_244637FE8()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244638168;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_244638104;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244638104()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244638168()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

MarketplaceKit::DiscoverRestoresRequest __swiftcall DiscoverRestoresRequest.init(accountID:promptToInstallDistributors:)(Swift::String_optional accountID, Swift::Bool_optional promptToInstallDistributors)
{
  *(Swift::String_optional *)uint64_t v2 = accountID;
  *(Swift::Bool_optional *)(v2 + 16) = promptToInstallDistributors;
  result.field2446B1718 = accountID;
  result.field2446B1724 = promptToInstallDistributors;
  return result;
}

void sub_2446381E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t static Restores.prioritize(app:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return MEMORY[0x270FA2498](sub_244638218, 0, 0);
}

uint64_t sub_244638218()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  swift_bridgeObjectRetain();
  sub_24461E8F4();
  sub_24461E948();
  v0[2] = v2;
  v0[4] = v0 + 2;
  v0[3] = v1;
  uint64_t v5 = (char *)&dword_268E9DAD0 + dword_268E9DAD0;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24463834C;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 4, sub_244638544, 0);
}

uint64_t sub_24463834C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2446384CC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_244638468;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244638468()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2446384CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

MarketplaceKit::PrioritizeAppRequest __swiftcall PrioritizeAppRequest.init(_:)(MarketplaceKit::PrioritizeAppRequest result)
{
  *uint64_t v1 = result;
  return result;
}

void sub_244638544(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t static Restores.promote(apps:)(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x270FA2498](sub_244638578, 0, 0);
}

uint64_t sub_244638578()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  swift_bridgeObjectRetain();
  sub_24461E81C();
  sub_24461E870();
  v0[3] = v1;
  v0[2] = v0 + 3;
  uint64_t v4 = (char *)&dword_268E9DAB8 + dword_268E9DAB8;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2446386A8;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v4)(v0 + 2, sub_24463889C, 0);
}

uint64_t sub_2446386A8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244638828;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2446387C4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2446387C4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244638828()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

MarketplaceKit::PromoteAppsRequest __swiftcall PromoteAppsRequest.init(_:)(MarketplaceKit::PromoteAppsRequest result)
{
  v1->field2446B1740._rawValue = result.field2446B1740._rawValue;
  return result;
}

void sub_24463889C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t DiscoverRestoresRequest.accountID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoverRestoresRequest.promptToInstallDistributors.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2446388E8()
{
  if (*v0) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0x49746E756F636361;
  }
}

uint64_t sub_24463892C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24463A0F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244638954(uint64_t a1)
{
  unint64_t v2 = sub_2446397FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244638990(uint64_t a1)
{
  unint64_t v2 = sub_2446397FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoverRestoresRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E048);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446397FC();
  sub_24469D728();
  char v13 = 0;
  uint64_t v8 = v10[1];
  sub_24469D4F8();
  if (!v8)
  {
    char v12 = 1;
    sub_24469D508();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t DiscoverRestoresRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E058);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446397FC();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v10 = sub_24469D428();
  uint64_t v12 = v11;
  char v16 = 1;
  swift_bridgeObjectRetain();
  char v13 = sub_24469D438();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244638D08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoverRestoresRequest.init(from:)(a1, a2);
}

uint64_t sub_244638D20(void *a1)
{
  return DiscoverRestoresRequest.encode(to:)(a1);
}

uint64_t PromoteAppsRequest.appsToPromote.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PromoteAppsRequest.appsToPromote.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*PromoteAppsRequest.appsToPromote.modify())()
{
  return nullsub_1;
}

uint64_t sub_244638D8C()
{
  return 0x72506F5473707061;
}

uint64_t sub_244638DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x72506F5473707061 && a2 == 0xED000065746F6D6FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_244638E6C(uint64_t a1)
{
  unint64_t v2 = sub_244639850();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244638EA8(uint64_t a1)
{
  unint64_t v2 = sub_244639850();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PromoteAppsRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E060);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  char v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244639850();
  sub_24469D728();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
  sub_244630968(&qword_26B0D0FA0);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t PromoteAppsRequest.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E070);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244639850();
  sub_24469D708();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
    sub_244630968(&qword_26B0D1068);
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2446391F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PromoteAppsRequest.init(from:)(a1, a2);
}

uint64_t sub_24463920C(void *a1)
{
  return PromoteAppsRequest.encode(to:)(a1);
}

uint64_t PrioritizeAppRequest.appToPrioritize.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrioritizeAppRequest.appToPrioritize.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PrioritizeAppRequest.appToPrioritize.modify())()
{
  return nullsub_1;
}

uint64_t sub_2446392AC()
{
  return 0x6972506F54707061;
}

uint64_t sub_2446392D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6972506F54707061 && a2 == 0xEF657A697469726FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24463938C(uint64_t a1)
{
  unint64_t v2 = sub_2446398A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446393C8(uint64_t a1)
{
  unint64_t v2 = sub_2446398A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PrioritizeAppRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E078);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446398A4();
  sub_24469D728();
  sub_24469D548();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t PrioritizeAppRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E088);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446398A4();
  sub_24469D708();
  if (!v2)
  {
    uint64_t v10 = sub_24469D478();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2446396AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PrioritizeAppRequest.init(from:)(a1, a2);
}

uint64_t sub_2446396C4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E078);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446398A4();
  sub_24469D728();
  sub_24469D548();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_2446397FC()
{
  unint64_t result = qword_268E9E050;
  if (!qword_268E9E050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E050);
  }
  return result;
}

unint64_t sub_244639850()
{
  unint64_t result = qword_268E9E068;
  if (!qword_268E9E068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E068);
  }
  return result;
}

unint64_t sub_2446398A4()
{
  unint64_t result = qword_268E9E080;
  if (!qword_268E9E080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E080);
  }
  return result;
}

ValueMetadata *type metadata accessor for Restores()
{
  return &type metadata for Restores;
}

uint64_t sub_24463990C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiscoverRestoresRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for DiscoverRestoresRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoverRestoresRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoverRestoresRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoverRestoresRequest()
{
  return &type metadata for DiscoverRestoresRequest;
}

ValueMetadata *type metadata accessor for PromoteAppsRequest()
{
  return &type metadata for PromoteAppsRequest;
}

void *initializeBufferWithCopyOfBuffer for PrioritizeAppRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrioritizeAppRequest()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PrioritizeAppRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PrioritizeAppRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrioritizeAppRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrioritizeAppRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrioritizeAppRequest()
{
  return &type metadata for PrioritizeAppRequest;
}

ValueMetadata *type metadata accessor for PrioritizeAppRequest.CodingKeys()
{
  return &type metadata for PrioritizeAppRequest.CodingKeys;
}

unsigned char *_s14MarketplaceKit20PrioritizeAppRequestV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x244639CA0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromoteAppsRequest.CodingKeys()
{
  return &type metadata for PromoteAppsRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DiscoverRestoresRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244639DA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoverRestoresRequest.CodingKeys()
{
  return &type metadata for DiscoverRestoresRequest.CodingKeys;
}

unint64_t sub_244639DE0()
{
  unint64_t result = qword_268E9E090;
  if (!qword_268E9E090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E090);
  }
  return result;
}

unint64_t sub_244639E38()
{
  unint64_t result = qword_268E9E098;
  if (!qword_268E9E098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E098);
  }
  return result;
}

unint64_t sub_244639E90()
{
  unint64_t result = qword_268E9E0A0;
  if (!qword_268E9E0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0A0);
  }
  return result;
}

unint64_t sub_244639EE8()
{
  unint64_t result = qword_268E9E0A8;
  if (!qword_268E9E0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0A8);
  }
  return result;
}

unint64_t sub_244639F40()
{
  unint64_t result = qword_268E9E0B0;
  if (!qword_268E9E0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0B0);
  }
  return result;
}

unint64_t sub_244639F98()
{
  unint64_t result = qword_268E9E0B8;
  if (!qword_268E9E0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0B8);
  }
  return result;
}

unint64_t sub_244639FF0()
{
  unint64_t result = qword_268E9E0C0;
  if (!qword_268E9E0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0C0);
  }
  return result;
}

unint64_t sub_24463A048()
{
  unint64_t result = qword_268E9E0C8;
  if (!qword_268E9E0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0C8);
  }
  return result;
}

unint64_t sub_24463A0A0()
{
  unint64_t result = qword_268E9E0D0;
  if (!qword_268E9E0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0D0);
  }
  return result;
}

uint64_t sub_24463A0F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000044;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002446AA4C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.showBiometrics.getter()
{
  return *v0;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.installType.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.metricsFieldData.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24463A288(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t sub_24463A288(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24460BBA4(a1, a2);
  }
  return a1;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.init(showBiometrics:installType:metricsFieldData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(unsigned char *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  return result;
}

uint64_t sub_24463A2B0()
{
  unint64_t v1 = 0x546C6C6174736E69;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D6F6942776F6873;
  }
}

uint64_t sub_24463A324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244643E64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24463A34C(uint64_t a1)
{
  unint64_t v2 = sub_24463EA24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463A388(uint64_t a1)
{
  unint64_t v2 = sub_24463EA24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E0D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v17 = v9;
  uint64_t v10 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24463EA24();
  sub_24469D728();
  LOBYTE(v18) = 0;
  sub_24469D558();
  if (!v2)
  {
    uint64_t v12 = v14;
    uint64_t v11 = v15;
    LOBYTE(v18) = 1;
    sub_24469D548();
    uint64_t v18 = v11;
    uint64_t v19 = v12;
    char v20 = 2;
    sub_24463EA78();
    sub_24469D528();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E0F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24463EA24();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v19) = 0;
  char v10 = sub_24469D488();
  LOBYTE(v19) = 1;
  uint64_t v11 = sub_24469D478();
  uint64_t v13 = v12;
  uint64_t v18 = v11;
  char v21 = 2;
  sub_24463EACC();
  swift_bridgeObjectRetain();
  sub_24469D458();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v14 = v19;
  unint64_t v15 = v20;
  swift_bridgeObjectRetain();
  sub_24463A288(v14, v15);
  swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v10 & 1;
  *(void *)(a2 + 8) = v18;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_24463EB20(v14, v15);
}

uint64_t sub_24463A7F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.Source.AppStoreSheetContext.init(from:)(a1, a2);
}

uint64_t sub_24463A808(void *a1)
{
  return InstallSheetContext.Source.AppStoreSheetContext.encode(to:)(a1);
}

uint64_t InstallSheetContext.Source.WebInstallContext.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.Source.WebInstallContext.developerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.Source.WebInstallContext.developerID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.Source.WebInstallContext.appName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.Source.WebInstallContext.iconURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);

  return sub_24463EB54(v3, a1);
}

uint64_t InstallSheetContext.Source.WebInstallContext.init(domain:developerName:developerID:appName:iconURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  uint64_t v10 = (uint64_t)a9 + *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);

  return sub_24463EBBC(a10, v10);
}

uint64_t sub_24463A984()
{
  uint64_t result = 0x6E69616D6F64;
  switch(*v0)
  {
    case 1:
    case 2:
      uint64_t result = 0x65706F6C65766564;
      break;
    case 3:
      uint64_t result = 0x656D614E707061;
      break;
    case 4:
      uint64_t result = 0x4C52556E6F6369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24463AA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244643FF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24463AA58(uint64_t a1)
{
  unint64_t v2 = sub_24463F63C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463AA94(uint64_t a1)
{
  unint64_t v2 = sub_24463F63C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InstallSheetContext.Source.WebInstallContext.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E100);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24463F63C();
  sub_24469D728();
  v9[15] = 0;
  sub_24469D548();
  if (!v1)
  {
    v9[14] = 1;
    sub_24469D548();
    v9[13] = 2;
    sub_24469D548();
    v9[12] = 3;
    sub_24469D548();
    type metadata accessor for InstallSheetContext.Source.WebInstallContext(0);
    v9[11] = 4;
    sub_24469C888();
    sub_24463F690(&qword_268E9D5A0, MEMORY[0x263F06EA8]);
    sub_24469D528();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t InstallSheetContext.Source.WebInstallContext.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E110);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for InstallSheetContext.Source.WebInstallContext(0);
  MEMORY[0x270FA5388](v12, v13);
  unint64_t v15 = (void *)((char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24463F63C();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = a1;
  uint64_t v17 = v27;
  uint64_t v16 = v28;
  char v33 = 0;
  *unint64_t v15 = sub_24469D478();
  v15[1] = v18;
  char v32 = 1;
  void v15[2] = sub_24469D478();
  v15[3] = v19;
  char v31 = 2;
  _OWORD v15[4] = sub_24469D478();
  v15[5] = v20;
  char v30 = 3;
  uint64_t v21 = sub_24469D478();
  v24[1] = 0;
  v15[6] = v21;
  v15[7] = v22;
  sub_24469C888();
  char v29 = 4;
  sub_24463F690(&qword_268E9D5B0, MEMORY[0x263F06EA8]);
  sub_24469D458();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v16);
  sub_24463EBBC((uint64_t)v7, (uint64_t)v15 + *(int *)(v12 + 32));
  sub_24463F6F8((uint64_t)v15, v26, type metadata accessor for InstallSheetContext.Source.WebInstallContext);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_24463F760((uint64_t)v15, type metadata accessor for InstallSheetContext.Source.WebInstallContext);
}

uint64_t sub_24463B128@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.Source.WebInstallContext.init(from:)(a1, a2);
}

uint64_t sub_24463B140(void *a1)
{
  return InstallSheetContext.Source.WebInstallContext.encode(to:)(a1);
}

uint64_t InstallSheetContext.Source.isAppStore.getter()
{
  uint64_t v1 = type metadata accessor for InstallSheetContext.Source(0);
  MEMORY[0x270FA5388](v1, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for InstallSheetContext.Source;
  sub_24463F6F8(v0, (uint64_t)v4, type metadata accessor for InstallSheetContext.Source);
  uint64_t v6 = 1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v6 = 0;
      uint64_t v7 = type metadata accessor for InstallSheetContext.Source;
      goto LABEL_4;
    case 3u:
      uint64_t v6 = 0;
      uint64_t v7 = type metadata accessor for InstallSheetContext.Source.WebInstallContext;
LABEL_4:
      uint64_t v5 = v7;
      goto LABEL_5;
    case 4u:
      return v6;
    default:
LABEL_5:
      sub_24463F760((uint64_t)v4, v5);
      return v6;
  }
}

uint64_t sub_24463B280(uint64_t a1)
{
  unint64_t v2 = sub_24463F9B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463B2BC(uint64_t a1)
{
  unint64_t v2 = sub_24463F9B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24463B2F8(uint64_t a1)
{
  unint64_t v2 = sub_24463F910();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463B334(uint64_t a1)
{
  unint64_t v2 = sub_24463F910();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24463B370()
{
  unint64_t result = 0x65726F7453707061;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x7562697274736964;
      break;
    case 3:
      unint64_t result = 6448503;
      break;
    case 4:
      unint64_t result = 0x4368746957626577;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24463B42C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244644240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24463B454(uint64_t a1)
{
  unint64_t v2 = sub_24463F7C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463B490(uint64_t a1)
{
  unint64_t v2 = sub_24463F7C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24463B4CC()
{
  if (*v0) {
    return 25705;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_24463B4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244644484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24463B51C(uint64_t a1)
{
  unint64_t v2 = sub_24463F8BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463B558(uint64_t a1)
{
  unint64_t v2 = sub_24463F8BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24463B594()
{
  if (*v0) {
    return 0x65706F6C65766564;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_24463B5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244644550(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24463B600(uint64_t a1)
{
  unint64_t v2 = sub_24463F868();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463B63C(uint64_t a1)
{
  unint64_t v2 = sub_24463F868();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24463B678(uint64_t a1)
{
  unint64_t v2 = sub_24463F814();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463B6B4(uint64_t a1)
{
  unint64_t v2 = sub_24463F814();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InstallSheetContext.Source.encode(to:)(void *a1)
{
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E118);
  uint64_t v54 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66, v2);
  uint64_t v63 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for InstallSheetContext.Source.WebInstallContext(0);
  MEMORY[0x270FA5388](v60, v4);
  uint64_t v62 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E120);
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v61 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E128);
  uint64_t v53 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59, v9);
  uint64_t v58 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E130);
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E138);
  uint64_t v55 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v16);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for InstallSheetContext.Source(0);
  MEMORY[0x270FA5388](v19, v20);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E140);
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69, v23);
  char v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24463F7C0();
  uint64_t v68 = v25;
  sub_24469D728();
  sub_24463F6F8(v76, (uint64_t)v22, type metadata accessor for InstallSheetContext.Source);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v71 = 2;
      sub_24463F8BC();
      char v35 = v58;
      char v37 = v68;
      uint64_t v36 = v69;
      sub_24469D4E8();
      char v71 = 0;
      uint64_t v38 = v59;
      uint64_t v39 = v70;
      sub_24469D548();
      swift_bridgeObjectRelease();
      if (!v39)
      {
        char v71 = 1;
        sub_24469D548();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v38);
      unsigned int v51 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
      uint64_t v52 = v37;
      goto LABEL_13;
    case 2u:
      char v71 = 3;
      sub_24463F868();
      unsigned int v40 = v61;
      unsigned int v41 = v68;
      uint64_t v36 = v69;
      sub_24469D4E8();
      char v71 = 0;
      uint64_t v42 = v65;
      uint64_t v43 = v70;
      sub_24469D548();
      swift_bridgeObjectRelease();
      if (!v43)
      {
        char v71 = 1;
        sub_24469D548();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v42);
      unsigned int v51 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
      uint64_t v52 = v41;
LABEL_13:
      uint64_t result = v51(v52, v36);
      break;
    case 3u:
      uint64_t v44 = v62;
      sub_24463FA0C((uint64_t)v22, v62, type metadata accessor for InstallSheetContext.Source.WebInstallContext);
      char v71 = 4;
      sub_24463F814();
      unsigned int v45 = v63;
      char v47 = v68;
      uint64_t v46 = v69;
      sub_24469D4E8();
      sub_24463F690(&qword_268E9E158, (void (*)(uint64_t))type metadata accessor for InstallSheetContext.Source.WebInstallContext);
      uint64_t v48 = v66;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v45, v48);
      sub_24463F760(v44, type metadata accessor for InstallSheetContext.Source.WebInstallContext);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v47, v46);
      break;
    case 4u:
      char v71 = 0;
      sub_24463F9B8();
      int v50 = v68;
      uint64_t v49 = v69;
      sub_24469D4E8();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v15);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v50, v49);
      break;
    default:
      char v26 = *v22;
      uint64_t v28 = *((void *)v22 + 1);
      uint64_t v27 = *((void *)v22 + 2);
      uint64_t v30 = *((void *)v22 + 3);
      unint64_t v29 = *((void *)v22 + 4);
      char v71 = 1;
      sub_24463F910();
      char v31 = v68;
      uint64_t v32 = v69;
      sub_24469D4E8();
      char v71 = v26;
      uint64_t v72 = v28;
      uint64_t v73 = v27;
      uint64_t v74 = v30;
      unint64_t v75 = v29;
      sub_24463F964();
      uint64_t v33 = v57;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v33);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v31, v32);
      swift_bridgeObjectRelease();
      uint64_t result = sub_24463EB20(v30, v29);
      break;
  }
  return result;
}

uint64_t InstallSheetContext.Source.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E188);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v99 = v3;
  uint64_t v100 = v4;
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v104 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E190);
  uint64_t v97 = *(void *)(v7 - 8);
  uint64_t v98 = v7;
  MEMORY[0x270FA5388](v7, v8);
  v109 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E198);
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96, v10);
  uint64_t v103 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E1A0);
  uint64_t v94 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107, v12);
  uint64_t v106 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E1A8);
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93, v14);
  v102 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E1B0);
  uint64_t v105 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111, v16);
  uint64_t v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for InstallSheetContext.Source(0);
  uint64_t v20 = MEMORY[0x270FA5388](v110, v19);
  uint64_t v22 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v20, v23);
  char v26 = (uint64_t *)((char *)&v87 - v25);
  uint64_t v28 = MEMORY[0x270FA5388](v24, v27);
  uint64_t v30 = (uint64_t *)((char *)&v87 - v29);
  uint64_t v32 = MEMORY[0x270FA5388](v28, v31);
  char v34 = (char *)&v87 - v33;
  MEMORY[0x270FA5388](v32, v35);
  char v37 = (char *)&v87 - v36;
  uint64_t v38 = a1[3];
  uint64_t v112 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v38);
  sub_24463F7C0();
  v108 = v18;
  uint64_t v39 = (uint64_t)v117;
  sub_24469D708();
  if (v39) {
    goto LABEL_10;
  }
  char v90 = v34;
  char v88 = v30;
  uint64_t v91 = v22;
  char v89 = v26;
  unsigned int v41 = v106;
  uint64_t v40 = v107;
  uint64_t v42 = v108;
  uint64_t v43 = v109;
  v117 = v37;
  uint64_t v44 = sub_24469D4C8();
  if (*(void *)(v44 + 16) != 1)
  {
    uint64_t v51 = sub_24469D358();
    swift_allocError();
    uint64_t v53 = v52;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    uint64_t v54 = v111;
    *uint64_t v53 = v110;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v51 - 8) + 104))(v53, *MEMORY[0x263F8DCB0], v51);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v42, v54);
LABEL_10:
    uint64_t v69 = (uint64_t)v112;
    return __swift_destroy_boxed_opaque_existential_1(v69);
  }
  unsigned int v45 = v42;
  uint64_t v46 = v42;
  switch(*(unsigned char *)(v44 + 32))
  {
    case 1:
      char v113 = 1;
      sub_24463F910();
      uint64_t v55 = v111;
      sub_24469D408();
      sub_24463FA74();
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v41, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v42, v55);
      uint64_t v63 = v114;
      uint64_t v64 = v115;
      uint64_t v65 = v90;
      *char v90 = v113;
      *((void *)v65 + 1) = v63;
      *((void *)v65 + 2) = v64;
      *(_OWORD *)(v65 + 24) = v116;
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = (uint64_t)v65;
      goto LABEL_12;
    case 2:
      char v113 = 2;
      sub_24463F8BC();
      uint64_t v56 = v103;
      sub_24469D408();
      char v113 = 0;
      uint64_t v67 = v96;
      uint64_t v68 = v56;
      uint64_t v77 = sub_24469D478();
      uint64_t v79 = v78;
      char v113 = 1;
      v109 = (char *)sub_24469D478();
      uint64_t v80 = (void (**)(char *, uint64_t))(v105 + 8);
      uint64_t v107 = 0;
      uint64_t v85 = v84;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v68, v67);
      swift_bridgeObjectRelease();
      (*v80)(v45, v111);
      uint64_t v86 = v88;
      *char v88 = v77;
      v86[1] = v79;
      v86[2] = (uint64_t)v109;
      v86[3] = v85;
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = (uint64_t)v86;
      goto LABEL_12;
    case 3:
      char v113 = 3;
      sub_24463F868();
      uint64_t v57 = v43;
      sub_24469D408();
      char v113 = 0;
      uint64_t v58 = v98;
      uint64_t v71 = sub_24469D478();
      uint64_t v73 = v72;
      char v113 = 1;
      uint64_t v74 = sub_24469D478();
      uint64_t v106 = v75;
      uint64_t v107 = 0;
      uint64_t v76 = (void (**)(char *, uint64_t))(v105 + 8);
      uint64_t v81 = v74;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v57, v58);
      swift_bridgeObjectRelease();
      (*v76)(v46, v111);
      uint64_t v82 = v89;
      *char v89 = v71;
      v82[1] = v73;
      uint64_t v83 = v106;
      v82[2] = v81;
      v82[3] = (uint64_t)v83;
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = (uint64_t)v82;
      goto LABEL_12;
    case 4:
      char v113 = 4;
      sub_24463F814();
      uint64_t v59 = v104;
      uint64_t v60 = v111;
      sub_24469D408();
      type metadata accessor for InstallSheetContext.Source.WebInstallContext(0);
      sub_24463F690(&qword_268E9E1B8, (void (*)(uint64_t))type metadata accessor for InstallSheetContext.Source.WebInstallContext);
      uint64_t v61 = (uint64_t)v91;
      uint64_t v62 = v99;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v59, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v42, v60);
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = v61;
LABEL_12:
      uint64_t v49 = (uint64_t)v117;
      sub_24463FA0C(v66, (uint64_t)v117, type metadata accessor for InstallSheetContext.Source);
      uint64_t v50 = (uint64_t)v112;
      break;
    default:
      char v113 = 0;
      sub_24463F9B8();
      char v47 = v102;
      uint64_t v48 = v111;
      sub_24469D408();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v47, v93);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v42, v48);
      uint64_t v49 = (uint64_t)v117;
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = (uint64_t)v112;
      break;
  }
  sub_24463FA0C(v49, v101, type metadata accessor for InstallSheetContext.Source);
  uint64_t v69 = v50;
  return __swift_destroy_boxed_opaque_existential_1(v69);
}

uint64_t sub_24463CC2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.Source.init(from:)(a1, a2);
}

uint64_t sub_24463CC44(void *a1)
{
  return InstallSheetContext.Source.encode(to:)(a1);
}

BOOL static InstallSheetContext.InstallType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t InstallSheetContext.InstallType.hash(into:)()
{
  return sub_24469D688();
}

uint64_t sub_24463CCA4(uint64_t a1)
{
  unint64_t v2 = sub_24463FB70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463CCE0(uint64_t a1)
{
  unint64_t v2 = sub_24463FB70();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24463CD1C()
{
  if (*v0) {
    return 0x6C7074656B72616DLL;
  }
  else {
    return 7368801;
  }
}

uint64_t sub_24463CD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244644660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24463CD80(uint64_t a1)
{
  unint64_t v2 = sub_24463FAC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463CDBC(uint64_t a1)
{
  unint64_t v2 = sub_24463FAC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24463CDF8(uint64_t a1)
{
  unint64_t v2 = sub_24463FB1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463CE34(uint64_t a1)
{
  unint64_t v2 = sub_24463FB1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InstallSheetContext.InstallType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E1C8);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v21 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E1D0);
  uint64_t v19 = *(void *)(v6 - 8);
  uint64_t v20 = v6;
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E1D8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24463FAC8();
  sub_24469D728();
  uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
  if (v15)
  {
    char v25 = 1;
    sub_24463FB1C();
    uint64_t v17 = v21;
    sub_24469D4E8();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v23);
  }
  else
  {
    char v24 = 0;
    sub_24463FB70();
    sub_24469D4E8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  }
  return (*v16)(v14, v10);
}

uint64_t InstallSheetContext.InstallType.hashValue.getter()
{
  return sub_24469D6C8();
}

uint64_t InstallSheetContext.InstallType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v34 = a2;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E1F8);
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30, v3);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E200);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E208);
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24463FAC8();
  uint64_t v14 = v35;
  sub_24469D708();
  if (v14) {
    goto LABEL_6;
  }
  uint64_t v35 = a1;
  uint64_t v16 = v33;
  char v15 = v34;
  uint64_t v17 = v13;
  uint64_t v18 = sub_24469D4C8();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v23 = sub_24469D358();
    swift_allocError();
    char v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *char v25 = &type metadata for InstallSheetContext.InstallType;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
    a1 = v35;
LABEL_6:
    uint64_t v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v29[1] = v18;
  char v19 = *(unsigned char *)(v18 + 32);
  if (v19)
  {
    char v20 = *(unsigned char *)(v18 + 32);
    char v37 = 1;
    sub_24463FB1C();
    uint64_t v21 = v17;
    sub_24469D408();
    uint64_t v22 = v32;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v10);
    char v19 = v20;
  }
  else
  {
    char v36 = 0;
    sub_24463FB70();
    sub_24469D408();
    uint64_t v28 = v32;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v10);
  }
  *char v15 = v19;
  uint64_t v26 = (uint64_t)v35;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_24463D5B4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return InstallSheetContext.InstallType.init(from:)(a1, a2);
}

uint64_t sub_24463D5CC(void *a1)
{
  return InstallSheetContext.InstallType.encode(to:)(a1);
}

uint64_t InstallSheetContext.versionID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for InstallSheetContext(0);
  return sub_24463F6F8(v1 + *(int *)(v3 + 28), a1, type metadata accessor for InstallSheetContext.Source);
}

uint64_t InstallSheetContext.type.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for InstallSheetContext(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t InstallSheetContext.authenticationContextData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for InstallSheetContext(0) + 36);
  uint64_t v2 = *(void *)v1;
  sub_24463A288(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t InstallSheetContext.learnMoreURL.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for InstallSheetContext(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.showBiometricsForAppStoreInstall.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for InstallSheetContext(0) + 44));
}

uint64_t InstallSheetContext.init(itemID:versionID:source:type:logKey:learnMoreURL:authenticationContextData:showBiometricsForAppStoreInstall:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  char v16 = *a6;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a7;
  a9[5] = a8;
  uint64_t v17 = (int *)type metadata accessor for InstallSheetContext(0);
  uint64_t result = sub_24463FA0C(a5, (uint64_t)a9 + v17[7], type metadata accessor for InstallSheetContext.Source);
  *((unsigned char *)a9 + v17[8]) = v16;
  char v19 = (void *)((char *)a9 + v17[10]);
  void *v19 = a10;
  v19[1] = a11;
  char v20 = (void *)((char *)a9 + v17[9]);
  *char v20 = a12;
  v20[1] = a13;
  *((unsigned char *)a9 + v17[11]) = a14;
  return result;
}

unint64_t sub_24463D7F4(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x496E6F6973726576;
      break;
    case 2:
      unint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      unint64_t result = 0x656372756F73;
      break;
    case 4:
      unint64_t result = 1701869940;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0x726F4D6E7261656CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24463D8F4()
{
  return sub_24463D7F4(*v0);
}

uint64_t sub_24463D8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24464475C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24463D924(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_24463D930(uint64_t a1)
{
  unint64_t v2 = sub_24463FBE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24463D96C(uint64_t a1)
{
  unint64_t v2 = sub_24463FBE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InstallSheetContext.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E210);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24463FBE4();
  sub_24469D728();
  LOBYTE(v12) = 0;
  sub_24469D548();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_24469D4F8();
    LOBYTE(v12) = 2;
    sub_24469D548();
    uint64_t v10 = type metadata accessor for InstallSheetContext(0);
    LOBYTE(v12) = 3;
    type metadata accessor for InstallSheetContext.Source(0);
    sub_24463F690(&qword_268E9E220, (void (*)(uint64_t))type metadata accessor for InstallSheetContext.Source);
    sub_24469D568();
    LOBYTE(v12) = *(unsigned char *)(v3 + *(int *)(v10 + 32));
    char v13 = 4;
    sub_24463FC38();
    sub_24469D568();
    long long v12 = *(_OWORD *)(v3 + *(int *)(v10 + 36));
    char v13 = 5;
    sub_24463EA78();
    sub_24469D528();
    LOBYTE(v12) = 6;
    sub_24469D548();
    LOBYTE(v12) = 7;
    sub_24469D558();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t InstallSheetContext.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for InstallSheetContext.Source(0);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E230);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v9 = (int *)type metadata accessor for InstallSheetContext(0);
  MEMORY[0x270FA5388](v9, v10);
  long long v12 = (uint64_t *)((char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24463FBE4();
  uint64_t v14 = v31;
  sub_24469D708();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  uint64_t v31 = v6;
  uint64_t v15 = v28;
  LOBYTE(v32) = 0;
  *long long v12 = sub_24469D478();
  v12[1] = v16;
  LOBYTE(v32) = 1;
  v12[2] = sub_24469D428();
  uint64_t v12[3] = v17;
  LOBYTE(v32) = 2;
  v12[4] = sub_24469D478();
  v12[5] = v18;
  LOBYTE(v32) = 3;
  sub_24463F690(&qword_268E9E238, (void (*)(uint64_t))type metadata accessor for InstallSheetContext.Source);
  uint64_t v19 = (uint64_t)v31;
  sub_24469D498();
  sub_24463FA0C(v19, (uint64_t)v12 + v9[7], type metadata accessor for InstallSheetContext.Source);
  char v33 = 4;
  sub_24463FC8C();
  sub_24469D498();
  uint64_t v20 = (uint64_t)v30;
  *((unsigned char *)v12 + v9[8]) = v32;
  char v33 = 5;
  sub_24463EACC();
  sub_24469D458();
  *(_OWORD *)((char *)v12 + v9[9]) = v32;
  LOBYTE(v32) = 6;
  uint64_t v21 = sub_24469D478();
  uint64_t v22 = (uint64_t *)((char *)v12 + v9[10]);
  *uint64_t v22 = v21;
  v22[1] = v23;
  LOBYTE(v32) = 7;
  char v24 = sub_24469D488();
  (*(void (**)(void, uint64_t))(v15 + 8))(0, v29);
  *((unsigned char *)v12 + v9[11]) = v24 & 1;
  sub_24463F6F8((uint64_t)v12, v27, type metadata accessor for InstallSheetContext);
  __swift_destroy_boxed_opaque_existential_1(v20);
  return sub_24463F760((uint64_t)v12, type metadata accessor for InstallSheetContext);
}

uint64_t sub_24463E22C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.init(from:)(a1, a2);
}

uint64_t sub_24463E244(void *a1)
{
  return InstallSheetContext.encode(to:)(a1);
}

uint64_t sub_24463E25C@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_24460BBA4(a2, a3);
      uint64_t v10 = (char *)sub_24469C7B8();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_24469C7D8();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_24469C7C8();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x24463E4C0);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_24460B97C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_24469C7B8();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_24469C7D8();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_24469C7C8();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_24463E4D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_24463E25C((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_24463E5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_24469C7B8();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_24469C7D8();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_24469C7C8();
  sub_24463E25C(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_24463E660(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x24463E8C8);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_24460BBA4(a3, a4);
                  sub_24460BBA4(a1, a2);
                  char v17 = sub_24463E5A8((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_24460B97C(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_24460BBA4(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_24463E5A8(v21, v22, v20, a3, a4);
                  sub_24460B97C(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_24460BBA4(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_24460BBA4(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_24463E4D0(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_24460B97C(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

BOOL _s14MarketplaceKit19InstallSheetContextV6SourceO08AppStoredE0V2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  uint64_t v2 = a1[3];
  unint64_t v3 = a1[4];
  uint64_t v5 = a2[3];
  unint64_t v4 = a2[4];
  BOOL v6 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v6 || (v7 = sub_24469D5B8(), BOOL result = 0, (v7 & 1) != 0))
  {
    if (v3 >> 60 == 15)
    {
      if (v4 >> 60 == 15) {
        return 1;
      }
    }
    else if (v4 >> 60 != 15)
    {
      sub_24463A288(v2, v3);
      sub_24463A288(v5, v4);
      char v9 = sub_24463E660(v2, v3, v5, v4);
      sub_24463EB20(v5, v4);
      sub_24463EB20(v2, v3);
      return (v9 & 1) != 0;
    }
    sub_24463A288(v2, v3);
    sub_24463A288(v5, v4);
    sub_24463EB20(v2, v3);
    sub_24463EB20(v5, v4);
    return 0;
  }
  return result;
}

unint64_t sub_24463EA24()
{
  unint64_t result = qword_268E9E0E0;
  if (!qword_268E9E0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0E0);
  }
  return result;
}

unint64_t sub_24463EA78()
{
  unint64_t result = qword_268E9E0E8;
  if (!qword_268E9E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0E8);
  }
  return result;
}

unint64_t sub_24463EACC()
{
  unint64_t result = qword_268E9E0F8;
  if (!qword_268E9E0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E0F8);
  }
  return result;
}

uint64_t sub_24463EB20(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24460B97C(a1, a2);
  }
  return a1;
}

uint64_t type metadata accessor for InstallSheetContext.Source.WebInstallContext(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9E270);
}

uint64_t sub_24463EB54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24463EBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s14MarketplaceKit19InstallSheetContextV6SourceO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InstallSheetContext.Source.WebInstallContext(0);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v59 = (uint64_t *)((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for InstallSheetContext.Source(0);
  uint64_t v9 = MEMORY[0x270FA5388](v7, v8);
  BOOL v11 = (uint64_t *)((char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v9, v12);
  uint64_t v15 = (uint64_t *)((char *)&v58 - v14);
  uint64_t v17 = MEMORY[0x270FA5388](v13, v16);
  unint64_t v19 = (uint64_t *)((char *)&v58 - v18);
  MEMORY[0x270FA5388](v17, v20);
  uint64_t v22 = (char *)&v58 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E388);
  uint64_t v25 = MEMORY[0x270FA5388](v23 - 8, v24);
  char v27 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = &v27[*(int *)(v25 + 56)];
  sub_24463F6F8(a1, (uint64_t)v27, type metadata accessor for InstallSheetContext.Source);
  sub_24463F6F8(a2, (uint64_t)v28, type metadata accessor for InstallSheetContext.Source);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24463F6F8((uint64_t)v27, (uint64_t)v19, type metadata accessor for InstallSheetContext.Source);
      uint64_t v45 = *v19;
      uint64_t v44 = v19[1];
      uint64_t v35 = v19[2];
      uint64_t v34 = v19[3];
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_21;
      }
      uint64_t v36 = (uint64_t)v27;
      uint64_t v38 = *((void *)v28 + 2);
      uint64_t v37 = *((void *)v28 + 3);
      if (v45 == *(void *)v28 && v44 == *((void *)v28 + 1)) {
        goto LABEL_25;
      }
      goto LABEL_19;
    case 2u:
      sub_24463F6F8((uint64_t)v27, (uint64_t)v15, type metadata accessor for InstallSheetContext.Source);
      uint64_t v33 = *v15;
      uint64_t v32 = v15[1];
      uint64_t v35 = v15[2];
      uint64_t v34 = v15[3];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      uint64_t v36 = (uint64_t)v27;
      uint64_t v38 = *((void *)v28 + 2);
      uint64_t v37 = *((void *)v28 + 3);
      if (v33 == *(void *)v28 && v32 == *((void *)v28 + 1))
      {
LABEL_25:
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_19:
        char v47 = sub_24469D5B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v47 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_31:
          sub_24463F760(v36, type metadata accessor for InstallSheetContext.Source);
          return 0;
        }
      }
      if (v35 == v38 && v34 == v37)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v49 = sub_24469D5B8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v49 & 1) == 0) {
          goto LABEL_31;
        }
      }
      uint64_t v43 = v36;
LABEL_34:
      sub_24463F760(v43, type metadata accessor for InstallSheetContext.Source);
      return 1;
    case 3u:
      sub_24463F6F8((uint64_t)v27, (uint64_t)v11, type metadata accessor for InstallSheetContext.Source);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v40 = v59;
        sub_24463FA0C((uint64_t)v28, (uint64_t)v59, type metadata accessor for InstallSheetContext.Source.WebInstallContext);
        BOOL v41 = _s14MarketplaceKit19InstallSheetContextV6SourceO03WebcE0V2eeoiySbAG_AGtFZ_0(v11, v40);
        sub_24463F760((uint64_t)v40, type metadata accessor for InstallSheetContext.Source.WebInstallContext);
        sub_24463F760((uint64_t)v11, type metadata accessor for InstallSheetContext.Source.WebInstallContext);
        uint64_t v42 = (uint64_t)v27;
        goto LABEL_36;
      }
      sub_24463F760((uint64_t)v11, type metadata accessor for InstallSheetContext.Source.WebInstallContext);
      goto LABEL_23;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_23;
      }
      uint64_t v43 = (uint64_t)v27;
      goto LABEL_34;
    default:
      sub_24463F6F8((uint64_t)v27, (uint64_t)v22, type metadata accessor for InstallSheetContext.Source);
      uint64_t v30 = *((void *)v22 + 2);
      uint64_t v29 = *((void *)v22 + 3);
      unint64_t v31 = *((void *)v22 + 4);
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        sub_24463EB20(v29, v31);
LABEL_23:
        sub_24460BD08((uint64_t)v27, &qword_268E9E388);
        return 0;
      }
      else
      {
        uint64_t v50 = *((void *)v22 + 1);
        char v51 = *v28;
        uint64_t v52 = v27;
        uint64_t v53 = *((void *)v28 + 1);
        uint64_t v54 = *((void *)v28 + 2);
        uint64_t v56 = *((void *)v28 + 3);
        unint64_t v55 = *((void *)v28 + 4);
        LOBYTE(v61[0]) = *v22;
        v61[1] = v50;
        v61[2] = v30;
        v61[3] = v29;
        v61[4] = v31;
        LOBYTE(v60[0]) = v51;
        v60[1] = v53;
        v60[2] = v54;
        v60[3] = v56;
        v60[4] = v55;
        BOOL v41 = _s14MarketplaceKit19InstallSheetContextV6SourceO08AppStoredE0V2eeoiySbAG_AGtFZ_0(v61, v60);
        swift_bridgeObjectRelease();
        sub_24463EB20(v56, v55);
        swift_bridgeObjectRelease();
        sub_24463EB20(v29, v31);
        uint64_t v42 = (uint64_t)v52;
LABEL_36:
        sub_24463F760(v42, type metadata accessor for InstallSheetContext.Source);
      }
      return v41;
  }
}

BOOL _s14MarketplaceKit19InstallSheetContextV6SourceO03WebcE0V2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_24469C888();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E390);
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  uint64_t v15 = MEMORY[0x270FA5388](v13 - 8, v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v15, v18);
  uint64_t v21 = (char *)&v40 - v20;
  MEMORY[0x270FA5388](v19, v22);
  uint64_t v24 = (char *)&v40 - v23;
  if (*a1 == *a2 && a1[1] == a2[1] || (v25 = sub_24469D5B8(), BOOL result = 0, (v25 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v27 = sub_24469D5B8(), BOOL result = 0, (v27 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (v28 = sub_24469D5B8(), BOOL result = 0, (v28 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7] || (v29 = sub_24469D5B8(), BOOL result = 0, (v29 & 1) != 0))
        {
          BOOL v41 = v8;
          uint64_t v30 = v5;
          uint64_t v31 = type metadata accessor for InstallSheetContext.Source.WebInstallContext(0);
          sub_24463EB54((uint64_t)a1 + *(int *)(v31 + 32), (uint64_t)v24);
          uint64_t v32 = *(int *)(v31 + 32);
          uint64_t v33 = v30;
          sub_24463EB54((uint64_t)a2 + v32, (uint64_t)v21);
          uint64_t v34 = (uint64_t)&v12[*(int *)(v9 + 48)];
          sub_24463EB54((uint64_t)v24, (uint64_t)v12);
          sub_24463EB54((uint64_t)v21, v34);
          uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
          if (v35((uint64_t)v12, 1, v4) == 1)
          {
            sub_24460BD08((uint64_t)v21, &qword_268E9D588);
            sub_24460BD08((uint64_t)v24, &qword_268E9D588);
            if (v35(v34, 1, v4) == 1)
            {
              sub_24460BD08((uint64_t)v12, &qword_268E9D588);
              return 1;
            }
          }
          else
          {
            sub_24463EB54((uint64_t)v12, (uint64_t)v17);
            if (v35(v34, 1, v4) != 1)
            {
              uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
              uint64_t v37 = v41;
              v36(v41, v34, v4);
              sub_24463F690(&qword_268E9E398, MEMORY[0x263F06EA8]);
              char v38 = sub_24469CEF8();
              uint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
              v39(v37, v4);
              sub_24460BD08((uint64_t)v21, &qword_268E9D588);
              sub_24460BD08((uint64_t)v24, &qword_268E9D588);
              v39(v17, v4);
              sub_24460BD08((uint64_t)v12, &qword_268E9D588);
              return (v38 & 1) != 0;
            }
            sub_24460BD08((uint64_t)v21, &qword_268E9D588);
            sub_24460BD08((uint64_t)v24, &qword_268E9D588);
            (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v4);
          }
          sub_24460BD08((uint64_t)v12, &qword_268E9E390);
          return 0;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24463F63C()
{
  unint64_t result = qword_268E9E108;
  if (!qword_268E9E108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E108);
  }
  return result;
}

uint64_t sub_24463F690(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InstallSheetContext.Source(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9E260);
}

uint64_t sub_24463F6F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24463F760(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24463F7C0()
{
  unint64_t result = qword_268E9E148;
  if (!qword_268E9E148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E148);
  }
  return result;
}

unint64_t sub_24463F814()
{
  unint64_t result = qword_268E9E150;
  if (!qword_268E9E150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E150);
  }
  return result;
}

unint64_t sub_24463F868()
{
  unint64_t result = qword_268E9E160;
  if (!qword_268E9E160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E160);
  }
  return result;
}

unint64_t sub_24463F8BC()
{
  unint64_t result = qword_268E9E168;
  if (!qword_268E9E168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E168);
  }
  return result;
}

unint64_t sub_24463F910()
{
  unint64_t result = qword_268E9E170;
  if (!qword_268E9E170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E170);
  }
  return result;
}

unint64_t sub_24463F964()
{
  unint64_t result = qword_268E9E178;
  if (!qword_268E9E178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E178);
  }
  return result;
}

unint64_t sub_24463F9B8()
{
  unint64_t result = qword_268E9E180;
  if (!qword_268E9E180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E180);
  }
  return result;
}

uint64_t sub_24463FA0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24463FA74()
{
  unint64_t result = qword_268E9E1C0;
  if (!qword_268E9E1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E1C0);
  }
  return result;
}

unint64_t sub_24463FAC8()
{
  unint64_t result = qword_268E9E1E0;
  if (!qword_268E9E1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E1E0);
  }
  return result;
}

unint64_t sub_24463FB1C()
{
  unint64_t result = qword_268E9E1E8;
  if (!qword_268E9E1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E1E8);
  }
  return result;
}

unint64_t sub_24463FB70()
{
  unint64_t result = qword_268E9E1F0;
  if (!qword_268E9E1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E1F0);
  }
  return result;
}

uint64_t type metadata accessor for InstallSheetContext(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9E250);
}

unint64_t sub_24463FBE4()
{
  unint64_t result = qword_268E9E218;
  if (!qword_268E9E218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E218);
  }
  return result;
}

unint64_t sub_24463FC38()
{
  unint64_t result = qword_268E9E228;
  if (!qword_268E9E228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E228);
  }
  return result;
}

unint64_t sub_24463FC8C()
{
  unint64_t result = qword_268E9E240;
  if (!qword_268E9E240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E240);
  }
  return result;
}

unint64_t sub_24463FCE4()
{
  unint64_t result = qword_268E9E248;
  if (!qword_268E9E248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E248);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for InstallSheetContext(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for InstallSheetContext.Source(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v11 = *v12;
        uint64_t v14 = *((void *)v12 + 2);
        *((void *)v11 + 1) = *((void *)v12 + 1);
        *((void *)v11 + 2) = v14;
        uint64_t v15 = v12 + 24;
        unint64_t v16 = *((void *)v12 + 4);
        swift_bridgeObjectRetain();
        if (v16 >> 60 == 15)
        {
          *(_OWORD *)(v11 + 24) = *v15;
        }
        else
        {
          uint64_t v28 = *(void *)v15;
          sub_24460BBA4(v28, v16);
          *((void *)v11 + 3) = v28;
          *((void *)v11 + 4) = v16;
        }
        goto LABEL_12;
      case 1u:
      case 2u:
        uint64_t v18 = *((void *)v12 + 1);
        *(void *)uint64_t v11 = *(void *)v12;
        *((void *)v11 + 1) = v18;
        uint64_t v19 = *((void *)v12 + 2);
        uint64_t v20 = *((void *)v12 + 3);
        *((void *)v11 + 2) = v19;
        *((void *)v11 + 3) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 3u:
        uint64_t v21 = *((void *)v12 + 1);
        *(void *)uint64_t v11 = *(void *)v12;
        *((void *)v11 + 1) = v21;
        uint64_t v22 = *((void *)v12 + 3);
        *((void *)v11 + 2) = *((void *)v12 + 2);
        *((void *)v11 + 3) = v22;
        uint64_t v23 = *((void *)v12 + 5);
        *((void *)v11 + 4) = *((void *)v12 + 4);
        *((void *)v11 + 5) = v23;
        uint64_t v24 = *((void *)v12 + 7);
        *((void *)v11 + 6) = *((void *)v12 + 6);
        *((void *)v11 + 7) = v24;
        uint64_t v25 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        __dst = &v11[v25];
        uint64_t v42 = &v12[v25];
        uint64_t v26 = sub_24469C888();
        uint64_t v40 = *(void *)(v26 - 8);
        BOOL v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v41(v42, 1, v26))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(__dst, v42, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 16))(__dst, v42, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v26);
        }
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        break;
    }
    uint64_t v29 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v30 = (char *)v4 + v29;
    uint64_t v31 = (void *)((char *)a2 + v29);
    unint64_t v32 = *(void *)((char *)a2 + v29 + 8);
    if (v32 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    }
    else
    {
      uint64_t v33 = *v31;
      sub_24460BBA4(*v31, v32);
      *(void *)uint64_t v30 = v33;
      *((void *)v30 + 1) = v32;
    }
    uint64_t v34 = a3[10];
    uint64_t v35 = a3[11];
    uint64_t v36 = (void *)((char *)v4 + v34);
    uint64_t v37 = (void *)((char *)a2 + v34);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    *((unsigned char *)v4 + v35) = *((unsigned char *)a2 + v35);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for InstallSheetContext(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for InstallSheetContext.Source(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      unint64_t v5 = *(void *)(v4 + 32);
      if (v5 >> 60 != 15) {
        sub_24460B97C(*(void *)(v4 + 24), v5);
      }
      break;
    case 1u:
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v4 + *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      uint64_t v7 = sub_24469C888();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
      break;
    default:
      break;
  }
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(a2 + 36));
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_24460B97C(*v9, v10);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InstallSheetContext(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  unint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for InstallSheetContext.Source(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *unint64_t v10 = *v11;
      uint64_t v13 = *((void *)v11 + 2);
      *((void *)v10 + 1) = *((void *)v11 + 1);
      *((void *)v10 + 2) = v13;
      uint64_t v14 = v11 + 24;
      unint64_t v15 = *((void *)v11 + 4);
      swift_bridgeObjectRetain();
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)(v10 + 24) = *v14;
      }
      else
      {
        uint64_t v26 = *(void *)v14;
        sub_24460BBA4(v26, v15);
        *((void *)v10 + 3) = v26;
        *((void *)v10 + 4) = v15;
      }
      goto LABEL_10;
    case 1u:
    case 2u:
      uint64_t v16 = *((void *)v11 + 1);
      *(void *)unint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v16;
      uint64_t v17 = *((void *)v11 + 2);
      uint64_t v18 = *((void *)v11 + 3);
      *((void *)v10 + 2) = v17;
      *((void *)v10 + 3) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 3u:
      uint64_t v19 = *((void *)v11 + 1);
      *(void *)unint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v19;
      uint64_t v20 = *((void *)v11 + 3);
      *((void *)v10 + 2) = *((void *)v11 + 2);
      *((void *)v10 + 3) = v20;
      uint64_t v21 = *((void *)v11 + 5);
      *((void *)v10 + 4) = *((void *)v11 + 4);
      *((void *)v10 + 5) = v21;
      uint64_t v22 = *((void *)v11 + 7);
      *((void *)v10 + 6) = *((void *)v11 + 6);
      *((void *)v10 + 7) = v22;
      uint64_t v23 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      __dst = &v10[v23];
      uint64_t v40 = &v11[v23];
      uint64_t v24 = sub_24469C888();
      uint64_t v38 = *(void *)(v24 - 8);
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39(v40, 1, v24))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
        memcpy(__dst, v40, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v40, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v24);
      }
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      break;
  }
  uint64_t v27 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (void *)((char *)a2 + v27);
  unint64_t v30 = *(void *)((char *)a2 + v27 + 8);
  if (v30 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  }
  else
  {
    uint64_t v31 = *v29;
    sub_24460BBA4(*v29, v30);
    *(void *)uint64_t v28 = v31;
    *((void *)v28 + 1) = v30;
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)((char *)a1 + v32);
  uint64_t v35 = (void *)((char *)a2 + v32);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  *((unsigned char *)a1 + v33) = *((unsigned char *)a2 + v33);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InstallSheetContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[7];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_24463F760((uint64_t)a1 + v6, type metadata accessor for InstallSheetContext.Source);
    uint64_t v9 = type metadata accessor for InstallSheetContext.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v7 = *v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        unint64_t v10 = v8 + 24;
        unint64_t v11 = *((void *)v8 + 4);
        swift_bridgeObjectRetain();
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)(v7 + 24) = *v10;
        }
        else
        {
          uint64_t v15 = *(void *)v10;
          sub_24460BBA4(v15, v11);
          *((void *)v7 + 3) = v15;
          *((void *)v7 + 4) = v11;
        }
        goto LABEL_11;
      case 1u:
      case 2u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        uint64_t v12 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        __dst = &v7[v12];
        uint64_t v31 = &v8[v12];
        uint64_t v13 = sub_24469C888();
        uint64_t v28 = *(void *)(v13 - 8);
        unint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30(v31, 1, v13))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(__dst, v31, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v31, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v13);
        }
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  unint64_t v19 = *(void *)((char *)a2 + v16 + 8);
  if (*(void *)((char *)a1 + v16 + 8) >> 60 != 15)
  {
    if (v19 >> 60 != 15)
    {
      uint64_t v21 = *v18;
      sub_24460BBA4(v21, v19);
      uint64_t v22 = *v17;
      unint64_t v23 = v17[1];
      uint64_t *v17 = v21;
      v17[1] = v19;
      sub_24460B97C(v22, v23);
      goto LABEL_19;
    }
    sub_24462F218((uint64_t)v17);
    goto LABEL_17;
  }
  if (v19 >> 60 == 15)
  {
LABEL_17:
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    goto LABEL_19;
  }
  uint64_t v20 = *v18;
  sub_24460BBA4(v20, v19);
  uint64_t *v17 = v20;
  v17[1] = v19;
LABEL_19:
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

_OWORD *initializeWithTake for InstallSheetContext(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for InstallSheetContext.Source(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    long long v11 = v9[1];
    _OWORD *v8 = *v9;
    v8[1] = v11;
    long long v12 = v9[3];
    void v8[2] = v9[2];
    v8[3] = v12;
    uint64_t v13 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_24469C888();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v19 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  uint64_t v20 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  return a1;
}

void *assignWithTake for InstallSheetContext(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = a3[7];
    uint64_t v10 = (_OWORD *)((char *)a1 + v9);
    long long v11 = (_OWORD *)((char *)a2 + v9);
    sub_24463F760((uint64_t)a1 + v9, type metadata accessor for InstallSheetContext.Source);
    uint64_t v12 = type metadata accessor for InstallSheetContext.Source(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      long long v13 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v13;
      long long v14 = v11[3];
      void v10[2] = v11[2];
      v10[3] = v14;
      uint64_t v15 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      uint64_t v16 = (char *)v10 + v15;
      uint64_t v17 = (char *)v11 + v15;
      uint64_t v18 = sub_24469C888();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  uint64_t v21 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v22 = (void *)((char *)a1 + v21);
  unint64_t v23 = (void *)((char *)a2 + v21);
  unint64_t v24 = *(void *)((char *)a1 + v21 + 8);
  if (v24 >> 60 != 15)
  {
    unint64_t v25 = v23[1];
    if (v25 >> 60 != 15)
    {
      uint64_t v26 = *v22;
      *uint64_t v22 = *v23;
      v22[1] = v25;
      sub_24460B97C(v26, v24);
      goto LABEL_13;
    }
    sub_24462F218((uint64_t)v22);
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
LABEL_13:
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_244640EDC);
}

uint64_t sub_244640EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for InstallSheetContext.Source(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_244640FA0);
}

uint64_t sub_244640FA0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for InstallSheetContext.Source(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_244641048()
{
  uint64_t result = type metadata accessor for InstallSheetContext.Source(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for InstallSheetContext.Source(char *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *(unsigned char *)a2;
        uint64_t v7 = a2[2];
        *((void *)a1 + 1) = a2[1];
        *((void *)a1 + 2) = v7;
        uint64_t v8 = a2 + 3;
        unint64_t v9 = a2[4];
        swift_bridgeObjectRetain();
        if (v9 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 24) = *v8;
        }
        else
        {
          uint64_t v24 = *(void *)v8;
          sub_24460BBA4(v24, v9);
          *((void *)a1 + 3) = v24;
          *((void *)a1 + 4) = v9;
        }
        goto LABEL_12;
      case 1u:
      case 2u:
        uint64_t v12 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v12;
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        *((void *)a1 + 2) = v13;
        *((void *)a1 + 3) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v15 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v15;
        uint64_t v16 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v16;
        uint64_t v17 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v17;
        uint64_t v18 = a2[7];
        *((void *)a1 + 6) = a2[6];
        *((void *)a1 + 7) = v18;
        uint64_t v19 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        __dst = &a1[v19];
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = sub_24469C888();
        uint64_t v22 = *(void *)(v21 - 8);
        unint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25(v20, 1, v21))
        {
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for InstallSheetContext.Source(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v3 = *(void *)(a1 + 32);
      if (v3 >> 60 != 15)
      {
        uint64_t v4 = *(void *)(a1 + 24);
        uint64_t result = sub_24460B97C(v4, v3);
      }
      break;
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      uint64_t v6 = sub_24469C888();
      uint64_t v8 = *(void *)(v6 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
      if (!result)
      {
        uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
        uint64_t result = v7(v5, v6);
      }
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for InstallSheetContext.Source(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      uint64_t v6 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v6;
      uint64_t v7 = a2 + 24;
      unint64_t v8 = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      if (v8 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 24) = *v7;
      }
      else
      {
        uint64_t v21 = *(void *)v7;
        sub_24460BBA4(v21, v8);
        *((void *)a1 + 3) = v21;
        *((void *)a1 + 4) = v8;
      }
      goto LABEL_10;
    case 1u:
    case 2u:
      uint64_t v9 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v9;
      uint64_t v10 = *((void *)a2 + 2);
      uint64_t v11 = *((void *)a2 + 3);
      *((void *)a1 + 2) = v10;
      *((void *)a1 + 3) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 3u:
      uint64_t v12 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v12;
      uint64_t v13 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v13;
      uint64_t v14 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v14;
      uint64_t v15 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v15;
      uint64_t v16 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      __dst = &a1[v16];
      uint64_t v17 = &a2[v16];
      uint64_t v18 = sub_24469C888();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
        memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for InstallSheetContext.Source(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24463F760((uint64_t)a1, type metadata accessor for InstallSheetContext.Source);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v6 = a2 + 24;
        unint64_t v7 = *((void *)a2 + 4);
        swift_bridgeObjectRetain();
        if (v7 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 24) = *v6;
        }
        else
        {
          uint64_t v13 = *(void *)v6;
          sub_24460BBA4(v13, v7);
          *((void *)a1 + 3) = v13;
          *((void *)a1 + 4) = v7;
        }
        goto LABEL_11;
      case 1u:
      case 2u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        uint64_t v8 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
        __dst = &a1[v8];
        uint64_t v9 = &a2[v8];
        uint64_t v10 = sub_24469C888();
        uint64_t v11 = *(void *)(v10 - 8);
        uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16(v9, 1, v10))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
          memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
        }
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for InstallSheetContext.Source(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    long long v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24469C888();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for InstallSheetContext.Source(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24463F760((uint64_t)a1, type metadata accessor for InstallSheetContext.Source);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for InstallSheetContext.Source.WebInstallContext(0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_24469C888();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_244641E7C()
{
  uint64_t result = type metadata accessor for InstallSheetContext.Source.WebInstallContext(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    return sub_24460B97C(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = (_OWORD *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v4;
  }
  else
  {
    uint64_t v6 = *(void *)v4;
    sub_24460BBA4(v6, v5);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_24460BBA4(*v4, v5);
      uint64_t v8 = *(void *)(a1 + 24);
      unint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v5;
      sub_24460B97C(v8, v9);
      return a1;
    }
    sub_24462F218(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_24460BBA4(*v4, v5);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v5;
      *(void *)(a1 + 32) = v7;
      sub_24460B97C(v8, v6);
      return a1;
    }
    sub_24462F218(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreSheetContext()
{
  return &type metadata for InstallSheetContext.Source.AppStoreSheetContext;
}

uint64_t *initializeBufferWithCopyOfBuffer for InstallSheetContext.Source.WebInstallContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *long long v3 = *a2;
    long long v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (char *)a2 + v9;
    __dst = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v11 = sub_24469C888();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for InstallSheetContext.Source.WebInstallContext(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_24469C888();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for InstallSheetContext.Source.WebInstallContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a2 + v8;
  __dst = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v10 = sub_24469C888();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  return a1;
}

void *assignWithCopy for InstallSheetContext.Source.WebInstallContext(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24469C888();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for InstallSheetContext.Source.WebInstallContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24469C888();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithTake for InstallSheetContext.Source.WebInstallContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  int v12 = (char *)a2 + v10;
  uint64_t v13 = sub_24469C888();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.Source.WebInstallContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_244642AF8);
}

uint64_t sub_244642AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.WebInstallContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_244642BC0);
}

uint64_t sub_244642BC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_244642C6C()
{
  sub_24460AFF0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType()
{
  return &type metadata for InstallSheetContext.InstallType;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InstallSheetContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244642E78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.CodingKeys()
{
  return &type metadata for InstallSheetContext.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.CodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.AppCodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.AppCodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.MarketplaceCodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.CodingKeys()
{
  return &type metadata for InstallSheetContext.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreCodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreWithContextCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.DistributorCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.DistributorCodingKeys;
}

unsigned char *_s14MarketplaceKit19InstallSheetContextV11InstallTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244642FF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.WebCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.WebCodingKeys;
}

unsigned char *_s14MarketplaceKit19InstallSheetContextV6SourceO29AppStoreWithContextCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2446430CCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.WebWithContextCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.WebWithContextCodingKeys;
}

unsigned char *_s14MarketplaceKit19InstallSheetContextV6SourceO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2446431D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.WebInstallContext.CodingKeys()
{
  return &type metadata for InstallSheetContext.Source.WebInstallContext.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2446432D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys;
}

unint64_t sub_244643310()
{
  unint64_t result = qword_268E9E280;
  if (!qword_268E9E280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E280);
  }
  return result;
}

unint64_t sub_244643368()
{
  unint64_t result = qword_268E9E288;
  if (!qword_268E9E288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E288);
  }
  return result;
}

unint64_t sub_2446433C0()
{
  unint64_t result = qword_268E9E290;
  if (!qword_268E9E290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E290);
  }
  return result;
}

unint64_t sub_244643418()
{
  unint64_t result = qword_268E9E298;
  if (!qword_268E9E298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E298);
  }
  return result;
}

unint64_t sub_244643470()
{
  unint64_t result = qword_268E9E2A0;
  if (!qword_268E9E2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2A0);
  }
  return result;
}

unint64_t sub_2446434C8()
{
  unint64_t result = qword_268E9E2A8;
  if (!qword_268E9E2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2A8);
  }
  return result;
}

unint64_t sub_244643520()
{
  unint64_t result = qword_268E9E2B0;
  if (!qword_268E9E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2B0);
  }
  return result;
}

unint64_t sub_244643578()
{
  unint64_t result = qword_268E9E2B8;
  if (!qword_268E9E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2B8);
  }
  return result;
}

unint64_t sub_2446435D0()
{
  unint64_t result = qword_268E9E2C0;
  if (!qword_268E9E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2C0);
  }
  return result;
}

unint64_t sub_244643628()
{
  unint64_t result = qword_268E9E2C8;
  if (!qword_268E9E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2C8);
  }
  return result;
}

unint64_t sub_244643680()
{
  unint64_t result = qword_268E9E2D0;
  if (!qword_268E9E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2D0);
  }
  return result;
}

unint64_t sub_2446436D8()
{
  unint64_t result = qword_268E9E2D8;
  if (!qword_268E9E2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2D8);
  }
  return result;
}

unint64_t sub_244643730()
{
  unint64_t result = qword_268E9E2E0;
  if (!qword_268E9E2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2E0);
  }
  return result;
}

unint64_t sub_244643788()
{
  unint64_t result = qword_268E9E2E8;
  if (!qword_268E9E2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2E8);
  }
  return result;
}

unint64_t sub_2446437E0()
{
  unint64_t result = qword_268E9E2F0;
  if (!qword_268E9E2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2F0);
  }
  return result;
}

unint64_t sub_244643838()
{
  unint64_t result = qword_268E9E2F8;
  if (!qword_268E9E2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E2F8);
  }
  return result;
}

unint64_t sub_244643890()
{
  unint64_t result = qword_268E9E300;
  if (!qword_268E9E300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E300);
  }
  return result;
}

unint64_t sub_2446438E8()
{
  unint64_t result = qword_268E9E308;
  if (!qword_268E9E308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E308);
  }
  return result;
}

unint64_t sub_244643940()
{
  unint64_t result = qword_268E9E310;
  if (!qword_268E9E310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E310);
  }
  return result;
}

unint64_t sub_244643998()
{
  unint64_t result = qword_268E9E318;
  if (!qword_268E9E318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E318);
  }
  return result;
}

unint64_t sub_2446439F0()
{
  unint64_t result = qword_268E9E320;
  if (!qword_268E9E320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E320);
  }
  return result;
}

unint64_t sub_244643A48()
{
  unint64_t result = qword_268E9E328;
  if (!qword_268E9E328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E328);
  }
  return result;
}

unint64_t sub_244643AA0()
{
  unint64_t result = qword_268E9E330;
  if (!qword_268E9E330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E330);
  }
  return result;
}

unint64_t sub_244643AF8()
{
  unint64_t result = qword_268E9E338;
  if (!qword_268E9E338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E338);
  }
  return result;
}

unint64_t sub_244643B50()
{
  unint64_t result = qword_268E9E340;
  if (!qword_268E9E340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E340);
  }
  return result;
}

unint64_t sub_244643BA8()
{
  unint64_t result = qword_268E9E348;
  if (!qword_268E9E348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E348);
  }
  return result;
}

unint64_t sub_244643C00()
{
  unint64_t result = qword_268E9E350;
  if (!qword_268E9E350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E350);
  }
  return result;
}

unint64_t sub_244643C58()
{
  unint64_t result = qword_268E9E358;
  if (!qword_268E9E358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E358);
  }
  return result;
}

unint64_t sub_244643CB0()
{
  unint64_t result = qword_268E9E360;
  if (!qword_268E9E360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E360);
  }
  return result;
}

unint64_t sub_244643D08()
{
  unint64_t result = qword_268E9E368;
  if (!qword_268E9E368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E368);
  }
  return result;
}

unint64_t sub_244643D60()
{
  unint64_t result = qword_268E9E370;
  if (!qword_268E9E370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E370);
  }
  return result;
}

unint64_t sub_244643DB8()
{
  unint64_t result = qword_268E9E378;
  if (!qword_268E9E378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E378);
  }
  return result;
}

unint64_t sub_244643E10()
{
  unint64_t result = qword_268E9E380;
  if (!qword_268E9E380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E380);
  }
  return result;
}

uint64_t sub_244643E64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6F6942776F6873 && a2 == 0xEE00736369727465;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x546C6C6174736E69 && a2 == 0xEB00000000657079 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AA4E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_244643FF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xED0000656D614E72 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xEB00000000444972 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C52556E6F6369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_244644240(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726F7453707061 && a2 == 0xE800000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002446AA500 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xEB00000000726F74 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6448503 && a2 == 0xE300000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4368746957626577 && a2 == 0xEE00747865746E6FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_244644484(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244644550(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xED0000656D614E72)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244644660(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7368801 && a2 == 0xE300000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C7074656B72616DLL && a2 == 0xEB00000000656361)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24464475C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973726576 && a2 == 0xE900000000000044 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002446AA520 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F4D6E7261656CLL && a2 == 0xEC0000004C525565 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000002446AA540)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

MarketplaceKit::SecureButtonTag::ButtonImagePlacement_optional __swiftcall SecureButtonTag.ButtonImagePlacement.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (MarketplaceKit::SecureButtonTag::ButtonImagePlacement_optional)rawValue;
}

uint64_t SecureButtonTag.ButtonImagePlacement.rawValue.getter()
{
  return *v0;
}

MarketplaceKit::SecureButtonTag::ButtonImagePlacement_optional sub_244644AC0(Swift::Int *a1)
{
  return SecureButtonTag.ButtonImagePlacement.init(rawValue:)(*a1);
}

void sub_244644AC8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t static SecureButtonTag.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SecureButtonTag.label.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureButtonTag.imageName.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName);
  swift_bridgeObjectRetain();
  return v1;
}

void SecureButtonTag.imagePlacement.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement);
}

id SecureButtonTag.backgroundColor.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor);
}

id SecureButtonTag.foregroundColor.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor);
}

double SecureButtonTag.cornerRadius.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius);
}

double SecureButtonTag.size.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size);
}

double SecureButtonTag.fontSize.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize);
}

double SecureButtonTag.borderWidth.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth);
}

id SecureButtonTag.borderColor.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor);
}

id SecureButtonTag.__allocating_init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  id v27 = objc_allocWithZone(v13);
  return SecureButtonTag.init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

id SecureButtonTag.init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  int v28 = *a5;
  uint64_t v29 = &v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label];
  *uint64_t v29 = a1;
  v29[1] = a2;
  uint64_t v30 = &v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName];
  *uint64_t v30 = a3;
  v30[1] = a4;
  if (v28 == 4) {
    LOBYTE(v28) = 1;
  }
  v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement] = v28;
  *(void *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor] = a6;
  *(void *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor] = a7;
  *(double *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius] = a9;
  uint64_t v31 = (double *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size];
  *uint64_t v31 = a10;
  v31[1] = a11;
  *(double *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize] = a12;
  *(double *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth] = a13;
  *(void *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor] = a8;
  v33.receiver = v13;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, sel_init);
}

id SecureButtonTag.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_244645C84(a1);

  return v4;
}

id SecureButtonTag.init(coder:)(void *a1)
{
  id v2 = sub_244645C84(a1);

  return v2;
}

Swift::Void __swiftcall SecureButtonTag.encode(with:)(NSCoder with)
{
  id v3 = (void *)sub_24469CF78();
  id v4 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  if (*(void *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName + 8)) {
    uint64_t v5 = sub_24469CF78();
  }
  else {
    uint64_t v5 = 0;
  }
  char v6 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];
  swift_unknownObjectRelease();

  uint64_t v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement);
  int v8 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeInteger:v7 forKey:v8];

  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor);
  uint64_t v10 = (objc_class *)type metadata accessor for SerializableColor();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor] = v9;
  v37.receiver = v11;
  v37.super_class = v10;
  id v12 = v9;
  id v13 = objc_msgSendSuper2(&v37, sel_init);
  uint64_t v14 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v13 forKey:v14];

  uint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor);
  int v16 = (char *)objc_allocWithZone(v10);
  *(void *)&v16[OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor] = v15;
  v36.receiver = v16;
  v36.super_class = v10;
  id v17 = v15;
  id v18 = objc_msgSendSuper2(&v36, sel_init);
  uint64_t v19 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v18 forKey:v19];

  uint64_t v20 = (void *)sub_24469C988();
  uint64_t v21 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v20 forKey:v21];

  uint64_t v22 = (void *)sub_24469C988();
  uint64_t v23 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v22 forKey:v23];

  uint64_t v24 = (void *)sub_24469C988();
  unint64_t v25 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v24 forKey:v25];

  uint64_t v26 = (void *)sub_24469C988();
  id v27 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v26 forKey:v27];

  int v28 = (void *)sub_24469C988();
  uint64_t v29 = (void *)sub_24469CF78();
  [(objc_class *)with.super.isa encodeObject:v28 forKey:v29];

  uint64_t v30 = *(void **)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor);
  uint64_t v31 = (char *)objc_allocWithZone(v10);
  *(void *)&v31[OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor] = v30;
  v35.receiver = v31;
  v35.super_class = v10;
  id v32 = v30;
  id v33 = objc_msgSendSuper2(&v35, sel_init);
  uint64_t v34 = (void *)sub_24469CF78();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v33, v34, v35.receiver, v35.super_class, v36.receiver, v36.super_class, v37.receiver, v37.super_class);
}

uint64_t SecureButtonTag.hash.getter()
{
  uint64_t v1 = v0;
  sub_24469D6D8();
  swift_bridgeObjectRetain();
  sub_24469CFD8();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName + 8))
  {
    sub_24469D698();
    swift_bridgeObjectRetain();
    sub_24469CFD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24469D698();
  }
  sub_24469D688();
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor);
  type metadata accessor for CGColor(0);
  sub_2446460D4();
  id v3 = v2;
  sub_24469CA28();

  id v4 = *(id *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor);
  sub_24469CA28();

  sub_24469D6A8();
  sub_24469D6A8();
  sub_24469D6A8();
  sub_24469D6A8();
  sub_24469D6A8();
  id v5 = *(id *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor);
  sub_24469CA28();

  return sub_24469D6B8();
}

uint64_t SecureButtonTag.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_24464612C(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_244646194((uint64_t)v16);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    char v13 = 0;
    return v13 & 1;
  }
  BOOL v3 = *(void *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label) == *(void *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label]
    && *(void *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label + 8) == *(void *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label + 8];
  if (!v3 && (sub_24469D5B8() & 1) == 0) {
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName + 8);
  uint64_t v5 = *(void *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName + 8];
  if (v4)
  {
    if (!v5) {
      goto LABEL_27;
    }
    BOOL v6 = *(void *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName) == *(void *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName]
      && v4 == v5;
    if (!v6 && (sub_24469D5B8() & 1) == 0) {
      goto LABEL_27;
    }
  }
  else if (v5)
  {
LABEL_27:

    goto LABEL_28;
  }
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement) != v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement]) {
    goto LABEL_27;
  }
  type metadata accessor for CGColor(0);
  uint64_t v7 = *(void **)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor];
  sub_2446460D4();
  id v8 = v7;
  char v9 = sub_24469CA18();

  if ((v9 & 1) == 0) {
    goto LABEL_27;
  }
  id v10 = *(id *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor];
  char v11 = sub_24469CA18();

  if ((v11 & 1) == 0
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius]
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size]
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size + 8) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size + 8]
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize]
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth])
  {
    goto LABEL_27;
  }
  id v12 = *(id *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor];
  char v13 = sub_24469CA18();

  return v13 & 1;
}

id SecureButtonTag.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SecureButtonTag.init()()
{
}

id SecureButtonTag.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2446459C4(void *a1)
{
  uint64_t v2 = sub_24469D048();
  *(void *)(v2 + 16) = 4;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  UISGetColorSRGBComponents();
  if (!*(void *)(v2 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  BOOL v3 = (void *)sub_24469C988();
  uint64_t v4 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  if (*(void *)(v2 + 16) < 2uLL)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = (void *)sub_24469C988();
  BOOL v6 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  if (*(void *)(v2 + 16) < 3uLL)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = (void *)sub_24469C988();
  id v8 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  if (*(void *)(v2 + 16) < 4uLL)
  {
LABEL_11:
    __break(1u);
    return;
  }
  char v9 = (void *)sub_24469C988();
  id v10 = (id)sub_24469CF78();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);
  swift_bridgeObjectRelease();
}

id sub_244645C40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SerializableColor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_244645C84(void *a1)
{
  objc_super v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2446464DC();
  uint64_t v5 = v2;
  uint64_t v6 = sub_24469D1F8();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_24469CF88();
  }
  swift_bridgeObjectRelease();
  id v8 = &v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label];
  void *v8 = 0;
  v8[1] = 0xE000000000000000;
  uint64_t v9 = sub_24469D1F8();
  if (v9)
  {
    id v10 = (void *)v9;
    sub_24469CF88();
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName] = 0uLL;
  char v11 = (void *)sub_24469CF78();
  id v12 = objc_msgSend(a1, sel_decodeIntegerForKey_, v11);

  if ((unint64_t)v12 >= 4) {
    char v13 = 1;
  }
  else {
    char v13 = (char)v12;
  }
  v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement] = v13;
  type metadata accessor for SerializableColor();
  uint64_t v14 = sub_24469D1F8();
  if (!v14
    || (uint64_t v15 = (void *)v14,
        int v16 = *(void **)(v14 + OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor),
        CGColorRef GenericRGB = v16,
        v15,
        !v16))
  {
    CGColorRef GenericRGB = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 0.0);
  }
  *(void *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor] = GenericRGB;
  uint64_t v18 = sub_24469D1F8();
  if (!v18
    || (uint64_t v19 = (void *)v18,
        uint64_t v20 = *(void **)(v18 + OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor),
        CGColorRef v21 = v20,
        v19,
        !v20))
  {
    CGColorRef v21 = CGColorCreateGenericRGB(1.0, 1.0, 1.0, 1.0);
  }
  *(void *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor] = v21;
  uint64_t v22 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v22);
  uint64_t v24 = v23;

  *(void *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius] = v24;
  unint64_t v25 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v25);
  uint64_t v27 = v26;

  int v28 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v28);
  uint64_t v30 = v29;

  uint64_t v31 = &v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size];
  *uint64_t v31 = v27;
  v31[1] = v30;
  id v32 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v32);
  uint64_t v34 = v33;

  *(void *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize] = v34;
  objc_super v35 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v35);
  uint64_t v37 = v36;

  *(void *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth] = v37;
  uint64_t v38 = sub_24469D1F8();
  if (!v38
    || (uint64_t v39 = (void *)v38,
        uint64_t v40 = *(void **)(v38 + OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor),
        CGColorRef v41 = v40,
        v39,
        !v40))
  {
    CGColorRef v41 = CGColorCreateGenericRGB(1.0, 1.0, 1.0, 0.0);
  }
  *(void *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor] = v41;

  v43.receiver = v5;
  v43.super_class = ObjectType;
  return objc_msgSendSuper2(&v43, sel_init);
}

uint64_t type metadata accessor for SerializableColor()
{
  return self;
}

unint64_t sub_2446460D4()
{
  unint64_t result = qword_268E9E3F8;
  if (!qword_268E9E3F8)
  {
    type metadata accessor for CGColor(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E3F8);
  }
  return result;
}

uint64_t sub_24464612C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244646194(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E400);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2446461F8()
{
  unint64_t result = qword_268E9E408;
  if (!qword_268E9E408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E408);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonTag()
{
  return self;
}

uint64_t method lookup function for SecureButtonTag(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SecureButtonTag);
}

uint64_t dispatch thunk of SecureButtonTag.__allocating_init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of SecureButtonTag.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

unsigned char *storeEnumTagSinglePayload for SecureButtonTag.ButtonImagePlacement(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24464637CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonTag.ButtonImagePlacement()
{
  return &type metadata for SecureButtonTag.ButtonImagePlacement;
}

id sub_2446463B4(void *a1)
{
  int v3 = v1;
  unsigned int v4 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v4);
  CGFloat v6 = v5;

  uint64_t v7 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v7);
  CGFloat v9 = v8;

  id v10 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v10);
  CGFloat v12 = v11;

  char v13 = (void *)sub_24469CF78();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v13);
  CGFloat v15 = v14;

  *(void *)&v3[OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor] = CGColorCreateSRGB(v6, v9, v12, v15);
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for SerializableColor();
  return objc_msgSendSuper2(&v17, sel_init);
}

unint64_t sub_2446464DC()
{
  unint64_t result = qword_268E9E4E0;
  if (!qword_268E9E4E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268E9E4E0);
  }
  return result;
}

uint64_t static UpdateService.availableUpdate(for:checkInWithServer:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 33) = a4;
  *(void *)(v4 + 56) = a2;
  *(void *)(v4 + 64) = a3;
  *(void *)(v4 + 48) = a1;
  return MEMORY[0x270FA2498](sub_244646544, 0, 0);
}

uint64_t sub_244646544()
{
  uint64_t v1 = qword_26B0D10D0;
  uint64_t v2 = swift_bridgeObjectRetain();
  if (v1 != -1)
  {
    swift_once();
    uint64_t v2 = *(void *)(v0 + 64);
  }
  char v3 = *(unsigned char *)(v0 + 33);
  *(void *)(v0 + 16) = *(void *)(v0 + 56);
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 40) = v0 + 16;
  *(unsigned char *)(v0 + 32) = v3;
  uint64_t v7 = (char *)&dword_268E9DA78 + dword_268E9DA78;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_244646670;
  uint64_t v5 = *(void *)(v0 + 48);
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v7)(v5, v0 + 40, sub_24464681C, 0);
}

uint64_t sub_244646670()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2446467AC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    char v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2446467AC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

MarketplaceKit::UpdateMetadataRequest __swiftcall UpdateMetadataRequest.init(bundleID:shouldCheckInWithServer:)(Swift::String bundleID, Swift::Bool shouldCheckInWithServer)
{
  *(Swift::String *)uint64_t v2 = bundleID;
  *(unsigned char *)(v2 + 16) = shouldCheckInWithServer;
  result.field2446B1C4C = bundleID;
  result.field2446B1C58 = shouldCheckInWithServer;
  return result;
}

void sub_24464681C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t static UpdateService.requestUpdate(for:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(v1 + 88) = *(void *)a1;
  *(void *)(v1 + 96) = v2;
  *(_OWORD *)(v1 + 104) = *(_OWORD *)(a1 + 16);
  *(void *)(v1 + 120) = *(void *)(a1 + 32);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 40);
  *(void *)(v1 + 144) = *(void *)(a1 + 56);
  return MEMORY[0x270FA2498](sub_244646874, 0, 0);
}

uint64_t sub_244646874()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  uint64_t v8 = v0[11];
  uint64_t v7 = v0[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24461E610();
  sub_24461E664();
  v0[2] = v8;
  v0[3] = v7;
  v0[4] = v6;
  v0[5] = v5;
  v0[6] = v4;
  v0[7] = v3;
  v0[8] = v2;
  v0[10] = v0 + 2;
  v0[9] = v1;
  double v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E9DA60 + dword_268E9DA60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  CGFloat v9 = (void *)swift_task_alloc();
  v0[19] = v9;
  *CGFloat v9 = v0;
  v9[1] = sub_244646A04;
  return v11((uint64_t)(v0 + 10), (uint64_t)sub_244646CAC, 0);
}

uint64_t sub_244646A04()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244646BDC;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_244646B4C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244646B4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244646BDC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_244646CAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t UpdateMetadataRequest.bundleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadataRequest.shouldCheckInWithServer.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_244646CF8()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 0x4449656C646E7562;
  }
}

uint64_t sub_244646D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244647468(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244646D60(uint64_t a1)
{
  unint64_t v2 = sub_244647160();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244646D9C(uint64_t a1)
{
  unint64_t v2 = sub_244647160();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UpdateMetadataRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E4F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244647160();
  sub_24469D728();
  char v13 = 0;
  uint64_t v8 = v10[1];
  sub_24469D548();
  if (!v8)
  {
    char v12 = 1;
    sub_24469D558();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t UpdateMetadataRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E508);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  CGFloat v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244647160();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v10 = sub_24469D478();
  uint64_t v12 = v11;
  char v16 = 1;
  swift_bridgeObjectRetain();
  char v13 = sub_24469D488();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v13 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244647130@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UpdateMetadataRequest.init(from:)(a1, a2);
}

uint64_t sub_244647148(void *a1)
{
  return UpdateMetadataRequest.encode(to:)(a1);
}

unint64_t sub_244647160()
{
  unint64_t result = qword_268E9E500;
  if (!qword_268E9E500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E500);
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateService()
{
  return &type metadata for UpdateService;
}

uint64_t getEnumTagSinglePayload for UpdateMetadataRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateMetadataRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadataRequest()
{
  return &type metadata for UpdateMetadataRequest;
}

unsigned char *storeEnumTagSinglePayload for UpdateMetadataRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244647328);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadataRequest.CodingKeys()
{
  return &type metadata for UpdateMetadataRequest.CodingKeys;
}

unint64_t sub_244647364()
{
  unint64_t result = qword_268E9E510;
  if (!qword_268E9E510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E510);
  }
  return result;
}

unint64_t sub_2446473BC()
{
  unint64_t result = qword_268E9E518;
  if (!qword_268E9E518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E518);
  }
  return result;
}

unint64_t sub_244647414()
{
  unint64_t result = qword_268E9E520;
  if (!qword_268E9E520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E520);
  }
  return result;
}

uint64_t sub_244647468(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002446AA700)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244647560(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

unint64_t DefaultMarketplaceViewProvider.id.getter()
{
  return 0xD000000000000037;
}

uint64_t DefaultMarketplaceViewProvider.available.getter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C938();
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  swift_release();
  return v1;
}

uint64_t sub_2446476D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = DefaultMarketplaceViewProvider.available.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_244647708@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = DefaultMarketplaceViewProvider.available.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_244647738()
{
  return sub_2446477A8();
}

uint64_t sub_244647760()
{
  return sub_2446477A8();
}

uint64_t type metadata accessor for DefaultMarketplaceViewProvider(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9E540);
}

uint64_t sub_2446477A8()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v1);
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C928();
  swift_release();
  return swift_release();
}

uint64_t sub_244647908(uint64_t a1, char a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  *(unsigned char *)(a1 + 16) = a2 & 1;
  return swift_release();
}

uint64_t DefaultMarketplaceViewProvider.localizedTitle.getter()
{
  uint64_t v1 = sub_24469C8F8();
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v3 = sub_24469C848();
  uint64_t v14 = *(void *)(v3 - 8);
  uint64_t v15 = v3;
  MEMORY[0x270FA5388](v3, v4);
  char v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_24469CF68();
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v9 = sub_24469C858();
  MEMORY[0x270FA5388](v9 - 8, v10);
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  uint64_t v16 = v0;
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C938();
  swift_release();
  swift_beginAccess();
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t v12 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  if (!v12)
  {
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24469CF08();
    *char v6 = type metadata accessor for DefaultMarketplaceViewModel(0);
    (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v6, *MEMORY[0x263F06D30], v15);
    sub_24469C8E8();
    sub_24469C868();
    uint64_t v11 = sub_24469CFA8();
    swift_release();
  }
  swift_release();
  return v11;
}

uint64_t DefaultMarketplaceViewProvider.overrideLocalizedNavigationTitle.getter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C938();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

uint64_t DefaultMarketplaceViewProvider.localizedNavigationTitle.getter()
{
  uint64_t v1 = sub_24469C8F8();
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v3 = sub_24469C848();
  uint64_t v14 = *(void *)(v3 - 8);
  uint64_t v15 = v3;
  MEMORY[0x270FA5388](v3, v4);
  char v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_24469CF68();
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v9 = sub_24469C858();
  MEMORY[0x270FA5388](v9 - 8, v10);
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  uint64_t v16 = v0;
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C938();
  swift_release();
  swift_beginAccess();
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t v12 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  if (!v12)
  {
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_24469CF08();
    *char v6 = type metadata accessor for DefaultMarketplaceViewModel(0);
    (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v6, *MEMORY[0x263F06D30], v15);
    sub_24469C8E8();
    sub_24469C868();
    uint64_t v11 = sub_24469CFA8();
    swift_release();
  }
  swift_release();
  return v11;
}

uint64_t sub_244648264@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DefaultMarketplaceViewProvider.overrideLocalizedNavigationTitle.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_244648290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DefaultMarketplaceViewProvider.overrideLocalizedNavigationTitle.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2446482BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_3Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))DefaultMarketplaceViewProvider.overrideLocalizedNavigationTitle.setter);
}

uint64_t sub_2446482D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_3Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))DefaultMarketplaceViewProvider.overrideLocalizedNavigationTitle.setter);
}

uint64_t type metadata accessor for DefaultMarketplaceViewModel(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9E560);
}

uint64_t DefaultMarketplaceViewProvider.overrideLocalizedNavigationTitle.setter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v1);
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C928();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24464847C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a3;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244648558()
{
  return sub_24464847C(v0[2], v0[3], v0[4]);
}

void (*DefaultMarketplaceViewProvider.overrideLocalizedNavigationTitle.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_24469D0A8();
  v3[4] = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC14MarketplaceKit30DefaultMarketplaceViewProvider___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C938();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24469C958();
  swift_release();
  swift_beginAccess();
  return sub_2446486FC;
}

void sub_2446486FC(void **a1)
{
}

uint64_t DefaultMarketplaceViewProvider.localizedDetail.getter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C938();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

uint64_t sub_244648830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DefaultMarketplaceViewProvider.localizedDetail.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24464885C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DefaultMarketplaceViewProvider.localizedDetail.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_244648888(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_3Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))DefaultMarketplaceViewProvider.localizedDetail.setter);
}

uint64_t keypath_set_3Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_2446488E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_3Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))DefaultMarketplaceViewProvider.localizedDetail.setter);
}

uint64_t DefaultMarketplaceViewProvider.localizedDetail.setter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v1);
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C928();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244648A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = a3;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244648B4C()
{
  return sub_244648A70(v0[2], v0[3], v0[4]);
}

void (*DefaultMarketplaceViewProvider.localizedDetail.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_24469D0A8();
  v3[4] = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC14MarketplaceKit30DefaultMarketplaceViewProvider___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C938();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24469C958();
  swift_release();
  swift_beginAccess();
  return sub_244648CF0;
}

void sub_244648CF0(void **a1)
{
}

void sub_244648CFC(void **a1)
{
  uint64_t v1 = *a1;
  swift_endAccess();
  *uint64_t v1 = v1[3];
  swift_getKeyPath();
  sub_24469C948();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t DefaultMarketplaceViewProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DefaultMarketplaceViewProvider.init()();
  return v0;
}

uint64_t DefaultMarketplaceViewProvider.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24469C9D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v0 + 16) = 1;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0xE000000000000000;
  sub_24469C968();
  sub_244649184();
  sub_244649788();
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = -1;
  v19[1] = sub_2446365BC();
  uint64_t v8 = sub_24469D1C8();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v7;
  uint64_t v24 = sub_244649C7C;
  uint64_t v25 = v10;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v21 = 1107296256;
  uint64_t v22 = sub_244647560;
  uint64_t v23 = &block_descriptor_6;
  uint64_t v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  swift_beginAccess();
  notify_register_dispatch("com.apple.managedappdistributiond.priorityOrAllowedDevelopersChanged", (int *)(v7 + 16), v8, v11);
  swift_endAccess();
  _Block_release(v11);

  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = -1;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F5B650], v2);
  sub_24469C9C8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  char v13 = sub_24469D1C8();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v12;
  uint64_t v24 = sub_244649E00;
  uint64_t v25 = v15;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v21 = 1107296256;
  uint64_t v22 = sub_244647560;
  uint64_t v23 = &block_descriptor_23_0;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v17 = sub_24469CFC8();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  notify_register_dispatch((const char *)(v17 + 32), (int *)(v12 + 16), v13, v16);
  swift_endAccess();
  swift_release();
  _Block_release(v16);
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_244649184()
{
  uint64_t v0 = sub_24469C9B8();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0, v1);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2, v5);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = sub_24469C9D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24469CA08();
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469D0A8();
  uint64_t v38 = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x263F5B650], v8);
  sub_24469C9F8();
  uint64_t v37 = 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  sub_24469C9E8();
  uint64_t v17 = v35;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v4, *MEMORY[0x263F5B648], v0);
  char v18 = sub_24469C9A8();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v17 + 8);
  v19(v4, v0);
  v19(v7, v0);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v34);
  if (v18)
  {
    char v20 = 1;
    uint64_t v21 = v36;
    goto LABEL_20;
  }
  uint64_t v22 = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  _s14MarketplaceKit14AppDistributorO011synchronousD12PriorityListSaySSGvgZ_0();
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 + 16);
  if (!v25)
  {
    swift_release();
    char v20 = 0;
    goto LABEL_19;
  }
  uint64_t v35 = v22;
  swift_bridgeObjectRetain();
  uint64_t v34 = v24;
  uint64_t v26 = (uint64_t *)(v24 + 40);
  while (1)
  {
    uint64_t v29 = *(v26 - 1);
    uint64_t v28 = *v26;
    swift_bridgeObjectRetain();
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    if (v29 == 0xD000000000000012 && v28 == 0x80000002446A9B50)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_10;
    }
    char v27 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    swift_release();
    if ((v27 & 1) == 0) {
      break;
    }
LABEL_10:
    v26 += 2;
    if (!--v25)
    {
      swift_release();
      swift_bridgeObjectRelease();
      char v20 = 0;
      goto LABEL_19;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  char v20 = 1;
LABEL_19:
  uint64_t v21 = v36;
  swift_bridgeObjectRelease();
LABEL_20:
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v31);
  *(&v33 - 2) = v21;
  *((unsigned char *)&v33 - 8) = v20;
  uint64_t v39 = v21;
  sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
  sub_24469C928();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_244649788()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  _s14MarketplaceKit14AppDistributorO011synchronousD12PriorityListSaySSGvgZ_0();
  if (v0[2])
  {
    uint64_t v1 = v0[4];
    uint64_t v2 = v0[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v3 = objc_allocWithZone(MEMORY[0x263F01878]);
    id v7 = sub_24464E6F0(v1, v2, 1);
    id v8 = objc_msgSend(v7, sel_localizedName);
    sub_24469CF98();

    sub_24469D098();
    sub_24469D068();
    char isCurrentExecutor = swift_task_isCurrentExecutor();
    if ((isCurrentExecutor & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath, v11);
    sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
    sub_24469C928();
    swift_release();

    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v4 = swift_getKeyPath();
    MEMORY[0x270FA5388](v4, v5);
    sub_24464CE38(&qword_268E9E530, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
    sub_24469C928();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_244649C30()
{
  return MEMORY[0x270FA0238](v0, 20, 7);
}

uint64_t sub_244649C40()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_244649C7C(uint64_t a1)
{
  return sub_244649CB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 40, (void (*)(void))sub_244649788);
}

uint64_t sub_244649CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    a5();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    notify_cancel(*(_DWORD *)(a3 + 16));
  }
  return swift_release();
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_244649E00(uint64_t a1)
{
  return sub_244649CB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 50, (void (*)(void))sub_244649184);
}

__n128 DefaultMarketplaceViewProvider.content.getter@<Q0>(uint64_t a1@<X8>)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469CDD8();
  sub_24469CDD8();
  swift_release();
  *(void *)a1 = sub_244649F38;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  __n128 result = v3;
  *(__n128 *)(a1 + 24) = v3;
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = v3.n128_u8[0];
  *(void *)(a1 + 56) = v3.n128_u64[1];
  return result;
}

uint64_t sub_244649F38()
{
  type metadata accessor for DefaultMarketplaceViewModel(0);
  uint64_t v0 = swift_allocObject();
  sub_24464D1EC();
  return v0;
}

uint64_t sub_244649F74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v1 = sub_24469CE58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E598);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5A0);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52, v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5A8);
  MEMORY[0x270FA5388](v53, v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5B0);
  uint64_t v59 = *(void *)(v16 - 8);
  uint64_t v60 = v16;
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v54 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5B8);
  uint64_t v62 = *(void *)(v19 - 8);
  uint64_t v63 = v19;
  MEMORY[0x270FA5388](v19, v20);
  uint64_t v61 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5C0);
  uint64_t v23 = MEMORY[0x270FA5388](v55, v22);
  uint64_t v58 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23, v25);
  uint64_t v57 = (uint64_t)&v50 - v26;
  sub_24469D0A8();
  uint64_t v56 = sub_24469D098();
  sub_24469D068();
  uint64_t isCurrentExecutor = swift_task_isCurrentExecutor();
  if ((isCurrentExecutor & 1) == 0) {
    uint64_t isCurrentExecutor = swift_task_reportUnexpectedExecutor();
  }
  MEMORY[0x270FA5388](isCurrentExecutor, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5C8);
  sub_24464E318();
  sub_24469CD48();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x263F1B878], v1);
  sub_24469CE28();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E618);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v9, 0, 1, v30);
  uint64_t v31 = v53;
  id v32 = (uint64_t *)&v15[*(int *)(v53 + 36)];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E620);
  sub_24464E500((uint64_t)v9, (uint64_t)v32 + *(int *)(v33 + 28));
  *id v32 = KeyPath;
  uint64_t v34 = v51;
  uint64_t v35 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v15, v12, v52);
  sub_24460BD08((uint64_t)v9, &qword_268E9E598);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
  unint64_t v36 = sub_24464E568();
  uint64_t v37 = v54;
  sub_24469CD68();
  sub_24460BD08((uint64_t)v15, &qword_268E9E5A8);
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  long long v67 = *(_OWORD *)(v65 + 24);
  uint64_t v68 = *(void *)(v65 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E640);
  sub_24469CDE8();
  swift_release();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v38 = (_OWORD *)v65;
  long long v66 = *(_OWORD *)(v65 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E648);
  sub_24469CE08();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E650);
  *(void *)&long long v67 = v31;
  *((void *)&v67 + 1) = v36;
  swift_getOpaqueTypeConformance2();
  sub_24464E62C();
  sub_24464E894(&qword_268E9E660, &qword_268E9E650);
  uint64_t v39 = v60;
  uint64_t v40 = v61;
  sub_24469CDA8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v39);
  CGColorRef v41 = (uint64_t (*)())swift_allocObject();
  long long v42 = v38[1];
  *((_OWORD *)v41 + 1) = *v38;
  *((_OWORD *)v41 + 2) = v42;
  long long v43 = v38[3];
  *((_OWORD *)v41 + 3) = v38[2];
  *((_OWORD *)v41 + 4) = v43;
  uint64_t v45 = v62;
  uint64_t v44 = v63;
  uint64_t v46 = (uint64_t)v58;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v58, v40, v63);
  char v47 = (uint64_t (**)())(v46 + *(int *)(v55 + 36));
  *char v47 = sub_24464E684;
  v47[1] = v41;
  v47[2] = 0;
  v47[3] = 0;
  sub_24464E68C((uint64_t)v38);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v44);
  uint64_t v48 = v57;
  sub_24461EE74(v46, v57, &qword_268E9E5C0);
  sub_24461EE74(v48, v64, &qword_268E9E5C0);
  return swift_release();
}

uint64_t sub_24464A7D8()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  uint64_t isCurrentExecutor = swift_task_isCurrentExecutor();
  if ((isCurrentExecutor & 1) == 0) {
    uint64_t isCurrentExecutor = swift_task_reportUnexpectedExecutor();
  }
  MEMORY[0x270FA5388](isCurrentExecutor, v1);
  sub_24464C860(137, 0xD00000000000001ALL, 0x80000002446AA8F0, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5E0);
  sub_24464E3A0();
  sub_24469CE48();
  return swift_release();
}

uint64_t sub_24464A90C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5F0);
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E5E0);
  uint64_t v8 = MEMORY[0x270FA5388](v26, v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v11);
  uint64_t v27 = (uint64_t)&v25 - v12;
  sub_24469D0A8();
  uint64_t v25 = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  type metadata accessor for DefaultMarketplaceViewModel(0);
  sub_24464CE38(&qword_268E9E668, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewModel);
  sub_24469CCF8();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24469CCA8();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  uint64_t v13 = (_OWORD *)swift_allocObject();
  long long v14 = a1[1];
  v13[1] = *a1;
  v13[2] = v14;
  long long v15 = a1[3];
  v13[3] = a1[2];
  v13[4] = v15;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_24464E820;
  *(void *)(v16 + 24) = v13;
  sub_24464E68C((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E578);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E600);
  sub_24464E894(&qword_268E9E678, &qword_268E9E578);
  sub_24464E894(&qword_268E9E5F8, &qword_268E9E600);
  sub_24469CE38();
  uint64_t v17 = (_OWORD *)swift_allocObject();
  long long v18 = a1[1];
  v17[1] = *a1;
  void v17[2] = v18;
  long long v19 = a1[3];
  v17[3] = a1[2];
  v17[4] = v19;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_24464E930;
  *(void *)(v20 + 24) = v17;
  uint64_t v21 = v28;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v10, v6, v28);
  uint64_t v22 = &v10[*(int *)(v26 + 36)];
  *(void *)uint64_t v22 = sub_24464F940;
  *((void *)v22 + 1) = v20;
  sub_24464E68C((uint64_t)a1);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v21);
  uint64_t v23 = v27;
  sub_24461EE74((uint64_t)v10, v27, &qword_268E9E5E0);
  sub_24461EE74(v23, v29, &qword_268E9E5E0);
  return swift_release();
}

uint64_t sub_24464ADC0()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  uint64_t isCurrentExecutor = swift_task_isCurrentExecutor();
  if ((isCurrentExecutor & 1) == 0) {
    uint64_t isCurrentExecutor = swift_task_reportUnexpectedExecutor();
  }
  uint64_t v2 = MEMORY[0x270FA5388](isCurrentExecutor, v1);
  MEMORY[0x270FA5388](v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6A0);
  sub_244650010();
  sub_24469CDC8();
  return swift_release();
}

uint64_t sub_24464AF28@<X0>(uint64_t a1@<X8>)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24464E62C();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_24469CD58();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  uint64_t result = swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  return result;
}

void sub_24464B010(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  type metadata accessor for DefaultMarketplaceViewModel(0);
  sub_24464CE38(&qword_268E9E668, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewModel);
  sub_24469CCF8();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_24469CCA8();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v10 + 16) && (unint64_t v6 = sub_24467F0B4(a1, a2), (v7 & 1) != 0))
  {
    id v8 = *(id *)(*(void *)(v10 + 56) + 8 * v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v9 = v8;
    sub_24469CDB8();
    swift_retain();
    sub_24469CD38();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24469CD38();
    swift_release();
  }
  *(void *)a3 = v10;
  *(unsigned char *)(a3 + 8) = v11;
}

uint64_t sub_24464B2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24469C858();
  MEMORY[0x270FA5388](v6 - 8, v7);
  id v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_24469C918();
  uint64_t v64 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62, v10);
  uint64_t v63 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D708);
  MEMORY[0x270FA5388](v12 - 8, v13);
  long long v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469D0A8();
  uint64_t v16 = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v17 = sub_24469C908();
  if ((v18 & 1) != 0 || (unint64_t v19 = v17, v17 == a2))
  {
    return swift_release();
  }
  v50[1] = v9;
  v50[0] = v16;
  BOOL v57 = v17 < a2;
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v21 = *(void *)a3;
  uint64_t v22 = *(void *)(a3 + 8);
  uint64_t v56 = a3;
  int v23 = *(unsigned __int8 *)(a3 + 16);
  uint64_t v24 = type metadata accessor for DefaultMarketplaceViewModel(0);
  uint64_t v25 = sub_24464CE38(&qword_268E9E668, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewModel);
  uint64_t v60 = v22;
  uint64_t v61 = v21;
  uint64_t v58 = v25;
  uint64_t v59 = v24;
  sub_24469CCF8();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24469CCA8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v55 = v67;
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v26 = a2 - v57;
  LODWORD(v57) = v23;
  sub_24469CCF8();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v27 = (void (*)(long long *, void))sub_24469CC98();
  uint64_t v28 = sub_24464BC78(v19);
  uint64_t v53 = v29;
  uint64_t v54 = v28;
  uint64_t v51 = v31;
  uint64_t v52 = v30;
  v27(&v67, 0);
  swift_release();
  swift_release();
  swift_release();
  sub_24469D098();
  uint64_t v32 = MEMORY[0x263F8F500];
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469CCF8();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t result = sub_24469CC98();
  if (*(void *)(*(void *)v33 + 16) < v26)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v26 < 0)
  {
LABEL_39:
    __break(1u);
    return result;
  }
  uint64_t v34 = (void (*)(long long *, void))result;
  sub_24464F96C(v26, v26, v54, v53, v52, v51);
  v34(&v67, 0);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v35 = sub_24469D0D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v15, 1, 1, v35);
  uint64_t v36 = v32;
  uint64_t v37 = v56;
  sub_24464E68C(v56);
  uint64_t v38 = sub_24469D098();
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v38;
  *(void *)(v39 + 24) = v36;
  long long v40 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)(v39 + 32) = *(_OWORD *)v37;
  *(_OWORD *)(v39 + 48) = v40;
  long long v41 = *(_OWORD *)(v37 + 48);
  *(_OWORD *)(v39 + 64) = *(_OWORD *)(v37 + 32);
  *(_OWORD *)(v39 + 80) = v41;
  *(void *)(v39 + 96) = v55;
  sub_2446925DC((uint64_t)v15, (uint64_t)&unk_268E9E688, v39);
  swift_release();
  long long v43 = v63;
  uint64_t v42 = v64;
  uint64_t v44 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, a1, v62);
  if (v26)
  {
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v45 = sub_24469C908();
    if (v46)
    {
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
    }
    else if (v45)
    {
      (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v44);
      swift_release();
      return swift_release();
    }
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v44);
    swift_release();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  }
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469CCF8();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24469CCA8();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v67 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_24468C3E8();
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_24469CFA8();
    uint64_t v49 = v48;
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    long long v67 = *(_OWORD *)(v37 + 24);
    uint64_t v68 = *(void *)(v37 + 40);
    uint64_t v65 = v47;
    uint64_t v66 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E640);
    sub_24469CDF8();
    swift_release();
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    long long v67 = *(_OWORD *)(v37 + 48);
    LOBYTE(v65) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E648);
    sub_24469CDF8();
    swift_release();
    return swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24464BC78(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_24464FC30(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[4 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_24469D3E8();
  __break(1u);
  return result;
}

uint64_t sub_24464BD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[6] = sub_24469D0A8();
  v5[7] = sub_24469D098();
  uint64_t v7 = sub_24469D068();
  v5[8] = v7;
  v5[9] = v6;
  return MEMORY[0x270FA2498](sub_24464BE0C, v7, v6);
}

uint64_t sub_24464BE0C()
{
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 80) = *(void *)v1;
  *(void *)(v0 + 88) = *(void *)(v1 + 8);
  *(unsigned char *)(v0 + 136) = *(unsigned char *)(v1 + 16);
  *(void *)(v0 + 96) = type metadata accessor for DefaultMarketplaceViewModel(0);
  *(void *)(v0 + 104) = sub_24464CE38(&qword_268E9E668, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewModel);
  sub_24469CCF8();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24469CCA8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 16);
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_24461D760(0, v3, 0);
    uint64_t v4 = v14;
    uint64_t v5 = v2 + 56;
    do
    {
      uint64_t v6 = *(void *)(v5 - 24);
      uint64_t v7 = *(void *)(v5 - 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24461D760(0, *(void *)(v14 + 16) + 1, 1);
      }
      unint64_t v9 = *(void *)(v14 + 16);
      unint64_t v8 = *(void *)(v14 + 24);
      if (v9 >= v8 >> 1) {
        sub_24461D760(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v14 + 16) = v9 + 1;
      unint64_t v10 = v14 + 16 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v7;
      v5 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  *(void *)(v0 + 112) = v4;
  uint64_t v13 = (uint64_t (*)(uint64_t))((char *)&dword_268E9DF38 + dword_268E9DF38);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_24464C140;
  return v13(v4);
}

uint64_t sub_24464C140()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_24464C2BC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_24464C25C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24464C25C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24464C2BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v0[5];
  sub_24469CCF8();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[3] = v2;
  swift_bridgeObjectRetain();
  sub_24469CCB8();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24464C3F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E598);
  MEMORY[0x270FA5388](v2 - 8, v3);
  sub_24464E500(a1, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_24469CD28();
}

uint64_t sub_24464C480@<X0>(uint64_t a1@<X8>)
{
  v19[0] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E670);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24469C8F8();
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v7 = sub_24469C848();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (void *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_24469CF68();
  MEMORY[0x270FA5388](v12 - 8, v13);
  uint64_t v14 = sub_24469C858();
  MEMORY[0x270FA5388](v14 - 8, v15);
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469CF08();
  *uint64_t v11 = type metadata accessor for DefaultMarketplaceViewModel(0);
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F06D30], v7);
  sub_24469C8E8();
  sub_24469C868();
  v19[1] = sub_24469CFA8();
  void v19[2] = v16;
  sub_24469CCD8();
  uint64_t v17 = sub_24469CCE8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);
  sub_24464E62C();
  sub_24469CE18();
  return swift_release();
}

uint64_t sub_24464C7B0()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }

  return swift_release();
}

uint64_t sub_24464C840@<X0>(uint64_t a1@<X8>)
{
  return sub_24464C860(145, 0xD000000000000017, 0x80000002446AA8D0, a1);
}

uint64_t sub_24464C860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v25[1] = a2;
  v25[2] = a3;
  v25[0] = a1;
  uint64_t v5 = sub_24469C8F8();
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v7 = sub_24469C848();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (void *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_24469CF68();
  MEMORY[0x270FA5388](v12 - 8, v13);
  uint64_t v14 = sub_24469C858();
  MEMORY[0x270FA5388](v14 - 8, v15);
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469CF08();
  *uint64_t v11 = type metadata accessor for DefaultMarketplaceViewModel(0);
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F06D30], v7);
  sub_24469C8E8();
  sub_24469C868();
  v25[3] = sub_24469CFA8();
  v25[4] = v16;
  sub_24464E62C();
  uint64_t v17 = sub_24469CD58();
  uint64_t v19 = v18;
  char v21 = v20;
  uint64_t v23 = v22;
  uint64_t result = swift_release();
  *(void *)a4 = v17;
  *(void *)(a4 + 8) = v19;
  *(unsigned char *)(a4 + 16) = v21 & 1;
  *(void *)(a4 + 24) = v23;
  return result;
}

uint64_t sub_24464CB04()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  type metadata accessor for DefaultMarketplaceViewModel(0);
  sub_24464CE38(&qword_268E9E668, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewModel);
  sub_24469CCF8();
  swift_release();
  sub_24464D48C();
  swift_release();

  return swift_release();
}

uint64_t sub_24464CC74()
{
  return sub_24469CD98();
}

uint64_t sub_24464CC90@<X0>(uint64_t a1@<X8>)
{
  return sub_244649F74(a1);
}

uint64_t DefaultMarketplaceViewProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MarketplaceKit30DefaultMarketplaceViewProvider___observationRegistrar;
  uint64_t v2 = sub_24469C978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DefaultMarketplaceViewProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MarketplaceKit30DefaultMarketplaceViewProvider___observationRegistrar;
  uint64_t v2 = sub_24469C978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_24464CDF0()
{
  return sub_24464CE38(&qword_268E9E538, (void (*)(uint64_t))type metadata accessor for DefaultMarketplaceViewProvider);
}

uint64_t sub_24464CE38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24464CE80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24464CE9C()
{
  return sub_24464D180();
}

unint64_t sub_24464CEB0()
{
  return 0xD000000000000037;
}

uint64_t sub_24464CECC()
{
  return DefaultMarketplaceViewProvider.available.getter() & 1;
}

uint64_t sub_24464CEF4()
{
  return DefaultMarketplaceViewProvider.localizedTitle.getter();
}

uint64_t sub_24464CF18()
{
  return DefaultMarketplaceViewProvider.localizedDetail.getter();
}

uint64_t sub_24464CF3C()
{
  return DefaultMarketplaceViewProvider.localizedNavigationTitle.getter();
}

__n128 sub_24464CF60@<Q0>(uint64_t a1@<X8>)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469CDD8();
  sub_24469CDD8();
  swift_release();
  *(void *)a1 = sub_244649F38;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  __n128 result = v3;
  *(__n128 *)(a1 + 24) = v3;
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = v3.n128_u8[0];
  *(void *)(a1 + 56) = v3.n128_u64[1];
  return result;
}

uint64_t sub_24464D064()
{
  return MEMORY[0x263F8D320];
}

void sub_24464D070(void *a1@<X8>)
{
  *a1 = 0xD000000000000037;
  a1[1] = 0x80000002446AA720;
}

uint64_t sub_24464D090()
{
  return type metadata accessor for DefaultMarketplaceViewProvider(0);
}

uint64_t sub_24464D098()
{
  uint64_t result = sub_24469C978();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DefaultMarketplaceViewProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DefaultMarketplaceViewProvider);
}

uint64_t dispatch thunk of DefaultMarketplaceViewProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_24464D16C()
{
  return sub_24464D180();
}

uint64_t sub_24464D180()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24469CCA8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24464D1EC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6C0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6B8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + OBJC_IVAR____TtC14MarketplaceKit27DefaultMarketplaceViewModel__distributorList;
  uint64_t v17 = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E578);
  sub_24469CC88();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v11, v10, v6);
  uint64_t v12 = v0 + OBJC_IVAR____TtC14MarketplaceKit27DefaultMarketplaceViewModel__icons;
  uint64_t v17 = MEMORY[0x263F8EE80];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E588);
  sub_24469CC88();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v12, v5, v1);
  sub_24464D48C();
  sub_24464D97C();
  id v13 = objc_msgSend(self, sel_defaultCenter);
  swift_retain();
  uint64_t v14 = (void *)sub_24469CF78();
  objc_msgSend(v13, sel_addObserver_selector_name_object_, v0, sel_distributorListChanged, v14, 0);

  swift_release();
  return v0;
}

uint64_t sub_24464D48C()
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  _s14MarketplaceKit14AppDistributorO011synchronousD12PriorityListSaySSGvgZ_0();
  uint64_t v1 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24469CCA8();
  swift_release();
  swift_release();
  uint64_t v2 = v37;
  int64_t v3 = v37[2];
  uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v5 = v1;
    uint64_t v37 = (void *)MEMORY[0x263F8EE78];
    sub_24461D760(0, v3, 0);
    uint64_t v6 = v37;
    uint64_t v7 = v2 + 5;
    do
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      uint64_t v37 = v6;
      unint64_t v10 = v6[2];
      unint64_t v11 = v6[3];
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1)
      {
        sub_24461D760(v11 > 1, v10 + 1, 1);
        uint64_t v6 = v37;
      }
      v7 += 4;
      v6[2] = v10 + 1;
      uint64_t v12 = &v6[2 * v10];
      v12[4] = v9;
      v12[5] = v8;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v1 = v5;
    uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  }
  char v13 = sub_24464D830(v6, v1);
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    uint64_t v37 = v4;
    uint64_t v14 = v1[2];
    if (v14)
    {
      uint64_t v15 = v1 + 5;
      uint64_t v16 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v20 = *(v15 - 1);
        uint64_t v19 = *v15;
        id v21 = objc_allocWithZone(MEMORY[0x263F01878]);
        swift_bridgeObjectRetain_n();
        uint64_t v22 = (void *)sub_24469CF78();
        swift_bridgeObjectRelease();
        id v36 = 0;
        id v23 = objc_msgSend(v21, sel_initWithBundleIdentifier_allowPlaceholder_error_, v22, 1, &v36);

        if (v23)
        {
          id v24 = v36;
          id v25 = v23;
          id v26 = objc_msgSend(v25, sel_localizedName);
          uint64_t v27 = sub_24469CF98();
          uint64_t v29 = v28;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = sub_24464EA2C(0, v16[2] + 1, 1, v16);
          }
          unint64_t v31 = v16[2];
          unint64_t v30 = v16[3];
          if (v31 >= v30 >> 1) {
            uint64_t v16 = sub_24464EA2C((void *)(v30 > 1), v31 + 1, 1, v16);
          }
          v16[2] = v31 + 1;
          uint64_t v32 = &v16[4 * v31];
          v32[4] = v20;
          v32[5] = v19;
          v32[6] = v27;
          v32[7] = v29;

          uint64_t v37 = v16;
        }
        else
        {
          id v17 = v36;
          uint64_t v18 = (void *)sub_24469C838();

          swift_willThrow();
          swift_bridgeObjectRelease();
        }
        v15 += 2;
        --v14;
      }
      while (v14);
    }
    uint64_t v33 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v33, v34);
    sub_24469CE68();
    sub_24469CD08();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24464D830(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_24469D5B8(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_24469D5B8() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24464D8F8()
{
  return sub_24469CCB8();
}

uint64_t sub_24464D97C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24469CCA8();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(aBlock[0] + 16);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(aBlock[0] + 40);
    do
    {
      uint64_t v3 = *(v2 - 1);
      uint64_t v4 = *v2;
      id v5 = objc_allocWithZone(MEMORY[0x263F4B540]);
      swift_bridgeObjectRetain_n();
      char v6 = (void *)sub_24469CF78();
      swift_bridgeObjectRelease();
      id v7 = objc_msgSend(v5, sel_initWithBundleIdentifier_, v6);

      id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4B558]), sel_initWithSize_scale_, 29.0, 29.0, 3.0);
      uint64_t v9 = (void *)swift_allocObject();
      void v9[2] = v0;
      v9[3] = v3;
      v9[4] = v4;
      aBlock[4] = sub_244650114;
      aBlock[5] = v9;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24464DCD0;
      aBlock[3] = &block_descriptor_87;
      unint64_t v10 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v7, sel_getCGImageForImageDescriptor_completion_, v8, v10);
      _Block_release(v10);

      v2 += 4;
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24464DB74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    char v6 = (void *)result;
    id v7 = objc_allocWithZone(MEMORY[0x263F827E8]);
    id v8 = v6;
    id v9 = objc_msgSend(v7, sel_initWithCGImage_scale_orientation_, v8, 0, 3.0);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    id v10 = v9;
    BOOL v11 = (void (*)(unsigned char *, void))sub_24469CC98();
    char v13 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v13;
    *char v13 = 0x8000000000000000;
    sub_24464FC44((uint64_t)v10, a3, a4, isUniquelyReferenced_nonNull_native);
    *char v13 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11(v16, 0);

    swift_release();
    return swift_release();
  }
  return result;
}

void sub_24464DCD0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_24464DD3C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MarketplaceKit27DefaultMarketplaceViewModel__distributorList;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14MarketplaceKit27DefaultMarketplaceViewModel__icons;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v6 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v5, v6);
}

uint64_t sub_24464DE28()
{
  return type metadata accessor for DefaultMarketplaceViewModel(0);
}

void sub_24464DE30()
{
  sub_24464DF18(319, &qword_268E9E570, &qword_268E9E578);
  if (v0 <= 0x3F)
  {
    sub_24464DF18(319, &qword_268E9E580, &qword_268E9E588);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_24464DF18(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_24469CCC8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_24464DF6C()
{
  unint64_t result = qword_268E9E590;
  if (!qword_268E9E590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E590);
  }
  return result;
}

uint64_t sub_24464DFC0()
{
  return swift_retain();
}

uint64_t destroy for DefaultMarketplaceViewProvider.DefaultMarketplaceView()
{
  sub_24464E01C();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_24464E01C()
{
  return swift_release();
}

uint64_t initializeWithCopy for DefaultMarketplaceViewProvider.DefaultMarketplaceView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24464DFC0();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = a2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DefaultMarketplaceViewProvider.DefaultMarketplaceView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24464DFC0();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24464E01C();
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DefaultMarketplaceViewProvider.DefaultMarketplaceView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24464E01C();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultMarketplaceViewProvider.DefaultMarketplaceView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DefaultMarketplaceViewProvider.DefaultMarketplaceView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultMarketplaceViewProvider.DefaultMarketplaceView()
{
  return &type metadata for DefaultMarketplaceViewProvider.DefaultMarketplaceView;
}

uint64_t sub_24464E2A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24464E2C4()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_24464E2D0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DefaultMarketplaceViewModel(0);
  uint64_t result = sub_24469CC78();
  *a1 = result;
  return result;
}

uint64_t sub_24464E310()
{
  return sub_24464A7D8();
}

unint64_t sub_24464E318()
{
  unint64_t result = qword_268E9E5D0;
  if (!qword_268E9E5D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E5C8);
    sub_24464E3A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E5D0);
  }
  return result;
}

unint64_t sub_24464E3A0()
{
  unint64_t result = qword_268E9E5D8;
  if (!qword_268E9E5D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E5E0);
    sub_24464E440();
    sub_24464E894(&qword_268E9E608, &qword_268E9E610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E5D8);
  }
  return result;
}

unint64_t sub_24464E440()
{
  unint64_t result = qword_268E9E5E8;
  if (!qword_268E9E5E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E5F0);
    sub_24464E894(&qword_268E9E5F8, &qword_268E9E600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E5E8);
  }
  return result;
}

uint64_t sub_24464E4D8()
{
  return sub_24469CD18();
}

uint64_t sub_24464E500(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24464E568()
{
  unint64_t result = qword_268E9E628;
  if (!qword_268E9E628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E5A8);
    sub_24464E894(&qword_268E9E630, &qword_268E9E5A0);
    sub_24464E894(&qword_268E9E638, &qword_268E9E620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E628);
  }
  return result;
}

unint64_t sub_24464E62C()
{
  unint64_t result = qword_268E9E658;
  if (!qword_268E9E658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E658);
  }
  return result;
}

uint64_t sub_24464E684()
{
  return sub_24464CB04();
}

uint64_t sub_24464E68C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24464E6E8@<X0>(uint64_t a1@<X8>)
{
  return sub_24464A90C(*(_OWORD **)(v1 + 16), a1);
}

id sub_24464E6F0(uint64_t a1, uint64_t a2, char a3)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = (void *)sub_24469CF78();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_24469C838();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_24464E7CC@<X0>(void *a1@<X8>)
{
  return sub_24464E938(a1);
}

uint64_t sub_24464E7F4()
{
  return sub_24464E9B4();
}

uint64_t sub_24464E820()
{
  return sub_24464ADC0();
}

uint64_t sub_24464E828()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24464E860(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_24464E894(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_49Tm()
{
  sub_24464E01C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_24464E930(uint64_t a1, uint64_t a2)
{
  return sub_24464B2C8(a1, a2, v2 + 16);
}

uint64_t sub_24464E938@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24469CCA8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24464E9B4()
{
  return sub_24469CCB8();
}

void *sub_24464EA2C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E698);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      id v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24464FEF0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24464EB3C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D830);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24469D3B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    id v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    id v23 = (void *)(*(void *)(v4 + 48) + v16);
    *id v23 = v19;
    v23[1] = v18;
    id v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24464ECF8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24469D3B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    id v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24464EEAC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DE78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24469D3B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24464F050(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D830);
  char v42 = a2;
  uint64_t v6 = sub_24469D3C8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24469D678();
    sub_24469CFD8();
    uint64_t result = sub_24469D6C8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24464F378(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6B0);
  char v38 = a2;
  uint64_t v6 = sub_24469D3C8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_24469D678();
    sub_24469CFD8();
    uint64_t result = sub_24469D6C8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24464F688(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DE78);
  uint64_t result = sub_24469D3C8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_24469D668();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24464F940(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

char *sub_24464F96C(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  int64_t v8 = *(void **)v6;
  int64_t v9 = *(void *)(*(void *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13) {
      int64_t v17 = v9 + v12;
    }
    else {
      int64_t v17 = v9;
    }
    int64_t v8 = sub_24464EA2C(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  uint64_t v18 = &v8[4 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E690);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v12) {
    goto LABEL_20;
  }
  uint64_t v20 = v8[2];
  BOOL v21 = __OFSUB__(v20, a2);
  uint64_t v22 = v20 - a2;
  if (v21) {
    goto LABEL_26;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v18 + 4);
    int64_t v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22]) {
      uint64_t result = (char *)memmove(result, v23, 32 * v22);
    }
    uint64_t v24 = v8[2];
    BOOL v21 = __OFADD__(v24, v12);
    uint64_t v25 = v24 + v12;
    if (!v21)
    {
      void v8[2] = v25;
LABEL_20:
      void *v18 = a3;
      v18[1] = a4;
      v18[2] = a5;
      v18[3] = a6;
      *(void *)uint64_t v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_24469D3E8();
  __break(1u);
  return result;
}

uint64_t sub_24464FB08()
{
  swift_unknownObjectRelease();
  sub_24464E01C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_24464FB6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[12];
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24460BAB0;
  return sub_24464BD70(a1, v4, v5, v6, v7);
}

void *sub_24464FC30(void *a1)
{
  return sub_24464EA2C(0, a1[2], 0, a1);
}

void sub_24464FC44(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24467F0B4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24464ECF8();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_24464F378(v15, a4 & 1);
  unint64_t v20 = sub_24467F0B4(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_24469D608();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_24464FDB4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24467F12C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24464EEAC();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_24464F688(result, a3 & 1);
  uint64_t result = sub_24467F12C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24469D608();
  __break(1u);
  return result;
}

uint64_t sub_24464FEF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E690);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24469D3E8();
  __break(1u);
  return result;
}

uint64_t sub_24464FFFC@<X0>(uint64_t a1@<X8>)
{
  return sub_24464AF28(a1);
}

void sub_244650004(uint64_t a1@<X8>)
{
  sub_24464B010(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

unint64_t sub_244650010()
{
  unint64_t result = qword_268E9E6A8;
  if (!qword_268E9E6A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E6A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E6A8);
  }
  return result;
}

uint64_t sub_244650084@<X0>(void *a1@<X8>)
{
  return sub_24464E938(a1);
}

uint64_t sub_2446500AC()
{
  return sub_24464E9B4();
}

uint64_t sub_2446500D4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_244650114(uint64_t a1)
{
  return sub_24464DB74(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_244650120()
{
  return sub_24464D8F8();
}

uint64_t sub_24465013C()
{
  return sub_244647908(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_244650160()
{
  unint64_t result = qword_268E9E6C8;
  if (!qword_268E9E6C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E5C0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E5B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E650);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E5A8);
    sub_24464E568();
    swift_getOpaqueTypeConformance2();
    sub_24464E62C();
    sub_24464E894(&qword_268E9E660, &qword_268E9E650);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E6C8);
  }
  return result;
}

uint64_t sub_2446502D0()
{
  return sub_24465013C();
}

uint64_t sub_2446502E8()
{
  return sub_244648B4C();
}

uint64_t static AppLibrary.getSearchTerritory(for:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return MEMORY[0x270FA2498](sub_244650320, 0, 0);
}

uint64_t sub_244650320()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 104);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v1;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 96) = v0 + 16;
  sub_24460E990(v3, v1, 0, 0, 0, 0, 1);
  unint64_t v6 = (char *)&dword_268E9D828 + dword_268E9D828;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_24465047C;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v6)(v0 + 72, v0 + 96, sub_244654F78, 0);
}

uint64_t sub_24465047C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244650624;
  }
  else
  {
    sub_24460EA04(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    uint64_t v3 = sub_2446505A4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2446505A4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = *(void *)(v0 + 80);
  int v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 != 7)
  {
    sub_24461CE18(v1, v2, v3);
    uint64_t v1 = 0;
    unint64_t v2 = 0;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v4(v1, v2);
}

uint64_t sub_244650624()
{
  uint64_t v1 = *(void **)(v0 + 128);
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_bridgeObjectRelease();

  unint64_t v2 = *(uint64_t (**)(void, void))(v0 + 8);
  return v2(0, 0);
}

uint64_t static AppLibrary.setSearchTerritory(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  sub_24469D0A8();
  v4[14] = sub_24469D098();
  uint64_t v6 = sub_24469D068();
  v4[15] = v6;
  v4[16] = v5;
  return MEMORY[0x270FA2498](sub_24465074C, v6, v5);
}

uint64_t sub_24465074C()
{
  uint64_t v1 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  *(void *)(v0 + 136) = qword_26B0D41B0;
  return MEMORY[0x270FA2498](sub_2446507FC, 0, 0);
}

uint64_t sub_2446507FC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_24460E60C();
  sub_24460E660();
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 40) = v2;
  *(unsigned char *)(v0 + 64) = 5;
  *(void *)(v0 + 72) = v0 + 16;
  sub_24460E6B4(v4, v3, v1, v2, 0, 0, 5);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E9DB40 + dword_268E9DB40);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_244650920;
  return v7(v0 + 72, (uint64_t)sub_244650C28, 0);
}

uint64_t sub_244650920()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244650B1C;
  }
  else
  {
    sub_24460E754(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    uint64_t v3 = sub_244650A48;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244650A48()
{
  sub_24460E754(v0[10], v0[11], v0[12], v0[13], 0, 0, 5);
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  return MEMORY[0x270FA2498](sub_244650ABC, v1, v2);
}

uint64_t sub_244650ABC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244650B1C()
{
  uint64_t v1 = *(void **)(v0 + 152);
  sub_24460E754(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  return MEMORY[0x270FA2498](sub_244650B98, v2, v3);
}

uint64_t sub_244650B98()
{
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[10];
  swift_release();
  sub_24460E754(v4, v3, v2, v1, 0, 0, 5);
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void sub_244650C28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  id v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_7;
  char v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setPrivateDataRequest_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t static AppLibrary.associatedApps(developerID:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return MEMORY[0x270FA2498](sub_244650D24, 0, 0);
}

uint64_t sub_244650D24()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 104);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0x1000000000000000;
  *(unsigned char *)(v0 + 64) = 0;
  *(void *)(v0 + 96) = v0 + 16;
  sub_24460E990(v3, v1, 0, 0, 0, 0x1000000000000000uLL, 0);
  uint64_t v6 = (char *)&dword_268E9D828 + dword_268E9D828;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_244650E80;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v6)(v0 + 72, v0 + 96, sub_244654F78, 0);
}

uint64_t sub_244650E80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244651044;
  }
  else
  {
    sub_24460EA04(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    uint64_t v3 = sub_244650FA8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244650FA8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  int v2 = *(unsigned __int8 *)(v0 + 88);
  if (v2 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24461CE18(*(void *)(v0 + 72), *(void *)(v0 + 80), v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = MEMORY[0x263F8EE78];
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v1);
}

uint64_t sub_244651044()
{
  uint64_t v1 = *(void **)(v0 + 128);
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_bridgeObjectRelease();

  int v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = MEMORY[0x263F8EE78];
  return v2(v3);
}

uint64_t static AppLibrary.synchronousAssociatedApps(developerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v7 = a1;
  uint64_t v8 = a2;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unint64_t v12 = 0x1000000000000000;
  char v13 = 0;
  char v14 = &v7;
  sub_24460E990(a1, a2, 0, 0, 0, 0x1000000000000000uLL, 0);
  sub_24460C8EC(&v14, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_244654F8C, 0, &v15);
  sub_24460EA04(v7, v8, v9, v10, v11, v12, v13);
  uint64_t v5 = v15;
  if (v16 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24461CE18(v15, *((unint64_t *)&v15 + 1), v16);
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v5;
}

Swift::Void __swiftcall AppLibrary.beginIndeterminantProgress(itemID:)(Swift::UInt64 itemID)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  AppLibrary.beginIndeterminantProgress(itemID:versionID:version:shortVersion:account:)(itemID, 0, v2, v3, (Swift::String_optional)0);

  swift_release();
}

Swift::Void __swiftcall AppLibrary.beginIndeterminantProgress(itemID:versionID:version:shortVersion:account:)(Swift::UInt64 itemID, Swift::UInt64 versionID, Swift::String version, Swift::String shortVersion, Swift::String_optional account)
{
  object = account.value._object;
  int64_t v33 = shortVersion._object;
  uint64_t countAndFlagsBits = account.value._countAndFlagsBits;
  uint64_t v6 = shortVersion._countAndFlagsBits;
  uint64_t v7 = version._object;
  uint64_t v8 = version._countAndFlagsBits;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v30 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469D0A8();
  uint64_t v29 = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v31 = v5;
  uint64_t v14 = AppLibrary.app(forAppleItemID:)(itemID);
  id v15 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
  char v16 = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v33;
  swift_bridgeObjectRetain();
  id v18 = sub_244688CF4(itemID);
  v35[0] = versionID;
  v35[1] = v8;
  uint64_t v28 = v7;
  v35[2] = v7;
  v35[3] = v6;
  v35[4] = v17;
  v35[5] = countAndFlagsBits;
  v35[6] = v16;
  v35[7] = v18;
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v20);
  *(&v26 - 2) = v14;
  *(&v26 - 1) = (uint64_t)v35;
  uint64_t v21 = v14 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
  uint64_t v34 = v14;
  sub_244651EBC();
  uint64_t countAndFlagsBits = v21;
  sub_24469C928();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = type metadata accessor for MarketplaceKitError();
  uint64_t v23 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v30, 1, 1, v22);
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v24 = swift_getKeyPath();
  MEMORY[0x270FA5388](v24, v25);
  *(&v26 - 2) = v14;
  *(&v26 - 1) = v23;
  uint64_t v34 = v14;
  sub_24469C928();
  swift_release();
  sub_244651F58(v23);
  swift_release();
  AppLibrary.updateInstallState(forUpdated:)(v14);
  swift_release();
  swift_release();
}

uint64_t AppLibrary.resetAppToAvailable(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v13 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469D0A8();
  v12[1] = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  memset(v15, 0, sizeof(v15));
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v6);
  v12[-2] = a1;
  v12[-1] = v15;
  uint64_t v14 = a1;
  sub_244651EBC();
  sub_24469C928();
  swift_release();
  swift_release();
  uint64_t v7 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v13, 1, 1, v7);
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v8 = swift_getKeyPath();
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v10 = (uint64_t)v13;
  v12[-2] = a1;
  v12[-1] = v10;
  uint64_t v14 = a1;
  sub_24469C928();
  swift_release();
  sub_244651F58(v10);
  swift_release();
  AppLibrary.updateInstallState(forUpdated:)(a1);
  return swift_release();
}

uint64_t RepairRequest.bundleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RepairRequest.isBackground.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RepairRequest.reason.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t RepairRequest.init(bundleID:isBackground:reason:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  return result;
}

uint64_t AppLibrary.handleRepairRequest(_:)(uint64_t a1)
{
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  *(unsigned char *)(v1 + 41) = *(unsigned char *)(a1 + 16);
  *(void *)(v1 + 72) = *(void *)(a1 + 24);
  return MEMORY[0x270FA2498](sub_244651A48, 0, 0);
}

uint64_t sub_244651A48()
{
  unint64_t v3 = *(void *)(v2 + 72);
  if (v3 >> 31)
  {
    __break(1u);
  }
  else
  {
    int v1 = *(unsigned __int8 *)(v2 + 41);
    uint64_t v0 = *(void *)(v2 + 64);
    uint64_t v4 = qword_26B0D10D0;
    swift_bridgeObjectRetain();
    if (v4 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v5 = v1 ^ 1u | (v3 << 32);
  uint64_t v6 = *(void *)(v2 + 56);
  *(void *)(v2 + 16) = v6;
  *(void *)(v2 + 24) = v0;
  *(void *)(v2 + 32) = v5;
  *(unsigned char *)(v2 + 40) = 1;
  *(void *)(v2 + 48) = v2 + 16;
  sub_24461E55C(v6, v0, v5, 1u);
  uint64_t v9 = (uint64_t (*)(void))&aPw0[*(int *)aPw0];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 80) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_244651B9C;
  return v9();
}

uint64_t sub_244651B9C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_244651CCC;
  }
  else
  {
    sub_24461E57C(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
    swift_bridgeObjectRelease();
    unint64_t v3 = sub_2446350AC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244651CCC()
{
  sub_24461E57C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

double sub_244651D44@<D0>(_OWORD *a1@<X8>)
{
  AppLibrary.App.installation.getter((uint64_t *)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_244651D88(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  long long v7 = (void *)a1[7];
  v9[0] = *a1;
  v9[1] = v1;
  void v9[2] = v2;
  v9[3] = v3;
  v9[4] = v4;
  v9[5] = v5;
  v9[6] = v6;
  v9[7] = (uint64_t)v7;
  sub_2446521AC(v9[0], v1, v2, v3, v4, v5, v6, v7);
  return sub_244682788((uint64_t)v9);
}

uint64_t sub_244651DE4@<X0>(uint64_t a1@<X8>)
{
  return AppLibrary.App.installationError.getter(a1);
}

uint64_t sub_244651E08(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244652144(a1, (uint64_t)v5);
  return sub_24468291C((uint64_t)v5);
}

uint64_t sub_244651EA0()
{
  return sub_2446875A4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_244651EBC()
{
  unint64_t result = qword_268E9E6F0;
  if (!qword_268E9E6F0)
  {
    type metadata accessor for AppLibrary.App();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E6F0);
  }
  return result;
}

uint64_t sub_244651F14@<X0>(uint64_t a1@<X8>)
{
  return AppLibrary.App.installationError.getter(a1);
}

uint64_t sub_244651F3C()
{
  return sub_244687800(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_244651F58(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithCopy for RepairRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RepairRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for RepairRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepairRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairRequest()
{
  return &type metadata for RepairRequest;
}

uint64_t sub_244652144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2446521AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    id v9 = a8;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24465220C()
{
  return sub_244651EA0();
}

uint64_t sub_244652224()
{
  return sub_244651F3C();
}

__n128 FetchPrivateDataRequest.init(request:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(unsigned char *)(a2 + 48) = v2;
  return result;
}

uint64_t FetchPrivateDataRequest.run()(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 104) = v3;
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v1 + 32);
  *(unsigned char *)(v2 + 65) = *(unsigned char *)(v1 + 48);
  return MEMORY[0x270FA2498](sub_244652294, 0, 0);
}

uint64_t sub_244652294()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 65);
  uint64_t v2 = *(void *)(v0 + 120);
  unint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 96);
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v7;
  *(void *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = v5;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v3;
  *(unsigned char *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = v0 + 16;
  sub_24460E990(v6, v7, v4, v5, v2, v3, v1);
  uint64_t v11 = (char *)&dword_268E9D828 + dword_268E9D828;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v8;
  void *v8 = v0;
  v8[1] = sub_2446523C8;
  uint64_t v9 = *(void *)(v0 + 80);
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v11)(v9, v0 + 72, sub_244654F78, 0);
}

uint64_t sub_2446523C8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_244652510, 0, 0);
  }
  else
  {
    sub_24460EA04(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_244652510()
{
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t FetchPrivateDataRequest.runSynchronously()@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  unint64_t v8 = *(void *)(v1 + 40);
  char v9 = *(unsigned char *)(v1 + 48);
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  uint64_t v15 = v7;
  unint64_t v16 = v8;
  char v17 = v9;
  id v18 = &v11;
  sub_24460E990(v3, v4, v5, v6, v7, v8, v9);
  sub_24460C8EC(&v18, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_244654F8C, 0, a1);
  return sub_24460EA04(v11, v12, v13, v14, v15, v16, v17);
}

uint64_t SetPrivateDataRequest.run()()
{
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 96) = v2;
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(v0 + 32);
  *(unsigned char *)(v1 + 65) = *(unsigned char *)(v0 + 48);
  return MEMORY[0x270FA2498](sub_2446526C4, 0, 0);
}

uint64_t sub_2446526C4()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  char v7 = *(unsigned char *)(v0 + 65);
  sub_24460E6B4(v6, v5, v4, v3, v2, v1, v7);
  sub_24460E60C();
  sub_24460E660();
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v1;
  *(unsigned char *)(v0 + 64) = v7;
  *(void *)(v0 + 72) = v0 + 16;
  sub_24460E6B4(v6, v5, v4, v3, v2, v1, v7);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E9DB40 + dword_268E9DB40);
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v8;
  void *v8 = v0;
  v8[1] = sub_244652850;
  return v10(v0 + 72, (uint64_t)sub_24465A48C, 0);
}

uint64_t sub_244652850()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2446529E8;
  }
  else
  {
    sub_24460E754(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    uint64_t v3 = sub_244652978;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244652978()
{
  sub_24460E754(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(unsigned char *)(v0 + 65));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2446529E8()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  char v7 = *(unsigned char *)(v0 + 65);
  sub_24460E754(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_24460E754(v6, v5, v4, v3, v1, v2, v7);
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SetPrivateDataRequest.runSynchronously()()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  char v7 = *(unsigned char *)(v0 + 48);
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  sub_24460E60C();
  sub_24460E660();
  uint64_t v8 = v1;
  uint64_t v9 = v2;
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  char v14 = v7;
  uint64_t v15 = &v8;
  sub_24460E6B4(v1, v2, v3, v4, v5, v6, v7);
  sub_24460E6B4(v1, v2, v3, v4, v5, v6, v7);
  sub_24460CE6C(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_24465A4A0, 0);
  sub_24460E754(v8, v9, v10, v11, v12, v13, v14);
  sub_24460E754(v1, v2, v3, v4, v5, v6, v7);
}

unint64_t sub_244652BF0(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x746169636F737361;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_244652D00(uint64_t a1)
{
  unint64_t v2 = sub_24465D9DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244652D3C(uint64_t a1)
{
  unint64_t v2 = sub_24465D9DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244652D7C(uint64_t a1)
{
  unint64_t v2 = sub_24465D988();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244652DB8(uint64_t a1)
{
  unint64_t v2 = sub_24465D988();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244652DF4()
{
  return 0x65706F6C65766564;
}

uint64_t sub_244652E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65706F6C65766564 && a2 == 0xEB00000000444972)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_244652EC4(uint64_t a1)
{
  unint64_t v2 = sub_24465D934();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244652F00(uint64_t a1)
{
  unint64_t v2 = sub_24465D934();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_244652F3C()
{
  return sub_244652BF0(*v0);
}

uint64_t sub_244652F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244664170(a1, a2);
  *a3 = result;
  return result;
}

void sub_244652F6C(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_244652F78(uint64_t a1)
{
  unint64_t v2 = sub_24465D694();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244652FB4(uint64_t a1)
{
  unint64_t v2 = sub_24465D694();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244652FF0(uint64_t a1)
{
  unint64_t v2 = sub_24465D8E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465302C(uint64_t a1)
{
  unint64_t v2 = sub_24465D8E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244653068(uint64_t a1)
{
  unint64_t v2 = sub_24465D6E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446530A4(uint64_t a1)
{
  unint64_t v2 = sub_24465D6E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2446530E0(uint64_t a1)
{
  unint64_t v2 = sub_24465D838();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465311C(uint64_t a1)
{
  unint64_t v2 = sub_24465D838();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244653158(uint64_t a1)
{
  unint64_t v2 = sub_24465D73C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244653194(uint64_t a1)
{
  unint64_t v2 = sub_24465D73C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2446531D0(uint64_t a1)
{
  unint64_t v2 = sub_24465D790();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465320C(uint64_t a1)
{
  unint64_t v2 = sub_24465D790();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244653248(uint64_t a1)
{
  unint64_t v2 = sub_24465D7E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244653284(uint64_t a1)
{
  unint64_t v2 = sub_24465D7E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FetchPrivateDataRequest.Request.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1218);
  unint64_t v93 = *(void *)(v3 - 8);
  uint64_t v94 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v92 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1250);
  unint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91, v6);
  uint64_t v87 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1248);
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73, v8);
  uint64_t v71 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1220);
  unint64_t v84 = *(void *)(v10 - 8);
  uint64_t v85 = v10;
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v83 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1230);
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90, v13);
  uint64_t v86 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1240);
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70, v15);
  uint64_t v68 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1210);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82, v17);
  uint64_t v80 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1228);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79, v19);
  uint64_t v77 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1238);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76, v21);
  uint64_t v74 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1208);
  uint64_t v96 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100, v23);
  unint64_t v99 = *(void *)v1;
  unint64_t v25 = *(void *)(v1 + 16);
  unint64_t v95 = *(void *)(v1 + 8);
  unint64_t v26 = *(void *)(v1 + 24);
  uint64_t v27 = *(void *)(v1 + 32);
  unint64_t v28 = *(void *)(v1 + 40);
  int v29 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v30 = a1[3];
  uint64_t v31 = a1;
  uint64_t v32 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v31, v30);
  sub_24465D694();
  uint64_t v98 = v32;
  sub_24469D728();
  if (v29) {
    int v33 = 4;
  }
  else {
    int v33 = 0;
  }
  switch((v28 >> 60) & 3 | v33)
  {
    case 1uLL:
      LOBYTE(v101) = 2;
      sub_24465D934();
      int64_t v40 = v80;
      uint64_t v41 = v100;
      char v42 = v98;
      sub_24469D4E8();
      uint64_t v43 = v82;
      sub_24469D548();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v40, v43);
      char v38 = *(uint64_t (**)(char *, uint64_t))(v96 + 8);
      uint64_t v39 = v42;
      goto LABEL_14;
    case 2uLL:
      char v44 = v29;
      unsigned int v45 = v99;
      unint64_t v46 = HIDWORD(v99);
      unsigned int v47 = v95;
      unint64_t v89 = HIDWORD(v95);
      uint64_t v91 = HIDWORD(v25);
      uint64_t v92 = (char *)HIDWORD(v26);
      LOBYTE(v101) = 4;
      unint64_t v93 = v28;
      uint64_t v94 = v27;
      uint64_t v87 = (char *)(v28 & 0xCFFFFFFFFFFFFFFFLL);
      sub_24460BBA4(v27, v28 & 0xCFFFFFFFFFFFFFFFLL);
      sub_24465D838();
      uint64_t v48 = v86;
      sub_24469D4E8();
      unint64_t v101 = __PAIR64__(v46, v45);
      unint64_t v102 = __PAIR64__(v89, v47);
      int v103 = v25;
      int v104 = v91;
      int v105 = v26;
      int v106 = (int)v92;
      char v107 = 0;
      sub_24465D88C();
      uint64_t v49 = v90;
      uint64_t v50 = v97;
      sub_24469D568();
      if (v50)
      {
        sub_24460EA04(v99, v95, v25, v26, v94, v93, v44);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v48, v49);
        return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v98, v100);
      }
      else
      {
        uint64_t v66 = v94;
        unint64_t v101 = v94;
        unint64_t v102 = (unint64_t)v87;
        char v107 = 1;
        sub_24463EA78();
        sub_24469D568();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v48, v49);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v98, v100);
        return sub_24460EA04(v99, v95, v25, v26, v66, v93, v44);
      }
    case 3uLL:
      LOBYTE(v101) = 5;
      sub_24465D7E4();
      uint64_t v52 = v83;
      uint64_t v35 = v100;
      uint64_t v53 = v98;
      sub_24469D4E8();
      uint64_t v54 = v85;
      sub_24469D548();
      unint64_t v55 = v84;
      goto LABEL_11;
    case 4uLL:
      LOBYTE(v101) = 7;
      sub_24465D73C();
      uint64_t v52 = v87;
      uint64_t v35 = v100;
      uint64_t v53 = v98;
      sub_24469D4E8();
      uint64_t v54 = v91;
      sub_24469D548();
      unint64_t v55 = v89;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
      char v38 = *(uint64_t (**)(char *, uint64_t))(v96 + 8);
      uint64_t v39 = v53;
      goto LABEL_12;
    case 5uLL:
      LOBYTE(v101) = 8;
      sub_24465D6E8();
      BOOL v57 = v92;
      uint64_t v41 = v100;
      uint64_t v58 = v98;
      sub_24469D4E8();
      unint64_t v101 = v99;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D848);
      sub_24465DF1C(&qword_268E9D850, &qword_268E9D848, (void (*)(void))sub_24461CED4);
      uint64_t v59 = v94;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v57, v59);
      char v38 = *(uint64_t (**)(char *, uint64_t))(v96 + 8);
      uint64_t v39 = v58;
LABEL_14:
      uint64_t v56 = v41;
      return v38(v39, v56);
    case 6uLL:
      unint64_t v60 = v26;
      uint64_t v61 = v25 | v95 | v99 | v26 | v27;
      uint64_t v62 = v100;
      if (v61 || v28 != 0x2000000000000000)
      {
        uint64_t v64 = v98;
        if (v28 == 0x2000000000000000 && v99 == 1 && !(v25 | v95 | v60 | v27))
        {
          LOBYTE(v101) = 3;
          sub_24465D8E0();
          uint64_t v65 = v68;
          sub_24469D4E8();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v70);
        }
        else
        {
          LOBYTE(v101) = 6;
          sub_24465D790();
          long long v67 = v71;
          sub_24469D4E8();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v67, v73);
        }
      }
      else
      {
        LOBYTE(v101) = 0;
        sub_24465D9DC();
        uint64_t v63 = v74;
        uint64_t v64 = v98;
        sub_24469D4E8();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v63, v76);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v64, v62);
    default:
      LOBYTE(v101) = 1;
      sub_24465D988();
      uint64_t v34 = v77;
      uint64_t v35 = v100;
      int64_t v36 = v98;
      sub_24469D4E8();
      uint64_t v37 = v79;
      sub_24469D548();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v34, v37);
      char v38 = *(uint64_t (**)(char *, uint64_t))(v96 + 8);
      uint64_t v39 = v36;
LABEL_12:
      uint64_t v56 = v35;
      return v38(v39, v56);
  }
}

uint64_t FetchPrivateDataRequest.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FB8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v106 = v3;
  uint64_t v107 = v4;
  MEMORY[0x270FA5388](v3, v5);
  *(void *)&long long v116 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FF0);
  uint64_t v105 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115, v7);
  uint64_t v111 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FE8);
  uint64_t v100 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102, v9);
  uint64_t v110 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FC0);
  uint64_t v101 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103, v11);
  v109 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FD0);
  uint64_t v104 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99, v13);
  uint64_t v114 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FE0);
  uint64_t v97 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96, v15);
  char v113 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FB0);
  uint64_t v98 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93, v17);
  v108 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FC8);
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95, v19);
  uint64_t v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FD8);
  uint64_t v92 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22, v23);
  unint64_t v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FA8);
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26, v28);
  uint64_t v30 = (char *)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1[3];
  v117 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_24465D694();
  uint64_t v32 = v118;
  sub_24469D708();
  if (v32) {
    goto LABEL_23;
  }
  uint64_t v90 = v25;
  uint64_t v89 = v22;
  int v33 = v113;
  uint64_t v34 = v114;
  uint64_t v91 = 0;
  uint64_t v35 = v115;
  uint64_t v36 = v116;
  uint64_t v118 = v27;
  uint64_t v37 = sub_24469D4C8();
  if (*(void *)(v37 + 16) != 1)
  {
    unint64_t v46 = v30;
    uint64_t v47 = v26;
    uint64_t v48 = sub_24469D358();
    swift_allocError();
    uint64_t v50 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    void *v50 = &type metadata for FetchPrivateDataRequest.Request;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v48 - 8) + 104))(v50, *MEMORY[0x263F8DCB0], v48);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v118 + 8))(v46, v47);
LABEL_23:
    uint64_t v86 = (uint64_t)v117;
    return __swift_destroy_boxed_opaque_existential_1(v86);
  }
  switch(*(unsigned char *)(v37 + 32))
  {
    case 1:
      LOBYTE(v121) = 1;
      sub_24465D988();
      uint64_t v51 = v91;
      sub_24469D408();
      if (v51) {
        goto LABEL_22;
      }
      uint64_t v52 = v26;
      uint64_t v53 = v95;
      uint64_t v40 = sub_24469D478();
      unint64_t v76 = v75;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v21, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v52);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      uint64_t v45 = 0;
      char v44 = 0;
      long long v43 = v76;
      goto LABEL_29;
    case 2:
      LOBYTE(v121) = 2;
      sub_24465D934();
      uint64_t v54 = v108;
      uint64_t v55 = v91;
      sub_24469D408();
      if (v55) {
        goto LABEL_22;
      }
      uint64_t v56 = v26;
      uint64_t v57 = v93;
      uint64_t v40 = sub_24469D478();
      unint64_t v78 = v77;
      (*(void (**)(char *, uint64_t))(v98 + 8))(v54, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v56);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      char v44 = 0;
      long long v43 = v78;
      goto LABEL_28;
    case 3:
      LOBYTE(v121) = 3;
      sub_24465D8E0();
      uint64_t v58 = v91;
      sub_24469D408();
      if (v58) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v97 + 8))(v33, v96);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v26);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      long long v43 = 0uLL;
      uint64_t v40 = 1;
      uint64_t v45 = 0x2000000000000000;
      goto LABEL_27;
    case 4:
      LOBYTE(v121) = 4;
      sub_24465D838();
      uint64_t v59 = v34;
      uint64_t v60 = v91;
      sub_24469D408();
      if (v60) {
        goto LABEL_22;
      }
      LOBYTE(v119) = 0;
      sub_24465DA30();
      uint64_t v61 = v99;
      sub_24469D498();
      uint64_t v79 = v26;
      uint64_t v40 = v121;
      long long v116 = v122;
      uint64_t v41 = v123;
      char v124 = 1;
      sub_24463EACC();
      sub_24469D498();
      uint64_t v80 = v59;
      uint64_t v81 = v118;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v80, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v30, v79);
      char v44 = 0;
      uint64_t v42 = v119;
      uint64_t v45 = v120 | 0x2000000000000000;
      uint64_t v86 = (uint64_t)v117;
      uint64_t v87 = v112;
      long long v43 = v116;
      goto LABEL_30;
    case 5:
      LOBYTE(v121) = 5;
      sub_24465D7E4();
      uint64_t v62 = v109;
      uint64_t v63 = v91;
      sub_24469D408();
      if (v63) {
        goto LABEL_22;
      }
      uint64_t v64 = v26;
      uint64_t v65 = v103;
      uint64_t v40 = sub_24469D478();
      unint64_t v83 = v82;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v62, v65);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v64);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      char v44 = 0;
      long long v43 = v83;
      uint64_t v45 = 0x3000000000000000;
      goto LABEL_29;
    case 6:
      LOBYTE(v121) = 6;
      sub_24465D790();
      uint64_t v66 = v110;
      uint64_t v67 = v91;
      sub_24469D408();
      if (v67) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v100 + 8))(v66, v102);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v26);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      long long v43 = 0uLL;
      char v44 = 1;
      uint64_t v45 = 0x2000000000000000;
      uint64_t v40 = 2;
      goto LABEL_29;
    case 7:
      LOBYTE(v121) = 7;
      sub_24465D73C();
      uint64_t v68 = v111;
      uint64_t v69 = v91;
      sub_24469D408();
      if (v69)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v26);
        uint64_t v86 = (uint64_t)v117;
        return __swift_destroy_boxed_opaque_existential_1(v86);
      }
      uint64_t v72 = v26;
      uint64_t v40 = sub_24469D478();
      unint64_t v85 = v84;
      (*(void (**)(char *, uint64_t))(v105 + 8))(v68, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v72);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      uint64_t v45 = 0;
      long long v43 = v85;
LABEL_27:
      char v44 = 1;
      goto LABEL_29;
    case 8:
      LOBYTE(v121) = 8;
      sub_24465D6E8();
      uint64_t v70 = v91;
      sub_24469D408();
      if (v70) {
        goto LABEL_22;
      }
      uint64_t v73 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D848);
      sub_24465DF1C(&qword_268E9D868, &qword_268E9D848, (void (*)(void))sub_24461CF98);
      uint64_t v74 = v106;
      sub_24469D498();
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v36, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v73);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      uint64_t v40 = v121;
      long long v43 = 0uLL;
      char v44 = 1;
LABEL_28:
      uint64_t v45 = 0x1000000000000000;
      goto LABEL_29;
    default:
      LOBYTE(v121) = 0;
      sub_24465D9DC();
      char v38 = v90;
      uint64_t v39 = v91;
      sub_24469D408();
      if (v39)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v26);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v92 + 8))(v38, v89);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v30, v26);
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      long long v43 = 0uLL;
      char v44 = 1;
      uint64_t v45 = 0x2000000000000000;
LABEL_29:
      uint64_t v86 = (uint64_t)v117;
      uint64_t v87 = v112;
LABEL_30:
      *(void *)uint64_t v87 = v40;
      *(_OWORD *)(v87 + 8) = v43;
      *(void *)(v87 + 24) = v41;
      *(void *)(v87 + 32) = v42;
      *(void *)(v87 + 40) = v45;
      *(unsigned char *)(v87 + 48) = v44;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v86);
}

uint64_t sub_244654F24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchPrivateDataRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_244654F3C(void *a1)
{
  return FetchPrivateDataRequest.Request.encode(to:)(a1);
}

uint64_t FetchPrivateDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  unint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  return sub_24460E990(v2, v3, v4, v5, v6, v7, v8);
}

void sub_244654F78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_244654F8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_244654FA0()
{
  return 0x74736575716572;
}

uint64_t sub_244654FBC(uint64_t a1)
{
  unint64_t v2 = sub_24465DA84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244654FF8(uint64_t a1)
{
  unint64_t v2 = sub_24465DA84();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FetchPrivateDataRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1258);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v1;
  long long v14 = v1[1];
  long long v15 = v8;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v9 = *((void *)v1 + 5);
  int v13 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465DA84();
  sub_24469D728();
  long long v16 = v15;
  long long v17 = v14;
  uint64_t v18 = v10;
  uint64_t v19 = v9;
  char v20 = v13;
  sub_24465DAD8();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t FetchPrivateDataRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D0FF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465DA84();
  sub_24469D708();
  if (!v2)
  {
    sub_24465DB2C();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v10 = v15;
    long long v11 = v14[1];
    long long v12 = v14[2];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = v12;
    *(unsigned char *)(a2 + 48) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_244655328(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x746169636F737361;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      unint64_t result = 0x6554686372616573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24465544C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchPrivateDataRequest.init(from:)(a1, a2);
}

uint64_t sub_244655464(void *a1)
{
  return FetchPrivateDataRequest.encode(to:)(a1);
}

uint64_t sub_24465547C(uint64_t a1)
{
  unint64_t v2 = sub_24465DE74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446554B8(uint64_t a1)
{
  unint64_t v2 = sub_24465DE74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2446554F4(uint64_t a1)
{
  unint64_t v2 = sub_24465DE20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244655530(uint64_t a1)
{
  unint64_t v2 = sub_24465DE20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24465556C(uint64_t a1)
{
  unint64_t v2 = sub_24465DDCC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446555A8(uint64_t a1)
{
  unint64_t v2 = sub_24465DDCC();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2446555E4()
{
  return sub_244655328(*v0);
}

uint64_t sub_2446555EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2446644F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244655614(uint64_t a1)
{
  unint64_t v2 = sub_24465DB80();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244655650(uint64_t a1)
{
  unint64_t v2 = sub_24465DB80();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24465568C(uint64_t a1)
{
  unint64_t v2 = sub_24465DD78();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446556C8(uint64_t a1)
{
  unint64_t v2 = sub_24465DD78();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244655704(uint64_t a1)
{
  unint64_t v2 = sub_24465DBD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244655740(uint64_t a1)
{
  unint64_t v2 = sub_24465DBD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24465577C(uint64_t a1)
{
  unint64_t v2 = sub_24465DD24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446557B8(uint64_t a1)
{
  unint64_t v2 = sub_24465DD24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2446557F4(uint64_t a1)
{
  unint64_t v2 = sub_24465DC28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244655830(uint64_t a1)
{
  unint64_t v2 = sub_24465DC28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24465586C(uint64_t a1)
{
  unint64_t v2 = sub_24465DC7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446558A8(uint64_t a1)
{
  unint64_t v2 = sub_24465DC7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2446558E4(uint64_t a1)
{
  unint64_t v2 = sub_24465DCD0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244655920(uint64_t a1)
{
  unint64_t v2 = sub_24465DCD0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FetchDataResponse.Response.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1018);
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v70 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1010);
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v67 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1048);
  uint64_t v65 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v64 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1020);
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v59 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1030);
  uint64_t v60 = *(void *)(v15 - 8);
  uint64_t v61 = v15;
  MEMORY[0x270FA5388](v15, v16);
  uint64_t v58 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1040);
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57, v18);
  uint64_t v55 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1008);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54, v20);
  uint64_t v52 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1028);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51, v22);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1038);
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50, v25);
  uint64_t v27 = (char *)&v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1000);
  uint64_t v77 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74, v28);
  uint64_t v30 = (char *)&v47 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v31 = *(void *)(v1 + 8);
  uint64_t v73 = *(void *)v1;
  uint64_t v32 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465DB80();
  sub_24469D728();
  switch(v32)
  {
    case 1:
      LOBYTE(v75) = 1;
      sub_24465DE20();
      uint64_t v36 = v74;
      sub_24469D4E8();
      uint64_t v37 = v51;
      sub_24469D558();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v30, v36);
    case 2:
      LOBYTE(v75) = 2;
      sub_24465DDCC();
      uint64_t v39 = v52;
      uint64_t v33 = v74;
      uint64_t v34 = v30;
      sub_24469D4E8();
      uint64_t v75 = v73;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
      sub_244630968(&qword_26B0D0FA0);
      uint64_t v40 = v54;
      sub_24469D568();
      uint64_t v41 = v53;
      goto LABEL_11;
    case 3:
      LOBYTE(v75) = 3;
      sub_24465DD78();
      uint64_t v39 = v55;
      uint64_t v33 = v74;
      uint64_t v34 = v30;
      sub_24469D4E8();
      uint64_t v75 = v73;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
      sub_244630968(&qword_26B0D0FA0);
      uint64_t v40 = v57;
      sub_24469D568();
      uint64_t v41 = v56;
      goto LABEL_11;
    case 4:
      LOBYTE(v75) = 4;
      uint64_t v42 = v73;
      unint64_t v43 = v31;
      sub_24460BBA4(v73, v31);
      sub_24465DD24();
      char v44 = v58;
      uint64_t v45 = v74;
      sub_24469D4E8();
      uint64_t v75 = v42;
      unint64_t v76 = v43;
      sub_24463EA78();
      uint64_t v46 = v61;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v46);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v30, v45);
      return sub_24461CE18(v42, v43, 4);
    case 5:
      LOBYTE(v75) = 5;
      sub_24465DCD0();
      uint64_t v39 = v59;
      uint64_t v33 = v74;
      uint64_t v34 = v30;
      sub_24469D4E8();
      uint64_t v40 = v63;
      sub_24469D558();
      uint64_t v41 = v62;
      goto LABEL_11;
    case 6:
      LOBYTE(v75) = 6;
      sub_24465DC7C();
      uint64_t v39 = v64;
      uint64_t v33 = v74;
      uint64_t v34 = v30;
      sub_24469D4E8();
      uint64_t v40 = v66;
      sub_24469D558();
      uint64_t v41 = v65;
      goto LABEL_11;
    case 7:
      LOBYTE(v75) = 7;
      sub_24465DC28();
      uint64_t v39 = v67;
      uint64_t v33 = v74;
      uint64_t v34 = v30;
      sub_24469D4E8();
      uint64_t v40 = v69;
      sub_24469D4F8();
      uint64_t v41 = v68;
      goto LABEL_11;
    case 8:
      LOBYTE(v75) = 8;
      sub_24465DBD4();
      uint64_t v39 = v70;
      uint64_t v33 = v74;
      uint64_t v34 = v30;
      sub_24469D4E8();
      uint64_t v75 = v73;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D800);
      sub_24460F15C(&qword_268E9D808);
      uint64_t v40 = v72;
      sub_24469D568();
      uint64_t v41 = v71;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
      break;
    default:
      LOBYTE(v75) = 0;
      sub_24465DE74();
      uint64_t v33 = v74;
      uint64_t v34 = v30;
      sub_24469D4E8();
      uint64_t v75 = v73;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E790);
      sub_24465DF1C(&qword_268E9E798, &qword_268E9E790, (void (*)(void))sub_24465DEC8);
      uint64_t v35 = v50;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v35);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v34, v33);
}

uint64_t FetchDataResponse.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11C8);
  uint64_t v95 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103, v3);
  uint64_t v112 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11C0);
  uint64_t v94 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111, v5);
  uint64_t v110 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11F8);
  uint64_t v93 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102, v7);
  uint64_t v105 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11D0);
  uint64_t v92 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100, v9);
  v109 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11E0);
  uint64_t v91 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101, v11);
  uint64_t v106 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11F0);
  uint64_t v90 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99, v13);
  v108 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11B8);
  uint64_t v89 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98, v15);
  uint64_t v104 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11D8);
  uint64_t v88 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97, v17);
  uint64_t v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11E8);
  uint64_t v96 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20, v21);
  uint64_t v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D11B0);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v26);
  uint64_t v28 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1[3];
  char v113 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_24465DB80();
  uint64_t v30 = v116;
  sub_24469D708();
  if (v30) {
    goto LABEL_23;
  }
  unint64_t v85 = v23;
  uint64_t v86 = v19;
  uint64_t v84 = v20;
  uint64_t v32 = v108;
  unint64_t v31 = v109;
  uint64_t v33 = v110;
  uint64_t v87 = 0;
  uint64_t v34 = v111;
  uint64_t v35 = v112;
  uint64_t v116 = v25;
  uint64_t v36 = sub_24469D4C8();
  if (*(void *)(v36 + 16) != 1)
  {
    uint64_t v43 = v24;
    uint64_t v44 = sub_24469D358();
    swift_allocError();
    uint64_t v45 = v28;
    uint64_t v47 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *uint64_t v47 = &type metadata for FetchDataResponse.Response;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v44 - 8) + 104))(v47, *MEMORY[0x263F8DCB0], v44);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v45, v43);
LABEL_23:
    uint64_t v73 = (uint64_t)v113;
    return __swift_destroy_boxed_opaque_existential_1(v73);
  }
  uint64_t v37 = *(unsigned __int8 *)(v36 + 32);
  uint64_t v83 = v37;
  switch(v37)
  {
    case 1:
      LOBYTE(v114) = 1;
      sub_24465DE20();
      uint64_t v48 = v86;
      uint64_t v49 = v87;
      sub_24469D408();
      if (v49) {
        goto LABEL_22;
      }
      uint64_t v50 = v97;
      char v51 = sub_24469D488();
      uint64_t v52 = v116;
      char v79 = v51;
      uint64_t v80 = &v117;
      goto LABEL_27;
    case 2:
      LOBYTE(v114) = 2;
      sub_24465DDCC();
      uint64_t v53 = v104;
      uint64_t v54 = v87;
      sub_24469D408();
      if (v54) {
        goto LABEL_22;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
      sub_244630968(&qword_26B0D1068);
      uint64_t v55 = v98;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v53, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v28, v24);
      goto LABEL_30;
    case 3:
      LOBYTE(v114) = 3;
      sub_24465DD78();
      uint64_t v56 = v87;
      sub_24469D408();
      if (v56) {
        goto LABEL_22;
      }
      uint64_t v57 = v28;
      uint64_t v58 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
      sub_244630968(&qword_26B0D1068);
      uint64_t v59 = v99;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v32, v59);
      goto LABEL_29;
    case 4:
      LOBYTE(v114) = 4;
      sub_24465DD24();
      uint64_t v60 = v106;
      uint64_t v61 = v87;
      sub_24469D408();
      if (v61) {
        goto LABEL_22;
      }
      sub_24463EACC();
      uint64_t v62 = v101;
      sub_24469D498();
      uint64_t v63 = v116;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v60, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v28, v24);
      uint64_t v65 = v114;
      uint64_t v64 = v115;
      goto LABEL_31;
    case 5:
      LOBYTE(v114) = 5;
      sub_24465DCD0();
      uint64_t v48 = v31;
      uint64_t v66 = v87;
      sub_24469D408();
      if (v66) {
        goto LABEL_22;
      }
      uint64_t v50 = v100;
      char v67 = sub_24469D488();
      uint64_t v52 = v116;
      char v79 = v67;
      uint64_t v80 = &v118;
LABEL_27:
      (*(void (**)(char *, uint64_t))(*(v80 - 32) + 8))(v48, v50);
      goto LABEL_28;
    case 6:
      LOBYTE(v114) = 6;
      sub_24465DC7C();
      uint64_t v68 = v105;
      uint64_t v69 = v87;
      sub_24469D408();
      if (v69) {
        goto LABEL_22;
      }
      uint64_t v70 = v102;
      char v71 = sub_24469D488();
      uint64_t v52 = v116;
      char v79 = v71;
      (*(void (**)(char *, uint64_t))(v93 + 8))(v68, v70);
LABEL_28:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v24);
      uint64_t v64 = 0;
      uint64_t v65 = v79 & 1;
      goto LABEL_31;
    case 7:
      LOBYTE(v114) = 7;
      sub_24465DC28();
      uint64_t v72 = v87;
      sub_24469D408();
      if (v72)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v116 + 8))(v28, v24);
        uint64_t v73 = (uint64_t)v113;
        return __swift_destroy_boxed_opaque_existential_1(v73);
      }
      unint64_t v76 = v28;
      uint64_t v77 = v24;
      uint64_t v65 = sub_24469D428();
      uint64_t v64 = v81;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v33, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v76, v77);
      goto LABEL_31;
    case 8:
      LOBYTE(v114) = 8;
      sub_24465DBD4();
      uint64_t v74 = v87;
      sub_24469D408();
      if (v74) {
        goto LABEL_22;
      }
      uint64_t v57 = v28;
      uint64_t v58 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D800);
      sub_24460F15C(&qword_268E9D818);
      uint64_t v78 = v103;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v35, v78);
LABEL_29:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v57, v58);
      goto LABEL_30;
    default:
      LOBYTE(v114) = 0;
      sub_24465DE74();
      char v38 = v85;
      uint64_t v39 = v87;
      sub_24469D408();
      if (v39)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v116 + 8))(v28, v24);
        goto LABEL_23;
      }
      uint64_t v40 = v28;
      uint64_t v41 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E790);
      sub_24465DF1C(&qword_268E9E7A8, &qword_268E9E790, (void (*)(void))sub_24465DF88);
      uint64_t v42 = v84;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v38, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v116 + 8))(v40, v41);
LABEL_30:
      uint64_t v64 = 0;
      uint64_t v65 = v114;
LABEL_31:
      uint64_t v73 = (uint64_t)v113;
      unint64_t v82 = v107;
      *uint64_t v107 = v65;
      v82[1] = v64;
      *((unsigned char *)v82 + 16) = v83;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v73);
}

uint64_t sub_244657400@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FetchDataResponse.Response.init(from:)(a1, a2);
}

uint64_t sub_244657418(void *a1)
{
  return FetchDataResponse.Response.encode(to:)(a1);
}

uint64_t FetchDataResponse.response.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_244635510(v2, v3, v4);
}

__n128 FetchDataResponse.init(response:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  return result;
}

uint64_t sub_244657458(uint64_t a1)
{
  unint64_t v2 = sub_24465DFDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244657494(uint64_t a1)
{
  unint64_t v2 = sub_24465DFDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FetchDataResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1050);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  HIDWORD(v11) = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465DFDC();
  sub_24469D728();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  char v14 = BYTE4(v11);
  sub_24465E030();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t FetchDataResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1200);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465DFDC();
  sub_24469D708();
  if (!v2)
  {
    sub_24465E084();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v10 = v13;
    *(_OWORD *)a2 = v12;
    *(unsigned char *)(a2 + 16) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2446577A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchDataResponse.init(from:)(a1, a2);
}

uint64_t sub_2446577B8(void *a1)
{
  return FetchDataResponse.encode(to:)(a1);
}

uint64_t static FetchPublicDataRequest.Request.== infix(_:_:)()
{
  return 1;
}

uint64_t FetchPublicDataRequest.Request.hash(into:)()
{
  return sub_24469D688();
}

uint64_t sub_244657800()
{
  return 0x6554686372616573;
}

uint64_t sub_244657824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2446578E0(uint64_t a1)
{
  unint64_t v2 = sub_24465E0D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465791C(uint64_t a1)
{
  unint64_t v2 = sub_24465E0D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244657958(uint64_t a1)
{
  unint64_t v2 = sub_24465E12C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244657994(uint64_t a1)
{
  unint64_t v2 = sub_24465E12C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FetchPublicDataRequest.Request.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E7B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E7C0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E0D8();
  sub_24469D728();
  sub_24465E12C();
  sub_24469D4E8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t FetchPublicDataRequest.Request.hashValue.getter()
{
  return sub_24469D6C8();
}

uint64_t FetchPublicDataRequest.Request.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E7D8);
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E7E0);
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19, v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E0D8();
  sub_24469D708();
  if (!v1)
  {
    uint64_t v11 = v18;
    uint64_t v17 = v7;
    if (*(void *)(sub_24469D4C8() + 16) == 1)
    {
      sub_24465E12C();
      sub_24469D408();
      uint64_t v12 = v17;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v3);
    }
    else
    {
      uint64_t v13 = sub_24469D358();
      swift_allocError();
      uint64_t v15 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
      *uint64_t v15 = &type metadata for FetchPublicDataRequest.Request;
      sub_24469D418();
      sub_24469D348();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x263F8DCB0], v13);
      swift_willThrow();
      uint64_t v12 = v17;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_244657ECC(void *a1)
{
  return FetchPublicDataRequest.Request.init(from:)(a1);
}

uint64_t sub_244657EE4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E7B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E7C0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E0D8();
  sub_24469D728();
  sub_24465E12C();
  sub_24469D4E8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t FetchPublicDataRequest.run()(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return MEMORY[0x270FA2498](sub_2446580DC, 0, 0);
}

uint64_t sub_2446580DC()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v4 = (char *)&dword_268E9DA10 + dword_268E9DA10;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2446581E0;
  uint64_t v2 = *(void *)(v0 + 24);
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v4)(v2, v0 + 16, sub_24465832C, 0);
}

uint64_t sub_2446581E0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_244658314, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_244658314()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_24465832C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_244658340(uint64_t a1)
{
  unint64_t v2 = sub_24465E180();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465837C(uint64_t a1)
{
  unint64_t v2 = sub_24465E180();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FetchPublicDataRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E7F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E180();
  sub_24469D728();
  sub_24465E1D4();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t FetchPublicDataRequest.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E808);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E180();
  sub_24469D708();
  if (!v1)
  {
    sub_24465E228();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_244658638(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2446586E4(void *a1)
{
  return FetchPublicDataRequest.init(from:)(a1);
}

uint64_t sub_2446586FC(void *a1)
{
  return FetchPublicDataRequest.encode(to:)(a1);
}

uint64_t sub_244658714(uint64_t a1)
{
  unint64_t v2 = sub_24465E474();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244658750(uint64_t a1)
{
  unint64_t v2 = sub_24465E474();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24465878C()
{
  return sub_244658638(*v0);
}

uint64_t sub_244658794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2446648A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2446587BC(uint64_t a1)
{
  unint64_t v2 = sub_24465E27C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446587F8(uint64_t a1)
{
  unint64_t v2 = sub_24465E27C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244658834(uint64_t a1)
{
  unint64_t v2 = sub_24465E420();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244658870(uint64_t a1)
{
  unint64_t v2 = sub_24465E420();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2446588AC(uint64_t a1)
{
  unint64_t v2 = sub_24465E3CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446588E8(uint64_t a1)
{
  unint64_t v2 = sub_24465E3CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244658924(uint64_t a1)
{
  unint64_t v2 = sub_24465E378();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244658960(uint64_t a1)
{
  unint64_t v2 = sub_24465E378();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24465899C(uint64_t a1)
{
  unint64_t v2 = sub_24465E2D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446589D8(uint64_t a1)
{
  unint64_t v2 = sub_24465E2D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244658A14()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_244658A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244664AE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244658A58(uint64_t a1)
{
  unint64_t v2 = sub_24465E324();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244658A94(uint64_t a1)
{
  unint64_t v2 = sub_24465E324();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetPrivateDataRequest.Request.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E818);
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v60 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E820);
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v57 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E828);
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v54 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E830);
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v53 = v12;
  MEMORY[0x270FA5388](v12, v13);
  char v51 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E838);
  uint64_t v48 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v16);
  uint64_t v18 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E840);
  uint64_t v49 = *(void *)(v19 - 8);
  uint64_t v50 = v19;
  MEMORY[0x270FA5388](v19, v20);
  uint64_t v22 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E848);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v67 = v23;
  uint64_t v68 = v24;
  MEMORY[0x270FA5388](v23, v25);
  uint64_t v27 = (char *)v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *v1;
  uint64_t v64 = v1[1];
  uint64_t v65 = v28;
  uint64_t v63 = v1[2];
  v47[3] = v1[3];
  v47[2] = v1[4];
  v47[1] = v1[5];
  uint64_t v29 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E27C();
  uint64_t v30 = v27;
  sub_24469D728();
  switch(v29)
  {
    case 1:
      LOBYTE(v69) = 1;
      sub_24465E420();
      uint64_t v31 = v67;
      uint64_t v32 = v27;
      sub_24469D4E8();
      sub_24469D548();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v15);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v32, v31);
    case 2:
      LOBYTE(v69) = 2;
      sub_24465E3CC();
      uint64_t v37 = v51;
      uint64_t v38 = v67;
      uint64_t v39 = v27;
      sub_24469D4E8();
      uint64_t v69 = v65;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
      sub_244630968(&qword_26B0D0FA0);
      uint64_t v40 = v53;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v39, v38);
    case 3:
      LOBYTE(v69) = 3;
      sub_24465E378();
      uint64_t v42 = v54;
      uint64_t v31 = v67;
      uint64_t v32 = v30;
      sub_24469D4E8();
      LOBYTE(v69) = 0;
      uint64_t v33 = v56;
      uint64_t v43 = v66;
      sub_24469D548();
      if (!v43)
      {
        LOBYTE(v69) = 1;
        sub_24469D558();
      }
      uint64_t v44 = v55;
      goto LABEL_16;
    case 4:
      LOBYTE(v69) = 4;
      sub_24465E324();
      uint64_t v42 = v57;
      uint64_t v31 = v67;
      uint64_t v32 = v30;
      sub_24469D4E8();
      LOBYTE(v69) = 0;
      uint64_t v33 = v59;
      uint64_t v45 = v66;
      sub_24469D548();
      if (!v45)
      {
        LOBYTE(v69) = 1;
        sub_24469D558();
      }
      uint64_t v44 = v58;
      goto LABEL_16;
    case 5:
      LOBYTE(v69) = 5;
      sub_24465E2D0();
      uint64_t v42 = v60;
      uint64_t v31 = v67;
      uint64_t v32 = v30;
      sub_24469D4E8();
      LOBYTE(v69) = 0;
      uint64_t v33 = v62;
      uint64_t v46 = v66;
      sub_24469D4F8();
      if (!v46)
      {
        LOBYTE(v69) = 1;
        sub_24469D548();
      }
      uint64_t v44 = v61;
LABEL_16:
      uint64_t v35 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v36 = v42;
      break;
    default:
      LOBYTE(v69) = 0;
      sub_24465E474();
      uint64_t v31 = v67;
      uint64_t v32 = v27;
      sub_24469D4E8();
      LOBYTE(v69) = 0;
      uint64_t v33 = v50;
      uint64_t v34 = v66;
      sub_24469D548();
      if (!v34)
      {
        LOBYTE(v69) = 1;
        sub_24469D548();
        LOBYTE(v69) = 2;
        sub_24469D4F8();
      }
      uint64_t v35 = *(void (**)(char *, uint64_t))(v49 + 8);
      uint64_t v36 = v22;
      break;
  }
  v35(v36, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v32, v31);
}

uint64_t SetPrivateDataRequest.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E888);
  uint64_t v87 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98, v3);
  uint64_t v97 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E890);
  uint64_t v86 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96, v5);
  uint64_t v95 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E898);
  uint64_t v85 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92, v7);
  uint64_t v94 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8A0);
  uint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91, v9);
  uint64_t v93 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8A8);
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90, v11);
  uint64_t v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8B0);
  uint64_t v84 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8B8);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v20);
  uint64_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1[3];
  uint64_t v100 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_24465E27C();
  uint64_t v24 = v101;
  sub_24469D708();
  if (!v24)
  {
    uint64_t v81 = v13;
    unint64_t v82 = v17;
    uint64_t v80 = v14;
    uint64_t v26 = v95;
    uint64_t v25 = v96;
    uint64_t v83 = 0;
    uint64_t v28 = v97;
    uint64_t v27 = v98;
    uint64_t v29 = v99;
    uint64_t v101 = v19;
    uint64_t v30 = sub_24469D4C8();
    if (*(void *)(v30 + 16) == 1)
    {
      uint64_t v79 = v30;
      uint64_t v31 = *(unsigned __int8 *)(v30 + 32);
      uint64_t v32 = v29;
      uint64_t v78 = v31;
      switch(v31)
      {
        case 1:
          LOBYTE(v102) = 1;
          sub_24465E420();
          uint64_t v40 = v81;
          uint64_t v41 = v83;
          sub_24469D408();
          if (v41) {
            goto LABEL_14;
          }
          uint64_t v42 = v90;
          uint64_t v60 = sub_24469D478();
          uint64_t v76 = v61;
          (*(void (**)(char *, uint64_t))(v88 + 8))(v40, v42);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v101 + 8))(v22, v18);
          uint64_t v62 = (char *)v60;
          uint64_t v67 = 0;
          uint64_t v69 = 0;
          uint64_t v73 = 0;
          uint64_t v75 = 0;
          goto LABEL_23;
        case 2:
          LOBYTE(v102) = 2;
          sub_24465E3CC();
          uint64_t v43 = v93;
          uint64_t v44 = v83;
          sub_24469D408();
          if (v44) {
            goto LABEL_14;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
          sub_244630968(&qword_26B0D1068);
          uint64_t v45 = v91;
          sub_24469D498();
          uint64_t v46 = v101;
          (*(void (**)(char *, uint64_t))(v89 + 8))(v43, v45);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v18);
          uint64_t v76 = 0;
          uint64_t v67 = 0;
          uint64_t v69 = 0;
          uint64_t v73 = 0;
          uint64_t v75 = 0;
          uint64_t v62 = v102;
          goto LABEL_23;
        case 3:
          LOBYTE(v102) = 3;
          sub_24465E378();
          uint64_t v47 = v94;
          uint64_t v48 = v83;
          sub_24469D408();
          if (v48) {
            goto LABEL_14;
          }
          LOBYTE(v102) = 0;
          uint64_t v49 = v92;
          uint64_t v50 = sub_24469D478();
          uint64_t v51 = v101;
          uint64_t v93 = (char *)v50;
          uint64_t v76 = v63;
          LOBYTE(v102) = 1;
          uint64_t v64 = v47;
          char v70 = sub_24469D488();
          uint64_t v71 = v85;
          goto LABEL_21;
        case 4:
          LOBYTE(v102) = 4;
          sub_24465E324();
          uint64_t v52 = v83;
          sub_24469D408();
          if (v52) {
            goto LABEL_14;
          }
          LOBYTE(v102) = 0;
          uint64_t v49 = v25;
          uint64_t v56 = sub_24469D478();
          uint64_t v51 = v101;
          uint64_t v93 = (char *)v56;
          uint64_t v64 = v26;
          uint64_t v76 = v65;
          LOBYTE(v102) = 1;
          char v70 = sub_24469D488();
          uint64_t v71 = v86;
LABEL_21:
          (*(void (**)(char *, uint64_t))(v71 + 8))(v64, v49);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v18);
          uint64_t v69 = 0;
          uint64_t v73 = 0;
          uint64_t v75 = 0;
          uint64_t v67 = v70 & 1;
          goto LABEL_22;
        case 5:
          LOBYTE(v102) = 5;
          sub_24465E2D0();
          uint64_t v55 = v83;
          sub_24469D408();
          if (v55)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v101 + 8))(v22, v18);
            uint64_t v53 = (uint64_t)v100;
            return __swift_destroy_boxed_opaque_existential_1(v53);
          }
          LOBYTE(v102) = 0;
          uint64_t v57 = sub_24469D428();
          uint64_t v58 = v101;
          uint64_t v93 = (char *)v57;
          uint64_t v96 = v66;
          LOBYTE(v102) = 1;
          uint64_t v67 = sub_24469D478();
          uint64_t v69 = v72;
          (*(void (**)(char *, uint64_t))(v87 + 8))(v28, v27);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v18);
          uint64_t v73 = 0;
          uint64_t v75 = 0;
          uint64_t v76 = v96;
          uint64_t v62 = v93;
LABEL_23:
          *(void *)uint64_t v32 = v62;
          *(void *)(v32 + 8) = v76;
          *(void *)(v32 + 16) = v67;
          *(void *)(v32 + 24) = v69;
          *(void *)(v32 + 32) = v73;
          *(void *)(v32 + 40) = v75;
          *(unsigned char *)(v32 + 48) = v78;
          break;
        default:
          LOBYTE(v102) = 0;
          sub_24465E474();
          uint64_t v33 = v83;
          sub_24469D408();
          if (v33) {
            goto LABEL_14;
          }
          LOBYTE(v102) = 0;
          uint64_t v34 = v80;
          uint64_t v35 = sub_24469D478();
          uint64_t v36 = v101;
          uint64_t v93 = (char *)v35;
          uint64_t v96 = v59;
          LOBYTE(v102) = 1;
          uint64_t v67 = sub_24469D478();
          uint64_t v69 = v68;
          uint64_t v98 = v18;
          LOBYTE(v102) = 2;
          uint64_t v73 = sub_24469D428();
          uint64_t v75 = v74;
          (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v34);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v98);
          uint64_t v76 = v96;
LABEL_22:
          uint64_t v62 = v93;
          goto LABEL_23;
      }
    }
    else
    {
      uint64_t v37 = sub_24469D358();
      swift_allocError();
      uint64_t v39 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
      *uint64_t v39 = &type metadata for SetPrivateDataRequest.Request;
      sub_24469D418();
      sub_24469D348();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x263F8DCB0], v37);
      swift_willThrow();
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v22, v18);
    }
  }
  uint64_t v53 = (uint64_t)v100;
  return __swift_destroy_boxed_opaque_existential_1(v53);
}

uint64_t sub_24465A024@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPrivateDataRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_24465A03C(void *a1)
{
  return SetPrivateDataRequest.Request.encode(to:)(a1);
}

uint64_t SetPrivateDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v8 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 48) = v8;
  return sub_24460E6B4(v2, v3, v4, v5, v6, v7, v8);
}

unint64_t SetPrivateDataRequest.stringValue.getter()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  switch(*(unsigned char *)(v0 + 48))
  {
    case 1:
      swift_bridgeObjectRetain();
      sub_24469D318();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000021;
      sub_24469CFE8();
      sub_24460E754(v2, v1, v3, v4, v6, v5, 1);
      return v8;
    case 2:
      swift_bridgeObjectRetain();
      sub_24469D318();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000001FLL;
      MEMORY[0x245694D70](v2, MEMORY[0x263F8D310]);
      sub_24469CFE8();
      swift_bridgeObjectRelease();
      sub_24460E754(v2, v1, v3, v4, v6, v5, 2);
      return v8;
    case 3:
      unint64_t v8 = 0;
      swift_bridgeObjectRetain();
      sub_24469D318();
      sub_24469CFE8();
      sub_24469CFE8();
      sub_24460E754(v2, v1, v3, v4, v6, v5, 3);
      goto LABEL_7;
    case 4:
      swift_bridgeObjectRetain();
      sub_24469D318();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000001BLL;
      sub_24469CFE8();
      sub_24460E754(v2, v1, v3, v4, v6, v5, 4);
LABEL_7:
      sub_24469CFE8();
      goto LABEL_9;
    case 5:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24469D318();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000019;
      sub_24469CFE8();
      swift_bridgeObjectRelease();
      sub_24469CFE8();
LABEL_9:
      sub_24469CFE8();
      swift_bridgeObjectRelease();
      break;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24469D318();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000012;
      sub_24469CFE8();
      swift_bridgeObjectRelease();
      sub_24469CFE8();
      sub_24469CFE8();
      swift_bridgeObjectRelease();
      sub_24469CFE8();
      break;
  }
  return v8;
}

void sub_24465A48C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_24465A4A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_24465A4B4(uint64_t a1)
{
  unint64_t v2 = sub_24465E4C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465A4F0(uint64_t a1)
{
  unint64_t v2 = sub_24465E4C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetPrivateDataRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v1;
  long long v14 = v1[1];
  long long v15 = v8;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v9 = *((void *)v1 + 5);
  int v13 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E4C8();
  sub_24469D728();
  long long v16 = v15;
  long long v17 = v14;
  uint64_t v18 = v10;
  uint64_t v19 = v9;
  char v20 = v13;
  sub_24465E51C();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t SetPrivateDataRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E4C8();
  sub_24469D708();
  if (!v2)
  {
    sub_24465E570();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v10 = v15;
    long long v11 = v14[1];
    long long v12 = v14[2];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = v12;
    *(unsigned char *)(a2 + 48) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_24465A820(char a1)
{
  unint64_t result = 0x6554686372616573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24465A8E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPrivateDataRequest.init(from:)(a1, a2);
}

uint64_t sub_24465A900(void *a1)
{
  return SetPrivateDataRequest.encode(to:)(a1);
}

uint64_t sub_24465A918()
{
  return 0x44496863746162;
}

uint64_t sub_24465A930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x44496863746162 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24465A9C8(uint64_t a1)
{
  unint64_t v2 = sub_24465E6F4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465AA04(uint64_t a1)
{
  unint64_t v2 = sub_24465E6F4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24465AA40()
{
  return 0x496C6C6174736E69;
}

uint64_t sub_24465AA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x496C6C6174736E69 && a2 == 0xE900000000000044)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24465AB00(uint64_t a1)
{
  unint64_t v2 = sub_24465E79C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465AB3C(uint64_t a1)
{
  unint64_t v2 = sub_24465E79C();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24465AB78()
{
  return sub_24465A820(*v0);
}

uint64_t sub_24465AB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244664BA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24465ABA8(uint64_t a1)
{
  unint64_t v2 = sub_24465E5E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465ABE4(uint64_t a1)
{
  unint64_t v2 = sub_24465E5E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24465AC20(uint64_t a1)
{
  unint64_t v2 = sub_24465E638();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465AC5C(uint64_t a1)
{
  unint64_t v2 = sub_24465E638();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24465AC98()
{
  return ((unint64_t)*v0 << 8) + 12383;
}

uint64_t sub_24465ACAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244664DC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24465ACD4(uint64_t a1)
{
  unint64_t v2 = sub_24465E748();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465AD10(uint64_t a1)
{
  unint64_t v2 = sub_24465E748();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24465AD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24465ADCC(uint64_t a1)
{
  unint64_t v2 = sub_24465E7F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465AE08(uint64_t a1)
{
  unint64_t v2 = sub_24465E7F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetPublicDataRequest.Request.encode(to:)(void *a1)
{
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8E8);
  uint64_t v91 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101, v2);
  uint64_t v100 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8F0);
  uint64_t v89 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97, v4);
  uint64_t v96 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E8F8);
  uint64_t v90 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99, v6);
  uint64_t v98 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E900);
  uint64_t v88 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95, v8);
  uint64_t v94 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24469C8D8();
  uint64_t v104 = *(void *)(v10 - 8);
  uint64_t v105 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10, v11);
  unint64_t v103 = (unint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12, v14);
  uint64_t v93 = (char *)&v88 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15, v17);
  uint64_t v102 = (uint64_t)&v88 - v19;
  MEMORY[0x270FA5388](v18, v20);
  uint64_t v22 = (char *)&v88 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E908);
  uint64_t v92 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23, v24);
  uint64_t v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for SetPublicDataRequest.Request(0);
  MEMORY[0x270FA5388](v27, v28);
  uint64_t v30 = (char *)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E910);
  uint64_t v106 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110, v31);
  uint64_t v33 = (char *)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E5E4();
  v109 = v33;
  sub_24469D728();
  sub_24465E8AC(v108, (uint64_t)v30, type metadata accessor for SetPublicDataRequest.Request);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v37 = v104;
      uint64_t v38 = v105;
      (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v22, v30, v105);
      LOBYTE(v111) = 1;
      sub_24465E79C();
      uint64_t v39 = v94;
      uint64_t v41 = v109;
      uint64_t v40 = v110;
      sub_24469D4E8();
      sub_24465E844(&qword_268E9E930, MEMORY[0x263F07508]);
      uint64_t v42 = v95;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v39, v42);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v41, v40);
      break;
    case 2u:
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
      uint64_t v44 = (uint64_t *)&v30[*(int *)(v43 + 48)];
      uint64_t v46 = *v44;
      uint64_t v45 = v44[1];
      uint64_t v101 = v46;
      uint64_t v108 = v45;
      uint64_t v47 = (uint64_t *)&v30[*(int *)(v43 + 64)];
      uint64_t v48 = *v47;
      unint64_t v103 = v47[1];
      uint64_t v49 = v104;
      uint64_t v50 = v105;
      uint64_t v51 = v102;
      (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v102, v30, v105);
      LOBYTE(v111) = 2;
      sub_24465E748();
      uint64_t v52 = v98;
      uint64_t v53 = v109;
      uint64_t v54 = v110;
      sub_24469D4E8();
      LOBYTE(v111) = 0;
      sub_24465E844(&qword_268E9E930, MEMORY[0x263F07508]);
      uint64_t v55 = v99;
      uint64_t v56 = v107;
      sub_24469D568();
      if (v56)
      {
        swift_bridgeObjectRelease();
        sub_24463EB20(v48, v103);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v55);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
        goto LABEL_9;
      }
      uint64_t v73 = v53;
      uint64_t v74 = v54;
      unint64_t v75 = v103;
      LOBYTE(v111) = 1;
      sub_24469D548();
      swift_bridgeObjectRelease();
      uint64_t v77 = v48;
      uint64_t v111 = v48;
      unint64_t v112 = v75;
      unint64_t v78 = v75;
      char v113 = 2;
      sub_24463EA78();
      sub_24469D528();
      uint64_t v79 = v102;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v55);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v79, v105);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v73, v74);
      uint64_t result = sub_24463EB20(v77, v78);
      break;
    case 3u:
      uint64_t v57 = v104;
      uint64_t v58 = v105;
      uint64_t v59 = v93;
      (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v93, v30, v105);
      LOBYTE(v111) = 3;
      sub_24465E6F4();
      uint64_t v60 = v96;
      uint64_t v62 = v109;
      uint64_t v61 = v110;
      sub_24469D4E8();
      sub_24465E844(&qword_268E9E930, MEMORY[0x263F07508]);
      uint64_t v63 = v97;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v60, v63);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v62, v61);
      break;
    case 4u:
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
      uint64_t v108 = *(void *)&v30[*(int *)(v64 + 48)];
      uint64_t v65 = (uint64_t *)&v30[*(int *)(v64 + 64)];
      unint64_t v66 = v65[1];
      uint64_t v102 = *v65;
      unint64_t v68 = v103;
      uint64_t v67 = v104;
      uint64_t v69 = v105;
      (*(void (**)(unint64_t, char *, uint64_t))(v104 + 32))(v103, v30, v105);
      LOBYTE(v111) = 4;
      sub_24465E638();
      char v70 = v100;
      uint64_t v53 = v109;
      uint64_t v54 = v110;
      sub_24469D4E8();
      LOBYTE(v111) = 0;
      sub_24465E844(&qword_268E9E930, MEMORY[0x263F07508]);
      uint64_t v71 = v101;
      uint64_t v72 = v107;
      sub_24469D568();
      if (v72)
      {
        swift_bridgeObjectRelease();
        sub_24463EB20(v102, v66);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v70, v71);
        (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v68, v69);
LABEL_9:
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v53, v54);
      }
      else
      {
        uint64_t v76 = v102;
        uint64_t v111 = v108;
        char v113 = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E938);
        sub_24465E68C(&qword_268E9E940);
        sub_24469D568();
        swift_bridgeObjectRelease();
        uint64_t v80 = v76;
        uint64_t v111 = v76;
        unint64_t v112 = v66;
        unint64_t v81 = v66;
        char v113 = 2;
        sub_24463EA78();
        sub_24469D528();
        uint64_t v82 = v71;
        uint64_t v83 = v70;
        unint64_t v84 = v103;
        uint64_t v86 = v109;
        uint64_t v85 = v110;
        uint64_t v87 = v105;
        (*(void (**)(char *, uint64_t))(v91 + 8))(v83, v82);
        (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v84, v87);
        (*(void (**)(char *, uint64_t))(v106 + 8))(v86, v85);
        uint64_t result = sub_24463EB20(v80, v81);
      }
      break;
    default:
      LOBYTE(v111) = 0;
      sub_24465E7F0();
      uint64_t v35 = v109;
      uint64_t v34 = v110;
      sub_24469D4E8();
      sub_24469D4F8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v26, v23);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v35, v34);
      break;
  }
  return result;
}

uint64_t SetPublicDataRequest.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E970);
  uint64_t v89 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105, v3);
  uint64_t v104 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E978);
  uint64_t v88 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93, v5);
  uint64_t v98 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E980);
  uint64_t v86 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95, v7);
  unint64_t v103 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E988);
  uint64_t v91 = *(void *)(v9 - 8);
  uint64_t v92 = v9;
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v102 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E990);
  uint64_t v87 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90, v12);
  uint64_t v97 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E998);
  uint64_t v100 = *(void *)(v14 - 8);
  uint64_t v101 = v14;
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for SetPublicDataRequest.Request(0);
  uint64_t v19 = MEMORY[0x270FA5388](v99, v18);
  uint64_t v94 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19, v21);
  uint64_t v24 = (char *)&v80 - v23;
  uint64_t v26 = MEMORY[0x270FA5388](v22, v25);
  uint64_t v28 = (char *)&v80 - v27;
  uint64_t v30 = MEMORY[0x270FA5388](v26, v29);
  uint64_t v32 = (char *)&v80 - v31;
  uint64_t v34 = MEMORY[0x270FA5388](v30, v33);
  uint64_t v36 = (char *)&v80 - v35;
  MEMORY[0x270FA5388](v34, v37);
  uint64_t v39 = (char *)&v80 - v38;
  uint64_t v40 = a1[3];
  uint64_t v106 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v40);
  sub_24465E5E4();
  uint64_t v41 = v107;
  sub_24469D708();
  if (v41) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
  }
  unint64_t v81 = (uint64_t *)v36;
  uint64_t v82 = v32;
  uint64_t v83 = v24;
  uint64_t v42 = v102;
  uint64_t v85 = v28;
  uint64_t v107 = 0;
  uint64_t v44 = v103;
  uint64_t v43 = v104;
  uint64_t v45 = v105;
  unint64_t v84 = v39;
  uint64_t v46 = v101;
  uint64_t v47 = sub_24469D4C8();
  uint64_t v48 = (char *)v47;
  if (*(void *)(v47 + 16) != 1)
  {
    uint64_t v54 = sub_24469D358();
    swift_allocError();
    uint64_t v56 = v55;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *uint64_t v56 = v99;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v54 - 8) + 104))(v56, *MEMORY[0x263F8DCB0], v54);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v17, v46);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
  }
  switch(*(unsigned char *)(v47 + 32))
  {
    case 1:
      char v109 = 1;
      sub_24465E79C();
      uint64_t v57 = v107;
      sub_24469D408();
      if (v57) {
        goto LABEL_15;
      }
      sub_24469C8D8();
      sub_24465E844(&qword_268E9E9A0, MEMORY[0x263F07508]);
      uint64_t v69 = (uint64_t)v82;
      uint64_t v58 = v92;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v42, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v17, v46);
      uint64_t v59 = (uint64_t)v106;
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    case 2:
      char v113 = 2;
      sub_24465E748();
      uint64_t v60 = v107;
      sub_24469D408();
      if (v60) {
        goto LABEL_15;
      }
      sub_24469C8D8();
      char v112 = 0;
      sub_24465E844(&qword_268E9E9A0, MEMORY[0x263F07508]);
      uint64_t v61 = v95;
      sub_24469D498();
      char v111 = 1;
      uint64_t v71 = sub_24469D478();
      uint64_t v75 = v74;
      uint64_t v102 = v48;
      uint64_t v107 = v17;
      uint64_t v76 = v71;
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
      unint64_t v78 = (uint64_t *)&v85[*(int *)(v77 + 48)];
      *unint64_t v78 = v76;
      v78[1] = v75;
      char v110 = 2;
      sub_24463EACC();
      sub_24469D458();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v44, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v107, v46);
      uint64_t v69 = (uint64_t)v85;
      goto LABEL_17;
    case 3:
      char v114 = 3;
      sub_24465E6F4();
      uint64_t v62 = v107;
      sub_24469D408();
      if (v62) {
        goto LABEL_15;
      }
      sub_24469C8D8();
      sub_24465E844(&qword_268E9E9A0, MEMORY[0x263F07508]);
      uint64_t v69 = (uint64_t)v83;
      uint64_t v63 = v93;
      uint64_t v64 = v98;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v64, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v17, v46);
      goto LABEL_17;
    case 4:
      char v118 = 4;
      sub_24465E638();
      uint64_t v65 = v107;
      sub_24469D408();
      if (v65) {
        goto LABEL_15;
      }
      sub_24469C8D8();
      char v117 = 0;
      sub_24465E844(&qword_268E9E9A0, MEMORY[0x263F07508]);
      unint64_t v66 = v94;
      sub_24469D498();
      uint64_t v102 = v48;
      uint64_t v107 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E938);
      char v116 = 1;
      sub_24465E68C(&qword_268E9E9A8);
      sub_24469D498();
      char v115 = 2;
      sub_24463EACC();
      sub_24469D458();
      uint64_t v59 = (uint64_t)v106;
      uint64_t v79 = v100;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v43, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v107, v46);
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = (uint64_t)v66;
      goto LABEL_18;
    default:
      char v108 = 0;
      sub_24465E7F0();
      uint64_t v49 = v97;
      uint64_t v50 = v107;
      sub_24469D408();
      if (v50)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v100 + 8))(v17, v46);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
      }
      uint64_t v51 = v90;
      uint64_t v52 = sub_24469D428();
      uint64_t v107 = v53;
      uint64_t v68 = v52;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v49, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v17, v46);
      uint64_t v69 = (uint64_t)v81;
      char v70 = v107;
      *unint64_t v81 = v68;
      *(void *)(v69 + 8) = v70;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      uint64_t v59 = (uint64_t)v106;
LABEL_18:
      uint64_t v72 = v96;
      uint64_t v73 = (uint64_t)v84;
      sub_24465E968(v69, (uint64_t)v84, type metadata accessor for SetPublicDataRequest.Request);
      sub_24465E968(v73, v72, type metadata accessor for SetPublicDataRequest.Request);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v59);
      break;
  }
  return result;
}

uint64_t sub_24465CAD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPublicDataRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_24465CAEC(void *a1)
{
  return SetPublicDataRequest.Request.encode(to:)(a1);
}

uint64_t SetPublicDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24465E8AC(v1, a1, type metadata accessor for SetPublicDataRequest.Request);
}

uint64_t SetPublicDataRequest.init(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24465E968(a1, a2, type metadata accessor for SetPublicDataRequest.Request);
}

uint64_t SetPublicDataRequest.run()()
{
  v1[3] = v0;
  type metadata accessor for SetPublicDataRequest(0);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24465CC08, 0, 0);
}

uint64_t sub_24465CC08()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_24465E8AC(v0[3], v1, type metadata accessor for SetPublicDataRequest);
  sub_24465E844(&qword_268E9DA00, (void (*)(uint64_t))type metadata accessor for SetPublicDataRequest);
  sub_24465E844(&qword_268E9DA08, (void (*)(uint64_t))type metadata accessor for SetPublicDataRequest);
  sub_24465E8AC(v1, v2, type metadata accessor for SetPublicDataRequest);
  v0[2] = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268E9D9F8 + dword_268E9D9F8);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24465CDA8;
  return v5((uint64_t)(v0 + 2), (uint64_t)sub_24465D008, 0);
}

uint64_t sub_24465CDA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24465CF64;
  }
  else
  {
    sub_24465FB78(*(void *)(v2 + 32), type metadata accessor for SetPublicDataRequest);
    uint64_t v3 = sub_24465CED8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24465CED8()
{
  sub_24465FB78(*(void *)(v0 + 40), type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24465CF64()
{
  uint64_t v1 = v0[5];
  sub_24465FB78(v0[4], type metadata accessor for SetPublicDataRequest);
  sub_24465FB78(v1, type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void sub_24465D008(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_24465D01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24465D0B4(uint64_t a1)
{
  unint64_t v2 = sub_24465E914();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24465D0F0(uint64_t a1)
{
  unint64_t v2 = sub_24465E914();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetPublicDataRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E9B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E914();
  sub_24469D728();
  type metadata accessor for SetPublicDataRequest.Request(0);
  sub_24465E844(&qword_268E9E9C8, (void (*)(uint64_t))type metadata accessor for SetPublicDataRequest.Request);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t SetPublicDataRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E9D0);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SetPublicDataRequest(0);
  MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E914();
  sub_24469D708();
  if (!v2)
  {
    sub_24465E844(&qword_268E9E9D8, (void (*)(uint64_t))type metadata accessor for SetPublicDataRequest.Request);
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_24465E968(v18, (uint64_t)v14, type metadata accessor for SetPublicDataRequest.Request);
    sub_24465E968((uint64_t)v14, v16, type metadata accessor for SetPublicDataRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24465D508@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPublicDataRequest.init(from:)(a1, a2);
}

uint64_t sub_24465D520(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E9B8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24465E914();
  sub_24469D728();
  type metadata accessor for SetPublicDataRequest.Request(0);
  sub_24465E844(&qword_268E9E9C8, (void (*)(uint64_t))type metadata accessor for SetPublicDataRequest.Request);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_24465D694()
{
  unint64_t result = qword_26B0D15E0;
  if (!qword_26B0D15E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15E0);
  }
  return result;
}

unint64_t sub_24465D6E8()
{
  unint64_t result = qword_268E9E710;
  if (!qword_268E9E710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E710);
  }
  return result;
}

unint64_t sub_24465D73C()
{
  unint64_t result = qword_268E9E718;
  if (!qword_268E9E718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E718);
  }
  return result;
}

unint64_t sub_24465D790()
{
  unint64_t result = qword_26B0D1098;
  if (!qword_26B0D1098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1098);
  }
  return result;
}

unint64_t sub_24465D7E4()
{
  unint64_t result = qword_268E9E720;
  if (!qword_268E9E720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E720);
  }
  return result;
}

unint64_t sub_24465D838()
{
  unint64_t result = qword_268E9E728;
  if (!qword_268E9E728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E728);
  }
  return result;
}

unint64_t sub_24465D88C()
{
  unint64_t result = qword_268E9E730;
  if (!qword_268E9E730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E730);
  }
  return result;
}

unint64_t sub_24465D8E0()
{
  unint64_t result = qword_26B0D1078;
  if (!qword_26B0D1078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1078);
  }
  return result;
}

unint64_t sub_24465D934()
{
  unint64_t result = qword_268E9E738;
  if (!qword_268E9E738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E738);
  }
  return result;
}

unint64_t sub_24465D988()
{
  unint64_t result = qword_268E9E740;
  if (!qword_268E9E740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E740);
  }
  return result;
}

unint64_t sub_24465D9DC()
{
  unint64_t result = qword_268E9E748;
  if (!qword_268E9E748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E748);
  }
  return result;
}

unint64_t sub_24465DA30()
{
  unint64_t result = qword_268E9E750;
  if (!qword_268E9E750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E750);
  }
  return result;
}

unint64_t sub_24465DA84()
{
  unint64_t result = qword_26B0D1688;
  if (!qword_26B0D1688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1688);
  }
  return result;
}

unint64_t sub_24465DAD8()
{
  unint64_t result = qword_26B0D1178;
  if (!qword_26B0D1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1178);
  }
  return result;
}

unint64_t sub_24465DB2C()
{
  unint64_t result = qword_26B0D0F60;
  if (!qword_26B0D0F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D0F60);
  }
  return result;
}

unint64_t sub_24465DB80()
{
  unint64_t result = qword_26B0D1520;
  if (!qword_26B0D1520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1520);
  }
  return result;
}

unint64_t sub_24465DBD4()
{
  unint64_t result = qword_268E9E758;
  if (!qword_268E9E758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E758);
  }
  return result;
}

unint64_t sub_24465DC28()
{
  unint64_t result = qword_268E9E760;
  if (!qword_268E9E760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E760);
  }
  return result;
}

unint64_t sub_24465DC7C()
{
  unint64_t result = qword_26B0D1090;
  if (!qword_26B0D1090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1090);
  }
  return result;
}

unint64_t sub_24465DCD0()
{
  unint64_t result = qword_268E9E768;
  if (!qword_268E9E768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E768);
  }
  return result;
}

unint64_t sub_24465DD24()
{
  unint64_t result = qword_268E9E770;
  if (!qword_268E9E770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E770);
  }
  return result;
}

unint64_t sub_24465DD78()
{
  unint64_t result = qword_26B0D1088;
  if (!qword_26B0D1088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1088);
  }
  return result;
}

unint64_t sub_24465DDCC()
{
  unint64_t result = qword_268E9E778;
  if (!qword_268E9E778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E778);
  }
  return result;
}

unint64_t sub_24465DE20()
{
  unint64_t result = qword_268E9E780;
  if (!qword_268E9E780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E780);
  }
  return result;
}

unint64_t sub_24465DE74()
{
  unint64_t result = qword_268E9E788;
  if (!qword_268E9E788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E788);
  }
  return result;
}

unint64_t sub_24465DEC8()
{
  unint64_t result = qword_268E9E7A0;
  if (!qword_268E9E7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E7A0);
  }
  return result;
}

uint64_t sub_24465DF1C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24465DF88()
{
  unint64_t result = qword_268E9E7B0;
  if (!qword_268E9E7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E7B0);
  }
  return result;
}

unint64_t sub_24465DFDC()
{
  unint64_t result = qword_26B0D15C8;
  if (!qword_26B0D15C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15C8);
  }
  return result;
}

unint64_t sub_24465E030()
{
  unint64_t result = qword_26B0D0F58;
  if (!qword_26B0D0F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D0F58);
  }
  return result;
}

unint64_t sub_24465E084()
{
  unint64_t result = qword_26B0D10C8;
  if (!qword_26B0D10C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D10C8);
  }
  return result;
}

unint64_t sub_24465E0D8()
{
  unint64_t result = qword_268E9E7C8;
  if (!qword_268E9E7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E7C8);
  }
  return result;
}

unint64_t sub_24465E12C()
{
  unint64_t result = qword_268E9E7D0;
  if (!qword_268E9E7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E7D0);
  }
  return result;
}

unint64_t sub_24465E180()
{
  unint64_t result = qword_268E9E7F8;
  if (!qword_268E9E7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E7F8);
  }
  return result;
}

unint64_t sub_24465E1D4()
{
  unint64_t result = qword_268E9E800;
  if (!qword_268E9E800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E800);
  }
  return result;
}

unint64_t sub_24465E228()
{
  unint64_t result = qword_268E9E810;
  if (!qword_268E9E810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E810);
  }
  return result;
}

unint64_t sub_24465E27C()
{
  unint64_t result = qword_268E9E850;
  if (!qword_268E9E850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E850);
  }
  return result;
}

unint64_t sub_24465E2D0()
{
  unint64_t result = qword_268E9E858;
  if (!qword_268E9E858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E858);
  }
  return result;
}

unint64_t sub_24465E324()
{
  unint64_t result = qword_268E9E860;
  if (!qword_268E9E860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E860);
  }
  return result;
}

unint64_t sub_24465E378()
{
  unint64_t result = qword_268E9E868;
  if (!qword_268E9E868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E868);
  }
  return result;
}

unint64_t sub_24465E3CC()
{
  unint64_t result = qword_268E9E870;
  if (!qword_268E9E870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E870);
  }
  return result;
}

unint64_t sub_24465E420()
{
  unint64_t result = qword_268E9E878;
  if (!qword_268E9E878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E878);
  }
  return result;
}

unint64_t sub_24465E474()
{
  unint64_t result = qword_268E9E880;
  if (!qword_268E9E880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E880);
  }
  return result;
}

unint64_t sub_24465E4C8()
{
  unint64_t result = qword_268E9E8C8;
  if (!qword_268E9E8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E8C8);
  }
  return result;
}

unint64_t sub_24465E51C()
{
  unint64_t result = qword_268E9E8D0;
  if (!qword_268E9E8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E8D0);
  }
  return result;
}

unint64_t sub_24465E570()
{
  unint64_t result = qword_268E9E8E0;
  if (!qword_268E9E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E8E0);
  }
  return result;
}

uint64_t type metadata accessor for SetPublicDataRequest.Request(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9E9F8);
}

unint64_t sub_24465E5E4()
{
  unint64_t result = qword_268E9E918;
  if (!qword_268E9E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E918);
  }
  return result;
}

unint64_t sub_24465E638()
{
  unint64_t result = qword_268E9E928;
  if (!qword_268E9E928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E928);
  }
  return result;
}

uint64_t sub_24465E68C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9E938);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24465E6F4()
{
  unint64_t result = qword_268E9E948;
  if (!qword_268E9E948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E948);
  }
  return result;
}

unint64_t sub_24465E748()
{
  unint64_t result = qword_268E9E958;
  if (!qword_268E9E958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E958);
  }
  return result;
}

unint64_t sub_24465E79C()
{
  unint64_t result = qword_268E9E960;
  if (!qword_268E9E960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E960);
  }
  return result;
}

unint64_t sub_24465E7F0()
{
  unint64_t result = qword_268E9E968;
  if (!qword_268E9E968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E968);
  }
  return result;
}

uint64_t sub_24465E844(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SetPublicDataRequest(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9E9E8);
}

uint64_t sub_24465E8AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24465E914()
{
  unint64_t result = qword_268E9E9C0;
  if (!qword_268E9E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E9C0);
  }
  return result;
}

uint64_t sub_24465E968(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24465E9D4()
{
  unint64_t result = qword_268E9E9E0;
  if (!qword_268E9E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9E9E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest()
{
  return &type metadata for FetchPrivateDataRequest;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestV7RequestOwxx_0(uint64_t a1)
{
  return sub_24460EA04(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestV7RequestOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_24460E990(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestV7RequestOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_24460E990(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  unint64_t v15 = *(void *)(a1 + 40);
  char v16 = *(unsigned char *)(a1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  sub_24460EA04(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestV7RequestOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v3;
  sub_24460EA04(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestV7RequestOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FA && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 1018);
  }
  unsigned int v3 = ((*(void *)(a1 + 40) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 48))) ^ 0x3FF;
  if (v3 >= 0x3F9) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestV7RequestOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3F9)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 1018;
    if (a3 >= 0x3FA) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FA) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2)
    {
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = (-a2 & 3) << 60;
      *(unsigned char *)(result + 48) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_24465EC88(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    int v1 = 4;
  }
  else {
    int v1 = 0;
  }
  unsigned int v2 = (*(void *)(a1 + 40) >> 60) & 3 | v1;
  if (v2 <= 5) {
    return v2;
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_24465ECB8(uint64_t result)
{
  *(void *)(result + 40) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_24465ECC8(uint64_t result, unsigned int a2)
{
  if (a2 < 6)
  {
    *(void *)(result + 40) = *(void *)(result + 40) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
    *(unsigned char *)(result + 48) = (a2 & 4) != 0;
  }
  else
  {
    *(void *)unint64_t result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0x2000000000000000;
    *(unsigned char *)(result + 48) = 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request()
{
  return &type metadata for FetchPrivateDataRequest.Request;
}

ValueMetadata *type metadata accessor for FetchDataResponse()
{
  return &type metadata for FetchDataResponse;
}

uint64_t destroy for FetchDataResponse.Response(uint64_t a1)
{
  return sub_24461CE18(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s14MarketplaceKit17FetchDataResponseV8ResponseOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_244635510(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s14MarketplaceKit17FetchDataResponseV8ResponseOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_244635510(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24461CE18(v6, v7, v8);
  return a1;
}

uint64_t _s14MarketplaceKit17FetchDataResponseV8ResponseOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24461CE18(v4, v5, v6);
  return a1;
}

uint64_t _s14MarketplaceKit17FetchDataResponseV8ResponseOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 8) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit17FetchDataResponseV8ResponseOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 248;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24465EECC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24465EED4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response()
{
  return &type metadata for FetchDataResponse.Response;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest()
{
  return &type metadata for FetchPublicDataRequest;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request()
{
  return &type metadata for FetchPublicDataRequest.Request;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest()
{
  return &type metadata for SetPrivateDataRequest;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestV7RequestOwxx_0(uint64_t a1)
{
  return sub_24460E754(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestV7RequestOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_24460E6B4(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestV7RequestOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_24460E6B4(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_24460E754(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestV7RequestOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_24460E754(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestV7RequestOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestV7RequestOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24465F150(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_24465F158(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request()
{
  return &type metadata for SetPrivateDataRequest.Request;
}

uint64_t *initializeBufferWithCopyOfBuffer for SetPublicDataRequest(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for SetPublicDataRequest.Request(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        uint64_t v21 = sub_24469C8D8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        break;
      case 2u:
        uint64_t v7 = sub_24469C8D8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
        uint64_t v9 = *(int *)(v8 + 48);
        long long v10 = (uint64_t *)((char *)a1 + v9);
        char v11 = (uint64_t *)((char *)a2 + v9);
        uint64_t v13 = *v11;
        uint64_t v12 = v11[1];
        *long long v10 = v13;
        v10[1] = v12;
        uint64_t v14 = *(int *)(v8 + 64);
        uint64_t v15 = (char *)a1 + v14;
        char v16 = (_OWORD *)((char *)a2 + v14);
        unint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 8);
        swift_bridgeObjectRetain();
        if (v17 >> 60 != 15) {
          goto LABEL_10;
        }
        *(_OWORD *)uint64_t v15 = *v16;
        break;
      case 4u:
        uint64_t v18 = sub_24469C8D8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
        *(uint64_t *)((char *)a1 + *(int *)(v19 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v19 + 48));
        uint64_t v20 = *(int *)(v19 + 64);
        uint64_t v15 = (char *)a1 + v20;
        char v16 = (_OWORD *)((char *)a2 + v20);
        unint64_t v17 = *(uint64_t *)((char *)a2 + v20 + 8);
        swift_bridgeObjectRetain();
        if (v17 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v15 = *v16;
        }
        else
        {
LABEL_10:
          uint64_t v22 = *(void *)v16;
          sub_24460BBA4(v22, v17);
          *(void *)uint64_t v15 = v22;
          *((void *)v15 + 1) = v17;
        }
        break;
      default:
        uint64_t v5 = a2[1];
        *a1 = *a2;
        a1[1] = v5;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SetPublicDataRequest(uint64_t a1)
{
  type metadata accessor for SetPublicDataRequest.Request(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      uint64_t v3 = sub_24469C8D8();
      int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 2:
      uint64_t v5 = sub_24469C8D8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
      goto LABEL_10;
    case 4:
      uint64_t v7 = sub_24469C8D8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = (uint64_t *)(a1 + *(int *)(v6 + 64));
      unint64_t v9 = v8[1];
      if (v9 >> 60 != 15)
      {
        uint64_t v10 = *v8;
        uint64_t result = sub_24460B97C(v10, v9);
      }
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for SetPublicDataRequest(void *a1, void *a2)
{
  type metadata accessor for SetPublicDataRequest.Request(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      uint64_t v11 = sub_24469C8D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      break;
    case 2u:
      uint64_t v12 = sub_24469C8D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = (void *)((char *)a1 + v14);
      char v16 = (void *)((char *)a2 + v14);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      *uint64_t v15 = v18;
      v15[1] = v17;
      uint64_t v19 = *(int *)(v13 + 64);
      uint64_t v8 = (char *)a1 + v19;
      unint64_t v9 = (_OWORD *)((char *)a2 + v19);
      unint64_t v10 = *(void *)((char *)a2 + v19 + 8);
      swift_bridgeObjectRetain();
      if (v10 >> 60 != 15) {
        goto LABEL_8;
      }
      *(_OWORD *)uint64_t v8 = *v9;
      break;
    case 4u:
      uint64_t v5 = sub_24469C8D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
      *(void *)((char *)a1 + *(int *)(v6 + 48)) = *(void *)((char *)a2 + *(int *)(v6 + 48));
      uint64_t v7 = *(int *)(v6 + 64);
      uint64_t v8 = (char *)a1 + v7;
      unint64_t v9 = (_OWORD *)((char *)a2 + v7);
      unint64_t v10 = *(void *)((char *)a2 + v7 + 8);
      swift_bridgeObjectRetain();
      if (v10 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v8 = *v9;
      }
      else
      {
LABEL_8:
        uint64_t v20 = *(void *)v9;
        sub_24460BBA4(v20, v10);
        *(void *)uint64_t v8 = v20;
        *((void *)v8 + 1) = v10;
      }
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for SetPublicDataRequest(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_24465FB78((uint64_t)a1, type metadata accessor for SetPublicDataRequest.Request);
    type metadata accessor for SetPublicDataRequest.Request(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        uint64_t v16 = sub_24469C8D8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        break;
      case 2u:
        uint64_t v4 = sub_24469C8D8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
        uint64_t v6 = *(int *)(v5 + 48);
        uint64_t v7 = (void *)((char *)a1 + v6);
        uint64_t v8 = (void *)((char *)a2 + v6);
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v9 = *(int *)(v5 + 64);
        unint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (_OWORD *)((char *)a2 + v9);
        unint64_t v12 = *(void *)((char *)a2 + v9 + 8);
        swift_bridgeObjectRetain();
        if (v12 >> 60 != 15) {
          goto LABEL_9;
        }
        *(_OWORD *)unint64_t v10 = *v11;
        break;
      case 4u:
        uint64_t v13 = sub_24469C8D8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
        *(void *)((char *)a1 + *(int *)(v14 + 48)) = *(void *)((char *)a2 + *(int *)(v14 + 48));
        uint64_t v15 = *(int *)(v14 + 64);
        unint64_t v10 = (char *)a1 + v15;
        uint64_t v11 = (_OWORD *)((char *)a2 + v15);
        unint64_t v12 = *(void *)((char *)a2 + v15 + 8);
        swift_bridgeObjectRetain();
        if (v12 >> 60 == 15)
        {
          *(_OWORD *)unint64_t v10 = *v11;
        }
        else
        {
LABEL_9:
          uint64_t v17 = *(void *)v11;
          sub_24460BBA4(v17, v12);
          *(void *)unint64_t v10 = v17;
          *((void *)v10 + 1) = v12;
        }
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24465FB78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for SetPublicDataRequest(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      uint64_t v5 = sub_24469C8D8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      goto LABEL_6;
    case 2u:
      uint64_t v6 = sub_24469C8D8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
      goto LABEL_6;
    case 4u:
      uint64_t v8 = sub_24469C8D8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
      *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
      *(_OWORD *)&a1[*(int *)(v9 + 64)] = *(_OWORD *)&a2[*(int *)(v9 + 64)];
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SetPublicDataRequest(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_24465FB78((uint64_t)a1, type metadata accessor for SetPublicDataRequest.Request);
    uint64_t v4 = type metadata accessor for SetPublicDataRequest.Request(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        uint64_t v5 = sub_24469C8D8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
        goto LABEL_7;
      case 2u:
        uint64_t v6 = sub_24469C8D8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
        *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
        *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
        goto LABEL_7;
      case 4u:
        uint64_t v8 = sub_24469C8D8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
        *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
        *(_OWORD *)&a1[*(int *)(v9 + 64)] = *(_OWORD *)&a2[*(int *)(v9 + 64)];
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SetPublicDataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_244660050);
}

uint64_t sub_244660050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SetPublicDataRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2446600D0);
}

uint64_t sub_2446600D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_244660140()
{
  uint64_t result = type metadata accessor for SetPublicDataRequest.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SetPublicDataRequest.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        uint64_t v22 = sub_24469C8D8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        break;
      case 2u:
        uint64_t v8 = sub_24469C8D8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
        uint64_t v10 = *(int *)(v9 + 48);
        uint64_t v11 = (uint64_t *)((char *)a1 + v10);
        unint64_t v12 = (uint64_t *)((char *)a2 + v10);
        uint64_t v14 = *v12;
        uint64_t v13 = v12[1];
        *uint64_t v11 = v14;
        v11[1] = v13;
        uint64_t v15 = *(int *)(v9 + 64);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (_OWORD *)((char *)a2 + v15);
        unint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 8);
        swift_bridgeObjectRetain();
        if (v18 >> 60 != 15) {
          goto LABEL_10;
        }
        *(_OWORD *)uint64_t v16 = *v17;
        break;
      case 4u:
        uint64_t v19 = sub_24469C8D8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
        *(uint64_t *)((char *)a1 + *(int *)(v20 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v20 + 48));
        uint64_t v21 = *(int *)(v20 + 64);
        uint64_t v16 = (char *)a1 + v21;
        uint64_t v17 = (_OWORD *)((char *)a2 + v21);
        unint64_t v18 = *(uint64_t *)((char *)a2 + v21 + 8);
        swift_bridgeObjectRetain();
        if (v18 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v16 = *v17;
        }
        else
        {
LABEL_10:
          uint64_t v23 = *(void *)v17;
          sub_24460BBA4(v23, v18);
          *(void *)uint64_t v16 = v23;
          *((void *)v16 + 1) = v18;
        }
        break;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SetPublicDataRequest.Request(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      uint64_t v3 = sub_24469C8D8();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 2:
      uint64_t v5 = sub_24469C8D8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
      goto LABEL_10;
    case 4:
      uint64_t v7 = sub_24469C8D8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = (uint64_t *)(a1 + *(int *)(v6 + 64));
      unint64_t v9 = v8[1];
      if (v9 >> 60 != 15)
      {
        uint64_t v10 = *v8;
        uint64_t result = sub_24460B97C(v10, v9);
      }
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for SetPublicDataRequest.Request(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      uint64_t v11 = sub_24469C8D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      break;
    case 2u:
      uint64_t v12 = sub_24469C8D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = (void *)((char *)a1 + v14);
      uint64_t v16 = (void *)((char *)a2 + v14);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      *uint64_t v15 = v18;
      v15[1] = v17;
      uint64_t v19 = *(int *)(v13 + 64);
      uint64_t v8 = (char *)a1 + v19;
      unint64_t v9 = (_OWORD *)((char *)a2 + v19);
      unint64_t v10 = *(void *)((char *)a2 + v19 + 8);
      swift_bridgeObjectRetain();
      if (v10 >> 60 != 15) {
        goto LABEL_8;
      }
      *(_OWORD *)uint64_t v8 = *v9;
      break;
    case 4u:
      uint64_t v5 = sub_24469C8D8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
      *(void *)((char *)a1 + *(int *)(v6 + 48)) = *(void *)((char *)a2 + *(int *)(v6 + 48));
      uint64_t v7 = *(int *)(v6 + 64);
      uint64_t v8 = (char *)a1 + v7;
      unint64_t v9 = (_OWORD *)((char *)a2 + v7);
      unint64_t v10 = *(void *)((char *)a2 + v7 + 8);
      swift_bridgeObjectRetain();
      if (v10 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v8 = *v9;
      }
      else
      {
LABEL_8:
        uint64_t v20 = *(void *)v9;
        sub_24460BBA4(v20, v10);
        *(void *)uint64_t v8 = v20;
        *((void *)v8 + 1) = v10;
      }
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for SetPublicDataRequest.Request(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_24465FB78((uint64_t)a1, type metadata accessor for SetPublicDataRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        uint64_t v16 = sub_24469C8D8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        break;
      case 2u:
        uint64_t v4 = sub_24469C8D8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
        uint64_t v6 = *(int *)(v5 + 48);
        uint64_t v7 = (void *)((char *)a1 + v6);
        uint64_t v8 = (void *)((char *)a2 + v6);
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v9 = *(int *)(v5 + 64);
        unint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (_OWORD *)((char *)a2 + v9);
        unint64_t v12 = *(void *)((char *)a2 + v9 + 8);
        swift_bridgeObjectRetain();
        if (v12 >> 60 != 15) {
          goto LABEL_9;
        }
        *(_OWORD *)unint64_t v10 = *v11;
        break;
      case 4u:
        uint64_t v13 = sub_24469C8D8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
        *(void *)((char *)a1 + *(int *)(v14 + 48)) = *(void *)((char *)a2 + *(int *)(v14 + 48));
        uint64_t v15 = *(int *)(v14 + 64);
        unint64_t v10 = (char *)a1 + v15;
        uint64_t v11 = (_OWORD *)((char *)a2 + v15);
        unint64_t v12 = *(void *)((char *)a2 + v15 + 8);
        swift_bridgeObjectRetain();
        if (v12 >> 60 == 15)
        {
          *(_OWORD *)unint64_t v10 = *v11;
        }
        else
        {
LABEL_9:
          uint64_t v17 = *(void *)v11;
          sub_24460BBA4(v17, v12);
          *(void *)unint64_t v10 = v17;
          *((void *)v10 + 1) = v12;
        }
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for SetPublicDataRequest.Request(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      uint64_t v6 = sub_24469C8D8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_6;
    case 2u:
      uint64_t v7 = sub_24469C8D8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
      *(_OWORD *)&a1[*(int *)(v8 + 48)] = *(_OWORD *)&a2[*(int *)(v8 + 48)];
      *(_OWORD *)&a1[*(int *)(v8 + 64)] = *(_OWORD *)&a2[*(int *)(v8 + 64)];
      goto LABEL_6;
    case 4u:
      uint64_t v9 = sub_24469C8D8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
      *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
      *(_OWORD *)&a1[*(int *)(v10 + 64)] = *(_OWORD *)&a2[*(int *)(v10 + 64)];
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SetPublicDataRequest.Request(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24465FB78((uint64_t)a1, type metadata accessor for SetPublicDataRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        uint64_t v6 = sub_24469C8D8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_7;
      case 2u:
        uint64_t v7 = sub_24469C8D8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E950);
        *(_OWORD *)&a1[*(int *)(v8 + 48)] = *(_OWORD *)&a2[*(int *)(v8 + 48)];
        *(_OWORD *)&a1[*(int *)(v8 + 64)] = *(_OWORD *)&a2[*(int *)(v8 + 64)];
        goto LABEL_7;
      case 4u:
        uint64_t v9 = sub_24469C8D8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E920);
        *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
        *(_OWORD *)&a1[*(int *)(v10 + 64)] = *(_OWORD *)&a2[*(int *)(v10 + 64)];
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_244661000()
{
  uint64_t v4 = &unk_2446A2838;
  uint64_t result = sub_24469C8D8();
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout3();
    uint64_t v6 = &v3;
    uint64_t v7 = v5;
    swift_getTupleTypeLayout3();
    uint64_t v8 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.CodingKeys()
{
  return &type metadata for SetPublicDataRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SetPublicDataRequest.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2446611C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.SearchTerritoryCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.CodingKeys()
{
  return &type metadata for SetPrivateDataRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SetPrivateDataRequest.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24466132CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.CodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.CodingKeys;
}

unsigned char *_s14MarketplaceKit20SetPublicDataRequestV7RequestO31ConfirmPendingInstallCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244661430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.ConditionallyApproveDeveloperCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.ConditionallyApproveDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.CodingKeys()
{
  return &type metadata for FetchPublicDataRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request.CodingKeys()
{
  return &type metadata for FetchPublicDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys()
{
  return &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.CodingKeys()
{
  return &type metadata for FetchDataResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.CodingKeys()
{
  return &type metadata for FetchDataResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ApprovedDeveloperCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.AssociatedAppsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.DistributorPriorityListCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.PassbookProvisioningCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ShowInstallSheetCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.SearchTerritoryCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.LocalizedStringsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.CodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AppInstallRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14MarketplaceKit17FetchDataResponseV8ResponseO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244661710);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.CodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys;
}

unsigned char *_s14MarketplaceKit21SetPrivateDataRequestV7RequestO33RevokeDeveloperApprovalCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244661854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys;
}

unsigned char *_s14MarketplaceKit22FetchPublicDataRequestV7RequestOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x244661958);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys;
}

unint64_t sub_244661994()
{
  unint64_t result = qword_268E9EA08;
  if (!qword_268E9EA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA08);
  }
  return result;
}

unint64_t sub_2446619EC()
{
  unint64_t result = qword_268E9EA10;
  if (!qword_268E9EA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA10);
  }
  return result;
}

unint64_t sub_244661A44()
{
  unint64_t result = qword_268E9EA18;
  if (!qword_268E9EA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA18);
  }
  return result;
}

unint64_t sub_244661A9C()
{
  unint64_t result = qword_268E9EA20;
  if (!qword_268E9EA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA20);
  }
  return result;
}

unint64_t sub_244661AF4()
{
  unint64_t result = qword_268E9EA28;
  if (!qword_268E9EA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA28);
  }
  return result;
}

unint64_t sub_244661B4C()
{
  unint64_t result = qword_268E9EA30;
  if (!qword_268E9EA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA30);
  }
  return result;
}

unint64_t sub_244661BA4()
{
  unint64_t result = qword_268E9EA38;
  if (!qword_268E9EA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA38);
  }
  return result;
}

unint64_t sub_244661BFC()
{
  unint64_t result = qword_268E9EA40;
  if (!qword_268E9EA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA40);
  }
  return result;
}

unint64_t sub_244661C54()
{
  unint64_t result = qword_268E9EA48;
  if (!qword_268E9EA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA48);
  }
  return result;
}

unint64_t sub_244661CAC()
{
  unint64_t result = qword_268E9EA50;
  if (!qword_268E9EA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA50);
  }
  return result;
}

unint64_t sub_244661D04()
{
  unint64_t result = qword_268E9EA58;
  if (!qword_268E9EA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA58);
  }
  return result;
}

unint64_t sub_244661D5C()
{
  unint64_t result = qword_268E9EA60;
  if (!qword_268E9EA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA60);
  }
  return result;
}

unint64_t sub_244661DB4()
{
  unint64_t result = qword_268E9EA68;
  if (!qword_268E9EA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA68);
  }
  return result;
}

unint64_t sub_244661E0C()
{
  unint64_t result = qword_268E9EA70;
  if (!qword_268E9EA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA70);
  }
  return result;
}

unint64_t sub_244661E64()
{
  unint64_t result = qword_268E9EA78;
  if (!qword_268E9EA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA78);
  }
  return result;
}

unint64_t sub_244661EBC()
{
  unint64_t result = qword_268E9EA80;
  if (!qword_268E9EA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA80);
  }
  return result;
}

unint64_t sub_244661F14()
{
  unint64_t result = qword_268E9EA88;
  if (!qword_268E9EA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA88);
  }
  return result;
}

unint64_t sub_244661F6C()
{
  unint64_t result = qword_268E9EA90;
  if (!qword_268E9EA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA90);
  }
  return result;
}

unint64_t sub_244661FC4()
{
  unint64_t result = qword_268E9EA98;
  if (!qword_268E9EA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EA98);
  }
  return result;
}

unint64_t sub_24466201C()
{
  unint64_t result = qword_268E9EAA0;
  if (!qword_268E9EAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAA0);
  }
  return result;
}

unint64_t sub_244662074()
{
  unint64_t result = qword_268E9EAA8;
  if (!qword_268E9EAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAA8);
  }
  return result;
}

unint64_t sub_2446620CC()
{
  unint64_t result = qword_268E9EAB0;
  if (!qword_268E9EAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAB0);
  }
  return result;
}

unint64_t sub_244662124()
{
  unint64_t result = qword_268E9EAB8;
  if (!qword_268E9EAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAB8);
  }
  return result;
}

unint64_t sub_24466217C()
{
  unint64_t result = qword_268E9EAC0;
  if (!qword_268E9EAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAC0);
  }
  return result;
}

unint64_t sub_2446621D4()
{
  unint64_t result = qword_268E9EAC8;
  if (!qword_268E9EAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAC8);
  }
  return result;
}

unint64_t sub_24466222C()
{
  unint64_t result = qword_268E9EAD0;
  if (!qword_268E9EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAD0);
  }
  return result;
}

unint64_t sub_244662284()
{
  unint64_t result = qword_268E9EAD8;
  if (!qword_268E9EAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAD8);
  }
  return result;
}

unint64_t sub_2446622DC()
{
  unint64_t result = qword_268E9EAE0;
  if (!qword_268E9EAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAE0);
  }
  return result;
}

unint64_t sub_244662334()
{
  unint64_t result = qword_268E9EAE8;
  if (!qword_268E9EAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAE8);
  }
  return result;
}

unint64_t sub_24466238C()
{
  unint64_t result = qword_268E9EAF0;
  if (!qword_268E9EAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAF0);
  }
  return result;
}

unint64_t sub_2446623E4()
{
  unint64_t result = qword_268E9EAF8;
  if (!qword_268E9EAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EAF8);
  }
  return result;
}

unint64_t sub_24466243C()
{
  unint64_t result = qword_268E9EB00;
  if (!qword_268E9EB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB00);
  }
  return result;
}

unint64_t sub_244662494()
{
  unint64_t result = qword_268E9EB08;
  if (!qword_268E9EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB08);
  }
  return result;
}

unint64_t sub_2446624EC()
{
  unint64_t result = qword_268E9EB10;
  if (!qword_268E9EB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB10);
  }
  return result;
}

unint64_t sub_244662544()
{
  unint64_t result = qword_268E9EB18;
  if (!qword_268E9EB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB18);
  }
  return result;
}

unint64_t sub_24466259C()
{
  unint64_t result = qword_268E9EB20;
  if (!qword_268E9EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB20);
  }
  return result;
}

unint64_t sub_2446625F4()
{
  unint64_t result = qword_268E9EB28;
  if (!qword_268E9EB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB28);
  }
  return result;
}

unint64_t sub_24466264C()
{
  unint64_t result = qword_268E9EB30;
  if (!qword_268E9EB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB30);
  }
  return result;
}

unint64_t sub_2446626A4()
{
  unint64_t result = qword_268E9EB38;
  if (!qword_268E9EB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB38);
  }
  return result;
}

unint64_t sub_2446626FC()
{
  unint64_t result = qword_268E9EB40;
  if (!qword_268E9EB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB40);
  }
  return result;
}

unint64_t sub_244662754()
{
  unint64_t result = qword_268E9EB48;
  if (!qword_268E9EB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB48);
  }
  return result;
}

unint64_t sub_2446627AC()
{
  unint64_t result = qword_268E9EB50;
  if (!qword_268E9EB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB50);
  }
  return result;
}

unint64_t sub_244662804()
{
  unint64_t result = qword_268E9EB58;
  if (!qword_268E9EB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB58);
  }
  return result;
}

unint64_t sub_24466285C()
{
  unint64_t result = qword_268E9EB60;
  if (!qword_268E9EB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB60);
  }
  return result;
}

unint64_t sub_2446628B4()
{
  unint64_t result = qword_268E9EB68;
  if (!qword_268E9EB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB68);
  }
  return result;
}

unint64_t sub_24466290C()
{
  unint64_t result = qword_268E9EB70;
  if (!qword_268E9EB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB70);
  }
  return result;
}

unint64_t sub_244662964()
{
  unint64_t result = qword_268E9EB78;
  if (!qword_268E9EB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB78);
  }
  return result;
}

unint64_t sub_2446629BC()
{
  unint64_t result = qword_268E9EB80;
  if (!qword_268E9EB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB80);
  }
  return result;
}

unint64_t sub_244662A14()
{
  unint64_t result = qword_268E9EB88;
  if (!qword_268E9EB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB88);
  }
  return result;
}

unint64_t sub_244662A6C()
{
  unint64_t result = qword_268E9EB90;
  if (!qword_268E9EB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB90);
  }
  return result;
}

unint64_t sub_244662AC4()
{
  unint64_t result = qword_268E9EB98;
  if (!qword_268E9EB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EB98);
  }
  return result;
}

unint64_t sub_244662B1C()
{
  unint64_t result = qword_268E9EBA0;
  if (!qword_268E9EBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBA0);
  }
  return result;
}

unint64_t sub_244662B74()
{
  unint64_t result = qword_268E9EBA8;
  if (!qword_268E9EBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBA8);
  }
  return result;
}

unint64_t sub_244662BCC()
{
  unint64_t result = qword_268E9EBB0;
  if (!qword_268E9EBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBB0);
  }
  return result;
}

unint64_t sub_244662C24()
{
  unint64_t result = qword_268E9EBB8;
  if (!qword_268E9EBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBB8);
  }
  return result;
}

unint64_t sub_244662C7C()
{
  unint64_t result = qword_268E9EBC0;
  if (!qword_268E9EBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBC0);
  }
  return result;
}

unint64_t sub_244662CD4()
{
  unint64_t result = qword_268E9EBC8;
  if (!qword_268E9EBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBC8);
  }
  return result;
}

unint64_t sub_244662D2C()
{
  unint64_t result = qword_268E9EBD0;
  if (!qword_268E9EBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBD0);
  }
  return result;
}

unint64_t sub_244662D84()
{
  unint64_t result = qword_268E9EBD8;
  if (!qword_268E9EBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBD8);
  }
  return result;
}

unint64_t sub_244662DDC()
{
  unint64_t result = qword_268E9EBE0;
  if (!qword_268E9EBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBE0);
  }
  return result;
}

unint64_t sub_244662E34()
{
  unint64_t result = qword_268E9EBE8;
  if (!qword_268E9EBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBE8);
  }
  return result;
}

unint64_t sub_244662E8C()
{
  unint64_t result = qword_268E9EBF0;
  if (!qword_268E9EBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBF0);
  }
  return result;
}

unint64_t sub_244662EE4()
{
  unint64_t result = qword_268E9EBF8;
  if (!qword_268E9EBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EBF8);
  }
  return result;
}

unint64_t sub_244662F3C()
{
  unint64_t result = qword_268E9EC00;
  if (!qword_268E9EC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC00);
  }
  return result;
}

unint64_t sub_244662F94()
{
  unint64_t result = qword_268E9EC08;
  if (!qword_268E9EC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC08);
  }
  return result;
}

unint64_t sub_244662FEC()
{
  unint64_t result = qword_268E9EC10;
  if (!qword_268E9EC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC10);
  }
  return result;
}

unint64_t sub_244663044()
{
  unint64_t result = qword_268E9EC18;
  if (!qword_268E9EC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC18);
  }
  return result;
}

unint64_t sub_24466309C()
{
  unint64_t result = qword_268E9EC20;
  if (!qword_268E9EC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC20);
  }
  return result;
}

unint64_t sub_2446630F4()
{
  unint64_t result = qword_268E9EC28;
  if (!qword_268E9EC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC28);
  }
  return result;
}

unint64_t sub_24466314C()
{
  unint64_t result = qword_268E9EC30;
  if (!qword_268E9EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC30);
  }
  return result;
}

unint64_t sub_2446631A4()
{
  unint64_t result = qword_268E9EC38;
  if (!qword_268E9EC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC38);
  }
  return result;
}

unint64_t sub_2446631FC()
{
  unint64_t result = qword_268E9EC40;
  if (!qword_268E9EC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC40);
  }
  return result;
}

unint64_t sub_244663254()
{
  unint64_t result = qword_26B0D15D8;
  if (!qword_26B0D15D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15D8);
  }
  return result;
}

unint64_t sub_2446632AC()
{
  unint64_t result = qword_26B0D15D0;
  if (!qword_26B0D15D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15D0);
  }
  return result;
}

unint64_t sub_244663304()
{
  unint64_t result = qword_26B0D15A0;
  if (!qword_26B0D15A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15A0);
  }
  return result;
}

unint64_t sub_24466335C()
{
  unint64_t result = qword_26B0D1598;
  if (!qword_26B0D1598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1598);
  }
  return result;
}

unint64_t sub_2446633B4()
{
  unint64_t result = qword_26B0D1580;
  if (!qword_26B0D1580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1580);
  }
  return result;
}

unint64_t sub_24466340C()
{
  unint64_t result = qword_26B0D1578;
  if (!qword_26B0D1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1578);
  }
  return result;
}

unint64_t sub_244663464()
{
  unint64_t result = qword_26B0D1540;
  if (!qword_26B0D1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1540);
  }
  return result;
}

unint64_t sub_2446634BC()
{
  unint64_t result = qword_26B0D1538;
  if (!qword_26B0D1538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1538);
  }
  return result;
}

unint64_t sub_244663514()
{
  unint64_t result = qword_26B0D15B0;
  if (!qword_26B0D15B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15B0);
  }
  return result;
}

unint64_t sub_24466356C()
{
  unint64_t result = qword_26B0D15A8;
  if (!qword_26B0D15A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15A8);
  }
  return result;
}

unint64_t sub_2446635C4()
{
  unint64_t result = qword_26B0D1590;
  if (!qword_26B0D1590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1590);
  }
  return result;
}

unint64_t sub_24466361C()
{
  unint64_t result = qword_26B0D1588;
  if (!qword_26B0D1588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1588);
  }
  return result;
}

unint64_t sub_244663674()
{
  unint64_t result = qword_26B0D1570;
  if (!qword_26B0D1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1570);
  }
  return result;
}

unint64_t sub_2446636CC()
{
  unint64_t result = qword_26B0D1568;
  if (!qword_26B0D1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1568);
  }
  return result;
}

unint64_t sub_244663724()
{
  unint64_t result = qword_26B0D15C0;
  if (!qword_26B0D15C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15C0);
  }
  return result;
}

unint64_t sub_24466377C()
{
  unint64_t result = qword_26B0D15B8;
  if (!qword_26B0D15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15B8);
  }
  return result;
}

unint64_t sub_2446637D4()
{
  unint64_t result = qword_26B0D1550;
  if (!qword_26B0D1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1550);
  }
  return result;
}

unint64_t sub_24466382C()
{
  unint64_t result = qword_26B0D1548;
  if (!qword_26B0D1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1548);
  }
  return result;
}

unint64_t sub_244663884()
{
  unint64_t result = qword_26B0D1560;
  if (!qword_26B0D1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1560);
  }
  return result;
}

unint64_t sub_2446638DC()
{
  unint64_t result = qword_26B0D1558;
  if (!qword_26B0D1558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1558);
  }
  return result;
}

unint64_t sub_244663934()
{
  unint64_t result = qword_26B0D1530;
  if (!qword_26B0D1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1530);
  }
  return result;
}

unint64_t sub_24466398C()
{
  unint64_t result = qword_26B0D1528;
  if (!qword_26B0D1528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1528);
  }
  return result;
}

unint64_t sub_2446639E4()
{
  unint64_t result = qword_26B0D1698;
  if (!qword_26B0D1698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1698);
  }
  return result;
}

unint64_t sub_244663A3C()
{
  unint64_t result = qword_26B0D1690;
  if (!qword_26B0D1690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1690);
  }
  return result;
}

unint64_t sub_244663A94()
{
  unint64_t result = qword_26B0D1650;
  if (!qword_26B0D1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1650);
  }
  return result;
}

unint64_t sub_244663AEC()
{
  unint64_t result = qword_26B0D1648;
  if (!qword_26B0D1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1648);
  }
  return result;
}

unint64_t sub_244663B44()
{
  unint64_t result = qword_26B0D1630;
  if (!qword_26B0D1630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1630);
  }
  return result;
}

unint64_t sub_244663B9C()
{
  unint64_t result = qword_26B0D1628;
  if (!qword_26B0D1628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1628);
  }
  return result;
}

unint64_t sub_244663BF4()
{
  unint64_t result = qword_26B0D1600;
  if (!qword_26B0D1600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1600);
  }
  return result;
}

unint64_t sub_244663C4C()
{
  unint64_t result = qword_26B0D15F8;
  if (!qword_26B0D15F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15F8);
  }
  return result;
}

unint64_t sub_244663CA4()
{
  unint64_t result = qword_26B0D1660;
  if (!qword_26B0D1660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1660);
  }
  return result;
}

unint64_t sub_244663CFC()
{
  unint64_t result = qword_26B0D1658;
  if (!qword_26B0D1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1658);
  }
  return result;
}

unint64_t sub_244663D54()
{
  unint64_t result = qword_26B0D1640;
  if (!qword_26B0D1640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1640);
  }
  return result;
}

unint64_t sub_244663DAC()
{
  unint64_t result = qword_26B0D1638;
  if (!qword_26B0D1638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1638);
  }
  return result;
}

unint64_t sub_244663E04()
{
  unint64_t result = qword_26B0D1620;
  if (!qword_26B0D1620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1620);
  }
  return result;
}

unint64_t sub_244663E5C()
{
  unint64_t result = qword_26B0D1618;
  if (!qword_26B0D1618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1618);
  }
  return result;
}

unint64_t sub_244663EB4()
{
  unint64_t result = qword_26B0D1670;
  if (!qword_26B0D1670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1670);
  }
  return result;
}

unint64_t sub_244663F0C()
{
  unint64_t result = qword_26B0D1668;
  if (!qword_26B0D1668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1668);
  }
  return result;
}

unint64_t sub_244663F64()
{
  unint64_t result = qword_26B0D1680;
  if (!qword_26B0D1680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1680);
  }
  return result;
}

unint64_t sub_244663FBC()
{
  unint64_t result = qword_26B0D1678;
  if (!qword_26B0D1678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1678);
  }
  return result;
}

unint64_t sub_244664014()
{
  unint64_t result = qword_26B0D1610;
  if (!qword_26B0D1610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1610);
  }
  return result;
}

unint64_t sub_24466406C()
{
  unint64_t result = qword_26B0D1608;
  if (!qword_26B0D1608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D1608);
  }
  return result;
}

unint64_t sub_2446640C4()
{
  unint64_t result = qword_26B0D15F0;
  if (!qword_26B0D15F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15F0);
  }
  return result;
}

unint64_t sub_24466411C()
{
  unint64_t result = qword_26B0D15E8;
  if (!qword_26B0D15E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0D15E8);
  }
  return result;
}

uint64_t sub_244664170(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002446AAAF0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002446AAB10 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEE00737070416465 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002446AAB30 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002446AAB50 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AAB70 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002446AAB90 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002446AABB0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AA000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_2446644F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002446AAAF0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002446AAB10 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEE00737070416465 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002446AAB30 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002446AAB50 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AAB70 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002446AAB90 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AA000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_2446648A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000002446AABD0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002446AABF0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002446AAB30 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002446AAC10 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AAB70 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002446AABB0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_244664AE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244664BA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002446AAC30 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002446AAC50 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002446AAC70 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002446AAC90)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_244664DC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12895 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t CodableAuditToken.auditToken.getter()
{
  return *(void *)v0;
}

void __swiftcall CodableAuditToken.init(auditToken:)(MarketplaceKit::CodableAuditToken *__return_ptr retstr, audit_token_t *auditToken)
{
  *(void *)retstr->field2446B2584.val = auditToken;
  *(void *)&retstr->field2446B2584.val[2] = v2;
  *(void *)&retstr->field2446B2584.val[4] = v3;
  *(void *)&retstr->field2446B2584.val[6] = v4;
}

uint64_t CodableAuditToken.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  v12[5] = *MEMORY[0x263EF8340];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24469D6F8();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_24463EACC();
    sub_24469D5C8();
    long long v5 = v10;
    long long v10 = 0u;
    long long v11 = 0u;
    char v6 = (void *)sub_24469C8A8();
    objc_msgSend(v6, sel_getBytes_length_, &v10, 32);
    sub_24460B97C(v5, *((unint64_t *)&v5 + 1));

    long long v8 = v11;
    long long v9 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    *a2 = v9;
    a2[1] = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodableAuditToken.encode(to:)(void *a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24469D718();
  long long v2 = v1[1];
  v7[0] = *v1;
  v7[1] = v2;
  uint64_t v3 = sub_2446656BC(v7, 32);
  unint64_t v5 = v4;
  uint64_t v8 = v3;
  unint64_t v9 = v4;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  sub_24463EA78();
  sub_24469D5D8();
  sub_24460B97C(v3, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_244665190@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return CodableAuditToken.init(from:)(a1, a2);
}

uint64_t sub_2446651A8(void *a1)
{
  return CodableAuditToken.encode(to:)(a1);
}

uint64_t static FairPlayPassbookProvisioning.getProvisioningInfo(auditToken:nonce:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a3;
  v6[16] = a4;
  v6[13] = a1;
  v6[14] = a2;
  return MEMORY[0x270FA2498](sub_2446651E8, 0, 0);
}

uint64_t sub_2446651E8()
{
  unint64_t v1 = *(void *)(v0 + 144);
  sub_24460BBA4(*(void *)(v0 + 136), v1);
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 104);
  *(void *)(v0 + 16) = v6;
  *(void *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v1 | 0x2000000000000000;
  *(unsigned char *)(v0 + 64) = 0;
  *(void *)(v0 + 96) = v0 + 16;
  sub_24460E990(v6, v4, v5, v2, v3, v1 | 0x2000000000000000, 0);
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268E9D828 + dword_268E9D828);
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v7;
  *BOOL v7 = v0;
  v7[1] = sub_244665334;
  return v9(v0 + 72, v0 + 96, (uint64_t)sub_244654F78, 0);
}

uint64_t sub_244665334()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244665580;
  }
  else
  {
    sub_24460EA04(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
    uint64_t v3 = sub_24466545C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24466545C()
{
  uint64_t v2 = *(void *)(v0 + 72);
  unint64_t v1 = *(void *)(v0 + 80);
  int v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 4)
  {
    sub_24460B97C(*(void *)(v0 + 136), *(void *)(v0 + 144));
    uint64_t v4 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return v4(v2, v1);
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_244631FC0();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_24461CE18(v2, v1, v3);
    sub_24460B97C(*(void *)(v0 + 136), *(void *)(v0 + 144));
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_244665580()
{
  sub_24460EA04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_24460B97C(*(void *)(v0 + 136), *(void *)(v0 + 144));
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2446655F8(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_2446656BC(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_2446655F8(__src, &__src[a2]);
  }
  sub_24469C7E8();
  swift_allocObject();
  sub_24469C7A8();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_24469C898();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableAuditToken()
{
  return &type metadata for CodableAuditToken;
}

ValueMetadata *type metadata accessor for FairPlayPassbookProvisioning()
{
  return &type metadata for FairPlayPassbookProvisioning;
}

uint64_t sub_2446657E0(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      unint64_t v4 = 7365733;
      break;
    case 2:
      unint64_t v4 = 0x6B6F54687475416FLL;
      unint64_t v3 = 0xEA00000000006E65;
      break;
    case 3:
      char v5 = "proofOfDownloadToken";
      goto LABEL_8;
    case 4:
      unint64_t v4 = 0x49746E756F636361;
      unint64_t v3 = 0xE900000000000044;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v4 = 1701869940;
      break;
    case 6:
      char v5 = "isMarketplaceInstall";
LABEL_8:
      unint64_t v3 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v4 = 0xD000000000000014;
      break;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v4 = 0x7265727265666572;
      break;
    case 8:
      unint64_t v4 = 0x6572616853707061;
      unint64_t v3 = 0xEB000000004C5255;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE200000000000000;
  uint64_t v7 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v4 == 7365733) {
        goto LABEL_26;
      }
      goto LABEL_29;
    case 2:
      unint64_t v6 = 0xEA00000000006E65;
      if (v4 != 0x6B6F54687475416FLL) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 3:
      uint64_t v8 = "proofOfDownloadToken";
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE900000000000044;
      if (v4 != 0x49746E756F636361) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v4 != 1701869940) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 6:
      uint64_t v8 = "isMarketplaceInstall";
LABEL_22:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      if (v4 != 0xD000000000000014) {
        goto LABEL_29;
      }
      goto LABEL_26;
    case 7:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x7265727265666572;
      goto LABEL_25;
    case 8:
      unint64_t v6 = 0xEB000000004C5255;
      if (v4 != 0x6572616853707061) {
        goto LABEL_29;
      }
      goto LABEL_26;
    default:
LABEL_25:
      if (v4 != v7) {
        goto LABEL_29;
      }
LABEL_26:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_29:
      }
        char v9 = sub_24469D5B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_244665A80()
{
  sub_24469CFD8();

  return swift_bridgeObjectRelease();
}

uint64_t AppInstallRequest.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24469C8D8();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AppInstallRequest.adp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 20);
  uint64_t v4 = sub_24469C888();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppInstallRequest()
{
  uint64_t result = qword_268E9EC80;
  if (!qword_268E9EC80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AppInstallRequest.oAuthToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.installVerificationToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.accountID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 36);
  uint64_t v4 = sub_24469CA48();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppInstallRequest.isMarketplaceInstall.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 40));
}

uint64_t AppInstallRequest.referrer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 44);

  return sub_24463EB54(v3, a1);
}

uint64_t AppInstallRequest.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 48);

  return sub_24463EB54(v3, a1);
}

unint64_t sub_244665ED0(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 7365733;
      break;
    case 2:
      unint64_t result = 0x6B6F54687475416FLL;
      break;
    case 3:
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x49746E756F636361;
      break;
    case 5:
      unint64_t result = 1701869940;
      break;
    case 7:
      unint64_t result = 0x7265727265666572;
      break;
    case 8:
      unint64_t result = 0x6572616853707061;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_244665FDC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 7365733;
      break;
    case 2:
      unint64_t result = 0x6B6F54687475416FLL;
      break;
    case 3:
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x49746E756F636361;
      break;
    case 5:
      unint64_t result = 1701869940;
      break;
    case 7:
      unint64_t result = 0x7265727265666572;
      break;
    case 8:
      unint64_t result = 0x6572616853707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2446660E8(char *a1, char *a2)
{
  return sub_2446657E0(*a1, *a2);
}

uint64_t sub_2446660F4()
{
  return sub_24469D6C8();
}

uint64_t sub_24466613C()
{
  return sub_244665A80();
}

uint64_t sub_244666144()
{
  return sub_24469D6C8();
}

uint64_t sub_244666188@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_244669574();
  *a1 = result;
  return result;
}

unint64_t sub_2446661B8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_244665ED0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2446661E4()
{
  return sub_244665FDC(*v0);
}

uint64_t sub_2446661EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_244669574();
  *a1 = result;
  return result;
}

uint64_t sub_244666214(uint64_t a1)
{
  unint64_t v2 = sub_244667BB4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244666250(uint64_t a1)
{
  unint64_t v2 = sub_244667BB4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppInstallRequest.init(adp:type:oAuthToken:installVerificationToken:accountID:appShareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v34 = a7;
  uint64_t v35 = a8;
  uint64_t v36 = a2;
  uint64_t v16 = sub_24469C8D8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469C8C8();
  sub_2446664C0(a10);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a9, v20, v16);
  uint64_t v21 = (int *)type metadata accessor for AppInstallRequest();
  uint64_t v22 = a9 + v21[5];
  uint64_t v23 = sub_24469C888();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v22, a1, v23);
  uint64_t v25 = (void *)(a9 + v21[6]);
  *uint64_t v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(a9 + v21[7]);
  *uint64_t v26 = a5;
  v26[1] = a6;
  uint64_t v27 = (void *)(a9 + v21[8]);
  uint64_t v28 = v35;
  void *v27 = v34;
  v27[1] = v28;
  uint64_t v29 = a9 + v21[9];
  uint64_t v30 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, v36, v30);
  *(unsigned char *)(a9 + v21[10]) = 0;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v31(a9 + v21[11], 1, 1, v23);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(a9 + v21[12], 1, 1, v23);
}

uint64_t sub_2446664C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244666520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = sub_24469C888();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for AppInstallRequest();
  uint64_t v52 = *((void *)v17 - 1);
  MEMORY[0x270FA5388](v17, v18);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (int *)type metadata accessor for LinkMetadata();
  sub_24463EB54(a1 + v21[10], (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_2446695C0(a1, (uint64_t (*)(void))type metadata accessor for LinkMetadata);
    sub_2446664C0((uint64_t)v11);
    uint64_t v22 = 1;
  }
  else
  {
    uint64_t v49 = v8;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
    sub_24469C8C8();
    uint64_t v23 = &v20[v17[5]];
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v48 = v13 + 16;
    v47(v23, v16, v12);
    uint64_t v24 = (uint64_t *)(a1 + v21[7]);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = &v20[v17[6]];
    *(void *)uint64_t v27 = v26;
    *((void *)v27 + 1) = v25;
    uint64_t v28 = (uint64_t *)(a1 + v21[8]);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = &v20[v17[7]];
    *(void *)uint64_t v31 = v29;
    *((void *)v31 + 1) = v30;
    uint64_t v32 = (uint64_t *)(a1 + v21[9]);
    unint64_t v33 = v32[1];
    uint64_t v50 = a1;
    uint64_t v51 = a2;
    if (v33)
    {
      uint64_t v34 = *v32;
      unint64_t v45 = v33;
      uint64_t v46 = v34;
    }
    else
    {
      unint64_t v45 = 0xE900000000000073;
      uint64_t v46 = 0x756F6D796E6F6E41;
    }
    uint64_t v35 = *(void (**)(char *, uint64_t))(v13 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35(v16, v12);
    uint64_t v36 = (uint64_t *)&v20[v17[8]];
    unint64_t v37 = v45;
    *uint64_t v36 = v46;
    v36[1] = v37;
    uint64_t v38 = &v20[v17[9]];
    uint64_t v39 = *MEMORY[0x263F106A0];
    uint64_t v40 = sub_24469CA48();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
    v20[v17[10]] = 1;
    uint64_t v41 = &v20[v17[11]];
    uint64_t v42 = v50;
    v47(v41, (char *)(v50 + v21[5]), v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v41, 0, 1, v12);
    uint64_t v43 = (uint64_t)v49;
    sub_24463EB54(v42 + v21[11], (uint64_t)v49);
    sub_2446695C0(v42, (uint64_t (*)(void))type metadata accessor for LinkMetadata);
    sub_24463EBBC(v43, (uint64_t)&v20[v17[12]]);
    a2 = v51;
    sub_244669620((uint64_t)v20, v51);
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v52 + 56))(a2, v22, 1, v17);
}

uint64_t AppInstallRequest.request()()
{
  v1[3] = v0;
  type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2446669F8, 0, 0);
}

uint64_t sub_2446669F8()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  sub_244667B50(v0[3], v1);
  sub_244667C08(&qword_268E9D9E8, (void (*)(uint64_t))type metadata accessor for AppInstallRequest);
  sub_244667C08(&qword_268E9D9F0, (void (*)(uint64_t))type metadata accessor for AppInstallRequest);
  sub_244667B50(v1, v2);
  v0[2] = v2;
  uint64_t v5 = &aW[*(int *)aW];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_244666B78;
  return ((uint64_t (*)(void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v5)(v0 + 2, sub_244666DD8, 0);
}

uint64_t sub_244666B78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244666D34;
  }
  else
  {
    sub_2446695C0(*(void *)(v2 + 32), (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
    uint64_t v3 = sub_244666CA8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244666CA8()
{
  sub_2446695C0(*(void *)(v0 + 40), (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244666D34()
{
  uint64_t v1 = v0[5];
  sub_2446695C0(v0[4], (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  sub_2446695C0(v1, (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void sub_244666DD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  id v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_9;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_requestEDPInstallation_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t AppInstallRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EC58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244667BB4();
  sub_24469D728();
  char v21 = 0;
  sub_24469C8D8();
  sub_244667C08(&qword_268E9E930, MEMORY[0x263F07508]);
  sub_24469D568();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for AppInstallRequest();
    char v20 = 1;
    sub_24469C888();
    sub_244667C08(&qword_268E9D5A0, MEMORY[0x263F06EA8]);
    sub_24469D568();
    char v19 = 2;
    sub_24469D4F8();
    char v18 = 3;
    sub_24469D4F8();
    char v17 = 4;
    sub_24469D548();
    uint64_t v12 = v3 + *(int *)(v10 + 36);
    char v16 = 5;
    sub_24469CA48();
    sub_244667C08(&qword_268E9EC68, MEMORY[0x263F106A8]);
    sub_24469D568();
    char v15 = 6;
    sub_24469D558();
    char v14 = 7;
    sub_24469D528();
    char v13 = 8;
    sub_24469D528();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t AppInstallRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  uint64_t v5 = MEMORY[0x270FA5388](v3 - 8, v4);
  uint64_t v53 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v54 = (char *)v51 - v8;
  uint64_t v64 = sub_24469CA48();
  uint64_t v58 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64, v9);
  uint64_t v11 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24469C888();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  MEMORY[0x270FA5388](v12, v13);
  char v15 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24469C8D8();
  uint64_t v62 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v17);
  char v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EC70);
  uint64_t v55 = *(void *)(v20 - 8);
  uint64_t v56 = v20;
  MEMORY[0x270FA5388](v20, v21);
  uint64_t v23 = (char *)v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for AppInstallRequest();
  MEMORY[0x270FA5388](v66, v24);
  uint64_t v26 = (char *)v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1[3];
  uint64_t v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_244667BB4();
  uint64_t v57 = v23;
  uint64_t v28 = v65;
  sub_24469D708();
  uint64_t v59 = v16;
  if (v28) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  }
  uint64_t v65 = v11;
  uint64_t v29 = v55;
  char v75 = 0;
  sub_244667C08(&qword_268E9E9A0, MEMORY[0x263F07508]);
  sub_24469D498();
  uint64_t v30 = v16;
  uint64_t v31 = (uint64_t)v26;
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v26, v19, v30);
  char v74 = 1;
  uint64_t v32 = sub_244667C08(&qword_268E9D5B0, MEMORY[0x263F06EA8]);
  uint64_t v33 = v61;
  sub_24469D498();
  uint64_t v34 = (int *)v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v31 + *(int *)(v66 + 20), v15, v33);
  char v73 = 2;
  uint64_t v35 = sub_24469D428();
  uint64_t v37 = (uint64_t)v63;
  uint64_t v36 = v64;
  v51[1] = v32;
  uint64_t v38 = (uint64_t *)(v31 + v34[6]);
  *uint64_t v38 = v35;
  v38[1] = v39;
  char v72 = 3;
  uint64_t v40 = sub_24469D428();
  uint64_t v41 = v29;
  uint64_t v42 = (uint64_t *)(v31 + v34[7]);
  *uint64_t v42 = v40;
  v42[1] = v43;
  char v71 = 4;
  uint64_t v44 = sub_24469D478();
  uint64_t v46 = (uint64_t *)(v31 + v34[8]);
  *uint64_t v46 = v44;
  v46[1] = v47;
  char v70 = 5;
  sub_244667C08(&qword_268E9EC78, MEMORY[0x263F106A8]);
  uint64_t v48 = v65;
  sub_24469D498();
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v31 + v34[9], v48, v36);
  char v69 = 6;
  *(unsigned char *)(v31 + v34[10]) = sub_24469D488() & 1;
  char v68 = 7;
  uint64_t v49 = (uint64_t)v54;
  sub_24469D458();
  sub_24463EBBC(v49, v31 + v34[11]);
  char v67 = 8;
  uint64_t v50 = (uint64_t)v53;
  sub_24469D458();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v57, v56);
  sub_24463EBBC(v50, v31 + v34[12]);
  sub_244667B50(v31, v52);
  __swift_destroy_boxed_opaque_existential_1(v37);
  return sub_2446695C0(v31, (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
}

uint64_t sub_244667B20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppInstallRequest.init(from:)(a1, a2);
}

uint64_t sub_244667B38(void *a1)
{
  return AppInstallRequest.encode(to:)(a1);
}

uint64_t sub_244667B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppInstallRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_244667BB4()
{
  unint64_t result = qword_268E9EC60;
  if (!qword_268E9EC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC60);
  }
  return result;
}

uint64_t sub_244667C08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AppInstallRequest(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24469C8D8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24469C888();
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v41 = *(void *)(v11 - 8);
    uint64_t v42 = *v43;
    (*v43)(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v12);
    char v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (void *)((char *)a1 + v13);
    uint64_t v18 = (void *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (void *)((char *)a1 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v39 = (char *)a1 + v21;
    uint64_t v40 = (char *)a2 + v21;
    uint64_t v25 = sub_24469CA48();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v39, v40, v25);
    uint64_t v27 = v11;
    uint64_t v28 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    if (v31((char *)a2 + v28, 1, v27))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v42(v29, v30, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v29, 0, 1, v27);
    }
    uint64_t v34 = a3[12];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    if (v31(v36, 1, v27))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      v42(v35, v36, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v35, 0, 1, v27);
    }
  }
  return a1;
}

uint64_t destroy for AppInstallRequest(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24469C8D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v14(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[11];
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v11(v10, 1, v6)) {
    v14(v10, v6);
  }
  uint64_t v12 = a1 + a2[12];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v6);
  }
  return result;
}

uint64_t initializeWithCopy for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24469C888();
  uint64_t v41 = (void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16);
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = *v41;
  (*v41)(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  uint64_t v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v37 = a1 + v20;
  uint64_t v38 = a2 + v20;
  uint64_t v24 = sub_24469CA48();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(v37, v38, v24);
  uint64_t v26 = v10;
  uint64_t v27 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v30(a2 + v27, 1, v26))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v40(v28, v29, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v28, 0, 1, v26);
  }
  uint64_t v32 = a3[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  if (v30((uint64_t)v34, 1, v26))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v40(v33, v34, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v33, 0, 1, v26);
  }
  return a1;
}

uint64_t assignWithCopy for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24469C888();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v39 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v39(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  uint64_t v28 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  int v29 = v28((const void *)(a1 + v25), 1, v10);
  int v30 = v28(v27, 1, v10);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v26, v27, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v26, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v26, v10);
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  v39(v26, v27, v10);
LABEL_7:
  uint64_t v32 = a3[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  int v35 = v28((const void *)(a1 + v32), 1, v10);
  int v36 = v28(v34, 1, v10);
  if (!v35)
  {
    if (!v36)
    {
      v39(v33, v34, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v33, v10);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v33, v34, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24469C888();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v27 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v27(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v20((const void *)(a2 + v17), 1, v10))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v27(v18, v19, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
  }
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  if (v20(v24, 1, v10))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    v27(v23, v24, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C8D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24469C888();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v45 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v45(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  int v35 = v34((const void *)(a1 + v31), 1, v10);
  int v36 = v34(v33, 1, v10);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v32, v33, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v32, v10);
LABEL_6:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  v45(v32, v33, v10);
LABEL_7:
  uint64_t v38 = a3[12];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (const void *)(a2 + v38);
  int v41 = v34((const void *)(a1 + v38), 1, v10);
  int v42 = v34(v40, 1, v10);
  if (!v41)
  {
    if (!v42)
    {
      v45(v39, v40, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v39, v10);
    goto LABEL_12;
  }
  if (v42)
  {
LABEL_12:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v39, v40, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v39, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppInstallRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_244668E50);
}

uint64_t sub_244668E50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24469C8D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_24469C888();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[8] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v16 = sub_24469CA48();
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = *(void *)(v16 - 8);
      uint64_t v13 = a3[9];
      goto LABEL_11;
    }
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a3[11];
    return v18(v20, a2, v19);
  }
}

uint64_t storeEnumTagSinglePayload for AppInstallRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_244669038);
}

uint64_t sub_244669038(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_24469C8D8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_24469C888();
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v16 = sub_24469CA48();
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_9;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[11];

  return v18(v20, a2, a2, v19);
}

void sub_24466920C()
{
  sub_24469C8D8();
  if (v0 <= 0x3F)
  {
    sub_24469C888();
    if (v1 <= 0x3F)
    {
      sub_24469CA48();
      if (v2 <= 0x3F)
      {
        sub_24460AFF0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AppInstallRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244669434);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInstallRequest.CodingKeys()
{
  return &type metadata for AppInstallRequest.CodingKeys;
}

unint64_t sub_244669470()
{
  unint64_t result = qword_268E9EC90;
  if (!qword_268E9EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC90);
  }
  return result;
}

unint64_t sub_2446694C8()
{
  unint64_t result = qword_268E9EC98;
  if (!qword_268E9EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EC98);
  }
  return result;
}

unint64_t sub_244669520()
{
  unint64_t result = qword_268E9ECA0;
  if (!qword_268E9ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ECA0);
  }
  return result;
}

uint64_t sub_244669574()
{
  unint64_t v0 = sub_24469D3F8();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_2446695C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_244669620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppInstallRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DeveloperApprovalSheetContext.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.firstBulletTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.firstBulletBody.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.secondBulletTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.secondBulletBody.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.thirdBulletTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.thirdBulletBody.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.allowButtonText.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.ignoreButtonText.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.developerID.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.developerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.supportURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.passcodeTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.passcodeReason.getter()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.touchIDTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.touchIDReason.getter()
{
  uint64_t v1 = *(void *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall DeveloperApprovalSheetContext.init(title:body:firstBulletTitle:firstBulletBody:secondBulletTitle:secondBulletBody:thirdBulletTitle:thirdBulletBody:allowButtonText:ignoreButtonText:developerID:developerName:supportURL:passcodeTitle:passcodeReason:touchIDTitle:touchIDReason:)(MarketplaceKit::DeveloperApprovalSheetContext *__return_ptr retstr, Swift::String title, Swift::String body, Swift::String firstBulletTitle, Swift::String firstBulletBody, Swift::String secondBulletTitle, Swift::String secondBulletBody, Swift::String thirdBulletTitle, Swift::String thirdBulletBody, Swift::String allowButtonText, Swift::String ignoreButtonText, Swift::String developerID, Swift::String developerName, Swift::String_optional supportURL, Swift::String passcodeTitle, Swift::String passcodeReason, Swift::String touchIDTitle, Swift::String touchIDReason)
{
  retstr->field2446B26A8 = title;
  retstr->field2446B26B4 = body;
  retstr->field2446B26C0 = firstBulletTitle;
  retstr->field2446B26CC = firstBulletBody;
  retstr->field2446B26D8 = secondBulletTitle;
  retstr->field2446B26E4 = secondBulletBody;
  retstr->field2446B26F0 = thirdBulletTitle;
  retstr->field2446B26FC = thirdBulletBody;
  retstr->field2446B2708 = allowButtonText;
  retstr->field2446B2714 = ignoreButtonText;
  retstr->field2446B2720 = developerID;
  retstr->field2446B272C = developerName;
  retstr->field2446B2738 = supportURL;
  retstr->field2446B2744 = passcodeTitle;
  retstr->field2446B2750 = passcodeReason;
  retstr->field2446B275C = touchIDTitle;
  retstr->field2446B2768 = touchIDReason;
}

uint64_t sub_244669A00(char a1)
{
  uint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      uint64_t result = 2036625250;
      break;
    case 2:
    case 5:
    case 6:
    case 9:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t v3 = 0x427473726966;
      goto LABEL_6;
    case 4:
      uint64_t result = 0xD000000000000011;
      break;
    case 7:
      uint64_t v3 = 0x426472696874;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6C75000000000000;
      break;
    case 8:
      uint64_t result = 0x747542776F6C6C61;
      break;
    case 10:
    case 11:
      uint64_t result = 0x65706F6C65766564;
      break;
    case 12:
      uint64_t result = 0x5574726F70707573;
      break;
    case 13:
    case 14:
      uint64_t result = 0x65646F6373736170;
      break;
    case 15:
      uint64_t result = 0x5444496863756F74;
      break;
    case 16:
      uint64_t result = 0x5244496863756F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_244669C10()
{
  return sub_244669A00(*v0);
}

uint64_t sub_244669C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24466BD34(a1, a2);
  *a3 = result;
  return result;
}

void sub_244669C40(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_244669C4C(uint64_t a1)
{
  unint64_t v2 = sub_24466A1F4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244669C88(uint64_t a1)
{
  unint64_t v2 = sub_24466A1F4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DeveloperApprovalSheetContext.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ECA8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  v20[30] = v1[3];
  v20[31] = v8;
  uint64_t v9 = v1[4];
  v20[28] = v1[5];
  v20[29] = v9;
  uint64_t v10 = v1[6];
  v20[26] = v1[7];
  v20[27] = v10;
  uint64_t v11 = v1[9];
  v20[24] = v1[8];
  v20[25] = v11;
  uint64_t v12 = v1[10];
  v20[22] = v1[11];
  v20[23] = v12;
  uint64_t v13 = v1[12];
  v20[20] = v1[13];
  v20[21] = v13;
  uint64_t v14 = v1[14];
  v20[18] = v1[15];
  v20[19] = v14;
  uint64_t v15 = v1[16];
  v20[16] = v1[17];
  v20[17] = v15;
  uint64_t v16 = v1[18];
  v20[14] = v1[19];
  v20[15] = v16;
  uint64_t v17 = v1[20];
  v20[12] = v1[21];
  v20[13] = v17;
  v20[11] = v1[22];
  v20[10] = v1[23];
  v20[9] = v1[24];
  v20[8] = v1[25];
  v20[7] = v1[26];
  v20[6] = v1[27];
  v20[5] = v1[28];
  v20[4] = v1[29];
  v20[3] = v1[30];
  v20[2] = v1[31];
  v20[1] = v1[32];
  v20[0] = v1[33];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24466A1F4();
  sub_24469D728();
  char v22 = 0;
  uint64_t v18 = v21;
  sub_24469D548();
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  uint64_t v21 = v4;
  char v22 = 1;
  sub_24469D548();
  char v22 = 2;
  sub_24469D548();
  char v22 = 3;
  sub_24469D548();
  char v22 = 4;
  sub_24469D548();
  char v22 = 5;
  sub_24469D548();
  char v22 = 6;
  sub_24469D548();
  char v22 = 7;
  sub_24469D548();
  char v22 = 8;
  sub_24469D548();
  char v22 = 9;
  sub_24469D548();
  char v22 = 10;
  sub_24469D548();
  char v22 = 11;
  sub_24469D548();
  char v22 = 12;
  sub_24469D4F8();
  char v22 = 13;
  sub_24469D548();
  char v22 = 14;
  sub_24469D548();
  char v22 = 15;
  sub_24469D548();
  char v22 = 16;
  sub_24469D548();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v7, v3);
}

unint64_t sub_24466A1F4()
{
  unint64_t result = qword_268E9ECB0;
  if (!qword_268E9ECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ECB0);
  }
  return result;
}

uint64_t DeveloperApprovalSheetContext.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ECB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_24466A1F4();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  }
  uint64_t v77 = a2;
  LOBYTE(v88[0]) = 0;
  uint64_t v12 = sub_24469D478();
  uint64_t v14 = v13;
  LOBYTE(v88[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v76 = sub_24469D478();
  LOBYTE(v88[0]) = 2;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_24469D478();
  uint64_t v85 = v16;
  uint64_t v75 = v17;
  LOBYTE(v88[0]) = 3;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_24469D478();
  uint64_t v84 = v19;
  uint64_t v74 = v20;
  LOBYTE(v88[0]) = 4;
  uint64_t v22 = v21;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_24469D478();
  uint64_t v83 = v22;
  uint64_t v73 = v23;
  LOBYTE(v88[0]) = 5;
  uint64_t v25 = v24;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_24469D478();
  uint64_t v82 = v25;
  uint64_t v72 = v26;
  LOBYTE(v88[0]) = 6;
  uint64_t v28 = v27;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_24469D478();
  uint64_t v81 = v28;
  uint64_t v71 = v29;
  LOBYTE(v88[0]) = 7;
  uint64_t v31 = v30;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_24469D478();
  uint64_t v80 = v31;
  uint64_t v70 = v32;
  LOBYTE(v88[0]) = 8;
  uint64_t v34 = v33;
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_24469D478();
  uint64_t v79 = v34;
  LOBYTE(v88[0]) = 9;
  uint64_t v78 = v35;
  swift_bridgeObjectRetain();
  uint64_t v67 = sub_24469D478();
  uint64_t v68 = v36;
  LOBYTE(v88[0]) = 10;
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_24469D478();
  uint64_t v66 = v37;
  LOBYTE(v88[0]) = 11;
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_24469D478();
  uint64_t v64 = v38;
  LOBYTE(v88[0]) = 12;
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_24469D428();
  uint64_t v62 = v39;
  LOBYTE(v88[0]) = 13;
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_24469D478();
  uint64_t v59 = v40;
  uint64_t v61 = 0;
  LOBYTE(v88[0]) = 14;
  swift_bridgeObjectRetain();
  uint64_t v41 = v61;
  uint64_t v56 = sub_24469D478();
  uint64_t v58 = v42;
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v61) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    LOBYTE(v88[0]) = 15;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_24469D478();
    uint64_t v44 = v43;
    char v89 = 16;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_24469D478();
    uint64_t v54 = v46;
    uint64_t v47 = v45;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v87[0] = v12;
    v87[1] = v14;
    v87[2] = v76;
    v87[3] = v85;
    v87[4] = v75;
    v87[5] = v84;
    v87[6] = v74;
    v87[7] = v83;
    v87[8] = v73;
    v87[9] = v82;
    v87[10] = v72;
    v87[11] = v81;
    v87[12] = v71;
    v87[13] = v80;
    v87[14] = v70;
    v87[15] = v79;
    v87[16] = v69;
    v87[17] = v78;
    v87[18] = v67;
    v87[19] = v68;
    v87[20] = v65;
    v87[21] = v66;
    v87[22] = v63;
    v87[23] = v64;
    v87[24] = v60;
    v87[25] = v62;
    v87[26] = v57;
    v87[27] = v59;
    v87[28] = v56;
    v87[29] = v58;
    v87[30] = v55;
    v87[31] = v44;
    uint64_t v53 = v47;
    v87[32] = v47;
    v87[33] = v54;
    sub_24466B18C((uint64_t)v87);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = v64;
    swift_bridgeObjectRelease();
    uint64_t v49 = v62;
    swift_bridgeObjectRelease();
    uint64_t v50 = v59;
    swift_bridgeObjectRelease();
    uint64_t v51 = v58;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v77, v87, 0x110uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    v88[0] = v12;
    v88[1] = v14;
    v88[2] = v76;
    v88[3] = v85;
    v88[4] = v75;
    v88[5] = v84;
    v88[6] = v74;
    v88[7] = v83;
    v88[8] = v73;
    v88[9] = v82;
    v88[10] = v72;
    v88[11] = v81;
    v88[12] = v71;
    v88[13] = v80;
    v88[14] = v70;
    v88[15] = v79;
    v88[16] = v69;
    v88[17] = v78;
    v88[18] = v67;
    v88[19] = v68;
    v88[20] = v65;
    v88[21] = v66;
    v88[22] = v63;
    v88[23] = v48;
    v88[24] = v60;
    v88[25] = v49;
    v88[26] = v57;
    v88[27] = v50;
    v88[28] = v56;
    v88[29] = v51;
    v88[30] = v55;
    v88[31] = v44;
    v88[32] = v53;
    v88[33] = v54;
    return sub_24466B2B0((uint64_t)v88);
  }
  return result;
}

uint64_t sub_24466B18C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24466B2B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24466B3D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DeveloperApprovalSheetContext.init(from:)(a1, a2);
}

uint64_t sub_24466B3EC(void *a1)
{
  return DeveloperApprovalSheetContext.encode(to:)(a1);
}

uint64_t destroy for DeveloperApprovalSheetContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DeveloperApprovalSheetContext(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  uint64_t v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  uint64_t v15 = a2[25];
  a1[24] = a2[24];
  a1[25] = v15;
  uint64_t v16 = a2[27];
  a1[26] = a2[26];
  a1[27] = v16;
  uint64_t v17 = a2[29];
  a1[28] = a2[28];
  a1[29] = v17;
  uint64_t v18 = a2[31];
  a1[30] = a2[30];
  a1[31] = v18;
  uint64_t v19 = a2[33];
  a1[32] = a2[32];
  a1[33] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DeveloperApprovalSheetContext(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

void *assignWithTake for DeveloperApprovalSheetContext(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeveloperApprovalSheetContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 272)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeveloperApprovalSheetContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 272) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 272) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeveloperApprovalSheetContext()
{
  return &type metadata for DeveloperApprovalSheetContext;
}

uint64_t getEnumTagSinglePayload for DeveloperApprovalSheetContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeveloperApprovalSheetContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24466BBF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeveloperApprovalSheetContext.CodingKeys()
{
  return &type metadata for DeveloperApprovalSheetContext.CodingKeys;
}

unint64_t sub_24466BC30()
{
  unint64_t result = qword_268E9ECC0;
  if (!qword_268E9ECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ECC0);
  }
  return result;
}

unint64_t sub_24466BC88()
{
  unint64_t result = qword_268E9ECC8;
  if (!qword_268E9ECC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ECC8);
  }
  return result;
}

unint64_t sub_24466BCE0()
{
  unint64_t result = qword_268E9ECD0;
  if (!qword_268E9ECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ECD0);
  }
  return result;
}

uint64_t sub_24466BD34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AACB0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C75427473726966 && a2 == 0xEF79646F4274656CLL || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002446AACD0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AACF0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AAD10 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C75426472696874 && a2 == 0xEF79646F4274656CLL || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x747542776F6C6C61 && a2 == 0xEF747865546E6F74 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AAD30 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xEB00000000444972 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xED0000656D614E72 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x5574726F70707573 && a2 == 0xEA00000000004C52 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x65646F6373736170 && a2 == 0xED0000656C746954 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x65646F6373736170 && a2 == 0xEE006E6F73616552 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x5444496863756F74 && a2 == 0xEC000000656C7469 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x5244496863756F74 && a2 == 0xED00006E6F736165)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

uint64_t sub_24466C658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *aBlock)
{
  v6[2] = _Block_copy(aBlock);
  id v12 = a5;
  uint64_t v13 = sub_24469C8B8();
  uint64_t v15 = v14;

  v6[3] = v13;
  v6[4] = v15;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268E9ED20
                                                                                     + dword_268E9ED20);
  uint64_t v16 = (void *)swift_task_alloc();
  v6[5] = v16;
  *uint64_t v16 = v6;
  v16[1] = sub_24466C768;
  return v18(a1, a2, a3, a4, v13, v15);
}

uint64_t sub_24466C768(uint64_t a1, unint64_t a2)
{
  unsigned int v4 = v2;
  uint64_t v8 = *v3;
  uint64_t v7 = *v3;
  uint64_t v9 = *v3;
  swift_task_dealloc();
  sub_24460B97C(*(void *)(v7 + 24), *(void *)(v7 + 32));
  if (v4)
  {
    uint64_t v10 = sub_24469C828();

    uint64_t v11 = 0;
    id v12 = (void *)v10;
  }
  else
  {
    uint64_t v11 = sub_24469C8A8();
    sub_24460B97C(a1, a2);
    uint64_t v10 = 0;
    id v12 = (void *)v11;
  }
  uint64_t v13 = *(void (***)(void, void, void))(v8 + 16);
  v13[2](v13, v11, v10);

  _Block_release(v13);
  uint64_t v14 = *(uint64_t (**)(void))(v9 + 8);
  return v14();
}

FairPlayPassbookProvisioningObjC __swiftcall FairPlayPassbookProvisioningObjC.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (FairPlayPassbookProvisioningObjC)objc_msgSend(v0, sel_init);
}

id FairPlayPassbookProvisioningObjC.init()()
{
  v1.super_class = (Class)FairPlayPassbookProvisioningObjC;
  return objc_msgSendSuper2(&v1, sel_init);
}

unint64_t type metadata accessor for FairPlayPassbookProvisioningObjC()
{
  unint64_t result = qword_268E9ECD8;
  if (!qword_268E9ECD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268E9ECD8);
  }
  return result;
}

uint64_t sub_24466C9FC()
{
  _Block_release(*(const void **)(v0 + 56));

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24466CA3C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  char v6 = (void *)v0[6];
  uint64_t v7 = (void *)v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  void *v8 = v1;
  v8[1] = sub_24466D374;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *, void *))((char *)&dword_268E9ECE0
                                                                                  + dword_268E9ECE0);
  return v9(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_24466CB18(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_24466D374;
  return v6();
}

uint64_t sub_24466CBE8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24466D374;
  char v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_268E9ECF0 + dword_268E9ECF0);
  return v6(v2, v3, v4);
}

uint64_t sub_24466CCA8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24466D374;
  return v7();
}

uint64_t objectdestroy_4Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24466CDB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  char v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24460BAB0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_268E9ED00 + dword_268E9ED00);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_24466CE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24469D0D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24469D0C8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24466D028(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24469D068();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24466D028(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D708);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24466D088(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24466D164;
  return v6(a1);
}

uint64_t sub_24466D164()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24466D25C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24466D294(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24460BAB0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268E9ED10 + dword_268E9ED10);
  return v6(a1, v4);
}

uint64_t sub_24466D34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a3;
  v6[16] = a4;
  v6[13] = a1;
  v6[14] = a2;
  return MEMORY[0x270FA2498](sub_2446651E8, 0, 0);
}

uint64_t UpdateMetadata.bundleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.bundleVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.itemID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.shortVersionString.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall UpdateMetadata.init(bundleID:bundleVersion:itemID:shortVersionString:)(MarketplaceKit::UpdateMetadata *__return_ptr retstr, Swift::String bundleID, Swift::String bundleVersion, Swift::String itemID, Swift::String shortVersionString)
{
  retstr->field2446B2860 = bundleID;
  retstr->field2446B286C = bundleVersion;
  retstr->field2446B2878 = itemID;
  retstr->field2446B2884 = shortVersionString;
}

unint64_t sub_24466D44C()
{
  unint64_t result = 0x4449656C646E7562;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6556656C646E7562;
      break;
    case 2:
      unint64_t result = 0x44496D657469;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24466D4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24466DFC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24466D510(uint64_t a1)
{
  unint64_t v2 = sub_24466D77C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466D54C(uint64_t a1)
{
  unint64_t v2 = sub_24466D77C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UpdateMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED28);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  v13[5] = v1[3];
  v13[6] = v8;
  uint64_t v9 = v1[4];
  v13[3] = v1[5];
  v13[4] = v9;
  uint64_t v10 = v1[6];
  v13[1] = v1[7];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24466D77C();
  sub_24469D728();
  char v17 = 0;
  uint64_t v11 = v13[7];
  sub_24469D548();
  if (!v11)
  {
    char v16 = 1;
    sub_24469D548();
    char v15 = 2;
    sub_24469D548();
    char v14 = 3;
    sub_24469D548();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_24466D77C()
{
  unint64_t result = qword_268E9ED30;
  if (!qword_268E9ED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ED30);
  }
  return result;
}

uint64_t UpdateMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24466D77C();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v32 = 0;
  uint64_t v10 = sub_24469D478();
  uint64_t v12 = v11;
  uint64_t v27 = v10;
  char v31 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24469D478();
  uint64_t v28 = v14;
  uint64_t v26 = v13;
  char v30 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_24469D478();
  uint64_t v25 = v15;
  char v29 = 3;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24469D478();
  uint64_t v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v16;
  v20(v9, v5);
  swift_bridgeObjectRetain();
  uint64_t v21 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v12;
  uint64_t v22 = v25;
  a2[2] = v26;
  a2[3] = v21;
  a2[4] = v24;
  a2[5] = v22;
  a2[6] = v23;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24466DB10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return UpdateMetadata.init(from:)(a1, a2);
}

uint64_t sub_24466DB28(void *a1)
{
  return UpdateMetadata.encode(to:)(a1);
}

uint64_t destroy for UpdateMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UpdateMetadata(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UpdateMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for UpdateMetadata(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadata()
{
  return &type metadata for UpdateMetadata;
}

unsigned char *storeEnumTagSinglePayload for UpdateMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24466DE80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadata.CodingKeys()
{
  return &type metadata for UpdateMetadata.CodingKeys;
}

unint64_t sub_24466DEBC()
{
  unint64_t result = qword_268E9ED40;
  if (!qword_268E9ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ED40);
  }
  return result;
}

unint64_t sub_24466DF14()
{
  unint64_t result = qword_268E9ED48;
  if (!qword_268E9ED48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ED48);
  }
  return result;
}

unint64_t sub_24466DF6C()
{
  unint64_t result = qword_268E9ED50;
  if (!qword_268E9ED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ED50);
  }
  return result;
}

uint64_t sub_24466DFC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6556656C646E7562 && a2 == 0xED00006E6F697372 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44496D657469 && a2 == 0xE600000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002446AADC0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t MarketplaceKitError.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (void *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24466E74C(v0, (uint64_t)v9);
  unint64_t v10 = 0x6E776F6E6B6E55;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v17 = 0;
      unint64_t v18 = 0xE000000000000000;
      sub_24469D318();
      sub_24469CFE8();
      sub_24469CFE8();
      swift_bridgeObjectRelease();
      sub_24469CFE8();
      goto LABEL_4;
    case 2u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v5, v9, v1);
      unint64_t v17 = 0;
      unint64_t v18 = 0xE000000000000000;
      sub_24469D318();
      sub_24469CFE8();
      uint64_t v12 = self;
      uint64_t v13 = (void *)sub_24469C708();
      id v14 = objc_msgSend(v12, sel_stringFromMeasurement_countStyle_, v13, 0);

      sub_24469CF98();
      sub_24469CFE8();
      swift_bridgeObjectRelease();
      sub_24469CFE8();
      unint64_t v10 = v17;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      break;
    case 3u:
      return v10;
    case 4u:
      unint64_t v10 = 0xD000000000000031;
      break;
    case 5u:
      unint64_t v10 = 0xD00000000000002BLL;
      break;
    case 6u:
      unint64_t v10 = 0xD00000000000004CLL;
      break;
    case 7u:
      unint64_t v10 = 0xD00000000000004ALL;
      break;
    case 8u:
      unint64_t v10 = 0xD00000000000003ELL;
      break;
    case 9u:
      unint64_t v10 = 0xD000000000000018;
      break;
    case 0xAu:
      unint64_t v10 = 0xD00000000000002ALL;
      break;
    case 0xBu:
      unint64_t v10 = 0xD00000000000002BLL;
      break;
    case 0xCu:
      unint64_t v10 = 0xD000000000000043;
      break;
    case 0xDu:
      unint64_t v10 = 0xD00000000000003ELL;
      break;
    case 0xEu:
      unint64_t v10 = 0xD000000000000024;
      break;
    case 0xFu:
      unint64_t v10 = 0xD00000000000001DLL;
      break;
    case 0x10u:
      unint64_t v10 = 0xD000000000000026;
      break;
    case 0x11u:
      unint64_t v10 = 0xD00000000000001ELL;
      break;
    case 0x12u:
      unint64_t v10 = 0xD000000000000019;
      break;
    case 0x13u:
      unint64_t v10 = 0xD00000000000001BLL;
      break;
    case 0x14u:
      unint64_t v10 = 0xD000000000000026;
      break;
    default:
      uint64_t v11 = *v9;
      unint64_t v17 = 0;
      unint64_t v18 = 0xE000000000000000;
      sub_24469D318();
      sub_24469CFE8();
      v16[1] = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED58);
      sub_24466E7B0();
      sub_24469CEE8();
      swift_bridgeObjectRelease();
      sub_24469CFE8();
      swift_bridgeObjectRelease();
LABEL_4:
      unint64_t v10 = v17;
      break;
  }
  return v10;
}

uint64_t type metadata accessor for MarketplaceKitError()
{
  uint64_t result = qword_26B0D1290;
  if (!qword_26B0D1290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24466E74C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24466E7B0()
{
  unint64_t result = qword_268E9ED60;
  if (!qword_268E9ED60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9ED58);
    sub_24464E894((unint64_t *)&qword_268E9ED68, &qword_26B0D1080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ED60);
  }
  return result;
}

unint64_t sub_24466E848(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0x6E49746F4E707061;
      break;
    case 10:
      unint64_t result = 0x4D64696C61766E69;
      break;
    case 11:
      unint64_t result = 0x456B726F7774656ELL;
      break;
    case 12:
      unint64_t result = 0xD000000000000028;
      break;
    case 13:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 15:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 16:
      unint64_t result = 0xD000000000000015;
      break;
    case 17:
      unint64_t result = 0x6B6F54687475616FLL;
      break;
    case 18:
      unint64_t result = 0x4C64696C61766E69;
      break;
    case 19:
      unint64_t result = 0x5564696C61766E69;
      break;
    case 20:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24466EB00(uint64_t a1)
{
  unint64_t v2 = sub_244670F28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466EB3C(uint64_t a1)
{
  unint64_t v2 = sub_244670F28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466EB78(uint64_t a1)
{
  unint64_t v2 = sub_244670D30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466EBB4(uint64_t a1)
{
  unint64_t v2 = sub_244670D30();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24466EBF0()
{
  return sub_24466E848(*v0);
}

uint64_t sub_24466EBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244674B4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24466EC20(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_24466EC2C(uint64_t a1)
{
  unint64_t v2 = sub_244670B38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466EC68(uint64_t a1)
{
  unint64_t v2 = sub_244670B38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466ECA4(uint64_t a1)
{
  unint64_t v2 = sub_244670D84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466ECE0(uint64_t a1)
{
  unint64_t v2 = sub_244670D84();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466ED1C(uint64_t a1)
{
  unint64_t v2 = sub_244671078();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466ED58(uint64_t a1)
{
  unint64_t v2 = sub_244671078();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466ED94(uint64_t a1)
{
  unint64_t v2 = sub_2446710CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466EDD0(uint64_t a1)
{
  unint64_t v2 = sub_2446710CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466EE0C(uint64_t a1)
{
  unint64_t v2 = sub_244670FD0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466EE48(uint64_t a1)
{
  unint64_t v2 = sub_244670FD0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466EE84(uint64_t a1)
{
  unint64_t v2 = sub_244670DD8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466EEC0(uint64_t a1)
{
  unint64_t v2 = sub_244670DD8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466EEFC(uint64_t a1)
{
  unint64_t v2 = sub_244670E2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466EF38(uint64_t a1)
{
  unint64_t v2 = sub_244670E2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466EF74(uint64_t a1)
{
  unint64_t v2 = sub_244670C34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466EFB0(uint64_t a1)
{
  unint64_t v2 = sub_244670C34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466EFEC(uint64_t a1)
{
  unint64_t v2 = sub_244670ED4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F028(uint64_t a1)
{
  unint64_t v2 = sub_244670ED4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F064(uint64_t a1)
{
  unint64_t v2 = sub_244670BE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F0A0(uint64_t a1)
{
  unint64_t v2 = sub_244670BE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F0DC(uint64_t a1)
{
  unint64_t v2 = sub_244671120();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F118(uint64_t a1)
{
  unint64_t v2 = sub_244671120();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F154(uint64_t a1)
{
  unint64_t v2 = sub_244670CDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F190(uint64_t a1)
{
  unint64_t v2 = sub_244670CDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F1CC(uint64_t a1)
{
  unint64_t v2 = sub_2446711C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F208(uint64_t a1)
{
  unint64_t v2 = sub_2446711C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F244(uint64_t a1)
{
  unint64_t v2 = sub_244670B8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F280(uint64_t a1)
{
  unint64_t v2 = sub_244670B8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F2BC(uint64_t a1)
{
  unint64_t v2 = sub_244670E80();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F2F8(uint64_t a1)
{
  unint64_t v2 = sub_244670E80();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F334(uint64_t a1)
{
  unint64_t v2 = sub_244670F7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F370(uint64_t a1)
{
  unint64_t v2 = sub_244670F7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F3AC(uint64_t a1)
{
  unint64_t v2 = sub_244670C88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F3E8(uint64_t a1)
{
  unint64_t v2 = sub_244670C88();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F424(uint64_t a1)
{
  unint64_t v2 = sub_244671024();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F460(uint64_t a1)
{
  unint64_t v2 = sub_244671024();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F49C(uint64_t a1)
{
  unint64_t v2 = sub_24467121C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F4D8(uint64_t a1)
{
  unint64_t v2 = sub_24467121C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24466F514(uint64_t a1)
{
  unint64_t v2 = sub_244671174();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24466F550(uint64_t a1)
{
  unint64_t v2 = sub_244671174();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MarketplaceKitError.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED70);
  uint64_t v163 = *(void *)(v2 - 8);
  uint64_t v164 = v2;
  MEMORY[0x270FA5388](v2, v3);
  v162 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED78);
  uint64_t v160 = *(void *)(v5 - 8);
  uint64_t v161 = v5;
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v159 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED80);
  uint64_t v157 = *(void *)(v8 - 8);
  uint64_t v158 = v8;
  MEMORY[0x270FA5388](v8, v9);
  char v156 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED88);
  uint64_t v154 = *(void *)(v11 - 8);
  uint64_t v155 = v11;
  MEMORY[0x270FA5388](v11, v12);
  char v153 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED90);
  uint64_t v151 = *(void *)(v14 - 8);
  uint64_t v152 = v14;
  MEMORY[0x270FA5388](v14, v15);
  char v150 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9ED98);
  uint64_t v148 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149, v17);
  char v147 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDA0);
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146, v19);
  v144 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDA8);
  uint64_t v142 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143, v21);
  v141 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDB0);
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140, v23);
  v138 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDB8);
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137, v25);
  v135 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDC0);
  uint64_t v133 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134, v27);
  uint64_t v132 = (char *)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDC8);
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131, v29);
  uint64_t v127 = (char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDD0);
  uint64_t v122 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124, v31);
  uint64_t v120 = (char *)&v101 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDD8);
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129, v33);
  uint64_t v123 = (char *)&v101 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126, v35);
  uint64_t v121 = (char *)&v101 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDE0);
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119, v37);
  char v117 = (char *)&v101 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDE8);
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116, v39);
  char v114 = (char *)&v101 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDF0);
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113, v41);
  char v109 = (char *)&v101 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EDF8);
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111, v43);
  char v108 = (char *)&v101 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EE00);
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105, v45);
  uint64_t v47 = (char *)&v101 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EE08);
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107, v48);
  unint64_t v103 = (char *)&v101 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EE10);
  uint64_t v102 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50, v51);
  uint64_t v53 = (char *)&v101 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x270FA5388](v54, v55);
  uint64_t v57 = (uint64_t *)((char *)&v101 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EE18);
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v166 = v58;
  uint64_t v167 = v59;
  MEMORY[0x270FA5388](v58, v60);
  uint64_t v62 = (char *)&v101 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244670B38();
  v165 = v62;
  sub_24469D728();
  sub_24466E74C(v168, (uint64_t)v57);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      LOBYTE(v169) = 3;
      sub_244671120();
      uint64_t v69 = v108;
      uint64_t v71 = v165;
      uint64_t v70 = v166;
      sub_24469D4E8();
      uint64_t v72 = v111;
      sub_24469D548();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v69, v72);
      return (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v71, v70);
    case 2u:
      uint64_t v73 = v125;
      uint64_t v74 = v121;
      uint64_t v75 = v126;
      (*(void (**)(char *, uint64_t *, uint64_t))(v125 + 32))(v121, v57, v126);
      LOBYTE(v169) = 7;
      sub_244670FD0();
      uint64_t v76 = v123;
      uint64_t v78 = v165;
      uint64_t v77 = v166;
      sub_24469D4E8();
      sub_24464E894(&qword_268E9EE98, &qword_26B0D1310);
      uint64_t v79 = v129;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v76, v79);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
      return (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v78, v77);
    case 3u:
      LOBYTE(v169) = 0;
      sub_24467121C();
      uint64_t v80 = v165;
      uint64_t v81 = v166;
      sub_24469D4E8();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v53, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v80, v81);
    case 4u:
      LOBYTE(v169) = 2;
      sub_244671174();
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v104 + 8);
      uint64_t v85 = v47;
      uint64_t v86 = &v137;
      goto LABEL_17;
    case 5u:
      LOBYTE(v169) = 4;
      sub_2446710CC();
      uint64_t v87 = v109;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v112 + 8);
      uint64_t v85 = v87;
      uint64_t v86 = &v145;
      goto LABEL_17;
    case 6u:
      LOBYTE(v169) = 5;
      sub_244671078();
      uint64_t v88 = v114;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v115 + 8);
      uint64_t v85 = v88;
      uint64_t v86 = &v148;
      goto LABEL_17;
    case 7u:
      LOBYTE(v169) = 6;
      sub_244671024();
      char v89 = v117;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v118 + 8);
      uint64_t v85 = v89;
      uint64_t v86 = &v151;
      goto LABEL_17;
    case 8u:
      LOBYTE(v169) = 8;
      sub_244670F7C();
      uint64_t v90 = v120;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v122 + 8);
      uint64_t v85 = v90;
      uint64_t v86 = (uint64_t *)&v156;
      goto LABEL_17;
    case 9u:
      LOBYTE(v169) = 9;
      sub_244670F28();
      uint64_t v91 = v127;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v130 + 8);
      uint64_t v85 = v91;
      uint64_t v86 = &v163;
      goto LABEL_17;
    case 0xAu:
      LOBYTE(v169) = 10;
      sub_244670ED4();
      uint64_t v92 = v132;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v133 + 8);
      uint64_t v85 = v92;
      uint64_t v86 = &v166;
      goto LABEL_17;
    case 0xBu:
      LOBYTE(v169) = 11;
      sub_244670E80();
      uint64_t v93 = v135;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v136 + 8);
      uint64_t v85 = v93;
      uint64_t v86 = &v168;
      goto LABEL_17;
    case 0xCu:
      LOBYTE(v169) = 12;
      sub_244670E2C();
      uint64_t v94 = v138;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v139 + 8);
      uint64_t v85 = v94;
      uint64_t v86 = &v169;
      goto LABEL_17;
    case 0xDu:
      LOBYTE(v169) = 13;
      sub_244670DD8();
      uint64_t v95 = v141;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v142 + 8);
      uint64_t v85 = v95;
      uint64_t v86 = &v170;
      goto LABEL_17;
    case 0xEu:
      LOBYTE(v169) = 14;
      sub_244670D84();
      uint64_t v96 = v144;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v145 + 8);
      uint64_t v85 = v96;
      uint64_t v86 = &v171;
LABEL_17:
      uint64_t v97 = *(v86 - 32);
      goto LABEL_25;
    case 0xFu:
      LOBYTE(v169) = 15;
      sub_244670D30();
      uint64_t v98 = v147;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v98, v149);
      goto LABEL_26;
    case 0x10u:
      LOBYTE(v169) = 16;
      sub_244670CDC();
      uint64_t v99 = v150;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v100 = v151;
      uint64_t v97 = v152;
      goto LABEL_24;
    case 0x11u:
      LOBYTE(v169) = 17;
      sub_244670C88();
      uint64_t v99 = v153;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v100 = v154;
      uint64_t v97 = v155;
      goto LABEL_24;
    case 0x12u:
      LOBYTE(v169) = 18;
      sub_244670C34();
      uint64_t v99 = v156;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v100 = v157;
      uint64_t v97 = v158;
      goto LABEL_24;
    case 0x13u:
      LOBYTE(v169) = 19;
      sub_244670BE0();
      uint64_t v99 = v159;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v100 = v160;
      uint64_t v97 = v161;
      goto LABEL_24;
    case 0x14u:
      LOBYTE(v169) = 20;
      sub_244670B8C();
      uint64_t v99 = v162;
      uint64_t v83 = v165;
      uint64_t v82 = v166;
      sub_24469D4E8();
      uint64_t v100 = v163;
      uint64_t v97 = v164;
LABEL_24:
      uint64_t v84 = *(void (**)(char *, uint64_t))(v100 + 8);
      uint64_t v85 = v99;
LABEL_25:
      v84(v85, v97);
LABEL_26:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v167 + 8))(v83, v82);
      break;
    default:
      uint64_t v63 = *v57;
      LOBYTE(v169) = 1;
      sub_2446711C8();
      uint64_t v64 = v103;
      uint64_t v66 = v165;
      uint64_t v65 = v166;
      sub_24469D4E8();
      uint64_t v169 = v63;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
      sub_244630968(&qword_26B0D0FA0);
      uint64_t v67 = v107;
      sub_24469D568();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v64, v67);
      (*(void (**)(char *, uint64_t))(v167 + 8))(v66, v65);
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

unint64_t sub_244670B38()
{
  unint64_t result = qword_268E9EE20;
  if (!qword_268E9EE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE20);
  }
  return result;
}

unint64_t sub_244670B8C()
{
  unint64_t result = qword_268E9EE28;
  if (!qword_268E9EE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE28);
  }
  return result;
}

unint64_t sub_244670BE0()
{
  unint64_t result = qword_268E9EE30;
  if (!qword_268E9EE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE30);
  }
  return result;
}

unint64_t sub_244670C34()
{
  unint64_t result = qword_268E9EE38;
  if (!qword_268E9EE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE38);
  }
  return result;
}

unint64_t sub_244670C88()
{
  unint64_t result = qword_268E9EE40;
  if (!qword_268E9EE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE40);
  }
  return result;
}

unint64_t sub_244670CDC()
{
  unint64_t result = qword_268E9EE48;
  if (!qword_268E9EE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE48);
  }
  return result;
}

unint64_t sub_244670D30()
{
  unint64_t result = qword_268E9EE50;
  if (!qword_268E9EE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE50);
  }
  return result;
}

unint64_t sub_244670D84()
{
  unint64_t result = qword_268E9EE58;
  if (!qword_268E9EE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE58);
  }
  return result;
}

unint64_t sub_244670DD8()
{
  unint64_t result = qword_268E9EE60;
  if (!qword_268E9EE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE60);
  }
  return result;
}

unint64_t sub_244670E2C()
{
  unint64_t result = qword_268E9EE68;
  if (!qword_268E9EE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE68);
  }
  return result;
}

unint64_t sub_244670E80()
{
  unint64_t result = qword_268E9EE70;
  if (!qword_268E9EE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE70);
  }
  return result;
}

unint64_t sub_244670ED4()
{
  unint64_t result = qword_268E9EE78;
  if (!qword_268E9EE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE78);
  }
  return result;
}

unint64_t sub_244670F28()
{
  unint64_t result = qword_268E9EE80;
  if (!qword_268E9EE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE80);
  }
  return result;
}

unint64_t sub_244670F7C()
{
  unint64_t result = qword_268E9EE88;
  if (!qword_268E9EE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE88);
  }
  return result;
}

unint64_t sub_244670FD0()
{
  unint64_t result = qword_268E9EE90;
  if (!qword_268E9EE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EE90);
  }
  return result;
}

unint64_t sub_244671024()
{
  unint64_t result = qword_268E9EEA0;
  if (!qword_268E9EEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EEA0);
  }
  return result;
}

unint64_t sub_244671078()
{
  unint64_t result = qword_268E9EEA8;
  if (!qword_268E9EEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EEA8);
  }
  return result;
}

unint64_t sub_2446710CC()
{
  unint64_t result = qword_268E9EEB0;
  if (!qword_268E9EEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EEB0);
  }
  return result;
}

unint64_t sub_244671120()
{
  unint64_t result = qword_268E9EEB8;
  if (!qword_268E9EEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EEB8);
  }
  return result;
}

unint64_t sub_244671174()
{
  unint64_t result = qword_268E9EEC0;
  if (!qword_268E9EEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EEC0);
  }
  return result;
}

unint64_t sub_2446711C8()
{
  unint64_t result = qword_268E9EEC8;
  if (!qword_268E9EEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EEC8);
  }
  return result;
}

unint64_t sub_24467121C()
{
  unint64_t result = qword_268E9EED0;
  if (!qword_268E9EED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EED0);
  }
  return result;
}

uint64_t MarketplaceKitError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v195 = a2;
  uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EED8);
  uint64_t v175 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177, v3);
  v201 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EEE0);
  uint64_t v174 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176, v5);
  v194 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EEE8);
  uint64_t v172 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173, v7);
  v200 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EEF0);
  uint64_t v170 = *(void *)(v171 - 8);
  MEMORY[0x270FA5388](v171, v9);
  v193 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EEF8);
  uint64_t v168 = *(void *)(v169 - 8);
  MEMORY[0x270FA5388](v169, v11);
  v192 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF00);
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167, v13);
  v191 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF08);
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165, v15);
  v190 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF10);
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163, v17);
  v189 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF18);
  uint64_t v160 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161, v19);
  v188 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF20);
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159, v21);
  v187 = (char *)&v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF28);
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157, v23);
  v186 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF30);
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155, v25);
  v185 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF38);
  uint64_t v150 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151, v27);
  v183 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF40);
  uint64_t v152 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153, v29);
  v184 = (char *)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF48);
  uint64_t v149 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148, v31);
  v199 = (char *)&v131 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF50);
  uint64_t v146 = *(void *)(v147 - 8);
  MEMORY[0x270FA5388](v147, v33);
  v182 = (char *)&v131 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF58);
  uint64_t v142 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144, v35);
  v181 = (char *)&v131 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF60);
  uint64_t v143 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145, v37);
  v180 = (char *)&v131 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF68);
  uint64_t v139 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138, v39);
  v179 = (char *)&v131 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF70);
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141, v41);
  v197 = (char *)&v131 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF78);
  uint64_t v136 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137, v43);
  v178 = (char *)&v131 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9EF80);
  uint64_t v196 = *(void *)(v198 - 8);
  MEMORY[0x270FA5388](v198, v45);
  uint64_t v47 = (char *)&v131 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for MarketplaceKitError();
  uint64_t v50 = MEMORY[0x270FA5388](v48, v49);
  uint64_t v52 = (char *)&v131 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x270FA5388](v50, v53);
  uint64_t v56 = (char *)&v131 - v55;
  uint64_t v58 = MEMORY[0x270FA5388](v54, v57);
  uint64_t v60 = (char *)&v131 - v59;
  MEMORY[0x270FA5388](v58, v61);
  uint64_t v63 = (char *)&v131 - v62;
  uint64_t v64 = a1[3];
  v202 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v64);
  sub_244670B38();
  uint64_t v65 = v203;
  sub_24469D708();
  uint64_t v203 = v65;
  if (v65)
  {
LABEL_49:
    uint64_t v124 = (uint64_t)v202;
    return __swift_destroy_boxed_opaque_existential_1(v124);
  }
  uint64_t v131 = (uint64_t *)v56;
  uint64_t v132 = (uint64_t *)v60;
  uint64_t v133 = v52;
  uint64_t v66 = v197;
  uint64_t v67 = v199;
  uint64_t v68 = v200;
  uint64_t v69 = v201;
  uint64_t v135 = v48;
  uint64_t v134 = v63;
  uint64_t v70 = v198;
  uint64_t v71 = sub_24469D4C8();
  if (*(void *)(v71 + 16) != 1)
  {
    uint64_t v75 = sub_24469D358();
    uint64_t v76 = swift_allocError();
    uint64_t v78 = v77;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *uint64_t v78 = v135;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v75 - 8) + 104))(v78, *MEMORY[0x263F8DCB0], v75);
    uint64_t v203 = v76;
    swift_willThrow();
LABEL_48:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
    goto LABEL_49;
  }
  switch(*(unsigned char *)(v71 + 32))
  {
    case 1:
      LOBYTE(v204) = 1;
      sub_2446711C8();
      uint64_t v79 = v203;
      sub_24469D408();
      uint64_t v203 = v79;
      if (v79) {
        goto LABEL_48;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
      sub_244630968(&qword_26B0D1068);
      uint64_t v80 = v141;
      uint64_t v81 = v203;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v66, v80);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v203 = v81;
      if (v81) {
        goto LABEL_49;
      }
      uint64_t v82 = v132;
      *uint64_t v132 = v204;
      goto LABEL_54;
    case 2:
      LOBYTE(v204) = 2;
      sub_244671174();
      uint64_t v83 = v179;
      uint64_t v84 = v203;
      sub_24469D408();
      uint64_t v203 = v84;
      if (v84) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v139 + 8))(v83, v138);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 3:
      LOBYTE(v204) = 3;
      sub_244671120();
      uint64_t v85 = v180;
      uint64_t v86 = v203;
      sub_24469D408();
      uint64_t v203 = v86;
      if (v86) {
        goto LABEL_48;
      }
      uint64_t v87 = v145;
      uint64_t v88 = sub_24469D478();
      uint64_t v203 = 0;
      uint64_t v127 = v88;
      uint64_t v129 = v128;
      (*(void (**)(char *, uint64_t))(v143 + 8))(v85, v87);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v82 = v131;
      *uint64_t v131 = v127;
      v82[1] = v129;
LABEL_54:
      swift_storeEnumTagMultiPayload();
      uint64_t v130 = (uint64_t)v82;
      goto LABEL_56;
    case 4:
      LOBYTE(v204) = 4;
      sub_2446710CC();
      char v89 = v181;
      uint64_t v90 = v203;
      sub_24469D408();
      uint64_t v203 = v90;
      if (v90) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v142 + 8))(v89, v144);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 5:
      LOBYTE(v204) = 5;
      sub_244671078();
      uint64_t v91 = v182;
      uint64_t v92 = v203;
      sub_24469D408();
      uint64_t v203 = v92;
      if (v92) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v146 + 8))(v91, v147);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 6:
      LOBYTE(v204) = 6;
      sub_244671024();
      uint64_t v93 = v203;
      sub_24469D408();
      uint64_t v203 = v93;
      if (v93) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v149 + 8))(v67, v148);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 7:
      LOBYTE(v204) = 7;
      sub_244670FD0();
      uint64_t v94 = v184;
      uint64_t v95 = v203;
      sub_24469D408();
      uint64_t v203 = v95;
      if (v95) {
        goto LABEL_48;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
      sub_24464E894(&qword_268E9EF88, &qword_26B0D1310);
      uint64_t v96 = (uint64_t)v133;
      uint64_t v97 = v153;
      uint64_t v98 = v203;
      sub_24469D498();
      uint64_t v99 = v196;
      uint64_t v203 = v98;
      if (v98)
      {
        (*(void (**)(char *, uint64_t))(v152 + 8))(v94, v97);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v47, v70);
        goto LABEL_49;
      }
      (*(void (**)(char *, uint64_t))(v152 + 8))(v94, v97);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v47, v70);
      swift_storeEnumTagMultiPayload();
      uint64_t v130 = v96;
LABEL_56:
      uint64_t v74 = (uint64_t)v134;
      sub_24460BD64(v130, (uint64_t)v134);
LABEL_53:
      uint64_t v126 = (uint64_t)v202;
      sub_24460BD64(v74, v195);
      uint64_t v124 = v126;
      break;
    case 8:
      LOBYTE(v204) = 8;
      sub_244670F7C();
      uint64_t v100 = v183;
      uint64_t v101 = v203;
      sub_24469D408();
      uint64_t v203 = v101;
      if (v101) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v150 + 8))(v100, v151);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 9:
      LOBYTE(v204) = 9;
      sub_244670F28();
      uint64_t v102 = v185;
      uint64_t v103 = v203;
      sub_24469D408();
      uint64_t v203 = v103;
      if (v103) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v154 + 8))(v102, v155);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0xA:
      LOBYTE(v204) = 10;
      sub_244670ED4();
      uint64_t v104 = v186;
      uint64_t v105 = v203;
      sub_24469D408();
      uint64_t v203 = v105;
      if (v105) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v156 + 8))(v104, v157);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0xB:
      LOBYTE(v204) = 11;
      sub_244670E80();
      uint64_t v106 = v187;
      uint64_t v107 = v203;
      sub_24469D408();
      uint64_t v203 = v107;
      if (v107) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v158 + 8))(v106, v159);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0xC:
      LOBYTE(v204) = 12;
      sub_244670E2C();
      char v108 = v188;
      uint64_t v109 = v203;
      sub_24469D408();
      uint64_t v203 = v109;
      if (v109) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v160 + 8))(v108, v161);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0xD:
      LOBYTE(v204) = 13;
      sub_244670DD8();
      uint64_t v110 = v189;
      uint64_t v111 = v203;
      sub_24469D408();
      uint64_t v203 = v111;
      if (v111) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v162 + 8))(v110, v163);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0xE:
      LOBYTE(v204) = 14;
      sub_244670D84();
      uint64_t v112 = v190;
      uint64_t v113 = v203;
      sub_24469D408();
      uint64_t v203 = v113;
      if (v113) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v164 + 8))(v112, v165);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0xF:
      LOBYTE(v204) = 15;
      sub_244670D30();
      char v114 = v191;
      uint64_t v115 = v203;
      sub_24469D408();
      uint64_t v203 = v115;
      if (v115) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v166 + 8))(v114, v167);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0x10:
      LOBYTE(v204) = 16;
      sub_244670CDC();
      uint64_t v116 = v192;
      uint64_t v117 = v203;
      sub_24469D408();
      uint64_t v203 = v117;
      if (v117) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v168 + 8))(v116, v169);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0x11:
      LOBYTE(v204) = 17;
      sub_244670C88();
      uint64_t v118 = v193;
      uint64_t v119 = v203;
      sub_24469D408();
      uint64_t v203 = v119;
      if (v119) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v170 + 8))(v118, v171);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0x12:
      LOBYTE(v204) = 18;
      sub_244670C34();
      uint64_t v120 = v203;
      sub_24469D408();
      uint64_t v203 = v120;
      if (v120) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v172 + 8))(v68, v173);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0x13:
      LOBYTE(v204) = 19;
      sub_244670BE0();
      uint64_t v121 = v194;
      uint64_t v122 = v203;
      sub_24469D408();
      uint64_t v203 = v122;
      if (v122) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v174 + 8))(v121, v176);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    case 0x14:
      LOBYTE(v204) = 20;
      sub_244670B8C();
      uint64_t v123 = v203;
      sub_24469D408();
      uint64_t v203 = v123;
      if (v123) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v175 + 8))(v69, v177);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
      goto LABEL_52;
    default:
      LOBYTE(v204) = 0;
      sub_24467121C();
      uint64_t v72 = v178;
      uint64_t v73 = v203;
      sub_24469D408();
      uint64_t v203 = v73;
      if (v73) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v136 + 8))(v72, v137);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v47, v70);
      uint64_t v74 = (uint64_t)v134;
LABEL_52:
      swift_storeEnumTagMultiPayload();
      goto LABEL_53;
  }
  return __swift_destroy_boxed_opaque_existential_1(v124);
}

uint64_t sub_244673008@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MarketplaceKitError.init(from:)(a1, a2);
}

uint64_t sub_244673020(void *a1)
{
  return MarketplaceKitError.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MarketplaceKitError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for MarketplaceKitError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for MarketplaceKitError(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for MarketplaceKitError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24462A418((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for MarketplaceKitError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for MarketplaceKitError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24462A418((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1310);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_2446735E8()
{
  sub_244673688();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_244673688()
{
  if (!qword_26B0D1318[0])
  {
    sub_2446736E0();
    unint64_t v0 = sub_24469C718();
    if (!v1) {
      atomic_store(v0, qword_26B0D1318);
    }
  }
}

unint64_t sub_2446736E0()
{
  unint64_t result = qword_26B0D16A0;
  if (!qword_26B0D16A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0D16A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MarketplaceKitError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MarketplaceKitError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24467387CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.CodingKeys()
{
  return &type metadata for MarketplaceKitError.CodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.UnknownCodingKeys()
{
  return &type metadata for MarketplaceKitError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MissingCapabilitiesCodingKeys()
{
  return &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.UnsupportedPlatformCodingKeys()
{
  return &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys()
{
  return &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InstallationRestrictedCodingKeys()
{
  return &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys()
{
  return &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.RatingRestrictedCodingKeys()
{
  return &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys;
}

unsigned char *_s14MarketplaceKit19MarketplaceKitErrorO29MissingCapabilitiesCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2446739C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InsufficientStorageSpaceCodingKeys()
{
  return &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.NoSupportedVariantCodingKeys()
{
  return &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.AppNotInstalledCodingKeys()
{
  return &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidManifestCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidManifestCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.NetworkErrorCodingKeys()
{
  return &type metadata for MarketplaceKitError.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.FeatureUnavailableCodingKeys()
{
  return &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.CancelledCodingKeys()
{
  return &type metadata for MarketplaceKitError.CancelledCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MismatchedInstallTypeCodingKeys()
{
  return &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.OauthTokenErrorCodingKeys()
{
  return &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidLicenseCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidURLCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidURLCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys()
{
  return &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys;
}

unint64_t sub_244673AD0()
{
  unint64_t result = qword_268E9EF90;
  if (!qword_268E9EF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EF90);
  }
  return result;
}

unint64_t sub_244673B28()
{
  unint64_t result = qword_268E9EF98;
  if (!qword_268E9EF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EF98);
  }
  return result;
}

unint64_t sub_244673B80()
{
  unint64_t result = qword_268E9EFA0;
  if (!qword_268E9EFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFA0);
  }
  return result;
}

unint64_t sub_244673BD8()
{
  unint64_t result = qword_268E9EFA8;
  if (!qword_268E9EFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFA8);
  }
  return result;
}

unint64_t sub_244673C30()
{
  unint64_t result = qword_268E9EFB0;
  if (!qword_268E9EFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFB0);
  }
  return result;
}

unint64_t sub_244673C88()
{
  unint64_t result = qword_268E9EFB8;
  if (!qword_268E9EFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFB8);
  }
  return result;
}

unint64_t sub_244673CE0()
{
  unint64_t result = qword_268E9EFC0;
  if (!qword_268E9EFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFC0);
  }
  return result;
}

unint64_t sub_244673D38()
{
  unint64_t result = qword_268E9EFC8;
  if (!qword_268E9EFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFC8);
  }
  return result;
}

unint64_t sub_244673D90()
{
  unint64_t result = qword_268E9EFD0;
  if (!qword_268E9EFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFD0);
  }
  return result;
}

unint64_t sub_244673DE8()
{
  unint64_t result = qword_268E9EFD8;
  if (!qword_268E9EFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFD8);
  }
  return result;
}

unint64_t sub_244673E40()
{
  unint64_t result = qword_268E9EFE0;
  if (!qword_268E9EFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFE0);
  }
  return result;
}

unint64_t sub_244673E98()
{
  unint64_t result = qword_268E9EFE8;
  if (!qword_268E9EFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFE8);
  }
  return result;
}

unint64_t sub_244673EF0()
{
  unint64_t result = qword_268E9EFF0;
  if (!qword_268E9EFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFF0);
  }
  return result;
}

unint64_t sub_244673F48()
{
  unint64_t result = qword_268E9EFF8;
  if (!qword_268E9EFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9EFF8);
  }
  return result;
}

unint64_t sub_244673FA0()
{
  unint64_t result = qword_268E9F000;
  if (!qword_268E9F000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F000);
  }
  return result;
}

unint64_t sub_244673FF8()
{
  unint64_t result = qword_268E9F008;
  if (!qword_268E9F008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F008);
  }
  return result;
}

unint64_t sub_244674050()
{
  unint64_t result = qword_268E9F010;
  if (!qword_268E9F010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F010);
  }
  return result;
}

unint64_t sub_2446740A8()
{
  unint64_t result = qword_268E9F018;
  if (!qword_268E9F018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F018);
  }
  return result;
}

unint64_t sub_244674100()
{
  unint64_t result = qword_268E9F020;
  if (!qword_268E9F020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F020);
  }
  return result;
}

unint64_t sub_244674158()
{
  unint64_t result = qword_268E9F028;
  if (!qword_268E9F028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F028);
  }
  return result;
}

unint64_t sub_2446741B0()
{
  unint64_t result = qword_268E9F030;
  if (!qword_268E9F030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F030);
  }
  return result;
}

unint64_t sub_244674208()
{
  unint64_t result = qword_268E9F038;
  if (!qword_268E9F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F038);
  }
  return result;
}

unint64_t sub_244674260()
{
  unint64_t result = qword_268E9F040;
  if (!qword_268E9F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F040);
  }
  return result;
}

unint64_t sub_2446742B8()
{
  unint64_t result = qword_268E9F048;
  if (!qword_268E9F048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F048);
  }
  return result;
}

unint64_t sub_244674310()
{
  unint64_t result = qword_268E9F050;
  if (!qword_268E9F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F050);
  }
  return result;
}

unint64_t sub_244674368()
{
  unint64_t result = qword_268E9F058;
  if (!qword_268E9F058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F058);
  }
  return result;
}

unint64_t sub_2446743C0()
{
  unint64_t result = qword_268E9F060;
  if (!qword_268E9F060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F060);
  }
  return result;
}

unint64_t sub_244674418()
{
  unint64_t result = qword_268E9F068;
  if (!qword_268E9F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F068);
  }
  return result;
}

unint64_t sub_244674470()
{
  unint64_t result = qword_268E9F070;
  if (!qword_268E9F070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F070);
  }
  return result;
}

unint64_t sub_2446744C8()
{
  unint64_t result = qword_268E9F078;
  if (!qword_268E9F078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F078);
  }
  return result;
}

unint64_t sub_244674520()
{
  unint64_t result = qword_268E9F080;
  if (!qword_268E9F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F080);
  }
  return result;
}

unint64_t sub_244674578()
{
  unint64_t result = qword_268E9F088;
  if (!qword_268E9F088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F088);
  }
  return result;
}

unint64_t sub_2446745D0()
{
  unint64_t result = qword_268E9F090;
  if (!qword_268E9F090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F090);
  }
  return result;
}

unint64_t sub_244674628()
{
  unint64_t result = qword_268E9F098;
  if (!qword_268E9F098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F098);
  }
  return result;
}

unint64_t sub_244674680()
{
  unint64_t result = qword_268E9F0A0;
  if (!qword_268E9F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0A0);
  }
  return result;
}

unint64_t sub_2446746D8()
{
  unint64_t result = qword_268E9F0A8;
  if (!qword_268E9F0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0A8);
  }
  return result;
}

unint64_t sub_244674730()
{
  unint64_t result = qword_268E9F0B0;
  if (!qword_268E9F0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0B0);
  }
  return result;
}

unint64_t sub_244674788()
{
  unint64_t result = qword_268E9F0B8;
  if (!qword_268E9F0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0B8);
  }
  return result;
}

unint64_t sub_2446747E0()
{
  unint64_t result = qword_268E9F0C0;
  if (!qword_268E9F0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0C0);
  }
  return result;
}

unint64_t sub_244674838()
{
  unint64_t result = qword_268E9F0C8;
  if (!qword_268E9F0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0C8);
  }
  return result;
}

unint64_t sub_244674890()
{
  unint64_t result = qword_268E9F0D0;
  if (!qword_268E9F0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0D0);
  }
  return result;
}

unint64_t sub_2446748E8()
{
  unint64_t result = qword_268E9F0D8;
  if (!qword_268E9F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0D8);
  }
  return result;
}

unint64_t sub_244674940()
{
  unint64_t result = qword_268E9F0E0;
  if (!qword_268E9F0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0E0);
  }
  return result;
}

unint64_t sub_244674998()
{
  unint64_t result = qword_268E9F0E8;
  if (!qword_268E9F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0E8);
  }
  return result;
}

unint64_t sub_2446749F0()
{
  unint64_t result = qword_268E9F0F0;
  if (!qword_268E9F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0F0);
  }
  return result;
}

unint64_t sub_244674A48()
{
  unint64_t result = qword_268E9F0F8;
  if (!qword_268E9F0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F0F8);
  }
  return result;
}

unint64_t sub_244674AA0()
{
  unint64_t result = qword_268E9F100;
  if (!qword_268E9F100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F100);
  }
  return result;
}

unint64_t sub_244674AF8()
{
  unint64_t result = qword_268E9F108;
  if (!qword_268E9F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F108);
  }
  return result;
}

uint64_t sub_244674B4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002446AB260 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002446AB280 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000002446AB2A0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002446AB2D0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002446AB2F0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002446AB310 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002446AB330 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002446AB350 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E49746F4E707061 && a2 == 0xEF64656C6C617473 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4D64696C61766E69 && a2 == 0xEF74736566696E61 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000002446AB370 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000002ELL && a2 == 0x80000002446AB3A0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002446AB3D0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002446AB3F0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6B6F54687475616FLL && a2 == 0xEF726F7272456E65 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4C64696C61766E69 && a2 == 0xEE0065736E656369 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x5564696C61766E69 && a2 == 0xEA00000000004C52 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002446AB410)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 20;
    }
    else {
      return 21;
    }
  }
}

__n128 PerformPrivateActionRequest.init(request:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = v2;
  a2[1].n128_u8[8] = v3;
  return result;
}

uint64_t PerformPrivateActionRequest.run()(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(_OWORD *)(v2 + 64) = *(_OWORD *)v1;
  *(void *)(v2 + 80) = *(void *)(v1 + 16);
  *(unsigned char *)(v2 + 41) = *(unsigned char *)(v1 + 24);
  return MEMORY[0x270FA2498](sub_244675418, 0, 0);
}

uint64_t sub_244675418()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v2;
  unsigned __int8 v4 = *(unsigned char *)(v0 + 41);
  *(unsigned char *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v0 + 16;
  sub_24461E55C(v3, v1, v2, v4);
  int v8 = &aPw0[*(int *)aPw0];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_244675540;
  uint64_t v6 = *(void *)(v0 + 56);
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v8)(v6, v0 + 48, sub_24467668C, 0);
}

uint64_t sub_244675540()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_244675684, 0, 0);
  }
  else
  {
    sub_24461E57C(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_244675684()
{
  sub_24461E57C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2446756F0()
{
  unint64_t v1 = 0xD000000000000017;
  if (*v0 != 1) {
    unint64_t v1 = 0x63694C77656E6572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x694C726961706572;
  }
}

uint64_t sub_244675768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244678BEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244675790(uint64_t a1)
{
  unint64_t v2 = sub_2446779F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446757CC(uint64_t a1)
{
  unint64_t v2 = sub_2446779F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244675808(uint64_t a1)
{
  unint64_t v2 = sub_244677A44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244675844(uint64_t a1)
{
  unint64_t v2 = sub_244677A44();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244675880(uint64_t a1)
{
  unint64_t v2 = sub_244677A98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446758BC(uint64_t a1)
{
  unint64_t v2 = sub_244677A98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2446758F8(uint64_t a1)
{
  unint64_t v2 = sub_244677AEC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244675934(uint64_t a1)
{
  unint64_t v2 = sub_244677AEC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformPrivateActionRequest.Request.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F118);
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v30 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F120);
  uint64_t v28 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33, v6);
  int v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F128);
  uint64_t v29 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F130);
  uint64_t v35 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v36 = *v1;
  uint64_t v34 = v1[1];
  v27[1] = v1[2];
  int v16 = *((unsigned __int8 *)v1 + 24);
  uint64_t v17 = a1[3];
  uint64_t v18 = a1;
  uint64_t v19 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_2446779F0();
  sub_24469D728();
  if (!v16)
  {
    uint64_t v23 = v29;
    LOBYTE(v38) = 0;
    sub_244677AEC();
    sub_24469D4E8();
    LOBYTE(v38) = 0;
    uint64_t v24 = v37;
    sub_24469D548();
    if (!v24)
    {
      LOBYTE(v38) = 1;
      sub_24469D578();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v13);
  }
  if (v16 != 1)
  {
    LOBYTE(v38) = 2;
    sub_244677A44();
    uint64_t v25 = v30;
    sub_24469D4E8();
    uint64_t v38 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF68);
    sub_244635E58(&qword_268E9DF70);
    uint64_t v26 = v32;
    sub_24469D568();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v13);
  }
  LOBYTE(v38) = 1;
  sub_244677A98();
  sub_24469D4E8();
  LOBYTE(v38) = 0;
  uint64_t v20 = v37;
  uint64_t v21 = v33;
  sub_24469D548();
  if (!v20)
  {
    LOBYTE(v38) = 1;
    sub_24469D558();
    LOBYTE(v38) = 2;
    sub_24469D578();
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v13);
}

uint64_t PerformPrivateActionRequest.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F158);
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47, v3);
  uint64_t v49 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F160);
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48, v5);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F168);
  uint64_t v45 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F170);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14);
  int v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_2446779F0();
  uint64_t v18 = v51;
  sub_24469D708();
  if (v18) {
    goto LABEL_9;
  }
  uint64_t v42 = 0;
  uint64_t v19 = v48;
  uint64_t v20 = v49;
  uint64_t v51 = v13;
  uint64_t v21 = sub_24469D4C8();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v24 = sub_24469D358();
    swift_allocError();
    uint64_t v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *uint64_t v26 = &type metadata for PerformPrivateActionRequest.Request;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x263F8DCB0], v24);
    swift_willThrow();
LABEL_8:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v12);
LABEL_9:
    uint64_t v35 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  v41[1] = v21;
  int v22 = *(unsigned __int8 *)(v21 + 32);
  if (!*(unsigned char *)(v21 + 32))
  {
    LOBYTE(v52) = 0;
    sub_244677AEC();
    uint64_t v28 = v42;
    sub_24469D408();
    if (!v28)
    {
      uint64_t v49 = (char *)v12;
      LOBYTE(v52) = 0;
      uint64_t v29 = sub_24469D478();
      uint64_t v31 = v30;
      LOBYTE(v52) = 1;
      unsigned int v36 = sub_24469D4A8();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v8);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v51 + 8))(v16, v49);
      uint64_t v37 = v36;
      goto LABEL_17;
    }
    goto LABEL_8;
  }
  if (v22 != 1)
  {
    LOBYTE(v52) = 2;
    sub_244677A44();
    uint64_t v32 = v42;
    sub_24469D408();
    if (!v32)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF68);
      sub_244635E58(&qword_268E9DF80);
      uint64_t v33 = v47;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v12);
      uint64_t v31 = 0;
      uint64_t v37 = 0;
      uint64_t v29 = v52;
      goto LABEL_17;
    }
    goto LABEL_8;
  }
  LOBYTE(v52) = 1;
  sub_244677A98();
  uint64_t v23 = v42;
  sub_24469D408();
  if (v23)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v12);
    uint64_t v35 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  uint64_t v49 = (char *)v12;
  LOBYTE(v52) = 0;
  uint64_t v29 = sub_24469D478();
  uint64_t v31 = v34;
  LOBYTE(v52) = 1;
  uint64_t v47 = sub_24469D488();
  LOBYTE(v52) = 2;
  uint64_t v45 = sub_24469D4A8();
  uint64_t v38 = v51;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(v38 + 8))(v16, v49);
  uint64_t v37 = v47 & 1 | (v45 << 32);
LABEL_17:
  uint64_t v39 = (uint64_t)v50;
  uint64_t v40 = v43;
  *uint64_t v43 = v29;
  v40[1] = v31;
  void v40[2] = v37;
  *((unsigned char *)v40 + 24) = v22;
  return __swift_destroy_boxed_opaque_existential_1(v39);
}

uint64_t sub_244676640@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PerformPrivateActionRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_244676658(void *a1)
{
  return PerformPrivateActionRequest.Request.encode(to:)(a1);
}

uint64_t PerformPrivateActionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(a1 + 24) = v5;
  return sub_24461E55C(v2, v3, v4, v5);
}

void sub_24467668C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  id v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_10;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performPrivateActionRequest_reply_, v8, v9);
  _Block_release(v9);
}

unint64_t PerformPrivateActionRequest.stringValue.getter()
{
  uint64_t v1 = *v0;
  if (!*((unsigned char *)v0 + 24))
  {
    sub_24469D318();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000020;
    sub_24469CFE8();
    sub_24469CFE8();
    goto LABEL_5;
  }
  if (*((unsigned char *)v0 + 24) == 1)
  {
    unint64_t v12 = 0;
    sub_24469D318();
    sub_24469CFE8();
    sub_24469CFE8();
    sub_24469CFE8();
    sub_24469CFE8();
    swift_bridgeObjectRelease();
    sub_24469CFE8();
LABEL_5:
    sub_24469D5A8();
    sub_24469CFE8();
    swift_bridgeObjectRelease();
    sub_24469CFE8();
    return v12;
  }
  sub_24469D318();
  swift_bridgeObjectRelease();
  unint64_t v12 = 0xD000000000000014;
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24461D760(0, v2, 0);
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 8;
      uint64_t v4 = sub_24469D5A8();
      uint64_t v6 = v5;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_24461D760(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v4;
      *(void *)(v9 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
  sub_244677B40();
  sub_24469CEE8();
  swift_bridgeObjectRelease();
  sub_24469CFE8();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_244676A84(uint64_t a1)
{
  unint64_t v2 = sub_244677B9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244676AC0(uint64_t a1)
{
  unint64_t v2 = sub_244677B9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformPrivateActionRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F178);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  unint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(_OWORD *)v1;
  uint64_t v8 = *(void *)(v1 + 16);
  char v9 = *(unsigned char *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244677B9C();
  sub_24469D728();
  v11[1] = v11[0];
  uint64_t v12 = v8;
  char v13 = v9;
  sub_244677BF0();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t PerformPrivateActionRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F190);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244677B9C();
  sub_24469D708();
  if (!v2)
  {
    sub_244677C44();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v10 = v14;
    char v11 = v15;
    *(_OWORD *)a2 = v13;
    *(void *)(a2 + 16) = v10;
    *(unsigned char *)(a2 + 24) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_244676DDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PerformPrivateActionRequest.init(from:)(a1, a2);
}

uint64_t sub_244676DF4(void *a1)
{
  return PerformPrivateActionRequest.encode(to:)(a1);
}

uint64_t static PerformPrivateActionResponse.Response.== infix(_:_:)()
{
  return 1;
}

uint64_t PerformPrivateActionResponse.Response.hash(into:)()
{
  return sub_24469D688();
}

uint64_t sub_244676E3C()
{
  return 0x6465726F6E6769;
}

uint64_t sub_244676E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6465726F6E6769 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_244676EEC(uint64_t a1)
{
  unint64_t v2 = sub_244677C98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244676F28(uint64_t a1)
{
  unint64_t v2 = sub_244677C98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244676F64(uint64_t a1)
{
  unint64_t v2 = sub_244677CEC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244676FA0(uint64_t a1)
{
  unint64_t v2 = sub_244677CEC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformPrivateActionResponse.Response.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F1A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F1A8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244677C98();
  sub_24469D728();
  sub_244677CEC();
  sub_24469D4E8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t PerformPrivateActionResponse.Response.hashValue.getter()
{
  return sub_24469D6C8();
}

uint64_t PerformPrivateActionResponse.Response.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F1C0);
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F1C8);
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19, v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244677C98();
  sub_24469D708();
  if (!v1)
  {
    uint64_t v11 = v18;
    uint64_t v17 = v7;
    if (*(void *)(sub_24469D4C8() + 16) == 1)
    {
      sub_244677CEC();
      sub_24469D408();
      uint64_t v12 = v17;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v3);
    }
    else
    {
      uint64_t v13 = sub_24469D358();
      swift_allocError();
      char v15 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
      *char v15 = &type metadata for PerformPrivateActionResponse.Response;
      sub_24469D418();
      sub_24469D348();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x263F8DCB0], v13);
      swift_willThrow();
      uint64_t v12 = v17;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2446774D8(void *a1)
{
  return PerformPrivateActionResponse.Response.init(from:)(a1);
}

uint64_t sub_2446774F0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F1A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F1A8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244677C98();
  sub_24469D728();
  sub_244677CEC();
  sub_24469D4E8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_2446776C8(uint64_t a1)
{
  unint64_t v2 = sub_244677D40();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244677704(uint64_t a1)
{
  unint64_t v2 = sub_244677D40();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformPrivateActionResponse.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F1D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244677D40();
  sub_24469D728();
  sub_244677D94();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t PerformPrivateActionResponse.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F1E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244677D40();
  sub_24469D708();
  if (!v1)
  {
    sub_244677DE8();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2446779C0(void *a1)
{
  return PerformPrivateActionResponse.init(from:)(a1);
}

uint64_t sub_2446779D8(void *a1)
{
  return PerformPrivateActionResponse.encode(to:)(a1);
}

unint64_t sub_2446779F0()
{
  unint64_t result = qword_268E9F138;
  if (!qword_268E9F138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F138);
  }
  return result;
}

unint64_t sub_244677A44()
{
  unint64_t result = qword_268E9F140;
  if (!qword_268E9F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F140);
  }
  return result;
}

unint64_t sub_244677A98()
{
  unint64_t result = qword_268E9F148;
  if (!qword_268E9F148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F148);
  }
  return result;
}

unint64_t sub_244677AEC()
{
  unint64_t result = qword_268E9F150;
  if (!qword_268E9F150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F150);
  }
  return result;
}

unint64_t sub_244677B40()
{
  unint64_t result = qword_268E9ED68;
  if (!qword_268E9ED68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B0D1080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9ED68);
  }
  return result;
}

unint64_t sub_244677B9C()
{
  unint64_t result = qword_268E9F180;
  if (!qword_268E9F180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F180);
  }
  return result;
}

unint64_t sub_244677BF0()
{
  unint64_t result = qword_268E9F188;
  if (!qword_268E9F188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F188);
  }
  return result;
}

unint64_t sub_244677C44()
{
  unint64_t result = qword_268E9F198;
  if (!qword_268E9F198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F198);
  }
  return result;
}

unint64_t sub_244677C98()
{
  unint64_t result = qword_268E9F1B0;
  if (!qword_268E9F1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F1B0);
  }
  return result;
}

unint64_t sub_244677CEC()
{
  unint64_t result = qword_268E9F1B8;
  if (!qword_268E9F1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F1B8);
  }
  return result;
}

unint64_t sub_244677D40()
{
  unint64_t result = qword_268E9F1D8;
  if (!qword_268E9F1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F1D8);
  }
  return result;
}

unint64_t sub_244677D94()
{
  unint64_t result = qword_268E9F1E0;
  if (!qword_268E9F1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F1E0);
  }
  return result;
}

unint64_t sub_244677DE8()
{
  unint64_t result = qword_268E9F1F0;
  if (!qword_268E9F1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F1F0);
  }
  return result;
}

unint64_t sub_244677E40()
{
  unint64_t result = qword_268E9F1F8;
  if (!qword_268E9F1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F1F8);
  }
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest()
{
  return &type metadata for PerformPrivateActionRequest;
}

uint64_t destroy for PerformPrivateActionRequest.Request(uint64_t a1)
{
  return sub_24461E57C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestV7RequestOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_24461E55C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestV7RequestOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_24461E55C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_24461E57C(v7, v8, v9, v10);
  return a1;
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestV7RequestOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_24461E57C(v5, v7, v6, v8);
  return a1;
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestV7RequestOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestV7RequestOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_244678090(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_244678098(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request()
{
  return &type metadata for PerformPrivateActionRequest.Request;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse()
{
  return &type metadata for PerformPrivateActionResponse;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response()
{
  return &type metadata for PerformPrivateActionResponse.Response;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.CodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response.CodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response.IgnoredCodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.CodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.CodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2446781F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys;
}

unsigned char *_s14MarketplaceKit27PerformPrivateActionRequestV7RequestO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2446782F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys;
}

unsigned char *_s14MarketplaceKit28PerformPrivateActionResponseV8ResponseOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2446783CCLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys;
}

unint64_t sub_244678408()
{
  unint64_t result = qword_268E9F200;
  if (!qword_268E9F200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F200);
  }
  return result;
}

unint64_t sub_244678460()
{
  unint64_t result = qword_268E9F208;
  if (!qword_268E9F208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F208);
  }
  return result;
}

unint64_t sub_2446784B8()
{
  unint64_t result = qword_268E9F210;
  if (!qword_268E9F210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F210);
  }
  return result;
}

unint64_t sub_244678510()
{
  unint64_t result = qword_268E9F218;
  if (!qword_268E9F218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F218);
  }
  return result;
}

unint64_t sub_244678568()
{
  unint64_t result = qword_268E9F220;
  if (!qword_268E9F220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F220);
  }
  return result;
}

unint64_t sub_2446785C0()
{
  unint64_t result = qword_268E9F228;
  if (!qword_268E9F228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F228);
  }
  return result;
}

unint64_t sub_244678618()
{
  unint64_t result = qword_268E9F230;
  if (!qword_268E9F230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F230);
  }
  return result;
}

unint64_t sub_244678670()
{
  unint64_t result = qword_268E9F238;
  if (!qword_268E9F238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F238);
  }
  return result;
}

unint64_t sub_2446786C8()
{
  unint64_t result = qword_268E9F240;
  if (!qword_268E9F240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F240);
  }
  return result;
}

unint64_t sub_244678720()
{
  unint64_t result = qword_268E9F248;
  if (!qword_268E9F248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F248);
  }
  return result;
}

unint64_t sub_244678778()
{
  unint64_t result = qword_268E9F250;
  if (!qword_268E9F250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F250);
  }
  return result;
}

unint64_t sub_2446787D0()
{
  unint64_t result = qword_268E9F258;
  if (!qword_268E9F258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F258);
  }
  return result;
}

unint64_t sub_244678828()
{
  unint64_t result = qword_268E9F260;
  if (!qword_268E9F260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F260);
  }
  return result;
}

unint64_t sub_244678880()
{
  unint64_t result = qword_268E9F268;
  if (!qword_268E9F268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F268);
  }
  return result;
}

unint64_t sub_2446788D8()
{
  unint64_t result = qword_268E9F270;
  if (!qword_268E9F270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F270);
  }
  return result;
}

unint64_t sub_244678930()
{
  unint64_t result = qword_268E9F278;
  if (!qword_268E9F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F278);
  }
  return result;
}

unint64_t sub_244678988()
{
  unint64_t result = qword_268E9F280;
  if (!qword_268E9F280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F280);
  }
  return result;
}

unint64_t sub_2446789E0()
{
  unint64_t result = qword_268E9F288;
  if (!qword_268E9F288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F288);
  }
  return result;
}

unint64_t sub_244678A38()
{
  unint64_t result = qword_268E9F290;
  if (!qword_268E9F290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F290);
  }
  return result;
}

unint64_t sub_244678A90()
{
  unint64_t result = qword_268E9F298;
  if (!qword_268E9F298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F298);
  }
  return result;
}

unint64_t sub_244678AE8()
{
  unint64_t result = qword_268E9F2A0;
  if (!qword_268E9F2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F2A0);
  }
  return result;
}

unint64_t sub_244678B40()
{
  unint64_t result = qword_268E9F2A8;
  if (!qword_268E9F2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F2A8);
  }
  return result;
}

unint64_t sub_244678B98()
{
  unint64_t result = qword_268E9F2B0;
  if (!qword_268E9F2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F2B0);
  }
  return result;
}

uint64_t sub_244678BEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x694C726961706572 && a2 == 0xED000065736E6563;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002446AB4C0 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63694C77656E6572 && a2 == 0xED00007365736E65)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t AppLibrary.app(forAppleItemID:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  MEMORY[0x270FA5388](v3 - 8, v4);
  char v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_24467F12C(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    uint64_t v11 = type metadata accessor for MarketplaceKitError();
    memset(v13, 0, sizeof(v13));
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
    type metadata accessor for AppLibrary.App();
    swift_allocObject();
    uint64_t v10 = sub_2446879F0(a1, (uint64_t)v14, (uint64_t)v13, (uint64_t)v6);
    sub_24467B5F8(v10);
  }
  swift_release();
  return v10;
}

uint64_t AppLibrary.updateInstallState(forUpdated:)(uint64_t a1)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (AppLibrary.App.isInstalled.getter())
  {
    swift_retain();
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
    sub_24469C938();
    swift_release();
    uint64_t v5 = v1;
    swift_getKeyPath();
    sub_24469C958();
    swift_release();
    swift_beginAccess();
    sub_24467F354(&v4, a1);
  }
  else
  {
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
    sub_24469C938();
    swift_release();
    uint64_t v5 = v1;
    swift_getKeyPath();
    sub_24469C958();
    swift_release();
    swift_beginAccess();
    sub_24467F5B0(a1);
  }
  swift_endAccess();
  swift_release();
  uint64_t v5 = v1;
  swift_getKeyPath();
  sub_24469C948();
  swift_release();
  swift_release();
  if (AppLibrary.App.isInstalling.getter())
  {
    swift_retain();
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    uint64_t v5 = v1;
    sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
    sub_24469C938();
    swift_release();
    uint64_t v5 = v1;
    swift_getKeyPath();
    sub_24469C958();
    swift_release();
    swift_beginAccess();
    sub_24467F354(&v4, a1);
  }
  else
  {
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    uint64_t v5 = v1;
    sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
    sub_24469C938();
    swift_release();
    uint64_t v5 = v1;
    swift_getKeyPath();
    sub_24469C958();
    swift_release();
    swift_beginAccess();
    sub_24467F5B0(a1);
  }
  swift_endAccess();
  swift_release();
  uint64_t v5 = v1;
  swift_getKeyPath();
  sub_24469C948();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24467951C()
{
  type metadata accessor for AppLibrary(0);
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_24467A554();
  qword_268E9F2B8 = v0;
  return result;
}

uint64_t static AppLibrary.current.getter()
{
  if (qword_268E9D4E0 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t AppLibrary.installedApps.getter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C938();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

uint64_t sub_2446796DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppLibrary.installedApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_244679708()
{
  return AppLibrary.installedApps.setter();
}

uint64_t AppLibrary.installedApps.setter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v1);
  sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C928();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244679894(uint64_t a1, uint64_t a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  *(void *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

void (*AppLibrary.installedApps.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_24469D0A8();
  v3[4] = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C938();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24469C958();
  swift_release();
  swift_beginAccess();
  return sub_244679AE8;
}

void sub_244679AE8(void **a1)
{
}

uint64_t AppLibrary.installingApps.getter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C938();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

uint64_t sub_244679C18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppLibrary.installingApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_244679C44()
{
  return AppLibrary.installingApps.setter();
}

uint64_t AppLibrary.installingApps.setter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v1);
  sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C928();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244679DD0(uint64_t a1, uint64_t a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  *(void *)(a1 + 32) = a2;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

void (*AppLibrary.installingApps.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_24469D0A8();
  v3[4] = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C938();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24469C958();
  swift_release();
  swift_beginAccess();
  return sub_24467A024;
}

void sub_24467A024(void **a1)
{
}

uint64_t AppLibrary.isLoading.getter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C938();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 40);
  swift_release();
  return v1;
}

uint64_t sub_24467A14C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AppLibrary.isLoading.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24467A17C()
{
  return AppLibrary.isLoading.setter();
}

uint64_t AppLibrary.isLoading.setter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v1);
  sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C928();
  swift_release();
  return swift_release();
}

uint64_t sub_24467A304(uint64_t a1, char a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  *(unsigned char *)(a1 + 40) = a2 & 1;
  return swift_release();
}

void (*AppLibrary.isLoading.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  sub_24469D0A8();
  v3[4] = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C938();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_24469C958();
  swift_release();
  swift_beginAccess();
  return sub_24467A548;
}

void sub_24467A548(void **a1)
{
}

uint64_t sub_24467A554()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 16) = sub_2446297A4(MEMORY[0x263F8EE78]);
  if ((v2 & 0xC000000000000000) != 0)
  {
    if (sub_24469D3A8())
    {
      *(void *)(v1 + 24) = sub_244682174(MEMORY[0x263F8EE78]);
    }
    else
    {
      unint64_t v3 = MEMORY[0x263F8EE88];
      *(void *)(v1 + 24) = MEMORY[0x263F8EE88];
      if ((v2 & 0xC000000000000000) == 0) {
        goto LABEL_3;
      }
    }
    if (sub_24469D3A8()) {
      unint64_t v3 = sub_244682174(MEMORY[0x263F8EE78]);
    }
    else {
      unint64_t v3 = MEMORY[0x263F8EE88];
    }
  }
  else
  {
    unint64_t v3 = MEMORY[0x263F8EE88];
    *(void *)(v1 + 24) = MEMORY[0x263F8EE88];
  }
LABEL_3:
  *(void *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 40) = 1;
  sub_24469C968();
  sub_24469CBF8();
  uint64_t v4 = (void *)sub_24469CBE8();
  swift_retain();
  sub_24469CBC8();

  swift_release();
  return v1;
}

uint64_t sub_24467A660(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_24469CEB8();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x270FA5388](v3, v4);
  char v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24469CE88();
  uint64_t v7 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25, v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24469CC68();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469CC28();
  swift_bridgeObjectRetain();
  int v16 = sub_24469CC48();
  os_log_type_t v17 = sub_24469D188();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134217984;
    aBlock[0] = *(void *)(a1 + 16);
    sub_24469D218();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_244604000, v16, v17, "Received %ld apps", v18, 0xCu);
    MEMORY[0x245695AF0](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_2446365BC();
  uint64_t v19 = (void *)sub_24469D1C8();
  sub_24469CE78();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v24;
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = v21;
  aBlock[4] = sub_24468248C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24467B804;
  aBlock[3] = &block_descriptor_11;
  int v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24469CEA8();
  MEMORY[0x245694F20](0, v6, v10, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v25);
  return swift_release();
}

uint64_t sub_24467A9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = sub_24469CC68();
  uint64_t v4 = *(char **)(v80 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v80, v5);
  uint64_t v83 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v71 = (char *)&v70 - v9;
  uint64_t v10 = sub_24469CBA8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v10, v12);
  uint64_t v78 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15);
  os_log_type_t v17 = (void (*)(NSObject *, uint64_t))((char *)&v70 - v16);
  uint64_t v84 = 0;
  uint64_t v18 = sub_24469D0A8();
  uint64_t v70 = sub_24469D098();
  uint64_t v85 = v18;
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v82 = a2;
  if (v19)
  {
    uint64_t v77 = v4;
    uint64_t v20 = a2 + 16;
    uint64_t v22 = *(void *)(v11 + 16);
    uint64_t v21 = v11 + 16;
    uint64_t v81 = v22;
    unint64_t v23 = a1 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
    uint64_t v79 = *(void (***)(char *, uint64_t))(v21 + 56);
    uint64_t v24 = (void (**)(void, uint64_t))(v21 - 8);
    uint64_t v76 = a1;
    swift_bridgeObjectRetain();
    uint64_t v25 = (char *)MEMORY[0x263F8EE88];
    do
    {
      ((void (*)(void (*)(NSObject *, uint64_t), unint64_t, uint64_t))v81)(v17, v23, v10);
      uint64_t v29 = sub_24469CB18();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v88[0] = v25;
      sub_244681F48(v29, isUniquelyReferenced_nonNull_native);
      uint64_t v25 = *(char **)&v88[0];
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_24469CB18();
      swift_beginAccess();
      uint64_t v32 = *(void *)v20;
      if (*(void *)(*(void *)v20 + 16) && (unint64_t v33 = sub_24467F12C(v31), (v34 & 1) != 0))
      {
        uint64_t v27 = *(void *)(*(void *)(v32 + 56) + 8 * v33);
        swift_endAccess();
        swift_retain_n();
        sub_244682A94(v17);
      }
      else
      {
        swift_endAccess();
        uint64_t v26 = (uint64_t)v78;
        ((void (*)(char *, void (*)(NSObject *, uint64_t), uint64_t))v81)(v78, v17, v10);
        uint64_t v27 = sub_24468A788(v26);
        uint64_t v28 = swift_retain();
        sub_24467B5F8(v28);
      }
      swift_release();
      AppLibrary.updateInstallState(forUpdated:)(v27);
      swift_release();
      (*v24)(v17, v10);
      v23 += (unint64_t)v79;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    a2 = v82;
    uint64_t v4 = v77;
  }
  else
  {
    uint64_t v25 = (char *)MEMORY[0x263F8EE88];
  }
  swift_beginAccess();
  uint64_t v35 = *(void *)(a2 + 16);
  uint64_t v36 = *(void *)(v35 + 64);
  uint64_t v74 = v35 + 64;
  uint64_t v37 = 1 << *(unsigned char *)(v35 + 32);
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  else {
    uint64_t v38 = -1;
  }
  unint64_t v39 = v38 & v36;
  int64_t v75 = (unint64_t)(v37 + 63) >> 6;
  uint64_t v40 = v25 + 56;
  uint64_t v73 = &v87;
  uint64_t v79 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v81 = v35;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v42 = 0;
  *(void *)&long long v43 = 134217984;
  long long v72 = v43;
  uint64_t v76 = MEMORY[0x263F8EE60] + 8;
  uint64_t v78 = v25;
  uint64_t v77 = v25 + 56;
LABEL_17:
  while (v39)
  {
    unint64_t v46 = __clz(__rbit64(v39));
    v39 &= v39 - 1;
    unint64_t v47 = v46 | (v42 << 6);
LABEL_32:
    uint64_t v51 = *(void *)(*(void *)(v81 + 56) + 8 * v47);
    if (!*((void *)v25 + 2)) {
      goto LABEL_39;
    }
    uint64_t v52 = *(void *)(v51 + 16);
    uint64_t result = sub_24469D668();
    uint64_t v53 = -1 << v25[32];
    unint64_t v54 = result & ~v53;
    if (((*(void *)&v40[(v54 >> 3) & 0xFFFFFFFFFFFFFF8] >> v54) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v55 = *((void *)v25 + 6);
    if (*(void *)(v55 + 8 * v54) != v52)
    {
      uint64_t v56 = ~v53;
      while (1)
      {
        unint64_t v54 = (v54 + 1) & v56;
        if (((*(void *)&v40[(v54 >> 3) & 0xFFFFFFFFFFFFFF8] >> v54) & 1) == 0) {
          break;
        }
        if (*(void *)(v55 + 8 * v54) == v52) {
          goto LABEL_17;
        }
      }
LABEL_39:
      swift_retain();
      sub_24469CC28();
      swift_retain_n();
      uint64_t v57 = sub_24469CC48();
      os_log_type_t v58 = sub_24469D178();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = v72;
        sub_24469D098();
        sub_24469D068();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v60 = *(void *)(v51 + 16);
        swift_release();
        swift_release();
        uint64_t v86 = v60;
        sub_24469D218();
        swift_release();
        _os_log_impl(&dword_244604000, v57, v58, "Known app %llu is not installed", v59, 0xCu);
        MEMORY[0x245695AF0](v59, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*v79)(v83, v80);
      uint64_t v90 = 0;
      memset(v89, 0, sizeof(v89));
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath, v62);
      *(&v70 - 2) = v51;
      *(&v70 - 1) = (uint64_t)v89;
      uint64_t v86 = v51;
      sub_24467F8E8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
      uint64_t v63 = v84;
      sub_24469C928();
      swift_release();
      swift_release();
      memset(v88, 0, sizeof(v88));
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v44 = swift_getKeyPath();
      MEMORY[0x270FA5388](v44, v45);
      *(&v70 - 2) = v51;
      *(&v70 - 1) = (uint64_t)v88;
      uint64_t v86 = v51;
      sub_24469C928();
      uint64_t v84 = v63;
      swift_release();
      swift_release();
      a2 = v82;
      AppLibrary.updateInstallState(forUpdated:)(v51);
      uint64_t result = swift_release();
      uint64_t v25 = v78;
      uint64_t v40 = v77;
    }
  }
  if (__OFADD__(v42++, 1))
  {
    __break(1u);
LABEL_58:
    __break(1u);
    return result;
  }
  if (v42 >= v75) {
    goto LABEL_52;
  }
  unint64_t v49 = *(void *)(v74 + 8 * v42);
  if (v49)
  {
LABEL_31:
    unint64_t v39 = (v49 - 1) & v49;
    unint64_t v47 = __clz(__rbit64(v49)) + (v42 << 6);
    goto LABEL_32;
  }
  int64_t v50 = v42 + 1;
  if (v42 + 1 >= v75) {
    goto LABEL_52;
  }
  unint64_t v49 = *(void *)(v74 + 8 * v50);
  if (v49) {
    goto LABEL_30;
  }
  int64_t v50 = v42 + 2;
  if (v42 + 2 >= v75) {
    goto LABEL_52;
  }
  unint64_t v49 = *(void *)(v74 + 8 * v50);
  if (v49) {
    goto LABEL_30;
  }
  int64_t v50 = v42 + 3;
  if (v42 + 3 >= v75) {
    goto LABEL_52;
  }
  unint64_t v49 = *(void *)(v74 + 8 * v50);
  if (v49)
  {
LABEL_30:
    int64_t v42 = v50;
    goto LABEL_31;
  }
  int64_t v50 = v42 + 4;
  if (v42 + 4 < v75)
  {
    unint64_t v49 = *(void *)(v74 + 8 * v50);
    if (!v49)
    {
      while (1)
      {
        int64_t v42 = v50 + 1;
        if (__OFADD__(v50, 1)) {
          goto LABEL_58;
        }
        if (v42 >= v75) {
          goto LABEL_52;
        }
        unint64_t v49 = *(void *)(v74 + 8 * v42);
        ++v50;
        if (v49) {
          goto LABEL_31;
        }
      }
    }
    goto LABEL_30;
  }
LABEL_52:
  swift_release();
  uint64_t v64 = v71;
  swift_bridgeObjectRelease();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v65 = swift_getKeyPath();
  MEMORY[0x270FA5388](v65, v66);
  *(&v70 - 2) = a2;
  *((unsigned char *)&v70 - 8) = 0;
  uint64_t v86 = a2;
  sub_24467F8E8(&qword_268E9F2C8, (void (*)(uint64_t))type metadata accessor for AppLibrary);
  sub_24469C928();
  swift_release();
  swift_release();
  sub_24469CC28();
  uint64_t v67 = sub_24469CC48();
  os_log_type_t v68 = sub_24469D188();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v69 = 0;
    _os_log_impl(&dword_244604000, v67, v68, "Finished updating catalog", v69, 2u);
    MEMORY[0x245695AF0](v69, -1, -1);
  }

  (*v79)(v64, v80);
  return swift_release();
}

uint64_t sub_24467B5F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D708);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469D0A8();
  sub_24469D098();
  uint64_t v8 = MEMORY[0x263F8F500];
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v9 = *(void *)(a1 + 16);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = 0x8000000000000000;
  sub_24464FDB4(a1, v9, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 16) = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_24469D0B8();
  uint64_t v11 = sub_24469D0D8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);
  swift_retain();
  swift_retain();
  uint64_t v12 = sub_24469D098();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = v8;
  _OWORD v13[4] = a1;
  v13[5] = v2;
  sub_24467BE58((uint64_t)v7, (uint64_t)&unk_268E9F368, (uint64_t)v13);
  swift_release();
  sub_24460BD08((uint64_t)v7, &qword_268E9D708);
  return swift_release();
}

uint64_t sub_24467B804(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_24467B848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_24469CA68();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F378);
  v5[7] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F380);
  v5[8] = v7;
  v5[9] = *(void *)(v7 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F388);
  v5[11] = v8;
  v5[12] = *(void *)(v8 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = sub_24469D0A8();
  v5[15] = sub_24469D098();
  uint64_t v10 = sub_24469D068();
  v5[16] = v10;
  v5[17] = v9;
  return MEMORY[0x270FA2498](sub_24467BA30, v10, v9);
}

uint64_t sub_24467BA30()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  sub_244684FB4();
  sub_24469D108();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_24469D098();
  v0[18] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[19] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24467BB3C;
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[7];
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v7, v4, v8, v6);
}

uint64_t sub_24467BB3C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return MEMORY[0x270FA2498](sub_24467BC80, v3, v2);
}

uint64_t sub_24467BC80()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (void (*)(char *, uint64_t))v0[6];
    uint64_t v7 = v0[2];
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    sub_24468525C(v6);
    AppLibrary.updateInstallState(forUpdated:)(v7);
    (*(void (**)(void, uint64_t))(v3 + 8))(v6, v2);
    uint64_t v8 = sub_24469D098();
    v0[18] = v8;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[19] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_24467BB3C;
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[7];
    uint64_t v12 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1F68](v11, v8, v12, v10);
  }
}

uint64_t sub_24467BE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D708);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24460BCA4(a1, (uint64_t)v9, &qword_268E9D708);
  uint64_t v10 = sub_24469D0D8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_24460BD08((uint64_t)v9, &qword_268E9D708);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_24469D068();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24469D0C8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    void v17[2] = v12;
    v17[3] = v14;
  }
  return swift_task_create();
}

uint64_t AppLibrary.InstallationRequest.alternativeDistributionPackageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24469C888();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AppLibrary.InstallationRequest.alternativeDistributionPackageURL.setter(uint64_t a1)
{
  uint64_t v3 = sub_24469C888();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AppLibrary.InstallationRequest.alternativeDistributionPackageURL.modify())()
{
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.account.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.InstallationRequest.account.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppLibrary.InstallationRequest.account.modify())()
{
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.installVerificationToken.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.InstallationRequest.installVerificationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppLibrary.InstallationRequest.installVerificationToken.modify())()
{
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AppLibrary.InstallationRequest(0);
  return sub_24460BCA4(v1 + *(int *)(v3 + 28), a1, &qword_268E9D588);
}

uint64_t AppLibrary.InstallationRequest.appShareURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 28);

  return sub_244607E90(a1, v3);
}

uint64_t (*AppLibrary.InstallationRequest.appShareURL.modify())()
{
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.init(alternativeDistributionPackageURL:account:installVerificationToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = (int *)type metadata accessor for AppLibrary.InstallationRequest(0);
  uint64_t v13 = a6 + v12[7];
  uint64_t v14 = sub_24469C888();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v19(v13, 1, 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a6, a1, v14);
  uint64_t v16 = (void *)(a6 + v12[5]);
  *uint64_t v16 = a2;
  v16[1] = a3;
  os_log_type_t v17 = (void *)(a6 + v12[6]);
  void *v17 = a4;
  v17[1] = a5;
  sub_24460BD08(v13, &qword_268E9D588);

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v13, 1, 1, v14);
}

uint64_t AppLibrary.requestAppInstallation(for:account:installVerificationToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  _OWORD v5[2] = a1;
  v5[7] = type metadata accessor for AppInstallRequest();
  v5[8] = swift_task_alloc();
  uint64_t v6 = sub_24469C888();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = type metadata accessor for AppLibrary.InstallationRequest(0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24467C624, 0, 0);
}

uint64_t sub_24467C624()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[12];
  uint64_t v32 = v2;
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v6 = (int *)v0[7];
  uint64_t v5 = v0[8];
  uint64_t v28 = v0[5];
  uint64_t v29 = v0[6];
  uint64_t v27 = v0[4];
  uint64_t v25 = v0[11];
  uint64_t v26 = v0[3];
  uint64_t v30 = *(void (**)(void))(v3 + 16);
  uint64_t v31 = v0[14];
  v30();
  uint64_t v7 = v1 + *(int *)(v2 + 28);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v8(v7, 1, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v25, v4);
  uint64_t v9 = (void *)(v1 + *(int *)(v32 + 20));
  *uint64_t v9 = v26;
  v9[1] = v27;
  uint64_t v10 = (void *)(v1 + *(int *)(v32 + 24));
  *uint64_t v10 = v28;
  v10[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24460BD08(v7, &qword_268E9D588);
  v8(v7, 1, 1, v4);
  sub_24467F930(v1, v31, type metadata accessor for AppLibrary.InstallationRequest);
  ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v5 + v6[5], v31, v4);
  uint64_t v11 = v5 + v6[9];
  uint64_t v12 = *MEMORY[0x263F10690];
  uint64_t v13 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = *(int *)(v32 + 20);
  uint64_t v15 = (uint64_t *)(v31 + *(int *)(v32 + 24));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v19 = *(void *)(v31 + v14);
  uint64_t v18 = *(void *)(v31 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24469C8C8();
  uint64_t v20 = (void *)(v5 + v6[6]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = (void *)(v5 + v6[7]);
  *uint64_t v21 = v17;
  v21[1] = v16;
  uint64_t v22 = (void *)(v5 + v6[8]);
  *uint64_t v22 = v19;
  v22[1] = v18;
  *(unsigned char *)(v5 + v6[10]) = 0;
  v8(v5 + v6[11], 1, 1, v4);
  v8(v5 + v6[12], 1, 1, v4);
  unint64_t v23 = (void *)swift_task_alloc();
  v0[15] = v23;
  *unint64_t v23 = v0;
  v23[1] = sub_24467C904;
  return AppInstallRequest.request()();
}

uint64_t sub_24467C904()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24467CAE0;
  }
  else {
    uint64_t v2 = sub_24467CA18;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24467CA18()
{
  uint64_t v1 = v0[14];
  sub_24467F888(v0[8], (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  sub_24467F888(v1, type metadata accessor for AppLibrary.InstallationRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_24467CAE0()
{
  uint64_t v1 = v0[14];
  sub_24467F888(v0[8], (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  sub_24467F888(v1, type metadata accessor for AppLibrary.InstallationRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t AppLibrary.requestAppInstallation(_:)(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24467CC3C, 0, 0);
}

uint64_t sub_24467CC3C()
{
  uint64_t v2 = (int *)v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = v1 + v2[5];
  uint64_t v5 = sub_24469C888();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  uint64_t v7 = v1 + v2[9];
  uint64_t v8 = *MEMORY[0x263F10690];
  uint64_t v9 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for AppLibrary.InstallationRequest(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v10 + 24));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v16 = *(void *)(v3 + v11);
  uint64_t v15 = *(void *)(v3 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24469C8C8();
  uint64_t v17 = (void *)(v1 + v2[6]);
  void *v17 = 0;
  v17[1] = 0;
  uint64_t v18 = (void *)(v1 + v2[7]);
  void *v18 = v14;
  v18[1] = v13;
  uint64_t v19 = (void *)(v1 + v2[8]);
  void *v19 = v16;
  v19[1] = v15;
  *(unsigned char *)(v1 + v2[10]) = 0;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v20(v1 + v2[11], 1, 1, v5);
  v20(v1 + v2[12], 1, 1, v5);
  uint64_t v21 = (void *)swift_task_alloc();
  v0[5] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_24467CE44;
  return AppInstallRequest.request()();
}

uint64_t sub_24467CE44()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24467CFDC;
  }
  else {
    uint64_t v2 = sub_24467CF58;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24467CF58()
{
  sub_24467F888(*(void *)(v0 + 32), (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24467CFDC()
{
  sub_24467F888(*(void *)(v0 + 32), (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AppLibrary.requestAppInstallationFromBrowser(for:referrer:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_24469C888();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  type metadata accessor for LinkMetadata();
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F2E8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AppInstallRequest();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24467D1E8, 0, 0);
}

uint64_t sub_24467D1E8()
{
  uint64_t v1 = v0[11];
  uint64_t v12 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[5] + 16);
  v8(v4, v0[3], v6);
  v8(v5, v7, v6);
  sub_24469B964(v4, v5, v3);
  sub_244666520(v3, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v12) == 1)
  {
    sub_24460BD08(v0[9], &qword_268E9F2E8);
    type metadata accessor for MarketplaceKitError();
    sub_24467F8E8((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    sub_24467F930(v0[9], v0[12], (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[13] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_24467D438;
    return AppInstallRequest.request()();
  }
}

uint64_t sub_24467D438()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24467D608;
  }
  else {
    uint64_t v2 = sub_24467D54C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24467D54C()
{
  sub_24467F888(*(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24467D608()
{
  sub_24467F888(*(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AppLibrary.requestAppUpdate(_:)(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24467D754, 0, 0);
}

uint64_t sub_24467D754()
{
  uint64_t v2 = (int *)v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = v1 + v2[5];
  uint64_t v5 = sub_24469C888();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  uint64_t v7 = v1 + v2[9];
  uint64_t v8 = *MEMORY[0x263F10698];
  uint64_t v9 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for AppLibrary.InstallationRequest(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (uint64_t *)(v3 + *(int *)(v10 + 24));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v16 = *(void *)(v3 + v11);
  uint64_t v15 = *(void *)(v3 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24469C8C8();
  uint64_t v17 = (void *)(v1 + v2[6]);
  void *v17 = 0;
  v17[1] = 0;
  uint64_t v18 = (void *)(v1 + v2[7]);
  void *v18 = v14;
  v18[1] = v13;
  uint64_t v19 = (void *)(v1 + v2[8]);
  void *v19 = v16;
  v19[1] = v15;
  *(unsigned char *)(v1 + v2[10]) = 0;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v20(v1 + v2[11], 1, 1, v5);
  v20(v1 + v2[12], 1, 1, v5);
  uint64_t v21 = (void *)swift_task_alloc();
  v0[5] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_24467D95C;
  return AppInstallRequest.request()();
}

uint64_t sub_24467D95C()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2446826D8;
  }
  else {
    uint64_t v2 = sub_2446826E0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t AppLibrary.requestAppUpdate(for:account:installVerificationToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  _OWORD v5[2] = a1;
  v5[7] = type metadata accessor for AppInstallRequest();
  v5[8] = swift_task_alloc();
  uint64_t v6 = sub_24469C888();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = type metadata accessor for AppLibrary.InstallationRequest(0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24467DBA8, 0, 0);
}

uint64_t sub_24467DBA8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[12];
  uint64_t v32 = v2;
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v6 = (int *)v0[7];
  uint64_t v5 = v0[8];
  uint64_t v28 = v0[5];
  uint64_t v29 = v0[6];
  uint64_t v27 = v0[4];
  uint64_t v25 = v0[11];
  uint64_t v26 = v0[3];
  uint64_t v30 = *(void (**)(void))(v3 + 16);
  uint64_t v31 = v0[14];
  v30();
  uint64_t v7 = v1 + *(int *)(v2 + 28);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v8(v7, 1, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v25, v4);
  uint64_t v9 = (void *)(v1 + *(int *)(v32 + 20));
  *uint64_t v9 = v26;
  v9[1] = v27;
  uint64_t v10 = (void *)(v1 + *(int *)(v32 + 24));
  *uint64_t v10 = v28;
  v10[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24460BD08(v7, &qword_268E9D588);
  v8(v7, 1, 1, v4);
  sub_24467F930(v1, v31, type metadata accessor for AppLibrary.InstallationRequest);
  ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v5 + v6[5], v31, v4);
  uint64_t v11 = v5 + v6[9];
  uint64_t v12 = *MEMORY[0x263F10698];
  uint64_t v13 = sub_24469CA48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = *(int *)(v32 + 20);
  uint64_t v15 = (uint64_t *)(v31 + *(int *)(v32 + 24));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v19 = *(void *)(v31 + v14);
  uint64_t v18 = *(void *)(v31 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24469C8C8();
  uint64_t v20 = (void *)(v5 + v6[6]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = (void *)(v5 + v6[7]);
  *uint64_t v21 = v17;
  v21[1] = v16;
  uint64_t v22 = (void *)(v5 + v6[8]);
  *uint64_t v22 = v19;
  v22[1] = v18;
  *(unsigned char *)(v5 + v6[10]) = 0;
  v8(v5 + v6[11], 1, 1, v4);
  v8(v5 + v6[12], 1, 1, v4);
  uint64_t v23 = (void *)swift_task_alloc();
  v0[15] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_24467DE88;
  return AppInstallRequest.request()();
}

uint64_t sub_24467DE88()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2446826E4;
  }
  else {
    uint64_t v2 = sub_2446826DC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t AppLibrary.didAuthenticate(account:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_24467DFBC, 0, 0);
}

uint64_t sub_24467DFBC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = *(void *)(v0 + 48);
  *(void *)(v0 + 24) = v1;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = v0 + 16;
  sub_24461E1C0();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268E9D9A0 + dword_268E9D9A0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24467E0EC;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_244693FC0, 0);
}

uint64_t sub_24467E0EC()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24467E22C;
  }
  else
  {
    sub_24461E1CC();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24467E218;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24467E218()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24467E22C()
{
  uint64_t v1 = *(void **)(v0 + 72);
  sub_24461E1CC();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t AppLibrary.signalAccountHasAuthenticated(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_24467E2C8, 0, 0);
}

uint64_t sub_24467E2C8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = *(void *)(v0 + 48);
  *(void *)(v0 + 24) = v1;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = v0 + 16;
  sub_24461E1C0();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268E9D9A0 + dword_268E9D9A0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24467E3F8;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_244693FC0, 0);
}

uint64_t sub_24467E3F8()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2446826E8;
  }
  else
  {
    sub_24461E1CC();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2446826B8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t AppLibrary.searchTerritory.getter()
{
  return MEMORY[0x270FA2498](sub_24467E540, 0, 0);
}

uint64_t sub_24467E540()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268E9DA10 + dword_268E9DA10);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24467E64C;
  return v3(v0 + 16, v0 + 40, (uint64_t)sub_24465832C, 0);
}

uint64_t sub_24467E64C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24467E874;
  }
  else {
    uint64_t v2 = sub_24467E760;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24467E760()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 32);
  if (v3 != 7)
  {
    type metadata accessor for MarketplaceKitError();
    sub_24467F8E8((unint64_t *)&qword_268E9D7C0, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v4 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_24461CE18(v2, v1, v3);

    uint64_t v2 = 0;
    unint64_t v1 = 0;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v5(v2, v1);
}

uint64_t sub_24467E874()
{
  unint64_t v1 = *(uint64_t (**)(void, void))(v0 + 8);
  return v1(0, 0);
}

uint64_t AppLibrary.setSearchTerritory(_:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for SetPublicDataRequest(0);
  v2[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24467E96C, 0, 0);
}

uint64_t sub_24467E96C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[4];
  *uint64_t v2 = v0[2];
  v2[1] = v1;
  type metadata accessor for SetPublicDataRequest.Request(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24467EA30;
  return SetPublicDataRequest.run()();
}

uint64_t sub_24467EA30()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_2446826BC;
  }
  else
  {
    uint64_t v1 = sub_24467EB48;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_24467EB48()
{
  sub_24467F888(*(void *)(v0 + 32), type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AppLibrary.requestLicenseRenewal(appleItemIDs:)(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return MEMORY[0x270FA2498](sub_24467EBE8, 0, 0);
}

uint64_t sub_24467EBE8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  *(void *)(v0 + 40) = v0 + 16;
  sub_24461E1C0();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268E9D9A0 + dword_268E9D9A0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24467ED1C;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_244693FC0, 0);
}

uint64_t sub_24467ED1C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24467EE48;
  }
  else
  {
    sub_24461E1CC();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2446350AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24467EE48()
{
  sub_24461E1CC();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppLibrary.requestAppUninstallation(for:)(Swift::UInt64 a1)
{
}

uint64_t static AppLibrary.UninstallError.== infix(_:_:)()
{
  return 1;
}

uint64_t AppLibrary.UninstallError.hash(into:)()
{
  return sub_24469D688();
}

uint64_t AppLibrary.UninstallError.hashValue.getter()
{
  return sub_24469D6C8();
}

uint64_t AppLibrary.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  uint64_t v2 = sub_24469C978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AppLibrary.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  uint64_t v2 = sub_24469C978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

unint64_t sub_24467F0B4(uint64_t a1, uint64_t a2)
{
  sub_24469D678();
  sub_24469CFD8();
  uint64_t v4 = sub_24469D6C8();

  return sub_24467F1D4(a1, a2, v4);
}

unint64_t sub_24467F12C(uint64_t a1)
{
  uint64_t v2 = sub_24469D668();

  return sub_24467F2B8(a1, v2);
}

uint64_t sub_24467F170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppLibrary.installedApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_24467F19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t))AppLibrary.installedApps.setter);
}

uint64_t type metadata accessor for AppLibrary(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9F330);
}

unint64_t sub_24467F1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24469D5B8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24469D5B8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24467F2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_24467F354(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24469D2A8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AppLibrary.App();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v20;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_24469D298();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_244681B38(v7, result + 1);
    uint64_t v21 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_24468145C();
      uint64_t v17 = v21;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_244681D40(a2, v17);
    *uint64_t v3 = v17;
  }
  else
  {
    sub_24469D678();
    uint64_t v10 = *(void *)(a2 + 16);
    sub_24469D6A8();
    uint64_t v11 = sub_24469D6C8();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = *(void *)(v6 + 48);
      if (*(void *)(*(void *)(v14 + 8 * v13) + 16) == v10)
      {
LABEL_12:
        swift_release();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      uint64_t v15 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v15;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        if (*(void *)(*(void *)(v14 + 8 * v13) + 16) == v10) {
          goto LABEL_12;
        }
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v19 = swift_retain();
    sub_244681DE4(v19, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v22;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

unint64_t sub_24467F5B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v2;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    char v6 = sub_24469D2C8();
    swift_release();
    if (v6)
    {
      unint64_t v7 = sub_244680B10(v5, a1);
      swift_bridgeObjectRelease();
      return v7;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_24469D678();
  uint64_t v8 = *(void *)(a1 + 16);
  sub_24469D6A8();
  uint64_t v9 = sub_24469D6C8();
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  uint64_t v12 = *(void *)(v4 + 48);
  if (*(void *)(*(void *)(v12 + 8 * v11) + 16) != v8)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v13;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(*(void *)(v12 + 8 * v11) + 16) != v8);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v2;
  uint64_t v17 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_244680C30();
    uint64_t v15 = v17;
  }
  unint64_t v7 = *(void *)(*(void *)(v15 + 48) + 8 * v11);
  sub_24468198C(v11);
  *uint64_t v2 = v17;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24467F740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppLibrary.installingApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_24467F76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t))AppLibrary.installingApps.setter);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = swift_bridgeObjectRetain();
  return a5(v6);
}

uint64_t sub_24467F7B8()
{
  return sub_244679894(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24467F7D4()
{
  return sub_244679DD0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24467F7F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AppLibrary.isLoading.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24467F820()
{
  return AppLibrary.isLoading.setter();
}

uint64_t sub_24467F848()
{
  return sub_24467A304(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t type metadata accessor for AppLibrary.InstallationRequest(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9F340);
}

uint64_t sub_24467F888(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24467F8E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24467F930(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24467F99C()
{
  unint64_t result = qword_268E9F328;
  if (!qword_268E9F328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F328);
  }
  return result;
}

uint64_t sub_24467F9F0()
{
  return type metadata accessor for AppLibrary(0);
}

uint64_t sub_24467F9F8()
{
  uint64_t result = sub_24469C978();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AppLibrary(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AppLibrary);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppLibrary.InstallationRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24469C888();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = (uint64_t *)((char *)a1 + v10);
    uint64_t v13 = (uint64_t *)((char *)a2 + v10);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = (uint64_t *)((char *)a1 + v11);
    uint64_t v16 = (uint64_t *)((char *)a2 + v11);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v20, 1, v7))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v19, (uint64_t *)v20, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AppLibrary.InstallationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24469C888();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v19, 1, v6))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v8(v18, v19, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v19 = v18(&a1[v15], 1, v6);
  int v20 = v18(v17, 1, v6);
  if (!v19)
  {
    if (!v20)
    {
      v8(v16, v17, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  return a1;
}

char *initializeWithTake for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (uint64_t *)&a2[v9];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = (uint64_t *)&a2[v14];
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[7];
  int v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v23 = v22(&a1[v19], 1, v6);
  int v24 = v22(v21, 1, v6);
  if (!v23)
  {
    if (!v24)
    {
      v8(v20, v21, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLibrary.InstallationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24468048C);
}

uint64_t sub_24468048C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for AppLibrary.InstallationRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2446805D4);
}

uint64_t sub_2446805D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24469C888();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_244680708()
{
  sub_24469C888();
  if (v0 <= 0x3F)
  {
    sub_24460AFF0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t destroy for AppLibrary.InstallError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14MarketplaceKit10AppLibraryC12InstallErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for AppLibrary.InstallError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppLibrary.InstallError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLibrary.InstallError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppLibrary.InstallError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_2446809F4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_244680A0C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.InstallError()
{
  return &type metadata for AppLibrary.InstallError;
}

unsigned char *storeEnumTagSinglePayload for AppLibrary.UninstallError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x244680AD8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.UninstallError()
{
  return &type metadata for AppLibrary.UninstallError;
}

unint64_t sub_244680B10(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_24469D298();
  uint64_t v6 = swift_unknownObjectRetain();
  uint64_t v7 = sub_244681B38(v6, v5);
  uint64_t v16 = v7;
  sub_24469D678();
  uint64_t v8 = *(void *)(a2 + 16);
  sub_24469D6A8();
  uint64_t v9 = sub_24469D6C8();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t result = v9 & ~v10;
  uint64_t v12 = v7 + 56;
  if (((*(void *)(v7 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v7 + 48);
  uint64_t v14 = *(void *)(v13 + 8 * result);
  if (*(void *)(v14 + 16) != v8)
  {
    uint64_t v15 = ~v10;
    while (1)
    {
      unint64_t result = (result + 1) & v15;
      if (((*(void *)(v12 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
        break;
      }
      uint64_t v14 = *(void *)(v13 + 8 * result);
      if (*(void *)(v14 + 16) == v8) {
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_6:
  unint64_t result = sub_24468198C(result);
  if (v8 == *(void *)(v14 + 16))
  {
    *int v3 = v16;
    return v14;
  }
LABEL_10:
  __break(1u);
  return result;
}

void *sub_244680C30()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F350);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24469D2D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_244680DDC()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F358);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24469D2D8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_244680F74()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F350);
  uint64_t result = sub_24469D2E8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_24469D678();
    sub_24469D6A8();
    uint64_t result = sub_24469D6C8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2446811F8()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F358);
  uint64_t result = sub_24469D2E8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_24469D668();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24468145C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F350);
  uint64_t result = sub_24469D2E8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                unint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_24469D678();
      sub_24469D6A8();
      uint64_t result = sub_24469D6C8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_244681708()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F358);
  uint64_t result = sub_24469D2E8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                unint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_24469D668();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

unint64_t sub_24468198C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24469D268();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_24469D678();
        sub_24469D6A8();
        unint64_t v10 = sub_24469D6C8() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          unint64_t v12 = (void *)(v11 + 8 * v2);
          unint64_t v13 = (void *)(v11 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *unint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_244681B38(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F350);
    uint64_t v2 = sub_24469D2F8();
    uint64_t v14 = v2;
    sub_24469D288();
    if (sub_24469D2B8())
    {
      type metadata accessor for AppLibrary.App();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_24468145C();
          uint64_t v2 = v14;
        }
        sub_24469D678();
        sub_24469D6A8();
        uint64_t result = sub_24469D6C8();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_24469D2B8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

unint64_t sub_244681D40(uint64_t a1, uint64_t a2)
{
  sub_24469D678();
  sub_24469D6A8();
  sub_24469D6C8();
  unint64_t result = sub_24469D278();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_244681DE4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_13;
  }
  if (a3)
  {
    sub_24468145C();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_244680C30();
      goto LABEL_13;
    }
    sub_244680F74();
  }
  uint64_t v8 = *v3;
  sub_24469D678();
  uint64_t v9 = *(void *)(v5 + 16);
  sub_24469D6A8();
  unint64_t result = sub_24469D6C8();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    unint64_t result = type metadata accessor for AppLibrary.App();
    uint64_t v11 = *(void *)(v8 + 48);
    if (*(void *)(*(void *)(v11 + 8 * a2) + 16) == v9)
    {
LABEL_12:
      unint64_t result = sub_24469D5F8();
      __break(1u);
    }
    else
    {
      while (1)
      {
        a2 = (a2 + 1) & ~v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(*(void *)(v11 + 8 * a2) + 16) == v9) {
          goto LABEL_12;
        }
      }
    }
  }
LABEL_13:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_244681F48(uint64_t a1, char a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_24469D668();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = v5 + 56;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  if (*(void *)(v10 + 8 * v8) == a1)
  {
    uint64_t v11 = 0;
    BOOL v12 = 1;
    goto LABEL_10;
  }
  uint64_t v13 = ~v7;
  unint64_t v8 = (v8 + 1) & ~v7;
  if ((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v11 = 1;
    while (1)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v8);
      BOOL v12 = v14 == a1;
      if (v14 == a1) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v13;
      if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_10;
      }
    }
    uint64_t v11 = 0;
  }
  else
  {
LABEL_9:
    BOOL v12 = 0;
    uint64_t v11 = 1;
  }
LABEL_10:
  uint64_t v15 = *(void *)(v5 + 16);
  uint64_t v16 = v15 + v11;
  if (__OFADD__(v15, v11))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v17 = *(void *)(v5 + 24);
  if (v17 >= v16 && (a2 & 1) != 0)
  {
    if (!v12) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (a2)
  {
    sub_244681708();
  }
  else
  {
    if (v17 >= v16)
    {
      sub_244680DDC();
      if (!v12)
      {
LABEL_29:
        uint64_t v25 = *v2;
        *(void *)(*v2 + 8 * (v8 >> 6) + 56) |= 1 << v8;
        *(void *)(*(void *)(v25 + 48) + 8 * v8) = a1;
        uint64_t v26 = *(void *)(v25 + 16);
        BOOL v27 = __OFADD__(v26, 1);
        uint64_t v28 = v26 + 1;
        if (!v27)
        {
          uint64_t result = 0;
          *(void *)(v25 + 16) = v28;
          return result;
        }
        goto LABEL_33;
      }
LABEL_27:
      uint64_t v23 = *(void *)(*v2 + 48);
      uint64_t result = *(void *)(v23 + 8 * v8);
      *(void *)(v23 + 8 * v8) = a1;
      return result;
    }
    sub_2446811F8();
  }
  uint64_t v18 = *v2;
  uint64_t v19 = sub_24469D668();
  uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
  unint64_t v8 = v19 & ~v20;
  if (((*(void *)(v18 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v21 = *(void *)(v18 + 48);
  if (*(void *)(v21 + 8 * v8) != a1)
  {
    uint64_t v22 = ~v20;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v22;
      if (((*(void *)(v18 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      if (*(void *)(v21 + 8 * v8) == a1) {
        goto LABEL_26;
      }
    }
LABEL_28:
    if (!v12) {
      goto LABEL_29;
    }
    goto LABEL_34;
  }
LABEL_26:
  if (v12) {
    goto LABEL_27;
  }
LABEL_34:
  uint64_t result = sub_24469D5F8();
  __break(1u);
  return result;
}

uint64_t sub_24468216C(uint64_t a1)
{
  return sub_24467A660(a1, v1);
}

unint64_t sub_244682174(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24469D3A8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F350);
      uint64_t result = sub_24469D308();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_24469D3A8();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = v3 + 56;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t result = MEMORY[0x245695080](v8, v1);
        BOOL v9 = __OFADD__(v8++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_34;
        }
        unint64_t v10 = result;
        sub_24469D678();
        uint64_t v11 = *(void *)(v10 + 16);
        sub_24469D6A8();
        uint64_t result = sub_24469D6C8();
        uint64_t v12 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v13 = result & ~v12;
        unint64_t v14 = v13 >> 6;
        uint64_t v15 = *(void *)(v7 + 8 * (v13 >> 6));
        uint64_t v16 = 1 << v13;
        uint64_t v17 = *(void *)(v3 + 48);
        if (((1 << v13) & v15) != 0) {
          break;
        }
LABEL_19:
        *(void *)(v7 + 8 * v14) = v16 | v15;
        *(void *)(v17 + 8 * v13) = v10;
        uint64_t v19 = *(void *)(v3 + 16);
        BOOL v9 = __OFADD__(v19, 1);
        uint64_t v20 = v19 + 1;
        if (v9) {
          goto LABEL_35;
        }
        *(void *)(v3 + 16) = v20;
        if (v8 == v5) {
          return v3;
        }
      }
      if (*(void *)(*(void *)(v17 + 8 * v13) + 16) != v11)
      {
        uint64_t v18 = ~v12;
        do
        {
          unint64_t v13 = (v13 + 1) & v18;
          unint64_t v14 = v13 >> 6;
          uint64_t v15 = *(void *)(v7 + 8 * (v13 >> 6));
          uint64_t v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0) {
            goto LABEL_19;
          }
        }
        while (*(void *)(*(void *)(v17 + 8 * v13) + 16) != v11);
      }
      swift_unknownObjectRelease();
      if (v8 == v5) {
        return v3;
      }
    }
  }
  uint64_t v21 = 0;
  unint64_t v22 = v1 + 32;
  uint64_t v23 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v21 != v23)
  {
    uint64_t v26 = *(void *)(v22 + 8 * v21);
    sub_24469D678();
    uint64_t v27 = *(void *)(v26 + 16);
    sub_24469D6A8();
    uint64_t result = sub_24469D6C8();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    uint64_t v33 = *(void *)(v3 + 48);
    if (((1 << v29) & v31) != 0)
    {
      if (*(void *)(*(void *)(v33 + 8 * v29) + 16) == v27) {
        goto LABEL_25;
      }
      uint64_t v34 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v34;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        if (*(void *)(*(void *)(v33 + 8 * v29) + 16) == v27) {
          goto LABEL_25;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(v33 + 8 * v29) = v26;
    uint64_t v24 = *(void *)(v3 + 16);
    BOOL v9 = __OFADD__(v24, 1);
    uint64_t v25 = v24 + 1;
    if (v9) {
      goto LABEL_36;
    }
    *(void *)(v3 + 16) = v25;
    uint64_t result = swift_retain();
LABEL_25:
    if (++v21 == v5) {
      return v3;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24468244C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24468248C()
{
  return sub_24467A9F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24468249C()
{
  return sub_2446872FC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2446824C0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_244682508(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24460BAB0;
  return sub_24467B848(a1, v4, v5, v7, v6);
}

uint64_t sub_2446825C8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_244682600(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24460BAB0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268E9F6F0 + dword_268E9F6F0);
  return v6(a1, v4);
}

uint64_t sub_2446826C0()
{
  return sub_24467F848();
}

uint64_t sub_2446826EC(uint64_t a1, void *a2)
{
  unint64_t v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = sub_24469C8B8();
  unint64_t v7 = v6;

  v3(v5, v7);
  sub_24460B97C(v5, v7);

  return swift_release();
}

uint64_t AppLibrary.App.Metadata.init(appleVersionID:version:shortVersion:account:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_244682788(uint64_t a1)
{
  sub_24461EE74(a1, (uint64_t)v4, &qword_268E9F3F8);
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v2);
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C928();
  sub_24468AFDC(v4, (void (*)(void, void, void, void, void, void, void, void))sub_244687544);
  swift_release();
  return swift_release();
}

uint64_t sub_24468291C(uint64_t a1)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v3);
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C928();
  swift_release();
  sub_24460BD08(a1, &qword_268E9E6E8);
  return swift_release();
}

uint64_t sub_244682A94(void (*a1)(NSObject *, uint64_t))
{
  uint64_t v2 = v1;
  v227 = a1;
  uint64_t v224 = type metadata accessor for MarketplaceKitError();
  uint64_t v221 = *(void *)(v224 - 8);
  MEMORY[0x270FA5388](v224, v3);
  uint64_t v5 = (char *)&v201 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24469CC68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v6, v8);
  uint64_t v11 = (char *)&v201 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v9, v12);
  uint64_t v15 = ((char *)&v201 - v14);
  uint64_t v17 = MEMORY[0x270FA5388](v13, v16);
  v220 = ((char *)&v201 - v18);
  uint64_t v20 = MEMORY[0x270FA5388](v17, v19);
  v219 = ((char *)&v201 - v21);
  MEMORY[0x270FA5388](v20, v22);
  v223 = ((char *)&v201 - v23);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  uint64_t v26 = MEMORY[0x270FA5388](v24 - 8, v25);
  uint64_t v210 = (uint64_t)&v201 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26, v28);
  v217 = (char *)&v201 - v29;
  uint64_t v225 = sub_24469CB98();
  uint64_t v222 = *(void *)(v225 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v225, v30);
  v209 = (char *)&v201 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v31, v33);
  v208 = (char *)&v201 - v35;
  MEMORY[0x270FA5388](v34, v36);
  v228 = (char *)&v201 - v37;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F3F0);
  uint64_t v40 = MEMORY[0x270FA5388](v38 - 8, v39);
  uint64_t v215 = (uint64_t)&v201 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v40, v42);
  v216 = (char *)&v201 - v44;
  uint64_t v46 = MEMORY[0x270FA5388](v43, v45);
  uint64_t v212 = (uint64_t)&v201 - v47;
  uint64_t v49 = MEMORY[0x270FA5388](v46, v48);
  v229 = (char *)&v201 - v50;
  MEMORY[0x270FA5388](v49, v51);
  uint64_t v53 = (char *)&v201 - v52;
  uint64_t v54 = sub_24469D0A8();
  uint64_t v55 = sub_24469D098();
  uint64_t v230 = v54;
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v56 = v1[2];
  if (v56 == sub_24469CB18())
  {
    uint64_t v204 = v56;
    uint64_t v203 = v5;
    uint64_t v207 = v55;
    v211 = v15;
    uint64_t v226 = v7;
    uint64_t v218 = v6;
    sub_24469CB48();
    uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v222 + 48);
    uint64_t v214 = v222 + 48;
    v213 = v57;
    int v58 = v57((uint64_t)v53, 1, v225);
    sub_24460BD08((uint64_t)v53, &qword_268E9F3F0);
    if (v58 == 1)
    {
      uint64_t v201 = sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      uint64_t v59 = (char *)v2 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
      v234 = v2;
      uint64_t v202 = sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
      uint64_t v205 = (uint64_t)v59;
      sub_24469C938();
      swift_release();
      uint64_t v60 = v2[10];
      uint64_t v61 = v2[11];
      uint64_t v62 = v2[12];
      uint64_t v63 = v2[13];
      uint64_t v64 = v2[14];
      uint64_t v65 = v2[15];
      uint64_t v66 = v2[16];
      uint64_t v67 = (void *)v2[17];
      sub_2446521AC(v60, v61, v62, v63, v64, v65, v66, v67);
      swift_release();
      if (v62)
      {
        id v68 = v67;
        sub_244687544(v60, v61, v62, v63, v64, v65, v66, v67);
        sub_244687FA8(1.0);
      }
      uint64_t v201 = sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      v234 = v2;
      sub_24469C938();
      swift_release();
      uint64_t v69 = v2[10];
      uint64_t v70 = v2[11];
      uint64_t v71 = v2[12];
      uint64_t v72 = v2[13];
      uint64_t v73 = v2[14];
      uint64_t v74 = v2[15];
      uint64_t v76 = v2[16];
      int64_t v75 = (void *)v2[17];
      sub_2446521AC(v69, v70, v71, v72, v73, v74, v76, v75);
      swift_release();
      if (v71)
      {
        id v77 = v75;
        sub_244687544(v69, v70, v71, v72, v73, v74, v76, v75);
        sub_2446882DC(0, 0);
      }
    }
    uint64_t v78 = (uint64_t)v229;
    sub_24469CB38();
    uint64_t v79 = v212;
    sub_24460BCA4(v78, v212, &qword_268E9F3F0);
    uint64_t v80 = v225;
    int v81 = v213(v79, 1, v225);
    v206 = v2;
    if (v81 == 1)
    {
      uint64_t v82 = 0;
      uint64_t v83 = 0;
      uint64_t v84 = 0;
      uint64_t v85 = 0;
      uint64_t v86 = 0;
      char v87 = 0;
      uint64_t v88 = 0;
    }
    else
    {
      uint64_t v92 = v222;
      (*(void (**)(char *, uint64_t, uint64_t))(v222 + 32))(v228, v79, v80);
      uint64_t v205 = sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v93 = v208;
      uint64_t v94 = v228;
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v208, v228, v80);
      uint64_t v202 = sub_24469CB68();
      uint64_t v83 = sub_24469CB88();
      uint64_t v84 = v95;
      uint64_t v212 = sub_24469CB58();
      uint64_t v86 = v96;
      uint64_t v97 = sub_24469CB78();
      uint64_t v98 = v92;
      uint64_t v88 = v99;
      uint64_t v100 = *(void (**)(char *, uint64_t))(v98 + 8);
      uint64_t v101 = v93;
      uint64_t v82 = v202;
      v100(v101, v80);
      swift_release();
      v100(v94, v80);
      char v87 = (char *)v97;
      uint64_t v85 = v212;
      uint64_t v78 = (uint64_t)v229;
    }
    v235[0] = v82;
    v235[1] = v83;
    v235[2] = v84;
    v235[3] = v85;
    uint64_t v212 = v85;
    v235[4] = v86;
    v235[5] = v87;
    v208 = v87;
    uint64_t v205 = v88;
    v235[6] = v88;
    sub_24460BD08(v78, &qword_268E9F3F0);
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath, v103);
    uint64_t v104 = v206;
    *(&v201 - 2) = (uint64_t)v206;
    *(&v201 - 1) = (uint64_t)v235;
    uint64_t v105 = (char *)v104 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
    v234 = v104;
    v228 = (char *)sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
    v229 = v105;
    sub_24469C928();
    sub_2446872AC(v82, v83, v84);
    swift_release();
    swift_release();
    uint64_t v106 = (uint64_t)v216;
    uint64_t v107 = (uint64_t)v227;
    sub_24469CB48();
    uint64_t v108 = v215;
    sub_24460BCA4(v106, v215, &qword_268E9F3F0);
    uint64_t v109 = v225;
    if (v213(v108, 1, v225) == 1)
    {
      memset(v233, 0, sizeof(v233));
      uint64_t v110 = v218;
      uint64_t v111 = v226;
    }
    else
    {
      uint64_t v112 = v222;
      uint64_t v113 = (uint64_t)v209;
      (*(void (**)(char *, uint64_t, uint64_t))(v222 + 32))(v209, v108, v109);
      sub_2446885B8(v113, v104, v107, (uint64_t *)v233);
      uint64_t v110 = v218;
      uint64_t v111 = v226;
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v113, v109);
    }
    sub_24460BD08(v106, &qword_268E9F3F0);
    sub_24461EE74((uint64_t)v233, (uint64_t)&v234, &qword_268E9F3F8);
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v114 = swift_getKeyPath();
    MEMORY[0x270FA5388](v114, v115);
    *(&v201 - 2) = (uint64_t)v104;
    *(&v201 - 1) = (uint64_t)&v234;
    v232 = v104;
    sub_24469C928();
    sub_24468AFDC(&v234, (void (*)(void, void, void, void, void, void, void, void))sub_244687544);
    swift_release();
    swift_release();
    uint64_t v116 = sub_24469CB28();
    if (v117 >> 60 == 15)
    {
      uint64_t v118 = 1;
      uint64_t v119 = (uint64_t)v217;
    }
    else
    {
      uint64_t v120 = v116;
      unint64_t v121 = v117;
      sub_24469C818();
      swift_allocObject();
      sub_24469C808();
      sub_24468AEC8(&qword_268E9DE90, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
      uint64_t v119 = (uint64_t)v217;
      sub_24469C7F8();
      uint64_t v118 = 0;
      sub_24463EB20(v120, v121);
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v221 + 56))(v119, v118, 1, v224);
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v122 = swift_getKeyPath();
    MEMORY[0x270FA5388](v122, v123);
    *(&v201 - 2) = (uint64_t)v104;
    *(&v201 - 1) = v119;
    *(void *)&v233[0] = v104;
    sub_24469C928();
    swift_release();
    sub_24460BD08(v119, &qword_268E9E6E8);
    swift_release();
    sub_24469CC28();
    swift_retain_n();
    uint64_t v124 = sub_24469CC48();
    os_log_type_t v125 = sub_24469D188();
    if (os_log_type_enabled(v124, v125))
    {
      uint64_t v126 = swift_slowAlloc();
      *(_DWORD *)uint64_t v126 = 134218496;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      swift_release();
      *(void *)&v233[0] = v204;
      sub_24469D218();
      swift_release();
      *(_WORD *)(v126 + 12) = 1024;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      BOOL v127 = AppLibrary.App.isInstalled.getter();
      swift_release();
      swift_release();
      LODWORD(v233[0]) = v127;
      sub_24469D218();
      swift_release();
      *(_WORD *)(v126 + 18) = 1024;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      BOOL v128 = AppLibrary.App.isInstalling.getter();
      swift_release();
      swift_release();
      LODWORD(v233[0]) = v128;
      sub_24469D218();
      swift_release();
      _os_log_impl(&dword_244604000, v124, v125, "Updating app %llu: isInstalled: %{BOOL}d, isInstalling: %{BOOL}d", (uint8_t *)v126, 0x18u);
      MEMORY[0x245695AF0](v126, -1, -1);

      uint64_t v111 = v226;
    }
    else
    {

      swift_release_n();
    }
    uint64_t v129 = *(void (**)(NSObject *, uint64_t))(v111 + 8);
    v129(v223, v110);
    uint64_t v130 = v219;
    sub_24469CC28();
    swift_retain_n();
    uint64_t v131 = sub_24469CC48();
    int v132 = sub_24469D188();
    BOOL v133 = os_log_type_enabled(v131, (os_log_type_t)v132);
    uint64_t v226 = v111 + 8;
    v227 = v129;
    if (v133)
    {
      LODWORD(v222) = v132;
      uint64_t v134 = (_DWORD *)swift_slowAlloc();
      v217 = (char *)swift_slowAlloc();
      *(void *)&v233[0] = v217;
      uint64_t v225 = (uint64_t)v134;
      _DWORD *v134 = 134218242;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      v223 = v131;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      v232 = v104;
      sub_24469C938();
      swift_release();
      uint64_t v136 = v104[3];
      uint64_t v135 = v104[4];
      uint64_t v137 = v104[5];
      sub_24468725C(v136, v135, v137);
      swift_release();
      if (v137)
      {
        sub_2446872AC(v136, v135, v137);
        swift_release();
        swift_release();
      }
      else
      {
        sub_24469D098();
        sub_24469D068();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        swift_release();
        uint64_t v136 = 0;
      }
      uint64_t v140 = v225;
      v232 = (void *)v136;
      sub_24469D218();
      swift_release();
      *(_WORD *)(v140 + 12) = 2080;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      v232 = v104;
      sub_24469C938();
      swift_release();
      uint64_t v142 = v104[3];
      uint64_t v141 = v104[4];
      uint64_t v143 = v104[5];
      uint64_t v144 = v104[8];
      unint64_t v145 = v104[9];
      sub_24468725C(v142, v141, v143);
      swift_release();
      if (!v143 || (swift_bridgeObjectRetain(), sub_2446872AC(v142, v141, v143), !v145))
      {
        sub_24469D098();
        sub_24469D068();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v144 = 0x296C696E28;
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v145 = 0xE500000000000000;
      }
      uint64_t v110 = v218;
      uint64_t v146 = v219;
      uint64_t v129 = v227;
      uint64_t v147 = v223;
      swift_release();
      uint64_t v148 = (uint8_t *)v225;
      v232 = (void *)sub_244628BF0(v144, v145, (uint64_t *)v233);
      sub_24469D218();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244604000, v147, (os_log_type_t)v222, "\t installedMetadata evid: %llu account: %s", v148, 0x16u);
      uint64_t v149 = v217;
      swift_arrayDestroy();
      MEMORY[0x245695AF0](v149, -1, -1);
      MEMORY[0x245695AF0](v148, -1, -1);

      uint64_t v138 = v146;
      uint64_t v139 = v110;
    }
    else
    {

      swift_release_n();
      uint64_t v138 = v130;
      uint64_t v139 = v110;
    }
    v129(v138, v139);
    uint64_t v150 = v220;
    sub_24469CC28();
    swift_retain_n();
    uint64_t v151 = sub_24469CC48();
    int v152 = sub_24469D188();
    if (os_log_type_enabled(v151, (os_log_type_t)v152))
    {
      uint64_t v153 = (_DWORD *)swift_slowAlloc();
      uint64_t v154 = swift_slowAlloc();
      *(void *)&v233[0] = v154;
      uint64_t v225 = (uint64_t)v153;
      *uint64_t v153 = 67109634;
      v217 = (char *)sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      v219 = v154;
      LODWORD(v222) = v152;
      v223 = v151;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      v232 = v104;
      sub_24469C938();
      swift_release();
      uint64_t v155 = v104[10];
      uint64_t v156 = v104[11];
      uint64_t v157 = v104[12];
      uint64_t v158 = v104[13];
      uint64_t v159 = v104[14];
      uint64_t v160 = v104[15];
      uint64_t v162 = v104[16];
      uint64_t v161 = (void *)v104[17];
      sub_2446521AC(v155, v156, v157, v158, v159, v160, v162, v161);
      swift_release();
      if (v157)
      {
        sub_244687544(v155, v156, v157, v158, v159, v160, v162, v161);
        int v163 = 1;
      }
      else
      {
        int v163 = 0;
      }
      swift_release();
      swift_release();
      uint64_t v166 = v225;
      LODWORD(v232) = v163;
      sub_24469D218();
      swift_release();
      *(_WORD *)(v166 + 8) = 2048;
      v217 = (char *)sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      v232 = v104;
      sub_24469C938();
      swift_release();
      uint64_t v168 = v104[10];
      uint64_t v167 = v104[11];
      uint64_t v169 = v104[12];
      uint64_t v170 = v104[13];
      uint64_t v171 = v104[14];
      uint64_t v172 = v104[15];
      uint64_t v174 = v104[16];
      uint64_t v173 = (void *)v104[17];
      sub_2446521AC(v168, v167, v169, v170, v171, v172, v174, v173);
      swift_release();
      if (v169)
      {
        sub_244687544(v168, v167, v169, v170, v171, v172, v174, v173);
        swift_release();
        swift_release();
      }
      else
      {
        sub_24469D098();
        sub_24469D068();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        swift_release();
        uint64_t v168 = 0;
      }
      uint64_t v175 = v225;
      v232 = (void *)v168;
      sub_24469D218();
      swift_release();
      *(_WORD *)(v175 + 18) = 2080;
      v217 = (char *)sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      v232 = v104;
      sub_24469C938();
      swift_release();
      uint64_t v177 = v104[10];
      uint64_t v176 = v104[11];
      uint64_t v179 = v104[12];
      uint64_t v178 = v104[13];
      uint64_t v180 = v104[14];
      uint64_t v181 = v104[15];
      unint64_t v182 = v104[16];
      v183 = (void *)v104[17];
      sub_2446521AC(v177, v176, v179, v178, v180, v181, v182, v183);
      swift_release();
      if (v179
        && (swift_bridgeObjectRetain(),
            swift_bridgeObjectRetain(),
            swift_bridgeObjectRetain(),
            sub_244687544(v177, v176, v179, v178, v180, v181, v182, v183),
            swift_bridgeObjectRelease(),
            swift_bridgeObjectRelease(),
            v182))
      {
        uint64_t v110 = v218;
        v184 = v223;
        os_log_type_t v185 = v222;
        v186 = (char *)v219;
      }
      else
      {
        sub_24469D098();
        sub_24469D068();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v181 = 0x296C696E28;
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v182 = 0xE500000000000000;
        uint64_t v110 = v218;
        v184 = v223;
        os_log_type_t v185 = v222;
        v186 = (char *)v219;
      }
      swift_release();
      v187 = (uint8_t *)v225;
      v232 = (void *)sub_244628BF0(v181, v182, (uint64_t *)v233);
      sub_24469D218();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244604000, v184, v185, "\t installation: %{BOOL}d evid: %llu account: %s", v187, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x245695AF0](v186, -1, -1);
      MEMORY[0x245695AF0](v187, -1, -1);

      uint64_t v164 = v220;
      uint64_t v165 = v110;
      uint64_t v129 = v227;
    }
    else
    {

      swift_release_n();
      uint64_t v164 = v150;
      uint64_t v165 = v110;
    }
    v129(v164, v165);
    v188 = v211;
    sub_24469CC28();
    swift_retain_n();
    v189 = sub_24469CC48();
    os_log_type_t v190 = sub_24469D188();
    if (os_log_type_enabled(v189, v190))
    {
      v191 = (uint8_t *)swift_slowAlloc();
      uint64_t v192 = swift_slowAlloc();
      v232 = (void *)v192;
      *(_DWORD *)v191 = 136315138;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_getKeyPath();
      *(void *)&v233[0] = v104;
      sub_24469C938();
      swift_release();
      v193 = (char *)v104 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError;
      swift_beginAccess();
      uint64_t v194 = (uint64_t)v193;
      uint64_t v195 = v210;
      sub_24460BCA4(v194, v210, &qword_268E9E6E8);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v221 + 48))(v195, 1, v224))
      {
        sub_24460BD08(v195, &qword_268E9E6E8);
        sub_24469D098();
        sub_24469D068();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        unint64_t v196 = 0x296C696E28;
        swift_release();
        unint64_t v197 = 0xE500000000000000;
      }
      else
      {
        uint64_t v198 = (uint64_t)v203;
        sub_24466E74C(v195, (uint64_t)v203);
        sub_24460BD08(v195, &qword_268E9E6E8);
        unint64_t v196 = MarketplaceKitError.description.getter();
        unint64_t v197 = v199;
        sub_24462A418(v198);
      }
      swift_release();
      uint64_t v231 = sub_244628BF0(v196, v197, (uint64_t *)&v232);
      sub_24469D218();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244604000, v189, v190, "\t installError:: %s", v191, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245695AF0](v192, -1, -1);
      MEMORY[0x245695AF0](v191, -1, -1);

      v227(v211, v110);
    }
    else
    {

      swift_release_n();
      v129(v188, v110);
    }
  }
  else
  {
    sub_24469CC28();
    char v89 = sub_24469CC48();
    os_log_type_t v90 = sub_24469D198();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v91 = 0;
      _os_log_impl(&dword_244604000, v89, v90, "Trying to update app with mismatched app data", v91, 2u);
      MEMORY[0x245695AF0](v91, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  return swift_release();
}

uint64_t sub_244684E20(uint64_t a1)
{
  sub_24461EE74(a1, (uint64_t)v4, &qword_268E9F3E8);
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v2);
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C928();
  sub_24468A748(v4, (void (*)(void, void, void, void, void, void, void))sub_2446872AC);
  swift_release();
  return swift_release();
}

uint64_t sub_244684FB4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F408);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F410);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v6, v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(v0 + 16);
  sub_24469CA68();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x263F8F580], v1);
  sub_24469D0E8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F418);
  swift_allocObject();
  uint64_t v16 = sub_24469CB08();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v15;
  *(void *)(v17 + 32) = 0;
  *(unsigned char *)(v17 + 40) = 0;
  swift_retain();
  sub_24469D0F8();
  sub_24469CBF8();
  uint64_t v18 = (void *)sub_24469CBE8();
  sub_24469CBD8();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, v6);
}

void sub_24468525C(void (*a1)(char *, uint64_t))
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24469CA68();
  uint64_t v176 = *(void *)(v4 - 8);
  uint64_t v5 = v176;
  uint64_t v7 = MEMORY[0x270FA5388](v4, v6);
  uint64_t v172 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7, v9);
  uint64_t v174 = (char *)&v167 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10, v12);
  uint64_t v177 = (uint64_t *)((char *)&v167 - v14);
  uint64_t v16 = MEMORY[0x270FA5388](v13, v15);
  uint64_t v179 = (char *)&v167 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16, v18);
  v184 = (uint64_t *)((char *)&v167 - v20);
  MEMORY[0x270FA5388](v19, v21);
  uint64_t v23 = (char *)&v167 - v22;
  uint64_t v186 = sub_24469CC68();
  uint64_t v24 = *(void *)(v186 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v186, v25);
  uint64_t v171 = (char *)&v167 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26, v28);
  uint64_t v173 = (char *)&v167 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29, v31);
  uint64_t v170 = (char *)&v167 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32, v34);
  uint64_t v175 = (char *)&v167 - v36;
  uint64_t v38 = MEMORY[0x270FA5388](v35, v37);
  uint64_t v169 = (void (*)(uint64_t *, uint64_t))((char *)&v167 - v39);
  MEMORY[0x270FA5388](v38, v40);
  uint64_t v42 = (char *)&v167 - v41;
  uint64_t v43 = sub_24469D0A8();
  uint64_t v44 = sub_24469D098();
  uint64_t v189 = v43;
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469CC28();
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  os_log_type_t v185 = a1;
  v187 = v45;
  uint64_t v188 = v5 + 16;
  v45(v23, (char *)a1, v4);
  swift_retain_n();
  uint64_t v46 = v5;
  uint64_t v47 = sub_24469CC48();
  os_log_type_t v48 = sub_24469D188();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v183 = v44;
  if (v49)
  {
    uint64_t v178 = v46;
    uint64_t v180 = v4;
    uint64_t v181 = v24;
    uint64_t v182 = (uint64_t)v1;
    uint64_t v50 = swift_slowAlloc();
    uint64_t v168 = swift_slowAlloc();
    v191[0] = v168;
    *(_DWORD *)uint64_t v50 = 134218242;
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v51 = *(void *)(v182 + 16);
    swift_release();
    swift_release();
    uint64_t v190 = v51;
    sub_24469D218();
    swift_release();
    *(_WORD *)(v50 + 12) = 2082;
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_24468AEC8(&qword_268E9F400, MEMORY[0x263F10710]);
    uint64_t v52 = v180;
    uint64_t v53 = sub_24469D5A8();
    uint64_t v190 = sub_244628BF0(v53, v54, v191);
    sub_24469D218();
    swift_bridgeObjectRelease();
    uint64_t v55 = v178;
    uint64_t v56 = *(void (**)(char *, uint64_t))(v178 + 8);
    v56(v23, v52);
    uint64_t v57 = v52;
    _os_log_impl(&dword_244604000, v47, v48, "[%llu] Got state %{public}s", (uint8_t *)v50, 0x16u);
    uint64_t v58 = v168;
    swift_arrayDestroy();
    MEMORY[0x245695AF0](v58, -1, -1);
    MEMORY[0x245695AF0](v50, -1, -1);

    uint64_t v59 = v55;
    uint64_t v24 = v181;
    uint64_t v60 = *(void (**)(char *, uint64_t))(v181 + 8);
    v60(v42, v186);
    uint64_t v2 = (void *)v182;
    uint64_t v61 = v184;
  }
  else
  {
    swift_release_n();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v46 + 8);
    v56(v23, v4);

    uint64_t v60 = *(void (**)(char *, uint64_t))(v24 + 8);
    v60(v42, v186);
    uint64_t v57 = v4;
    uint64_t v61 = v184;
    uint64_t v59 = v46;
  }
  v187((char *)v61, (char *)v185, v57);
  uint64_t v62 = *(uint64_t (**)(uint64_t *, uint64_t))(v59 + 88);
  int v63 = v62(v61, v57);
  if (v63 == *MEMORY[0x263F10700])
  {
    (*(void (**)(uint64_t *, uint64_t))(v59 + 96))(v61, v57);
    swift_release();
LABEL_12:
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    v191[0] = (uint64_t)v2;
    sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
    sub_24469C938();
    swift_release();
    uint64_t v65 = v2[10];
    uint64_t v64 = v2[11];
    uint64_t v66 = v2[12];
    uint64_t v67 = v2[13];
    id v68 = v2;
    uint64_t v69 = v2[14];
    uint64_t v70 = v68[15];
    uint64_t v71 = v68[16];
    uint64_t v72 = (void *)v68[17];
    sub_2446521AC(v65, v64, v66, v67, v69, v70, v71, v72);
    swift_release();
    if (v66)
    {
      id v73 = v72;
      sub_244687544(v65, v64, v66, v67, v69, v70, v71, v72);
      double v74 = 1.0;
LABEL_16:
      sub_244687FA8(v74);
      sub_2446882DC(0, 0);
LABEL_17:
      swift_release();

      return;
    }
    goto LABEL_73;
  }
  if (v63 == *MEMORY[0x263F106C8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v59 + 96))(v61, v57);
    swift_release();
    goto LABEL_73;
  }
  uint64_t v75 = v59;
  int v76 = *MEMORY[0x263F106C0];
  if (v63 == *MEMORY[0x263F106C0])
  {
    os_log_type_t v185 = v60;
    uint64_t v181 = v24;
    (*(void (**)(uint64_t *, uint64_t))(v75 + 96))(v61, v57);
    uint64_t v188 = *v61;
    double v77 = *(double *)(v188 + 16);
    v187 = (void (*)(char *, char *, uint64_t))sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    v191[0] = (uint64_t)v2;
    sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
    sub_24469C938();
    swift_release();
    uint64_t v79 = v2[10];
    uint64_t v78 = v2[11];
    uint64_t v81 = v2[12];
    uint64_t v80 = v2[13];
    uint64_t v82 = v2[14];
    uint64_t v83 = v2[15];
    uint64_t v85 = v2[16];
    uint64_t v84 = (void *)v2[17];
    sub_2446521AC(v79, v78, v81, v80, v82, v83, v85, v84);
    swift_release();
    if (v81)
    {
      id v73 = v84;
      sub_244687544(v79, v78, v81, v80, v82, v83, v85, v84);
      sub_244687FA8(v77);
      sub_2446882DC(0, 0);
      swift_release();
      goto LABEL_17;
    }
    uint64_t v124 = v175;
    sub_24469CC28();
    swift_retain_n();
    os_log_type_t v125 = sub_24469CC48();
    os_log_type_t v126 = sub_24469D178();
    if (os_log_type_enabled(v125, v126))
    {
      BOOL v127 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)BOOL v127 = 134217984;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v128 = v2[2];
      swift_release();
      swift_release();
      v191[0] = v128;
      sub_24469D218();
      swift_release();
      _os_log_impl(&dword_244604000, v125, v126, "[%llu] Received AppState update before app catalog update for installation", v127, 0xCu);
      MEMORY[0x245695AF0](v127, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    v185(v124, v186);
LABEL_72:
    swift_release();
    goto LABEL_73;
  }
  if (v63 == *MEMORY[0x263F106E8])
  {
    uint64_t v175 = (char *)v56;
    os_log_type_t v185 = v60;
    uint64_t v181 = v24;
    uint64_t v86 = *(void (**)(uint64_t *, uint64_t))(v75 + 96);
    uint64_t v178 = v75 + 96;
    uint64_t v169 = v86;
    v86(v61, v57);
    uint64_t v172 = (char *)*v61;
    uint64_t v87 = swift_projectBox();
    uint64_t v180 = v57;
    v187(v179, (char *)v87, v57);
    v184 = (uint64_t *)sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    uint64_t v88 = (char *)v2 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
    v191[0] = (uint64_t)v2;
    uint64_t v167 = sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
    uint64_t v168 = (uint64_t)v88;
    sub_24469C938();
    swift_release();
    char v89 = v2;
    uint64_t v90 = v2[10];
    uint64_t v91 = v2[11];
    uint64_t v92 = v89[12];
    uint64_t v93 = v89[13];
    uint64_t v95 = v89[14];
    uint64_t v94 = v89[15];
    uint64_t v96 = v89[16];
    uint64_t v97 = (void *)v89[17];
    uint64_t v182 = (uint64_t)v89;
    uint64_t v171 = (char *)v96;
    sub_2446521AC(v90, v91, v92, v93, v95, v94, v96, v97);
    swift_release();
    if (v92)
    {
      v184 = v97;
      sub_244687544(v90, v91, v92, v93, v95, v94, (uint64_t)v171, v97);
      uint64_t v98 = v184;
      sub_2446882DC(1, 0);
    }
    uint64_t v99 = v177;
    uint64_t v101 = v179;
    uint64_t v100 = v180;
    uint64_t v102 = v187;
    v187((char *)v177, v179, v180);
    if (v62(v99, v100) != v76)
    {
      uint64_t v129 = v173;
      sub_24469CC28();
      uint64_t v130 = v174;
      v102(v174, v101, v100);
      swift_retain_n();
      uint64_t v131 = sub_24469CC48();
      os_log_type_t v132 = sub_24469D198();
      if (os_log_type_enabled(v131, v132))
      {
        uint64_t v133 = swift_slowAlloc();
        uint64_t v134 = swift_slowAlloc();
        v191[0] = v134;
        *(_DWORD *)uint64_t v133 = 134218242;
        sub_24469D098();
        sub_24469D068();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v135 = *(void *)(v182 + 16);
        swift_release();
        swift_release();
        uint64_t v190 = v135;
        sub_24469D218();
        swift_release();
        *(_WORD *)(v133 + 12) = 2082;
        sub_24469D098();
        sub_24469D068();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        sub_24468AEC8(&qword_268E9F400, MEMORY[0x263F10710]);
        uint64_t v136 = v174;
        uint64_t v100 = v180;
        uint64_t v137 = sub_24469D5A8();
        uint64_t v190 = sub_244628BF0(v137, v138, v191);
        sub_24469D218();
        swift_bridgeObjectRelease();
        uint64_t v139 = (void (*)(char *, uint64_t))v175;
        ((void (*)(char *, uint64_t))v175)(v136, v100);
        _os_log_impl(&dword_244604000, v131, v132, "[%llu] Unhandled paused substate: %{public}s", (uint8_t *)v133, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245695AF0](v134, -1, -1);
        MEMORY[0x245695AF0](v133, -1, -1);

        v185(v173, v186);
        v139(v179, v100);
        uint64_t v99 = v177;
      }
      else
      {

        swift_release();
        uint64_t v139 = (void (*)(char *, uint64_t))v175;
        ((void (*)(char *, uint64_t))v175)(v130, v100);
        swift_release();
        v185(v129, v186);
        v139(v101, v100);
      }
      v139((char *)v99, v100);
      swift_release();
      goto LABEL_73;
    }
    v169(v99, v100);
    uint64_t v188 = *v99;
    double v103 = *(double *)(v188 + 16);
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    uint64_t v104 = (void *)v182;
    v191[0] = v182;
    sub_24469C938();
    swift_release();
    uint64_t v105 = v104[10];
    uint64_t v106 = v104[11];
    uint64_t v107 = v104[12];
    uint64_t v108 = v104[13];
    uint64_t v109 = v104[14];
    uint64_t v110 = v104[15];
    uint64_t v112 = v104[16];
    uint64_t v111 = (void *)v104[17];
    sub_2446521AC(v105, v106, v107, v108, v109, v110, v112, v111);
    swift_release();
    if (v107)
    {
      id v113 = v111;
      sub_244687544(v105, v106, v107, v108, v109, v110, v112, v111);
      sub_244687FA8(v103);

      uint64_t v114 = v179;
      uint64_t v115 = v180;
    }
    else
    {
      uint64_t v153 = v170;
      sub_24469CC28();
      swift_retain_n();
      uint64_t v154 = sub_24469CC48();
      os_log_type_t v155 = sub_24469D178();
      if (os_log_type_enabled(v154, v155))
      {
        uint64_t v156 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v156 = 134217984;
        sub_24469D098();
        sub_24469D068();
        char isCurrentExecutor = swift_task_isCurrentExecutor();
        uint64_t v158 = v180;
        if ((isCurrentExecutor & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v159 = *(void *)(v182 + 16);
        swift_release();
        swift_release();
        v191[0] = v159;
        sub_24469D218();
        swift_release();
        _os_log_impl(&dword_244604000, v154, v155, "[%llu] Received AppState update before app catalog update for installation", v156, 0xCu);
        MEMORY[0x245695AF0](v156, -1, -1);
      }
      else
      {

        swift_release_n();
        uint64_t v158 = v180;
      }
      v185(v153, v186);
      uint64_t v114 = v179;
      uint64_t v115 = v158;
    }
    ((void (*)(char *, uint64_t))v175)(v114, v115);
    swift_release();
    goto LABEL_72;
  }
  if (v63 == *MEMORY[0x263F10708] || v63 == *MEMORY[0x263F106F0]) {
    goto LABEL_12;
  }
  if (v63 == *MEMORY[0x263F106F8])
  {
    os_log_type_t v185 = v60;
    uint64_t v181 = v24;
    uint64_t v188 = sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_getKeyPath();
    v191[0] = (uint64_t)v2;
    sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
    sub_24469C938();
    swift_release();
    uint64_t v117 = v2[10];
    uint64_t v116 = v2[11];
    uint64_t v118 = v2[12];
    uint64_t v119 = v2[13];
    uint64_t v120 = v2[14];
    uint64_t v121 = v2[15];
    uint64_t v122 = v2[16];
    uint64_t v123 = (void *)v2[17];
    sub_2446521AC(v117, v116, v118, v119, v120, v121, v122, v123);
    swift_release();
    if (v118)
    {
      id v73 = v123;
      sub_244687544(v117, v116, v118, v119, v120, v121, v122, v123);
      double v74 = -1.0;
      goto LABEL_16;
    }
    uint64_t v162 = (char *)v169;
    sub_24469CC28();
    swift_retain_n();
    int v163 = sub_24469CC48();
    os_log_type_t v164 = sub_24469D178();
    if (os_log_type_enabled(v163, v164))
    {
      uint64_t v165 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v165 = 134217984;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v166 = v2[2];
      swift_release();
      swift_release();
      v191[0] = v166;
      sub_24469D218();
      swift_release();
      _os_log_impl(&dword_244604000, v163, v164, "[%llu] Received AppState update before app catalog update for installation", v165, 0xCu);
      MEMORY[0x245695AF0](v165, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    v185(v162, v186);
  }
  else
  {
    uint64_t v175 = (char *)v56;
    uint64_t v140 = (uint64_t)v171;
    sub_24469CC28();
    uint64_t v141 = v172;
    v187(v172, (char *)v185, v57);
    swift_retain_n();
    uint64_t v142 = sub_24469CC48();
    os_log_type_t v143 = sub_24469D198();
    if (os_log_type_enabled(v142, v143))
    {
      os_log_type_t v185 = v60;
      uint64_t v180 = v57;
      uint64_t v181 = v24;
      uint64_t v144 = v2;
      uint64_t v145 = swift_slowAlloc();
      uint64_t v146 = swift_slowAlloc();
      v191[0] = v146;
      *(_DWORD *)uint64_t v145 = 134218242;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v147 = v144[2];
      swift_release();
      swift_release();
      uint64_t v190 = v147;
      sub_24469D218();
      swift_release();
      *(_WORD *)(v145 + 12) = 2082;
      sub_24469D098();
      sub_24469D068();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v148 = v172;
      uint64_t v149 = sub_24469CA58();
      unint64_t v151 = v150;
      swift_release();
      uint64_t v190 = sub_244628BF0(v149, v151, v191);
      sub_24469D218();
      swift_bridgeObjectRelease();
      int v152 = (void (*)(uint64_t *, uint64_t))v175;
      uint64_t v57 = v180;
      ((void (*)(char *, uint64_t))v175)(v148, v180);
      _os_log_impl(&dword_244604000, v142, v143, "[%llu] Unknown state: %{public}s", (uint8_t *)v145, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245695AF0](v146, -1, -1);
      MEMORY[0x245695AF0](v145, -1, -1);

      v185(v171, v186);
    }
    else
    {
      swift_release_n();
      uint64_t v160 = v141;
      uint64_t v161 = v140;
      int v152 = (void (*)(uint64_t *, uint64_t))v175;
      ((void (*)(char *, uint64_t))v175)(v160, v57);

      v60((char *)v161, v186);
    }
    v152(v184, v57);
  }
LABEL_73:
  swift_release();
}

BOOL AppLibrary.App.isInstalled.getter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C938();
  swift_release();
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  sub_24468725C(v1, v2, v3);
  swift_release();
  if (v3) {
    sub_2446872AC(v1, v2, v3);
  }
  swift_release();
  return v3 != 0;
}

BOOL AppLibrary.App.isInstalling.getter()
{
  uint64_t v1 = v0;
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C938();
  swift_release();
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v1[13];
  uint64_t v6 = v1[14];
  uint64_t v7 = v1[15];
  uint64_t v9 = v1[16];
  uint64_t v8 = (void *)v1[17];
  sub_2446521AC(v2, v3, v4, v5, v6, v7, v9, v8);
  swift_release();
  if (v4) {
    sub_244687544(v2, v3, v4, v5, v6, v7, v9, v8);
  }
  swift_release();
  return v4 != 0;
}

uint64_t AppLibrary.App.id.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t AppLibrary.App.Metadata.appleVersionID.getter()
{
  return *(void *)v0;
}

uint64_t AppLibrary.App.Metadata.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.App.Metadata.shortVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.App.Metadata.account.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

id AppLibrary.App.Installation.progress.getter()
{
  return *(id *)(v0 + 56);
}

uint64_t AppLibrary.App.installedMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C938();
  swift_release();
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_24468725C(v3, v4, v5);
  return swift_release();
}

double sub_244687118@<D0>(uint64_t a1@<X8>)
{
  AppLibrary.App.installedMetadata.getter((uint64_t *)v5);
  uint64_t v2 = v7;
  long long v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  double result = *(double *)&v6;
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = v2;
  return result;
}

double sub_244687164@<D0>(uint64_t a1@<X8>)
{
  AppLibrary.App.installedMetadata.getter((uint64_t *)v5);
  uint64_t v2 = v7;
  long long v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  double result = *(double *)&v6;
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = v2;
  return result;
}

uint64_t sub_2446871B0(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  v8[0] = *a1;
  v8[1] = v1;
  void v8[2] = v2;
  v8[3] = v3;
  v8[4] = v4;
  v8[5] = v5;
  v8[6] = v6;
  sub_24468725C(v8[0], v1, v2);
  return sub_244684E20((uint64_t)v8);
}

uint64_t type metadata accessor for AppLibrary.App()
{
  uint64_t result = qword_268E9F3A8;
  if (!qword_268E9F3A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24468725C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2446872AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2446872FC(uint64_t a1, void *a2)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v4 = a1 + 24;
  uint64_t v7 = *(void *)(v4 + 16);
  sub_24461EE74((uint64_t)a2, v4, &qword_268E9F3E8);
  sub_24468A748(a2, (void (*)(void, void, void, void, void, void, void))sub_24468725C);
  sub_2446872AC(v5, v6, v7);
  return swift_release();
}

uint64_t AppLibrary.App.installation.getter@<X0>(uint64_t *a1@<X8>)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C938();
  swift_release();
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[12];
  uint64_t v6 = v1[13];
  uint64_t v7 = v1[14];
  uint64_t v8 = v1[15];
  uint64_t v9 = v1[16];
  uint64_t v10 = (void *)v1[17];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = (uint64_t)v10;
  sub_2446521AC(v3, v4, v5, v6, v7, v8, v9, v10);
  return swift_release();
}

uint64_t sub_244687544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2446875A4(uint64_t a1, void *a2)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v3 = (void *)(a1 + 80);
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v12 = v3[5];
  uint64_t v9 = v3[6];
  uint64_t v10 = (void *)v3[7];
  sub_24461EE74((uint64_t)a2, (uint64_t)v3, &qword_268E9F3F8);
  sub_24468AFDC(a2, (void (*)(void, void, void, void, void, void, void, void))sub_2446521AC);
  sub_244687544(v4, v5, v6, v7, v8, v12, v9, v10);
  return swift_release();
}

uint64_t AppLibrary.App.installationError.getter@<X0>(uint64_t a1@<X8>)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C938();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError;
  swift_beginAccess();
  sub_24460BCA4(v3, a1, &qword_268E9E6E8);
  return swift_release();
}

uint64_t sub_244687800(uint64_t a1, uint64_t a2)
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v4 = a1 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError;
  swift_beginAccess();
  sub_24468AF74(a2, v4);
  swift_endAccess();
  return swift_release();
}

BOOL AppLibrary.App.isUpdating.getter()
{
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (AppLibrary.App.isInstalled.getter())
  {
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    BOOL v0 = AppLibrary.App.isInstalling.getter();
    swift_release();
  }
  else
  {
    BOOL v0 = 0;
  }
  swift_release();
  return v0;
}

uint64_t sub_2446879F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_24461EE74(a2, (uint64_t)v17, &qword_268E9F3E8);
  sub_24461EE74(a3, (uint64_t)v16, &qword_268E9F3F8);
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_OWORD *)(v5 + 104) = 0u;
  *(_OWORD *)(v5 + 120) = 0u;
  *(void *)(v5 + 136) = 0;
  uint64_t v8 = v5 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError;
  uint64_t v9 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_24469C968();
  *(void *)(v5 + 16) = a1;
  sub_24469D0A8();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath, v11);
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C928();
  sub_24468A748(v17, (void (*)(void, void, void, void, void, void, void))sub_2446872AC);
  swift_release();
  swift_release();
  sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v12 = swift_getKeyPath();
  MEMORY[0x270FA5388](v12, v13);
  sub_24469C928();
  sub_24468AFDC(v16, (void (*)(void, void, void, void, void, void, void, void))sub_244687544);
  swift_release();
  swift_release();
  sub_24460BD08(a4, &qword_268E9E6E8);
  return v5;
}

uint64_t sub_244687D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v5 = sub_24469CB98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469D0A8();
  uint64_t v27 = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  uint64_t v26 = sub_24469CB68();
  uint64_t v10 = sub_24469CB88();
  uint64_t v24 = v11;
  uint64_t v25 = v10;
  uint64_t v12 = sub_24469CB58();
  uint64_t v14 = v13;
  uint64_t v15 = sub_24469CB78();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v18 = sub_24469CB18();
  id v19 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
  id v20 = sub_244688CF4(v18);
  uint64_t result = swift_release();
  uint64_t v22 = v25;
  *a3 = v26;
  a3[1] = v22;
  a3[2] = v24;
  a3[3] = v12;
  a3[4] = v14;
  a3[5] = v15;
  a3[6] = v17;
  a3[7] = (uint64_t)v20;
  return result;
}

void sub_244687F20()
{
  sub_24469CBF8();
  id v0 = (id)sub_24469CBE8();
  sub_24469CBB8();
}

id sub_244687FA8(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24469CC68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v4, v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)MEMORY[0x270FA5388](v7, v10);
  uint64_t v13 = (char *)v23 - v12;
  double v14 = 4.50359963e15;
  if (a1 < 1.0) {
    double v14 = a1 * 4.50359963e15;
  }
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v15 = (uint64_t)v14;
  if (a1 == -1.0 || (uint64_t)objc_msgSend(v2, sel_completedUnitCount) <= v15)
  {
    id result = objc_msgSend(v2, sel_setCompletedUnitCount_, v15);
    if (a1 >= 0.6)
    {
      id result = objc_msgSend(v2, sel_isPausable);
      if (result)
      {
        sub_24469CC28();
        id v19 = v2;
        id v20 = sub_24469CC48();
        os_log_type_t v21 = sub_24469D178();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v22 = 134217984;
          v23[1] = *((char *)v19 + OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_id);
          sub_24469D218();

          _os_log_impl(&dword_244604000, v20, v21, "[%llu] No longer pausable nor cancelable", v22, 0xCu);
          MEMORY[0x245695AF0](v22, -1, -1);
        }
        else
        {

          id v20 = v19;
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
        [v19 setPausable:0];
        return [v19 setCancellable:0];
      }
    }
  }
  else
  {
    sub_24469CC38();
    uint64_t v16 = sub_24469CC48();
    os_log_type_t v17 = sub_24469D198();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_244604000, v16, v17, "Received progress update out of order", v18, 2u);
      MEMORY[0x245695AF0](v18, -1, -1);
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  return result;
}

void sub_2446882DC(int a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v5) = a1;
  uint64_t v6 = sub_24469CC68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24469CC28();
  uint64_t v11 = sub_24469CC48();
  os_log_type_t v12 = sub_24469D178();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    int v22 = v5;
    int v23 = a2;
    uint64_t v24 = v3;
    if ((_BYTE)v5)
    {
      if (v5 == 1) {
        uint64_t v15 = 0x646573756170;
      }
      else {
        uint64_t v15 = 0x64656C65636E6163;
      }
      if (v5 == 1) {
        unint64_t v5 = 0xE600000000000000;
      }
      else {
        unint64_t v5 = 0xE800000000000000;
      }
    }
    else
    {
      unint64_t v5 = 0xE700000000000000;
      uint64_t v15 = 0x676E696E6E7572;
    }
    uint64_t v25 = sub_244628BF0(v15, v5, &v26);
    sub_24469D218();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 1024;
    LOBYTE(a2) = v23;
    LODWORD(v25) = v23 & 1;
    sub_24469D218();
    _os_log_impl(&dword_244604000, v11, v12, "setState %s, sendingToDaemon: %{BOOL}d", (uint8_t *)v13, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x245695AF0](v14, -1, -1);
    MEMORY[0x245695AF0](v13, -1, -1);

    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v3 = v24;
    LOBYTE(v5) = v22;
  }
  else
  {

    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  MEMORY[0x270FA5388](v16, v17);
  *((unsigned char *)&v21 - 16) = v5;
  *((unsigned char *)&v21 - 15) = a2 & 1;
  *(&v21 - 1) = v3;
  uint64_t v19 = (uint64_t)&v18[4];
  id v20 = v18 + 8;
  os_unfair_lock_lock(v18 + 8);
  sub_24468A5E0(v19);
  os_unfair_lock_unlock(v20);
}

uint64_t sub_2446885B8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v56 = a4;
  uint64_t v51 = a3;
  uint64_t v55 = sub_24469CBA8();
  uint64_t v6 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55, v7);
  uint64_t v53 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24469CB98();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24469D0A8();
  uint64_t v52 = sub_24469D098();
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v54 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  uint64_t v50 = sub_24469CB68();
  uint64_t v15 = sub_24469CB88();
  uint64_t v48 = v16;
  uint64_t v49 = v15;
  uint64_t v17 = sub_24469CB58();
  uint64_t v46 = v18;
  uint64_t v47 = v17;
  uint64_t v19 = sub_24469CB78();
  uint64_t v44 = v20;
  uint64_t v45 = v19;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v57 = sub_24469D098();
  uint64_t v43 = v14;
  sub_24469D068();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_getKeyPath();
  uint64_t v58 = a2;
  sub_24468AEC8((unint64_t *)&qword_268E9E6F0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
  sub_24469C938();
  swift_release();
  uint64_t v21 = a2[10];
  uint64_t v22 = a2[11];
  uint64_t v23 = a2[12];
  uint64_t v24 = a2[13];
  uint64_t v26 = a2[14];
  uint64_t v25 = a2[15];
  uint64_t v27 = a2[16];
  id v28 = (id)a2[17];
  sub_2446521AC(v21, v22, v23, v24, v26, v25, v27, v28);
  swift_release();
  if (v23)
  {
    id v29 = v28;
    sub_244687544(v21, v22, v23, v24, v26, v25, v27, v28);
  }
  else
  {
    id v28 = 0;
  }
  uint64_t v31 = v54;
  uint64_t v30 = v55;
  uint64_t v32 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v51, v55);
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
  }
  else
  {
    sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v33 = sub_24469CB18();
    id v34 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
    id v28 = sub_244688CF4(v33);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
    swift_release();
  }
  uint64_t result = swift_release();
  uint64_t v36 = v56;
  uint64_t v37 = v49;
  uint64_t v39 = v47;
  uint64_t v38 = v48;
  uint64_t v41 = v45;
  uint64_t v40 = v46;
  uint64_t v42 = v44;
  *uint64_t v56 = v50;
  v36[1] = v37;
  v36[2] = v38;
  v36[3] = v39;
  v36[4] = v40;
  v36[5] = v41;
  v36[6] = v42;
  v36[7] = (uint64_t)v28;
  return result;
}

BOOL static AppLibrary.App.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t AppLibrary.App.hash(into:)()
{
  return sub_24469D6A8();
}

uint64_t AppLibrary.App.deinit()
{
  sub_2446872AC(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_244687544(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void **)(v0 + 136));
  sub_24460BD08(v0 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError, &qword_268E9E6E8);
  uint64_t v1 = v0 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
  uint64_t v2 = sub_24469C978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AppLibrary.App.__deallocating_deinit()
{
  sub_2446872AC(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_244687544(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void **)(v0 + 136));
  sub_24460BD08(v0 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError, &qword_268E9E6E8);
  uint64_t v1 = v0 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
  uint64_t v2 = sub_24469C978();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t AppLibrary.App.hashValue.getter()
{
  return sub_24469D6C8();
}

void sub_244688C0C(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

uint64_t sub_244688C1C()
{
  return sub_24469D6C8();
}

uint64_t sub_244688C64()
{
  return sub_24469D6A8();
}

uint64_t sub_244688C94()
{
  return sub_24469D6C8();
}

BOOL sub_244688CD8(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16);
}

id sub_244688CF4(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F420);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 32) = 0;
  *(unsigned char *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(void *)&v1[v4] = v5;
  *(void *)&v1[OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_id] = a1;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v8, sel_initWithParent_userInfo_, 0, 0);
  objc_msgSend(v6, sel_setTotalUnitCount_, 0x10000000000000);
  objc_msgSend(v6, sel_setPausable_, 1);
  objc_msgSend(v6, sel_setCancellable_, 1);
  sub_244687FA8(-1.0);

  return v6;
}

id sub_244688ED4(uint64_t a1, char a2, char a3, char *a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D708);
  id result = (id)MEMORY[0x270FA5388](v9 - 8, v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(unsigned char *)a1)
  {
    if (a2) {
      goto LABEL_10;
    }
LABEL_7:
    if ((a3 & 1) == 0) {
      return result;
    }
    goto LABEL_14;
  }
  if (*(unsigned char *)a1 != 1 || a2 == 1) {
    goto LABEL_7;
  }
LABEL_10:
  *(unsigned char *)a1 = a2;
  if (a3)
  {
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = a2;
    uint64_t v27 = *(void *)&a4[OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_id];
    uint64_t v16 = *(void *)(a1 + 8);
    if (v16) {
      sub_24469D128();
    }
    uint64_t v17 = sub_24469D0D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 1, 1, v17);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    uint64_t v19 = v27;
    v18[4] = v16;
    v18[5] = v19;
    v18[6] = sub_24468A614;
    v18[7] = v15;
    v18[8] = a4;
    swift_retain();
    swift_retain();
    uint64_t v20 = a4;
    uint64_t v21 = sub_2446925DC((uint64_t)v13, (uint64_t)&unk_268E9F3E0, (uint64_t)v18);
    swift_release();
    swift_release();
    *(void *)(a1 + 8) = v21;
  }
LABEL_14:
  if (a2)
  {
    if (a2 == 1)
    {
      uint64_t v25 = a4;
      uint64_t v22 = &selRef_pause;
      uint64_t v23 = (objc_super *)&v25;
    }
    else
    {
      v26.receiver = a4;
      uint64_t v22 = &selRef_cancel;
      uint64_t v23 = &v26;
    }
  }
  else
  {
    v24[0] = a4;
    uint64_t v22 = &selRef_resume;
    uint64_t v23 = (objc_super *)v24;
  }
  v23->super_class = (Class)ObjectType;
  return objc_msgSendSuper2(v23, *v22, v24[0]);
}

void sub_24468912C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    if (a6 == 1)
    {
      uint64_t v9 = (void *)sub_24469C8A8();
      uint64_t v15 = a4;
      uint64_t v16 = a5;
      uint64_t v11 = MEMORY[0x263EF8330];
      uint64_t v12 = 1107296256;
      uint64_t v13 = sub_2446826EC;
      uint64_t v14 = &block_descriptor_31_1;
      uint64_t v10 = _Block_copy(&v11);
      swift_retain();
      swift_release();
      objc_msgSend(a1, sel_pauseInstall_reply_, v9, v10);
    }
    else
    {
      uint64_t v9 = (void *)sub_24469C8A8();
      uint64_t v15 = a4;
      uint64_t v16 = a5;
      uint64_t v11 = MEMORY[0x263EF8330];
      uint64_t v12 = 1107296256;
      uint64_t v13 = sub_2446826EC;
      uint64_t v14 = &block_descriptor_12;
      uint64_t v10 = _Block_copy(&v11);
      swift_retain();
      swift_release();
      objc_msgSend(a1, sel_cancelInstall_reply_, v9, v10);
    }
  }
  else
  {
    uint64_t v9 = (void *)sub_24469C8A8();
    uint64_t v15 = a4;
    uint64_t v16 = a5;
    uint64_t v11 = MEMORY[0x263EF8330];
    uint64_t v12 = 1107296256;
    uint64_t v13 = sub_2446826EC;
    uint64_t v14 = &block_descriptor_28_0;
    uint64_t v10 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_resumeInstall_reply_, v9, v10);
  }
  _Block_release(v10);
}

uint64_t sub_244689310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  uint64_t v8[7] = a6;
  v8[5] = a4;
  uint64_t v9 = sub_24469CC68();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2446893D8, 0, 0);
}

uint64_t sub_2446893D8()
{
  if (v0[5])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[13] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_244689598;
    return MEMORY[0x270FA1FD0]();
  }
  else if (sub_24469D148())
  {
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    if (qword_26B0D10D0 != -1) {
      swift_once();
    }
    v0[3] = v0[6];
    v0[2] = v0 + 3;
    uint64_t v7 = &aFw[*(int *)aFw];
    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2446897D0;
    uint64_t v4 = v0[7];
    uint64_t v5 = v0[8];
    return ((uint64_t (*)(void *, uint64_t, uint64_t))v7)(v0 + 2, v4, v5);
  }
}

uint64_t sub_244689598()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_244689694, 0, 0);
}

uint64_t sub_244689694()
{
  if (sub_24469D148())
  {
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    if (qword_26B0D10D0 != -1) {
      swift_once();
    }
    v0[3] = v0[6];
    v0[2] = v0 + 3;
    id v6 = &aFw[*(int *)aFw];
    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_2446897D0;
    uint64_t v4 = v0[7];
    uint64_t v5 = v0[8];
    return ((uint64_t (*)(void *, uint64_t, uint64_t))v6)(v0 + 2, v4, v5);
  }
}

uint64_t sub_2446897D0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2446899AC;
  }
  else {
    uint64_t v2 = sub_2446898E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_2446898E4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = *(os_unfair_lock_s **)(v0[9] + OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_lock);
  uint64_t v3 = (uint64_t)&v2[4];
  uint64_t v4 = v2 + 8;
  os_unfair_lock_lock(v2 + 8);
  sub_244689C00(v3);
  if (v1)
  {
    os_unfair_lock_unlock(v4);
  }
  else
  {
    os_unfair_lock_unlock(v4);
    swift_task_dealloc();
    uint64_t v5 = (void (*)(void))v0[1];
    v5();
  }
}

uint64_t sub_2446899AC()
{
  uint64_t v1 = (void *)v0[15];
  sub_24469CC28();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24469CC48();
  os_log_type_t v5 = sub_24469D1A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[15];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138543362;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v10;
    sub_24469D218();
    void *v8 = v10;

    _os_log_impl(&dword_244604000, v4, v5, "Error updating progress: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D7C8);
    swift_arrayDestroy();
    MEMORY[0x245695AF0](v8, -1, -1);
    MEMORY[0x245695AF0](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[15];
  }
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  uint64_t v12 = *(os_unfair_lock_s **)(v0[9] + OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_lock);
  uint64_t v13 = (uint64_t)&v12[4];
  uint64_t v14 = v12 + 8;
  os_unfair_lock_lock(v12 + 8);
  sub_244689C00(v13);
  os_unfair_lock_unlock(v14);
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_244689C00(uint64_t a1)
{
  uint64_t result = sub_24469D148();
  if ((result & 1) == 0)
  {
    uint64_t result = swift_release();
    *(void *)(a1 + 8) = 0;
  }
  return result;
}

id sub_244689C70()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s14MarketplaceKit10AppLibraryC0C0C8MetadataV2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v8 = a2[6];
  if (a1[1] == a2[1] && a1[2] == a2[2] || (v10 = sub_24469D5B8(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_24469D5B8(), uint64_t result = 0, (v12 & 1) != 0))
    {
      if (v5)
      {
        if (v8 && (v3 == v9 && v5 == v8 || (sub_24469D5B8() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v8)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_244689DC4()
{
  return MEMORY[0x263F8E980];
}

uint64_t sub_244689DD0()
{
  return sub_24468AEC8(&qword_268E9F3A0, (void (*)(uint64_t))type metadata accessor for AppLibrary.App);
}

uint64_t sub_244689E28()
{
  return type metadata accessor for AppLibrary.App();
}

void sub_244689E30()
{
  sub_244689F38();
  if (v0 <= 0x3F)
  {
    sub_24469C978();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for AppLibrary.App(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AppLibrary.App);
}

void sub_244689F38()
{
  if (!qword_268E9F3B8)
  {
    type metadata accessor for MarketplaceKitError();
    unint64_t v0 = sub_24469D208();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268E9F3B8);
    }
  }
}

uint64_t _s3AppC8MetadataVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s3AppC8MetadataVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s3AppC8MetadataVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s3AppC8MetadataVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s3AppC8MetadataVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s3AppC8MetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.App.Metadata()
{
  return &type metadata for AppLibrary.App.Metadata;
}

void _s3AppC12InstallationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 56);
}

uint64_t _s3AppC12InstallationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *_s3AppC12InstallationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[7];
  uint64_t v5 = (void *)a1[7];
  a1[7] = v4;
  id v6 = v4;

  return a1;
}

uint64_t _s3AppC12InstallationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t _s3AppC12InstallationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s3AppC12InstallationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.App.Installation()
{
  return &type metadata for AppLibrary.App.Installation;
}

uint64_t type metadata accessor for InstallationNSProgress()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for InstallationNSProgress.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24468A550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallationNSProgress.State()
{
  return &type metadata for InstallationNSProgress.State;
}

unint64_t sub_24468A58C()
{
  unint64_t result = qword_268E9F3D0;
  if (!qword_268E9F3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268E9F3D0);
  }
  return result;
}

id sub_24468A5E0(uint64_t a1)
{
  return sub_244688ED4(a1, *(unsigned char *)(v1 + 16), *(unsigned char *)(v1 + 17), *(char **)(v1 + 24));
}

uint64_t sub_24468A604()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

void sub_24468A614(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24468912C(a1, a2, a3, a4, a5, *(unsigned char *)(v5 + 16));
}

uint64_t sub_24468A61C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24468A66C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_24460BAB0;
  return sub_244689310(a1, v4, v5, v6, v7, v8, v9, v10);
}

void *sub_24468A748(void *a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_24468A788(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v81 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24469CB98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v5, v7);
  id v73 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8, v10);
  uint64_t v72 = (char *)&v68 - v12;
  MEMORY[0x270FA5388](v11, v13);
  double v74 = (char *)&v68 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F3F0);
  uint64_t v17 = MEMORY[0x270FA5388](v15 - 8, v16);
  uint64_t v78 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17, v19);
  uint64_t v82 = (uint64_t)&v68 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20, v22);
  uint64_t v25 = (char *)&v68 - v24;
  MEMORY[0x270FA5388](v23, v26);
  id v28 = (char *)&v68 - v27;
  uint64_t v80 = sub_24469CB18();
  sub_24469CB38();
  uint64_t v75 = v28;
  sub_24460BCA4((uint64_t)v28, (uint64_t)v25, &qword_268E9F3F0);
  uint64_t v79 = v6;
  id v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v77 = v6 + 48;
  int v76 = v29;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  if (v29((uint64_t)v25, 1, v5) != 1)
  {
    uint64_t v71 = a1;
    uint64_t v37 = v79;
    uint64_t v38 = v74;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v74, v25, v5);
    sub_24469D0A8();
    uint64_t v70 = sub_24469D098();
    sub_24469D068();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v39 = v72;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v72, v38, v5);
    uint64_t v69 = sub_24469CB68();
    uint64_t v31 = sub_24469CB88();
    uint64_t v40 = v37;
    uint64_t v32 = v41;
    uint64_t v33 = sub_24469CB58();
    uint64_t v34 = v42;
    uint64_t v35 = sub_24469CB78();
    uint64_t v36 = v43;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
    uint64_t v45 = v39;
    uint64_t v30 = v69;
    v44(v45, v5);
    swift_release();
    v44(v74, v5);
    a1 = v71;
  }
  sub_24460BD08((uint64_t)v75, &qword_268E9F3F0);
  v88[0] = v30;
  v88[1] = v31;
  v88[2] = v32;
  v88[3] = v33;
  _OWORD v88[4] = v34;
  v88[5] = v35;
  v88[6] = v36;
  uint64_t v46 = v82;
  sub_24469CB48();
  uint64_t v47 = v78;
  sub_24460BCA4(v46, v78, &qword_268E9F3F0);
  if (v76(v47, 1, v5) == 1)
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    long long v86 = 0u;
    long long v87 = 0u;
    long long v84 = 0u;
    long long v85 = 0u;
  }
  else
  {
    uint64_t v56 = v79;
    uint64_t v57 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v73, v47, v5);
    sub_244687D44(v57, a1, (uint64_t *)&v84);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v5);
    uint64_t v54 = *((void *)&v84 + 1);
    uint64_t v55 = v84;
    uint64_t v52 = *((void *)&v85 + 1);
    uint64_t v53 = v85;
    uint64_t v50 = *((void *)&v86 + 1);
    uint64_t v51 = v86;
    uint64_t v48 = *((void *)&v87 + 1);
    uint64_t v49 = v87;
  }
  sub_24460BD08(v82, &qword_268E9F3F0);
  v83[0] = v55;
  v83[1] = v54;
  v83[2] = v53;
  v83[3] = v52;
  v83[4] = v51;
  v83[5] = v50;
  v83[6] = v49;
  v83[7] = v48;
  uint64_t v58 = sub_24469CB28();
  if (v59 >> 60 == 15)
  {
    uint64_t v60 = type metadata accessor for MarketplaceKitError();
    uint64_t v61 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v81, 1, 1, v60);
  }
  else
  {
    uint64_t v62 = v58;
    unint64_t v63 = v59;
    sub_24469C818();
    swift_allocObject();
    sub_24469C808();
    uint64_t v64 = type metadata accessor for MarketplaceKitError();
    sub_24468AEC8(&qword_268E9DE90, (void (*)(uint64_t))type metadata accessor for MarketplaceKitError);
    uint64_t v61 = (uint64_t)v81;
    sub_24469C7F8();
    sub_24463EB20(v62, v63);
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v61, 0, 1, v64);
  }
  type metadata accessor for AppLibrary.App();
  uint64_t v65 = swift_allocObject();
  sub_2446879F0(v80, (uint64_t)v88, (uint64_t)v83, v61);
  uint64_t v66 = sub_24469CBA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(a1, v66);
  return v65;
}

uint64_t sub_24468AEC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24468AF10()
{
  swift_release();
  sub_24468AF54(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_24468AF54(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24468AF64()
{
}

uint64_t sub_24468AF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E6E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void *sub_24468AFDC(void *a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_24468B030()
{
  return sub_24468249C();
}

uint64_t LicenseResolutionRequest.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_244636F3C(v1, a1);
}

uint64_t LicenseResolutionRequest.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24468B05C(a1, a2);
}

uint64_t sub_24468B05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LicenseResolutionContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t LicenseResolutionRequest.run()()
{
  *(void *)(v1 + 32) = v0;
  type metadata accessor for LaunchAngelXPCRequest(0);
  *(void *)(v1 + 40) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24468B150, 0, 0);
}

uint64_t sub_24468B150()
{
  sub_244636F3C(v0[4], v0[5]);
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24468B214;
  uint64_t v2 = v0[5];
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v2);
}

uint64_t sub_24468B214()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24468B3A4;
  }
  else
  {
    sub_244626698(*(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
    uint64_t v3 = sub_24468B334;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24468B334()
{
  sub_2446362E8(*(void *)(v0 + 40));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24468B3A4()
{
  sub_2446362E8(*(void *)(v0 + 40));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t *initializeBufferWithCopyOfBuffer for LicenseResolutionRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for LicenseResolutionContext();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24469C888();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for LicenseResolutionRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  uint64_t v3 = sub_24469C888();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *initializeWithCopy for LicenseResolutionRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24469C888();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for LicenseResolutionRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for LicenseResolutionRequest(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for LicenseResolutionRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24469C888();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LicenseResolutionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24468B7F4);
}

uint64_t sub_24468B7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LicenseResolutionContext();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LicenseResolutionRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24468B874);
}

uint64_t sub_24468B874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LicenseResolutionContext();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for LicenseResolutionRequest()
{
  uint64_t result = qword_268E9F430;
  if (!qword_268E9F430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24468B930()
{
  uint64_t result = type metadata accessor for LicenseResolutionContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t PollForUpdatesRequest.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PollForUpdatesRequest.shouldStartUpdates.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

MarketplaceKit::PollForUpdatesRequest __swiftcall PollForUpdatesRequest.init(domain:shouldStartUpdates:)(Swift::String_optional domain, Swift::Bool shouldStartUpdates)
{
  *(Swift::String_optional *)uint64_t v2 = domain;
  *(unsigned char *)(v2 + 16) = shouldStartUpdates;
  result.field2446B3040 = domain;
  result.field2446B304C = shouldStartUpdates;
  return result;
}

uint64_t PollForUpdatesRequest.run()()
{
  *(_OWORD *)(v1 + 48) = *(_OWORD *)v0;
  *(unsigned char *)(v1 + 33) = *(unsigned char *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_24468BA2C, 0, 0);
}

uint64_t sub_24468BA2C()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 33);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_24461E040();
  sub_24461E094();
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 40) = v0 + 16;
  *(unsigned char *)(v0 + 32) = v1;
  uint64_t v6 = (char *)&dword_268E9D988 + dword_268E9D988;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_244637C9C;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v6)(v0 + 40, sub_24468BB68, 0);
}

void sub_24468BB68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  id v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_13;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_requestUpdatesPoll_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t sub_24468BC44()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_24468BC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24468C300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24468BCA8(uint64_t a1)
{
  unint64_t v2 = sub_24468C090();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468BCE4(uint64_t a1)
{
  unint64_t v2 = sub_24468C090();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PollForUpdatesRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F448);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24468C090();
  sub_24469D728();
  char v13 = 0;
  uint64_t v8 = v10[1];
  sub_24469D4F8();
  if (!v8)
  {
    char v12 = 1;
    sub_24469D558();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t PollForUpdatesRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F458);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24468C090();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  uint64_t v10 = sub_24469D428();
  uint64_t v12 = v11;
  char v16 = 1;
  swift_bridgeObjectRetain();
  char v13 = sub_24469D488();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v13 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24468C060@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PollForUpdatesRequest.init(from:)(a1, a2);
}

uint64_t sub_24468C078(void *a1)
{
  return PollForUpdatesRequest.encode(to:)(a1);
}

unint64_t sub_24468C090()
{
  unint64_t result = qword_268E9F450;
  if (!qword_268E9F450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F450);
  }
  return result;
}

ValueMetadata *type metadata accessor for PollForUpdatesRequest()
{
  return &type metadata for PollForUpdatesRequest;
}

unsigned char *storeEnumTagSinglePayload for PollForUpdatesRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24468C1C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PollForUpdatesRequest.CodingKeys()
{
  return &type metadata for PollForUpdatesRequest.CodingKeys;
}

unint64_t sub_24468C1FC()
{
  unint64_t result = qword_268E9F460;
  if (!qword_268E9F460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F460);
  }
  return result;
}

unint64_t sub_24468C254()
{
  unint64_t result = qword_268E9F468;
  if (!qword_268E9F468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F468);
  }
  return result;
}

unint64_t sub_24468C2AC()
{
  unint64_t result = qword_268E9F470;
  if (!qword_268E9F470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F470);
  }
  return result;
}

uint64_t sub_24468C300(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002446AB690)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24468C3E8()
{
  uint64_t v0 = sub_24469C8F8();
  MEMORY[0x270FA5388](v0 - 8, v1);
  uint64_t v2 = sub_24469C848();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  char v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_24469CF68();
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v9 = sub_24469CF48();
  MEMORY[0x270FA5388](v9 - 8, v10);
  sub_24469CF38();
  sub_24469CF28();
  sub_24469CF18();
  sub_24469CF28();
  sub_24469CF58();
  *char v6 = type metadata accessor for DefaultMarketplaceViewModel(0);
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F06D30], v2);
  sub_24469C8E8();
  return sub_24469C868();
}

uint64_t SecureButtonActionRequest.Action.stringValue.getter()
{
  uint64_t result = 0x6867696C66657250;
  switch((*(void *)(v0 + 8) >> 60) & 3)
  {
    case 1:
      uint64_t v2 = 0x68636E75614CLL;
      goto LABEL_4;
    case 2:
    case 3:
      return result;
    default:
      uint64_t v2 = 0x6574656C6544;
LABEL_4:
      uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL | 0x2D20000000000000;
      sub_24469D5A8();
      sub_24469CFE8();
      swift_bridgeObjectRelease();
      uint64_t result = v3;
      break;
  }
  return result;
}

uint64_t sub_24468C714()
{
  uint64_t result = 0x6574656C6564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x68636E75616CLL;
      break;
    case 2:
    case 3:
      uint64_t result = 0x6867696C66657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24468C798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2446921B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24468C7C0(uint64_t a1)
{
  unint64_t v2 = sub_24468CF80();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468C7FC(uint64_t a1)
{
  unint64_t v2 = sub_24468CF80();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24468C838(uint64_t a1)
{
  unint64_t v2 = sub_24468D0D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468C874(uint64_t a1)
{
  unint64_t v2 = sub_24468D0D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24468C8B0(uint64_t a1)
{
  unint64_t v2 = sub_24468D07C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468C8EC(uint64_t a1)
{
  unint64_t v2 = sub_24468D07C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24468C928(uint64_t a1)
{
  unint64_t v2 = sub_24468CFD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468C964(uint64_t a1)
{
  unint64_t v2 = sub_24468CFD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24468C9A0(uint64_t a1)
{
  unint64_t v2 = sub_24468D028();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468C9DC(uint64_t a1)
{
  unint64_t v2 = sub_24468D028();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SecureButtonActionRequest.Action.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F478);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F480);
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v37 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F488);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F490);
  uint64_t v34 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v14);
  char v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F498);
  uint64_t v43 = *(void *)(v17 - 8);
  uint64_t v44 = v17;
  MEMORY[0x270FA5388](v17, v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1;
  unint64_t v24 = v1[1];
  __swift_project_boxed_opaque_existential_1(v23, v22);
  sub_24468CF80();
  sub_24469D728();
  switch((v24 >> 60) & 3)
  {
    case 1uLL:
      LOBYTE(v45) = 1;
      sub_24468D07C();
      uint64_t v31 = v44;
      sub_24469D4E8();
      uint64_t v32 = v36;
      sub_24469D588();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v32);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v31);
      break;
    case 2uLL:
      LOBYTE(v45) = 2;
      sub_24460BBA4(v21, v24 & 0xCFFFFFFFFFFFFFFFLL);
      sub_24468D028();
      uint64_t v27 = v37;
      uint64_t v28 = v44;
      sub_24469D4E8();
      uint64_t v45 = v21;
      unint64_t v46 = v24 & 0xCFFFFFFFFFFFFFFFLL;
      sub_24463EA78();
      uint64_t v29 = v39;
      sub_24469D568();
      uint64_t v30 = v38;
      goto LABEL_5;
    case 3uLL:
      LOBYTE(v45) = 3;
      sub_24460BBA4(v21, v24 & 0xCFFFFFFFFFFFFFFFLL);
      sub_24468CFD4();
      uint64_t v27 = v40;
      uint64_t v28 = v44;
      sub_24469D4E8();
      uint64_t v45 = v21;
      unint64_t v46 = v24 & 0xCFFFFFFFFFFFFFFFLL;
      sub_24463EA78();
      uint64_t v29 = v42;
      sub_24469D568();
      uint64_t v30 = v41;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v28);
      uint64_t result = sub_24461DF3C(v21, v24);
      break;
    default:
      LOBYTE(v45) = 0;
      sub_24468D0D0();
      uint64_t v25 = v44;
      sub_24469D4E8();
      sub_24469D588();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v13);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v25);
      break;
  }
  return result;
}

unint64_t sub_24468CF80()
{
  unint64_t result = qword_268E9F4A0;
  if (!qword_268E9F4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F4A0);
  }
  return result;
}

unint64_t sub_24468CFD4()
{
  unint64_t result = qword_268E9F4A8;
  if (!qword_268E9F4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F4A8);
  }
  return result;
}

unint64_t sub_24468D028()
{
  unint64_t result = qword_268E9F4B0;
  if (!qword_268E9F4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F4B0);
  }
  return result;
}

unint64_t sub_24468D07C()
{
  unint64_t result = qword_268E9F4B8;
  if (!qword_268E9F4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F4B8);
  }
  return result;
}

unint64_t sub_24468D0D0()
{
  unint64_t result = qword_268E9F4C0;
  if (!qword_268E9F4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F4C0);
  }
  return result;
}

uint64_t SecureButtonActionRequest.Action.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F4C8);
  uint64_t v50 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48, v3);
  uint64_t v53 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F4D0);
  uint64_t v49 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47, v5);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F4D8);
  uint64_t v46 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51, v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F4E0);
  uint64_t v45 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F4E8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_24468CF80();
  uint64_t v20 = v58;
  sub_24469D708();
  if (v20) {
    goto LABEL_6;
  }
  uint64_t v42 = v10;
  uint64_t v43 = v13;
  uint64_t v44 = v9;
  uint64_t v22 = v51;
  uint64_t v21 = v52;
  uint64_t v23 = v53;
  unint64_t v24 = v54;
  uint64_t v58 = v15;
  uint64_t v25 = sub_24469D4C8();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v31 = sub_24469D358();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *uint64_t v33 = &type metadata for SecureButtonActionRequest.Action;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v18, v14);
LABEL_6:
    uint64_t v29 = (uint64_t)v55;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  switch(*(unsigned char *)(v25 + 32))
  {
    case 1:
      LOBYTE(v56) = 1;
      sub_24468D07C();
      uint64_t v35 = v44;
      sub_24469D408();
      uint64_t v28 = sub_24469D4B8();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v18, v14);
      uint64_t v29 = (uint64_t)v55;
      uint64_t v30 = 0x1000000000000000;
      break;
    case 2:
      LOBYTE(v56) = 2;
      sub_24468D028();
      uint64_t v36 = v21;
      sub_24469D408();
      sub_24463EACC();
      uint64_t v37 = v47;
      sub_24469D498();
      uint64_t v38 = v58;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v14);
      uint64_t v28 = v56;
      uint64_t v30 = v57 | 0x2000000000000000;
      goto LABEL_11;
    case 3:
      LOBYTE(v56) = 3;
      sub_24468CFD4();
      uint64_t v39 = v23;
      sub_24469D408();
      sub_24463EACC();
      uint64_t v40 = v48;
      sub_24469D498();
      uint64_t v41 = v58;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v14);
      uint64_t v28 = v56;
      uint64_t v30 = v57 | 0x3000000000000000;
LABEL_11:
      uint64_t v29 = (uint64_t)v55;
      break;
    default:
      LOBYTE(v56) = 0;
      sub_24468D0D0();
      uint64_t v26 = v43;
      sub_24469D408();
      uint64_t v27 = v42;
      uint64_t v28 = sub_24469D4B8();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v18, v14);
      uint64_t v29 = (uint64_t)v55;
      uint64_t v30 = 0;
      break;
  }
  uint64_t *v24 = v28;
  v24[1] = v30;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_24468D8AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SecureButtonActionRequest.Action.init(from:)(a1, a2);
}

uint64_t sub_24468D8C4(void *a1)
{
  return SecureButtonActionRequest.Action.encode(to:)(a1);
}

uint64_t SecureButtonActionRequest.action.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_24461DF2C(v2, v3);
}

id SecureButtonActionRequest.authenticationMessage.getter()
{
  return *(id *)(v0 + 16);
}

__n128 SecureButtonActionRequest.init(action:authenticationMessage:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = a2;
  return result;
}

uint64_t SecureButtonActionRequest.run()(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)v1;
  *(void *)(v2 + 72) = *(void *)(v1 + 16);
  return MEMORY[0x270FA2498](sub_24468D930, 0, 0);
}

uint64_t sub_24468D930()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = (void *)v0[9];
  uint64_t v3 = v0[7];
  v0[2] = v3;
  v0[3] = v1;
  v0[4] = v2;
  v0[5] = v0 + 2;
  sub_24461DF2C(v3, v1);
  uint64_t v8 = &aTmw[*(int *)aTmw];
  id v4 = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24468DA60;
  uint64_t v6 = v0[6];
  return ((uint64_t (*)(uint64_t, void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v8)(v6, v0 + 5, sub_24468DC14, 0);
}

uint64_t sub_24468DA60()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24468DBA8, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[4];
    sub_24461DF3C(v2[2], v2[3]);

    id v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_24468DBA8()
{
  uint64_t v1 = (void *)v0[4];
  sub_24461DF3C(v0[2], v0[3]);

  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void sub_24468DC14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_14;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleSecureButtonActionRequest_reply_, v8, v9);
  _Block_release(v9);
}

uint64_t sub_24468DCF0()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0x6E6F69746361;
  }
}

uint64_t sub_24468DD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244692388(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24468DD54(uint64_t a1)
{
  unint64_t v2 = sub_24468FC64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468DD90(uint64_t a1)
{
  unint64_t v2 = sub_24468FC64();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SecureButtonActionRequest.encode(to:)(void *a1)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F4F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)v1;
  unint64_t v8 = *(void *)(v1 + 8);
  v19[0] = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24468FC64();
  sub_24469D728();
  id v21 = v9;
  unint64_t v22 = v8;
  char v20 = 0;
  sub_24468FCB8();
  uint64_t v10 = v19[1];
  sub_24469D568();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  uint64_t v12 = self;
  id v21 = 0;
  id v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v19[0], 1, &v21);
  id v14 = v21;
  if (!v13)
  {
    uint64_t v18 = v14;
    sub_24469C838();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  uint64_t v15 = (void *)sub_24469C8B8();
  unint64_t v17 = v16;

  id v21 = v15;
  unint64_t v22 = v17;
  char v20 = 1;
  sub_24463EA78();
  sub_24469D568();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return sub_24460B97C((uint64_t)v15, v17);
}

void SecureButtonActionRequest.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F510);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24468FC64();
  sub_24469D708();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v22 = 0;
    sub_24468FD0C();
    sub_24469D498();
    uint64_t v10 = v20;
    uint64_t v11 = v21;
    char v22 = 1;
    sub_24461DF2C(v20, v21);
    sub_24463EACC();
    sub_24469D498();
    uint64_t v12 = v21;
    uint64_t v19 = v20;
    uint64_t v18 = sub_24468FD60(0, &qword_268E9F520);
    sub_24468FD60(0, &qword_268E9F528);
    unint64_t v17 = v12;
    uint64_t v13 = sub_24469D1B8();
    id v14 = (void *)v13;
    if (v13)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      sub_24460B97C(v19, v17);
      sub_24461DF2C(v10, v11);
      id v15 = v14;
      sub_24461DF3C(v10, v11);
      *a2 = v10;
      a2[1] = v11;
      a2[2] = (uint64_t)v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      sub_24461DF3C(v10, v11);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_24468E314(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_24468E32C(void *a1)
{
  return SecureButtonActionRequest.encode(to:)(a1);
}

uint64_t SecureButtonActionResponse.ResponseType.stringValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24469C8D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24468FDBC(v1, (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return 1701736270;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_24469D318();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000018;
    uint64_t v13 = "Confirm install batch - ";
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_24469D318();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000012;
    uint64_t v13 = "Confirm install - ";
  }
  unint64_t v16 = v12;
  unint64_t v17 = (unint64_t)(v13 - 32) | 0x8000000000000000;
  sub_24468FEC8(&qword_268E9F530, MEMORY[0x263F07508]);
  sub_24469D5A8();
  sub_24469CFE8();
  swift_bridgeObjectRelease();
  unint64_t v14 = v16;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v14;
}

uint64_t sub_24468E59C()
{
  unint64_t v1 = 0x496D7269666E6F63;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701736302;
  }
}

uint64_t sub_24468E600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244692470(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24468E628(uint64_t a1)
{
  unint64_t v2 = sub_24468FE20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468E664(uint64_t a1)
{
  unint64_t v2 = sub_24468FE20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24468E6A0(uint64_t a1)
{
  unint64_t v2 = sub_24468FE74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468E6DC(uint64_t a1)
{
  unint64_t v2 = sub_24468FE74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24468E718(uint64_t a1)
{
  unint64_t v2 = sub_24468FF10();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468E754(uint64_t a1)
{
  unint64_t v2 = sub_24468FF10();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24468E790(uint64_t a1)
{
  unint64_t v2 = sub_24468FF64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468E7CC(uint64_t a1)
{
  unint64_t v2 = sub_24468FF64();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SecureButtonActionResponse.ResponseType.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F538);
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v46 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F540);
  uint64_t v42 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45, v5);
  uint64_t v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24469C8D8();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7, v8);
  uint64_t v43 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F548);
  uint64_t v41 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v15);
  unint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x270FA5388](v18, v19);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F550);
  uint64_t v52 = *(void *)(v22 - 8);
  uint64_t v53 = v22;
  MEMORY[0x270FA5388](v22, v23);
  uint64_t v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24468FE20();
  sub_24469D728();
  sub_24468FDBC(v51, (uint64_t)v21);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      char v55 = 0;
      sub_24468FF64();
      uint64_t v39 = v53;
      sub_24469D4E8();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v39);
    }
    uint64_t v27 = v49;
    uint64_t v28 = v43;
    uint64_t v29 = v21;
    uint64_t v30 = v50;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v43, v29, v50);
    char v57 = 2;
    sub_24468FE74();
    uint64_t v31 = v46;
    uint64_t v32 = v53;
    sub_24469D4E8();
    sub_24468FEC8(&qword_268E9E930, MEMORY[0x263F07508]);
    uint64_t v33 = v48;
    uint64_t v34 = v54;
    sub_24469D568();
    if (!v34)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v33);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v30);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v32);
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v33);
    uint64_t v13 = v28;
  }
  else
  {
    uint64_t v35 = v42;
    uint64_t v27 = v49;
    uint64_t v36 = v21;
    uint64_t v30 = v50;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v13, v36, v50);
    char v56 = 1;
    sub_24468FF10();
    uint64_t v37 = v44;
    uint64_t v32 = v53;
    sub_24469D4E8();
    sub_24468FEC8(&qword_268E9E930, MEMORY[0x263F07508]);
    uint64_t v38 = v45;
    sub_24469D568();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v32);
}

uint64_t SecureButtonActionResponse.ResponseType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F578);
  uint64_t v59 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56, v3);
  uint64_t v64 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F580);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  uint64_t v58 = v6;
  MEMORY[0x270FA5388](v5, v7);
  unint64_t v63 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F588);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v62 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F590);
  uint64_t v61 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  uint64_t v18 = MEMORY[0x270FA5388](v16, v17);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v18, v21);
  uint64_t v24 = (char *)&v51 - v23;
  MEMORY[0x270FA5388](v22, v25);
  uint64_t v27 = (char *)&v51 - v26;
  uint64_t v28 = a1[3];
  uint64_t v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_24468FE20();
  uint64_t v29 = (uint64_t)v66;
  sub_24469D708();
  if (v29) {
    goto LABEL_9;
  }
  uint64_t v52 = v20;
  uint64_t v53 = v24;
  uint64_t v31 = v62;
  uint64_t v30 = v63;
  uint64_t v32 = v64;
  uint64_t v66 = v27;
  uint64_t v33 = (char *)v16;
  uint64_t v34 = sub_24469D4C8();
  uint64_t v35 = (char *)v34;
  if (*(void *)(v34 + 16) != 1)
  {
    uint64_t v43 = sub_24469D358();
    swift_allocError();
    uint64_t v45 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    *uint64_t v45 = v33;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, *MEMORY[0x263F8DCB0], v43);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v12);
LABEL_9:
    uint64_t v41 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_1(v41);
  }
  if (*(unsigned char *)(v34 + 32))
  {
    if (*(unsigned char *)(v34 + 32) == 1)
    {
      char v68 = 1;
      sub_24468FF10();
      uint64_t v36 = v30;
      sub_24469D408();
      sub_24469C8D8();
      sub_24468FEC8(&qword_268E9E9A0, MEMORY[0x263F07508]);
      uint64_t v37 = v12;
      uint64_t v38 = (uint64_t)v53;
      uint64_t v39 = v36;
      uint64_t v40 = v57;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v37);
      uint64_t v41 = (uint64_t)v65;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = v38;
    }
    else
    {
      char v69 = 2;
      sub_24468FE74();
      sub_24469D408();
      uint64_t v62 = v33;
      sub_24469C8D8();
      unint64_t v63 = v35;
      sub_24468FEC8(&qword_268E9E9A0, MEMORY[0x263F07508]);
      uint64_t v48 = (uint64_t)v52;
      uint64_t v49 = v12;
      uint64_t v50 = v56;
      sub_24469D498();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v49);
      uint64_t v41 = (uint64_t)v65;
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = v48;
    }
    uint64_t v46 = (uint64_t)v66;
    sub_24469002C(v42, (uint64_t)v66, type metadata accessor for SecureButtonActionResponse.ResponseType);
  }
  else
  {
    char v67 = 0;
    sub_24468FF64();
    sub_24469D408();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v55);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v15, v12);
    uint64_t v46 = (uint64_t)v66;
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = (uint64_t)v65;
  }
  sub_24469002C(v46, v60, type metadata accessor for SecureButtonActionResponse.ResponseType);
  return __swift_destroy_boxed_opaque_existential_1(v41);
}

uint64_t sub_24468F580@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureButtonActionResponse.ResponseType.init(from:)(a1, a2);
}

uint64_t sub_24468F598(void *a1)
{
  return SecureButtonActionResponse.ResponseType.encode(to:)(a1);
}

uint64_t SecureButtonActionResponse.type.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24468FDBC(v1, a1);
}

uint64_t SecureButtonActionResponse.init(type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24469002C(a1, a2, type metadata accessor for SecureButtonActionResponse.ResponseType);
}

uint64_t sub_24468F5EC()
{
  return 1701869940;
}

uint64_t sub_24468F5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24469D5B8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24468F684(uint64_t a1)
{
  unint64_t v2 = sub_24468FFB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24468F6C0(uint64_t a1)
{
  unint64_t v2 = sub_24468FFB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SecureButtonActionResponse.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F598);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24468FFB8();
  sub_24469D728();
  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  sub_24468FEC8(&qword_268E9F5A8, (void (*)(uint64_t))type metadata accessor for SecureButtonActionResponse.ResponseType);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t SecureButtonActionResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F5B0);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SecureButtonActionResponse(0);
  MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24468FFB8();
  sub_24469D708();
  if (!v2)
  {
    sub_24468FEC8(&qword_268E9F5B8, (void (*)(uint64_t))type metadata accessor for SecureButtonActionResponse.ResponseType);
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_24469002C(v18, (uint64_t)v14, type metadata accessor for SecureButtonActionResponse.ResponseType);
    sub_24469002C((uint64_t)v14, v16, type metadata accessor for SecureButtonActionResponse);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24468FAD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureButtonActionResponse.init(from:)(a1, a2);
}

uint64_t sub_24468FAF0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F598);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24468FFB8();
  sub_24469D728();
  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  sub_24468FEC8(&qword_268E9F5A8, (void (*)(uint64_t))type metadata accessor for SecureButtonActionResponse.ResponseType);
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_24468FC64()
{
  unint64_t result = qword_268E9F500;
  if (!qword_268E9F500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F500);
  }
  return result;
}

unint64_t sub_24468FCB8()
{
  unint64_t result = qword_268E9F508;
  if (!qword_268E9F508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F508);
  }
  return result;
}

unint64_t sub_24468FD0C()
{
  unint64_t result = qword_268E9F518;
  if (!qword_268E9F518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F518);
  }
  return result;
}

uint64_t sub_24468FD60(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonActionResponse.ResponseType(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9F5D0);
}

uint64_t sub_24468FDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24468FE20()
{
  unint64_t result = qword_268E9F558;
  if (!qword_268E9F558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F558);
  }
  return result;
}

unint64_t sub_24468FE74()
{
  unint64_t result = qword_268E9F560;
  if (!qword_268E9F560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F560);
  }
  return result;
}

uint64_t sub_24468FEC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24468FF10()
{
  unint64_t result = qword_268E9F568;
  if (!qword_268E9F568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F568);
  }
  return result;
}

unint64_t sub_24468FF64()
{
  unint64_t result = qword_268E9F570;
  if (!qword_268E9F570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F570);
  }
  return result;
}

unint64_t sub_24468FFB8()
{
  unint64_t result = qword_268E9F5A0;
  if (!qword_268E9F5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F5A0);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonActionResponse(uint64_t a1)
{
  return sub_244621AC4(a1, (uint64_t *)&unk_268E9F5C0);
}

uint64_t sub_24469002C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void destroy for SecureButtonActionRequest(uint64_t *a1)
{
  sub_24461DF3C(*a1, a1[1]);
  uint64_t v2 = (void *)a1[2];
}

uint64_t *_s14MarketplaceKit25SecureButtonActionRequestVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  sub_24461DF2C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = (void *)a2[2];
  a1[2] = (uint64_t)v6;
  id v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for SecureButtonActionRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  sub_24461DF2C(*a2, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_24461DF3C(v6, v7);
  uint64_t v8 = (void *)a2[2];
  uint64_t v9 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  id v10 = v8;

  return a1;
}

uint64_t *assignWithTake for SecureButtonActionRequest(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_24461DF3C(v4, v5);
  uint64_t v6 = (void *)a1[2];
  a1[2] = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest()
{
  return &type metadata for SecureButtonActionRequest;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionRequest.Action(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_24461DF2C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for SecureButtonActionRequest.Action(uint64_t *a1)
{
  return sub_24461DF3C(*a1, a1[1]);
}

uint64_t *assignWithCopy for SecureButtonActionRequest.Action(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_24461DF2C(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_24461DF3C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SecureButtonActionRequest.Action(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24461DF3C(v3, v4);
  return a1;
}

uint64_t sub_24469033C(uint64_t a1)
{
  return (*(void *)(a1 + 8) >> 60) & 3;
}

uint64_t sub_244690348(uint64_t result)
{
  *(void *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_244690358(uint64_t result, char a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action()
{
  return &type metadata for SecureButtonActionRequest.Action;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionResponse(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for SecureButtonActionResponse.ResponseType(0) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_24469C8D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for SecureButtonActionResponse(uint64_t a1)
{
  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_24469C8D8();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v5 = sub_24469C8D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for SecureButtonActionResponse(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_244690798((uint64_t)a1);
    uint64_t v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v5 = sub_24469C8D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_244690798(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  else
  {
    uint64_t v5 = sub_24469C8D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SecureButtonActionResponse(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_244690798((uint64_t)a1);
    uint64_t v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v5 = sub_24469C8D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_244690A40);
}

uint64_t sub_244690A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_244690AC0);
}

uint64_t sub_244690AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_244690B30()
{
  uint64_t result = type metadata accessor for SecureButtonActionResponse.ResponseType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionResponse.ResponseType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_24469C8D8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for SecureButtonActionResponse.ResponseType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_24469C8D8();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_24469C8D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_244690798((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24469C8D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_24469C8D8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_244690798((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24469C8D8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2446911D8()
{
  uint64_t result = sub_24469C8D8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.CodingKeys()
{
  return &type metadata for SecureButtonActionResponse.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SecureButtonActionResponse.ResponseType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244691340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.CodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.NoneCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SecureButtonActionRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244691474);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.CodingKeys()
{
  return &type metadata for SecureButtonActionRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SecureButtonActionRequest.Action.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244691578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.CodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.DeleteCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.LaunchCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.PreflightCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys;
}

unsigned char *_s14MarketplaceKit26SecureButtonActionResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24469167CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.PreflightBatchCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys;
}

unint64_t sub_2446916B8()
{
  unint64_t result = qword_268E9F5E0;
  if (!qword_268E9F5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F5E0);
  }
  return result;
}

unint64_t sub_244691710()
{
  unint64_t result = qword_268E9F5E8;
  if (!qword_268E9F5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F5E8);
  }
  return result;
}

unint64_t sub_244691768()
{
  unint64_t result = qword_268E9F5F0;
  if (!qword_268E9F5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F5F0);
  }
  return result;
}

unint64_t sub_2446917C0()
{
  unint64_t result = qword_268E9F5F8;
  if (!qword_268E9F5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F5F8);
  }
  return result;
}

unint64_t sub_244691818()
{
  unint64_t result = qword_268E9F600;
  if (!qword_268E9F600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F600);
  }
  return result;
}

unint64_t sub_244691870()
{
  unint64_t result = qword_268E9F608;
  if (!qword_268E9F608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F608);
  }
  return result;
}

unint64_t sub_2446918C8()
{
  unint64_t result = qword_268E9F610;
  if (!qword_268E9F610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F610);
  }
  return result;
}

unint64_t sub_244691920()
{
  unint64_t result = qword_268E9F618;
  if (!qword_268E9F618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F618);
  }
  return result;
}

unint64_t sub_244691978()
{
  unint64_t result = qword_268E9F620;
  if (!qword_268E9F620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F620);
  }
  return result;
}

unint64_t sub_2446919D0()
{
  unint64_t result = qword_268E9F628;
  if (!qword_268E9F628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F628);
  }
  return result;
}

unint64_t sub_244691A28()
{
  unint64_t result = qword_268E9F630;
  if (!qword_268E9F630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F630);
  }
  return result;
}

unint64_t sub_244691A80()
{
  unint64_t result = qword_268E9F638;
  if (!qword_268E9F638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F638);
  }
  return result;
}

unint64_t sub_244691AD8()
{
  unint64_t result = qword_268E9F640;
  if (!qword_268E9F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F640);
  }
  return result;
}

unint64_t sub_244691B30()
{
  unint64_t result = qword_268E9F648;
  if (!qword_268E9F648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F648);
  }
  return result;
}

unint64_t sub_244691B88()
{
  unint64_t result = qword_268E9F650;
  if (!qword_268E9F650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F650);
  }
  return result;
}

unint64_t sub_244691BE0()
{
  unint64_t result = qword_268E9F658;
  if (!qword_268E9F658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F658);
  }
  return result;
}

unint64_t sub_244691C38()
{
  unint64_t result = qword_268E9F660;
  if (!qword_268E9F660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F660);
  }
  return result;
}

unint64_t sub_244691C90()
{
  unint64_t result = qword_268E9F668;
  if (!qword_268E9F668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F668);
  }
  return result;
}

unint64_t sub_244691CE8()
{
  unint64_t result = qword_268E9F670;
  if (!qword_268E9F670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F670);
  }
  return result;
}

unint64_t sub_244691D40()
{
  unint64_t result = qword_268E9F678;
  if (!qword_268E9F678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F678);
  }
  return result;
}

unint64_t sub_244691D98()
{
  unint64_t result = qword_268E9F680;
  if (!qword_268E9F680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F680);
  }
  return result;
}

unint64_t sub_244691DF0()
{
  unint64_t result = qword_268E9F688;
  if (!qword_268E9F688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F688);
  }
  return result;
}

unint64_t sub_244691E48()
{
  unint64_t result = qword_268E9F690;
  if (!qword_268E9F690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F690);
  }
  return result;
}

unint64_t sub_244691EA0()
{
  unint64_t result = qword_268E9F698;
  if (!qword_268E9F698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F698);
  }
  return result;
}

unint64_t sub_244691EF8()
{
  unint64_t result = qword_268E9F6A0;
  if (!qword_268E9F6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F6A0);
  }
  return result;
}

unint64_t sub_244691F50()
{
  unint64_t result = qword_268E9F6A8;
  if (!qword_268E9F6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F6A8);
  }
  return result;
}

unint64_t sub_244691FA8()
{
  unint64_t result = qword_268E9F6B0;
  if (!qword_268E9F6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F6B0);
  }
  return result;
}

unint64_t sub_244692000()
{
  unint64_t result = qword_268E9F6B8;
  if (!qword_268E9F6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F6B8);
  }
  return result;
}

unint64_t sub_244692058()
{
  unint64_t result = qword_268E9F6C0;
  if (!qword_268E9F6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F6C0);
  }
  return result;
}

unint64_t sub_2446920B0()
{
  unint64_t result = qword_268E9F6C8;
  if (!qword_268E9F6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F6C8);
  }
  return result;
}

unint64_t sub_244692108()
{
  unint64_t result = qword_268E9F6D0;
  if (!qword_268E9F6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F6D0);
  }
  return result;
}

unint64_t sub_244692160()
{
  unint64_t result = qword_268E9F6D8;
  if (!qword_268E9F6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268E9F6D8);
  }
  return result;
}

uint64_t sub_2446921B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574656C6564 && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x68636E75616CLL && a2 == 0xE600000000000000 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6867696C66657270 && a2 == 0xE900000000000074 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6867696C66657270 && a2 == 0xEE00686374614274)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_244692388(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002446AB710)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244692470(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496D7269666E6F63 && a2 == 0xEE006C6C6174736ELL || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002446AB730)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2446925DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24469D0D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24469D0C8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24466D028(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24469D068();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t static LicenseRepair.requestLicenseRepair(_:status:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D708);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24469D0D8();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  *(_DWORD *)(v12 + 48) = a3;
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  swift_bridgeObjectRetain();
  if (v13 == 1)
  {
    sub_24466D028((uint64_t)v9);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    sub_24469D0C8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(v12 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = sub_24469D068();
      uint64_t v15 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v15 = 0;
    }
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &unk_268E9F6E8;
  *(void *)(v17 + 24) = v12;
  if (v15 | v14)
  {
    v19[0] = 0;
    v19[1] = 0;
    void v19[2] = v14;
    v19[3] = v15;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_2446929CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(v6 + 44) = a6;
  *(void *)(v6 + 104) = a4;
  *(void *)(v6 + 112) = a5;
  uint64_t v7 = sub_24469CC68();
  *(void *)(v6 + 120) = v7;
  *(void *)(v6 + 128) = *(void *)(v7 - 8);
  *(void *)(v6 + 136) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244692A90, 0, 0);
}

uint64_t sub_244692A90()
{
  uint64_t v1 = *(unsigned int *)(v0 + 44);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = qword_26B0D10D0;
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 104);
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v1;
  *(unsigned char *)(v0 + 40) = 0;
  *(void *)(v0 + 72) = v0 + 16;
  sub_24461E55C(v4, v2, v1, 0);
  uint64_t v7 = (uint64_t (*)(void))&aPw0[*(int *)aPw0];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_244692BCC;
  return v7();
}

uint64_t sub_244692BCC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_244692D5C;
  }
  else
  {
    sub_24461E57C(*(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_244692CFC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_244692CFC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244692D5C()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void **)(v0 + 152);
  sub_24461E57C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();
  sub_24469CC08();
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_24469CC48();
  os_log_type_t v5 = sub_24469D198();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 152);
    uint64_t v21 = *(void *)(v0 + 128);
    unint64_t v7 = *(void *)(v0 + 112);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_244628BF0(v8, v7, &v24);
    sub_24469D218();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v10 = *(void *)(*(void *)(v0 + 56) - 8);
    swift_task_alloc();
    (*(void (**)(void))(v10 + 16))();
    uint64_t v11 = sub_24469CFB8();
    unint64_t v13 = v12;
    swift_task_dealloc();
    *(void *)(v0 + 96) = sub_244628BF0(v11, v13, &v24);
    sub_24469D218();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_244604000, v4, v5, "Error requesting license repair for app at path: %{public}s, %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245695AF0](v20, -1, -1);
    MEMORY[0x245695AF0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v14 = *(void **)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 136);
    uint64_t v17 = *(void *)(v0 + 120);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_2446930B4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 52, 7);
}

uint64_t sub_2446930F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  int v8 = *(_DWORD *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24460BAB0;
  return sub_2446929CC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_2446931BC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

ValueMetadata *type metadata accessor for LicenseRepair()
{
  return &type metadata for LicenseRepair;
}

__n128 PerformActionRequest.init(request:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2 = a1[1].n128_u8[0];
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  return result;
}

uint64_t PerformActionRequest.run()(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)v1;
  *(unsigned char *)(v2 + 33) = *(unsigned char *)(v1 + 16);
  return MEMORY[0x270FA2498](sub_24469324C, 0, 0);
}

uint64_t sub_24469324C()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 33);
  uint64_t v2 = *(void *)(v0 + 64);
  *(void *)(v0 + 16) = *(void *)(v0 + 56);
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v0 + 16;
  sub_24461E1C0();
  uint64_t v6 = (char *)&dword_268E9D9A0 + dword_268E9D9A0;
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  *id v3 = v0;
  v3[1] = sub_244693370;
  uint64_t v4 = *(void *)(v0 + 48);
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v6)(v4, v0 + 40, sub_244693FC0, 0);
}

uint64_t sub_244693370()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2446934B0, 0, 0);
  }
  else
  {
    sub_24461E1CC();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2446934B0()
{
  sub_24461E1CC();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_244693518()
{
  if (*v0) {
    return 0x63694C77656E6572;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_244693564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24469600C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24469358C(uint64_t a1)
{
  unint64_t v2 = sub_244695124();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446935C8(uint64_t a1)
{
  unint64_t v2 = sub_244695124();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244693604(uint64_t a1)
{
  unint64_t v2 = sub_2446951CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244693640(uint64_t a1)
{
  unint64_t v2 = sub_2446951CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24469367C(uint64_t a1)
{
  unint64_t v2 = sub_244695178();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446936B8(uint64_t a1)
{
  unint64_t v2 = sub_244695178();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformActionRequest.Request.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F708);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F710);
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F718);
  uint64_t v24 = *(void *)(v11 - 8);
  uint64_t v25 = v11;
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  v19[1] = v1[1];
  char v15 = *((unsigned char *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244695124();
  sub_24469D728();
  if (v15)
  {
    char v28 = 1;
    sub_244695178();
    uint64_t v16 = v25;
    sub_24469D4E8();
    uint64_t v26 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF68);
    sub_244635E58(&qword_268E9DF70);
    uint64_t v17 = v22;
    sub_24469D568();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v17);
  }
  else
  {
    char v27 = 0;
    sub_2446951CC();
    uint64_t v16 = v25;
    sub_24469D4E8();
    sub_24469D548();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v16);
}

uint64_t PerformActionRequest.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F738);
  uint64_t v35 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33, v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F740);
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F748);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_244695124();
  uint64_t v16 = v37;
  sub_24469D708();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  uint64_t v37 = v11;
  uint64_t v17 = sub_24469D4C8();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v22 = sub_24469D358();
    swift_allocError();
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
    void *v24 = &type metadata for PerformActionRequest.Request;
    sub_24469D418();
    sub_24469D348();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x263F8DCB0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  uint64_t v31 = v17;
  char v18 = *(unsigned char *)(v17 + 32);
  if (v18)
  {
    char v40 = 1;
    sub_244695178();
    sub_24469D408();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DF68);
    sub_244635E58(&qword_268E9DF80);
    uint64_t v19 = v33;
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v10);
    uint64_t v20 = 0;
    uint64_t v21 = v38;
  }
  else
  {
    char v39 = 0;
    sub_2446951CC();
    sub_24469D408();
    uint64_t v26 = sub_24469D478();
    uint64_t v27 = v37;
    uint64_t v21 = v26;
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v10);
    uint64_t v20 = v29;
  }
  uint64_t v30 = v32;
  *uint64_t v32 = v21;
  v30[1] = v20;
  *((unsigned char *)v30 + 16) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_244693F7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PerformActionRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_244693F94(void *a1)
{
  return PerformActionRequest.Request.encode(to:)(a1);
}

uint64_t PerformActionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return sub_24461E1C0();
}

void sub_244693FC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_24469C8A8();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_2446826EC;
  v10[3] = &block_descriptor_15;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performActionRequest_reply_, v8, v9);
  _Block_release(v9);
}

unint64_t PerformActionRequest.stringValue.getter()
{
  uint64_t v1 = *v0;
  if (v0[2])
  {
    sub_24469D318();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000014;
    int64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v11 = MEMORY[0x263F8EE78];
      sub_24461D760(0, v2, 0);
      uint64_t v3 = v1 + 32;
      do
      {
        v3 += 8;
        uint64_t v4 = sub_24469D5A8();
        uint64_t v6 = v5;
        unint64_t v8 = *(void *)(v11 + 16);
        unint64_t v7 = *(void *)(v11 + 24);
        if (v8 >= v7 >> 1) {
          sub_24461D760(v7 > 1, v8 + 1, 1);
        }
        *(void *)(v11 + 16) = v8 + 1;
        uint64_t v9 = v11 + 16 * v8;
        *(void *)(v9 + 32) = v4;
        *(void *)(v9 + 40) = v6;
        --v2;
      }
      while (v2);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B0D1080);
    sub_244677B40();
    sub_24469CEE8();
    swift_bridgeObjectRelease();
    sub_24469CFE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24469D318();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD00000000000001BLL;
    sub_24469CFE8();
  }
  return v12;
}

uint64_t sub_244694278(uint64_t a1)
{
  unint64_t v2 = sub_244695220();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446942B4(uint64_t a1)
{
  unint64_t v2 = sub_244695220();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformActionRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F750);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  HIDWORD(v11) = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244695220();
  sub_24469D728();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  char v14 = BYTE4(v11);
  sub_244695274();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t PerformActionRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F768);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244695220();
  sub_24469D708();
  if (!v2)
  {
    sub_2446952C8();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v10 = v13;
    *(_OWORD *)a2 = v12;
    *(unsigned char *)(a2 + 16) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2446945C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PerformActionRequest.init(from:)(a1, a2);
}

uint64_t sub_2446945D8(void *a1)
{
  return PerformActionRequest.encode(to:)(a1);
}

uint64_t static PerformActionResponse.Response.== infix(_:_:)()
{
  return 1;
}

uint64_t PerformActionResponse.Response.hash(into:)()
{
  return sub_24469D688();
}

uint64_t sub_244694620(uint64_t a1)
{
  unint64_t v2 = sub_24469531C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24469465C(uint64_t a1)
{
  unint64_t v2 = sub_24469531C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_244694698(uint64_t a1)
{
  unint64_t v2 = sub_244695370();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446946D4(uint64_t a1)
{
  unint64_t v2 = sub_244695370();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformActionResponse.Response.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F778);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F780);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24469531C();
  sub_24469D728();
  sub_244695370();
  sub_24469D4E8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t PerformActionResponse.Response.hashValue.getter()
{
  return sub_24469D6C8();
}

uint64_t PerformActionResponse.Response.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F798);
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F7A0);
  uint64_t v7 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19, v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24469531C();
  sub_24469D708();
  if (!v1)
  {
    uint64_t v11 = v18;
    uint64_t v17 = v7;
    if (*(void *)(sub_24469D4C8() + 16) == 1)
    {
      sub_244695370();
      sub_24469D408();
      uint64_t v12 = v17;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v3);
    }
    else
    {
      uint64_t v13 = sub_24469D358();
      swift_allocError();
      uint64_t v15 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9DC40);
      *uint64_t v15 = &type metadata for PerformActionResponse.Response;
      sub_24469D418();
      sub_24469D348();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *MEMORY[0x263F8DCB0], v13);
      swift_willThrow();
      uint64_t v12 = v17;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_244694C0C(void *a1)
{
  return PerformActionResponse.Response.init(from:)(a1);
}

uint64_t sub_244694C24(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F778);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F780);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24469531C();
  sub_24469D728();
  sub_244695370();
  sub_24469D4E8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_244694DFC(uint64_t a1)
{
  unint64_t v2 = sub_2446953C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244694E38(uint64_t a1)
{
  unint64_t v2 = sub_2446953C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformActionResponse.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F7A8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446953C4();
  sub_24469D728();
  sub_244695418();
  sub_24469D568();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t PerformActionResponse.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F7C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2446953C4();
  sub_24469D708();
  if (!v1)
  {
    sub_24469546C();
    sub_24469D498();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2446950F4(void *a1)
{
  return PerformActionResponse.init(from:)(a1);
}

uint64_t sub_24469510C(void *a1)
{
  return PerformActionResponse.encode(to:)(a1);
}

unint64_t sub_244695124()
{
  unint64_t result = qword_268E9F720;
  if (!qword_268E9F720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F720);
  }
  return result;
}

unint64_t sub_244695178()
{
  unint64_t result = qword_268E9F728;
  if (!qword_268E9F728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F728);
  }
  return result;
}

unint64_t sub_2446951CC()
{
  unint64_t result = qword_268E9F730;
  if (!qword_268E9F730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F730);
  }
  return result;
}

unint64_t sub_244695220()
{
  unint64_t result = qword_268E9F758;
  if (!qword_268E9F758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F758);
  }
  return result;
}

unint64_t sub_244695274()
{
  unint64_t result = qword_268E9F760;
  if (!qword_268E9F760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F760);
  }
  return result;
}

unint64_t sub_2446952C8()
{
  unint64_t result = qword_268E9F770;
  if (!qword_268E9F770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F770);
  }
  return result;
}

unint64_t sub_24469531C()
{
  unint64_t result = qword_268E9F788;
  if (!qword_268E9F788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F788);
  }
  return result;
}

unint64_t sub_244695370()
{
  unint64_t result = qword_268E9F790;
  if (!qword_268E9F790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F790);
  }
  return result;
}

unint64_t sub_2446953C4()
{
  unint64_t result = qword_268E9F7B0;
  if (!qword_268E9F7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7B0);
  }
  return result;
}

unint64_t sub_244695418()
{
  unint64_t result = qword_268E9F7B8;
  if (!qword_268E9F7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7B8);
  }
  return result;
}

unint64_t sub_24469546C()
{
  unint64_t result = qword_268E9F7C8;
  if (!qword_268E9F7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7C8);
  }
  return result;
}

unint64_t sub_2446954C4()
{
  unint64_t result = qword_268E9F7D0;
  if (!qword_268E9F7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest()
{
  return &type metadata for PerformActionRequest;
}

uint64_t destroy for PerformActionRequest.Request()
{
  return sub_24461E1CC();
}

uint64_t _s14MarketplaceKit20PerformActionRequestV7RequestOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24461E1C0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s14MarketplaceKit20PerformActionRequestV7RequestOwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24461E1C0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24461E1CC();
  return a1;
}

uint64_t _s14MarketplaceKit20PerformActionRequestV7RequestOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24461E1CC();
  return a1;
}

uint64_t _s14MarketplaceKit20PerformActionRequestV7RequestOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit20PerformActionRequestV7RequestOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2446956C4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request()
{
  return &type metadata for PerformActionRequest.Request;
}

ValueMetadata *type metadata accessor for PerformActionResponse()
{
  return &type metadata for PerformActionResponse;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response()
{
  return &type metadata for PerformActionResponse.Response;
}

ValueMetadata *type metadata accessor for PerformActionResponse.CodingKeys()
{
  return &type metadata for PerformActionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response.CodingKeys()
{
  return &type metadata for PerformActionResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response.IgnoredCodingKeys()
{
  return &type metadata for PerformActionResponse.Response.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionRequest.CodingKeys()
{
  return &type metadata for PerformActionRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PerformActionRequest.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244695810);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.CodingKeys()
{
  return &type metadata for PerformActionRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys()
{
  return &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys;
}

unsigned char *_s14MarketplaceKit21PerformActionResponseV8ResponseOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2446958F4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.RenewLicensesCodingKeys()
{
  return &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys;
}

unint64_t sub_244695930()
{
  unint64_t result = qword_268E9F7D8;
  if (!qword_268E9F7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7D8);
  }
  return result;
}

unint64_t sub_244695988()
{
  unint64_t result = qword_268E9F7E0;
  if (!qword_268E9F7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7E0);
  }
  return result;
}

unint64_t sub_2446959E0()
{
  unint64_t result = qword_268E9F7E8;
  if (!qword_268E9F7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7E8);
  }
  return result;
}

unint64_t sub_244695A38()
{
  unint64_t result = qword_268E9F7F0;
  if (!qword_268E9F7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7F0);
  }
  return result;
}

unint64_t sub_244695A90()
{
  unint64_t result = qword_268E9F7F8;
  if (!qword_268E9F7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F7F8);
  }
  return result;
}

unint64_t sub_244695AE8()
{
  unint64_t result = qword_268E9F800;
  if (!qword_268E9F800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F800);
  }
  return result;
}

unint64_t sub_244695B40()
{
  unint64_t result = qword_268E9F808;
  if (!qword_268E9F808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F808);
  }
  return result;
}

unint64_t sub_244695B98()
{
  unint64_t result = qword_268E9F810;
  if (!qword_268E9F810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F810);
  }
  return result;
}

unint64_t sub_244695BF0()
{
  unint64_t result = qword_268E9F818;
  if (!qword_268E9F818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F818);
  }
  return result;
}

unint64_t sub_244695C48()
{
  unint64_t result = qword_268E9F820;
  if (!qword_268E9F820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F820);
  }
  return result;
}

unint64_t sub_244695CA0()
{
  unint64_t result = qword_268E9F828;
  if (!qword_268E9F828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F828);
  }
  return result;
}

unint64_t sub_244695CF8()
{
  unint64_t result = qword_268E9F830;
  if (!qword_268E9F830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F830);
  }
  return result;
}

unint64_t sub_244695D50()
{
  unint64_t result = qword_268E9F838;
  if (!qword_268E9F838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F838);
  }
  return result;
}

unint64_t sub_244695DA8()
{
  unint64_t result = qword_268E9F840;
  if (!qword_268E9F840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F840);
  }
  return result;
}

unint64_t sub_244695E00()
{
  unint64_t result = qword_268E9F848;
  if (!qword_268E9F848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F848);
  }
  return result;
}

unint64_t sub_244695E58()
{
  unint64_t result = qword_268E9F850;
  if (!qword_268E9F850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F850);
  }
  return result;
}

unint64_t sub_244695EB0()
{
  unint64_t result = qword_268E9F858;
  if (!qword_268E9F858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F858);
  }
  return result;
}

unint64_t sub_244695F08()
{
  unint64_t result = qword_268E9F860;
  if (!qword_268E9F860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F860);
  }
  return result;
}

unint64_t sub_244695F60()
{
  unint64_t result = qword_268E9F868;
  if (!qword_268E9F868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F868);
  }
  return result;
}

unint64_t sub_244695FB8()
{
  unint64_t result = qword_268E9F870;
  if (!qword_268E9F870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F870);
  }
  return result;
}

uint64_t sub_24469600C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000002446AB770 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63694C77656E6572 && a2 == 0xED00007365736E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t OAuthAuthorizationContext.logKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OAuthAuthorizationContext.requestURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  uint64_t v4 = sub_24469C888();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for OAuthAuthorizationContext()
{
  uint64_t result = qword_268E9F890;
  if (!qword_268E9F890) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t OAuthAuthorizationContext.init(logKey:requestURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  char v5 = (char *)a4 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);

  return v7(v5, a3, v6);
}

uint64_t sub_244696298()
{
  if (*v0) {
    return 0x5574736575716572;
  }
  else {
    return 0x79654B676F6CLL;
  }
}

uint64_t sub_2446962D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_244696D6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2446962FC(uint64_t a1)
{
  unint64_t v2 = sub_244696518();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_244696338(uint64_t a1)
{
  unint64_t v2 = sub_244696518();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OAuthAuthorizationContext.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F878);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244696518();
  sub_24469D728();
  v9[15] = 0;
  sub_24469D548();
  if (!v1)
  {
    type metadata accessor for OAuthAuthorizationContext();
    v9[14] = 1;
    sub_24469C888();
    sub_2446089F8(&qword_268E9D5A0);
    sub_24469D568();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_244696518()
{
  unint64_t result = qword_268E9F880;
  if (!qword_268E9F880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F880);
  }
  return result;
}

uint64_t OAuthAuthorizationContext.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = sub_24469C888();
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F888);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OAuthAuthorizationContext();
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244696518();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = v10;
  uint64_t v15 = v22;
  uint64_t v14 = v23;
  char v26 = 0;
  uint64_t v16 = v24;
  *uint64_t v13 = sub_24469D478();
  v13[1] = v17;
  char v25 = 1;
  sub_2446089F8(&qword_268E9D5B0);
  sub_24469D498();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v16);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v13 + *(int *)(v19 + 20), v6, v14);
  sub_244696858((uint64_t)v13, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_2446968BC((uint64_t)v13);
}

uint64_t sub_244696858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2446968BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244696918@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OAuthAuthorizationContext.init(from:)(a1, a2);
}

uint64_t sub_244696930(void *a1)
{
  return OAuthAuthorizationContext.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for OAuthAuthorizationContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24469695C);
}

uint64_t sub_24469695C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24469C888();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizationContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_244696A20);
}

uint64_t sub_244696A20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24469C888();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_244696AC8()
{
  uint64_t result = sub_24469C888();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OAuthAuthorizationContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244696C2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OAuthAuthorizationContext.CodingKeys()
{
  return &type metadata for OAuthAuthorizationContext.CodingKeys;
}

unint64_t sub_244696C68()
{
  unint64_t result = qword_268E9F8A0;
  if (!qword_268E9F8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F8A0);
  }
  return result;
}

unint64_t sub_244696CC0()
{
  unint64_t result = qword_268E9F8A8;
  if (!qword_268E9F8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F8A8);
  }
  return result;
}

unint64_t sub_244696D18()
{
  unint64_t result = qword_268E9F8B0;
  if (!qword_268E9F8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F8B0);
  }
  return result;
}

uint64_t sub_244696D6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5574736575716572 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_244696E64()
{
  sub_24469CAF8();
  uint64_t v0 = sub_24469CAE8();
  type metadata accessor for ServiceConnection();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v0;
  qword_26B0D41B0 = result;
  return result;
}

uint64_t sub_244696EB0()
{
  swift_release();

  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for ServiceConnection()
{
  return self;
}

uint64_t static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = sub_24469CC68();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for LaunchAngelXPCRequest(0);
  v2[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_244696FFC, 0, 0);
}

uint64_t sub_244696FFC()
{
  int v1 = MKBGetDeviceLockState();
  if (v1 != 3 && v1)
  {
    sub_2446977AC();
    swift_allocError();
    *uint64_t v14 = 1;
LABEL_12:
    swift_willThrow();
    goto LABEL_19;
  }
  uint64_t v2 = sub_244698984();
  *(void *)(v0 + 176) = v2;
  if (!v2)
  {
LABEL_9:
    sub_24469CC08();
    uint64_t v15 = sub_24469CC48();
    os_log_type_t v16 = sub_24469D198();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_244604000, v15, v16, "Unexpected connection type", v17, 2u);
      MEMORY[0x245695AF0](v17, -1, -1);
    }
    uint64_t v19 = *(void *)(v0 + 144);
    uint64_t v18 = *(void *)(v0 + 152);
    uint64_t v20 = *(void *)(v0 + 136);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    sub_2446977AC();
    swift_allocError();
    *uint64_t v21 = 0;
    goto LABEL_12;
  }
  uint64_t v3 = (void *)v2;
  *(void *)(v0 + 80) = &unk_26F947150;
  uint64_t v4 = swift_dynamicCastObjCProtocolConditional();
  if (!v4)
  {

    goto LABEL_9;
  }
  uint64_t v5 = (void *)v4;
  id v6 = v3;
  uint64_t v7 = (void *)sub_24469CF78();
  uint64_t v8 = (void *)sub_24469CF78();
  id v9 = objc_msgSend(self, sel_attributeWithDomain_name_, v7, v8);
  *(void *)(v0 + 184) = v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F928);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2446A97C0;
  *(void *)(v10 + 32) = v9;
  sub_24469D038();
  sub_244698B2C();
  id v11 = v9;
  uint64_t v12 = (void *)sub_24469D008();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v5, sel_remoteTargetWithLaunchingAssertionAttributes_, v12);

  if (v13)
  {
    sub_24469D238();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  sub_244698B6C(v0 + 16, v0 + 48);
  if (*(void *)(v0 + 72))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F938);
    if (swift_dynamicCast())
    {
      uint64_t v23 = *(void *)(v0 + 160);
      uint64_t v22 = *(void *)(v0 + 168);
      uint64_t v24 = *(void *)(v0 + 128);
      uint64_t v25 = *(void *)(v0 + 88);
      *(void *)(v0 + 192) = v25;
      sub_244698BD4(v24, v22);
      *(void *)(v0 + 96) = v22;
      *(void *)(v0 + 104) = v23;
      *(void *)(v0 + 112) = sub_244698F2C(&qword_268E9F940, (void (*)(uint64_t))type metadata accessor for LaunchAngelXPCRequest);
      uint64_t v26 = sub_24469CAC8();
      *(void *)(v0 + 200) = v26;
      *(void *)(v0 + 208) = v27;
      uint64_t v31 = v26;
      uint64_t v32 = v27;
      sub_2446362E8(*(void *)(v0 + 168));
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v33;
      v33[2] = v25;
      v33[3] = v31;
      uint64_t v33[4] = v32;
      uint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v34;
      *uint64_t v34 = v0;
      v34[1] = sub_244697528;
      uint64_t v35 = *(void *)(v0 + 120);
      return MEMORY[0x270FA2360](v35, 0, 0, 0xD00000000000001CLL, 0x80000002446AB800, sub_244698C38, v33, &type metadata for LaunchAngelXPCResponse);
    }
  }
  else
  {
    sub_244646194(v0 + 48);
  }
  sub_2446977AC();
  swift_allocError();
  *uint64_t v28 = 0;
  swift_willThrow();

  objc_msgSend(v6, sel_invalidate);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_244697528()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2446976F8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_244697644;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244697644()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[22];
  sub_24460B97C(v0[25], v0[26]);
  swift_unknownObjectRelease();

  objc_msgSend(v2, sel_invalidate);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_2446976F8()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[23];
  sub_24460B97C(v0[25], v0[26]);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  objc_msgSend(v1, sel_invalidate);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

unint64_t sub_2446977AC()
{
  unint64_t result = qword_268E9F8C0;
  if (!qword_268E9F8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F8C0);
  }
  return result;
}

BOOL static LaunchAngelConnectionUtilities.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LaunchAngelConnectionUtilities.Error.hash(into:)()
{
  return sub_24469D688();
}

uint64_t LaunchAngelConnectionUtilities.Error.hashValue.getter()
{
  return sub_24469D6C8();
}

void sub_24469788C(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F950);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4, v7);
  uint64_t v8 = (void *)sub_24469C8A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_244698E44;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244698474;
  aBlock[3] = &block_descriptor_16;
  id v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_handleXPCRequest_reply_, v8, v11);
  _Block_release(v11);
}

uint64_t sub_244697A54(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v53 = a4;
  unint64_t v50 = a2;
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_24469CA78();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_24469CC68();
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v52, v11);
  uint64_t v14 = (uint8_t *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v15);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F958);
  uint64_t v20 = MEMORY[0x270FA5388](v18, v19);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v23);
  uint64_t v26 = (char *)&v46 - v24;
  if (a3)
  {
    id v27 = a3;
    sub_24469CC08();
    id v28 = v27;
    uint64_t v29 = sub_24469CC48();
    os_log_type_t v30 = sub_24469D198();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      unint64_t v50 = swift_slowAlloc();
      unint64_t v55 = v50;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v49 = v31 + 4;
      id v32 = v28;
      id v33 = objc_msgSend(v32, sel_description);
      uint64_t v34 = sub_24469CF98();
      unint64_t v36 = v35;

      uint64_t v54 = sub_244628BF0(v34, v36, (uint64_t *)&v55);
      sub_24469D218();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244604000, v29, v30, "Error in reply: %s", v31, 0xCu);
      unint64_t v37 = v50;
      swift_arrayDestroy();
      MEMORY[0x245695AF0](v37, -1, -1);
      MEMORY[0x245695AF0](v31, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
    unint64_t v55 = (unint64_t)v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F950);
    return sub_24469D078();
  }
  else
  {
    uint64_t v48 = v25;
    uint64_t v46 = v10;
    uint64_t v49 = v14;
    uint64_t v47 = v7;
    uint64_t v61 = a1;
    unint64_t v62 = v50;
    unint64_t v63 = &v61;
    uint64_t v64 = (char *)&v46 - v24;
    sub_24460BBA4(a1, v50);
    uint64_t v59 = v18;
    uint64_t v60 = MEMORY[0x263F06F78];
    unint64_t v58 = sub_24460BBFC();
    unint64_t v57 = sub_244698ED0();
    sub_24469CAB8();
    sub_24460B97C(v61, v62);
    uint64_t v39 = v48;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v22, v26, v18);
    int v40 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v22, v18);
    if (v40 == *MEMORY[0x263F10760])
    {
      (*(void (**)(char *, uint64_t))(v39 + 96))(v22, v18);
      char v41 = v22[8];
      unint64_t v55 = *(void *)v22;
      char v56 = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F950);
      sub_24469D088();
    }
    else
    {
      if (v40 != *MEMORY[0x263F10758])
      {
        uint64_t result = sub_24469D398();
        __break(1u);
        return result;
      }
      uint64_t v39 = v48;
      (*(void (**)(char *, uint64_t))(v48 + 96))(v22, v18);
      uint64_t v42 = v47;
      uint64_t v43 = v46;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v22, v6);
      sub_244698F2C(&qword_268E9D7A8, MEMORY[0x263F10748]);
      uint64_t v44 = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v45, v43, v6);
      unint64_t v55 = v44;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F950);
      sub_24469D078();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v6);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v26, v18);
  }
}

uint64_t sub_244698474(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a2;
  uint64_t v7 = sub_24469C8B8();
  unint64_t v9 = v8;

  id v10 = a3;
  v5(v7, v9, a3);

  sub_24460B97C(v7, v9);

  return swift_release();
}

void sub_24469851C(void *a1)
{
  id v2 = objc_msgSend(self, sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v2);

  uint64_t v3 = (void *)sub_24469CF78();
  id v4 = objc_msgSend(self, sel_interfaceWithIdentifier_, v3);

  uint64_t v14 = sub_2446987B4;
  uint64_t v15 = 0;
  uint64_t v10 = MEMORY[0x263EF8330];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_2446987C0;
  uint64_t v13 = &block_descriptor_12;
  uint64_t v5 = _Block_copy(&v10);
  id v6 = &unk_26F946B68;
  swift_release();
  id v7 = objc_msgSend(self, sel_protocolForProtocol_interpreter_, v6, v5);

  _Block_release(v5);
  objc_msgSend(v4, sel_setServer_, v7);

  objc_msgSend(a1, sel_setInterface_, v4);
  uint64_t v14 = sub_244698814;
  uint64_t v15 = 0;
  uint64_t v10 = MEMORY[0x263EF8330];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_244698828;
  uint64_t v13 = &block_descriptor_15;
  unint64_t v8 = _Block_copy(&v10);
  objc_msgSend(a1, sel_setInterruptionHandler_, v8);
  _Block_release(v8);
  uint64_t v14 = sub_244698890;
  uint64_t v15 = 0;
  uint64_t v10 = MEMORY[0x263EF8330];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_244698828;
  uint64_t v13 = &block_descriptor_18;
  unint64_t v9 = _Block_copy(&v10);
  objc_msgSend(a1, sel_setInvalidationHandler_, v9);
  _Block_release(v9);
}

id sub_2446987B4(void *a1)
{
  return objc_msgSend(a1, sel_copyAsOnewayVoid);
}

id sub_2446987C0(uint64_t a1, void *a2)
{
  id v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  id v4 = (void *)v2();

  return v4;
}

uint64_t sub_244698814(uint64_t a1)
{
  return sub_2446988A4(a1, 0x80000002446AB9C0);
}

void sub_244698828(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_244698890(uint64_t a1)
{
  return sub_2446988A4(a1, 0x80000002446AB9A0);
}

uint64_t sub_2446988A4(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F968);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2446A04B0;
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  *(void *)(v3 + 32) = 0xD000000000000016;
  *(void *)(v3 + 40) = a2;
  sub_24469D658();

  return swift_bridgeObjectRelease();
}

uint64_t sub_244698930(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

uint64_t sub_244698984()
{
  uint64_t v0 = (void *)sub_24469CF78();
  uint64_t v1 = (void *)sub_24469CF78();
  id v2 = objc_msgSend(self, sel_endpointForSystemMachName_service_instance_, v0, v1, 0);

  if (!v2) {
    return 0;
  }
  id v3 = objc_msgSend(self, sel_connectionWithEndpoint_, v2);
  if (!v3)
  {
LABEL_5:

    return (uint64_t)v3;
  }
  v6[4] = sub_24469892C;
  v6[5] = 0;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  v6[2] = sub_244698930;
  v6[3] = &block_descriptor_9;
  id v4 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v3, sel_configureConnection_, v4);
  _Block_release(v4);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    objc_msgSend(v3, sel_activate);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

unint64_t sub_244698B2C()
{
  unint64_t result = qword_268E9F930;
  if (!qword_268E9F930)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268E9F930);
  }
  return result;
}

uint64_t sub_244698B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9E400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244698BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LaunchAngelXPCRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_244698C38(uint64_t a1)
{
  sub_24469788C(a1, *(void **)(v1 + 16));
}

unint64_t sub_244698C48()
{
  unint64_t result = qword_268E9F948;
  if (!qword_268E9F948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F948);
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelConnectionUtilities()
{
  return &type metadata for LaunchAngelConnectionUtilities;
}

unsigned char *storeEnumTagSinglePayload for LaunchAngelConnectionUtilities.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x244698D78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelConnectionUtilities.Error()
{
  return &type metadata for LaunchAngelConnectionUtilities.Error;
}

uint64_t sub_244698DB0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F950);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_244698E44(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268E9F950) - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_244697A54(a1, a2, a3, v8);
}

unint64_t sub_244698ED0()
{
  unint64_t result = qword_268E9F960;
  if (!qword_268E9F960)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268E9F958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F960);
  }
  return result;
}

uint64_t sub_244698F2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

const char *FeatureFlag.domain.getter()
{
  if (*v0 == 2) {
    return "InstallCoordination";
  }
  else {
    return "MarketplaceKit";
  }
}

const char *FeatureFlag.feature.getter()
{
  uint64_t v1 = "NewInstallSheetFlow";
  if (*v0 != 1) {
    uint64_t v1 = "IX_BACKGROUND_UPDATE_SCHEDULING";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "WebDistribution";
  }
}

BOOL static FeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FeatureFlag.hash(into:)()
{
  return sub_24469D688();
}

uint64_t FeatureFlag.hashValue.getter()
{
  return sub_24469D6C8();
}

const char *sub_244699094()
{
  if (*v0 == 2) {
    return "InstallCoordination";
  }
  else {
    return "MarketplaceKit";
  }
}

const char *sub_2446990C4()
{
  uint64_t v1 = "NewInstallSheetFlow";
  if (*v0 != 1) {
    uint64_t v1 = "IX_BACKGROUND_UPDATE_SCHEDULING";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "WebDistribution";
  }
}

Swift::Bool __swiftcall isFeatureEnabled(_:)(MarketplaceKit::FeatureFlag a1)
{
  char v1 = *(unsigned char *)a1;
  uint64_t v5 = &type metadata for FeatureFlag;
  unint64_t v6 = sub_244699164();
  v4[0] = v1;
  char v2 = sub_24469C998();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_244699164()
{
  unint64_t result = qword_268E9F970;
  if (!qword_268E9F970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F970);
  }
  return result;
}

unint64_t sub_2446991BC()
{
  unint64_t result = qword_268E9F978;
  if (!qword_268E9F978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F978);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeatureFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2446992DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

MarketplaceKit::AppDistributorResult __swiftcall AppDistributorResult.init(distributorID:requestingBundleID:)(Swift::String distributorID, Swift::String requestingBundleID)
{
  *char v2 = distributorID;
  v2[1] = requestingBundleID;
  result.field2446B34EC = requestingBundleID;
  result.field2446B34E0 = distributorID;
  return result;
}

uint64_t sub_244699320()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x7562697274736964;
  }
}

uint64_t sub_24469936C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24469A474(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244699394(uint64_t a1)
{
  unint64_t v2 = sub_244699584();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2446993D0(uint64_t a1)
{
  unint64_t v2 = sub_244699584();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppDistributorResult.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F980);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  _OWORD v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244699584();
  sub_24469D728();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_24469D548();
  if (!v9)
  {
    char v12 = 1;
    sub_24469D548();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_244699584()
{
  unint64_t result = qword_268E9F988;
  if (!qword_268E9F988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F988);
  }
  return result;
}

uint64_t AppDistributorResult.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F990);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244699584();
  sub_24469D708();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_24469D478();
  uint64_t v12 = v11;
  char v20 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24469D478();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v19 = v13;
  v16(v9, v5);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2446997DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppDistributorResult.init(from:)(a1, a2);
}

uint64_t sub_2446997F4(void *a1)
{
  return AppDistributorResult.encode(to:)(a1);
}

uint64_t static AppDistributor.current.getter(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return MEMORY[0x270FA2498](sub_24469982C, 0, 0);
}

uint64_t sub_24469982C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 2;
  id v3 = objc_msgSend(self, sel_processInfo);
  id v4 = objc_msgSend(v3, sel_environment);

  uint64_t v5 = sub_24469CED8();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_24467F0B4(0xD00000000000001BLL, 0x80000002446ABA50), (v7 & 1) != 0))
  {
    uint64_t v8 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v6);
    uint64_t v10 = *v8;
    uint64_t v9 = v8[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  v1[6] = v10;
  v1[8] = v1 + 6;
  v1[7] = v9;
  uint64_t v13 = (char *)&dword_268E9D908 + dword_268E9D908;
  uint64_t v11 = (void *)swift_task_alloc();
  v1[10] = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_244699A04;
  return ((uint64_t (*)(void *, void *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v13)(v2, v1 + 8, sub_244699BF4, 0);
}

uint64_t sub_244699A04()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_244699B90;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_244699B20;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244699B20()
{
  uint64_t v6 = v0;
  uint64_t v1 = *(uint64_t **)(v0 + 72);
  long long v2 = *(_OWORD *)(v0 + 32);
  v5[0] = *(_OWORD *)(v0 + 16);
  v5[1] = v2;
  AppDistributor.init(result:)((uint64_t *)v5, v1);
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_244699B90()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_244699BF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t *AppDistributor.init(result:)@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = result[1];
  if (v3)
  {
    uint64_t v4 = *result;
    uint64_t v6 = result[2];
    uint64_t v5 = result[3];
    if (*result == 0xD000000000000012)
    {
      uint64_t v7 = 0x80000002446A9B50;
      if (v3 == 0x80000002446A9B50)
      {
        uint64_t v8 = 0xD000000000000012;
LABEL_8:
        unint64_t result = (uint64_t *)sub_24469A020(v8, v7);
        uint64_t v4 = 0;
        uint64_t v3 = 0;
        goto LABEL_9;
      }
    }
    if (sub_24469D5B8())
    {
      uint64_t v8 = v4;
      uint64_t v7 = v3;
      goto LABEL_8;
    }
    if (v4 == 0xD000000000000014)
    {
      uint64_t v9 = 0x80000002446ABA70;
      if (v3 == 0x80000002446ABA70)
      {
        uint64_t v10 = 0xD000000000000014;
LABEL_15:
        unint64_t result = (uint64_t *)sub_24469A020(v10, v9);
        uint64_t v4 = 0;
        uint64_t v3 = 1;
        goto LABEL_9;
      }
    }
    if (sub_24469D5B8())
    {
      uint64_t v10 = v4;
      uint64_t v9 = v3;
      goto LABEL_15;
    }
    if (v4 == v6 && v3 == v5)
    {
      uint64_t v11 = v4;
      uint64_t v12 = v3;
    }
    else
    {
      if ((sub_24469D5B8() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        unint64_t result = (uint64_t *)sub_24469A020(v4, v3);
        goto LABEL_9;
      }
      uint64_t v11 = v4;
      uint64_t v12 = v3;
    }
    unint64_t result = (uint64_t *)sub_24469A020(v11, v12);
    uint64_t v4 = 0;
    uint64_t v3 = 2;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 3;
  }
LABEL_9:
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t static AppDistributor.setDistributorIDOverridableForStoreSignedApps(_:)(char a1)
{
  *(unsigned char *)(v1 + 41) = a1;
  return MEMORY[0x270FA2498](sub_244699DD4, 0, 0);
}

uint64_t sub_244699DD4()
{
  if (qword_26B0D10D0 != -1) {
    swift_once();
  }
  *(unsigned char *)(v0 + 40) = *(unsigned char *)(v0 + 41);
  *(void *)(v0 + 16) = v0 + 40;
  uint64_t v3 = (char *)&dword_268E9D900 + dword_268E9D900;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_244699EE0;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void))v3)(v0 + 16, sub_24469A00C, 0);
}

uint64_t sub_244699EE0()
{
  *(void *)(*(void *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0) {
    long long v2 = sub_244699FF4;
  }
  else {
    long long v2 = sub_2446350AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_244699FF4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_24469A00C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_24469A020(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for AppDistributorResult()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AppDistributorResult(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppDistributorResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AppDistributorResult(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppDistributorResult()
{
  return &type metadata for AppDistributorResult;
}

uint64_t getEnumTagSinglePayload for AppDistributor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppDistributor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDistributor()
{
  return &type metadata for AppDistributor;
}

unsigned char *storeEnumTagSinglePayload for AppDistributorResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24469A334);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDistributorResult.CodingKeys()
{
  return &type metadata for AppDistributorResult.CodingKeys;
}

unint64_t sub_24469A370()
{
  unint64_t result = qword_268E9F9A8;
  if (!qword_268E9F9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F9A8);
  }
  return result;
}

unint64_t sub_24469A3C8()
{
  unint64_t result = qword_268E9F9B0;
  if (!qword_268E9F9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F9B0);
  }
  return result;
}

unint64_t sub_24469A420()
{
  unint64_t result = qword_268E9F9B8;
  if (!qword_268E9F9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268E9F9B8);
  }
  return result;
}

uint64_t sub_24469A474(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7562697274736964 && a2 == 0xED00004449726F74;
  if (v2 || (sub_24469D5B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002446ABA90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24469D5B8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t *sub_24469A590(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24469C888();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9((char *)a1, (char *)a2, v7);
    char v41 = v9;
    v9((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    uint64_t v10 = a3[6];
    uint64_t v11 = a3[7];
    uint64_t v12 = (uint64_t *)((char *)a1 + v10);
    uint64_t v13 = (uint64_t *)((char *)a2 + v10);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = (uint64_t *)((char *)a1 + v11);
    uint64_t v16 = (uint64_t *)((char *)a2 + v11);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    char v20 = (uint64_t *)((char *)a1 + v18);
    char v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *char v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = (uint64_t *)((char *)a1 + v19);
    uint64_t v24 = (uint64_t *)((char *)a2 + v19);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = a3[10];
    __dst = (char *)a1 + v26;
    id v27 = (char *)a2 + v26;
    id v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v27, 1, v7))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
      uint64_t v31 = v8;
      id v32 = v41;
    }
    else
    {
      uint64_t v34 = v27;
      id v32 = v41;
      v41(__dst, v34, v7);
      uint64_t v31 = v8;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
    }
    uint64_t v35 = a3[11];
    unint64_t v36 = (char *)a1 + v35;
    unint64_t v37 = (char *)a2 + v35;
    if (v29(v37, 1, v7))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      v32(v36, v37, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v36, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_24469A86C(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24469C888();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(a1, v4);
  v10(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v7(v6, 1, v4)) {
    v10(v6, v4);
  }
  uint64_t v8 = a1 + a2[11];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
  }
  return result;
}

char *sub_24469AA14(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v39 = v8;
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = &a1[v17];
  char v20 = &a2[v17];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = &a1[v18];
  uint64_t v23 = &a2[v18];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = a3[10];
  __dst = &a1[v25];
  uint64_t v26 = &a2[v25];
  id v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27(v26, 1, v6))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(__dst, v26, *(void *)(*(void *)(v29 - 8) + 64));
    uint64_t v30 = v7;
    uint64_t v31 = v39;
  }
  else
  {
    id v32 = v26;
    uint64_t v31 = v39;
    v39(__dst, v32, v6);
    uint64_t v30 = v7;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
  }
  uint64_t v33 = a3[11];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v28(v35, 1, v6))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    v31(v34, v35, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v6);
  }
  return a1;
}

char *sub_24469ACA0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v35 = v8;
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = &a1[v18];
  char v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v25 = v24(&a1[v21], 1, v6);
  int v26 = v24(v23, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v35(v22, v23, v6);
LABEL_7:
  uint64_t v28 = a3[11];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  int v31 = v24(&a1[v28], 1, v6);
  int v32 = v24(v30, 1, v6);
  if (!v31)
  {
    if (!v32)
    {
      v35(v29, v30, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  return a1;
}

char *sub_24469B028(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v11 = a3[10];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  char v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v20(&a2[v11], 1, v6))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v8(v12, v13, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (v20(v17, 1, v6))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v8(v16, v17, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  return a1;
}

char *sub_24469B260(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v43 = v8;
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (uint64_t *)&a2[v9];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = (uint64_t *)&a2[v14];
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *(void *)uint64_t v15 = v18;
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  char v20 = &a1[v19];
  uint64_t v21 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *(void *)char v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  int v25 = &a1[v24];
  int v26 = (uint64_t *)&a2[v24];
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *(void *)int v25 = v28;
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[10];
  uint64_t v30 = &a1[v29];
  int v31 = &a2[v29];
  int v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v33 = v32(&a1[v29], 1, v6);
  int v34 = v32(v31, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v6);
LABEL_6:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  v43(v30, v31, v6);
LABEL_7:
  uint64_t v36 = a3[11];
  unint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  int v39 = v32(&a1[v36], 1, v6);
  int v40 = v32(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      v43(v37, v38, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
  return a1;
}

uint64_t sub_24469B5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24469B5BC);
}

uint64_t sub_24469B5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24469C888();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_24469B6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24469B704);
}

uint64_t sub_24469B704(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24469C888();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for LinkMetadata()
{
  uint64_t result = qword_268E9F9C0;
  if (!qword_268E9F9C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24469B884()
{
  sub_24469C888();
  if (v0 <= 0x3F)
  {
    sub_24460AFF0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24469B964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v142 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9D588);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8, v6);
  os_log_type_t v132 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v131 = (char *)&v123 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F9D0);
  uint64_t v13 = MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v133 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13, v15);
  uint64_t v127 = (uint64_t)&v123 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16, v18);
  uint64_t v128 = (uint64_t)&v123 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19, v21);
  uint64_t v130 = (char *)&v123 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22, v24);
  uint64_t v135 = (uint64_t)&v123 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25, v27);
  uint64_t v134 = (char *)&v123 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28, v30);
  uint64_t v137 = (char *)&v123 - v32;
  MEMORY[0x270FA5388](v31, v33);
  uint64_t v136 = (char *)&v123 - v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268E9F9D8);
  MEMORY[0x270FA5388](v35 - 8, v36);
  uint64_t v38 = (char *)&v123 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24469C798();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v39, v41);
  uint64_t v44 = (char *)&v123 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42, v45);
  uint64_t v47 = (char *)&v123 - v46;
  uint64_t v48 = sub_24469C888();
  uint64_t v140 = *(void *)(v48 - 8);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 16);
  v49(a3, a2, v48);
  uint64_t v50 = type metadata accessor for LinkMetadata();
  uint64_t v143 = a3;
  uint64_t v144 = (int *)v50;
  uint64_t v51 = a3 + *(int *)(v50 + 20);
  uint64_t v139 = v48;
  v49(v51, v142, v48);
  uint64_t v52 = v39;
  uint64_t v138 = a2;
  sub_24469C768();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
  {
    sub_24460BD08((uint64_t)v38, &qword_268E9F9D8);
LABEL_9:
    uint64_t v74 = v142;
    uint64_t v73 = v143;
    uint64_t v75 = v139;
    uint64_t v76 = v140;
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
    v77(v138, v139);
    v77(v74, v75);
    uint64_t v78 = v144;
    uint64_t v79 = (void *)(v73 + v144[6]);
    *uint64_t v79 = 0;
    v79[1] = 0xE000000000000000;
    uint64_t v80 = (void *)(v73 + v78[7]);
    *uint64_t v80 = 0;
    v80[1] = 0;
    uint64_t v81 = (void *)(v73 + v78[8]);
    *uint64_t v81 = 0;
    v81[1] = 0;
    uint64_t v82 = (void *)(v73 + v78[9]);
    *uint64_t v82 = 0;
    v82[1] = 0;
    uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
    v83(v73 + v78[10], 1, 1, v75);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v83)(v73 + v78[11], 1, 1, v75);
  }
  uint64_t v53 = (uint64_t)v136;
  uint64_t v54 = (uint64_t)v137;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v47, v38, v52);
  unint64_t v55 = v47;
  uint64_t v141 = sub_24469C758();
  if (!v141)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v52);
    goto LABEL_9;
  }
  uint64_t v56 = sub_24469C778();
  uint64_t v58 = v57;
  uint64_t v59 = v44;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v44, v55, v52);
  if (!v58)
  {
    uint64_t v56 = sub_24469C788();
    uint64_t v58 = v60;
  }
  uint64_t v61 = (char *)(v40 + 8);
  unint64_t v62 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v125 = v52;
  v62(v59, v52);
  unint64_t v63 = (uint64_t *)(v143 + v144[6]);
  *unint64_t v63 = v56;
  v63[1] = v58;
  uint64_t v64 = v53;
  sub_24469C538(v141, 0x6E656B6F74, 0xE500000000000000, v53);
  uint64_t v65 = sub_24469C748();
  uint64_t v66 = *(void *)(v65 - 8);
  char v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  uint64_t v68 = v53;
  uint64_t v126 = v66 + 48;
  char v69 = v67;
  int v70 = v67(v68, 1, v65);
  uint64_t v123 = v55;
  uint64_t v129 = v66;
  if (v70 == 1)
  {
    sub_24460BD08(v64, &qword_268E9F9D0);
    uint64_t v71 = 0;
    uint64_t v72 = 0;
  }
  else
  {
    uint64_t v85 = v64;
    uint64_t v71 = sub_24469C738();
    uint64_t v72 = v86;
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v85, v65);
  }
  uint64_t v136 = v61;
  long long v87 = (uint64_t *)(v143 + v144[7]);
  *long long v87 = v71;
  v87[1] = v72;
  uint64_t v88 = v141;
  sub_24469C538(v141, 0xD000000000000018, 0x80000002446A9DD0, v54);
  int v89 = v69(v54, 1, v65);
  uint64_t v90 = (uint64_t)v134;
  uint64_t v124 = v62;
  if (v89 == 1)
  {
    sub_24460BD08(v54, &qword_268E9F9D0);
    goto LABEL_14;
  }
  uint64_t v91 = sub_24469C738();
  uint64_t v93 = v92;
  (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v54, v65);
  if (!v93)
  {
LABEL_14:
    sub_24469C538(v88, 0x44664F666F6F7270, 0xEF64616F6C6E776FLL, v90);
    if (v69(v90, 1, v65) == 1)
    {
      sub_24460BD08(v90, &qword_268E9F9D0);
      swift_bridgeObjectRelease();
      uint64_t v91 = 0;
      uint64_t v93 = 0;
    }
    else
    {
      uint64_t v91 = sub_24469C738();
      uint64_t v93 = v94;
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v90, v65);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v95 = v142;
  uint64_t v96 = (uint64_t)v130;
  uint64_t v97 = (uint64_t *)(v143 + v144[8]);
  *uint64_t v97 = v91;
  v97[1] = v93;
  uint64_t v98 = v135;
  sub_24469C538(v88, 0x746E756F636361, 0xE700000000000000, v135);
  if (v69(v98, 1, v65) == 1)
  {
    sub_24460BD08(v98, &qword_268E9F9D0);
    uint64_t v99 = 0;
    uint64_t v100 = 0;
  }
  else
  {
    uint64_t v99 = sub_24469C738();
    uint64_t v100 = v101;
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v98, v65);
  }
  uint64_t v102 = (uint64_t *)(v143 + v144[9]);
  uint64_t *v102 = v99;
  v102[1] = v100;
  sub_24469C538(v141, 0xD00000000000001ELL, 0x80000002446A9DB0, v96);
  if (v69(v96, 1, v65) == 1)
  {
    sub_24460BD08(v96, &qword_268E9F9D0);
  }
  else
  {
    sub_24469C738();
    uint64_t v104 = v103;
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v96, v65);
    if (v104)
    {
      uint64_t v105 = v129;
      uint64_t v106 = v95;
      goto LABEL_31;
    }
  }
  uint64_t v107 = v128;
  sub_24469C538(v141, 7365729, 0xE300000000000000, v128);
  if (v69(v107, 1, v65) == 1)
  {
    sub_24460BD08(v107, &qword_268E9F9D0);
    uint64_t v106 = v95;
  }
  else
  {
    sub_24469C738();
    uint64_t v109 = v108;
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v107, v65);
    uint64_t v106 = v95;
    if (v109)
    {
      swift_bridgeObjectRelease();
      uint64_t v105 = v129;
      goto LABEL_31;
    }
  }
  uint64_t v110 = v127;
  sub_24469C538(v141, 7365733, 0xE300000000000000, v127);
  if (v69(v110, 1, v65) != 1)
  {
    sub_24469C738();
    uint64_t v112 = v111;
    uint64_t v105 = v129;
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v110, v65);
    swift_bridgeObjectRelease_n();
    if (!v112) {
      goto LABEL_32;
    }
LABEL_31:
    swift_bridgeObjectRetain();
    id v113 = v131;
    sub_24469C878();
    uint64_t v114 = (uint64_t)v113;
    swift_bridgeObjectRelease_n();
    goto LABEL_33;
  }
  sub_24460BD08(v110, &qword_268E9F9D0);
  swift_bridgeObjectRelease_n();
  uint64_t v105 = v129;
LABEL_32:
  uint64_t v114 = (uint64_t)v131;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v131, 1, 1, v139);
LABEL_33:
  uint64_t v115 = (uint64_t)v132;
  uint64_t v116 = (uint64_t)v133;
  sub_24463EBBC(v114, v143 + v144[10]);
  sub_24469C538(v141, 0x6572616853707061, 0xEB000000004C5255, v116);
  if (v69(v116, 1, v65) == 1)
  {
    sub_24460BD08(v116, &qword_268E9F9D0);
    swift_bridgeObjectRelease();
LABEL_37:
    uint64_t v120 = v139;
    uint64_t v119 = v140;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56))(v115, 1, 1, v139);
    goto LABEL_38;
  }
  sub_24469C738();
  uint64_t v118 = v117;
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v116, v65);
  swift_bridgeObjectRelease();
  if (!v118) {
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  sub_24469C878();
  swift_bridgeObjectRelease();
  uint64_t v120 = v139;
  uint64_t v119 = v140;
LABEL_38:
  uint64_t v121 = v123;
  uint64_t v122 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
  v122(v138, v120);
  v122(v106, v120);
  swift_bridgeObjectRelease();
  v124(v121, v125);
  return sub_24463EBBC(v115, v143 + v144[11]);
}

uint64_t sub_24469C538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v8 = sub_24469C748();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void *)(v9 + 72);
    uint64_t v11 = a1
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + v10 * (v5 - 1);
    uint64_t v12 = -v10;
    while (sub_24469C728() != a2 || v13 != a3)
    {
      char v14 = sub_24469D5B8();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_9;
      }
      v11 += v12;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, v11, v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a4, 0, 1, v8);
  }
  else
  {
LABEL_7:
    uint64_t v15 = sub_24469C748();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24469C6E8()
{
  return MEMORY[0x270EEDC48]();
}

uint64_t sub_24469C6F8()
{
  return MEMORY[0x270EEDCB8]();
}

uint64_t sub_24469C708()
{
  return MEMORY[0x270EEDF50]();
}

uint64_t sub_24469C718()
{
  return MEMORY[0x270EEE068]();
}

uint64_t sub_24469C728()
{
  return MEMORY[0x270EEE3F0]();
}

uint64_t sub_24469C738()
{
  return MEMORY[0x270EEE408]();
}

uint64_t sub_24469C748()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_24469C758()
{
  return MEMORY[0x270EEE4B0]();
}

uint64_t sub_24469C768()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_24469C778()
{
  return MEMORY[0x270EEE530]();
}

uint64_t sub_24469C788()
{
  return MEMORY[0x270EEE558]();
}

uint64_t sub_24469C798()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_24469C7A8()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_24469C7B8()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_24469C7C8()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_24469C7D8()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_24469C7E8()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_24469C7F8()
{
  return MEMORY[0x270EEF238]();
}

uint64_t sub_24469C808()
{
  return MEMORY[0x270EEF250]();
}

uint64_t sub_24469C818()
{
  return MEMORY[0x270EEF268]();
}

uint64_t sub_24469C828()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_24469C838()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24469C848()
{
  return MEMORY[0x270EEF870]();
}

uint64_t sub_24469C858()
{
  return MEMORY[0x270EEF8C0]();
}

uint64_t sub_24469C868()
{
  return MEMORY[0x270EEF8D8]();
}

uint64_t sub_24469C878()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_24469C888()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24469C898()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_24469C8A8()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24469C8B8()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24469C8C8()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24469C8D8()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24469C8E8()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_24469C8F8()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24469C908()
{
  return MEMORY[0x270EF14C0]();
}

uint64_t sub_24469C918()
{
  return MEMORY[0x270EF1550]();
}

uint64_t sub_24469C928()
{
  return MEMORY[0x270FA11F8]();
}

uint64_t sub_24469C938()
{
  return MEMORY[0x270FA1208]();
}

uint64_t sub_24469C948()
{
  return MEMORY[0x270FA1220]();
}

uint64_t sub_24469C958()
{
  return MEMORY[0x270FA1228]();
}

uint64_t sub_24469C968()
{
  return MEMORY[0x270FA1238]();
}

uint64_t sub_24469C978()
{
  return MEMORY[0x270FA1250]();
}

uint64_t sub_24469C988()
{
  return MEMORY[0x270EF17B0]();
}

uint64_t sub_24469C998()
{
  return MEMORY[0x270F28690]();
}

uint64_t sub_24469C9A8()
{
  return MEMORY[0x270F51250]();
}

uint64_t sub_24469C9B8()
{
  return MEMORY[0x270F51258]();
}

uint64_t sub_24469C9C8()
{
  return MEMORY[0x270F51260]();
}

uint64_t sub_24469C9D8()
{
  return MEMORY[0x270F51268]();
}

uint64_t sub_24469C9E8()
{
  return MEMORY[0x270F51270]();
}

uint64_t sub_24469C9F8()
{
  return MEMORY[0x270F51278]();
}

uint64_t sub_24469CA08()
{
  return MEMORY[0x270F51280]();
}

uint64_t sub_24469CA18()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_24469CA28()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_24469CA38()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_24469CA48()
{
  return MEMORY[0x270EF5668]();
}

uint64_t sub_24469CA58()
{
  return MEMORY[0x270EF5670]();
}

uint64_t sub_24469CA68()
{
  return MEMORY[0x270EF5680]();
}

uint64_t sub_24469CA78()
{
  return MEMORY[0x270EF5718]();
}

uint64_t sub_24469CA88()
{
  return MEMORY[0x270EF5720]();
}

uint64_t sub_24469CA98()
{
  return MEMORY[0x270EF5728]();
}

uint64_t sub_24469CAA8()
{
  return MEMORY[0x270EF5730]();
}

uint64_t sub_24469CAB8()
{
  return MEMORY[0x270EF5738]();
}

uint64_t sub_24469CAC8()
{
  return MEMORY[0x270EF5740]();
}

uint64_t sub_24469CAD8()
{
  return MEMORY[0x270EF5748]();
}

uint64_t sub_24469CAE8()
{
  return MEMORY[0x270EF5750]();
}

uint64_t sub_24469CAF8()
{
  return MEMORY[0x270EF5758]();
}

uint64_t sub_24469CB08()
{
  return MEMORY[0x270EF5760]();
}

uint64_t sub_24469CB18()
{
  return MEMORY[0x270EF5768]();
}

uint64_t sub_24469CB28()
{
  return MEMORY[0x270EF5770]();
}

uint64_t sub_24469CB38()
{
  return MEMORY[0x270EF5778]();
}

uint64_t sub_24469CB48()
{
  return MEMORY[0x270EF5780]();
}

uint64_t sub_24469CB58()
{
  return MEMORY[0x270EF5788]();
}

uint64_t sub_24469CB68()
{
  return MEMORY[0x270EF5790]();
}

uint64_t sub_24469CB78()
{
  return MEMORY[0x270EF5798]();
}

uint64_t sub_24469CB88()
{
  return MEMORY[0x270EF57A0]();
}

uint64_t sub_24469CB98()
{
  return MEMORY[0x270EF57A8]();
}

uint64_t sub_24469CBA8()
{
  return MEMORY[0x270EF57B0]();
}

uint64_t sub_24469CBB8()
{
  return MEMORY[0x270EF57B8]();
}

uint64_t sub_24469CBC8()
{
  return MEMORY[0x270EF57C0]();
}

uint64_t sub_24469CBD8()
{
  return MEMORY[0x270EF57C8]();
}

uint64_t sub_24469CBE8()
{
  return MEMORY[0x270EF57D0]();
}

uint64_t sub_24469CBF8()
{
  return MEMORY[0x270EF57D8]();
}

uint64_t sub_24469CC08()
{
  return MEMORY[0x270EF57E0]();
}

uint64_t sub_24469CC18()
{
  return MEMORY[0x270EF57E8]();
}

uint64_t sub_24469CC28()
{
  return MEMORY[0x270EF57F8]();
}

uint64_t sub_24469CC38()
{
  return MEMORY[0x270EF5800]();
}

uint64_t sub_24469CC48()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24469CC58()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24469CC68()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24469CC78()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_24469CC88()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_24469CC98()
{
  return MEMORY[0x270EE3DD0]();
}

uint64_t sub_24469CCA8()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_24469CCB8()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_24469CCC8()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_24469CCD8()
{
  return MEMORY[0x270EFEC70]();
}

uint64_t sub_24469CCE8()
{
  return MEMORY[0x270EFEC88]();
}

uint64_t sub_24469CCF8()
{
  return MEMORY[0x270EFF108]();
}

uint64_t sub_24469CD08()
{
  return MEMORY[0x270EFF940]();
}

uint64_t sub_24469CD18()
{
  return MEMORY[0x270F00E28]();
}

uint64_t sub_24469CD28()
{
  return MEMORY[0x270F00E30]();
}

uint64_t sub_24469CD38()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_24469CD48()
{
  return MEMORY[0x270F02DC8]();
}

uint64_t sub_24469CD58()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_24469CD68()
{
  return MEMORY[0x270F5D070]();
}

uint64_t sub_24469CD78()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_24469CD88()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_24469CD98()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_24469CDA8()
{
  return MEMORY[0x270F03FB0]();
}

uint64_t sub_24469CDB8()
{
  return MEMORY[0x270F04630]();
}

uint64_t sub_24469CDC8()
{
  return MEMORY[0x270F04748]();
}

uint64_t sub_24469CDD8()
{
  return MEMORY[0x270F04818]();
}

uint64_t sub_24469CDE8()
{
  return MEMORY[0x270F04820]();
}

uint64_t sub_24469CDF8()
{
  return MEMORY[0x270F04830]();
}

uint64_t sub_24469CE08()
{
  return MEMORY[0x270F04848]();
}

uint64_t sub_24469CE18()
{
  return MEMORY[0x270F048D0]();
}

uint64_t sub_24469CE28()
{
  return MEMORY[0x270F04B90]();
}

uint64_t sub_24469CE38()
{
  return MEMORY[0x270F04C90]();
}

uint64_t sub_24469CE48()
{
  return MEMORY[0x270F04D70]();
}

uint64_t sub_24469CE58()
{
  return MEMORY[0x270F04E98]();
}

uint64_t sub_24469CE68()
{
  return MEMORY[0x270F05140]();
}

uint64_t sub_24469CE78()
{
  return MEMORY[0x270FA0990]();
}

uint64_t sub_24469CE88()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24469CE98()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_24469CEA8()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24469CEB8()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24469CEC8()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_24469CED8()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_24469CEE8()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24469CEF8()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24469CF08()
{
  return MEMORY[0x270EF18D0]();
}

uint64_t sub_24469CF18()
{
  return MEMORY[0x270EF1908]();
}

uint64_t sub_24469CF28()
{
  return MEMORY[0x270EF1918]();
}

uint64_t sub_24469CF38()
{
  return MEMORY[0x270EF1928]();
}

uint64_t sub_24469CF48()
{
  return MEMORY[0x270EF1938]();
}

uint64_t sub_24469CF58()
{
  return MEMORY[0x270EF1950]();
}

uint64_t sub_24469CF68()
{
  return MEMORY[0x270EF1958]();
}

uint64_t sub_24469CF78()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24469CF88()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24469CF98()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24469CFA8()
{
  return MEMORY[0x270EF1B10]();
}

uint64_t sub_24469CFB8()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24469CFC8()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_24469CFD8()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24469CFE8()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24469CFF8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24469D008()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24469D018()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24469D028()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24469D038()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24469D048()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24469D058()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24469D068()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24469D078()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_24469D088()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_24469D098()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_24469D0A8()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_24469D0B8()
{
  return MEMORY[0x270FA1EC0]();
}

uint64_t sub_24469D0C8()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_24469D0D8()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_24469D0E8()
{
  return MEMORY[0x270FA1F18]();
}

uint64_t sub_24469D0F8()
{
  return MEMORY[0x270FA1F30]();
}

uint64_t sub_24469D108()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_24469D128()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_24469D148()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_24469D158()
{
  return MEMORY[0x270F9E0E8]();
}

uint64_t sub_24469D168()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_24469D178()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_24469D188()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24469D198()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24469D1A8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24469D1B8()
{
  return MEMORY[0x270EF1F60]();
}

uint64_t sub_24469D1C8()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_24469D1D8()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24469D1E8()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_24469D1F8()
{
  return MEMORY[0x270EF20F8]();
}

uint64_t sub_24469D208()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24469D218()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24469D228()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24469D238()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_24469D248()
{
  return MEMORY[0x270F9E708]();
}

uint64_t sub_24469D258()
{
  return MEMORY[0x270F9E718]();
}

uint64_t sub_24469D268()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24469D278()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_24469D288()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_24469D298()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_24469D2A8()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_24469D2B8()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_24469D2C8()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_24469D2D8()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24469D2E8()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24469D2F8()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_24469D308()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24469D318()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24469D328()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24469D338()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24469D348()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24469D358()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24469D368()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24469D378()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24469D388()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24469D398()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24469D3A8()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24469D3B8()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24469D3C8()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24469D3D8()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24469D3E8()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24469D3F8()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24469D408()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24469D418()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24469D428()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24469D438()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_24469D448()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_24469D458()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24469D468()
{
  return MEMORY[0x270F9F2E0]();
}

uint64_t sub_24469D478()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24469D488()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24469D498()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24469D4A8()
{
  return MEMORY[0x270F9F330]();
}

uint64_t sub_24469D4B8()
{
  return MEMORY[0x270F9F358]();
}

uint64_t sub_24469D4C8()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24469D4D8()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_24469D4E8()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24469D4F8()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24469D508()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_24469D518()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_24469D528()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_24469D538()
{
  return MEMORY[0x270F9F418]();
}

uint64_t sub_24469D548()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24469D558()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24469D568()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24469D578()
{
  return MEMORY[0x270F9F470]();
}

uint64_t sub_24469D588()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_24469D598()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_24469D5A8()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24469D5B8()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24469D5C8()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_24469D5D8()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_24469D5F8()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24469D608()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24469D618()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24469D628()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24469D638()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24469D648()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24469D658()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_24469D668()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_24469D678()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24469D688()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24469D698()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24469D6A8()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_24469D6B8()
{
  return MEMORY[0x270F9FC88]();
}

uint64_t sub_24469D6C8()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24469D6D8()
{
  return MEMORY[0x270F9FC98]();
}

uint64_t sub_24469D6E8()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_24469D6F8()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_24469D708()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24469D718()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_24469D728()
{
  return MEMORY[0x270F9FD98]();
}

CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x270EE5B80](red, green, blue, alpha);
}

CGColorRef CGColorCreateSRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x270EE5B88](red, green, blue, alpha);
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x270F4AE40]();
}

uint64_t UISGetColorSRGBComponents()
{
  return MEMORY[0x270F83048]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x270EDA738](*(void *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x270EDA770](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x270FA0298]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x270FA2478]();
}

uint64_t swift_task_reportUnexpectedExecutor()
{
  return MEMORY[0x270FA2490]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}